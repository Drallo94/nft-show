{"version":3,"sources":["scripts.js","src/scripts/modules/Animate.js","node_modules/@splidejs/splide/dist/js/splide.esm.js","src/scripts/modules/Carousel.js","src/scripts/modules/ToggleNav.js","src/scripts/modules/Lightbox.js","node_modules/simplelightbox/dist/simple-lightbox.modules.js","node_modules/sticky-sidebar-v2/src/sticky-sidebar.js","src/scripts/modules/Sticky.js","node_modules/just-extend/index.esm.js","node_modules/dropzone/dist/dropzone.mjs","src/scripts/modules/Dropzone.js","node_modules/flatpickr/dist/esm/types/options.js","node_modules/flatpickr/dist/esm/l10n/default.js","node_modules/flatpickr/dist/esm/utils/index.js","node_modules/flatpickr/dist/esm/utils/dom.js","node_modules/flatpickr/dist/esm/utils/formatting.js","node_modules/flatpickr/dist/esm/utils/dates.js","node_modules/flatpickr/dist/esm/utils/polyfills.js","node_modules/flatpickr/dist/esm/index.js","src/scripts/modules/Flatpicker.js","node_modules/custom-event-polyfill/custom-event-polyfill.js","node_modules/custom-select/build/index.js","src/scripts/modules/CustomSelect.js","src/scripts/modules/ScrollClass.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","ISMOBILE","window","matchMedia","matches","VISIBLE_CLASS","Animate","_this","this","entries","map","entry","section","delay","getDelay","sectionBodyClass","getAttribute","isIntersecting","classList","add","bodyClass","setTimeout","includes","parseInt","htmlclass","type","document","body","remove","sections","querySelectorAll","THRESHOLD","LOAD_THRESHOLD","forEach","el","BoundingClientRect","getBoundingClientRect","height","innerHeight","loadObserver","IntersectionObserver","observeCallback","threshold","observe","disconnect","observerThreshold","PROJECT_CODE","DATA_ATTRIBUTE","STATES","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","empty","array","isObject","subject","isNull","isArray","Array","isString","isUndefined","isHTMLElement","HTMLElement","toArray","values","iteratee","indexOf","push","items","arrayProto","prototype","slice","arrayLike","start","end","call","toggleClass","elm","classes","name","addClass","split","append","parent","children","appendChild","bind","before","nodes","ref","node","parentNode","insertBefore","selector","filter","child","firstElementChild","forOwn","object","right","keys","reverse","assign","arguments","source","merge","removeAttribute","attrs","attr","setAttribute","value2","String","create","tag","createElement","style","prop","getComputedStyle","style2","display","display2","hasClass","className","contains","rect","removeChild","parseHtml","html","DOMParser","parseFromString","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","removeClass","unit","assert","condition","message","Error","nextTick","callback","noop","raf","func","requestAnimationFrame","min","max","floor","ceil","abs","Math","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","x","y","sign","format","string","replacements","replacement","replace","pad","ids","EVENT_MOUNTED","EVENT_READY","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_REPOSITIONED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","event","listeners","unbind","targets","events","forEachEvent","event2","listener","removeEventListener","destroy","data","offBy","on","priority","off","emit","options","addEventListener","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","id","rate","paused","count","update","elapsed","pause","cancel","cancelAnimationFrame","resume","rewind","isPaused","Throttle","duration","apply","TTB","ORIENTATION_MAP","marginRight","autoWidth","fixedWidth","paddingLeft","paddingRight","width","left","X","Y","ArrowLeft","ArrowRight","CLASS_SLIDE","CLASS_CLONE","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","STATUS_CLASSES","CLASSES","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","ROLE","ARIA_CONTROLS","ARIA_CURRENT","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","ARIA_ORIENTATION","ALL_ATTRIBUTES","SLIDE","LOOP","FADE","Slide$1","index","slideIndex","destroyEvents","Components","root","isNavigation","updateOnMove","resolve","Direction","styles","isClone","container","focusableNodes","destroyed","onMove","dest","updateActivity","currIndex","isActive","updateVisibility","is","trackRect","Elements","track","slideRect","isVisible","active","visible","ariaHidden","slideFocus","mount","idx","label","i18n","slideX","controls","splides","splide","join","init","useContainer","isWithin","from","distance","diff","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","IE_ARROW_KEYS","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","ComponentConstructors","freeze","__proto__","Options","Components2","throttledObserve","initialOptions","points","currPoint","completely","item","predicate","item2","point","newOptions","breakpoints","state","onMatch","setup","JSON","parse","isMin","mediaQuery","sort","n","m","axisOnly","direction","orient","elements","slides","slider","list","autoplay","find","bar","play","collect","prefix","identify","getClasses","refresh","drag","DEFAULT_EVENT_PRIORITY","Slides","Slides2","register","forEach$1","Slide2","get","excludeClones","matcher","Slide1","getIn","Controller","toIndex","hasFocus","perPage","getAt","images","img","observeImages","getLength","isEnough","Layout","vertical","rootRect","cssPadding","resize","newRect","cssHeight","cssTrackHeight","gap","cssSlideSize","fixedHeight","autoHeight","padding","heightRatio","totalSize","withoutGap","Slide","getGap","parseFloat","listSize","slideSize","sliderSize","getPadding","Clones","clones","cloneCount","computeCloneCount","isHead","cloneNode","cloneDeep","generate","clones2","fixedSize","div","measure","flickMaxPages","Move","waiting","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","transform","getPosition","exceededMin","exceededLimit","exceededMax","shift","loop","backwards","excess","getLimit","size","trimming","focus","offset","trimSpace","trim","getEnd","move","set","looping","waitForTransition","Transition","go","minDistance","Infinity","isLoop","isSlide","slideCount","perMove","prevIndex","scroll","destination","useIndex","snap","toDest","setIndex","getNext","getAdjacent","getPrev","computeDestIndex","epsilon","incremental","toPage","closest","control","allowSameIndex","indicator","match","useScroll","speed","getIndex","Arrows","created","wrapper","createArrow","listen","prev2","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","Autoplay","hovered","focused","initButton","forPause","button","resetProgress","manual","autoToggle","pauseOnHover","pauseOnFocus","Cover","cover","src","toggle","scrollCallback","suppressConstraint","friction","clear","onScrolled","t","easingFunc","pow","easing","Drag","listenerOptions","passive","capture","basePosition","baseEvent","prevBaseEvent","lastEvent","isFree","dragging","clickPrevented","hasExceeded","disable","onPointerDown","noDrag","isTouch","isTouchEvent","onPointerMove","onPointerUp","save","cancelable","coordOf","constrain","expired","timeOf","exceeded","dragMinThreshold","thresholds","mouse","touch","isSliderDirection","velocity","base","diffCoord","diffTime","isFlick","computeVelocity","flickPower","computeDestination","onClick","orthogonal","touches","timeStamp","TouchEvent","isDragging","Keyboard","keyboard","onKeydown","normalizedKey","LazyLoad","isSequential","lazyLoad","preloadPages","_Slide","load","_img","error","_spinner","loadNext","onLoad","srcset","parentElement","Pagination","li","class","text","pageX","createPagination","preventScroll","curr","Sync","navigate","processed","concat","instances","index2","sync","Wheel","onWheel","deltaY","wheel","DEFAULTS","Fade","done","endCallback","transition","rewindSpeed","getSpeed","_Splide","[object Object]","handlers","namespace","eventHandlers","handler","_key","_namespace","eventNS","fragments","_event","_callback","_priority","handler1","handler2","EventBus","initialState","states","State","_options","_Extensions","defaults","Extensions","_Components","_Transition","Component","component","Splide","500","767","1024","1400","ToggleNav","toggleNav","protoProps","staticProps","commonjsGlobal","globalThis","global","self","unwrapExports","__esModule","hasOwnProperty","createCommonjsModule","fn","module","exports","_typeof","Symbol","iterator","constructor","_createForOfIteratorHelper","o","allowArrayLike","it","minLen","_arrayLikeToArray","toString","test","_unsupportedIterableToArray","F","s","_e","f","err","normalCompletion","didErr","step","_e2","arr","len","arr2","SimpleLightbox","sourceAttr","overlay","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","rel","docClose","swipeTolerance","widthRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","scrollZoom","scrollZoomFactor","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","relatedElements","transitionPrefix","calculateTransitionPrefix","transitionCapable","initialLocationHash","hash","getRelated","imgArr","element","createDomNodes","domNodes","closeButton","navigation","eventNamespace","isValidLink","currentTarget","isAnimating","initialImageIndex","openImage","isOpen","throttle","controlCoordinates","currentImage","loadImage","addEvents","supportsPassive","opts","dataset","opacityTarget","innerHTML","counter","caption","image","inThrottle","RegExp","documentElement","scrollbarWidth","fixedElements","fullWindowWidth","innerWidth","documentElementRect","clientWidth","isAppleDevice","scrollDiv","offsetWidth","originalPaddingRight","actualPadding","calculatedPadding","_this2","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","fadeOut","toggleScrollbar","minMax","location","substring","_this3","nextImage","Image","prevImage","loadedImages","_this4","slideDirection","newIndex","show","adjustImage","preload","_this5","tmpImage","windowWidth","windowHeight","scale","translateX","translateY","zoomPanElement","dirIsDefined","alert","updateURL","captionContainer","captionText","imageWidth","imageHeight","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","hide","setCaption","_this6","hashchangeHandler","getElementsByTagName","tagName","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","pageY","opacity","setZoomData","clientX","clientY","sqrt","isTouchDevice","possibleDir","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","newHash","newURL","href","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","clearTimeout","historyUpdateTimeout","updateHash","_this7","pos","_this8","targetURL","_this9","wrap","_step","_iterator","namespaces","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_step5","_this10","_iterator5","isFadeIn","fade","currentOpacity","_step6","_iterator6","_step7","_iterator7","_step8","_this11","_iterator8","_step10","_iterator10","_step9","_iterator9","_step11","_iterator11","initialDisplay","_step12","_iterator12","input","_step13","_iterator13","fullyNamespacedEvents","_step14","_iterator14","_step15","_iterator15","_step16","_iterator16","elem","jQuery","_default","StickySidebar","EVENT_KEY","topSpacing","bottomSpacing","containerSelector","scrollContainer","innerWrapperSelector","stickyClass","minWidth","sidebar","extend","sidebarInner","affixedType","support","transform3d","_initialized","_reStyle","_breakpoint","dimensions","maxTranslateY","lastTopSpacing","lastBottomSpacing","sidebarHeight","sidebarWidth","containerTop","viewportHeight","viewportTop","lastViewportTop","method","initialize","_setSupportFeatures","firstChild","containers","_widthBreakpoint","calcDimensions","stickyPosition","bindEvents","eventTarget","ResizeObserver","resizeObserver","handleEvent","updateSticky","dims","offsetRelative","clientHeight","containerBottom","_calcDimensionsWithScroll","sidebarLeft","scrollTop","viewportLeft","scrollLeft","viewportBottom","furthest","colliderTop","affixType","_getAffixTypeScrollingUp","_getAffixTypeScrollingDown","round","sidebarBottom","colliderBottom","isSidebarFitsViewport","inner","outer","bottom","_getTranslate","force","getAffixType","_getStyle","affixEvent","toLowerCase","eventTrigger","affixedEvent","_running","eventType","observeScrollDir","supportTransform","z","minHeight","styleReset","resizeSensor","ResizeSensor","detach","result","property","upper","charAt","toUpperCase","eventName","CustomEvent","createEvent","initCustomEvent","results","isNaN","offsetParent","objectExtend","args","deep","isUnextendable","extenders","extender","isCloneable","val","$parcel$interopDefault","a","default","$4040acfd8584338d$export$2e2bcd8739ae039","_callbacks","callbacks","makeEvent","params","bubbles","evt","splice","$4ca367182776f80b$export$2e2bcd8739ae039","url","withCredentials","timeout","parallelUploads","uploadMultiple","chunking","forceChunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","maxFilesize","paramName","createImageThumbnails","maxThumbnailFilesize","thumbnailWidth","thumbnailHeight","thumbnailMethod","resizeWidth","resizeHeight","resizeMimeType","resizeQuality","resizeMethod","filesizeBase","maxFiles","headers","defaultHeaders","clickable","ignoreHiddenFiles","acceptedFiles","acceptedMimeTypes","autoProcessQueue","autoQueue","addRemoveLinks","previewsContainer","disablePreviews","hiddenInputContainer","renameFilename","renameFile","forceFallback","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictUploadCanceled","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","dictFileSizeUnits","tb","gb","mb","kb","b","files","xhr","chunk","dzuuid","file","upload","uuid","dzchunkindex","dztotalfilesize","dzchunksize","dztotalchunkcount","totalChunkCount","dzchunkbyteoffset","accept","chunksUploaded","binaryBody","messageElement","$3ed269f2f0fb224b$export$2e2bcd8739ae039","span","textContent","innerText","getFallbackForm","info","srcX","srcY","srcWidth","srcHeight","srcRatio","trgRatio","trgWidth","trgHeight","resizeImage","previewTemplate","previewElement","filesize","_removeLink","removeFileEvent","status","UPLOADING","confirm","removeFile","removeLink","_updateMaxFilesReachedClass","dataUrl","thumbnailElement","alt","progress","bytesSent","nodeName","Emitter","_thumbnailQueue","_processingThumbnail","accepted","getFilesWithStatus","QUEUED","ADDED","clickableElements","setupHiddenFileInput","hiddenFileInput","visibility","getElement","addFile","URL","webkitURL","updateTotalUploadProgress","getAddedFiles","getUploadingFiles","getQueuedFiles","noPropagation","dataTransfer","types","containsFiles","returnValue","dragstart","dragenter","dragover","efct","effectAllowed","dropEffect","dragleave","drop","dragend","clickableElement","click","elementInside","enable","removeAllFiles","dropzone","totalUploadProgress","totalBytesSent","totalBytes","getActiveFiles","total","existingFallback","form","getExistingFallback","fieldsString","_getParamName","fields","getFallback","fallback","elementListeners","removeEventListeners","cancelUpload","setupEventListeners","selectedSize","selectedUnit","units","getAcceptedFiles","webkitGetAsEntry","_addFilesFromItems","handleFiles","clipboardData","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","path","dirReader","createReader","errorHandler","$3ed269f2f0fb224b$var$__guardMethod__","console","methodName","log","readEntries","fullPath","isValidFile","uuidv4","filename","_renameFile","_enqueueThumbnail","_errorProcessing","enqueueFile","processQueue","_processThumbnailQueue","createThumbnail","$3ed269f2f0fb224b$var$without","cancelIfNecessary","canvas","resizedDataURL","toDataURL","$3ed269f2f0fb224b$var$ExifRestore","restore","dataURL","dataURItoBlob","fixOrientation","fileReader","FileReader","onload","createThumbnailFromUrl","readAsDataURL","mockFile","imageUrl","crossOrigin","resizeThumbnail","onDone","thumbnail","loadExif","EXIF","getData","getTag","orientation","resizeInfo","ctx","getContext","rotate","PI","$3ed269f2f0fb224b$var$drawImageIOSFix","trgX","trgY","onerror","processingLength","queuedFiles","processFiles","processFile","processing","uploadFiles","groupedFiles","_getFilesWithXhr","groupedFile","CANCELED","abort","groupedFile1","option","_transformFiles","transformedFiles","transformedFile","chunked","chunks","handleNextChunk","chunkIndex","dataBlock","webkitSlice","retries","_uploadData","finishedChunkUpload","response","allFinished","SUCCESS","responseText","responseHeaders","getAllResponseHeaders","_finished","dataBlocks","XMLHttpRequest","resolveOption","open","_finishedUploading","ontimeout","_handleUploadError","onprogress","_updateFilesUploadProgress","Accept","Cache-Control","X-Requested-With","$ewBKy$justextend","headerName","headerValue","setRequestHeader","submitRequest","formData","FormData","additionalParams","_getChunk","_addFormElementData","doneCounter","transformFile","inputName","inputType","hasAttribute","selected","checked","loaded","readyState","responseType","getResponseHeader","warn","send","ERROR","c","r","random","super","nodeType","elementOptions","optionsForElement","isBrowserSupported","getElements","initClass","$3ed269f2f0fb224b$var$camelize","forElement","discover","dropzones","checkElements","blockedBrowsers","capableBrowser","File","FileList","Blob","blacklistedBrowsers","regex","userAgent","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","asc","charCodeAt","rejectedItem","str","childNodes","els","question","rejected","mimeType","baseMimeType","validType","each","ACCEPTED","PROCESSING","sx","sy","sw","sh","dx","dy","dw","dh","vertSquashRatio","naturalWidth","ih","naturalHeight","drawImage","getImageData","ey","py","$3ed269f2f0fb224b$var$detectVerticalSquash","KEY_STR","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","encode64","exifArray","getExifArray","newImageArray","insertExif","seg","imageData","buf","separatePoint","mae","ato","rawImageArray","head","endPoint","exec","Dropzone","HOOKS","_disable","allowInput","allowInvalidPreload","altFormat","altInput","altInputClass","animate","ariaDateFormat","autoFillDefaultTime","clickOpens","closeOnSelect","conjunction","dateFormat","defaultHour","defaultMinute","defaultSeconds","disableMobile","enableSeconds","enableTime","getWeek","givenDate","date","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","hourIncrement","ignoredFocusElements","inline","locale","minuteIncrement","mode","monthSelectorType","nextArrow","noCalendar","onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","plugins","positionElement","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","english","weekdays","shorthand","longhand","months","daysInMonth","firstDayOfWeek","ordinal","nth","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","amPM","yearAriaLabel","monthAriaLabel","hourAriaLabel","minuteAriaLabel","int","bool","debounce","wait","arrayify","content","clearNode","findParent","createNumberInput","inputClassName","numInput","arrowUp","arrowDown","pattern","getEventTarget","composedPath","doNothing","monthToStr","monthNumber","revFormat","D","dateObj","monthName","setMonth","G","hour","H","J","day","K","getHours","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","W","weekNum","weekNumber","year","setFullYear","Z","ISODate","d","h","minutes","setMinutes","j","l","month","u","unixMillSeconds","w","tokenRegex","formats","toISOString","getMonth","getSeconds","getMinutes","createDateFormatter","config","l10n","isMobile","frmt","overrideLocale","formatDate","createDateParser","givenFormat","timeless","customLocale","parsedDate","dateOrig","toFixed","datestr","parseDate","matched","ops","matchIndex","regexStr","token","isBackSlash","escaped","compareDates","date1","date2","getDefaultHours","hours","minDate","minHour","minMinutes","minSeconds","maxDate","maxHr","maxMinutes","FlatpickrInstance","instanceConfig","flatpickr","defaultConfig","English","bindToInstance","setCalendarWidth","calendarContainer","daysContainer","daysWidth","days","weekWrapper","removeProperty","updateTime","selectedDates","defaultDate","getMilliseconds","latestSelectedDateObj","isKeyDown","curValue","which","newValue","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","secondElement","limitMinHours","minTime","minDateHasTime","maxTime","maxDateHasTime","setHoursFromDate","onYearInput","changeYear","ev","_handlers","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","oldYear","currentYear","oldMonth","currentMonth","buildMonthSwitch","redraw","timeIncrement","inputElem","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","todayDateElem","tabIndex","isDateSelected","selectedDateElem","isDateInRange","insertAdjacentHTML","focusOnDayElem","targetNode","onMouseOver","getFirstAvailableDay","startMonth","endMonth","startIndex","endIndex","focusOnDay","current","dayFocused","isInView","activeElement","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","shouldBuildMonth","monthsDropdownContainer","buildMonth","monthNavFragment","monthElement","selectedMonth","yearInput","tabindex","yearElement","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","isOffset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isCalendarElement","isInput","lostFocus","relatedTarget","isIgnored","some","timeContainer","newYear","newYearNum","isNewYear","_a","dateToCheck","parsed","to","onBlur","allowKeydown","allowInlineKeydown","keyCode","blur","isTimeObj","focusAndClose","selectDate","ctrlKey","currentYearElement","elems","pluginElements","shiftKey","hoverDate","initialDate","rangeStartDate","rangeEndDate","containsDisabled","minRange","maxRange","dayElem","timestamp","outOfRange","ts1","ts2","ts","onResize","positionCalendar","minMaxDateSetter","inverseDateObj","getInputElem","setupLocale","l10ns","stringify","customPositionElement","_positionElement","calendarHeight","reduce","acc","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","distanceFromBottom","showOnTop","pageYOffset","pageXOffset","isCenter","isRight","rightMost","centerMost","doc","editableSheet","styleSheets","sheet","cssRules","createStyleSheet","getDocumentStyleSheet","bodyWidth","centerLeft","centerBefore","centerAfter","centerIndex","centerStyle","insertRule","msMaxTouchPoints","selectedDate","shouldChangeMonth","selectedIndex","single","range","loadedPlugins","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","toInitial","mobileInput","_initialDate","_createElement","lastChild","_type","k","wasOpen","select","CALLBACKS","setSelectedDate","inputDate","dates","parseDateRules","rule","hooks","initEvent","getDateStr","dObj","mobileFormatStr","onMonthNavClick","isPrevMonth","isNextMonth","boolOpts","userConfig","_enable","timeMode","defaultDateFormat","defaultAltFormat","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","pluginConf","parseConfig","placeholder","required","nextSibling","setupInputs","preloadedDate","setupDates","yr","fragment","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","buildWeeks","rContainer","separator","hourInput","aria-label","minuteInput","military2ampm","secondInput","buildTime","customAppend","build","defaultValue","setupMobile","debouncedResize","ontouchstart","selText","isSafari","_flatpickr","nodeList","HTMLCollection","NodeList","Node","en","localize","setDefaults","fp_incr","ce","defaultPrevented","origPrevent","_extends","_slicedToArray","_arr","_n","_d","_s","_i","sliceIterator","customParams","selects","elementsList","_i3","_l3","_i4","_l4","builder","defaultParams","containerClass","openerClass","panelClass","optionClass","optgroupClass","isSelectedClass","hasFocusClass","isDisabledClass","isOpenClass","builderParams","uId","opener","focusedElement","selectedElement","panel","currLabel","resetSearchTimeout","searchKey","setFocusedElement","cstOption","setSelectedElement","customSelectOriginalOption","moveFocuesedElement","currentFocusedIndex","customSelectCstOption","openedCustomSelect","customSelect","clickEvent","mouseoverEvent","keydownEvent","fromCharCode","substr","changeEvent","scrollToFocused","currPanel","currOption","removeEvents","parseMarkup","cstList","cstOptgroup","customSelectOriginalOptgroup","customSelectCstOptgroup","subNodes","lj","_append","nodePar","appendIntoOriginal","targetPar","markupToInsert","_l","possible","replaceChild","pluginOptions","toSelect","_insertBefore","cstNode","removedNode","removed","optGroup","_i2","_l2","ScrollClass","oldScroll","scrollHandler"],"mappings":"CAAC,WACC,aAEA,SAASA,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAIxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAUlD,SAASO,EAAgBC,EAAKF,EAAKG,GAYjC,OAXIH,KAAOE,EACTJ,OAAOC,eAAeG,EAAKF,EAAK,CAC9BG,MAAOA,EACPR,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZK,EAAIF,GAAOG,EAGND,EC5BV,IAAME,EAAWC,OAAOC,WAAW,sCAAsCC,QAInEC,EAAgB,mBA+FtB,IA5FE,SAAAC,IAAc,IAAAC,EAAAC,KAAA1B,EAAA0B,KAAAF,GAAAR,EAAAU,KAAA,mBAwCK,SAACC,GACjBA,EAAQC,KAAI,SAACC,GACX,IAAMC,EAAUD,EAAMxB,OAChB0B,EAAQN,EAAKO,SAASF,GACtBG,EAAmBH,EAAQI,aAAa,sBAE1CL,EAAMM,eACLhB,GAAYW,EAAQI,aAAa,0BAClCJ,EAAQM,UAAUC,IAAId,GAEtBE,EAAKa,UAAUL,EAAkB,QAEjCM,YAAW,WACTT,EAAQM,UAAUC,IAAId,GACtBE,EAAKa,UAAUL,EAAkB,SAChCF,GAGLN,EAAKa,UAAUL,EAAkB,gBA1D1BjB,EAAAU,KAAA,YA+DH,SAACI,GACZ,IAAIC,EAAQD,EAAQI,aAAa,iBAEjC,IAAIf,GAAYW,EAAQI,aAAa,yBAC/BH,EAAQD,EAAQI,aAAa,yBAGnC,OAAc,OAAVH,EACK,EACEA,EAAMS,SAAS,KACjBC,SAAiB,IAARV,GAETU,SAASV,MA3EJf,EAAAU,KAAA,aA+EF,SAACgB,EAAWC,GAClBD,IAIQ,OAARC,EACDC,SAASC,KAAKT,UAAUC,IAAIK,GAE5BE,SAASC,KAAKT,UAAUU,OAAOJ,OAtFnChB,KAAKqB,SAAWH,SAASI,iBALX,YAMdtB,KAAKuB,UARU,OASfvB,KAAKwB,eARe,MAUf,yBAA0B9B,OAC3BM,KAAKqB,SAASI,SAAQ,SAACC,GACtB,IAAMC,EAAqBD,EAAGE,wBACRD,EAAmBE,OAASnC,OAAOoC,YAEvC,MAChB/B,EAAKwB,UAAa7B,OAAOoC,YAAcH,EAAmBE,OAAS,IAAM,GACzE9B,EAAKyB,eAAiB9B,OAAOoC,YAAcH,EAAmBE,OAAS,IAAM,IAI9E,IAAME,EAAe,IAAIC,qBAAqBjC,EAAKkC,gBAAiB,CAClEC,UAAWnC,EAAKyB,iBAElBO,EAAaI,QAAQT,GAGrBb,YAAW,WACTkB,EAAaK,eACZ,KAGH,IAAMC,EAAoBX,EAAGlB,aAAa,qBAAuBkB,EAAGlB,aAAa,qBAAuBT,EAAKwB,UAC5F,IAAIS,qBAAqBjC,EAAKkC,gBAAiB,CAC9DC,UAAWG,IAEJF,QAAQT,MAGnB1B,KAAKqB,SAASI,SAAQ,SAACC,GACrBA,EAAGhB,UAAUC,IAAId;;;;;;;AC7C3B,MAAMyC,EAAe,SACfC,EAAiB,cAOjBC,EAAS,CACbC,QANc,EAOdC,QANc,EAOdC,KANW,EAOXC,OANa,EAObC,UANgB,GAYlB,SAASC,EAAMC,GACbA,EAAMjE,OAAS,EAGjB,SAASkE,EAASC,GAChB,OAAQC,EAAOD,IAA+B,iBAAZA,EAEpC,SAASE,EAAQF,GACf,OAAOG,MAAMD,QAAQF,GAKvB,SAASI,EAASJ,GAChB,MAA0B,iBAAZA,EAEhB,SAASK,EAAYL,GACnB,YAA0B,IAAZA,EAEhB,SAASC,EAAOD,GACd,OAAmB,OAAZA,EAET,SAASM,EAAcN,GACrB,OAAOA,aAAmBO,YAG5B,SAASC,EAAQjE,GACf,OAAO2D,EAAQ3D,GAASA,EAAQ,CAACA,GAGnC,SAASiC,EAAQiC,EAAQC,GACvBF,EAAQC,GAAQjC,QAAQkC,GAG1B,SAAS7C,EAASiC,EAAOvD,GACvB,OAAOuD,EAAMa,QAAQpE,IAAU,EAGjC,SAASqE,EAAKd,EAAOe,GAEnB,OADAf,EAAMc,QAAQJ,EAAQK,IACff,EAGT,MAAMgB,EAAaX,MAAMY,UAEzB,SAASC,EAAMC,EAAWC,EAAOC,GAC/B,OAAOL,EAAWE,MAAMI,KAAKH,EAAWC,EAAOC,GAOjD,SAASE,EAAYC,EAAKC,EAAS7D,GAC7B4D,GACF9C,EAAQ+C,GAAUC,IACZA,GACFF,EAAI7D,UAAUC,EAAM,MAAQ,UAAU8D,MAM9C,SAASC,EAASH,EAAKC,GACrBF,EAAYC,EAAKlB,EAASmB,GAAWA,EAAQG,MAAM,KAAOH,GAAS,GAGrE,SAASI,EAAOC,EAAQC,GACtBrD,EAAQqD,EAAUD,EAAOE,YAAYC,KAAKH,IAG5C,SAASI,EAAOC,EAAOC,GACrB1D,EAAQyD,GAAQE,IACd,MAAMP,EAASM,EAAIE,WACfR,GACFA,EAAOS,aAAaF,EAAMD,MAKhC,SAASvF,EAAQ2E,EAAKgB,GACpB,OAAQhB,EAAuB,mBAAKA,EAAI3E,SAASyE,KAAKE,EAAKgB,GAG7D,SAAST,EAASD,EAAQU,GACxB,OAAOV,EAASZ,EAAMY,EAAOC,UAAUU,QAAQC,GAAU7F,EAAQ6F,EAAOF,KAAa,GAGvF,SAASE,EAAMZ,EAAQU,GACrB,OAAOA,EAAWT,EAASD,EAAQU,GAAU,GAAKV,EAAOa,kBAG3D,SAASC,EAAOC,EAAQjC,EAAUkC,GAChC,GAAID,EAAQ,CACV,IAAIE,EAAO3G,OAAO2G,KAAKF,GACvBE,EAAOD,EAAQC,EAAKC,UAAYD,EAChC,IAAK,IAAIjH,EAAI,EAAGA,EAAIiH,EAAKhH,OAAQD,IAAK,CACpC,MAAMQ,EAAMyG,EAAKjH,GACjB,GAAY,cAARQ,IACiC,IAA/BsE,EAASiC,EAAOvG,GAAMA,GACxB,OAKR,OAAOuG,EAGT,SAASI,EAAOJ,GAMd,OALA3B,EAAMgC,UAAW,GAAGxE,SAASyE,IAC3BP,EAAOO,GAAQ,CAAC1G,EAAOH,KACrBuG,EAAOvG,GAAO6G,EAAO7G,SAGlBuG,EAGT,SAASO,EAAMP,EAAQM,GAUrB,OATAP,EAAOO,GAAQ,CAAC1G,EAAOH,KACjB8D,EAAQ3D,GACVoG,EAAOvG,GAAOG,EAAMyE,QACXjB,EAASxD,GAClBoG,EAAOvG,GAAO8G,EAAMnD,EAAS4C,EAAOvG,IAAQuG,EAAOvG,GAAO,GAAIG,GAE9DoG,EAAOvG,GAAOG,KAGXoG,EAGT,SAASQ,EAAgB7B,EAAK8B,GACxB9B,GACF9C,EAAQ4E,GAAQC,IACd/B,EAAI6B,gBAAgBE,MAK1B,SAASC,EAAahC,EAAK8B,EAAO7G,GAC5BwD,EAASqD,GACXV,EAAOU,GAAO,CAACG,EAAQ/B,KACrB8B,EAAahC,EAAKE,EAAM+B,MAG1BtD,EAAO1D,GAAS4G,EAAgB7B,EAAK8B,GAAS9B,EAAIgC,aAAaF,EAAOI,OAAOjH,IAIjF,SAASkH,EAAOC,EAAKN,EAAOxB,GAC1B,MAAMN,EAAMrD,SAAS0F,cAAcD,GAKnC,OAJIN,IACFhD,EAASgD,GAAS3B,EAASH,EAAK8B,GAASE,EAAahC,EAAK8B,IAE7DxB,GAAUD,EAAOC,EAAQN,GAClBA,EAGT,SAASsC,EAAMtC,EAAKuC,EAAMtH,GACxB,GAAI8D,EAAY9D,GACd,OAAOuH,iBAAiBxC,GAAKuC,GAE/B,IAAK5D,EAAO1D,GAAQ,CAClB,MAAQqH,MAAOG,GAAWzC,EAC1B/E,EAAQ,GAAGA,IACPwH,EAAOF,KAAUtH,IACnBwH,EAAOF,GAAQtH,IAKrB,SAASyH,EAAQ1C,EAAK2C,GACpBL,EAAMtC,EAAK,UAAW2C,GAOxB,SAAS1G,EAAa+D,EAAK+B,GACzB,OAAO/B,EAAI/D,aAAa8F,GAG1B,SAASa,EAAS5C,EAAK6C,GACrB,OAAO7C,GAAOA,EAAI7D,UAAU2G,SAASD,GAGvC,SAASE,EAAK3I,GACZ,OAAOA,EAAOiD,wBAGhB,SAASR,EAAO8D,GACdzD,EAAQyD,GAAQE,IACVA,GAAQA,EAAKC,YACfD,EAAKC,WAAWkC,YAAYnC,MAclC,SAASoC,EAAUC,GACjB,OAAOhC,GAAM,IAAIiC,WAAYC,gBAAgBF,EAAM,aAAatG,MAGlE,SAASyG,EAAQC,EAAGC,GAClBD,EAAEE,iBACED,IACFD,EAAEC,kBACFD,EAAEG,4BAIN,SAASC,EAAMpD,EAAQU,GACrB,OAAOV,GAAUA,EAAOqD,cAAc3C,GAGxC,SAAS4C,EAAStD,EAAQU,GACxB,OAAOtB,EAAMY,EAAOvD,iBAAiBiE,IAGvC,SAAS6C,EAAY7D,EAAKC,GACxBF,EAAYC,EAAKC,GAAS,GAG5B,SAAS6D,EAAK7I,GACZ,OAAO6D,EAAS7D,GAASA,EAAQA,EAAQ,GAAGA,MAAY,GAG1D,SAAS8I,EAAOC,EAAWC,EAAU,IACnC,IAAKD,EACH,MAAM,IAAIE,MAAM,YAAqBD,KAIzC,SAASE,EAASC,GAChB9H,WAAW8H,GAGb,MAAMC,EAAO,OAGb,SAASC,EAAIC,GACX,OAAOC,sBAAsBD,GAG/B,MAAME,IAAEA,EAAGC,IAAEA,EAAGC,MAAEA,EAAKC,KAAEA,EAAIC,IAAEA,IAAQC,KAMvC,SAASC,GAAQC,EAAQC,EAAUC,EAAUC,GAC3C,MAAMC,EAAUX,EAAIQ,EAAUC,GACxBG,EAAUX,EAAIO,EAAUC,GAC9B,OAAOC,EAAYC,EAAUJ,GAAUA,EAASK,EAAUD,GAAWJ,GAAUA,GAAUK,EAG3F,SAASC,GAAMN,EAAQO,EAAGC,GACxB,MAAMJ,EAAUX,EAAIc,EAAGC,GACjBH,EAAUX,EAAIa,EAAGC,GACvB,OAAOf,EAAIC,EAAIU,EAASJ,GAASK,GAGnC,SAASI,GAAKF,GACZ,QAASA,EAAI,KAAOA,EAAI,GAO1B,SAASG,GAAOC,EAAQC,GAItB,OAHA1I,EAAQ0I,GAAeC,IACrBF,EAASA,EAAOG,QAAQ,KAAM,GAAGD,QAE5BF,EAGT,SAASI,GAAIf,GACX,OAAOA,EAAS,GAAK,IAAIA,IAAW,GAAGA,IAGzC,MAAMgB,GAAM,GAuDZ,MAAMC,GAAgB,UAChBC,GAAc,QACdC,GAAa,OACbC,GAAc,QACdC,GAAc,QAKdC,GAAsB,gBACtBC,GAAgB,UAChBC,GAAgB,UAChBC,GAAe,SACfC,GAAgB,UAChBC,GAAqB,eAIrBC,GAAe,SACfC,GAAiB,WACjBC,GAAgB,UAKhBC,GAA2B,qBAI3BC,GAAwB,kBAE9B,SAASC,GAAeC,GACtB,MAAMC,MAAEA,GAAUD,EACZpM,EAAM,GACZ,IAAIsM,EAAY,GAahB,SAASC,EAAOC,EAASC,EAAQnD,GAC/BoD,EAAaF,EAASC,GAAQ,CAACnN,EAAQqN,KACrCL,EAAYA,EAAUnG,QAAQyG,MACxBA,EAAS,KAAOtN,GAAUsN,EAAS,KAAOD,GAAYrD,GAAYsD,EAAS,KAAOtD,KACpFhK,EAAOuN,oBAAoBF,EAAQC,EAAS,GAAIA,EAAS,KAClD,QAMf,SAASF,EAAaF,EAASC,EAAQnI,GACrClC,EAAQoK,GAAUlN,IACZA,GACFmN,EAAOnH,MAAM,KAAKlD,QAAQkC,EAASqB,KAAK,KAAMrG,OAIpD,SAASwN,IACPR,EAAYA,EAAUnG,QAAQ4G,GAASR,EAAOQ,EAAK,GAAIA,EAAK,MAC5DV,EAAMW,MAAMhN,GAGd,OADAqM,EAAMY,GAAGjB,GAAec,EAAS9M,GAC1B,CACLiN,GApCF,SAAYR,EAAQnD,EAAU4D,GAC5Bb,EAAMY,GAAGR,EAAQnD,EAAUtJ,EAAKkN,IAoChCC,IAlCF,SAAaV,GACXJ,EAAMc,IAAIV,EAAQzM,IAkClBoN,KAAMf,EAAMe,KACZzH,KAjCF,SAAc6G,EAASC,EAAQnD,EAAU+D,GACvCX,EAAaF,EAASC,GAAQ,CAACnN,EAAQqN,KACrCL,EAAU9H,KAAK,CAAClF,EAAQqN,EAAQrD,EAAU+D,IAC1C/N,EAAOgO,iBAAiBX,EAAQrD,EAAU+D,OA+B5Cd,OAAAA,EACAO,QAAAA,GAIJ,SAASS,GAAgBC,EAAUC,EAAYC,EAAUC,GACvD,MAAMC,IAAEA,GAAQC,KAChB,IAAIC,EAEAC,EADAC,EAAO,EAEPC,GAAS,EACTC,EAAQ,EACZ,SAASC,IACP,IAAKF,EAAQ,CACX,MAAMG,EAAUR,IAAQE,EAUxB,GATIM,GAAWZ,GACbQ,EAAO,EACPF,EAAYF,KAEZI,EAAOI,EAAUZ,EAEfE,GACFA,EAASM,GAEE,IAATA,IACFP,IACIE,KAAWO,GAASP,GACtB,OAAOU,IAGX7E,EAAI2E,IASR,SAASE,IACPJ,GAAS,EASX,SAASK,IACPC,qBAAqBR,GACrBC,EAAO,EACPD,EAAK,EACLE,GAAS,EAKX,MAAO,CACLnJ,MA1BF,SAAe0J,IACZA,GAAUF,IACXR,EAAYF,KAASY,EAASR,EAAOR,EAAW,GAChDS,GAAS,EACTzE,EAAI2E,IAuBJM,OAlBF,WACEX,EAAYF,IACZI,EAAO,EACHN,GACFA,EAASM,IAeXK,MAAAA,EACAC,OAAAA,EACAI,SARF,WACE,OAAOT,IAsBX,SAASU,GAASlF,EAAMmF,GACtB,IAAIpB,EAUJ,OATA,WACOA,IACHA,EAAWD,GAAgBqB,GAAY,GAAG,KACxCnF,EAAKoF,MAAMlO,KAAMiG,WACjB4G,EAAW,OACV,KAAM,GACTA,EAAS1I,UAgEf,MACMgK,GAAM,MAENC,GAAkB,CACtBC,YAAa,CAAC,eAAgB,cAC9BC,UAAW,CAAC,cACZC,WAAY,CAAC,eACbC,YAAa,CAAC,aAAc,gBAC5BC,aAAc,CAAC,gBAAiB,eAChCC,MAAO,CAAC,UACRC,KAAM,CAAC,MAAO,SACd9I,MAAO,CAAC,SAAU,QAClBiE,EAAG,CAAC,KACJ8E,EAAG,CAAC,KACJC,EAAG,CAAC,KACJC,UAAW,CAAC,UAAW,cACvBC,WAAY,CAAC,YAAa,cAiB5B,MAIMC,GAAc,gBACdC,GAAc,uBAEdC,GAAe,iBACfC,GAAc,gBACdC,GAAmB,sBACnBC,GAAmB,sBACnBC,GAAmB,qBASnBC,GAAe,YACfC,GAAa,UACbC,GAAa,UACbC,GAAgB,aAChBC,GAAgB,aAChBC,GAAiB,CAACL,GAAcG,GAAeF,GAAYC,GAAYE,IACvEE,GAAU,CACdC,MAAOd,GACPe,MAAOd,GACPe,OAAQd,GACRe,MAAOd,GACPe,KAAMd,GACNe,KAAMd,GACNe,WAAYd,GACZe,KAtB4B,2BAuB5BC,QAjBoB,mBAqGtB,MAAMC,GAAO,OACPC,GAAgB,gBAChBC,GAAe,eACfC,GAAa,aACbC,GAAc,cACdC,GAAY,WAEZC,GAAmB,mBACnBC,GAAiB,CACrBP,GACAC,GACAC,GACAC,GACAC,GACAE,GACAD,GATe,YAaXG,GAAQ,QACRC,GAAO,OACPC,GAAO,OAEb,SAASC,GAAQzF,EAAS0F,EAAOC,EAAYtB,GAC3C,MAAMxD,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,EAAMmH,QAASkF,GAAkB7F,GAAeC,IAC5D6F,WAAEA,EAAUC,KAAEA,EAAI7E,QAAEA,GAAYjB,GAChC+F,aAAEA,EAAYC,aAAEA,GAAiB/E,GACjCgF,QAAEA,GAAYJ,EAAWK,UACzBC,EAASpR,EAAasP,EAAO,SAC7B+B,EAAUT,GAAc,EACxBU,EAAYrM,EAAMqK,EAAO,6BACzBiC,EAAiBrF,EAAQqF,gBAAkB5J,EAAS2H,EAAOpD,EAAQqF,gBACzE,IAAIC,EA+BJ,SAASC,EAAO9B,EAAMD,EAAMgC,GACrBF,IACHxE,EAAOnJ,KAAKrE,MACRkS,IAASf,GACXgB,EAAe9N,KAAKrE,MAAM,IAIhC,SAASwN,IACP,IAAKwE,EAAW,CACd,MAAQb,MAAOiB,GAAc3G,EAC7B0G,EAAe9N,KAAKrE,KAAMqS,KAC1BC,EAAiBjO,KAAKrE,KAkC1B,WACE,GAAIyL,EAAQ8G,GAAGtB,IACb,OAAOoB,IAET,MAAMG,EAAYlL,EAAKgK,EAAWmB,SAASC,OACrCC,EAAYrL,EAAKwI,GACjBnB,EAAO+C,EAAQ,QACf7L,EAAQ6L,EAAQ,SACtB,OAAOxI,EAAMsJ,EAAU7D,KAAUxF,EAAKwJ,EAAUhE,KAAUzF,EAAMyJ,EAAU9M,KAAWsD,EAAKqJ,EAAU3M,IA1CtE+M,IAC5BtO,EAAYwL,EAAON,GAAY2B,IAAUiB,EAAY,GACrD9N,EAAYwL,EAAOL,GAAY0B,IAAUiB,EAAY,IAGzD,SAASD,EAAeU,GAClBA,IAAW1L,EAAS2I,EAAOP,MAC7BjL,EAAYwL,EAAOP,GAAcsD,GAC7BrB,GACFjL,EAAauJ,EAAOW,GAAcoC,GAAU,MAE9CpG,EAAKoG,EA1cU,SACE,WAyc4B7S,OAGjD,SAASsS,EAAiBQ,GACxB,MAAMC,GAAcD,IAAYT,IAChC9L,EAAauJ,EAAOa,GAAaoC,GAAc,MAC/CxM,EAAauJ,EAAOc,IAAYmC,GAAcrG,EAAQsG,WAAa,EAAI,MACnEjB,GACFA,EAAetQ,SAAS2D,IACtBmB,EAAanB,EAAMwL,GAAWmC,GAAc,EAAI,SAGhDD,IAAY3L,EAAS2I,EAAOJ,MAC9BpL,EAAYwL,EAAOJ,GAAeoD,GAClCrG,EAAKqG,EAtdW,UACD,SAqd8B9S,OAMjD,SAASqS,IACP,OAAO5G,EAAQ0F,QAAUA,EAmB3B,MAAO,CACLA,MAAAA,EACAC,WAAAA,EACAtB,MAAAA,EACAgC,UAAAA,EACAD,QAAAA,EACAoB,MAnGF,YAUA,WACOpB,IACH/B,EAAM1C,GAAK,GAAGmE,EAAKnE,WAAW9C,GAAI6G,EAAQ,MAE5C,GAAIK,EAAc,CAChB,MAAM0B,EAAMrB,EAAUT,EAAaD,EAC7BgC,EAAQlJ,GAAOyC,EAAQ0G,KAAKC,OAAQH,EAAM,GAC1CI,EAAW7H,EAAQ8H,QAAQrT,KAAKsT,GAAWA,EAAOjC,KAAKnE,KAAIqG,KAAK,KACtElN,EAAauJ,EAAOY,GAAYyC,GAChC5M,EAAauJ,EAAOU,GAAe8C,GACnC/M,EAAauJ,EAAOS,GAAM,aAnB5BmD,GACA1O,EAAK8K,EAAO,iBAAkBjI,IAC5B4E,EAAgB,UAAX5E,EAAE5G,KAAmB2J,GAAcC,GAAqB7K,KAAM6H,MAErEyE,EAAG,CAACxB,GAAeI,GAAoBP,GAAaS,IAAiBoC,EAAOxI,KAAKhF,OAC7EyR,GACFnF,EAAG5B,GAAYuH,EAAOjN,KAAKhF,QA6F7BmM,QA7EF,WACE6F,GAAY,EACZX,IACAjJ,EAAY0H,EAAOF,IACnBxJ,EAAgB0J,EAAOgB,IACvBvK,EAAauJ,EAAO,QAAS8B,IAyE7B/K,MA/BF,SAAiBC,EAAMtH,EAAOmU,GAC5B9M,EAAM8M,GAAgB7B,GAAahC,EAAOhJ,EAAMtH,IA+BhDoU,SAhBF,SAAkBC,EAAMC,GACtB,IAAIC,EAAO3K,GAAIyK,EAAO1C,GAItB,OAHKU,IAAYnF,EAAQoB,SAAUrC,EAAQ8G,GAAGvB,MAC5C+C,EAAO/K,EAAI+K,EAAMtI,EAAQ3M,OAASiV,IAE7BA,GAAQD,IA21BnB,MAGME,GAAsB,sBACtBC,GAAoB,+BA4J1B,MAAMC,GAAgB,CAAC,OAAQ,QAAS,KAAM,QA8C9C,MAAMC,GAAqB,mBACrBC,GAAwB,0BACxBC,GAAiB,gDAoKvB,MAAMC,GAAe,CAAC,IAAK,QAAS,YAyEpC,IAAIC,GAAqCpV,OAAOqV,OAAO,CACrDC,UAAW,KACXC,QAxmDF,SAAiBjJ,EAASkJ,EAAajI,GACrC,MAAMkI,EAAmB5G,GAAS7L,GAClC,IAAI0S,EACAC,EACAC,EAuBJ,SAAS5I,EAAQ6I,GACXA,GACF9I,oBAAoB,SAAU0I,GAGlC,SAASzS,IACP,MAAM8S,GA/eeC,EA+eMC,GAAUA,EAAM,GAAGvV,QA9ezCqE,EA8ea6Q,GA9eItP,OAAO0P,GAAW,IA8ekB,IA/e9D,IAAyBA,EAgfjBD,EAAK,KAAOF,GAIlB,SAAiBK,GACf,MAAMC,EAAa3I,EAAQ4I,YAAYF,IAAUP,EAC7CQ,EAAWlJ,SACbV,EAAQiB,QAAUmI,EAClBpJ,EAAQU,QAA+B,eAAvBkJ,EAAWlJ,WAEvBV,EAAQ8J,MAAMhD,GAvjBN,KAwjBVpG,GAAQ,GACRV,EAAQwH,SAEVxH,EAAQiB,QAAU2I,GAblBG,CAAQT,EAAYE,EAAK,IAgB7B,MAAO,CACLQ,MA/CF,WACE,IACEtP,EAAMuG,EAASgJ,KAAKC,MAAMnV,EAAaiL,EAAQ8F,KAAMhP,KACrD,MAAOsF,GACPS,GAAO,EAAOT,EAAEW,SAElBqM,EAAiB1O,EAAM,GAAIuG,GAC3B,MAAM4I,YAAEA,GAAgB5I,EACxB,GAAI4I,EAAa,CACf,MAAMM,EAA+B,QAAvBlJ,EAAQmJ,WACtBf,EAAS3V,OAAO2G,KAAKwP,GAAaQ,MAAK,CAACC,EAAGC,IAAMJ,GAASI,GAAKD,GAAKA,GAAKC,IAAG9V,KAAKkV,GAAU,CACzFA,EACAzV,WAAW,IAAIiW,EAAQ,MAAQ,eAAeR,WAEhDjT,MAkCF8Q,MA/BF,WACM6B,GACFnI,iBAAiB,SAAUiI,IA8B7BzI,QAAAA,IAmjDFwF,UA7hDF,SAAmBlG,EAASkJ,EAAajI,GASvC,MAAO,CACLgF,QATF,SAAiB5K,EAAMmP,GACrB,MAAMC,UAAEA,GAAcxJ,EAEtB,OAAO0B,GAAgBtH,GAtBf,QAqBMoP,GAAsBD,EAAeC,IAAc/H,GAAM,GAAK,EAA7B,IACRrH,GAOvCqP,OALF,SAAgB3W,GACd,OAAOA,GAzBC,QAyBQkN,EAAQwJ,UAAoB,GAAK,MAuhDnDzD,SAz+CF,SAAkBhH,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,GAAOd,GAAeC,IACxB8F,KAAEA,GAAS9F,EACX2K,EAAW,GACXC,EAAS,GACf,IAAI7R,EACA8R,EACA5D,EACA6D,EACJ,SAASd,KAwBT,WACEa,EAAS7Q,EAAM8L,EAAM,mBACrBmB,EAAQzK,EAAMsJ,EAAM,kBACpBgF,EAAO9Q,EAAMiN,EAAO,iBACpBpK,EAAOoK,GAAS6D,EAAM,oCACtB1S,EAAKwS,EAAQvR,EAASyR,EAAM,uBAAwBtH,QACpD,MAAMuH,EAAWC,EAAK,qBAChBzG,EAASyG,EAAK,mBACpBzQ,EAAOoQ,EAAU,CACf7E,KAAAA,EACA+E,OAAAA,EACA5D,MAAAA,EACA6D,KAAAA,EACAF,OAAAA,EACArG,OAAAA,EACAwG,SAAAA,EACAtG,KAAMjI,EAAM+H,EAAQ,wBACpBG,KAAMlI,EAAM+H,EAAQ,wBACpB0G,IAAKzO,EAAMwO,EAAK,qBAAuB,0BACvCE,KAAM1O,EAAMuO,EAAU,iBACtB9I,MAAOzF,EAAMuO,EAAU,oBA3CzBI,GA8CF,WACE,MAAMxJ,EAAKmE,EAAKnE,KAvZFyJ,EAuZiBvU,EAtZ1B,GAAGuU,IAASvM,GAAIC,GAAIsM,IAAWtM,GAAIsM,IAAW,GAAK,MAD5D,IAAkBA,EAwZdtF,EAAKnE,GAAKA,EACVsF,EAAMtF,GAAKsF,EAAMtF,IAAM,GAAGA,UAC1BmJ,EAAKnJ,GAAKmJ,EAAKnJ,IAAM,GAAGA,SAjDxB0J,GACApS,EAAS6M,EAAM/M,EAAUuS,KAM3B,SAAS5K,IACP,CAACoF,EAAMmB,EAAO6D,GAAM9U,SAAS8C,IAC3B6B,EAAgB7B,EAAK,YAEvBzB,EAAMuT,GACNjO,EAAYmJ,EAAM/M,GAEpB,SAASwS,IACP7K,IACAsJ,IAEF,SAASjI,IACPpF,EAAYmJ,EAAM/M,GAClBE,EAAS6M,EAAM/M,EAAUuS,KA+B3B,SAASN,EAAKlR,GACZ,OAAOE,EAAM8L,EAAMhM,IAAaE,EAAM6Q,EAAQ/Q,GAEhD,SAASwR,IACP,MAAO,CACL,WAAkBrK,EAAQzL,OAC1B,WAAkByL,EAAQwJ,YAC1BxJ,EAAQuK,MAAQ,oBAChBvK,EAAQ8E,cAAgB,cACxBjC,IAGJ,OAAOvJ,EAAOoQ,EAAU,CACtBX,MAAAA,EACAxC,MA9DF,WACE3G,EAAGxB,GAAekM,EAASE,GAC3B5K,EAAGvB,GAAeyC,IA6DlBrB,QAAAA,KA65CFgL,OA9wCF,SAAgB1L,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,GAASwG,GAAeC,IACpC4K,OAAEA,EAAME,KAAEA,GAAS5B,EAAYlC,SAC/B2E,EAAU,GAQhB,SAAS1D,IACP2C,EAAO5U,SAAQ,CAACqO,EAAOqB,KACrBkG,EAASvH,EAAOqB,GAAQ,MAG5B,SAAShF,IACPmL,GAAWC,IACTA,EAAOpL,aAETrJ,EAAMsU,GAER,SAASJ,IACP7K,IACAuH,IAEF,SAAS2D,EAASvH,EAAOqB,EAAOC,GAC9B,MAAMxL,EAASsL,GAAQzF,EAAS0F,EAAOC,EAAYtB,GACnDlK,EAAOqN,QACPmE,EAAQvT,KAAK+B,GAEf,SAAS4R,EAAIC,GACX,OAAOA,EAAgBjS,GAAQ+R,IAAYA,EAAO1F,UAAWuF,EA6B/D,SAASE,EAAU3T,EAAU8T,GAC3BD,EAAIC,GAAehW,QAAQkC,GAE7B,SAAS6B,EAAOkS,GACd,OAAON,EAAQ5R,OAl5BS,mBAk5BSkS,EAAWA,EAAWH,GAAWlU,EAASqU,GAAW9X,EAAQ2X,EAAOzH,MAAO4H,GAAW5W,EAAS2C,EAAQiU,GAAUH,EAAOpG,QA4B3J,MAAO,CACL8B,MA1FF,WACES,IACApH,EAAGxB,GAAekM,GAClB1K,EAAG,CAAC9B,GAAeM,KAAgB,KACjCsM,EAAQtB,MAAK,CAAC6B,EAAQJ,IAAWI,EAAOxG,MAAQoG,EAAOpG,YAuFzDhF,QAAAA,EACAkL,SAAAA,EACAG,IAAAA,EACAI,MAhEF,SAAevH,GACb,MAAMwH,WAAEA,GAAelD,EACjBxD,EAAQ0G,EAAWC,QAAQzH,GAC3BpH,EAAM4O,EAAWE,WAAa,EAAIrL,EAAQsL,QAChD,OAAOxS,GAAQ+R,GAAWjO,GAAQiO,EAAOpG,MAAOA,EAAOA,EAAQlI,EAAM,MA6DrEgP,MA3DF,SAAe9G,GACb,OAAO3L,EAAO2L,GAAO,IA2DrBxQ,IAzDF,SAAamD,EAAOqN,GAClB1P,EAAQqC,GAAQgM,IAId,GAHIzM,EAASyM,KACXA,EAAQtI,EAAUsI,IAEhBvM,EAAcuM,GAAQ,CACxB,MAAM3K,EAAMkR,EAAOlF,GACnBhM,EAAMF,EAAO6K,EAAO3K,GAAOP,EAAO2R,EAAMzG,GACxCpL,EAASoL,EAAOpD,EAAQlI,QAAQsL,OAqBtC,SAAuBvL,EAAKoE,GAC1B,MAAMuP,EAAS/P,EAAS5D,EAAK,OAC7B,IAAIzF,OAAEA,GAAWoZ,EACbpZ,EACFoZ,EAAOzW,SAAS0W,IACdnT,EAAKmT,EAAK,cAAc,OACfrZ,GACL6J,UAKNA,IAhCEyP,CAActI,EAAOrD,EAAKzH,KAAK,KAAMgG,SAGzCyB,EAAK3B,KA8CL1J,OA5CF,SAAkBsW,GAChBtW,EAAOoE,EAAOkS,GAASxX,KAAKqX,GAAWA,EAAOzH,SAC9CrD,EAAK3B,KA2CLrJ,QAAS6V,EACT9R,OAAAA,EACAqB,MArCF,SAAeC,EAAMtH,EAAOmU,GAC1B2D,GAAWC,IACTA,EAAO1Q,MAAMC,EAAMtH,EAAOmU,OAoC5B0E,UAlBF,SAAmBZ,GACjB,OAAOA,EAAgBpB,EAAOvX,OAASsY,EAAQtY,QAkB/CwZ,SAhBF,WACE,OAAOlB,EAAQtY,OAAS4N,EAAQsL,WAorClCO,OAjqCF,SAAgB9M,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,IACpC0L,OAAEA,GAAWxC,GACbjD,QAAEA,GAAYiD,EAAYhD,WAC1BJ,KAAEA,EAAImB,MAAEA,EAAK6D,KAAEA,GAAS5B,EAAYlC,UACpCwF,MAAEA,GAAUd,EAClB,IAAIqB,EACAC,EAOJ,SAAS/E,IACP+E,EAAW,KACXD,EAAW9L,EAAQwJ,YAAc/H,GACjCtH,EAAM0K,EAAM,WAAYlJ,EAAKqE,EAAQgC,QACrC7H,EAAM6L,EAAOhB,EAAQ,eAAgBgH,GAAW,IAChD7R,EAAM6L,EAAOhB,EAAQ,gBAAiBgH,GAAW,IACjDC,IAEF,SAASA,IACP,MAAMC,EAAUtR,EAAKiK,GAChBkH,GAAYA,EAAS/J,QAAUkK,EAAQlK,OAAS+J,EAAS5W,SAAW+W,EAAQ/W,SAC/EgF,EAAM6L,EAAO,SAgBjB,WACE,IAAI7Q,EAAS,GACT2W,IACF3W,EAASgX,IACTvQ,EAAOzG,EAAQ,qCACfA,EAAS,QAAQA,OAAY6W,GAAW,QAAYA,GAAW,OAEjE,OAAO7W,EAvBkBiX,IACvB3B,EAAOtQ,MAAM6K,EAAQ,eAAgBrJ,EAAKqE,EAAQqM,MAClD5B,EAAOtQ,MAAM,SA2BR6F,EAAQ4B,UAAY,GAAKjG,EAAKqE,EAAQ6B,cAAgBiK,EAAW,GAAKQ,OA3BlC,MAO3C7B,EAAOtQ,MAAM,SAuBNwB,EAAKqE,EAAQuM,eAAiBT,EAAW9L,EAAQwM,WAAa,GAAKF,IAAiBH,MAvBhD,MAAM,GAL/CJ,EAAWG,EACXnM,EAAKxB,KAMT,SAASyN,EAAW7S,GAClB,MAAMsT,QAAEA,GAAYzM,EACd5F,EAAO4K,EAAQ7L,EAAQ,QAAU,QACvC,OAAOsT,GAAW9Q,EAAK8Q,EAAQrS,KAAU9D,EAASmW,GAAW,EAAIA,KAAa,MAWhF,SAASN,IACP,OAAOxQ,EAAKqE,EAAQ7K,QAAUyF,EAAKiP,GAAM7H,MAAQhC,EAAQ0M,aAQ3D,SAASJ,IACP,MAAMD,EAAM1Q,EAAKqE,EAAQqM,KACzB,MAAO,aAAaA,GAAO,MAAMA,QAAUrM,EAAQsL,SAAW,IAAIe,GAAO,MAAMA,OASjF,SAASM,EAAUlI,EAAOmI,GACxB,MAAMC,EAAQtB,EAAM9G,GACpB,GAAIoI,EAAO,CACT,MAAM1T,EAAQyB,EAAKiS,EAAMzJ,OAAO4B,EAAQ,UAClC/C,EAAOrH,EAAKiP,GAAM7E,EAAQ,SAChC,OAAOtI,GAAIvD,EAAQ8I,IAAS2K,EAAa,EAAIE,KAE/C,OAAO,EAKT,SAASA,IACP,MAAMD,EAAQtB,EAAM,GACpB,OAAOsB,GAASE,WAAW5S,EAAM0S,EAAMzJ,MAAO4B,EAAQ,kBAAoB,EAK5E,MAAO,CACLuB,MAlFF,WACES,IACA1O,EAAKtF,OAAQ,cAAesO,GAASvB,EAAKzH,KAAKhF,KAAMgL,MACrDsB,EAAG,CAACvB,GAAeD,IAAgB4I,GACnCpH,EAAGtB,GAAc2N,IA+EjBe,SA5BF,WACE,OAAOpS,EAAKiP,GAAM7E,EAAQ,WA4B1BiI,UA1BF,SAAmBxI,EAAOmI,GACxB,MAAMC,EAAQtB,EAAM9G,GAAS,GAC7B,OAAOoI,EAAQjS,EAAKiS,EAAMzJ,OAAO4B,EAAQ,WAAa4H,EAAa,EAAIE,KAAY,GAyBnFI,WAdF,WACE,OAAOP,EAAU5N,EAAQ3M,OAAS,GAAG,GAAQua,GAAW,GAAG,IAc3DA,UAAAA,EACAQ,WATF,SAAoBhU,GAClB,OAAO4T,WAAW5S,EAAM6L,EAAOhB,EAAQ,WAAU7L,EAAQ,QAAU,YAAe,KA2kCpFiU,OA/jCF,SAAgBrO,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,IAC9BgH,SAAEA,EAAQ0E,OAAEA,GAAWxC,GACvBjD,QAAEA,GAAYiD,EAAYhD,UAC1BoI,EAAS,GACf,IAAIC,EAMJ,SAAStG,KACHsG,EAAaC,QAkBnB,SAAkB1M,GAChB,MAAM8I,EAASc,EAAOK,MAAMvT,SACtBnF,OAAEA,GAAWuX,EACnB,GAAIvX,EAAQ,CACV,KAAOuX,EAAOvX,OAASyO,GACrB1J,EAAKwS,EAAQA,GAEfxS,EAAKwS,EAAOpS,OAAOsJ,GAAQ8I,EAAOpS,MAAM,EAAGsJ,IAAQ9L,SAAQ,CAAC8X,EAAOpI,KACjE,MAAM+I,EAAS/I,EAAQ5D,EACjBwC,EAOZ,SAAmBxL,EAAK4M,GACtB,MAAMpB,EAAQxL,EAAI4V,WAAU,GAG5B,OAFAzV,EAASqL,EAAOrD,EAAQlI,QAAQuL,OAChCA,EAAM3C,GAAK,GAAG3B,EAAQ8F,KAAKnE,WAAW9C,GAAI6G,EAAQ,KAC3CpB,EAXWqK,CAAUb,EAAMzJ,MAAOqB,GACrC+I,EAASjV,EAAO8K,EAAOsG,EAAO,GAAGvG,OAASlL,EAAO6N,EAAS8D,KAAMxG,GAChElM,EAAKkW,EAAQhK,GACboH,EAAOE,SAAStH,EAAOoB,EAAQ5D,GAAS2M,EAAS,EAAIpb,GAASya,EAAMpI,WA7BtEkJ,CAASL,GACTvN,EAAKzB,KAGT,SAASmB,IACP/K,EAAO2Y,GACPjX,EAAMiX,GAER,SAAS/C,IACP7K,IACAuH,IAEF,SAASvR,IACH6X,EAAaC,KACfxN,EAAK3B,IAyBT,SAASmP,IACP,IAAMF,OAAQO,GAAY5N,EAC1B,GAAKjB,EAAQ8G,GAAGvB,KAET,IAAKsJ,EAAS,CACnB,MAAMC,EAh6BZ,SAAiB1V,EAAQrF,GACvB,GAAI6D,EAAS7D,GAAQ,CACnB,MAAMgb,EAAM9T,EAAO,MAAO,CAAEG,MAAO,UAAUrH,0BAAgCqF,GAC7ErF,EAAQ8H,EAAKkT,GAAK9L,MAClBtN,EAAOoZ,GAET,OAAOhb,EA05Beib,CAAQhI,EAAS8D,KAAM7J,EAAQgF,EAAQ,gBAGzD4I,GAFmBC,GAAapR,EAAK7B,EAAKmL,EAASC,OAAOhB,EAAQ,UAAY6I,IAC9C7N,EAAQgF,EAAQ,eAAiBjG,EAAQ3M,QAAU4N,EAAQsL,UACpEtL,EAAQuK,MAAQvK,EAAQgO,eAAiB,GAAK,EAAI,SALzEJ,EAAU,EAOZ,OAAOA,EAET,MAAO,CACLrH,MA3DF,WACES,IACApH,EAAGxB,GAAekM,GAClB1K,EAAG,CAACvB,GAAeC,IAAe7I,IAyDlCgK,QAAAA,IA8/BFwO,KA1/BF,SAAclP,EAASkJ,EAAajI,GAClC,MAAMJ,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,IAC9BkO,UAAEA,EAASE,WAAEA,EAAUR,UAAEA,EAASK,SAAEA,EAAQE,WAAEA,GAAejF,EAAY4D,QACzE7G,QAAEA,EAAOyE,OAAEA,GAAWxB,EAAYhD,WAClC4E,KAAEA,EAAI7D,MAAEA,GAAUiC,EAAYlC,SACpC,IAAImI,EAOJ,SAASC,IACFC,MACHnG,EAAYoG,OAAOpN,SACnBqN,EAAKvP,EAAQ0F,OACb1E,EAAKvB,KAwBT,SAAS8P,EAAK7J,GACZ8J,EAAUC,EAAW/J,GAAO,IAE9B,SAAS8J,EAAUE,EAAUC,GACtB3P,EAAQ8G,GAAGtB,MACdsF,EAAK1P,MAAMwU,UAAY,YAAY3J,EAAQ,QAAQ0J,EAAcD,EAGrE,SAAcA,GACZ,IAAKP,GAAWnP,EAAQ8G,GAAGvB,IAAO,CAChC,MAAM+C,EAAOoC,EAAOgF,EAAWG,KACzBC,EAAcC,GAAc,EAAOL,IAAapH,EAAO,EACvD0H,EAAcD,GAAc,EAAML,IAAapH,EAAO,GACxDwH,GAAeE,KACjBN,EAAWO,EAAMP,EAAUM,IAG/B,OAAON,EAZuEQ,CAAKR,SAcrF,SAASO,EAAMP,EAAUS,GACvB,MAAMC,EAASV,EAAWW,EAASF,GAC7BG,EAAOnC,IAEb,OADAuB,GAAYnR,GAAK6R,GAAUE,EAAO5S,EAAKC,GAAIyS,GAAUE,GAwBvD,SAASb,EAAW/J,EAAO6K,GACzB,MAAMb,EAAWhF,EAAOkD,EAAUlI,EAAQ,GAa5C,SAAgBA,GACd,MAAM8K,MAAEA,GAAUvP,EAClB,MAAiB,WAAVuP,GAAsBvC,IAAaC,EAAUxI,GAAO,IAAS,GAAK8K,EAAQtC,EAAUxI,IAAU,EAftD+K,CAAO/K,IACtD,OAAO6K,EAMT,SAAcb,GACRzO,EAAQyP,WAAa1Q,EAAQ8G,GAAGxB,MAClCoK,EAAWtR,GAAMsR,EAAU,EAAGhF,EAAOyD,IAAeF,OAEtD,OAAOyB,EAVWiB,CAAKjB,GAAYA,EAErC,SAASG,IACP,MAAM3M,EAAO+C,EAAQ,QACrB,OAAOpK,EAAKiP,GAAM5H,GAAQrH,EAAKoL,GAAO/D,GAAQwH,EAAO0D,GAAW,IAYlE,SAASiC,EAAS7S,GAChB,OAAOiS,EAAWjS,EAAM0L,EAAYkD,WAAWwE,SAAW,IAAK3P,EAAQyP,WAEzE,SAASrB,IACP,QAASF,EAEX,SAASY,EAAcvS,EAAKkS,GAC1BA,EAAW7X,EAAY6X,GAAYG,IAAgBH,EACnD,MAAMI,GAAsB,IAARtS,GAAgBkN,EAAOgF,GAAYhF,EAAO2F,GAAS,IACjEL,GAAsB,IAARxS,GAAiBkN,EAAOgF,GAAYhF,EAAO2F,GAAS,IACxE,OAAOP,GAAeE,EAExB,MAAO,CACLxI,MA/GF,WACE3G,EAAG,CAAC9B,GAAeS,GAAeF,GAAeD,IAAgB+P,IA+GjE1O,QA7GF,WACE/F,EAAgBmQ,EAAM,UA6GtB+F,KApGF,SAAcpK,EAAMf,EAAOjB,EAAMvH,GAC/B,IAAKmS,IAAU,CACb,MAAMyB,IAAEA,GAAQ9Q,EAAQ8J,MAClB4F,EAAWG,IACXkB,EAAUtK,IAASf,EACzByJ,EAAU4B,GAAW9P,EAAQ+P,kBAC7BF,EAzpCS,GA0pCT9P,EAAK/B,GAAYyG,EAAOjB,EAAMgC,GAC9ByC,EAAY+H,WAAWvY,MAAM+N,GAAM,KACjCsK,GAAWxB,EAAK7J,GAChByJ,GAAU,EACV2B,EA/pCK,GAgqCL9P,EAAK9B,GAAawG,EAAOjB,EAAMgC,GACL,SAAtBxF,EAAQyP,WAAwBjK,IAAShC,GAAQiL,IAAaG,IAChE3G,EAAYkD,WAAW8E,GAAGzK,EAAOhC,EAAO,IAAM,KAAK,EAAOvH,GAE1DA,GAAYA,SAqFlBqS,KAAAA,EACAC,UAAAA,EACAS,MAAAA,EACA/N,OA1DF,WACEiN,GAAU,EACVK,EAAUK,KACV3G,EAAY+H,WAAW/O,UAwDvBmK,QAtDF,SAAiBqD,GACf,MAAMhE,EAASxC,EAAYwC,OAAOK,MAClC,IAAIrG,EAAQ,EACRyL,EAAcC,EAAAA,EAClB,IAAK,IAAIhe,EAAI,EAAGA,EAAIsY,EAAOrY,OAAQD,IAAK,CACtC,MAAMuS,EAAa+F,EAAOtY,GAAGsS,MACvB2C,EAAW1K,GAAI8R,EAAW9J,GAAY,GAAQ+J,GACpD,KAAIrH,GAAY8I,GAId,MAHAA,EAAc9I,EACd3C,EAAQC,EAKZ,OAAOD,GAyCP+J,WAAAA,EACAI,YAAAA,EACAQ,SAAAA,EACAhB,OAAAA,EACAU,cAAAA,IA03BF3D,WAt3BF,SAAoBpM,EAASkJ,EAAajI,GACxC,MAAMJ,GAAEA,GAAOd,GAAeC,IACxBkP,KAAEA,GAAShG,GACX2G,YAAEA,EAAWQ,SAAEA,GAAanB,GAC5BrC,SAAEA,EAAQD,UAAEA,GAAc1D,EAAYwC,OACtC2F,EAASrR,EAAQ8G,GAAGvB,IACpB+L,EAAUtR,EAAQ8G,GAAGxB,IAC3B,IAEIiM,EACAC,EACAjF,EAJA5F,EAAY1F,EAAQvI,OAAS,EAC7B+Y,EAAY9K,EAQhB,SAASsB,IACPsJ,EAAa3E,GAAU,GACvB4E,EAAUvQ,EAAQuQ,QAClBjF,EAAUtL,EAAQsL,QAClB5F,EAAYvI,GAAMuI,EAAW,EAAG4K,EAAa,GAc/C,SAASG,EAAOC,EAAaC,EAAUC,EAAMrP,EAAUtF,GACrD,MAAMuJ,EAAOmL,EAAWD,EAAcG,EAAOH,GAC7CzI,EAAYoG,OAAOoC,OAAOE,GAAYC,EAAO3C,EAAKO,WAAWhJ,GAAM,GAAQkL,EAAanP,GAAU,KAChGuP,EAAS7C,EAAK7C,QAAQ6C,EAAKW,gBAC3B3S,GAAYA,OAuBhB,SAAS8U,EAAQL,GACf,OAAOM,GAAY,EAAON,GAE5B,SAASO,EAAQP,GACf,OAAOM,GAAY,EAAMN,GAE3B,SAASM,EAAYxN,EAAMkN,GACzB,MAAM7T,EAAS0T,IAAYlF,IAAa,EAAIC,GACtC9F,EAAO0L,EAAiBxL,EAAY7I,GAAU2G,GAAQ,EAAI,GAAIkC,GACpE,OAAc,IAAVF,IAAe6K,IAhkCKjT,EAikCEwR,IAjkCCvR,EAikCc+R,GAAU5L,GAjkCrB2N,EAikC4B,EAhkCrDzU,GAAIU,EAAIC,GAAK8T,GAokCXT,EAAclL,EAAOyJ,EAAKzJ,GAHtBhC,EAAO,EAAImM,IAlkC1B,IAA4BvS,EAAGC,EAAG8T,EAukChC,SAASD,EAAiB1L,EAAM2B,EAAMiK,GACpC,GAAIxF,IAAY,CACd,MAAMlU,EAAMiY,IACRnK,EAAO,GAAKA,EAAO9N,EAEnB8N,EADE5I,GAAQ,EAAG4I,EAAM2B,GAAM,IAASvK,GAAQlF,EAAKyP,EAAM3B,GAAM,GACpD4F,EAAQiG,EAAO7L,IAElB4K,EACKG,EAAU/K,EAAOA,EAAO,IAAM8K,EAAahF,GAAWA,GAAWgF,EAC/DtQ,EAAQoB,OACVoE,EAAO,EAAI9N,EAAM,GAEhB,EAIP0Z,GAAe5L,IAAS2B,IAC3B3B,EAAO+K,EAAU/K,EAAO4F,EAAQiG,EAAOlK,IAAS3B,EAAO2B,GAAQ,EAAI,UAIvE3B,GAAQ,EAEV,OAAOA,EAET,SAASmK,IACP,IAAIjY,EAAM4Y,EAAahF,EAIvB,OAHID,KAAc+E,GAAUG,KAC1B7Y,EAAM4Y,EAAa,GAEd/T,EAAI7E,EAAK,GAElB,SAASuX,EAAKxK,GACZ,OAAI2L,EACKxE,IAAanH,EAAQ6L,GAAc7L,EAAQ,EAAI6L,EAAa,IAAM,EAEpE7L,EAET,SAAS2G,EAAQzH,GACf,OAAOxG,GAAMkO,IAAa1H,EAAO2H,EAAU3H,EAAM,EAAGgM,KAEtD,SAAS0B,EAAO5M,GAKd,OAJK4G,MACH5G,EAAQ7H,GAAQ6H,EAAO6L,EAAahF,EAASgF,EAAa,GAAKA,EAAa,EAAI7L,EAChFA,EAAQjI,EAAMiI,EAAQ6G,IAEjB7G,EAET,SAASoM,EAAOH,GACd,MAAMY,EAAUrD,EAAK7C,QAAQsF,GAC7B,OAAOL,EAAUlT,GAAMmU,EAAS,EAAG3B,KAAY2B,EAEjD,SAASR,EAASrM,GACZA,IAAUiB,IACZ8K,EAAY9K,EACZA,EAAYjB,GAMhB,SAAS4G,IACP,OAAQzU,EAAYoJ,EAAQuP,QAAUvP,EAAQ8E,aAEhD,MAAO,CACLyB,MAlIF,WACES,IACApH,EAAG,CAACvB,GAAeD,IAAgB4I,EAAMwD,IAiIzCyF,GAzHF,SAAYsB,EAASC,EAAgBvV,GACnC,MAAMuJ,EAkBR,SAAe+L,GACb,IAAI9M,EAAQiB,EACZ,GAAI/O,EAAS4a,GAAU,CACrB,MAAM,CAAGE,EAAW5U,GAAU0U,EAAQG,MAAM,oBAAsB,GAChD,MAAdD,GAAmC,MAAdA,EACvBhN,EAAQyM,EAAiBxL,IAAa,GAAG+L,KAAa5U,GAAU,IAAK6I,GAAW,GACzD,MAAd+L,EACThN,EAAQ5H,EAASuO,GAASvO,GAAUkU,GAAQ,GACrB,MAAdU,IACThN,EAAQwM,GAAQ,SAIhBxM,EADE2L,EACMjT,GAAMoU,GAAUjG,EAASgF,EAAahF,EAAU,GAEhDnO,GAAMoU,EAAS,EAAG5B,KAG9B,OAAOlL,EApCMwE,CAAMsI,GACnB,GAAIvR,EAAQ2R,UACVlB,EAAOjL,GAAM,GAAM,EAAMxF,EAAQ4R,MAAO3V,OACnC,CACL,MAAMwI,EAAQwK,EAAKzJ,GACff,GAAS,IAAMwJ,EAAKG,WAAaoD,GAAkB/M,IAAUiB,KAC/DoL,EAASrM,GACTwJ,EAAK2B,KAAKpK,EAAMf,EAAO+L,EAAWvU,MAkHtCwU,OAAAA,EACAM,QAAAA,EACAE,QAAAA,EACAtB,OAAAA,EACAmB,SAAAA,EACAe,SAdF,SAAkBrO,GAChB,OAAOA,EAAOgN,EAAY9K,GAc1B0F,QAAAA,EACAiG,OAAAA,EACAR,OAAAA,EACAxF,SAAAA,IA8tBFyG,OAttBF,SAAgB/S,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,IACpCjH,QAAEA,EAAO4O,KAAEA,GAAS1G,GACpB+F,SAAEA,EAAQoF,WAAEA,GAAelD,EACjC,IAGI8J,EAHAC,EAAUjM,EAASzC,OACnBE,EAAOuC,EAASvC,KAChBC,EAAOsC,EAAStC,KAEpB,MAAMH,EAAS,GAKf,SAAS0D,IAMP,GALIhH,EAAQsD,SACLE,GAASC,IAqChBuO,EAAUhY,EAAO,MAAOlC,EAAQwL,QAChCE,EAAOyO,GAAY,GACnBxO,EAAOwO,GAAY,GACnBF,GAAU,EACV7Z,EAAO8Z,EAAS,CAACxO,EAAMC,IACvBlL,EAAOyZ,EAASjZ,EAAyB,WAAnBiH,EAAQsD,QAAuByC,EAAS6D,QAAU7K,EAAQ8F,SAtC5ErB,GAAQC,EACV,GAAKH,EAAOE,KASVjJ,EAAQyX,GAA4B,IAAnBhS,EAAQsD,OAAmB,OAAS,QATrC,CAChB,MAAM5C,GAAEA,GAAOqF,EAASC,MACxBnM,EAAa2J,EAAMM,GAAepD,GAClC7G,EAAa4J,EAAMK,GAAepD,GAClC4C,EAAOE,KAAOA,EACdF,EAAOG,KAAOA,EAgBpB,WACE,MAAMwM,GAAEA,GAAO9E,EACfvL,EAAG,CAAC9B,GAAeG,GAAaI,GAAeD,GAAeM,IAAiBoC,GAC/ExI,EAAKmL,EAAM,SAAS,KAClBwM,EAAG,KAAK,MAEV3X,EAAKkL,EAAM,SAAS,KAClByM,EAAG,KAAK,MAtBNiC,GACAnS,EAvkCqB,iBAukCMyD,EAAMC,IAgCvC,SAASwO,EAAYE,GAEnB,OAAOrX,EADO,kBAAkBhD,EAAQyL,SAAS4O,EAAQra,EAAQ0L,KAAO1L,EAAQ2L,mHAA8HzD,EAAQoS,WA/D7M,+FAkEX,SAAStR,IACP,MAAM2D,EAAQ1F,EAAQ0F,MAChB+L,EAAYrF,EAAW8F,UACvBoB,EAAYlH,EAAW4F,UACvBuB,EAAY9B,GAAa,GAAK/L,EAAQ+L,EAAY9J,EAAK6L,KAAO7L,EAAKlD,KACnEgP,EAAYH,GAAa,GAAK5N,EAAQ4N,EAAY3L,EAAK+L,MAAQ/L,EAAKjD,KAC1ED,EAAKkP,SAAWlC,EAAY,EAC5B/M,EAAKiP,SAAWL,EAAY,EAC5BxY,EAAa2J,EAAMQ,GAAYsO,GAC/BzY,EAAa4J,EAAMO,GAAYwO,GAC/BzS,EApnCyB,iBAonCEyD,EAAMC,EAAM+M,EAAW6B,GAEpD,MAAO,CACL/O,OAAAA,EACAiD,MApEF,WACES,IACApH,EAAGvB,GAAe2I,IAmElBvH,QA7CF,WACMsS,EACFrd,EAAOsd,IAEPtY,EAAgB8J,EAAMY,IACtB1K,EAAgB+J,EAAMW,QAirB1BuO,SAroBF,SAAkB5T,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,IACpCgH,SAAEA,GAAakC,EACf9H,EAAWD,GAAgBF,EAAQG,SAAUpB,EAAQkR,GAAG3X,KAAKyG,EAAS,MAgE5E,SAAgB4B,GACd,MAAMqJ,IAAEA,GAAQjE,EACZiE,GACF7P,EAAM6P,EAAK,QAAmB,IAAPrJ,EAAH,KAEtBZ,EAhsC2B,mBAgsCEY,OApEzBU,SAAEA,GAAalB,EACrB,IAAIyS,EACAC,EACAjS,EAYJ,SAASkS,EAAWC,GAClB,MAAM3Y,EAAO2Y,EAAW,QAAU,OAC5BC,EAASjN,EAAS3L,GACpB4Y,IACFnZ,EAAamZ,EAAQlP,GAAeiC,EAASC,MAAMtF,IACnD7G,EAAamZ,EAAQhP,GAAYhE,EAAQ0G,KAAKtM,IAC9C9B,EAAK0a,EAAQ,QAASD,EAAW/R,EAAQiJ,IAmB7C,SAASA,IACH5I,KAAc4G,EAAYwC,OAAOmB,aACnCzL,EAAS1I,OAAOuI,EAAQiT,eACxBJ,EAAUD,EAAUhS,GAAS,EAC7Bb,EAzqCsB,kBA4qC1B,SAASiB,EAAMkS,GAAS,GACjB7R,MACHlB,EAASa,QACTjB,EA7qCuB,mBA+qCzBa,EAASsS,EAEX,SAASC,IACFvS,IACEgS,GAAYC,EAGf7R,GAAM,GAFNiJ,KAaN,MAAO,CACL1D,MAnEF,WACE,MAAMuD,SAAEA,GAAa9J,EACjB8J,IACFgJ,GAAW,GACXA,GAAW,GAgBf,WACE,MAAMjO,KAAEA,GAASkB,EACb/F,EAAQoT,cACV9a,EAAKuM,EAAM,yBAA0B1J,IACnCyX,EAAqB,eAAXzX,EAAE5G,KACZ4e,OAGAnT,EAAQqT,cACV/a,EAAKuM,EAAM,oBAAqB1J,IAC9B0X,EAAqB,YAAX1X,EAAE5G,KACZ4e,OAGJvT,EAAG,CAAC5B,GAAYS,GAAcL,IAAgB+B,EAASiB,QA7BrD8Q,GACiB,UAAbpI,GACFG,MA6DJxK,QAASU,EAASc,OAClBgJ,KAAAA,EACAjJ,MAAAA,EACAK,SAAAA,IAujBFiS,MAnjBF,SAAevU,EAASkJ,EAAajI,GACnC,MAAMJ,GAAEA,GAAOd,GAAeC,GAY9B,SAASyC,EAAM+R,GACbtL,EAAYwC,OAAO1V,SAAS8X,IAC1B,MAAMpB,EAAM1S,EAAM8T,EAAMzH,WAAayH,EAAMzJ,MAAO,OAC9CqI,GAAOA,EAAI+H,KACbC,EAAOF,EAAO9H,EAAKoB,MAIzB,SAAS4G,EAAOF,EAAO9H,EAAKoB,GAC1BA,EAAM1S,MAAM,aAAcoZ,EAAQ,+BAA+B9H,EAAI+H,QAAU,IAAI,GACnFjZ,EAAQkR,EAAK8H,EAAQ,OAAS,IAEhC,MAAO,CACLhN,MAxBF,WACMvG,EAAQuT,QACV3T,EAAGf,IAAuB,CAAC4M,EAAKoB,KAC9B4G,GAAO,EAAMhI,EAAKoB,MAEpBjN,EAAG,CAAC9B,GAAeO,GAAeD,IAAgBoD,EAAMlJ,KAAK,MAAM,MAoBrEmH,QAjBF,WACE+B,GAAM,MAyiBR6M,OA/gBF,SAAgBtP,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,IAC9BkP,KAAEA,GAAShG,GACX2G,YAAEA,EAAWQ,SAAEA,EAAQN,cAAEA,GAAkBb,EACjD,IAAI9N,EACAuT,EAKJ,SAASjD,EAAOC,EAAanP,EAAUtF,EAAU0X,GAC/C,MAAMlc,EAAQmX,IACd,IAAIgF,EAAW,EA+BjB,IAAyBxM,EA9BvB7F,EAAWA,IA8BY6F,EA9BgB1K,GAAIgU,EAAcjZ,GA+BlD8E,EAAI6K,EA/CO,IACD,MAgBjBsM,EAAiBzX,EACjB4X,IACA1T,EAAWD,GAAgBqB,EAAUuS,GAAanT,IAChD,MAAM8N,EAAWG,IAEXvH,GADS5P,GAASiZ,EAAcjZ,GAuC1C,SAAgBsc,GACd,MAAMC,WAAEA,GAAehU,EACvB,OAAOgU,EAAaA,EAAWD,GAAK,EAAIpX,KAAKsX,IAAI,EAAIF,EAAG,GAzCPG,CAAOvT,GAC/BiO,KAAiBgF,EAY5C,IAAgB1E,EAXZjB,EAAKM,UAAUE,EAAWpH,GACtBtI,EAAQ8G,GAAGxB,MAAWsP,GAAsB7E,MAC9C8E,GA1BgB,GA2BZlX,GAAI2K,GA7Bc,KAqCZ6H,EAPDJ,GAAc,GAQ3B2B,EAAOrB,GAAUF,GArCG,IAqC0B,MAAM,OALjD,GACHnP,EAAKtB,IACL0B,EAAS1I,QAKX,SAASqc,IACP,MAAMrF,EAAWG,IACXnK,EAAQwJ,EAAK7C,QAAQqD,GACtB7R,GAAQ6H,EAAO,EAAG1F,EAAQ3M,OAAS,IACtC6b,EAAKM,UAAUN,EAAKe,MAAMP,EAAUhK,EAAQ,IAAI,GAElDiP,GAAkBA,IAClB3T,EAAKrB,IAKP,SAASmV,IACH1T,GACFA,EAASc,SAGb,SAASA,IACHd,IAAaA,EAASkB,aACxBwS,IACAC,KAOJ,MAAO,CACLvN,MAxDF,WACE3G,EAAG5B,GAAY6V,GACfjU,EAAG,CAACvB,GAAeD,IAAgB6C,IAuDnCxB,QAASoU,EACTpD,OAAAA,EACAxP,OAAAA,IA+cFkT,KArcF,SAAcpV,EAASkJ,EAAajI,GAClC,MAAMJ,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,EAAI4G,OAAEA,GAAWJ,GAAeC,IAC5CkP,KAAEA,EAAII,OAAEA,EAAMlD,WAAEA,GAAelD,GAC/BjC,MAAEA,GAAUiC,EAAYlC,UACxBf,QAAEA,EAAOyE,OAAEA,GAAWxB,EAAYhD,WAClC2J,YAAEA,EAAWE,cAAEA,GAAkBb,EACjCmG,EAAkB,CAAEC,SAAS,EAAOC,SAAS,GACnD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAnC,EACAzgB,EAHA6iB,GAAc,EAYlB,SAAS9N,IACP,MAAMuD,KAAEA,GAASvK,EACjB+U,GAASxK,GACToK,EAAkB,SAATpK,EAEX,SAASyK,EAAc7Z,GACrB,IAAKuX,EAAU,CACb,MAAMuC,OAAEA,GAAWjV,EACbkV,EAAUC,EAAaha,MACR8Z,GAAUpe,EAAcsE,EAAElJ,UAAYiB,EAAQiI,EAAElJ,OAAQgjB,MACzDC,GAAY/Z,EAAE6X,SAC3B/E,EAAKG,SAWRlT,EAAQC,GAAG,IAVXlJ,EAASijB,EAAUlP,EAAQhT,OAC3ByhB,EAAgB,KAChBC,EAAY,KACZG,GAAiB,EACjBvc,EAAKrG,EAAQqV,GAAqB8N,EAAehB,GACjD9b,EAAKrG,EAAQsV,GAAmB8N,EAAajB,GAC7CnG,EAAKhN,SACLoN,EAAOpN,SACPqU,EAAKna,MAOb,SAASia,EAAcja,GAKrB,GAJKuZ,GACH3U,EA73Ca,QA+3Cf2U,EAAYvZ,EACRA,EAAEoa,WAAY,CAChB,MAAMlO,EAAOmO,EAAQra,GAAKqa,EAAQhB,GAClC,GAAII,EAAU,CACZ3G,EAAKM,UAAUgG,EA2ErB,SAAmBlN,GACjB,OAAOA,GAAQyN,GAAe/V,EAAQ8G,GAAGxB,IA9I5B,EA8IgD,GA5E3BoR,CAAUpO,IACxC,MAAMqO,EAAUC,EAAOxa,GAAKwa,EAAOnB,GAlEtB,IAmEPoB,EAAWd,KAAiBA,EAAchG,MAC5C4G,GAAWE,IACbN,EAAKna,GAEP4E,EAx4Ce,YAy4Cf8U,GAAiB,EACjB3Z,EAAQC,OACH,CACL,IAAM0a,iBAAkBC,GAAe9V,EACvC8V,EAAaxf,EAASwf,GAAcA,EAAa,CAAEC,MAAO,EAAGC,OAAQF,GAAc,IACnFlB,EAAWlY,GAAI2K,IAAS8N,EAAaha,GAAK2a,EAAWE,MAAQF,EAAWC,OACpEE,KACF/a,EAAQC,KAKhB,SAASka,EAAYla,GAGnB,GAFA+D,EAAOjN,EAAQqV,GAAqB8N,GACpClW,EAAOjN,EAAQsV,GAAmB8N,GAC9BX,EAAW,CACb,GAAIE,GAAYzZ,EAAEoa,YAAcU,IAAqB,CACnD,MAAMC,EA8BZ,SAAyB/a,GACvB,GAAI4D,EAAQ8G,GAAGvB,MAAUwQ,EAAa,CACpC,MAAMqB,EAAO3B,IAAcE,GAAaD,GAAiBD,EACnD4B,EAAYZ,EAAQd,GAAac,EAAQW,GACzCE,EAAWV,EAAOxa,GAAKwa,EAAOQ,GAC9BG,EAAUX,EAAOxa,GAAKwa,EAAOjB,GA5HpB,IA6Hf,GAAI2B,GAAYC,EACd,OAAOF,EAAYC,EAGvB,OAAO,EAxCcE,CAAgBpb,GAC3BuV,EAyCZ,SAA4BwF,GAC1B,OAAOtH,IAAgBtR,GAAK4Y,GAAY5Z,EAAII,GAAIwZ,IAAalW,EAAQwW,YAAc,KAAM7B,EAASxE,EAAAA,EAAWlI,EAAY4D,OAAOmB,YAAchN,EAAQgO,eAAiB,IA1C/IyI,CAAmBP,GACnCvB,EACFxJ,EAAWsF,OAAOC,GACT3R,EAAQ8G,GAAGtB,IACpB4G,EAAW8E,GAAGlR,EAAQ0F,MAAQgF,EAAOnM,GAAK4Y,KAE1C/K,EAAW8E,GAAG9E,EAAW0F,OAAOH,IAAc,GAEhDxV,EAAQC,GAEV4E,EAp6CgB,WAs6ClB6U,GAAW,EAEb,SAASU,EAAKna,GACZsZ,EAAgBD,EAChBA,EAAYrZ,EACZoZ,EAAe3F,IAEjB,SAAS8H,EAAQvb,IACVuX,GAAYmC,GACf3Z,EAAQC,GAAG,GAGf,SAAS8a,IAGP,OAFcvZ,GAAI8Y,EAAQd,GAAac,EAAQhB,IACjC9X,GAAI8Y,EAAQd,GAAW,GAAQc,EAAQhB,GAAW,IAkBlE,SAASgB,EAAQra,EAAGwb,GAClB,OAAQxB,EAAaha,GAAKA,EAAEyb,QAAQ,GAAKzb,GAAG,OAAO6J,EAAQ2R,EAAa,IAAM,QAEhF,SAAShB,EAAOxa,GACd,OAAOA,EAAE0b,UAKX,SAAS1B,EAAaha,GACpB,MAA6B,oBAAf2b,YAA8B3b,aAAa2b,WAK3D,SAAS/B,EAAQjiB,GACf4f,EAAW5f,EAEb,MAAO,CACLyT,MAnIF,WACEjO,EAAK0N,EAAOsB,GAAqBpL,EAAMkY,GACvC9b,EAAK0N,EAAOuB,GAAmBrL,EAAMkY,GACrC9b,EAAK0N,EAxBmB,uBAwBSgP,EAAeZ,GAChD9b,EAAK0N,EAAO,QAAS0Q,EAAS,CAAEpC,SAAS,IACzChc,EAAK0N,EAAO,YAAa9K,GACzB0E,EAAG,CAAC9B,GAAeO,IAAgB2I,IA8HnC+N,QAAAA,EACAgC,WATF,WACE,OAAOnC,KAwTToC,SA3SF,SAAkBjY,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAI4G,OAAEA,GAAWJ,GAAeC,IACtC8F,KAAEA,GAASoD,EAAYlC,UACvBf,QAAEA,GAAYiD,EAAYhD,UAChC,IAAIhT,EAQJ,SAAS+U,IACP,MAAMiQ,SAAEA,EAAW,UAAajX,EAC5BiX,IACe,YAAbA,GACFhlB,EAAS4S,EACThL,EAAagL,EAAMX,GAAW,IAE9BjS,EAASe,OAEXsF,EAAKrG,EAAQ,UAAWilB,IAG5B,SAASzX,IACPP,EAAOjN,EAAQ,WACX4E,EAAc5E,IAChByH,EAAgBzH,EAAQiS,IAG5B,SAASgT,EAAU/b,GACjB,MAAMxI,IAAEA,GAAQwI,EACVgc,EAAgB/iB,EAASoT,GAAe7U,GAAO,QAAQA,IAAQA,EACjEwkB,IAAkBnS,EAAQ,aAC5BjG,EAAQkR,GAAG,KACFkH,IAAkBnS,EAAQ,eACnCjG,EAAQkR,GAAG,KAGf,MAAO,CACL1J,MAnCF,WACES,IACApH,EAAGvB,IAAe,KAChBoB,IACAuH,QAgCFvH,QAAAA,IAmQF2X,SA3PF,SAAkBrY,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,EAAEE,IAAEA,EAAGxH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,GACzCsY,EAAoC,eAArBrX,EAAQsX,SAC7B,IAAI9L,EAAS,GACT/G,EAAQ,EA6BZ,SAAShF,IACPgF,EAAQ,EACR+G,EAAS,GAEX,SAAS/V,IACP+V,EAASA,EAAO1S,QAAQ4G,IACtB,MAAM0H,EAAWpH,EAAQsL,UAAYtL,EAAQuX,cAAgB,GAAK,GAAK,EACvE,OAAI7X,EAAK8X,OAAOtQ,SAASnI,EAAQ0F,MAAO2C,IAC/BqQ,EAAK/X,MAIX8L,EAAOpZ,QACV0N,EAAI7B,IAGR,SAASwZ,EAAK/X,GACZ,MAAMgY,KAAEA,GAAShY,EACjB1H,EAAS0H,EAAK8X,OAAOpU,MAAOH,IAC5B3K,EAAKof,EAAM,cAAevc,KAU5B,SAAgBuE,EAAMiY,GACpB,MAAMH,OAAEA,GAAW9X,EACnBhE,EAAY8b,EAAOpU,MAAOH,IACrB0U,IACHjjB,EAAOgL,EAAKkY,UACZrd,EAAQmF,EAAKgY,KAAM,IACnB3X,EAAKlB,GAAuBa,EAAKgY,KAAMF,GACvCzX,EAAKzB,KAEH+Y,GACFQ,IAnBAC,CAAOpY,EAAiB,UAAXvE,EAAE5G,SAEjB,CAAC,MAAO,UAAUQ,SAASgD,IACrB2H,EAAK3H,KACP8B,EAAa6d,EAAM3f,EAAM2H,EAAK3H,IAC9B2B,EAAgBge,EAAe,QAAT3f,EAAiB0P,GAAqBC,QAiBlE,SAASmQ,IACHpT,EAAQ+G,EAAOpZ,QACjBqlB,EAAKjM,EAAO/G,MAGhB,MAAO,CACL8B,MA5EF,WACMvG,EAAQsX,WACV1X,EAAG,CAAC9B,GAAeM,KAAgB,KACjCqB,IASJwI,EAAYwC,OAAO1V,SAASyiB,IAC1B/b,EAAS+b,EAAOpU,MAAOuE,IAAgB5S,SAAS2iB,IAC9C,MAAMlE,EAAM1f,EAAa4jB,EAAMjQ,IACzBsQ,EAASjkB,EAAa4jB,EAAMhQ,IAClC,GAAI8L,IAAQkE,EAAKlE,KAAOuE,IAAWL,EAAKK,OAAQ,CAC9C,MAAMH,EAAW5d,EAAO,OAAQgG,EAAQlI,QAAQ8L,QAAS8T,EAAKM,eAC9Dne,EAAa+d,EAAU/T,GAAM,gBAC7B2H,EAAOrU,KAAK,CAAEugB,KAAAA,EAAMF,OAAAA,EAAQhE,IAAAA,EAAKuE,OAAAA,EAAQH,SAAAA,KACxCF,EAAKlE,KAAOjZ,EAAQmd,EAAM,eAI7BL,GACFQ,OAnBKR,GACHzX,EAAG,CAAC9B,GAAeM,GAAeH,IAAcxI,KAsEpDgK,QAAAA,IA0KFwY,WAtKF,SAAoBlZ,EAASkJ,EAAajI,GACxC,MAAMJ,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,EAAI4G,OAAEA,GAAWJ,GAAeC,IAC5C0L,OAAEA,EAAM1E,SAAEA,EAAQoF,WAAEA,GAAelD,GACnCoD,SAAEA,EAAQwG,SAAEA,GAAa1G,EACzB/T,EAAQ,GACd,IAAIyS,EAMJ,SAAS7C,IACPvH,IACIO,EAAQ0D,YAAc+G,EAAOmB,cAgBnC,WACE,MAAMxZ,OAAEA,GAAW2M,GACbjH,QAAEA,EAAO4O,KAAEA,EAAI4E,QAAEA,GAAYtL,EAC7B7H,EAAgC,WAAvB6H,EAAQ0D,YAA2BqC,EAAS6D,QAAU7D,EAASlB,KACxEtI,EAAM8O,IAAajZ,EAASqK,EAAKrK,EAASkZ,GAChDzB,EAAO7P,EAAO,KAAMlC,EAAQ4L,WAAYvL,GACxC,IAAK,IAAIhG,EAAI,EAAGA,EAAIoK,EAAKpK,IAAK,CAC5B,MAAM+lB,EAAKle,EAAO,KAAM,KAAM6P,GACxBmJ,EAAShZ,EAAO,SAAU,CAAEme,MAAOrgB,EAAQ6L,KAAMpP,KAAM,UAAY2jB,GACnEtR,EAAW6D,EAAOS,MAAM/Y,GAAGqB,KAAKqZ,GAAUA,EAAMzJ,MAAM1C,KACtD0X,GAAQ/M,KAAcC,EAAU,EAAI5E,EAAK2R,MAAQ3R,EAAKC,OAC5DrO,EAAK0a,EAAQ,QAAS0D,EAAQpe,KAAK,KAAMnG,IACzC0H,EAAamZ,EAAQlP,GAAe8C,EAASG,KAAK,MAClDlN,EAAamZ,EAAQhP,GAAYzG,GAAO6a,EAAMjmB,EAAI,IAClDiF,EAAMD,KAAK,CAAE+gB,GAAAA,EAAIlF,OAAAA,EAAQrP,KAAMxR,KA7B/BmmB,GACAvY,EAhnD2B,qBAgnDI,CAAE8J,KAAAA,EAAMzS,MAAAA,GAASmU,EAAMxM,EAAQ0F,QAC9D3D,KAGJ,SAASrB,IACHoK,IACFnV,EAAOmV,GACPzS,EAAMrC,SAASwT,IACbrJ,EAAOqJ,EAAKyK,OAAQ,YAEtB5c,EAAMgB,GACNyS,EAAO,MAoBX,SAAS6M,EAAQ/S,GACfwH,EAAW8E,GAAG,IAAItM,KAAQ,GAAM,KAC9B,MAAMkJ,EAAQpC,EAAOc,MAAMJ,EAAWC,QAAQzH,IAl1DpD,IAAe9L,EAm1DTgV,KAn1DShV,EAm1DMgV,EAAMzJ,OAl1DV,WAAKvL,EAAe,aAAOA,EAAI0X,MAAM,CAAEgJ,eAAe,QAq1DrE,SAAShN,EAAM9G,GACb,OAAOrN,EAAM+T,EAAWkG,OAAO5M,IAEjC,SAAS3D,IACP,MAAM0C,EAAO+H,EAAMsG,GAAS,IACtB2G,EAAOjN,EAAMsG,KACfrO,IACF9H,EAAY8H,EAAKwP,OAAQnQ,IACzBnJ,EAAgB8J,EAAKwP,OAAQjP,KAE3ByU,IACFxgB,EAASwgB,EAAKxF,OAAQnQ,IACtBhJ,EAAa2e,EAAKxF,OAAQjP,IAAc,IAE1ChE,EAlqD6B,qBAkqDE,CAAE8J,KAAAA,EAAMzS,MAAAA,GAASoM,EAAMgV,GAExD,MAAO,CACLphB,MAAAA,EACAmP,MAhEF,WACES,IACApH,EAAG,CAACvB,GAAeD,IAAgB4I,GACnCpH,EAAG,CAAC5B,GAAYU,IAAiBoC,IA8DjCrB,QAAAA,EACA8L,MAAAA,IA+FFkN,KA1FF,SAAc1Z,EAASkJ,EAAajI,GAClC,MAAM6G,QAAEA,GAAY9H,GACd8K,KAAEA,GAAS5B,EAAYlC,SAiC7B,SAASjF,IACPjH,EAAagQ,EAAM1F,GAAkBnE,EAAQwJ,YAAc/H,GAAM,aAAe,MAElF,SAASiV,EAAQ7J,GACf9N,EAAQkR,GAAGpD,EAAMpI,OAEnB,SAASyS,EAAUrK,EAAO1R,GACpB/G,EAASwT,GAAczM,EAAExI,OAC3B+jB,EAAQ7J,GACR3R,EAAQC,IAGZ,MAAO,CACLoL,MA7CF,WACMvG,EAAQ8E,aAuBd,WACE,MAAMlF,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,GACpCa,EAAG1B,GAAawY,GAChB9W,EAAGzB,GAAqB+Y,GACxBtX,EAAG,CAAC9B,GAAeO,IAAgByC,GACnCjH,EAAagQ,EAAMhG,GAAM,QACzB9D,EAAKnB,GAA0BG,EAAQ8H,SA5BrC6R,GAQJ,WACE,MAAMC,EAAY,GAClB9R,EAAQ+R,OAAO7Z,GAAShK,SAAQ,CAAC+R,EAAQrC,EAAOoU,KAC9C/Z,GAAegI,GAAQlH,GAAG5B,IAAY,CAAC8a,EAAQtV,EAAMgC,KACnDqT,EAAU9jB,SAASlD,IACbA,IAAaiV,GAAW1S,EAASukB,EAAW7R,KAC9C6R,EAAUxhB,KAAKtF,GACfA,EAASoe,GAAGpe,EAASgU,GAAGvB,IAAQkB,EAAOsT,OAG3C1iB,EAAMuiB,SAhBRI,IA0CFtZ,QAvCF,WACE/F,EAAgBmQ,EAAMzF,OAgFxB4U,MAtCF,SAAeja,EAASkJ,EAAajI,GACnC,MAAM1H,KAAEA,GAASwG,GAAeC,GAMhC,SAASka,EAAQ9d,GACf,MAAM+d,OAAEA,GAAW/d,EACf+d,IACFna,EAAQkR,GAAGiJ,EAAS,EAAI,IAAM,KAC9Bhe,EAAQC,IAGZ,MAAO,CACLoL,MAbF,WACMvG,EAAQmZ,OACV7gB,EAAK2P,EAAYlC,SAASC,MAAO,QAASiT,EAAS,CAAE5E,SAAS,EAAOC,SAAS,SAqCpF,MAWM8E,GAAW,CACf7kB,KAAM,QACNqd,MAAO,IACP7B,mBAAmB,EACnBzE,QAAS,EACThI,QAAQ,EACRI,YAAY,EACZvD,SAAU,IACViT,cAAc,EACdC,cAAc,EACdJ,eAAe,EACfiB,OAAQ,gCACR3J,MAAM,EACNf,UAAW,MACXlD,YAAY,EACZmJ,WAAW,EACXpK,eAAgB,6CAChBvN,QAASqL,GACTuD,KA7BW,CACXlD,KAAM,iBACNC,KAAM,aACNgP,MAAO,oBACPF,KAAM,mBACN5L,OAAQ,iBACR0R,MAAO,gBACPpO,KAAM,iBACNjJ,MAAO,mBAwBT,SAASqY,GAAKta,EAASkJ,EAAajI,GAClC,MAAMJ,GAAEA,GAAOd,GAAeC,GAgB9B,MAAO,CACLwH,MAhBF,WACE3G,EAAG,CAAC9B,GAAeM,KAAgB,KACjCpC,GAAS,KACPiM,EAAYwC,OAAOtQ,MAAM,aAAc,WAAW6F,EAAQ4R,WAAW5R,EAAQkU,iBAcjFzc,MAVF,SAAegN,EAAO6U,GACpB,MAAMtT,MAAEA,GAAUiC,EAAYlC,SAC9B5L,EAAM6L,EAAO,SAAUrK,EAAKf,EAAKoL,GAAO7Q,SACxC6G,GAAS,KACPsd,IACAnf,EAAM6L,EAAO,SAAU,QAMzB/E,OAAQ/E,GAIZ,SAAS2Q,GAAM9N,EAASkJ,EAAajI,GACnC,MAAM1H,KAAEA,GAASwG,GAAeC,IAC1BkP,KAAEA,EAAI9C,WAAEA,GAAelD,GACvB4B,KAAEA,GAAS5B,EAAYlC,SAC7B,IAAIwT,EAsBJ,SAAStY,IACPO,EAAM,IAaR,SAASA,EAAMgY,GACbrf,EAAM0P,EAAM,aAAc2P,GAE5B,MAAO,CACLjT,MAvCF,WACEjO,EAAKuR,EAAM,iBAAkB1O,IACvBA,EAAElJ,SAAW4X,GAAQ0P,IACvBtY,IACAsY,SAoCJ9hB,MAhCF,SAAegN,EAAO6U,GACpB,MAAM5I,EAAczC,EAAKO,WAAW/J,GAAO,GACrCgK,EAAWR,EAAKW,cAChBgD,EAaR,SAAkBnN,GAChB,MAAMgV,YAAEA,GAAgBzZ,EACxB,GAAIjB,EAAQ8G,GAAGxB,KAAUoV,EAAa,CACpC,MAAMjW,EAAO2H,EAAW0G,UAAS,GAC3Bna,EAAMyT,EAAWwE,SACvB,GAAa,IAATnM,GAAciB,GAAS/M,GAAO8L,GAAQ9L,GAAiB,IAAV+M,EAC/C,OAAOgV,EAGX,OAAOzZ,EAAQ4R,MAtBD8H,CAASjV,GACnB/H,GAAIgU,EAAcjC,IAAa,GAAKmD,GAAS,GAC/CpQ,EAAM,aAAaoQ,OAAW5R,EAAQkU,UACtCjG,EAAKM,UAAUmC,GAAa,GAC5B6I,EAAcD,IAEdrL,EAAKK,KAAK7J,GACV6U,MAuBFrY,OAAAA,GAIJ,MAAM0Y,GAAU,MACdC,YAAY3nB,EAAQ+N,GAClB1M,KAAK0L,MAj8DT,WACE,IAAI6a,EAAW,GAaf,SAAS/Z,EAAIV,EAAQzM,GACnB0M,EAAaD,GAAQ,CAACJ,EAAO8a,KAC3B,MAAMC,EAAgBF,EAAS7a,GAC/B6a,EAAS7a,GAAS+a,GAAiBA,EAAcjhB,QAAQkhB,GAChDA,EAAQC,KAAOD,EAAQC,OAAStnB,EAAMA,GAAOqnB,EAAQE,aAAeJ,OAiBjF,SAASza,EAAaD,EAAQnI,GAC5BF,EAAQqI,GAAQ2H,KAAK,KAAK9O,MAAM,KAAKlD,SAASolB,IAC5C,MAAMC,EAAYD,EAAQliB,MAAM,KAChChB,EAASmjB,EAAU,GAAIA,EAAU,OAGrC,MAAO,CACLxa,GAxCF,SAAYR,EAAQnD,EAAUtJ,EAAKkN,EA3SN,IA4S3BR,EAAaD,GAAQ,CAACJ,EAAO8a,KAC3BD,EAAS7a,GAAS6a,EAAS7a,IAAU,GACrC7H,EAAK0iB,EAAS7a,GAAQ,CACpBqb,OAAQrb,EACRsb,UAAWre,EACXie,WAAYJ,EACZS,UAAW1a,EACXoa,KAAMtnB,IACLyW,MAAK,CAACoR,EAAUC,IAAaD,EAASD,UAAYE,EAASF,gBAgChEza,IAAAA,EACAH,MAtBF,SAAehN,GACbsG,EAAO4gB,GAAU,CAACE,EAAe/a,KAC/Bc,EAAId,EAAOrM,OAqBboN,KAlBF,SAAcf,IACX6a,EAAS7a,IAAU,IAAIjK,SAASilB,IAC/BA,EAAQM,UAAU9Y,MAAMwY,EAASziB,EAAMgC,UAAW,QAiBpDkG,QAdF,WACEoa,EAAW,KAg6DEa,GACbpnB,KAAKsR,WAAa,GAClBtR,KAAKuV,MAnwDT,SAAe8R,GACb,IAAI9R,EAAQ8R,EAOZ,MAAO,CAAE9K,IANT,SAAa/c,GACX+V,EAAQ/V,GAKI+S,GAHd,SAAY+U,GACV,OAAOxmB,EAAS2C,EAAQ6jB,GAAS/R,KA6vDpBgS,CAzvED,GA0vEZvnB,KAAKuT,QAAU,GACfvT,KAAKwnB,SAAW,GAChBxnB,KAAKynB,YAAc,GACnB,MAAMlW,EAAOlO,EAAS1E,GAAUsJ,EAAM/G,SAAUvC,GAAUA,EAC1D2J,EAAOiJ,EAAM,GAAGA,iBAChBvR,KAAKuR,KAAOA,EACZpL,EAAM2f,GAAUO,GAAQqB,UACxBvhB,EAAMA,EAAMnG,KAAKwnB,SAAU1B,IAAWpZ,GAAW,IAEnD4Z,MAAMqB,EAAYjL,GAChB,MAAMnH,MAAEA,EAAOjE,WAAYqD,GAAgB3U,KAC3CsI,EAAOiN,EAAMhD,GAAG,CArwEJ,EAIE,IAiwEyB,oBACvCgD,EAAMgH,IAtwEM,GAuwEZvc,KAAK4nB,YAAcjT,EACnB3U,KAAK6nB,YAAcnL,GAAc1c,KAAK6nB,cAAgB7nB,KAAKuS,GAAGtB,IAAQ8U,GAAOxM,IAC7EvZ,KAAKynB,YAAcE,GAAc3nB,KAAKynB,YActC,OAZA9hB,EADqBK,EAAO,GAAIuO,GAAuBvU,KAAKynB,YAAa,CAAE/K,WAAY1c,KAAK6nB,eACvE,CAACC,EAAWzoB,KAC/B,MAAM0oB,EAAYD,EAAU9nB,KAAM2U,EAAa3U,KAAKwnB,UACpD7S,EAAYtV,GAAO0oB,EACnBA,EAAUtS,OAASsS,EAAUtS,WAE/B9P,EAAOgP,GAAcoT,IACnBA,EAAU9U,OAAS8U,EAAU9U,WAE/BjT,KAAKyM,KAAKjC,IACV9F,EAAS1E,KAAKuR,KAvpDQ,kBAwpDtBgE,EAAMgH,IAnxEG,GAoxETvc,KAAKyM,KAAKhC,IACHzK,KAETsmB,KAAK9S,GAGH,OAFAxT,KAAKuT,QAAQ1P,KAAK2P,GAClBA,EAAOD,QAAQ1P,KAAK7D,MACbA,KAETsmB,GAAGrI,GAED,OADAje,KAAK4nB,YAAY/P,WAAW8E,GAAGsB,GACxBje,KAETsmB,GAAGxa,EAAQnD,GAET,OADA3I,KAAK0L,MAAMY,GAAGR,EAAQnD,EAAU,KArxEA,IAsxEzB3I,KAETsmB,IAAIxa,GAEF,OADA9L,KAAK0L,MAAMc,IAAIV,GACR9L,KAETsmB,KAAK5a,GAEH,OADA1L,KAAK0L,MAAMe,KAAKf,KAAUzH,EAAMgC,UAAW,IACpCjG,KAETsmB,IAAIjQ,EAAQlF,GAEV,OADAnR,KAAK4nB,YAAYzQ,OAAOxW,IAAI0V,EAAQlF,GAC7BnR,KAETsmB,OAAO5O,GAEL,OADA1X,KAAK4nB,YAAYzQ,OAAO/V,OAAOsW,GACxB1X,KAETsmB,GAAGrlB,GACD,OAAOjB,KAAKwnB,SAASvmB,OAASA,EAEhCqlB,UAEE,OADAtmB,KAAKyM,KAAK3B,IACH9K,KAETsmB,QAAQtR,GAAa,GACnB,MAAMtJ,MAAEA,EAAK6J,MAAEA,GAAUvV,KAYzB,OAXIuV,EAAMhD,GA/zEE,GAg0EV7G,EAAMY,GAAG7B,GAAazK,KAAKmM,QAAQnH,KAAKhF,KAAMgV,GAAahV,OAE3D2F,EAAO3F,KAAK4nB,aAAcG,IACxBA,EAAU5b,SAAW4b,EAAU5b,QAAQ6I,MACtC,GACHtJ,EAAMe,KAAKpB,IACXK,EAAMS,UACN6I,GAAclS,EAAM9C,KAAKuT,SACzBgC,EAAMgH,IAp0EM,IAs0EPvc,KAET0M,cACE,OAAO1M,KAAKwnB,SAEd9a,YAAYA,GACV,MAAM8a,SAAEA,GAAaxnB,KACrBmG,EAAMqhB,EAAU9a,GACX1M,KAAKuV,MAAMhD,GAl1EJ,IAm1EVvS,KAAKyM,KAAK1B,GAAeyc,GAG7B1oB,aACE,OAAOkB,KAAK4nB,YAAYzQ,OAAOkB,WAAU,GAE3ClH,YACE,OAAOnR,KAAK4nB,YAAY/P,WAAW0G,aAGvC,IAAIyJ,GAAS3B,GACb2B,GAAON,SAAW,GAClBM,GAAOxlB,OAASA,ECr2EZtB,SAASgH,cAAc,cACzB,IAAI8f,GAAQ,YAAa,CACvB5X,YAAY,EACZnP,KAAM,QACN+W,QAAS,EACTiF,QAAS,EACTlE,IAAK,GACLzD,YAAa,CACX2S,IAAK,CACHjQ,QAAS,EACTe,IAAK,GACLI,QAAS,CAAEtT,MAAO,GAAI8I,KAAM,KAE9BuZ,IAAK,CACHlQ,QAAS,EACTe,IAAK,GACLI,QAAS,CAAEtT,MAAO,GAAI8I,KAAM,KAE9BwZ,KAAM,CACJnQ,QAAS,EACTe,IAAK,GACLI,QAAS,CAAEtT,MAAO,EAAG8I,KAAM,IAE7ByZ,KAAM,CACJpQ,QAAS,EACTe,IAAK,OAGP9F,QAGF/R,SAASgH,cAAc,kBACzB,IAAI8f,GAAQ,gBAAiB,CAC3B5X,YAAY,EACZnP,KAAM,QACN+W,QAAS,EACTiF,QAAS,EACTlE,IAAK,GACLzD,YAAa,CACX2S,IAAK,CACHjQ,QAAS,EACTe,IAAK,IAEPmP,IAAK,CACHlQ,QAAS,EACTe,IAAK,IAEPoP,KAAM,CACJnQ,QAAS,EACTe,IAAK,IAEPqP,KAAM,CACJpQ,QAAS,EACTe,IAAK,OAGP9F,QC7BN,IArBMoV,WACJ,SAAAA,IAAc,IAAAtoB,EAAAC,KAGZ,GAHY1B,EAAA0B,KAAAqoB,GACZroB,KAAKoW,SAAWlV,SAASI,iBALZ,uBAORtB,KAAKoW,SACR,OAAO,EAGTpW,KAAKoW,SAAS3U,SAAQ,SAACC,GACrBA,EAAGiL,iBAAiB,QAAS5M,EAAKuoB,WAAW,MJCjD,IAAsB9pB,EAAa+pB,EAAYC,EAglF7C,OAhlFoBhqB,EAukFP6pB,GAvkFoBE,EAukFT,CAAC,CACvBlpB,IAAK,YACLG,MItkFJ,SAAUqI,GACR3G,SAASC,KAAKT,UAAUyf,OAhBP,eAiBjBjf,SAASC,KAAKT,UAAUyf,OAAO,QAE/BtY,EAAEE,sBJNcrJ,EAAkBF,EAAYwF,UAAWukB,GACrDC,GAAa9pB,EAAkBF,EAAagqB,GA8kFzCH,EI1lFLA,IJ+lFJ,IAAII,GAAuC,oBAAfC,WAA6BA,WAA+B,oBAAXhpB,OAAyBA,OAA2B,oBAAXipB,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAO,GAE7L,SAASC,GAAe/e,GACvB,OAAOA,GAAKA,EAAEgf,YAAc3pB,OAAO6E,UAAU+kB,eAAe1kB,KAAKyF,EAAG,WAAaA,EAAW,QAAIA,EAGjG,SAASkf,GAAqBC,EAAIC,GACjC,OAAiCD,EAA1BC,EAAS,CAAEC,QAAS,IAAiBD,EAAOC,SAAUD,EAAOC,QK7mFvE,IL81IuBN,GA1uDQG,IAAqB,SAAUE,EAAQC,GMzmFtE,SAASC,EAAQ7pB,GAAmV,OAAtO6pB,EAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiB/pB,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAX8pB,QAAyB9pB,EAAIgqB,cAAgBF,QAAU9pB,IAAQ8pB,OAAOrlB,UAAY,gBAAkBzE,IAAyBA,GAEnX,SAASiqB,EAA2BC,EAAGC,GAAkB,IAAIC,EAAuB,oBAAXN,QAA0BI,EAAEJ,OAAOC,WAAaG,EAAE,cAAe,IAAKE,EAAI,CAAE,GAAIvmB,MAAMD,QAAQsmB,KAAOE,EAE9K,SAAqCF,EAAGG,GAAU,IAAKH,EAAG,OAAQ,GAAiB,iBAANA,EAAgB,OAAOI,EAAkBJ,EAAGG,GAAS,IAAI7T,EAAI5W,OAAO6E,UAAU8lB,SAASzlB,KAAKolB,GAAGxlB,MAAM,GAAI,GAAc,WAAN8R,GAAkB0T,EAAEF,cAAaxT,EAAI0T,EAAEF,YAAY9kB,MAAM,GAAU,QAANsR,GAAqB,QAANA,EAAa,OAAO3S,MAAMyQ,KAAK4V,GAAI,GAAU,cAAN1T,GAAqB,2CAA2CgU,KAAKhU,GAAI,OAAO8T,EAAkBJ,EAAGG,GAFnOI,CAA4BP,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAE3qB,OAAqB,CAAM6qB,IAAIF,EAAIE,GAAI,IAAI9qB,EAAI,EAAOorB,EAAI,aAAiB,MAAO,CAAEC,EAAGD,EAAGlU,EAAG,WAAe,OAAIlX,GAAK4qB,EAAE3qB,OAAe,CAAEknB,MAAM,GAAe,CAAEA,MAAM,EAAOxmB,MAAOiqB,EAAE5qB,OAAWgJ,EAAG,SAAWsiB,GAAM,MAAMA,GAAOC,EAAGH,GAAO,MAAM,IAAIxrB,UAAU,yIAA4I,IAA6C4rB,EAAzCC,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEL,EAAG,WAAeP,EAAKA,EAAGtlB,KAAKolB,IAAO1T,EAAG,WAAe,IAAIyU,EAAOb,EAAGxZ,OAAsC,OAA9Bma,EAAmBE,EAAKxE,KAAawE,GAAS3iB,EAAG,SAAW4iB,GAAOF,GAAS,EAAMF,EAAMI,GAAQL,EAAG,WAAe,IAAWE,GAAoC,MAAhBX,EAAW,QAAWA,EAAW,SAAM,QAAW,GAAIY,EAAQ,MAAMF,KAI/9B,SAASR,EAAkBa,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAI5rB,UAAQ6rB,EAAMD,EAAI5rB,QAAQ,IAAK,IAAID,EAAI,EAAG+rB,EAAO,IAAIxnB,MAAMunB,GAAM9rB,EAAI8rB,EAAK9rB,IAAO+rB,EAAK/rB,GAAK6rB,EAAI7rB,GAAM,OAAO+rB,EAIhL,SAASlsB,EAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAI7S,SAASO,EAAgBC,EAAKF,EAAKG,GAAiK,OAApJH,KAAOE,EAAOJ,OAAOC,eAAeG,EAAKF,EAAK,CAAEG,MAAOA,EAAOR,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBK,EAAIF,GAAOG,EAAgBD,EAnB3MJ,OAAOC,eAAe+pB,EAAS,aAAc,CAC3C3pB,OAAO,IAET2pB,EAAiB,aAAI,EAkBrB,IAAI0B,EAA8B,WAChC,SAASA,EAAezU,EAAU1J,GAChC,IAAI3M,EAAQC,KAiKZ,GA3KJ,SAAyBzB,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAY5GH,CAAgB0B,KAAM6qB,GAEtBvrB,EAAgBU,KAAM,iBAAkB,CACtC8qB,WAAY,OACZC,SAAS,EACTza,SAAS,EACT0a,KAAK,EACLC,QAAS,CAAC,WAAY,YACtBC,UAAU,EACVC,aAAc,EACdC,gBAAiB,MACjBC,YAAa,OACbC,aAAc,QACdC,gBAAiB,SACjBC,aAAc,GACdC,OAAO,EACPC,UAAW,UACXC,YAAY,EACZC,aAAa,EACbC,QAAS,wBACTC,gBAAgB,EAChBC,eAAgB,IAChBC,YAAY,EACZC,gBAAgB,EAChBtQ,MAAM,EACNuQ,KAAK,EACLC,UAAU,EACVC,eAAgB,GAChBhlB,UAAW,kBACXilB,WAAY,GACZjT,YAAa,GACbkT,mBAAmB,EACnBC,mBAAmB,EACnBC,eAAe,EACfC,YAAY,EACZC,kBAAmB,6CACnBC,gBAAgB,EAChBC,SAAS,EACTC,iBAAkB,EAClBC,cAAe,EACfC,QAAS,GACTC,UAAW,eACXC,KAAK,EACLC,WAAY,WACZC,UAAW,IACXC,cAAc,EACdnR,OAAO,EACPoR,YAAY,EACZC,iBAAkB,KAGpBhuB,EAAgBU,KAAM,wBAAoB,GAE1CV,EAAgBU,KAAM,gCAA4B,GAElDV,EAAgBU,KAAM,qBAAqB,GAE3CV,EAAgBU,KAAM,gBAAiB,iBAAkBN,QAEzDJ,EAAgBU,KAAM,gBAAiB,0BAA0B+pB,KAAKwD,UAAUC,WAEhFluB,EAAgBU,KAAM,2BAAuB,GAE7CV,EAAgBU,KAAM,mBAAoB,cAAe4sB,SAEzDttB,EAAgBU,KAAM,UAAU,GAEhCV,EAAgBU,KAAM,eAAe,GAErCV,EAAgBU,KAAM,aAAa,GAEnCV,EAAgBU,KAAM,YAAY,GAElCV,EAAgBU,KAAM,kBAAkB,GAExCV,EAAgBU,KAAM,eAAe,GAErCV,EAAgBU,KAAM,qBAAqB,GAE3CV,EAAgBU,KAAM,uBAAwB,MAE9CV,EAAgBU,KAAM,oBAAgB,GAEtCV,EAAgBU,KAAM,iBAAkB,kBAExCV,EAAgBU,KAAM,WAAY,IAElCV,EAAgBU,KAAM,eAAgB,IAEtCV,EAAgBU,KAAM,oBAAqB,GAE3CV,EAAgBU,KAAM,oBAAqB,GAE3CV,EAAgBU,KAAM,kBAAmB,MAEzCV,EAAgBU,KAAM,uBAAwB,GAE9CV,EAAgBU,KAAM,qBAAsB,CAC1CytB,UAAW,EACXC,WAAY,EACZC,WAAY,EACZC,SAAU,EACVC,YAAa,EACbC,UAAW,EACXC,WAAW,EACXC,UAAW,EACXC,QAAQ,EACRC,gBAAiB,EACjBC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,EAClBC,UAAW,EACXC,SAAU,EACVvN,SAAS,EACTwN,eAAgB,EAChBC,eAAgB,EAChBC,sBAAuB,EACvBC,sBAAuB,EACvBC,uBAAwB,EACxBC,uBAAwB,EACxBC,aAAc,EACdC,qBAAsB,EACtBC,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,cAAe,EACfC,cAAe,EACfC,YAAa,EACbC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,gBAAiB,EACjBC,oBAAqB,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAgB,IAGlB/vB,KAAK0M,QAAUvN,OAAO6G,OAAOhG,KAAKgwB,eAAgBtjB,GAClD1M,KAAKiwB,yBAA2BjwB,KAAKkwB,4BAEb,iBAAb9Z,GACTpW,KAAKmwB,gBAAkB/Z,EACvBpW,KAAKoW,SAAWhT,MAAMyQ,KAAK3S,SAASI,iBAAiB8U,KAErDpW,KAAKoW,cAAsC,IAApBA,EAAStX,QAA0BsX,EAAStX,OAAS,EAAIsE,MAAMyQ,KAAKuC,GAAY,CAACA,GAG1GpW,KAAKowB,gBAAkB,GACvBpwB,KAAKqwB,iBAAmBrwB,KAAKswB,4BAC7BtwB,KAAKuwB,mBAA8C,IAA1BvwB,KAAKqwB,iBAC9BrwB,KAAKwwB,oBAAsBxwB,KAAKywB,KAE5BzwB,KAAK0M,QAAQwf,MACflsB,KAAKoW,SAAWpW,KAAK0wB,WAAW1wB,KAAK0M,QAAQwf,MAG3ClsB,KAAK0M,QAAQ0gB,aAAc,CAC7B,IAAIuD,EAAS,GACb3wB,KAAKoW,SAAWhT,MAAMyQ,KAAK7T,KAAKoW,UAAU5Q,QAAO,SAAUorB,GACzD,IAAI1Q,EAAM0Q,EAAQpwB,aAAaT,EAAM2M,QAAQoe,YAE7C,OAA6B,IAAzB6F,EAAO/sB,QAAQsc,KACjByQ,EAAO9sB,KAAKqc,IACL,MAOblgB,KAAK6wB,iBAED7wB,KAAK0M,QAAQ+e,OACfzrB,KAAK8wB,SAASpS,QAAQ3Z,YAAY/E,KAAK8wB,SAASC,aAG9C/wB,KAAK0M,QAAQse,KACfhrB,KAAK8wB,SAASpS,QAAQ3Z,YAAY/E,KAAK8wB,SAASE,YAG9ChxB,KAAK0M,QAAQ4D,SACftQ,KAAK8wB,SAASpS,QAAQ3Z,YAAY/E,KAAK8wB,SAASxgB,SAGlDtQ,KAAK2M,iBAAiB3M,KAAKoW,SAAU,SAAWpW,KAAKixB,gBAAgB,SAAUvlB,GAC7E,GAAI3L,EAAMmxB,YAAYxlB,EAAMylB,eAAgB,CAG1C,GAFAzlB,EAAM3D,iBAEFhI,EAAMqxB,YACR,OAAO,EAGTrxB,EAAMsxB,kBAAoBtxB,EAAMqW,SAASxS,QAAQ8H,EAAMylB,eAEvDpxB,EAAMuxB,UAAU5lB,EAAMylB,mBAItBnxB,KAAK0M,QAAQyf,UACfnsB,KAAK2M,iBAAiB3M,KAAK8wB,SAASpS,QAAS,CAAC,SAAW1e,KAAKixB,eAAgB,cAAgBjxB,KAAKixB,iBAAiB,SAAUvlB,GACxH3L,EAAMwxB,QAAU7lB,EAAM/M,SAAW+M,EAAMylB,eACzCpxB,EAAM0rB,WAMRzrB,KAAK0M,QAAQ6f,mBACfvsB,KAAK2M,iBAAiBzL,SAASC,KAAM,eAAiBnB,KAAKixB,gBAAgB,SAAUvlB,GAC/EA,EAAM/M,OAAO+lB,cAAchkB,UAAU2G,SAAS,aAChDqE,EAAM3D,oBAMR/H,KAAK0M,QAAQuf,gBACfjsB,KAAK2M,iBAAiBzL,SAASC,KAAM,SAAWnB,KAAKixB,eAAgBjxB,KAAKwxB,UAAS,SAAU9lB,GAG3F,GAFA3L,EAAM0xB,mBAAmBhE,UAAY,EAEjC1tB,EAAMqxB,aAA6B,WAAd1lB,EAAMrM,IAI7B,OAHAU,EAAM2xB,aAAanrB,aAAa,MAAO,IAEvCxG,EAAMqxB,aAAc,EACbrxB,EAAM0rB,QAGX1rB,EAAMwxB,SACR7lB,EAAM3D,iBAEY,WAAd2D,EAAMrM,KACRU,EAAM0rB,SAGH1rB,EAAMqxB,aAAe,CAAC,YAAa,cAAcxtB,QAAQ8H,EAAMrM,MAAQ,GAC1EU,EAAM4xB,UAAwB,eAAdjmB,EAAMrM,IAAuB,GAAK,MAGrDW,KAAK0M,QAAQmgB,mBAGlB7sB,KAAK4xB,YA5PT,IAAsBpzB,EAAa+pB,EAAYC,EA+sD7C,OA/sDoBhqB,EA+PPqsB,GA/PoBtC,EA+PJ,CAAC,CAC5BlpB,IAAK,4BACLG,MAAO,WAGL,IAAIqyB,GAAkB,EAEtB,IACE,IAAIC,EAAO3yB,OAAOC,eAAe,GAAI,UAAW,CAC9CoY,IAAK,WACHqa,GAAkB,KAGtBnyB,OAAOiN,iBAAiB,cAAe,KAAMmlB,GAC7CpyB,OAAOwM,oBAAoB,cAAe,KAAM4lB,GAChD,MAAOjqB,IAET,OAAOgqB,IAER,CACDxyB,IAAK,iBACLG,MAAO,WACLQ,KAAK8wB,SAAS/F,QAAU7pB,SAAS0F,cAAc,OAC/C5G,KAAK8wB,SAAS/F,QAAQrqB,UAAUC,IAAI,cACpCX,KAAK8wB,SAAS/F,QAAQgH,QAAQC,cAAgB,KAC9ChyB,KAAK8wB,SAASC,YAAc7vB,SAAS0F,cAAc,UACnD5G,KAAK8wB,SAASC,YAAYrwB,UAAUC,IAAI,YACxCX,KAAK8wB,SAASC,YAAYkB,UAAYjyB,KAAK0M,QAAQgf,UACnD1rB,KAAK8wB,SAASxgB,QAAUpP,SAAS0F,cAAc,OAC/C5G,KAAK8wB,SAASxgB,QAAQ5P,UAAUC,IAAI,cACpCX,KAAK8wB,SAASxgB,QAAQ2hB,UAAY,cAClCjyB,KAAK8wB,SAASE,WAAa9vB,SAAS0F,cAAc,OAClD5G,KAAK8wB,SAASE,WAAWtwB,UAAUC,IAAI,iBACvCX,KAAK8wB,SAASE,WAAWiB,UAAY,2BAA6B3M,OAAOtlB,KAAK0M,QAAQue,QAAQ,GAAI,qCAAuC3F,OAAOtlB,KAAK0M,QAAQue,QAAQ,GAAI,aACzKjrB,KAAK8wB,SAASoB,QAAUhxB,SAAS0F,cAAc,OAC/C5G,KAAK8wB,SAASoB,QAAQxxB,UAAUC,IAAI,cACpCX,KAAK8wB,SAASoB,QAAQD,UAAY,kEAClCjyB,KAAK8wB,SAASqB,QAAUjxB,SAAS0F,cAAc,OAC/C5G,KAAK8wB,SAASqB,QAAQzxB,UAAUC,IAAI,aAAc,OAASX,KAAK0M,QAAQ6e,iBAEpEvrB,KAAK0M,QAAQ8e,cACfxrB,KAAK8wB,SAASqB,QAAQzxB,UAAUC,IAAIX,KAAK0M,QAAQ8e,cAGnDxrB,KAAK8wB,SAASsB,MAAQlxB,SAAS0F,cAAc,OAC7C5G,KAAK8wB,SAASsB,MAAM1xB,UAAUC,IAAI,YAClCX,KAAK8wB,SAASpS,QAAUxd,SAAS0F,cAAc,OAC/C5G,KAAK8wB,SAASpS,QAAQhe,UAAUC,IAAI,cACpCX,KAAK8wB,SAASpS,QAAQnY,aAAa,YAAa,GAChDvG,KAAK8wB,SAASpS,QAAQnY,aAAa,OAAQ,UAC3CvG,KAAK8wB,SAASpS,QAAQnY,aAAa,eAAe,GAE9CvG,KAAK0M,QAAQtF,WACfpH,KAAK8wB,SAASpS,QAAQhe,UAAUC,IAAIX,KAAK0M,QAAQtF,WAG/CpH,KAAK0M,QAAQugB,KACfjtB,KAAK8wB,SAASpS,QAAQhe,UAAUC,IAAI,gBAGvC,CACDtB,IAAK,WACLG,MAAO,SAAkBsJ,EAAMkE,GAC7B,IAAIqlB,EACJ,OAAO,WACAA,IACHvpB,EAAKoF,MAAMlO,KAAMiG,WACjBosB,GAAa,EACbxxB,YAAW,WACT,OAAOwxB,GAAa,IACnBrlB,OAIR,CACD3N,IAAK,cACLG,MAAO,SAAqBoxB,GAC1B,OAAQ5wB,KAAK0M,QAAQmf,SAAW+E,EAAQpwB,aAAaR,KAAK0M,QAAQoe,aAAe,IAAIwH,OAAO,IAAMtyB,KAAK0M,QAAQmf,QAAU,KAAM,KAAK9B,KAAK6G,EAAQpwB,aAAaR,KAAK0M,QAAQoe,eAE5K,CACDzrB,IAAK,4BACLG,MAAO,WACL,IAAI0qB,GAAKhpB,SAASC,MAAQD,SAASqxB,iBAAiB1rB,MACpD,MAAO,eAAgBqjB,EAAI,GAAK,qBAAsBA,EAAI,WAAa,kBAAmBA,EAAI,QAAU,gBAAiBA,GAAI,OAE9H,CACD7qB,IAAK,kBACLG,MAAO,SAAyByB,GAC9B,IAAIuxB,EAAiB,EACjBC,EAAgB,GAAGxuB,MAAMI,KAAKnD,SAASI,iBAAiB,IAAMtB,KAAK0M,QAAQwgB,aAE/E,GAAa,SAATjsB,EAAiB,CACnB,IAAIyxB,EAAkBhzB,OAAOizB,WAE7B,IAAKD,EAAiB,CACpB,IAAIE,EAAsB1xB,SAASqxB,gBAAgB3wB,wBACnD8wB,EAAkBE,EAAoB/sB,MAAQwD,KAAKD,IAAIwpB,EAAoBjkB,MAG7E,GAAIzN,SAASC,KAAK0xB,YAAcH,GAAmB1yB,KAAK8yB,cAAe,CACrE,IAAIC,EAAY7xB,SAAS0F,cAAc,OACnC6H,EAAe1N,SAASG,SAASC,KAAK0F,MAAM4H,cAAgB,EAAG,IACnEskB,EAAUryB,UAAUC,IAAI,wBACxBO,SAASC,KAAK4D,YAAYguB,GAC1BP,EAAiBO,EAAUC,YAAcD,EAAUF,YACnD3xB,SAASC,KAAKoG,YAAYwrB,GAC1B7xB,SAASC,KAAK4wB,QAAQkB,qBAAuBxkB,GAEzC+jB,EAAiB,GAAuB,GAAlBA,GAAuBxyB,KAAK8yB,iBACpD5xB,SAASC,KAAKT,UAAUC,IAAI,iBAC5BO,SAASC,KAAK0F,MAAM4H,aAAeA,EAAe+jB,EAAiB,KACnEC,EAAchxB,SAAQ,SAAUmvB,GAC9B,IAAIsC,EAAgBtC,EAAQ/pB,MAAM4H,aAC9B0kB,EAAoBzzB,OAAOqH,iBAAiB6pB,GAAS,iBACzDA,EAAQmB,QAAQkB,qBAAuBC,EACvCtC,EAAQ/pB,MAAM4H,aAAe,GAAG6W,OAAO7L,WAAW0Z,GAAqBX,EAAgB,gBAK7FtxB,SAASC,KAAKT,UAAUU,OAAO,iBAC/BF,SAASC,KAAK0F,MAAM4H,aAAevN,SAASC,KAAK4wB,QAAQkB,qBACzDR,EAAchxB,SAAQ,SAAUmvB,GAC9B,IAAIzX,EAAUyX,EAAQmB,QAAQkB,0BAEP,IAAZ9Z,IACTyX,EAAQ/pB,MAAM4H,aAAe0K,MAKnC,OAAOqZ,IAER,CACDnzB,IAAK,QACLG,MAAO,WACL,IAAI4zB,EAASpzB,KAEb,IAAKA,KAAKuxB,QAAUvxB,KAAKoxB,aAAepxB,KAAKqzB,UAC3C,OAAO,EAGTrzB,KAAKqzB,WAAY,EACjB,IAAIzC,EAAU5wB,KAAKowB,gBAAgBpwB,KAAKszB,mBA+BxC,IAAK,IAAIj0B,KA9BTuxB,EAAQ2C,cAAc,IAAIC,MAAM,yBAE5BxzB,KAAK0M,QAAQkgB,UACf5sB,KAAKyzB,mBAAoB,EAEpBzzB,KAAK0zB,aACR1zB,KAAK2zB,aAIT3zB,KAAKkM,oBAAoBhL,SAAU,WAAalB,KAAKixB,gBACrDjxB,KAAK4zB,QAAQ1yB,SAASI,iBAAiB,6FAA8FtB,KAAK0M,QAAQygB,WAAW,WACvJiG,EAAO1mB,QAAQ8f,eACjB4G,EAAOS,gBAAgB,QAGrBT,EAAO1mB,QAAQsgB,WAA0C,KAA7BoG,EAAO1mB,QAAQsgB,WAC7C9rB,SAASgH,cAAc,QAAQxH,UAAUU,OAAOgyB,EAAO1mB,QAAQsgB,WAGjE9rB,SAASC,KAAKoG,YAAY6rB,EAAOtC,SAASpS,SAC1Cxd,SAASC,KAAKoG,YAAY6rB,EAAOtC,SAAS/F,SAC1CqI,EAAOtC,SAASnE,eAAiB,KACjCiE,EAAQ2C,cAAc,IAAIC,MAAM,0BAChCJ,EAAOC,WAAY,KAErBrzB,KAAK0xB,aAAe,KACpB1xB,KAAKuxB,QAAS,EACdvxB,KAAKoxB,aAAc,EAEHpxB,KAAKyxB,mBACnBzxB,KAAKyxB,mBAAmBpyB,GAAO,EAGjCW,KAAKyxB,mBAAmB1D,WAAY,EACpC/tB,KAAKyxB,mBAAmBxD,QAAS,EACjCjuB,KAAKyxB,mBAAmBzQ,SAAU,EAClChhB,KAAKyxB,mBAAmB3C,aAAe9uB,KAAK8zB,OAAO,EAAG,EAAG9zB,KAAK0M,QAAQqgB,SACtE/sB,KAAKyxB,mBAAmB3B,cAAe,IAExC,CACDzwB,IAAK,OACLmY,IAAK,WACH,OAAO9X,OAAOq0B,SAAStD,KAAKuD,UAAU,KAEvC,CACD30B,IAAK,UACLG,MAAO,WACL,IAAIy0B,EAASj0B,KAETmR,EAAQnR,KAAKszB,kBACbx0B,EAASkB,KAAKowB,gBAAgBtxB,OAC9BqR,EAAOgB,EAAQ,EAAI,EAAIrS,EAAS,EAAIqS,EAAQ,GAAKrS,EAAS,EAAI,EAAIqS,EAAQ,EAC1EjB,EAAOiB,EAAQ,EAAI,EAAIrS,EAAS,EAAIqS,EAAQ,GAAKrS,EAAS,EAAI,EAAIqS,EAAQ,EAC1E+iB,EAAY,IAAIC,MAChBC,EAAY,IAAID,MACpBD,EAAUvnB,iBAAiB,QAAQ,SAAUjB,GAC3C,IAAIwU,EAAMxU,EAAM/M,OAAO6B,aAAa,QAEM,IAAtCyzB,EAAOI,aAAazwB,QAAQsc,IAE9B+T,EAAOI,aAAaxwB,KAAKqc,GAG3B+T,EAAO7D,gBAAgBjf,GAAOoiB,cAAc,IAAIC,MAAM,mBAAqBS,EAAOhD,oBAEpFiD,EAAU3tB,aAAa,MAAOvG,KAAKowB,gBAAgBjgB,GAAM3P,aAAaR,KAAK0M,QAAQoe,aACnFsJ,EAAUznB,iBAAiB,QAAQ,SAAUjB,GAC3C,IAAIwU,EAAMxU,EAAM/M,OAAO6B,aAAa,QAEM,IAAtCyzB,EAAOI,aAAazwB,QAAQsc,IAC9B+T,EAAOI,aAAaxwB,KAAKqc,GAG3B+T,EAAO7D,gBAAgBjf,GAAOoiB,cAAc,IAAIC,MAAM,mBAAqBS,EAAOhD,oBAEpFmD,EAAU7tB,aAAa,MAAOvG,KAAKowB,gBAAgBlgB,GAAM1P,aAAaR,KAAK0M,QAAQoe,eAEpF,CACDzrB,IAAK,YACLG,MAAO,SAAmB0W,GACxB,IAAIoe,EAASt0B,KAETu0B,EAAiBre,EAEjBlW,KAAK0M,QAAQugB,MACf/W,GAAaA,GAGflW,KAAKowB,gBAAgBpwB,KAAKszB,mBAAmBC,cAAc,IAAIC,MAAM,UAAYxzB,KAAKixB,iBACtFjxB,KAAKowB,gBAAgBpwB,KAAKszB,mBAAmBC,cAAc,IAAIC,OAAqB,IAAdtd,EAAkB,OAAS,QAAU,IAAMlW,KAAKixB,iBACtH,IAAIuD,EAAWx0B,KAAKszB,kBAAoBpd,EAExC,GAAIlW,KAAKoxB,cAAgBoD,EAAW,GAAKA,GAAYx0B,KAAKowB,gBAAgBtxB,UAAiC,IAAtBkB,KAAK0M,QAAQiP,KAChG,OAAO,EAGT3b,KAAKszB,kBAAoBkB,EAAW,EAAIx0B,KAAKowB,gBAAgBtxB,OAAS,EAAI01B,EAAWx0B,KAAKowB,gBAAgBtxB,OAAS,EAAI,EAAI01B,EAC3Hx0B,KAAK8wB,SAASoB,QAAQhqB,cAAc,eAAe+pB,UAAYjyB,KAAKszB,kBAAoB,EAEpFtzB,KAAK0M,QAAQof,gBACf9rB,KAAK8P,MAAM9P,KAAK0M,QAAQqf,eAAiB,KAAO,IAAMwI,EAAiBv0B,KAAKyxB,mBAAmBhE,UAAY,MAG7GztB,KAAK4zB,QAAQ5zB,KAAK8wB,SAASsB,MAAOpyB,KAAK0M,QAAQygB,WAAW,WACxDmH,EAAOlD,aAAc,EAEhBkD,EAAOjB,UAmBViB,EAAOlD,aAAc,EAlBrBvwB,YAAW,WACT,IAAI+vB,EAAU0D,EAAOlE,gBAAgBkE,EAAOhB,mBAE5CgB,EAAO5C,aAAanrB,aAAa,MAAOqqB,EAAQpwB,aAAa8zB,EAAO5nB,QAAQoe,cAEU,IAAlFwJ,EAAOD,aAAazwB,QAAQgtB,EAAQpwB,aAAa8zB,EAAO5nB,QAAQoe,cAClEwJ,EAAOG,KAAKH,EAAOxD,SAASxgB,SAG1BgkB,EAAOxD,SAASsB,MAAM/qB,SAASitB,EAAOxD,SAASqB,UACjDmC,EAAOxD,SAASsB,MAAM7qB,YAAY+sB,EAAOxD,SAASqB,SAGpDmC,EAAOI,YAAYH,GAEfD,EAAO5nB,QAAQsf,YAAYsI,EAAOK,YACrC,UAMR,CACDt1B,IAAK,cACLG,MAAO,SAAqB0W,GAC1B,IAAI0e,EAAS50B,KAEb,IAAKA,KAAK0xB,aACR,OAAO,EAGT,IAAImD,EAAW,IAAIV,MACfW,EAAcp1B,OAAOizB,WAAa3yB,KAAK0M,QAAQ2f,WAC/C0I,EAAer1B,OAAOoC,YAAc9B,KAAK0M,QAAQ0M,YACrDyb,EAAStuB,aAAa,MAAOvG,KAAK0xB,aAAalxB,aAAa,QAC5DR,KAAK0xB,aAAaK,QAAQiD,MAAQ,EAClCh1B,KAAK0xB,aAAaK,QAAQkD,WAAa,EACvCj1B,KAAK0xB,aAAaK,QAAQmD,WAAa,EACvCl1B,KAAKm1B,eAAe,EAAG,EAAG,GAC1BN,EAASloB,iBAAiB,SAAS,SAAUjB,GAC3CkpB,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBC,cAAc,IAAIC,MAAM,SAAWoB,EAAO3D,iBAE3F2D,EAAOxD,aAAc,EACrBwD,EAAOrD,QAAS,EAChBqD,EAAO9D,SAASxgB,QAAQzJ,MAAMI,QAAU,OACxC,IAAImuB,EAA6B,IAAdlf,IAAkC,IAAfA,EAEtC,GAAI0e,EAAOvD,oBAAsBuD,EAAOtB,mBAAqB8B,EAC3D,OAAOR,EAAOnJ,QAGZmJ,EAAOloB,QAAQ+f,YACjB4I,MAAMT,EAAOloB,QAAQggB,mBAGvBkI,EAAOjD,UAAUyD,EAAelf,EAAY,MAE9C2e,EAASloB,iBAAiB,QAAQ,SAAUjB,QACjB,IAAdwK,IACT0e,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBC,cAAc,IAAIC,MAAM,WAAaoB,EAAO3D,iBAE7F2D,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBC,cAAc,IAAIC,OAAqB,IAAdtd,EAAkB,WAAa,YAAc,IAAM0e,EAAO3D,kBAIlI2D,EAAOloB,QAAQkgB,SACjBgI,EAAOU,aAGqE,IAA1EV,EAAOP,aAAazwB,QAAQgxB,EAAOlD,aAAalxB,aAAa,SAC/Do0B,EAAOP,aAAaxwB,KAAK+wB,EAAOlD,aAAalxB,aAAa,QAG5D,IA0BI+0B,EAAkBC,EA1BlBC,EAAa/pB,EAAM/M,OAAO+P,MAC1BgnB,EAAchqB,EAAM/M,OAAOkD,OAE/B,GAAI+yB,EAAOloB,QAAQ4f,mBAAqBmJ,EAAaX,GAAeY,EAAcX,EAAc,CAC9F,IAAIY,EAAQF,EAAaC,EAAcZ,EAAcC,EAAeU,EAAaX,EAAcY,EAAcX,EAC7GU,GAAcE,EACdD,GAAeC,EAGjBf,EAAO9D,SAASsB,MAAMvrB,MAAM+uB,KAAOl2B,OAAOoC,YAAc4zB,GAAe,EAAI,KAC3Ed,EAAO9D,SAASsB,MAAMvrB,MAAM8H,MAAQjP,OAAOizB,WAAa8C,EAAab,EAAOiB,sBAAwB,EAAI,KACxGjB,EAAO9D,SAASsB,MAAMvrB,MAAM6H,MAAQ+mB,EAAa,KACjDb,EAAO9D,SAASsB,MAAMvrB,MAAMhF,OAAS6zB,EAAc,KACnDd,EAAO9D,SAASxgB,QAAQzJ,MAAMI,QAAU,OAEpC2tB,EAAOloB,QAAQuP,OACjB2Y,EAAOkB,aAGTlB,EAAOmB,OAAOnB,EAAOlD,aAAckD,EAAOloB,QAAQygB,WAAW,WACvDyH,EAAOloB,QAAQuP,OACjB2Y,EAAO9D,SAASpS,QAAQzC,WAI5B2Y,EAAOrD,QAAS,EAG8B,iBAAnCqD,EAAOloB,QAAQ0e,gBACxBmK,EAAsD,SAAnCX,EAAOloB,QAAQ0e,gBAA6BwJ,EAAOxE,gBAAgBwE,EAAOtB,mBAAqBsB,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBprB,cAAc0sB,EAAOloB,QAAQ0e,iBAC7I,mBAAnCwJ,EAAOloB,QAAQ0e,kBAC/BmK,EAAmBX,EAAOloB,QAAQ0e,gBAAgBwJ,EAAOxE,gBAAgBwE,EAAOtB,qBAG9EsB,EAAOloB,QAAQwe,UAAYqK,IAE3BC,EADiC,SAA/BZ,EAAOloB,QAAQ2e,YACHkK,EAAiBxD,QAAQ6C,EAAOloB,QAAQ4e,cACd,SAA/BsJ,EAAOloB,QAAQ2e,YACVkK,EAAiBtD,UAEjBsD,EAAiB/0B,aAAao0B,EAAOloB,QAAQ4e,eAI1DsJ,EAAOloB,QAAQiP,KAiBoB,IAAlCiZ,EAAOxE,gBAAgBtxB,OACzB81B,EAAOoB,KAAKpB,EAAO9D,SAASE,WAAW1vB,iBAAiB,uBAExDszB,EAAOH,KAAKG,EAAO9D,SAASE,WAAW1vB,iBAAiB,wBAnBzB,IAA7BszB,EAAOtB,mBACTsB,EAAOoB,KAAKpB,EAAO9D,SAASE,WAAW9oB,cAAc,aAGnD0sB,EAAOtB,mBAAqBsB,EAAOxE,gBAAgBtxB,OAAS,GAC9D81B,EAAOoB,KAAKpB,EAAO9D,SAASE,WAAW9oB,cAAc,aAGnD0sB,EAAOtB,kBAAoB,GAC7BsB,EAAOH,KAAKG,EAAO9D,SAASE,WAAW9oB,cAAc,aAGnD0sB,EAAOtB,kBAAoBsB,EAAOxE,gBAAgBtxB,OAAS,GAC7D81B,EAAOH,KAAKG,EAAO9D,SAASE,WAAW9oB,cAAc,cAUvC,IAAdgO,IAAkC,IAAfA,GACjB0e,EAAOloB,QAAQof,iBACjB8I,EAAO9kB,MAAM,EAAG,IAAMoG,EAAY,MAElCrV,YAAW,WACT+zB,EAAO9kB,MAAM8kB,EAAOloB,QAAQqf,eAAiB,IAAM,SAClD,KAGL6I,EAAOmB,OAAOnB,EAAO9D,SAASsB,MAAOwC,EAAOloB,QAAQygB,WAAW,WAC7DyH,EAAOxD,aAAc,EAErBwD,EAAOqB,WAAWT,EAAaC,QAGjCb,EAAOxD,aAAc,EAErBwD,EAAOqB,WAAWT,EAAaC,IAG7Bb,EAAOloB,QAAQigB,iBAAmBiI,EAAO9D,SAASnE,iBACpDiI,EAAO9D,SAASnE,eAAiBzrB,SAAS0F,cAAc,OAExDguB,EAAO9D,SAASnE,eAAejsB,UAAUC,IAAI,sBAE7Ci0B,EAAO9D,SAASnE,eAAesF,UAAY2C,EAAOloB,QAAQigB,eAE1DiI,EAAO9D,SAASsB,MAAMrtB,YAAY6vB,EAAO9D,SAASnE,sBAIvD,CACDttB,IAAK,iBACLG,MAAO,SAAwB4vB,EAAeC,EAAeC,GAC3DtvB,KAAK0xB,aAAa7qB,MAAM7G,KAAKqwB,iBAAmB,aAAe,aAAejB,EAAgB,IAAMC,EAAgB,WAAaC,EAAc,MAEhJ,CACDjwB,IAAK,SACLG,MAAO,SAAgBA,EAAOwJ,EAAKC,GACjC,OAAOzJ,EAAQwJ,EAAMA,EAAMxJ,EAAQyJ,EAAMA,EAAMzJ,IAEhD,CACDH,IAAK,cACLG,MAAO,SAAqBsvB,EAAcM,EAAeC,GACvDrvB,KAAK0xB,aAAaK,QAAQiD,MAAQlG,EAClC9uB,KAAK0xB,aAAaK,QAAQkD,WAAa7F,EACvCpvB,KAAK0xB,aAAaK,QAAQmD,WAAa7F,IAExC,CACDhwB,IAAK,oBACLG,MAAO,WACDQ,KAAKuxB,QAAUvxB,KAAKywB,OAASzwB,KAAKwwB,sBACpCxwB,KAAK0zB,aAAc,EACnB1zB,KAAKyrB,WAGR,CACDpsB,IAAK,YACLG,MAAO,WACL,IAAI02B,EAASl2B,KAgCb,GA7BAA,KAAK2M,iBAAiBjN,OAAQ,UAAYM,KAAKixB,gBAAgB,SAAUvlB,GAEnEwqB,EAAO3E,QACT2E,EAAOxB,iBAGX10B,KAAK2M,iBAAiB3M,KAAK8wB,SAASC,YAAa,CAAC,SAAW/wB,KAAKixB,eAAgB,cAAgBjxB,KAAKixB,gBAAiBjxB,KAAKyrB,MAAMzmB,KAAKhF,OAEpIA,KAAK0M,QAAQkgB,SACf/rB,YAAW,WACTq1B,EAAOvpB,iBAAiBjN,OAAQ,cAAgBw2B,EAAOjF,gBAAgB,SAAUvlB,GAC3EwqB,EAAO3E,QACT2E,EAAOC,yBAGV,IAGLn2B,KAAK2M,iBAAiB3M,KAAK8wB,SAASE,WAAWoF,qBAAqB,UAAW,SAAWp2B,KAAKixB,gBAAgB,SAAUvlB,GACvH,IAAKA,EAAMylB,cAAckF,QAAQjY,MAAM,WACrC,OAAO,EAGT1S,EAAM3D,iBACNmuB,EAAOzE,mBAAmBhE,UAAY,EAEtCyI,EAAOvE,UAAUjmB,EAAMylB,cAAczwB,UAAU2G,SAAS,WAAa,GAAK,MAGxErH,KAAK0M,QAAQ2gB,WAAY,CAC3B,IAAI2H,EAAQ,EACZh1B,KAAK2M,iBAAiB3M,KAAK8wB,SAASsB,MAAO,CAAC,aAAc,mBAAmB,SAAU1mB,GACrF,GAAIwqB,EAAOzE,mBAAmB1D,WAAamI,EAAO9E,aAAe8E,EAAO7C,YAAc6C,EAAO3E,OAC3F,OAAO,EAGwC,GAA7C2E,EAAOzE,mBAAmBvD,kBAC5BgI,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOvwB,OACxFq0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAO1jB,MACvFwnB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAc7vB,OAChFq0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAchjB,MAC/EwnB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UACnEN,EAAOzE,mBAAmBjD,eAAiB/U,WAAWyc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiBhV,WAAWyc,EAAOxE,aAAaK,QAAQmD,aAGpFxpB,EAAM3D,iBACN,IAAI0uB,EAAQ/qB,EAAM+qB,OAAS/qB,EAAMgrB,gBAEnBC,IAAVF,IAEFA,EAAQ/qB,EAAMkrB,QAGhBH,EAAQptB,KAAKJ,KAAK,EAAGI,KAAKL,IAAI,EAAGytB,IAGjCzB,GAASyB,EAAQP,EAAOxpB,QAAQ4gB,iBAAmB0H,EACnDA,EAAQ3rB,KAAKJ,IAAI,EAAGI,KAAKL,IAAIktB,EAAOxpB,QAAQqgB,QAASiI,IACrDkB,EAAOzE,mBAAmBnC,YAAc0F,EACxCkB,EAAOzE,mBAAmBlC,aAAe7jB,EAAMqZ,MAC/CmR,EAAOzE,mBAAmBjC,aAAe9jB,EAAMmrB,MAC/CX,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmB9B,gBAAkBuG,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAC9GoH,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBjD,gBAAkB0H,EAAOzE,mBAAmBlC,aAAe2G,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOzE,mBAAmBjD,iBAAmB0H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cAC1lByG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBhD,gBAAkByH,EAAOzE,mBAAmBjC,aAAe0G,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOzE,mBAAmBhD,iBAAmByH,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAE7lBwG,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,aAE5I4G,EAAOzE,mBAAmBnC,YAAc,GAC1C4G,EAAOzE,mBAAmBxD,QAAS,EAE9BiI,EAAOpF,SAASqB,QAAQtrB,MAAMiwB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQtrB,MAAMI,SAC1EivB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOxpB,QAAQygB,aAGV,IAA3C+I,EAAOzE,mBAAmB3C,eAC5BoH,EAAOzE,mBAAmBxD,QAAS,EAEW,SAA1CiI,EAAOpF,SAASqB,QAAQtrB,MAAMI,SAChCivB,EAAOH,OAAOG,EAAOpF,SAASqB,QAAS+D,EAAOxpB,QAAQygB,YAI1D+I,EAAOzE,mBAAmB1C,qBAAuB,KACjDmH,EAAOzE,mBAAmBzQ,SAAU,GAGtCkV,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,oBAC3EsG,EAAOzE,mBAAmB3C,aAAeoH,EAAOzE,mBAAmBnC,YACnE4G,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,cAErE6G,EAAOa,YAAYb,EAAOzE,mBAAmBnC,YAAa4G,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAE7H6G,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,gBAIpJtvB,KAAK2M,iBAAiB3M,KAAK8wB,SAASsB,MAAO,CAAC,cAAgBpyB,KAAKixB,eAAgB,aAAejxB,KAAKixB,iBAAiB,SAAUvlB,GAC9H,GAA6B,MAAzBA,EAAM/M,OAAO03B,SAAkC,eAAf3qB,EAAMzK,KACxC,OAAO,EAGT,GAAmB,cAAfyK,EAAMzK,KACRyK,EAAM3D,iBACNmuB,EAAOzE,mBAAmB/C,sBAAwBhjB,EAAMsrB,QACxDd,EAAOzE,mBAAmB9C,sBAAwBjjB,EAAMurB,QACxDf,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOvwB,OACxFq0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAO1jB,MACvFwnB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAc7vB,OAChFq0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAchjB,MAC/EwnB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UACnEN,EAAOzE,mBAAmBjD,eAAiB/U,WAAWyc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiBhV,WAAWyc,EAAOxE,aAAaK,QAAQmD,YAClFgB,EAAOzE,mBAAmBzQ,SAAU,MAC/B,CAWL,GAVAkV,EAAOzE,mBAAmB5B,WAAankB,EAAM4X,QAAQxkB,OACrDo3B,EAAOzE,mBAAmB/C,sBAAwBhjB,EAAM4X,QAAQ,GAAG0T,QACnEd,EAAOzE,mBAAmB9C,sBAAwBjjB,EAAM4X,QAAQ,GAAG2T,QACnEf,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOvwB,OACxFq0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAO1jB,MACvFwnB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAc7vB,OAChFq0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAchjB,MAC/EwnB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UAEtB,IAAzCN,EAAOzE,mBAAmB5B,WAE5B,CACE,GAAKqG,EAAOzE,mBAAmB3B,aAmC7B,OA7BAoG,EAAOxE,aAAahxB,UAAUC,IAAI,iBAE7Bu1B,EAAOzE,mBAAmBxD,QAa7BiI,EAAOzE,mBAAmB3C,aAAe,EAEzCoH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAEpEoH,EAAOzE,mBAAmBxD,QAAS,IAlBnCiI,EAAOzE,mBAAmB3C,aAAeoH,EAAOxpB,QAAQogB,cAExDoJ,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAE/DoH,EAAOpF,SAASqB,QAAQtrB,MAAMiwB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQtrB,MAAMI,SAC1EivB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOxpB,QAAQygB,WAGzD+I,EAAOzE,mBAAmBxD,QAAS,GAWrCptB,YAAW,WACLq1B,EAAOxE,cACTwE,EAAOxE,aAAahxB,UAAUU,OAAO,mBAEtC,MACI,EAlCP80B,EAAOzE,mBAAmB3B,cAAe,EACzCjvB,YAAW,WACTq1B,EAAOzE,mBAAmB3B,cAAe,IACxC,KAkCLoG,EAAOzE,mBAAmBjD,eAAiB/U,WAAWyc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiBhV,WAAWyc,EAAOxE,aAAaK,QAAQmD,iBAChC,IAAzCgB,EAAOzE,mBAAmB5B,aAGnCqG,EAAOzE,mBAAmB7C,uBAAyBljB,EAAM4X,QAAQ,GAAG0T,QACpEd,EAAOzE,mBAAmB5C,uBAAyBnjB,EAAM4X,QAAQ,GAAG2T,QACpEf,EAAOzE,mBAAmBjD,eAAiB/U,WAAWyc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiBhV,WAAWyc,EAAOxE,aAAaK,QAAQmD,YAClFgB,EAAOzE,mBAAmBlC,cAAgB2G,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmB7C,wBAA0B,EAChJsH,EAAOzE,mBAAmBjC,cAAgB0G,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmB5C,wBAA0B,EAChJqH,EAAOzE,mBAAmB1C,qBAAuB1lB,KAAK6tB,MAAMhB,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmB7C,yBAA2BsH,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmB7C,yBAA2BsH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmB5C,yBAA2BqH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmB5C,0BAGjcqH,EAAOzE,mBAAmBzQ,SAAU,EAGtC,QAAIkV,EAAOzE,mBAAmB1D,YAE1BmI,EAAO3F,oBACT2F,EAAOzE,mBAAmBzD,UAAYjtB,SAASm1B,EAAOpF,SAASsB,MAAMvrB,MAAM8H,KAAM,KAGnFunB,EAAOzE,mBAAmB1D,WAAY,EACtCmI,EAAOzE,mBAAmBhE,UAAY,EACtCyI,EAAOzE,mBAAmB/D,WAAa,EACvCwI,EAAOzE,mBAAmB9D,WAAajiB,EAAMqZ,OAASrZ,EAAM4X,QAAQ,GAAGyB,MACvEmR,EAAOzE,mBAAmB5D,YAAcniB,EAAMmrB,OAASnrB,EAAM4X,QAAQ,GAAGuT,OACjE,MAET72B,KAAK2M,iBAAiB3M,KAAK8wB,SAASsB,MAAO,CAAC,aAAepyB,KAAKixB,eAAgB,aAAejxB,KAAKixB,eAAgB,kBAAkB,SAAUvlB,GAC9I,IAAKwqB,EAAOzE,mBAAmB1D,UAC7B,OAAO,EAGT,GAAmB,cAAfriB,EAAMzK,KAAsB,CAC9B,IAA0C,IAAtCi1B,EAAOzE,mBAAmBzQ,QAC5B,OAAO,EAGTkV,EAAOzE,mBAAmBzC,eAAiBtjB,EAAM4X,QAAQ,GAAG0T,QAC5Dd,EAAOzE,mBAAmBxC,eAAiBvjB,EAAM4X,QAAQ,GAAG2T,QAC5Df,EAAOzE,mBAAmB5B,WAAankB,EAAM4X,QAAQxkB,OACrDo3B,EAAOzE,mBAAmB1B,iBAEtBmG,EAAOzE,mBAAmB5B,WAAa,GAGvCqG,EAAOzE,mBAAmBvC,gBAAkBxjB,EAAM4X,QAAQ,GAAG0T,QAC7Dd,EAAOzE,mBAAmBtC,gBAAkBzjB,EAAM4X,QAAQ,GAAG2T,QAC7Df,EAAOzE,mBAAmB7B,oBAAsBvmB,KAAK6tB,MAAMhB,EAAOzE,mBAAmBzC,eAAiBkH,EAAOzE,mBAAmBvC,kBAAoBgH,EAAOzE,mBAAmBzC,eAAiBkH,EAAOzE,mBAAmBvC,kBAAoBgH,EAAOzE,mBAAmBxC,eAAiBiH,EAAOzE,mBAAmBtC,kBAAoB+G,EAAOzE,mBAAmBxC,eAAiBiH,EAAOzE,mBAAmBtC,kBAEpV,OAAnD+G,EAAOzE,mBAAmB1C,uBAC5BmH,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,qBAGzEvmB,KAAKD,IAAI8sB,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,sBAAwB,IAE9GsG,EAAOzE,mBAAmBnC,YAAc4G,EAAOpC,OAAOoC,EAAOzE,mBAAmB7B,oBAAsBsG,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB3C,aAAc,EAAGoH,EAAOxpB,QAAQqgB,SACjNmJ,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmB9B,gBAAkBuG,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAC9GoH,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBjD,gBAAkB0H,EAAOzE,mBAAmBlC,aAAe2G,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOzE,mBAAmBjD,iBAAmB0H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cAC1lByG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBhD,gBAAkByH,EAAOzE,mBAAmBjC,aAAe0G,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOzE,mBAAmBhD,iBAAmByH,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAE7lBwG,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,aAE5I4G,EAAOzE,mBAAmBnC,YAAc,IAC1C4G,EAAOzE,mBAAmBxD,QAAS,EAE9BiI,EAAOpF,SAASqB,QAAQtrB,MAAMiwB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQtrB,MAAMI,SAC1EivB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOxpB,QAAQygB,YAI3D+I,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,oBAC3EsG,EAAOzE,mBAAmB3C,aAAeoH,EAAOzE,mBAAmBnC,YACnE4G,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,iBAGzE6G,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAClEoH,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBzC,gBAAkBkH,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBjD,iBAA2D,EAA1C0H,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cACrYyG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBxC,gBAAkBiH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBhD,iBAA2D,EAA1CyH,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAEnYrmB,KAAKD,IAAI8sB,EAAOzE,mBAAmBrC,iBAAmB/lB,KAAKD,IAAI8sB,EAAOzE,mBAAmBhC,gBAC3FyG,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBzC,gBAG1E3lB,KAAKD,IAAI8sB,EAAOzE,mBAAmBpC,iBAAmBhmB,KAAKD,IAAI8sB,EAAOzE,mBAAmB/B,gBAC3FwG,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,cACrE6G,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBxC,gBAG9EiH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAcoH,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAE9H6G,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,cAMpJ,GAAmB,cAAf5jB,EAAMzK,MAAwBi1B,EAAOzE,mBAAmB1D,UAAW,CACrE,GAAkB,aAAdriB,EAAMzK,KAAqB,OAAO,EAEtC,GADAyK,EAAM3D,kBACoC,IAAtCmuB,EAAOzE,mBAAmBzQ,QAAmB,OAAO,EACxDkV,EAAOzE,mBAAmBzC,eAAiBtjB,EAAMsrB,QACjDd,EAAOzE,mBAAmBxC,eAAiBvjB,EAAMurB,QACjDf,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAClEoH,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBzC,gBAAkBkH,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBjD,iBAA2D,EAA1C0H,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cACrYyG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBxC,gBAAkBiH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBhD,iBAA2D,EAA1CyH,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAEnYrmB,KAAKD,IAAI8sB,EAAOzE,mBAAmBrC,iBAAmB/lB,KAAKD,IAAI8sB,EAAOzE,mBAAmBhC,gBAC3FyG,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBzC,gBAG1E3lB,KAAKD,IAAI8sB,EAAOzE,mBAAmBpC,iBAAmBhmB,KAAKD,IAAI8sB,EAAOzE,mBAAmB/B,gBAC3FwG,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,cACrE6G,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBxC,gBAG9EiH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAcoH,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAE9H6G,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,aAG7I4G,EAAOzE,mBAAmBxD,SAC7BiI,EAAOzE,mBAAmB7D,SAAWliB,EAAMqZ,OAASrZ,EAAM4X,QAAQ,GAAGyB,MACrEmR,EAAOzE,mBAAmB3D,UAAYpiB,EAAMmrB,OAASnrB,EAAM4X,QAAQ,GAAGuT,MACtEX,EAAOzE,mBAAmBhE,UAAYyI,EAAOzE,mBAAmB9D,WAAauI,EAAOzE,mBAAmB7D,SACvGsI,EAAOzE,mBAAmB/D,WAAawI,EAAOzE,mBAAmB5D,YAAcqI,EAAOzE,mBAAmB3D,UAErGoI,EAAOxpB,QAAQof,gBACjBoK,EAAOpmB,MAAM,GAAIomB,EAAOzE,mBAAmBhE,UAAY,UAI7DztB,KAAK2M,iBAAiB3M,KAAK8wB,SAASsB,MAAO,CAAC,YAAcpyB,KAAKixB,eAAgB,WAAajxB,KAAKixB,eAAgB,eAAiBjxB,KAAKixB,eAAgB,cAAgBjxB,KAAKixB,eAAgB,YAAa,gBAAiB,cAAe,oBAAoB,SAAUvlB,GAkCrQ,GAjCIwqB,EAAOiB,eAAgC,aAAfzrB,EAAMzK,OAChCi1B,EAAOzE,mBAAmB5B,WAAankB,EAAM4X,QAAQxkB,OAER,IAAzCo3B,EAAOzE,mBAAmB5B,YAItBqG,EAAOxE,cACTwE,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAcoH,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAGjF,IAA3C6G,EAAOzE,mBAAmB3C,eAC5BoH,EAAOzE,mBAAmBxD,QAAS,EAEW,SAA1CiI,EAAOpF,SAASqB,QAAQtrB,MAAMI,SAChCivB,EAAOH,OAAOG,EAAOpF,SAASqB,QAAS+D,EAAOxpB,QAAQygB,YAI1D+I,EAAOzE,mBAAmB1C,qBAAuB,KACjDmH,EAAOzE,mBAAmBzQ,SAAU,GACc,IAAzCkV,EAAOzE,mBAAmB5B,YAGnCqG,EAAOzE,mBAAmB/C,sBAAwBhjB,EAAM4X,QAAQ,GAAG0T,QACnEd,EAAOzE,mBAAmB9C,sBAAwBjjB,EAAM4X,QAAQ,GAAG2T,SAC1Df,EAAOzE,mBAAmB5B,WAAa,IAGhDqG,EAAOzE,mBAAmB1C,qBAAuB,OAInDmH,EAAOzE,mBAAmB1D,UAAW,CACvCmI,EAAOzE,mBAAmB1D,WAAY,EACtC,IAAIqJ,GAAc,EAEblB,EAAOxpB,QAAQiP,OACe,IAA7Bua,EAAO5C,mBAA2B4C,EAAOzE,mBAAmBhE,UAAY,IAC1E2J,GAAc,GAGZlB,EAAO5C,mBAAqB4C,EAAO9F,gBAAgBtxB,OAAS,GAAKo3B,EAAOzE,mBAAmBhE,UAAY,IACzG2J,GAAc,IAId/tB,KAAKD,IAAI8sB,EAAOzE,mBAAmBhE,WAAayI,EAAOxpB,QAAQ0f,gBAAkBgL,EACnFlB,EAAOvE,UAAUuE,EAAOzE,mBAAmBhE,UAAY,EAAI,GAAK,GACvDyI,EAAOxpB,QAAQof,gBACxBoK,EAAOpmB,MAAMomB,EAAOxpB,QAAQqf,eAAiB,IAAM,OAGjDmK,EAAOxpB,QAAQif,YAActiB,KAAKD,IAAI8sB,EAAOzE,mBAAmB/D,YAAc,IAAMrkB,KAAKD,IAAI8sB,EAAOzE,mBAAmBhE,WAAayI,EAAOxpB,QAAQ0f,gBACrJ8J,EAAOzK,YAIbzrB,KAAK2M,iBAAiB3M,KAAK8wB,SAASsB,MAAO,CAAC,aAAa,SAAU1mB,GACjE,IAAIwqB,EAAOiB,cA8CX,OA7CAjB,EAAOzE,mBAAmB/C,sBAAwBhjB,EAAMsrB,QACxDd,EAAOzE,mBAAmB9C,sBAAwBjjB,EAAMurB,QACxDf,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOvwB,OACxFq0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAO1jB,MACvFwnB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAc7vB,OAChFq0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAchjB,MAC/EwnB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UAEnEN,EAAOxE,aAAahxB,UAAUC,IAAI,iBAE7Bu1B,EAAOzE,mBAAmBxD,QAa7BiI,EAAOzE,mBAAmB3C,aAAe,EAEzCoH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAEpEoH,EAAOzE,mBAAmBxD,QAAS,EAEW,SAA1CiI,EAAOpF,SAASqB,QAAQtrB,MAAMI,SAChCivB,EAAOH,OAAOG,EAAOpF,SAASqB,QAAS+D,EAAOxpB,QAAQygB,aArBxD+I,EAAOzE,mBAAmB3C,aAAeoH,EAAOxpB,QAAQogB,cAExDoJ,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAE/DoH,EAAOpF,SAASqB,QAAQtrB,MAAMiwB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQtrB,MAAMI,SAC1EivB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOxpB,QAAQygB,WAGzD+I,EAAOzE,mBAAmBxD,QAAS,GAerCptB,YAAW,WACLq1B,EAAOxE,eACTwE,EAAOxE,aAAahxB,UAAUU,OAAO,iBAErC80B,EAAOxE,aAAa7qB,MAAMqvB,EAAO7F,iBAAmB,oBAAsB,QAE3E,KACH6F,EAAOzE,mBAAmBzQ,SAAU,GAC7B,OAGV,CACD3hB,IAAK,gBACLG,MAAO,SAAuBoxB,GAC5B,IAAIhf,EAASlS,OAAOqH,iBAAiB6pB,GACjC/uB,EAAS+uB,EAAQyG,aACjB3oB,EAAQkiB,EAAQoC,YAChBsE,EAAiB7d,WAAW7H,EAAO0lB,gBAQvC,MAAO,CACLz1B,OAAQA,EARc4X,WAAW7H,EAAO2lB,mBAQHD,EAPtB7d,WAAW7H,EAAO4lB,YACf/d,WAAW7H,EAAO6lB,eAOpC/oB,MAAOA,EANa+K,WAAW7H,EAAO8lB,iBACjBje,WAAW7H,EAAO+lB,kBACvBle,WAAW7H,EAAOpD,aACjBiL,WAAW7H,EAAOnD,iBAMtC,CACDpP,IAAK,aACLG,MAAO,WACL,IAAIo4B,EAAU,QAAU53B,KAAKszB,kBAAoB,GAC7CuE,EAASn4B,OAAOq0B,SAAS+D,KAAKnzB,MAAM,KAAK,GAAK,IAAMizB,EACxD53B,KAAK0zB,aAAc,EAEf1zB,KAAK+3B,iBACPr4B,OAAOktB,QAAQ5sB,KAAKyzB,kBAAoB,eAAiB,aAAa,GAAIvyB,SAAS82B,MAAOH,GAGtF73B,KAAKyzB,kBACP/zB,OAAOq0B,SAAS1pB,QAAQwtB,GAExBn4B,OAAOq0B,SAAStD,KAAOmH,EAItB53B,KAAKyzB,oBACRzzB,KAAKi4B,gBAAiB,GAGxBj4B,KAAKyzB,mBAAoB,IAE1B,CACDp0B,IAAK,YACLG,MAAO,WACLQ,KAAK0zB,aAAc,EAEf1zB,KAAKi4B,eACPrL,QAAQsL,OAEJl4B,KAAK+3B,iBACPnL,QAAQuL,UAAU,GAAIj3B,SAAS82B,MAAOt4B,OAAOq0B,SAASqE,SAAW14B,OAAOq0B,SAASsE,QAEjF34B,OAAOq0B,SAAStD,KAAO,GAM3B6H,aAAat4B,KAAKu4B,wBAEnB,CACDl5B,IAAK,YACLG,MAAO,WACL84B,aAAat4B,KAAKu4B,sBAEbv4B,KAAKyzB,kBAGRzzB,KAAKu4B,qBAAuB13B,WAAWb,KAAKw4B,WAAWxzB,KAAKhF,MAAO,KAFnEA,KAAKw4B,eAKR,CACDn5B,IAAK,aACLG,MAAO,SAAoBg2B,EAAaC,GACtC,IAAIgD,EAASz4B,KAETA,KAAK0M,QAAQwe,UAAYsK,GAA+B,KAAhBA,QAA6C,IAAhBA,IACvEx1B,KAAKg2B,KAAKh2B,KAAK8wB,SAASqB,SACxBnyB,KAAK8wB,SAASqB,QAAQtrB,MAAM6H,MAAQ+mB,EAAa,KACjDz1B,KAAK8wB,SAASqB,QAAQF,UAAYuD,EAClCx1B,KAAK8wB,SAASsB,MAAMrtB,YAAY/E,KAAK8wB,SAASqB,SAC9CtxB,YAAW,WACT43B,EAAO1C,OAAO0C,EAAO3H,SAASqB,QAASsG,EAAO/rB,QAAQygB,aACrDntB,KAAK0M,QAAQye,iBAGnB,CACD9rB,IAAK,QACLG,MAAO,SAAe8e,EAAOoa,GAC3B,IAAK14B,KAAKuwB,kBACR,OAAOvwB,KAAK8wB,SAASsB,MAAMvrB,MAAM8H,KAAO+pB,EAG1C14B,KAAK8wB,SAASsB,MAAMvrB,MAAM7G,KAAKqwB,iBAAmB,aAAe,cAAgBqI,EAAM,IACvF14B,KAAK8wB,SAASsB,MAAMvrB,MAAM7G,KAAKqwB,iBAAmB,cAAgBrwB,KAAKqwB,iBAAmB,aAAe/R,EAAQ,aAElH,CACDjf,IAAK,aACLG,MAAO,SAAoB0sB,GAWzB,OARIA,IAAe,IAARA,GAAyB,aAARA,EAClB9oB,MAAMyQ,KAAK7T,KAAKoW,UAAU5Q,QAAO,SAAUorB,GACjD,OAAOA,EAAQpwB,aAAa,SAAW0rB,KAGjClsB,KAAKoW,WAKhB,CACD/W,IAAK,YACLG,MAAO,SAAmBoxB,GACxB,IAAI+H,EAAS34B,KAEb4wB,EAAQ2C,cAAc,IAAIC,MAAM,QAAUxzB,KAAKixB,iBAE3CjxB,KAAK0M,QAAQ8f,gBACfxsB,KAAK61B,qBAAuB71B,KAAK6zB,gBAAgB,SAG/C7zB,KAAK0M,QAAQsgB,WAAwC,KAA3BhtB,KAAK0M,QAAQsgB,WACzC9rB,SAASgH,cAAc,QAAQxH,UAAUC,IAAIX,KAAK0M,QAAQsgB,WAG5D9rB,SAASC,KAAK4D,YAAY/E,KAAK8wB,SAASpS,SACxC1e,KAAK8wB,SAASpS,QAAQ3Z,YAAY/E,KAAK8wB,SAASsB,OAE5CpyB,KAAK0M,QAAQqe,SACf7pB,SAASC,KAAK4D,YAAY/E,KAAK8wB,SAAS/F,SAG1C/qB,KAAKowB,gBAAkBpwB,KAAK0wB,WAAWE,EAAQ1E,KAE3ClsB,KAAK0M,QAAQkf,cACoB,GAA/B5rB,KAAKowB,gBAAgBtxB,QAAekB,KAAK8wB,SAASpS,QAAQrX,SAASrH,KAAK8wB,SAASoB,SACnFlyB,KAAK8wB,SAASpS,QAAQnX,YAAYvH,KAAK8wB,SAASoB,SACvClyB,KAAKowB,gBAAgBtxB,OAAS,IAAMkB,KAAK8wB,SAASpS,QAAQrX,SAASrH,KAAK8wB,SAASoB,UAC1FlyB,KAAK8wB,SAASpS,QAAQ3Z,YAAY/E,KAAK8wB,SAASoB,UAIpDlyB,KAAKoxB,aAAc,EACnBpxB,KAAKszB,kBAAoBtzB,KAAKowB,gBAAgBxsB,QAAQgtB,GACtD,IAAIgI,EAAYhI,EAAQpwB,aAAaR,KAAK0M,QAAQoe,YAClD9qB,KAAK0xB,aAAexwB,SAAS0F,cAAc,OAC3C5G,KAAK0xB,aAAa7qB,MAAMI,QAAU,OAClCjH,KAAK0xB,aAAanrB,aAAa,MAAOqyB,GACtC54B,KAAK0xB,aAAaK,QAAQiD,MAAQ,EAClCh1B,KAAK0xB,aAAaK,QAAQkD,WAAa,EACvCj1B,KAAK0xB,aAAaK,QAAQmD,WAAa,GAEO,IAA1Cl1B,KAAKq0B,aAAazwB,QAAQg1B,IAC5B54B,KAAKq0B,aAAaxwB,KAAK+0B,GAGzB54B,KAAK8wB,SAASsB,MAAMH,UAAY,GAChCjyB,KAAK8wB,SAASsB,MAAM7rB,aAAa,QAAS,IAC1CvG,KAAK8wB,SAASsB,MAAMrtB,YAAY/E,KAAK0xB,cACrC1xB,KAAK+1B,OAAO/1B,KAAK8wB,SAAS/F,QAAS/qB,KAAK0M,QAAQygB,WAChDntB,KAAK+1B,OAAO,CAAC/1B,KAAK8wB,SAASoB,QAASlyB,KAAK8wB,SAASE,WAAYhxB,KAAK8wB,SAASC,aAAc/wB,KAAK0M,QAAQygB,WACvGntB,KAAKy0B,KAAKz0B,KAAK8wB,SAASxgB,SACxBtQ,KAAK8wB,SAASoB,QAAQhqB,cAAc,eAAe+pB,UAAYjyB,KAAKszB,kBAAoB,EACxFtzB,KAAK8wB,SAASoB,QAAQhqB,cAAc,aAAa+pB,UAAYjyB,KAAKowB,gBAAgBtxB,OAClFkB,KAAK00B,cAED10B,KAAK0M,QAAQsf,YACfhsB,KAAK20B,UAGP9zB,YAAW,WACT+vB,EAAQ2C,cAAc,IAAIC,MAAM,SAAWmF,EAAO1H,mBACjDjxB,KAAK0M,QAAQqf,kBAEjB,CACD1sB,IAAK,aACLG,MAAO,WACL,IAAIq5B,EAAS74B,KAEbA,KAAKkM,oBAAoBhL,SAAU,WAAalB,KAAKixB,gBACrDjxB,KAAK2M,iBAAiBzL,SAAU,WAAalB,KAAKixB,gBAAgB,SAAUvlB,GACtExK,WAAawK,EAAM/M,QAAUk6B,EAAO/H,SAASpS,UAAYhT,EAAM/M,QAAWk6B,EAAO/H,SAASpS,QAAQrX,SAASqE,EAAM/M,SACnHk6B,EAAO/H,SAASpS,QAAQzC,aAK7B,CACD5c,IAAK,mBACLG,MAAO,SAA0B4W,EAAUtK,EAAQnD,EAAUmpB,GAC3D1b,EAAWpW,KAAK84B,KAAK1iB,GACrBtK,EAAS9L,KAAK84B,KAAKhtB,GAEnB,IACIitB,EADAC,EAAYxP,EAA2BpT,GAG3C,IACE,IAAK4iB,EAAU9O,MAAO6O,EAAQC,EAAUjjB,KAAKiQ,MAAO,CAClD,IAAI4K,EAAUmI,EAAMv5B,MAEfoxB,EAAQqI,aACXrI,EAAQqI,WAAa,IAIvB,IACIC,EADAC,EAAa3P,EAA2B1d,GAG5C,IACE,IAAKqtB,EAAWjP,MAAOgP,EAASC,EAAWpjB,KAAKiQ,MAAO,CACrD,IAAIta,EAAQwtB,EAAO15B,MACfkN,EAAUolB,IAAQ,EACA,CAAC,aAAc,aAAaluB,QAAQ8H,EAAM/G,MAAM,KAAK,KAAO,GAE3D3E,KAAKiwB,2BACD,WAArB7G,EAAQ1c,GACVA,EAAQqU,SAAU,EAElBrU,EAAU,CACRqU,SAAS,IAKf6P,EAAQqI,WAAWvtB,GAAS/C,EAC5BioB,EAAQjkB,iBAAiBjB,EAAM/G,MAAM,KAAK,GAAIgE,EAAU+D,IAE1D,MAAO2d,GACP8O,EAAWtxB,EAAEwiB,GACd,QACC8O,EAAW/O,MAGf,MAAOC,GACP2O,EAAUnxB,EAAEwiB,GACb,QACC2O,EAAU5O,OAGb,CACD/qB,IAAK,sBACLG,MAAO,SAA6B4W,EAAUtK,GAC5CsK,EAAWpW,KAAK84B,KAAK1iB,GACrBtK,EAAS9L,KAAK84B,KAAKhtB,GAEnB,IACIstB,EADAC,EAAa7P,EAA2BpT,GAG5C,IACE,IAAKijB,EAAWnP,MAAOkP,EAASC,EAAWtjB,KAAKiQ,MAAO,CACrD,IAGIsT,EAHA1I,EAAUwI,EAAO55B,MAEjB+5B,EAAa/P,EAA2B1d,GAG5C,IACE,IAAKytB,EAAWrP,MAAOoP,EAASC,EAAWxjB,KAAKiQ,MAAO,CACrD,IAAIta,EAAQ4tB,EAAO95B,MAEfoxB,EAAQqI,YAAcrI,EAAQqI,WAAWvtB,KAC3CklB,EAAQ1kB,oBAAoBR,EAAM/G,MAAM,KAAK,GAAIisB,EAAQqI,WAAWvtB,WAC7DklB,EAAQqI,WAAWvtB,KAG9B,MAAO2e,GACPkP,EAAW1xB,EAAEwiB,GACd,QACCkP,EAAWnP,MAGf,MAAOC,GACPgP,EAAWxxB,EAAEwiB,GACd,QACCgP,EAAWjP,OAGd,CACD/qB,IAAK,UACLG,MAAO,SAAiB4W,EAAUnI,EAAUtF,GAC1C,IAKI6wB,EALAC,EAAUz5B,KAIV05B,EAAalQ,EAFjBpT,EAAWpW,KAAK84B,KAAK1iB,IAKrB,IACE,IAAKsjB,EAAWxP,MAAOsP,EAASE,EAAW3jB,KAAKiQ,MAChCwT,EAAOh6B,MACbqH,MAAMiwB,QAAU,EAE1B,MAAOzM,GACPqP,EAAW7xB,EAAEwiB,GACd,QACCqP,EAAWtP,IAGbpqB,KAAK25B,UAAW,EAEhB,IAAInP,EAAO,UAAYvc,GAAYjO,KAAK0M,QAAQygB,YACrC,SAASyM,IAClB,IAAIC,EAAiBpgB,WAAWrD,EAAS,GAAGvP,MAAMiwB,SAElD,IAAK+C,GAAkBrP,GAAQ,EAAG,CAChC,IACIsP,EADAC,EAAavQ,EAA2BpT,GAG5C,IACE,IAAK2jB,EAAW7P,MAAO4P,EAASC,EAAWhkB,KAAKiQ,MAAO,CACrD,IAAI4K,EAAUkJ,EAAOt6B,MACrBoxB,EAAQ/pB,MAAMI,QAAU,OAExB2pB,EAAQ/pB,MAAMiwB,QAAU,GAE1B,MAAOzM,GACP0P,EAAWlyB,EAAEwiB,GACd,QACC0P,EAAW3P,IAGbzhB,GAAYA,EAAStE,KAAKo1B,EAASrjB,OAC9B,CACL,IACI4jB,EADAC,EAAazQ,EAA2BpT,GAG5C,IACE,IAAK6jB,EAAW/P,MAAO8P,EAASC,EAAWlkB,KAAKiQ,MAC/BgU,EAAOx6B,MACbqH,MAAMiwB,QAAU+C,EAE3B,MAAOxP,GACP4P,EAAWpyB,EAAEwiB,GACd,QACC4P,EAAW7P,IAGbrhB,sBAAsB6wB,IAI1BA,KAED,CACDv6B,IAAK,SACLG,MAAO,SAAgB4W,EAAUnI,EAAUtF,EAAU1B,GACnD,IAKIizB,EALAC,EAAUn6B,KAIVo6B,EAAa5Q,EAFjBpT,EAAWpW,KAAK84B,KAAK1iB,IAKrB,IACE,IAAKgkB,EAAWlQ,MAAOgQ,EAASE,EAAWrkB,KAAKiQ,MAAO,CACrD,IAAI4K,EAAUsJ,EAAO16B,MACrBoxB,EAAQ/pB,MAAMiwB,QAAU,EACxBlG,EAAQ/pB,MAAMI,QAAUA,GAAW,SAErC,MAAOojB,GACP+P,EAAWvyB,EAAEwiB,GACd,QACC+P,EAAWhQ,IAGbpqB,KAAK25B,UAAW,EAEhB,IAAI3H,EAAgBvY,WAAWrD,EAAS,GAAG2b,QAAQC,eAAiB,GAChExH,EAAO,SAAWwH,GAAiB/jB,GAAYjO,KAAK0M,QAAQygB,YACrD,SAASyM,IAClB,IAAIC,EAAiBpgB,WAAWrD,EAAS,GAAGvP,MAAMiwB,SAElD,IAAO+C,GAAkBrP,GAAQwH,EAiB1B,CACL,IACIqI,EADAC,EAAc9Q,EAA2BpT,GAG7C,IACE,IAAKkkB,EAAYpQ,MAAOmQ,EAAUC,EAAYvkB,KAAKiQ,MACjCqU,EAAQ76B,MACdqH,MAAMiwB,QAAU,GAE5B,MAAOzM,GACPiQ,EAAYzyB,EAAEwiB,GACf,QACCiQ,EAAYlQ,IAGdzhB,GAAYA,EAAStE,KAAK81B,EAAS/jB,OAhCY,CAC/C,IACImkB,EADAC,EAAahR,EAA2BpT,GAG5C,IACE,IAAKokB,EAAWtQ,MAAOqQ,EAASC,EAAWzkB,KAAKiQ,MAChCuU,EAAO/6B,MACbqH,MAAMiwB,QAAU+C,EAE1B,MAAOxP,GACPmQ,EAAW3yB,EAAEwiB,GACd,QACCmQ,EAAWpQ,IAGb,IAAK+P,EAAQR,SAAU,OACvB5wB,sBAAsB6wB,IAoB1BA,KAED,CACDv6B,IAAK,OACLG,MAAO,SAAc4W,GAGnB,IACIqkB,EADAC,EAAclR,EAFlBpT,EAAWpW,KAAK84B,KAAK1iB,IAKrB,IACE,IAAKskB,EAAYxQ,MAAOuQ,EAAUC,EAAY3kB,KAAKiQ,MAAO,CACxD,IAAI4K,EAAU6J,EAAQj7B,MAEO,QAAzBoxB,EAAQ/pB,MAAMI,UAChB2pB,EAAQmB,QAAQ4I,eAAiB/J,EAAQ/pB,MAAMI,SAGjD2pB,EAAQ/pB,MAAMI,QAAU,QAE1B,MAAOojB,GACPqQ,EAAY7yB,EAAEwiB,GACf,QACCqQ,EAAYtQ,OAGf,CACD/qB,IAAK,OACLG,MAAO,SAAc4W,EAAUnP,GAG7B,IACI2zB,EADAC,EAAcrR,EAFlBpT,EAAWpW,KAAK84B,KAAK1iB,IAKrB,IACE,IAAKykB,EAAY3Q,MAAO0Q,EAAUC,EAAY9kB,KAAKiQ,MAAO,CACxD,IAAI4K,EAAUgK,EAAQp7B,MACtBoxB,EAAQ/pB,MAAMI,QAAU2pB,EAAQmB,QAAQ4I,gBAAkB1zB,GAAW,SAEvE,MAAOojB,GACPwQ,EAAYhzB,EAAEwiB,GACf,QACCwQ,EAAYzQ,OAGf,CACD/qB,IAAK,OACLG,MAAO,SAAcs7B,GACnB,MAAyC,mBAA3BA,EAAMzR,OAAOC,WAA6C,iBAAVwR,EAAqBA,EAAQ,CAACA,KAE7F,CACDz7B,IAAK,KACLG,MAAO,SAAYsM,EAAQnD,GACzBmD,EAAS9L,KAAK84B,KAAKhtB,GAEnB,IACIivB,EADAC,EAAcxR,EAA2BxpB,KAAKoW,UAGlD,IACE,IAAK4kB,EAAY9Q,MAAO6Q,EAAUC,EAAYjlB,KAAKiQ,MAAO,CACxD,IAAI4K,EAAUmK,EAAQv7B,MAEjBoxB,EAAQqK,wBACXrK,EAAQqK,sBAAwB,IAGlC,IACIC,EADAC,EAAc3R,EAA2B1d,GAG7C,IACE,IAAKqvB,EAAYjR,MAAOgR,EAAUC,EAAYplB,KAAKiQ,MAAO,CACxD,IAAIta,EAAQwvB,EAAQ17B,MACpBoxB,EAAQqK,sBAAsBvvB,GAAS/C,EACvCioB,EAAQjkB,iBAAiBjB,EAAO/C,IAElC,MAAO0hB,GACP8Q,EAAYtzB,EAAEwiB,GACf,QACC8Q,EAAY/Q,MAGhB,MAAOC,GACP2Q,EAAYnzB,EAAEwiB,GACf,QACC2Q,EAAY5Q,IAGd,OAAOpqB,OAER,CACDX,IAAK,MACLG,MAAO,SAAasM,GAClBA,EAAS9L,KAAK84B,KAAKhtB,GAEnB,IACIsvB,EADAC,EAAc7R,EAA2BxpB,KAAKoW,UAGlD,IACE,IAAKilB,EAAYnR,MAAOkR,EAAUC,EAAYtlB,KAAKiQ,MAAO,CACxD,IAGIsV,EAHA1K,EAAUwK,EAAQ57B,MAElB+7B,EAAc/R,EAA2B1d,GAG7C,IACE,IAAKyvB,EAAYrR,MAAOoR,EAAUC,EAAYxlB,KAAKiQ,MAAO,CACxD,IAAIta,EAAQ4vB,EAAQ97B,WAEyB,IAAlCoxB,EAAQqK,uBAAyCvvB,KAASklB,EAAQqK,uBAC3ErK,EAAQ1kB,oBAAoBR,EAAOklB,EAAQqK,sBAAsBvvB,KAGrE,MAAO2e,GACPkR,EAAY1zB,EAAEwiB,GACf,QACCkR,EAAYnR,MAGhB,MAAOC,GACPgR,EAAYxzB,EAAEwiB,GACf,QACCgR,EAAYjR,IAGd,OAAOpqB,OAGR,CACDX,IAAK,OACLG,MAAO,SAAcg8B,GACnBA,EAAOA,GAAQx7B,KAAKoW,SAAS,GAEP,oBAAXqlB,QAA0BD,aAAgBC,SACnDD,EAAOA,EAAKhkB,IAAI,IAGlBxX,KAAKqxB,kBAAoBrxB,KAAKoW,SAASxS,QAAQ43B,GAE3Cx7B,KAAKqxB,mBAAqB,GAC5BrxB,KAAKsxB,UAAUkK,KAGlB,CACDn8B,IAAK,OACLG,MAAO,WACLQ,KAAK2xB,UAAU,KAEhB,CACDtyB,IAAK,OACLG,MAAO,WACLQ,KAAK2xB,WAAW,KAGjB,CACDtyB,IAAK,iBACLG,MAAO,WACL,MAAO,CACL8zB,kBAAmBtzB,KAAKszB,kBACxB5B,aAAc1xB,KAAK0xB,aACnBmE,qBAAsB71B,KAAK61B,wBAI9B,CACDx2B,IAAK,UACLG,MAAO,WAELQ,KAAKwM,IAAI,CAAC,SAAWxM,KAAKixB,eAAgB,UAAYjxB,KAAKixB,eAAgB,mBAAqBjxB,KAAKixB,eAAgB,mBAAqBjxB,KAAKixB,eAAgB,UAAYjxB,KAAKixB,eAAgB,YAAcjxB,KAAKixB,eAAgB,YAAcjxB,KAAKixB,eAAgB,SAAWjxB,KAAKixB,eAAgB,WAAajxB,KAAKixB,eAAgB,QAAUjxB,KAAKixB,eAAgB,QAAUjxB,KAAKixB,eAAgB,QAAUjxB,KAAKixB,eAAgB,SAAWjxB,KAAKixB,iBACrbjxB,KAAKkM,oBAAoBlM,KAAKoW,SAAU,SAAWpW,KAAKixB,gBACxDjxB,KAAKkM,oBAAoBhL,SAAU,WAAalB,KAAKixB,gBACrDjxB,KAAKkM,oBAAoBhL,SAASC,KAAM,eAAiBnB,KAAKixB,gBAC9DjxB,KAAKkM,oBAAoBhL,SAASC,KAAM,SAAWnB,KAAKixB,gBACxDjxB,KAAKkM,oBAAoBlM,KAAK8wB,SAASE,WAAWoF,qBAAqB,UAAW,SAAWp2B,KAAKixB,gBAClGjxB,KAAKkM,oBAAoBlM,KAAK8wB,SAASC,YAAa,SAAW/wB,KAAKixB,gBACpEjxB,KAAKkM,oBAAoBxM,OAAQ,UAAYM,KAAKixB,gBAClDjxB,KAAKkM,oBAAoBxM,OAAQ,cAAgBM,KAAKixB,gBACtDjxB,KAAKyrB,QAEDzrB,KAAKuxB,SACPrwB,SAASC,KAAKoG,YAAYvH,KAAK8wB,SAASpS,SACxCxd,SAASC,KAAKoG,YAAYvH,KAAK8wB,SAAS/F,UAG1C/qB,KAAKoW,SAAW,OAEjB,CACD/W,IAAK,UACLG,MAAO,WACL,IAAKQ,KAAKmwB,gBACR,KAAM,8DAGR,IAAIzjB,EAAU1M,KAAK0M,QACfnH,EAAWvF,KAAKmwB,gBAGpB,OAFAnwB,KAAKmM,UACLnM,KAAKupB,YAAYhkB,EAAUmH,GACpB1M,UA3sDiEtB,EAAkBF,EAAYwF,UAAWukB,GAAiBC,GAAa9pB,EAAkBF,EAAagqB,GA+sD3KqC,EA3sDyB,GA8sD9B6Q,EAAW7Q,EACf1B,EAAiB,QAAIuS,EACrB/S,GAAOkC,eAAiBA,MD3uDxB,CAAmB,qBAAsB;;;;;;;AEIzC,MAAM8Q,GAAgB,MAMlB,MAAMC,EAAY,iBAGZ9V,EAAW,CAKf+V,WAAY,EAMZC,cAAe,EAMfC,mBAAmB,EAKnBC,iBAAiB,EAMjBC,qBAAsB,wBAMtBC,YAAa,aAMbC,UAAU,GAWZ,MAAMR,EAQJrV,YAAY8V,EAAS1vB,EAAU,IAK7B,GAJA1M,KAAK0M,QAAUivB,EAAcU,OAAOvW,EAAUpZ,GAG9C1M,KAAKo8B,QAAW,iBAAoBA,EAAYl7B,SAASgH,cAAck0B,GAAWA,OAC9E,IAAuBp8B,KAAKo8B,QAC9B,MAAM,IAAI3zB,MAAM,yCAElBzI,KAAKs8B,cAAe,EACpBt8B,KAAK8R,UAAY9R,KAAKo8B,QAAQ1X,cAG9B1kB,KAAKu8B,YAAc,SACnBv8B,KAAKkW,UAAY,OACjBlW,KAAKw8B,QAAU,CACbnhB,WAAa,EACbohB,aAAa,GAGfz8B,KAAK08B,cAAe,EACpB18B,KAAK28B,UAAW,EAChB38B,KAAK48B,aAAc,EAGnB58B,KAAK68B,WAAa,CAChB3H,WAAY,EACZ4H,cAAe,EACfjB,WAAY,EACZkB,eAAgB,EAChBjB,cAAe,EACfkB,kBAAmB,EACnBC,cAAe,EACfC,aAAc,EACdC,aAAc,EACdjP,gBAAiB,EACjBkP,eAAgB,EAChBC,YAAa,EACbC,gBAAiB,GAInB,CAAC,eAAe77B,SAAU87B,IACxBv9B,KAAKu9B,GAAUv9B,KAAKu9B,GAAQv4B,KAAKhF,SAInCA,KAAKw9B,aAQPlX,aAWE,GAVAtmB,KAAKy9B,sBAGDz9B,KAAK0M,QAAQuvB,uBACfj8B,KAAKs8B,aAAet8B,KAAKo8B,QAAQl0B,cAAclI,KAAK0M,QAAQuvB,sBAExD,OAASj8B,KAAKs8B,eAChBt8B,KAAKs8B,cAAe,KAGlBt8B,KAAKs8B,aAAc,CACvB,IAAI5d,EAAUxd,SAAS0F,cAAc,OAIrC,IAHA8X,EAAQnY,aAAa,QAAS,wBAC9BvG,KAAKo8B,QAAQr3B,YAAY2Z,GAElB1e,KAAKo8B,QAAQsB,YAAchf,GAChCA,EAAQ3Z,YAAY/E,KAAKo8B,QAAQsB,YAEnC19B,KAAKs8B,aAAet8B,KAAKo8B,QAAQl0B,cAAc,yBAIjD,GAAIlI,KAAK0M,QAAQqvB,kBAAmB,CAClC,IAAI4B,EAAaz8B,SAASI,iBAAiBtB,KAAK0M,QAAQqvB,mBAQxD,GAPA4B,EAAav6B,MAAMY,UAAUC,MAAMI,KAAKs5B,GAExCA,EAAWl8B,SAAQ,CAACqQ,EAAWmD,KACvBnD,EAAUzK,SAASrH,KAAKo8B,WAC9Bp8B,KAAK8R,UAAYA,OAGb6rB,EAAW7+B,OACf,MAAM,IAAI2J,MAAM,mDAIpBzI,KAAKg8B,gBAAkBh8B,KAAK0M,QAAQsvB,gBAAkB96B,SAASgH,cAAclI,KAAK0M,QAAQsvB,sBAAmBrF,EAGzG,mBAAsB32B,KAAK0M,QAAQmvB,aACrC77B,KAAK0M,QAAQmvB,WAAa96B,SAASf,KAAK0M,QAAQmvB,aAAe,GAE7D,mBAAsB77B,KAAK0M,QAAQovB,gBACrC97B,KAAK0M,QAAQovB,cAAgB/6B,SAASf,KAAK0M,QAAQovB,gBAAkB,GAGvE97B,KAAK49B,mBAGL59B,KAAK69B,iBAGL79B,KAAK89B,iBAGL99B,KAAK+9B,aAGL/9B,KAAK08B,cAAe,EAOtBpW,aAQE,GAPAtmB,KAAKg+B,YAAch+B,KAAKg8B,gBAAkBh8B,KAAKg8B,gBAAkBt8B,OAEjEM,KAAKg+B,YAAYrxB,iBAAiB,SAAU3M,KAAM,CAAE+gB,SAAS,EAAMC,SAAS,IAC5EhhB,KAAKg+B,YAAYrxB,iBAAiB,SAAU3M,KAAM,CAAE+gB,SAAS,EAAMC,SAAS,IAE5EhhB,KAAKo8B,QAAQzvB,iBAAiB,SAAWivB,EAAW57B,MAEhD,oBAAuBi+B,eAAgB,CACzC,MAAMC,EAAiB,IAAID,gBAAe,IAAMj+B,KAAKm+B,gBACrDD,EAAe/7B,QAAQnC,KAAKs8B,cAC5B4B,EAAe/7B,QAAQnC,KAAK8R,YAQhCwU,YAAY5a,GACV1L,KAAKo+B,aAAa1yB,GAOpB4a,iBACE,IAAItmB,KAAK48B,YAAT,CACA,IAAIyB,EAAOr+B,KAAK68B,WAGhBwB,EAAKlB,aAAkBxB,EAAc2C,eAAet+B,KAAK8R,WAAW8jB,IACpEyI,EAAKnQ,gBAAkBluB,KAAK8R,UAAUysB,aACtCF,EAAKG,gBAAkBH,EAAKlB,aAAekB,EAAKnQ,gBAGhDmQ,EAAKpB,cAAgBj9B,KAAKs8B,aAAajF,aACvCgH,EAAKnB,aAAgBl9B,KAAKs8B,aAAatJ,YAGvCqL,EAAKjB,eAAiB19B,OAAOoC,YAG7Bu8B,EAAKvB,cAAgBuB,EAAKnQ,gBAAkBmQ,EAAKpB,cAEjDj9B,KAAKy+B,6BAOPnY,4BACE,IAAI+X,EAAOr+B,KAAK68B,WAEhBwB,EAAKK,YAAc/C,EAAc2C,eAAet+B,KAAKo8B,SAASztB,KAE1D3O,KAAKg8B,iBACPqC,EAAKhB,YAAcr9B,KAAKg8B,gBAAgB2C,UACxCN,EAAKO,aAAe5+B,KAAKg8B,gBAAgB6C,aAEzCR,EAAKhB,YAAcn8B,SAASqxB,gBAAgBoM,WAAaz9B,SAASC,KAAKw9B,UACvEN,EAAKO,aAAe19B,SAASqxB,gBAAgBsM,YAAc39B,SAASC,KAAK09B,YAE3ER,EAAKS,eAAiBT,EAAKhB,YAAcgB,EAAKjB,eAE9CiB,EAAKxC,WAAgB77B,KAAK0M,QAAQmvB,WAClCwC,EAAKvC,cAAgB97B,KAAK0M,QAAQovB,cAE9B,mBAAsBuC,EAAKxC,aAC3BwC,EAAKxC,WAAa96B,SAASs9B,EAAKxC,WAAW77B,KAAKo8B,WAAa,GAE7D,mBAAsBiC,EAAKvC,gBAC3BuC,EAAKvC,cAAgB/6B,SAASs9B,EAAKvC,cAAc97B,KAAKo8B,WAAa,GAEnE,iBAAmBp8B,KAAKu8B,YAEtB8B,EAAKxC,WAAawC,EAAKtB,iBACzBsB,EAAKnJ,YAAcmJ,EAAKtB,eAAiBsB,EAAKxC,WAC9C77B,KAAK28B,UAAW,GAET,oBAAsB38B,KAAKu8B,aAEhC8B,EAAKvC,cAAgBuC,EAAKrB,oBAC5BqB,EAAKnJ,YAAcmJ,EAAKrB,kBAAoBqB,EAAKvC,cACjD97B,KAAK28B,UAAW,GAIpB0B,EAAKtB,eAAoBsB,EAAKxC,WAC9BwC,EAAKrB,kBAAoBqB,EAAKvC,cAQhCxV,wBACE,OAAOtmB,KAAK68B,WAAWO,gBACrBp9B,KAAK68B,WAAWG,kBAChBh9B,KAAK68B,WAAWE,eAChB/8B,KAAK68B,WAAWI,cAOpB3W,mBACE,IAAI+X,EAAOr+B,KAAK68B,WAChB,GAAIwB,EAAKf,kBAAoBe,EAAKhB,YAAlC,CAEA,IAAI0B,EAAW,SAAW/+B,KAAKkW,UAAY7M,KAAKL,IAAMK,KAAKJ,IAGvDo1B,EAAKhB,cAAgB0B,EAASV,EAAKhB,YAAagB,EAAKf,mBACvDt9B,KAAKkW,UAAY,SAAWlW,KAAKkW,UAAa,KAAO,SAQzDoQ,eACEtmB,KAAKy+B,4BACL,IAAIJ,EAAOr+B,KAAK68B,WACZmC,EAAcX,EAAKhB,YAAcgB,EAAKxC,WACtCoD,EAAYj/B,KAAKu8B,YAgBrB,OAdGyC,GAAeX,EAAKlB,cAAgBkB,EAAKnQ,iBAAmBmQ,EAAKpB,eAClEoB,EAAKnJ,WAAa,EAClB+J,EAAY,UAEZA,EAAc,OAASj/B,KAAKkW,UAC1BlW,KAAKk/B,2BAA6Bl/B,KAAKm/B,6BAI3Cd,EAAKnJ,WAAa7rB,KAAKJ,IAAI,EAAGo1B,EAAKnJ,YACnCmJ,EAAKnJ,WAAa7rB,KAAKL,IAAIq1B,EAAKnQ,gBAAiBmQ,EAAKnJ,YACtDmJ,EAAKnJ,WAAa7rB,KAAK+1B,MAAMf,EAAKnJ,YAElCmJ,EAAKf,gBAAkBe,EAAKhB,YACrB4B,EAQT3Y,6BACE,IAAI+X,EAAOr+B,KAAK68B,WACZwC,EAAgBhB,EAAKpB,cAAgBoB,EAAKlB,aAC1C6B,EAAcX,EAAKhB,YAAcgB,EAAKxC,WACtCyD,EAAiBjB,EAAKS,eAAiBT,EAAKvC,cAC5CmD,EAAYj/B,KAAKu8B,YA0BrB,OAxBIv8B,KAAKu/B,wBACHlB,EAAKpB,cAAgB+B,GAAeX,EAAKG,iBAC3CH,EAAKnJ,WAAamJ,EAAKG,gBAAkBa,EACzCJ,EAAY,oBAEHD,GAAeX,EAAKlB,eAC7BkB,EAAKnJ,WAAa8J,EAAcX,EAAKlB,aACrC8B,EAAY,gBAGVZ,EAAKG,iBAAmBc,GAC1BjB,EAAKnJ,WAAamJ,EAAKG,gBAAkBa,EACzCJ,EAAY,oBAEHI,EAAgBhB,EAAKnJ,YAAcoK,GAC5CjB,EAAKnJ,WAAaoK,EAAiBD,EACnCJ,EAAY,mBAEHZ,EAAKlB,aAAekB,EAAKnJ,YAAc8J,GAC/C,IAAMX,EAAKnJ,YAAcmJ,EAAKvB,gBAAkBuB,EAAKnJ,aACtD+J,EAAY,qBAITA,EAQT3Y,2BACE,IAAI+X,EAAOr+B,KAAK68B,WACZwC,EAAgBhB,EAAKpB,cAAgBoB,EAAKlB,aAC1C6B,EAAcX,EAAKhB,YAAcgB,EAAKxC,WACtCyD,EAAiBjB,EAAKS,eAAiBT,EAAKvC,cAC5CmD,EAAYj/B,KAAKu8B,YAkBrB,OAhBIyC,GAAeX,EAAKnJ,WAAamJ,EAAKlB,cACxCkB,EAAKnJ,WAAa8J,EAAcX,EAAKlB,aACrC8B,EAAY,gBAEHZ,EAAKG,iBAAmBc,GACjCjB,EAAKnJ,WAAamJ,EAAKG,gBAAkBa,EACzCJ,EAAY,oBAEDj/B,KAAKu/B,yBAEZlB,EAAKlB,cAAgB6B,GACpB,IAAMX,EAAKnJ,YAAcmJ,EAAKvB,gBAAkBuB,EAAKnJ,aACxD+J,EAAY,qBAITA,EAUT3Y,UAAU2Y,GACR,QAAI,IAAuBA,EAA3B,CAEA,IAAIp4B,EAAQ,CAAC24B,MAAO,GAAIC,MAAO,IAC3BpB,EAAOr+B,KAAK68B,WAEhB,OAAQoC,GACN,IAAK,eACHp4B,EAAM24B,MAAQ,CAACrkB,SAAU,QAASya,IAAKyI,EAAKxC,WACtCltB,KAAM0vB,EAAKK,YAAcL,EAAKO,aAAclwB,MAAO2vB,EAAKnB,cAC9D,MACF,IAAK,kBACHr2B,EAAM24B,MAAQ,CAACrkB,SAAU,QAASya,IAAK,OAAQjnB,KAAM0vB,EAAKK,YACpDgB,OAAQrB,EAAKvC,cAAeptB,MAAO2vB,EAAKnB,cAC9C,MACF,IAAK,mBACL,IAAK,oBACH,IAAIjiB,EAAYjb,KAAK2/B,cAAc,EAAGtB,EAAKnJ,WAAa,MAGtDruB,EAAM24B,MADJvkB,EACY,CAACI,UAAWJ,GAEZ,CAACE,SAAU,WAAYya,IAAKyI,EAAKnJ,WAAYxmB,MAAO2vB,EAAKnB,cAI7E,OAAQ+B,GACN,IAAK,eACL,IAAK,kBACL,IAAK,oBACL,IAAK,mBACHp4B,EAAM44B,MAAQ,CAAC59B,OAAQw8B,EAAKpB,cAAe9hB,SAAU,YAQzD,OAJAtU,EAAM44B,MAAQ9D,EAAcU,OAAO,CAACx6B,OAAQ,GAAIsZ,SAAU,IAAKtU,EAAM44B,OACrE54B,EAAM24B,MAAQ7D,EAAcU,OAAO,CAAClhB,SAAU,WAAYya,IAAK,GAAIjnB,KAAM,GACrE+wB,OAAQ,GAAIhxB,MAAO,GAAK2M,UAAW,IAAKxU,EAAM24B,OAE3C34B,GAUTyf,eAAesZ,GACb,IAAI5/B,KAAK48B,YAAT,CAEAgD,EAAQ5/B,KAAK28B,UAAYiD,IAAS,EAElB5/B,KAAK0M,QAAQmvB,WACV77B,KAAK0M,QAAQovB,cAEhC,IAAImD,EAAYj/B,KAAK6/B,eACjBh5B,EAAQ7G,KAAK8/B,UAAUb,GAE3B,IAAKj/B,KAAKu8B,aAAe0C,GAAaW,IAAUX,EAAW,CACzD,IAAIc,EAAa,SAAWd,EAAUe,cAAc31B,QAAQ,YAAa,IAAMuxB,EAC/ED,EAAcsE,aAAajgC,KAAKo8B,QAAS2D,GAErC,WAAad,EACftD,EAAcvzB,YAAYpI,KAAKo8B,QAASp8B,KAAK0M,QAAQwvB,aAErDP,EAAcj3B,SAAS1E,KAAKo8B,QAASp8B,KAAK0M,QAAQwvB,aAEpD,IAAK,IAAI78B,KAAOwH,EAAM44B,MAAO,CAC3B,IAAIp3B,EAAQ,iBAAoBxB,EAAM44B,MAAMpgC,GAAQ,KAAO,GAC3DW,KAAKo8B,QAAQv1B,MAAMxH,GAAOwH,EAAM44B,MAAMpgC,GAAOgJ,EAG/C,IAAK,IAAIhJ,KAAOwH,EAAM24B,MAAO,CAC3B,IAAIn3B,EAAQ,iBAAoBxB,EAAM24B,MAAMngC,GAAQ,KAAO,GAC3DW,KAAKs8B,aAAaz1B,MAAMxH,GAAOwH,EAAM24B,MAAMngC,GAAOgJ,EAGpD,IAAI63B,EAAe,WAAYjB,EAAUe,cAAc31B,QAAQ,YAAa,IAAMuxB,EAClFD,EAAcsE,aAAajgC,KAAKo8B,QAAS8D,QAErClgC,KAAK08B,eAAe18B,KAAKs8B,aAAaz1B,MAAM8H,KAAO9H,EAAM24B,MAAM7wB,MAGrE3O,KAAKu8B,YAAc0C,GAOrB3Y,mBAEM5mB,OAAOizB,YAAc3yB,KAAK0M,QAAQyvB,UACpCn8B,KAAK48B,aAAc,EACnB58B,KAAKu8B,YAAc,SAEnBv8B,KAAKo8B,QAAQh2B,gBAAgB,SAC7Bu1B,EAAcvzB,YAAYpI,KAAKo8B,QAASp8B,KAAK0M,QAAQwvB,aACrDl8B,KAAKs8B,aAAal2B,gBAAgB,UAElCpG,KAAK48B,aAAc,EASvBtW,aAAa5a,EAAQ,IACf1L,KAAKmgC,WACTngC,KAAKmgC,UAAW,EAEhB,CAAEC,IACAr3B,uBAAsB,KACpB,OAAQq3B,GAGN,IAAK,SACHpgC,KAAKy+B,4BACLz+B,KAAKqgC,mBACLrgC,KAAK89B,iBACL,MAIF,IAAK,SACL,QACE99B,KAAK49B,mBACL59B,KAAK69B,iBACL79B,KAAK89B,gBAAe,GAGxB99B,KAAKmgC,UAAW,MApBpB,CAsBGz0B,EAAMzK,OAOXqlB,sBACE,IAAIkW,EAAUx8B,KAAKw8B,QAEnBA,EAAQnhB,UAAYsgB,EAAc2E,mBAClC9D,EAAQC,YAAcd,EAAc2E,kBAAiB,GAWvDha,cAAcvc,EAAI,EAAGD,EAAI,EAAGy2B,EAAI,GAC9B,OAAIvgC,KAAKw8B,QAAQC,YAAqB,eAAiB1yB,EAAG,KAAMD,EAAG,KAAMy2B,EAAG,MACnEvgC,KAAKw8B,QAAQvhB,WAAmB,aAAclR,EAAG,KAAMD,EAAG,IAQrEwc,UACE5mB,OAAOwM,oBAAoB,SAAUlM,KAAM,CAACghB,SAAS,IACrDthB,OAAOwM,oBAAoB,SAAUlM,KAAM,CAACghB,SAAS,IAErDhhB,KAAKo8B,QAAQ17B,UAAUU,OAAOpB,KAAK0M,QAAQwvB,aAC3Cl8B,KAAKo8B,QAAQv1B,MAAM25B,UAAY,GAE/BxgC,KAAKo8B,QAAQlwB,oBAAoB,SAAW0vB,EAAW57B,MAEvD,IAAIygC,EAAa,CAACjB,MAAO,GAAIC,MAAO,IAEpCgB,EAAWjB,MAAQ,CAACrkB,SAAU,GAAIya,IAAK,GAAIjnB,KAAM,GAAI+wB,OAAQ,GAAIhxB,MAAO,GAAK2M,UAAW,IACxFolB,EAAWhB,MAAQ,CAAC59B,OAAQ,GAAIsZ,SAAU,IAE1C,IAAK,IAAI9b,KAAOohC,EAAWhB,MACzBz/B,KAAKo8B,QAAQv1B,MAAMxH,GAAOohC,EAAWhB,MAAMpgC,GAE7C,IAAK,IAAIA,KAAOohC,EAAWjB,MACzBx/B,KAAKs8B,aAAaz1B,MAAMxH,GAAOohC,EAAWjB,MAAMngC,GAE9CW,KAAK0M,QAAQg0B,cAAgB,oBAAuBC,eACtDA,aAAaC,OAAO5gC,KAAKs8B,aAAct8B,KAAKm+B,aAC5CwC,aAAaC,OAAO5gC,KAAK8R,UAAW9R,KAAKm+B,cAW7C7X,wBAAwBmW,GACtB,IAAIoE,GAAS,EACTC,EAAW,EAAgB,cAAgB,YAC3CC,EAAQD,EAASE,OAAO,GAAGC,cAAgBH,EAAS78B,MAAM,GAG1D4C,EADU3F,SAAS0F,cAAc,WACjBC,MAQpB,OANCi6B,EAAW,IAJG,CAAC,SAAU,MAAO,IAAK,MAIXrtB,KAAKstB,EAAQ,KAAOA,GAAOp8B,MAAM,KAAKlD,SAAQ,SAASq/B,EAAUjiC,GAC1F,QAAwB83B,IAApB9vB,EAAMi6B,GAER,OADAD,EAASC,GACF,KAGJD,EAUTva,oBAAoBsK,EAASsQ,EAAW90B,GACtC,IACE,IAAIV,EAAQ,IAAIy1B,YAAYD,EAAW,CAACtK,OAAQxqB,IAChD,MAAMvE,IACF6D,EAAQxK,SAASkgC,YAAY,gBAC3BC,gBAAgBH,GAAW,GAAM,EAAM90B,GAE/CwkB,EAAQ2C,cAAc7nB,GAQxB4a,cAAcoB,EAAUhb,GACtB,IAAI40B,EAAU,GACd,IAAK,IAAIjiC,KAAOqoB,OACV,IAAuBhb,EAAQrN,GAAOiiC,EAAQjiC,GAAOqN,EAAQrN,GAC5DiiC,EAAQjiC,GAAOqoB,EAASroB,GAE/B,OAAOiiC,EAOThb,sBAAsBsK,GACpB,IAAIiQ,EAAS,CAAClyB,KAAM,EAAGinB,IAAK,GAE5B,EAAE,CACA,IAAIY,EAAY5F,EAAQ4F,UACpBD,EAAa3F,EAAQ2F,WAEnBgL,MAAM/K,KACVqK,EAAOjL,KAAOY,GAEV+K,MAAMhL,KACVsK,EAAOlyB,MAAQ4nB,GAEjB3F,EAAY,SAAWA,EAAQyF,QACnBzF,EAAQlM,cAAgBkM,EAAQ4Q,mBACtC5Q,GACR,OAAOiQ,EASTva,gBAAgBsK,EAASxpB,GACjBu0B,EAAcx0B,SAASypB,EAASxpB,KAChCwpB,EAAQlwB,UACVkwB,EAAQlwB,UAAUC,IAAIyG,GAEtBwpB,EAAQxpB,WAAa,IAAMA,GAUjCkf,mBAAmBsK,EAASxpB,GACtBu0B,EAAcx0B,SAASypB,EAASxpB,KAC9BwpB,EAAQlwB,UACVkwB,EAAQlwB,UAAUU,OAAOgG,GAEzBwpB,EAAQxpB,UAAYwpB,EAAQxpB,UAAUiD,QAAQ,IAAIioB,OAAO,UAAYlrB,EAAUzC,MAAM,KAAK8O,KAAK,KAAO,UAAW,MAAO,MAU9H6S,gBAAgBsK,EAASxpB,GACvB,OAAIwpB,EAAQlwB,UACHkwB,EAAQlwB,UAAU2G,SAASD,GAE3B,IAAIkrB,OAAO,QAAUlrB,EAAY,QAAS,MAAM2iB,KAAK6G,EAAQxpB,WAQxEsgB,sBACE,OAAO5B,GAIX,OAAO6V,GApuBW,GA2uBpBj8B,OAAOi8B,cAAgBA,GC/uBrBz6B,SAASgH,cAAc,aACX,IAAIyzB,GAAc,WAAY,CACpCI,kBAAmB,UACnBE,qBAAsB,kBACtBJ,WAAY,GACZC,cAAe,KCPzB,IAAI2F,GA8BJ,SAASpF,IACP,IAAIqF,EAAO,GAAGz9B,MAAMI,KAAK4B,WACrB07B,GAAO,EACW,kBAAXD,EAAK,KACdC,EAAOD,EAAKhmB,SAEd,IAAImlB,EAASa,EAAK,GAClB,GAAIE,GAAef,GACjB,MAAM,IAAIp4B,MAAM,8BAIlB,IAFA,IAAIo5B,EAAYH,EAAKz9B,MAAM,GACvB0mB,EAAMkX,EAAU/iC,OACXD,EAAI,EAAGA,EAAI8rB,EAAK9rB,IAAK,CAC5B,IAAIijC,EAAWD,EAAUhjC,GACzB,IAAK,IAAIQ,KAAOyiC,EACd,GAAI3iC,OAAO6E,UAAU+kB,eAAe1kB,KAAKy9B,EAAUziC,GAAM,CACvD,IAAIG,EAAQsiC,EAASziC,GACrB,GAAIsiC,GAAQI,GAAYviC,GAAQ,CAC9B,IAAIqjB,EAAOzf,MAAMD,QAAQ3D,GAAS,GAAK,GACvCqhC,EAAOxhC,GAAOg9B,GACZ,EACAl9B,OAAO6E,UAAU+kB,eAAe1kB,KAAKw8B,EAAQxhC,KAASuiC,GAAef,EAAOxhC,IACxEwhC,EAAOxhC,GACPwjB,EACJrjB,QAGFqhC,EAAOxhC,GAAOG,GAKtB,OAAOqhC,GAGT,SAASkB,GAAYxiC,GACnB,OAAO6D,MAAMD,QAAQ5D,IAAiC,mBAAzB,GAAGuqB,SAASzlB,KAAK9E,GAGhD,SAASqiC,GAAeI,GACtB,OAAQA,GAAsB,iBAAPA,GAAiC,mBAAPA,ECpEnD,SAASC,GAAuBC,GAC9B,OAAOA,GAAKA,EAAEpZ,WAAaoZ,EAAEC,QAAUD,EAGzC,MAAME,GAEF9b,GAAG5a,EAAOud,GAMN,OALAjpB,KAAKqiC,WAAariC,KAAKqiC,YAAc,GAGhCriC,KAAKqiC,WAAW32B,KAAQ1L,KAAKqiC,WAAW32B,GAAS,IACtD1L,KAAKqiC,WAAW32B,GAAO7H,KAAKolB,GACrBjpB,KAEXsmB,KAAK5a,KAAUg2B,GACX1hC,KAAKqiC,WAAariC,KAAKqiC,YAAc,GAErC,IAAIC,EAAYtiC,KAAKqiC,WAAW32B,GAChC,GAAI42B,EAAW,IAAK,IAAI35B,KAAY25B,EAAU35B,EAASuF,MAAMlO,KAAM0hC,GAKnE,OAHI1hC,KAAK4wB,SAAS5wB,KAAK4wB,QAAQ2C,cAAcvzB,KAAKuiC,UAAU,YAAc72B,EAAO,CAC7Eg2B,KAAMA,KAEH1hC,KAEXsmB,UAAU4a,EAAWtK,GACjB,IAAI4L,EAAS,CACTC,SAAS,EACTxgB,YAAY,EACZ2U,OAAQA,GAEZ,GAAkC,mBAAvBl3B,OAAOyhC,YAA4B,OAAO,IAAIA,YAAYD,EAAWsB,GAI5E,IAAIE,EAAMxhC,SAASkgC,YAAY,eAE/B,OADAsB,EAAIrB,gBAAgBH,EAAWsB,EAAOC,QAASD,EAAOvgB,WAAYugB,EAAO5L,QAClE8L,EAMfpc,IAAI5a,EAAOud,GACP,IAAKjpB,KAAKqiC,YAAmC,IAArBp8B,UAAUnH,OAG9B,OAFAkB,KAAKqiC,WAAa,GAEXriC,KAGX,IAAIsiC,EAAYtiC,KAAKqiC,WAAW32B,GAChC,IAAK42B,EAAW,OAAOtiC,KAEvB,GAAyB,IAArBiG,UAAUnH,OAEV,cADOkB,KAAKqiC,WAAW32B,GAChB1L,KAGX,IAAI,IAAInB,EAAI,EAAGA,EAAIyjC,EAAUxjC,OAAQD,IAAI,CAErC,GADeyjC,EAAUzjC,KACRoqB,EAAI,CACjBqZ,EAAUK,OAAO9jC,EAAG,GACpB,OAGR,OAAOmB,MAojBf,IAAI4iC,GA1iBuC,CAOrCC,IAAK,KAILtF,OAAQ,OAGRuF,iBAAiB,EAIjBC,QAAS,KAITC,gBAAiB,EAOjBC,gBAAgB,EAMhBC,UAAU,EAKVC,eAAe,EAGfC,UAAW,QAGXC,sBAAsB,EAGtBC,aAAa,EAGbC,iBAAkB,EAGlBC,YAAa,IAKbC,UAAW,OAGXC,uBAAuB,EAGvBC,qBAAsB,GAGtBC,eAAgB,IAGhBC,gBAAiB,IAIjBC,gBAAiB,OAQjBC,YAAa,KAGbC,aAAc,KAKdC,eAAgB,KAGhBC,cAAe,GAIfC,aAAc,UAOdC,aAAc,IAMdC,SAAU,KAIVC,QAAS,KAMTC,gBAAgB,EAQhBC,WAAW,EAGXC,mBAAmB,EAWnBC,cAAe,KAIfC,kBAAmB,KAUnBC,kBAAkB,EAIlBC,WAAW,EAKXC,gBAAgB,EAMhBC,kBAAmB,KAGnBC,iBAAiB,EAOjBC,qBAAsB,OAQtBjkB,QAAS,KAGTkkB,eAAgB,KAKhBC,WAAY,KAMZC,eAAe,EAGfC,mBAAoB,4BAGpBC,oBAAqB,0DAKrBC,iBAAkB,kFAIlBC,eAAgB,uEAGhBC,oBAAqB,uCAIrBC,kBAAmB,6CAGnBC,iBAAkB,gBAGlBC,mBAAoB,mBAGpBC,6BAA8B,+CAG9BC,eAAgB,cAGhBC,2BAA4B,KAI5BC,qBAAsB,qCAItBC,kBAAmB,CACjBC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,KAKLhgB,SAWAA,OAAQigB,EAAOC,EAAKC,GAClB,GAAIA,EAAO,MAAO,CACdC,OAAQD,EAAME,KAAKC,OAAOC,KAC1BC,aAAcL,EAAMt1B,MACpB41B,gBAAiBN,EAAME,KAAK5qB,KAC5BirB,YAAahnC,KAAK0M,QAAQ02B,UAC1B6D,kBAAmBR,EAAME,KAAKC,OAAOM,gBACrCC,kBAAmBV,EAAMt1B,MAAQnR,KAAK0M,QAAQ02B,YAWpDgE,OAAO,CAACT,EAAM3gB,IACLA,IAOTqhB,eAAgB,SAASV,EAAM3gB,GAC7BA,KAOFshB,YAAY,EAKZhhB,WAEE,IAAIihB,EACJvnC,KAAK4wB,QAAQxpB,UAAY,GAAGpH,KAAK4wB,QAAQxpB,qCACzC,IAAK,IAAI3B,KAASzF,KAAK4wB,QAAQwF,qBAAqB,OAAO,GAAI,uBAAuBrM,KAAKtkB,EAAM2B,WAAY,CACzGmgC,EAAiB9hC,EACjBA,EAAM2B,UAAY,aAClB,MAECmgC,IACDA,EAAiBC,GAAyC5gC,cAAc,+CACxE5G,KAAK4wB,QAAQ7rB,YAAYwiC,IAE7B,IAAIE,EAAOF,EAAenR,qBAAqB,QAAQ,GAKvD,OAJIqR,IACwB,MAApBA,EAAKC,YAAqBD,EAAKC,YAAc1nC,KAAK0M,QAAQ44B,oBACnC,MAAlBmC,EAAKE,YAAmBF,EAAKE,UAAY3nC,KAAK0M,QAAQ44B,sBAE5DtlC,KAAK4wB,QAAQ7rB,YAAY/E,KAAK4nC,oBAavCthB,OAAQqgB,EAAMj4B,EAAO7M,EAAQsiC,GAC3B,IAAI0D,EAAO,CACPC,KAAM,EACNC,KAAM,EACNC,SAAUrB,EAAKj4B,MACfu5B,UAAWtB,EAAK9kC,QAEhBqmC,EAAWvB,EAAKj4B,MAAQi4B,EAAK9kC,OAEpB,MAAT6M,GAA2B,MAAV7M,GACjB6M,EAAQm5B,EAAKG,SACbnmC,EAASgmC,EAAKI,WACE,MAATv5B,EAAeA,EAAQ7M,EAASqmC,EACxB,MAAVrmC,IAAgBA,EAAS6M,EAAQw5B,GAI1C,IAAIC,GAFJz5B,EAAQrF,KAAKL,IAAI0F,EAAOm5B,EAAKG,YAC7BnmC,EAASwH,KAAKL,IAAInH,EAAQgmC,EAAKI,YAE/B,GAAIJ,EAAKG,SAAWt5B,GAASm5B,EAAKI,UAAYpmC,EAE1C,GAAqB,SAAjBsiC,EACI+D,EAAWC,GACXN,EAAKI,UAAYtB,EAAK9kC,OACtBgmC,EAAKG,SAAWH,EAAKI,UAAYE,IAEjCN,EAAKG,SAAWrB,EAAKj4B,MACrBm5B,EAAKI,UAAYJ,EAAKG,SAAWG,OAElC,CAAA,GAAqB,YAAjBhE,EAIJ,MAAM,IAAI17B,MAAM,yBAAyB07B,MAFxC+D,EAAWC,EAAUtmC,EAAS6M,EAAQw5B,EACrCx5B,EAAQ7M,EAASqmC,EAO9B,OAJAL,EAAKC,MAAQnB,EAAKj4B,MAAQm5B,EAAKG,UAAY,EAC3CH,EAAKE,MAAQpB,EAAK9kC,OAASgmC,EAAKI,WAAa,EAC7CJ,EAAKO,SAAW15B,EAChBm5B,EAAKQ,UAAYxmC,EACVgmC,GAUTvhB,cAAeqgB,EAAM3gB,GACnB,OAAKhmB,KAAK0M,QAAQq3B,aAAe/jC,KAAK0M,QAAQs3B,eAAiB2C,EAAK1lC,KAAKmd,MAAM,WAAmBpe,KAAKsoC,YAAY3B,EAAM3mC,KAAK0M,QAAQq3B,YAAa/jC,KAAK0M,QAAQs3B,aAAchkC,KAAK0M,QAAQy3B,aAAcne,GAC7LA,EAAK2gB,IAenB4B,gBAA+BtG,GAzZT,u9DAkaxB3b,KAAMze,GACF,OAAO7H,KAAK4wB,QAAQlwB,UAAUU,OAAO,kBAEzCklB,UAAWze,KAEXye,QAASze,GACL,OAAO7H,KAAK4wB,QAAQlwB,UAAUU,OAAO,kBAEzCklB,UAAWze,GACP,OAAO7H,KAAK4wB,QAAQlwB,UAAUC,IAAI,kBAEtC2lB,SAAUze,GACN,OAAO7H,KAAK4wB,QAAQlwB,UAAUC,IAAI,kBAEtC2lB,UAAWze,GACP,OAAO7H,KAAK4wB,QAAQlwB,UAAUU,OAAO,kBAEzCklB,MAAOze,KAIPye,QACI,OAAOtmB,KAAK4wB,QAAQlwB,UAAUU,OAAO,eAIzCklB,UAAWqgB,GAEP,GADI3mC,KAAK4wB,UAAY5wB,KAAK+kC,mBAAmB/kC,KAAK4wB,QAAQlwB,UAAUC,IAAI,cACpEX,KAAK+kC,oBAAsB/kC,KAAK0M,QAAQs4B,gBAAiB,CAIzD,IAAK,IAAI5/B,KAHTuhC,EAAK6B,eAAiBhB,GAAyC5gC,cAAc5G,KAAK0M,QAAQ67B,gBAAgBnsB,QAC1GuqB,EAAK4B,gBAAkB5B,EAAK6B,eAC5BxoC,KAAK+kC,kBAAkBhgC,YAAY4hC,EAAK6B,gBACvB7B,EAAK6B,eAAelnC,iBAAiB,mBAAkB8D,EAAKsiC,YAAcf,EAAKliC,KAChG,IAAKW,KAAQuhC,EAAK6B,eAAelnC,iBAAiB,kBAAkB8D,EAAK6sB,UAAYjyB,KAAKyoC,SAAS9B,EAAK5qB,MACpG/b,KAAK0M,QAAQo4B,iBACb6B,EAAK+B,YAAclB,GAAyC5gC,cAAc,oEAAoE5G,KAAK0M,QAAQo5B,sBAC3Ja,EAAK6B,eAAezjC,YAAY4hC,EAAK+B,cAEzC,IAAIC,EAAmB9gC,IACnBA,EAAEE,iBACFF,EAAEC,kBACE6+B,EAAKiC,SAAWpB,GAAyCqB,UAAkBrB,GAAyCsB,QAAQ9oC,KAAK0M,QAAQm5B,8BAA8B,IAAI7lC,KAAK+oC,WAAWpC,KAGvL3mC,KAAK0M,QAAQq5B,2BAAmCyB,GAAyCsB,QAAQ9oC,KAAK0M,QAAQq5B,4BAA4B,IAAI/lC,KAAK+oC,WAAWpC,KAEtJ3mC,KAAK+oC,WAAWpC,IAGpC,IAAK,IAAIqC,KAAcrC,EAAK6B,eAAelnC,iBAAiB,oBAAoB0nC,EAAWr8B,iBAAiB,QAASg8B,KAI7HriB,YAAaqgB,GAET,OAD2B,MAAvBA,EAAK6B,gBAA4D,MAAlC7B,EAAK6B,eAAenjC,YAAoBshC,EAAK6B,eAAenjC,WAAWkC,YAAYo/B,EAAK6B,gBACpHxoC,KAAKipC,+BAIhB3iB,UAAWqgB,EAAMuC,GACb,GAAIvC,EAAK6B,eAAgB,CACrB7B,EAAK6B,eAAe9nC,UAAUU,OAAO,mBACrC,IAAK,IAAI+nC,KAAoBxC,EAAK6B,eAAelnC,iBAAiB,uBAC9D6nC,EAAiBC,IAAMzC,EAAKliC,KAC5B0kC,EAAiBjpB,IAAMgpB,EAE3B,OAAOroC,YAAW,IAAI8lC,EAAK6B,eAAe9nC,UAAUC,IAAI,qBACtD,KAKV2lB,MAAOqgB,EAAMn+B,GACT,GAAIm+B,EAAK6B,eAAgB,CACrB7B,EAAK6B,eAAe9nC,UAAUC,IAAI,YACX,iBAAZ6H,GAAwBA,EAAQ6b,QAAO7b,EAAUA,EAAQ6b,OACpE,IAAK,IAAIjf,KAAQuhC,EAAK6B,eAAelnC,iBAAiB,0BAA0B8D,EAAKsiC,YAAcl/B,IAG3G8d,kBAKAA,WAAYqgB,GACR,GAAIA,EAAK6B,iBACL7B,EAAK6B,eAAe9nC,UAAUC,IAAI,iBAC9BgmC,EAAK+B,aAAa,OAAO/B,EAAK+B,YAAYzW,UAAYjyB,KAAK0M,QAAQi5B,kBAG/Erf,uBAKAA,eAAgBqgB,EAAM0C,EAAUC,GAC5B,GAAI3C,EAAK6B,eAAgB,IAAK,IAAIpjC,KAAQuhC,EAAK6B,eAAelnC,iBAAiB,4BAA8C,aAAlB8D,EAAKmkC,SAA0BnkC,EAAK5F,MAAQ6pC,EAAWjkC,EAAKyB,MAAM6H,MAAQ,GAAG26B,MAI5L/iB,wBAKAA,YAEAA,oBAIAA,QAASqgB,GACL,GAAIA,EAAK6B,eAAgB,OAAO7B,EAAK6B,eAAe9nC,UAAUC,IAAI,eAEtE2lB,oBAGAA,SAAUqgB,GACN,OAAO3mC,KAAKyM,KAAK,QAASk6B,EAAM3mC,KAAK0M,QAAQk5B,qBAEjDtf,qBAIAA,SAAUqgB,GAEN,GADIA,EAAK+B,cAAa/B,EAAK+B,YAAYzW,UAAYjyB,KAAK0M,QAAQo5B,gBAC5Da,EAAK6B,eAAgB,OAAO7B,EAAK6B,eAAe9nC,UAAUC,IAAI,gBAEtE2lB,qBAEAA,qBAEAA,oBAEAA,kBAEAA,gBAMJ,MAAMkhB,WAAiDpF,GACnD9b,mBAEItmB,KAAKgE,UAAUwlC,QAAUpH,GAQzBpiC,KAAKgE,UAAU8H,OAAS,CACpB,OACA,YACA,UACA,YACA,WACA,YACA,YACA,aACA,cACA,YACA,QACA,gBACA,aACA,qBACA,iBACA,sBACA,UACA,kBACA,UACA,kBACA,WACA,mBACA,WACA,mBACA,QACA,mBACA,kBACA,iBAEJ9L,KAAKgE,UAAUylC,gBAAkB,GACjCzpC,KAAKgE,UAAU0lC,sBAAuB,EAG1CpjB,mBACI,OAAOtmB,KAAKumC,MAAM/gC,QAAQmhC,GAAOA,EAAKgD,WACpCzpC,KAAKymC,GAAOA,IAKlBrgB,mBACI,OAAOtmB,KAAKumC,MAAM/gC,QAAQmhC,IAAQA,EAAKgD,WACrCzpC,KAAKymC,GAAOA,IAGlBrgB,mBAAmBsiB,GACf,OAAO5oC,KAAKumC,MAAM/gC,QAAQmhC,GAAOA,EAAKiC,SAAWA,IAC/C1oC,KAAKymC,GAAOA,IAIlBrgB,iBACI,OAAOtmB,KAAK4pC,mBAAmBpC,GAAyCqC,QAE5EvjB,oBACI,OAAOtmB,KAAK4pC,mBAAmBpC,GAAyCqB,WAE5EviB,gBACI,OAAOtmB,KAAK4pC,mBAAmBpC,GAAyCsC,OAG5ExjB,iBACI,OAAOtmB,KAAKumC,MAAM/gC,QAAQmhC,GAAOA,EAAKiC,SAAWpB,GAAyCqB,WAAalC,EAAKiC,SAAWpB,GAAyCqC,SAC9J3pC,KAAKymC,GAAOA,IAKlBrgB,OAII,GAF6B,SAAzBtmB,KAAK4wB,QAAQyF,SAAoBr2B,KAAK4wB,QAAQrqB,aAAa,UAAW,uBACtEvG,KAAK4wB,QAAQlwB,UAAU2G,SAAS,cAAgBrH,KAAK4wB,QAAQ1oB,cAAc,gBAAgBlI,KAAK4wB,QAAQ7rB,YAAYyiC,GAAyC5gC,cAAc,8EAA8E5G,KAAK0M,QAAQ24B,sCACtQrlC,KAAK+pC,kBAAkBjrC,OAAQ,CAC/B,IAAIkrC,EAAuB,KACnBhqC,KAAKiqC,iBAAiBjqC,KAAKiqC,gBAAgB5kC,WAAWkC,YAAYvH,KAAKiqC,iBAC3EjqC,KAAKiqC,gBAAkB/oC,SAAS0F,cAAc,SAC9C5G,KAAKiqC,gBAAgB1jC,aAAa,OAAQ,SACZ,OAA1BvG,KAAK0M,QAAQ23B,UAAqBrkC,KAAK0M,QAAQ23B,SAAW,IAAGrkC,KAAKiqC,gBAAgB1jC,aAAa,WAAY,YAC/GvG,KAAKiqC,gBAAgB7iC,UAAY,kBACE,OAA/BpH,KAAK0M,QAAQg4B,eAAwB1kC,KAAKiqC,gBAAgB1jC,aAAa,SAAUvG,KAAK0M,QAAQg4B,eACrE,OAAzB1kC,KAAK0M,QAAQsU,SAAkBhhB,KAAKiqC,gBAAgB1jC,aAAa,UAAWvG,KAAK0M,QAAQsU,SAE7FhhB,KAAKiqC,gBAAgB1jC,aAAa,WAAY,MAG9CvG,KAAKiqC,gBAAgBpjC,MAAMqjC,WAAa,SACxClqC,KAAKiqC,gBAAgBpjC,MAAMsU,SAAW,WACtCnb,KAAKiqC,gBAAgBpjC,MAAM+uB,IAAM,IACjC51B,KAAKiqC,gBAAgBpjC,MAAM8H,KAAO,IAClC3O,KAAKiqC,gBAAgBpjC,MAAMhF,OAAS,IACpC7B,KAAKiqC,gBAAgBpjC,MAAM6H,MAAQ,IACnC84B,GAAyC2C,WAAWnqC,KAAK0M,QAAQu4B,qBAAsB,wBAAwBlgC,YAAY/E,KAAKiqC,iBAChIjqC,KAAKiqC,gBAAgBt9B,iBAAiB,UAAU,KAC5C,IAAM45B,MAAOA,GAAWvmC,KAAKiqC,gBAC7B,GAAI1D,EAAMznC,OAAQ,IAAK,IAAI6nC,KAAQJ,EAAMvmC,KAAKoqC,QAAQzD,GACtD3mC,KAAKyM,KAAK,aAAc85B,GACxByD,QAGRA,IAEJhqC,KAAKqqC,IAAqB,OAAf3qC,OAAO2qC,IAAe3qC,OAAO2qC,IAAM3qC,OAAO4qC,UAIrD,IAAK,IAAIpJ,KAAalhC,KAAK8L,OAAO9L,KAAKsM,GAAG40B,EAAWlhC,KAAK0M,QAAQw0B,IAClElhC,KAAKsM,GAAG,kBAAkB,IAAItM,KAAKuqC,8BAEnCvqC,KAAKsM,GAAG,eAAe,IAAItM,KAAKuqC,8BAEhCvqC,KAAKsM,GAAG,YAAaq6B,GAAO3mC,KAAKyM,KAAK,WAAYk6B,KAGlD3mC,KAAKsM,GAAG,YAAaq6B,IACjB,GAAoC,IAAhC3mC,KAAKwqC,gBAAgB1rC,QAAoD,IAApCkB,KAAKyqC,oBAAoB3rC,QAAiD,IAAjCkB,KAAK0qC,iBAAiB5rC,OACxG,OAAO+B,YAAW,IAAIb,KAAKyM,KAAK,kBAC9B,MAWN,IAAIk+B,EAAgB,SAAS9iC,GAIzB,GAbkB,SAASA,GAC3B,GAAIA,EAAE+iC,aAAaC,MAGnB,IAAI,IAAIhsC,EAAI,EAAGA,EAAIgJ,EAAE+iC,aAAaC,MAAM/rC,OAAQD,IAC5C,GAAgC,UAA5BgJ,EAAE+iC,aAAaC,MAAMhsC,GAAgB,OAAO,EAEpD,OAAO,EAMFisC,CAAcjjC,GAEnB,OADAA,EAAEC,kBACED,EAAEE,eAAuBF,EAAEE,iBACnBF,EAAEkjC,aAAc,GAqDhC,OAlDA/qC,KAAK2L,UAAY,CACb,CACIilB,QAAS5wB,KAAK4wB,QACd9kB,OAAQ,CACJk/B,UAAYnjC,GACD7H,KAAKyM,KAAK,YAAa5E,GAElCojC,UAAYpjC,IACR8iC,EAAc9iC,GACP7H,KAAKyM,KAAK,YAAa5E,IAElCqjC,SAAWrjC,IAIP,IAAIsjC,EACJ,IACIA,EAAOtjC,EAAE+iC,aAAaQ,cACxB,MAAO/mB,IAIT,OAFAxc,EAAE+iC,aAAaS,WAAa,SAAWF,GAAQ,aAAeA,EAAO,OAAS,OAC9ER,EAAc9iC,GACP7H,KAAKyM,KAAK,WAAY5E,IAEjCyjC,UAAYzjC,GACD7H,KAAKyM,KAAK,YAAa5E,GAElC0jC,KAAO1jC,IACH8iC,EAAc9iC,GACP7H,KAAKurC,KAAK1jC,IAErB2jC,QAAU3jC,GACC7H,KAAKyM,KAAK,UAAW5E,MAK5C7H,KAAK+pC,kBAAkBtoC,SAASgqC,GACrBzrC,KAAK2L,UAAU9H,KAAK,CACvB+sB,QAAS6a,EACT3/B,OAAQ,CACJ4/B,MAAQhJ,KAEA+I,IAAqBzrC,KAAK4wB,SAAW8R,EAAI/jC,SAAWqB,KAAK4wB,SAAW4W,GAAyCmE,cAAcjJ,EAAI/jC,OAAQqB,KAAK4wB,QAAQ1oB,cAAc,kBAAiBlI,KAAKiqC,gBAAgByB,SACrM,QAKvB1rC,KAAK4rC,SACE5rC,KAAK0M,QAAQgH,KAAKrP,KAAKrE,MAGlCsmB,UAQI,OAPAtmB,KAAKyhB,UACLzhB,KAAK6rC,gBAAe,IACQ,MAAxB7rC,KAAKiqC,gBAA0BjqC,KAAKiqC,gBAAgB5kC,gBAAasxB,KACjE32B,KAAKiqC,gBAAgB5kC,WAAWkC,YAAYvH,KAAKiqC,iBACjDjqC,KAAKiqC,gBAAkB,aAEpBjqC,KAAK4wB,QAAQkb,SACbtE,GAAyCjiB,UAAUod,OAAO6E,GAAyCjiB,UAAU3hB,QAAQ5D,MAAO,GAEvIsmB,4BACI,IAAIylB,EACAC,EAAiB,EACjBC,EAAa,EAEjB,GADkBjsC,KAAKksC,iBACPptC,OAAQ,CACpB,IAAK,IAAI6nC,KAAQ3mC,KAAKksC,iBAClBF,GAAkBrF,EAAKC,OAAO0C,UAC9B2C,GAActF,EAAKC,OAAOuF,MAE9BJ,EAAsB,IAAMC,EAAiBC,OAC1CF,EAAsB,IAC7B,OAAO/rC,KAAKyM,KAAK,sBAAuBs/B,EAAqBE,EAAYD,GAI7E1lB,cAAcvQ,GACV,MAAsC,mBAA3B/V,KAAK0M,QAAQ+2B,UAAiCzjC,KAAK0M,QAAQ+2B,UAAU1tB,GACpE,GAAG/V,KAAK0M,QAAQ+2B,YAAYzjC,KAAK0M,QAAQu2B,eAAiB,IAAIltB,KAAO,KAIrFuQ,YAAYqgB,GACR,MAAuC,mBAA5B3mC,KAAK0M,QAAQy4B,WAAkCwB,EAAKliC,KACxDzE,KAAK0M,QAAQy4B,WAAWwB,GAMnCrgB,kBACI,IAAI8lB,EAAkBC,EACtB,GAAID,EAAmBpsC,KAAKssC,sBAAuB,OAAOF,EAC1D,IAAIG,EAAe,4BACfvsC,KAAK0M,QAAQ64B,mBAAkBgH,GAAgB,MAAMvsC,KAAK0M,QAAQ64B,wBACtEgH,GAAgB,4BAA4BvsC,KAAKwsC,cAAc,OAAOxsC,KAAK0M,QAAQu2B,eAAiB,2BAAwBtM,kDAC5H,IAAI8V,EAASjF,GAAyC5gC,cAAc2lC,GASpE,MAR6B,SAAzBvsC,KAAK4wB,QAAQyF,SACbgW,EAAO7E,GAAyC5gC,cAAc,iBAAiB5G,KAAK0M,QAAQm2B,8CAA8C7iC,KAAK0M,QAAQ6wB,mBACvJ8O,EAAKtnC,YAAY0nC,KAGjBzsC,KAAK4wB,QAAQrqB,aAAa,UAAW,uBACrCvG,KAAK4wB,QAAQrqB,aAAa,SAAUvG,KAAK0M,QAAQ6wB,SAEtC,MAAR8O,EAAeA,EAAOI,EAKjCnmB,sBACI,IAAIomB,EAAc,SAASt2B,GACvB,IAAK,IAAI1U,KAAM0U,EACX,GAAI,qBAAqB2T,KAAKroB,EAAG0F,WAAY,OAAO1F,GAG5D,IAAK,IAAI20B,IAAW,CAChB,MACA,QACF,CACE,IAAIsW,EACJ,GAAIA,EAAWD,EAAY1sC,KAAK4wB,QAAQwF,qBAAqBC,IAAW,OAAOsW,GAIvFrmB,sBACI,OAAOtmB,KAAK2L,UAAUzL,KAAK0sC,GAAmB,MACtC,IAAI/L,EAAS,GACb,IAAI,IAAIn1B,KAASkhC,EAAiB9gC,OAAO,CACrC,IAAIG,EAAW2gC,EAAiB9gC,OAAOJ,GACvCm1B,EAAOh9B,KAAK+oC,EAAiBhc,QAAQjkB,iBAAiBjB,EAAOO,GAAU,IAE3E,OAAO40B,GAN+B,KAWlDva,uBACI,OAAOtmB,KAAK2L,UAAUzL,KAAK0sC,GAAmB,MACtC,IAAI/L,EAAS,GACb,IAAI,IAAIn1B,KAASkhC,EAAiB9gC,OAAO,CACrC,IAAIG,EAAW2gC,EAAiB9gC,OAAOJ,GACvCm1B,EAAOh9B,KAAK+oC,EAAiBhc,QAAQ1kB,oBAAoBR,EAAOO,GAAU,IAE9E,OAAO40B,GAN+B,KAWlDva,UAKI,OAJAtmB,KAAK+pC,kBAAkBtoC,SAASmvB,GAAUA,EAAQlwB,UAAUU,OAAO,kBAEnEpB,KAAK6sC,uBACL7sC,KAAKof,UAAW,EACTpf,KAAKumC,MAAMrmC,KAAKymC,GAAO3mC,KAAK8sC,aAAanG,KAGpDrgB,SAII,cAHOtmB,KAAKof,SACZpf,KAAK+pC,kBAAkBtoC,SAASmvB,GAAUA,EAAQlwB,UAAUC,IAAI,kBAEzDX,KAAK+sC,sBAGhBzmB,SAASvK,GACL,IAAIixB,EAAe,EACfC,EAAe,IACnB,GAAIlxB,EAAO,EAAG,CACV,IAAImxB,EAAQ,CACR,KACA,KACA,KACA,KACA,KAEJ,IAAI,IAAIruC,EAAI,EAAGA,EAAIquC,EAAMpuC,OAAQD,IAAI,CACjC,IAAIwJ,EAAO6kC,EAAMruC,GAEjB,GAAIkd,GADS1S,KAAKsX,IAAI3gB,KAAK0M,QAAQ03B,aAAc,EAAIvlC,GAAK,GACtC,CAChBmuC,EAAejxB,EAAO1S,KAAKsX,IAAI3gB,KAAK0M,QAAQ03B,aAAc,EAAIvlC,GAC9DouC,EAAe5kC,EACf,OAGR2kC,EAAe3jC,KAAK+1B,MAAM,GAAK4N,GAAgB,GAEnD,MAAO,WAAWA,cAAyBhtC,KAAK0M,QAAQu5B,kBAAkBgH,KAG9E3mB,8BACI,OAA6B,MAAzBtmB,KAAK0M,QAAQ23B,UAAoBrkC,KAAKmtC,mBAAmBruC,QAAUkB,KAAK0M,QAAQ23B,UAC5ErkC,KAAKmtC,mBAAmBruC,SAAWkB,KAAK0M,QAAQ23B,UAAUrkC,KAAKyM,KAAK,kBAAmBzM,KAAKumC,OACzFvmC,KAAK4wB,QAAQlwB,UAAUC,IAAI,yBACxBX,KAAK4wB,QAAQlwB,UAAUU,OAAO,wBAEhDklB,KAAKze,GACD,IAAKA,EAAE+iC,aAAc,OACrB5qC,KAAKyM,KAAK,OAAQ5E,GAGlB,IAAI0+B,EAAQ,GACZ,IAAI,IAAI1nC,EAAI,EAAGA,EAAIgJ,EAAE+iC,aAAarE,MAAMznC,OAAQD,IAAI0nC,EAAM1nC,GAAKgJ,EAAE+iC,aAAarE,MAAM1nC,GAEpF,GAAI0nC,EAAMznC,OAAQ,CACd,IAAMgF,MAAOA,GAAW+D,EAAE+iC,aACtB9mC,GAASA,EAAMhF,QAAuC,MAA7BgF,EAAM,GAAGspC,iBACtCptC,KAAKqtC,mBAAmBvpC,GACnB9D,KAAKstC,YAAY/G,GAE1BvmC,KAAKyM,KAAK,aAAc85B,GAE5BjgB,MAAMze,GACF,GACK,OA6kC4BrI,EA9kCQ,MAALqI,EAAYA,EAAE0lC,mBAAgB5W,EA8kC1Btb,EA9kCsCvR,GAAIA,EAAEhG,MA+kCjF,MAAOtE,EAA0C6b,EAAU7b,QAASm3B,GA9kC5D,OA6kCnB,IAAyCn3B,EAAO6b,EA5kCxCrb,KAAKyM,KAAK,QAAS5E,GACnB,IAAM/D,MAAOA,GAAW+D,EAAE0lC,cAC1B,OAAIzpC,EAAMhF,OAAekB,KAAKqtC,mBAAmBvpC,QAAjD,EAEJwiB,YAAYigB,GACR,IAAK,IAAII,KAAQJ,EAAMvmC,KAAKoqC,QAAQzD,GAIxCrgB,mBAAmBxiB,GACf,MAAO,MACH,IAAI+8B,EAAS,GACb,IAAK,IAAI5rB,KAAQnR,EAAM,CACnB,IAAI3D,EACyB,MAAzB8U,EAAKm4B,mBAA6BjtC,EAAQ8U,EAAKm4B,oBAC3CjtC,EAAMqtC,OAAQ3M,EAAOh9B,KAAK7D,KAAKoqC,QAAQn1B,EAAKw4B,cACvCttC,EAAMutC,YACf7M,EAAOh9B,KAAK7D,KAAK2tC,uBAAuBxtC,EAAOA,EAAMsE,OAChDo8B,EAAOh9B,UAAK8yB,GACQ,MAAlB1hB,EAAKw4B,YACK,MAAbx4B,EAAK24B,MAA8B,SAAd34B,EAAK24B,MAAiB/M,EAAOh9B,KAAK7D,KAAKoqC,QAAQn1B,EAAKw4B,cAE1E5M,EAAOh9B,UAAK8yB,GAEvB,OAAOkK,GAdJ,GAkBXva,uBAAuBunB,EAAWC,GAC9B,IAAIC,EAAYF,EAAUG,eACtBC,EAAgB5pB,IAAQ6pB,OAijCW3uC,EAjjC2B4uC,QAijCtBC,EAjjC+B,MAijCnB/yB,EAjjC2BoO,GAAIA,EAAE4kB,IAAIhqB,GAkjC7F,MAAO9kB,GAAkE,mBAApBA,EAAI6uC,GAAmC/yB,EAAU9b,EAAK6uC,QAC1G,EAFT,IAA+C7uC,EAAK6uC,EAAY/yB,GA9iCxD,IAAIizB,EAAc,IACPP,EAAUO,aAAaruC,IAC1B,GAAIA,EAAQnB,OAAS,EAAG,CACpB,IAAK,IAAIqB,KAASF,EACVE,EAAMqtC,OAAQrtC,EAAMwmC,MAAMA,IAC1B,IAAI3mC,KAAK0M,QAAQ+3B,mBAAmD,MAA9BkC,EAAKliC,KAAKuvB,UAAU,EAAG,GAE7D,OADA2S,EAAK4H,SAAW,GAAGT,KAAQnH,EAAKliC,OACzBzE,KAAKoqC,QAAQzD,MAEfxmC,EAAMutC,aAAa1tC,KAAK2tC,uBAAuBxtC,EAAO,GAAG2tC,KAAQ3tC,EAAMsE,QAKpF6pC,IAEJ,OAAO,OACRL,GAEP,OAAOK,IAQXhoB,OAAOqgB,EAAM3gB,GACLhmB,KAAK0M,QAAQ82B,aAAemD,EAAK5qB,KAAkC,QAA3B/b,KAAK0M,QAAQ82B,YAAuBxd,EAAKhmB,KAAK0M,QAAQ84B,eAAen7B,QAAQ,eAAgBhB,KAAK+1B,MAAMuH,EAAK5qB,KAAO,KAAO,OAAS,KAAK1R,QAAQ,kBAAmBrK,KAAK0M,QAAQ82B,cACnNgE,GAAyCgH,YAAY7H,EAAM3mC,KAAK0M,QAAQg4B,eAChD,MAAzB1kC,KAAK0M,QAAQ23B,UAAoBrkC,KAAKmtC,mBAAmBruC,QAAUkB,KAAK0M,QAAQ23B,UACrFre,EAAKhmB,KAAK0M,QAAQs5B,qBAAqB37B,QAAQ,eAAgBrK,KAAK0M,QAAQ23B,WAC5ErkC,KAAKyM,KAAK,mBAAoBk6B,IAC3B3mC,KAAK0M,QAAQ06B,OAAO/iC,KAAKrE,KAAM2mC,EAAM3gB,GAJsDA,EAAKhmB,KAAK0M,QAAQ+4B,qBAMxHnf,QAAQqgB,GACJA,EAAKC,OAAS,CACVC,KAAMW,GAAyCiH,SAC/CpF,SAAU,EAGV8C,MAAOxF,EAAK5qB,KACZutB,UAAW,EACXoF,SAAU1uC,KAAK2uC,YAAYhI,IAE/B3mC,KAAKumC,MAAM1iC,KAAK8iC,GAChBA,EAAKiC,OAASpB,GAAyCsC,MACvD9pC,KAAKyM,KAAK,YAAak6B,GACvB3mC,KAAK4uC,kBAAkBjI,GACvB3mC,KAAKonC,OAAOT,GAAOtiB,IACXA,GACAsiB,EAAKgD,UAAW,EAChB3pC,KAAK6uC,iBAAiB,CAClBlI,GACDtiB,KAEHsiB,EAAKgD,UAAW,EACZ3pC,KAAK0M,QAAQm4B,WAAW7kC,KAAK8uC,YAAYnI,IAGjD3mC,KAAKipC,iCAIb3iB,aAAaigB,GACT,IAAK,IAAII,KAAQJ,EAAMvmC,KAAK8uC,YAAYnI,GACxC,OAAO,KAEXrgB,YAAYqgB,GACR,GAAIA,EAAKiC,SAAWpB,GAAyCsC,QAA2B,IAAlBnD,EAAKgD,SAIpE,MAAM,IAAIlhC,MAAM,oFAFnB,GADAk+B,EAAKiC,OAASpB,GAAyCqC,OACnD7pC,KAAK0M,QAAQk4B,iBAAkB,OAAO/jC,YAAW,IAAIb,KAAK+uC,gBAC5D,GAGVzoB,kBAAkBqgB,GACd,GAAI3mC,KAAK0M,QAAQg3B,uBAAyBiD,EAAK1lC,KAAKmd,MAAM,YAAcuoB,EAAK5qB,MAA4C,QAApC/b,KAAK0M,QAAQi3B,qBAE9F,OADA3jC,KAAKypC,gBAAgB5lC,KAAK8iC,GACnB9lC,YAAW,IAAIb,KAAKgvC,0BACzB,GAGV1oB,yBACI,GAAItmB,KAAK0pC,sBAAwD,IAAhC1pC,KAAKypC,gBAAgB3qC,OAAc,OACpEkB,KAAK0pC,sBAAuB,EAC5B,IAAI/C,EAAO3mC,KAAKypC,gBAAgB/tB,QAChC,OAAO1b,KAAKivC,gBAAgBtI,EAAM3mC,KAAK0M,QAAQk3B,eAAgB5jC,KAAK0M,QAAQm3B,gBAAiB7jC,KAAK0M,QAAQo3B,iBAAiB,GAAOoF,IAC9HlpC,KAAKyM,KAAK,YAAak6B,EAAMuC,GAC7BlpC,KAAK0pC,sBAAuB,EACrB1pC,KAAKgvC,4BAIpB1oB,WAAWqgB,GAIP,GAHIA,EAAKiC,SAAWpB,GAAyCqB,WAAW7oC,KAAK8sC,aAAanG,GAC1F3mC,KAAKumC,MAAQ2I,GAA8BlvC,KAAKumC,MAAOI,GACvD3mC,KAAKyM,KAAK,cAAek6B,GACC,IAAtB3mC,KAAKumC,MAAMznC,OAAc,OAAOkB,KAAKyM,KAAK,SAGlD6Z,eAAe6oB,GAEc,MAArBA,IAA2BA,GAAoB,GACnD,IAAK,IAAIxI,KAAQ3mC,KAAKumC,MAAMtiC,SAAY0iC,EAAKiC,SAAWpB,GAAyCqB,WAAasG,IAAmBnvC,KAAK+oC,WAAWpC,GACjJ,OAAO,KAKXrgB,YAAYqgB,EAAMj4B,EAAO7M,EAAQsiC,EAAcx7B,GAC3C,OAAO3I,KAAKivC,gBAAgBtI,EAAMj4B,EAAO7M,EAAQsiC,GAAc,GAAM,CAAC+E,EAASkG,KAC3E,GAAc,MAAVA,EACJ,OAAOzmC,EAASg+B,GACX,CACD,IAAM1C,eAAgBA,GAAoBjkC,KAAK0M,QACzB,MAAlBu3B,IAAwBA,EAAiB0C,EAAK1lC,MAClD,IAAIouC,EAAiBD,EAAOE,UAAUrL,EAAgBjkC,KAAK0M,QAAQw3B,eAGnE,MAFuB,eAAnBD,GAAsD,cAAnBA,IACvCoL,EAAiBE,GAAkCC,QAAQ7I,EAAK8I,QAASJ,IAClE1mC,EAAS6+B,GAAyCkI,cAAcL,QAInF/oB,gBAAgBqgB,EAAMj4B,EAAO7M,EAAQsiC,EAAcwL,EAAgBhnC,GAC/D,IAAIinC,EAAa,IAAIC,WACrBD,EAAWE,OAAS,KAChBnJ,EAAK8I,QAAUG,EAAW/O,OAER,kBAAd8F,EAAK1lC,KAITjB,KAAK+vC,uBAAuBpJ,EAAMj4B,EAAO7M,EAAQsiC,EAAcwL,EAAgBhnC,GAH3D,MAAZA,GAAkBA,EAASinC,EAAW/O,SAKlD+O,EAAWI,cAAcrJ,GAQ7BrgB,oBAAoB2pB,EAAUC,EAAUvnC,EAAUwnC,EAAaC,GAAkB,GAG7E,GAFApwC,KAAKyM,KAAK,YAAawjC,GACvBjwC,KAAKyM,KAAK,WAAYwjC,GACjBG,EAGE,CACH,IAAIC,EAAUC,IACVtwC,KAAKyM,KAAK,YAAawjC,EAAUK,GAC7B3nC,GAAUA,KAElBsnC,EAASR,QAAUS,EACnBlwC,KAAK+vC,uBAAuBE,EAAUjwC,KAAK0M,QAAQk3B,eAAgB5jC,KAAK0M,QAAQm3B,gBAAiB7jC,KAAK0M,QAAQo3B,gBAAiB9jC,KAAK0M,QAAQijC,eAAgBU,EAAQF,QARpKnwC,KAAKyM,KAAK,YAAawjC,EAAUC,GAC7BvnC,GAAUA,IAUtB2d,uBAAuBqgB,EAAMj4B,EAAO7M,EAAQsiC,EAAcwL,EAAgBhnC,EAAUwnC,GAGhF,IAAIh4B,EAAMjX,SAAS0F,cAAc,OAoEjC,OAnEIupC,IAAah4B,EAAIg4B,YAAcA,GAEnCR,EAAwE,cAAvD5oC,iBAAiB7F,SAASC,MAAwB,kBAA4BwuC,EAC/Fx3B,EAAI23B,OAAS,KACT,IAAIS,EAAY5nC,GAAWA,EAAS,GAMpC,MAJoB,oBAAT6nC,MAAiC,OAATA,MAAiBb,IAAgBY,EAAY5nC,GAAW6nC,KAAKC,QAAQt4B,GAAK,WACrG,OAAOxP,EAAS6nC,KAAKE,OAAO1wC,KAAM,oBAGnCuwC,GAAUI,IACbhK,EAAKj4B,MAAQyJ,EAAIzJ,MACjBi4B,EAAK9kC,OAASsW,EAAItW,OAClB,IAAI+uC,EAAa5wC,KAAK0M,QAAQiM,OAAOtU,KAAKrE,KAAM2mC,EAAMj4B,EAAO7M,EAAQsiC,GACjEiL,EAASluC,SAAS0F,cAAc,UAChCiqC,EAAMzB,EAAO0B,WAAW,MAO5B,OANA1B,EAAO1gC,MAAQkiC,EAAWxI,SAC1BgH,EAAOvtC,OAAS+uC,EAAWvI,UACvBsI,EAAc,IACdvB,EAAO1gC,MAAQkiC,EAAWvI,UAC1B+G,EAAOvtC,OAAS+uC,EAAWxI,UAExBuI,GACH,KAAK,EAEDE,EAAI51B,UAAUm0B,EAAO1gC,MAAO,GAC5BmiC,EAAI7b,OAAO,EAAG,GACd,MACJ,KAAK,EAED6b,EAAI51B,UAAUm0B,EAAO1gC,MAAO0gC,EAAOvtC,QACnCgvC,EAAIE,OAAO1nC,KAAK2nC,IAChB,MACJ,KAAK,EAEDH,EAAI51B,UAAU,EAAGm0B,EAAOvtC,QACxBgvC,EAAI7b,MAAM,GAAI,GACd,MACJ,KAAK,EAED6b,EAAIE,OAAO,GAAM1nC,KAAK2nC,IACtBH,EAAI7b,MAAM,GAAI,GACd,MACJ,KAAK,EAED6b,EAAIE,OAAO,GAAM1nC,KAAK2nC,IACtBH,EAAI51B,UAAU,GAAIm0B,EAAO1gC,OACzB,MACJ,KAAK,EAEDmiC,EAAIE,OAAO,GAAM1nC,KAAK2nC,IACtBH,EAAI51B,UAAUm0B,EAAOvtC,QAASutC,EAAO1gC,OACrCmiC,EAAI7b,OAAO,EAAG,GACd,MACJ,KAAK,EAED6b,EAAIE,QAAQ,GAAM1nC,KAAK2nC,IACvBH,EAAI51B,WAAWm0B,EAAOvtC,OAAQ,GAItCovC,GAAsCJ,EAAK14B,EAAwB,MAAnBy4B,EAAW9I,KAAe8I,EAAW9I,KAAO,EAAsB,MAAnB8I,EAAW7I,KAAe6I,EAAW7I,KAAO,EAAG6I,EAAW5I,SAAU4I,EAAW3I,UAA8B,MAAnB2I,EAAWM,KAAeN,EAAWM,KAAO,EAAsB,MAAnBN,EAAWO,KAAeP,EAAWO,KAAO,EAAGP,EAAWxI,SAAUwI,EAAWvI,WACvT,IAAIiI,EAAYlB,EAAOE,UAAU,aACjC,GAAgB,MAAZ3mC,EAAkB,OAAOA,EAAS2nC,EAAWlB,OAGzC,MAAZzmC,IAAkBwP,EAAIi5B,QAAUzoC,GAC7BwP,EAAI+H,IAAMymB,EAAK8I,QAG1BnpB,eACI,IAAM0c,gBAAiBA,GAAqBhjC,KAAK0M,QAC7C2kC,EAAmBrxC,KAAKyqC,oBAAoB3rC,OAC5CD,EAAIwyC,EAER,GAAIA,GAAoBrO,EAAiB,OACzC,IAAIsO,EAActxC,KAAK0qC,iBACvB,GAAM4G,EAAYxyC,OAAS,EAA3B,CACA,GAAIkB,KAAK0M,QAAQu2B,eACjB,OAAOjjC,KAAKuxC,aAAaD,EAAYrtC,MAAM,EAAG++B,EAAkBqO,IAC3D,KAAMxyC,EAAImkC,GAAgB,CAC3B,IAAKsO,EAAYxyC,OAAQ,OAEzBkB,KAAKwxC,YAAYF,EAAY51B,SAC7B7c,MAIRynB,YAAYqgB,GACR,OAAO3mC,KAAKuxC,aAAa,CACrB5K,IAIRrgB,aAAaigB,GACT,IAAK,IAAII,KAAQJ,EACbI,EAAK8K,YAAa,EAClB9K,EAAKiC,OAASpB,GAAyCqB,UACvD7oC,KAAKyM,KAAK,aAAck6B,GAG5B,OADI3mC,KAAK0M,QAAQu2B,gBAAgBjjC,KAAKyM,KAAK,qBAAsB85B,GAC1DvmC,KAAK0xC,YAAYnL,GAE5BjgB,iBAAiBkgB,GAEb,OAAexmC,KAAKumC,MAAM/gC,QAAQmhC,GAAOA,EAAKH,MAAQA,IACpDtmC,KAAKymC,GAAOA,IAOlBrgB,aAAaqgB,GACT,GAAIA,EAAKiC,SAAWpB,GAAyCqB,UAAW,CACpE,IAAI8I,EAAe3xC,KAAK4xC,iBAAiBjL,EAAKH,KAC9C,IAAK,IAAIqL,KAAeF,EAAaE,EAAYjJ,OAASpB,GAAyCsK,cAC3E,IAAbnL,EAAKH,KAAqBG,EAAKH,IAAIuL,QAC9C,IAAK,IAAIC,KAAgBL,EAAa3xC,KAAKyM,KAAK,WAAYulC,GACxDhyC,KAAK0M,QAAQu2B,gBAAgBjjC,KAAKyM,KAAK,mBAAoBklC,QACxDhL,EAAKiC,SAAWpB,GAAyCsC,OAASnD,EAAKiC,SAAWpB,GAAyCqC,SAClIlD,EAAKiC,OAASpB,GAAyCsK,SACvD9xC,KAAKyM,KAAK,WAAYk6B,GAClB3mC,KAAK0M,QAAQu2B,gBAAgBjjC,KAAKyM,KAAK,mBAAoB,CAC3Dk6B,KAGR,GAAI3mC,KAAK0M,QAAQk4B,iBAAkB,OAAO5kC,KAAK+uC,eAEnDzoB,cAAc2rB,KAAWvQ,GACrB,MAAsB,mBAAXuQ,EAA8BA,EAAO/jC,MAAMlO,KAAM0hC,GACrDuQ,EAEX3rB,WAAWqgB,GACP,OAAO3mC,KAAK0xC,YAAY,CACpB/K,IAGRrgB,YAAYigB,GACRvmC,KAAKkyC,gBAAgB3L,GAAQ4L,IACzB,GAAInyC,KAAK0M,QAAQw2B,SAAU,CAGvB,IAAIkP,EAAkBD,EAAiB,GACvC5L,EAAM,GAAGK,OAAOyL,QAAUryC,KAAK0M,QAAQw2B,WAAaljC,KAAK0M,QAAQy2B,eAAiBiP,EAAgBr2B,KAAO/b,KAAK0M,QAAQ02B,WACtHmD,EAAM,GAAGK,OAAOM,gBAAkB79B,KAAKF,KAAKipC,EAAgBr2B,KAAO/b,KAAK0M,QAAQ02B,WAEpF,GAAImD,EAAM,GAAGK,OAAOyL,QAAS,CAIzB,IAAI1L,EAAOJ,EAAM,GACb6L,EAAkBD,EAAiB,GAEvCxL,EAAKC,OAAO0L,OAAS,GACrB,IAAIC,EAAkB,KAClB,IAAIC,EAAa,EAEjB,UAAyC7b,IAAnCgQ,EAAKC,OAAO0L,OAAOE,IAA0BA,IAEnD,GAAIA,GAAc7L,EAAKC,OAAOM,gBAAiB,OAE/C,IAAI/iC,EAAQquC,EAAaxyC,KAAK0M,QAAQ02B,UAClCh/B,EAAMiF,KAAKL,IAAI7E,EAAQnE,KAAK0M,QAAQ02B,UAAWgP,EAAgBr2B,MAC/D02B,EAAY,CACZhuC,KAAMzE,KAAKwsC,cAAc,GACzBpgC,KAAMgmC,EAAgBM,YAAcN,EAAgBM,YAAYvuC,EAAOC,GAAOguC,EAAgBnuC,MAAME,EAAOC,GAC3GsqC,SAAU/H,EAAKC,OAAO8H,SACtB8D,WAAYA,GAEhB7L,EAAKC,OAAO0L,OAAOE,GAAc,CAC7B7L,KAAMA,EACNx1B,MAAOqhC,EACPC,UAAWA,EACX7J,OAAQpB,GAAyCqB,UACjDQ,SAAU,EACVsJ,QAAS,GAEb3yC,KAAK4yC,YAAYrM,EAAO,CACpBkM,KAoBR,GAjBA9L,EAAKC,OAAOiM,oBAAsB,CAACpM,EAAOqM,KACtC,IAAIC,GAAc,EAClBtM,EAAMmC,OAASpB,GAAyCwL,QAExDvM,EAAMgM,UAAY,KAClBhM,EAAMqM,SAAWrM,EAAMD,IAAIyM,aAC3BxM,EAAMyM,gBAAkBzM,EAAMD,IAAI2M,wBAElC1M,EAAMD,IAAM,KACZ,IAAI,IAAI3nC,EAAI,EAAGA,EAAI8nC,EAAKC,OAAOM,gBAAiBroC,IAAI,CAChD,QAA8B83B,IAA1BgQ,EAAKC,OAAO0L,OAAOzzC,GAAkB,OAAO0zC,IAC5C5L,EAAKC,OAAO0L,OAAOzzC,GAAG+pC,SAAWpB,GAAyCwL,UAASD,GAAc,GAErGA,GAAa/yC,KAAK0M,QAAQ26B,eAAeV,GAAM,KAC/C3mC,KAAKozC,UAAU7M,EAAOuM,EAAU,UAGpC9yC,KAAK0M,QAAQ22B,qBAAsB,IAAI,IAAIxkC,EAAI,EAAGA,EAAI8nC,EAAKC,OAAOM,gBAAiBroC,IAAI0zC,SACtFA,QACF,CACH,IAAIc,EAAa,GACjB,IAAI,IAAIx0C,EAAI,EAAGA,EAAI0nC,EAAMznC,OAAQD,IAAIw0C,EAAWx0C,GAAK,CACjD4F,KAAMzE,KAAKwsC,cAAc3tC,GACzBuN,KAAM+lC,EAAiBtzC,GACvB6vC,SAAUnI,EAAM1nC,GAAG+nC,OAAO8H,UAE9B1uC,KAAK4yC,YAAYrM,EAAO8M,OAKpC/sB,UAAUqgB,EAAMH,GACZ,IAAI,IAAI3nC,EAAI,EAAGA,EAAI8nC,EAAKC,OAAOM,gBAAiBroC,IAC5C,QAA8B83B,IAA1BgQ,EAAKC,OAAO0L,OAAOzzC,IAAoB8nC,EAAKC,OAAO0L,OAAOzzC,GAAG2nC,MAAQA,EAAK,OAAOG,EAAKC,OAAO0L,OAAOzzC,GAQhHynB,YAAYigB,EAAO8M,GACf,IAAI7M,EAAM,IAAI8M,eAEd,IAAK,IAAI3M,KAAQJ,EAAMI,EAAKH,IAAMA,EAC9BD,EAAM,GAAGK,OAAOyL,UAEpB9L,EAAM,GAAGK,OAAO0L,OAAOe,EAAW,GAAGb,YAAYhM,IAAMA,GACvD,IAAIjJ,EAASv9B,KAAKuzC,cAAcvzC,KAAK0M,QAAQ6wB,OAAQgJ,EAAO8M,GACxDxQ,EAAM7iC,KAAKuzC,cAAcvzC,KAAK0M,QAAQm2B,IAAK0D,EAAO8M,GACtD7M,EAAIgN,KAAKjW,EAAQsF,GAAK,GAER7iC,KAAKuzC,cAAcvzC,KAAK0M,QAAQq2B,QAASwD,KAC1CC,EAAIzD,QAAU/iC,KAAKuzC,cAAcvzC,KAAK0M,QAAQq2B,QAASwD,IAEpEC,EAAI1D,kBAAoB9iC,KAAK0M,QAAQo2B,gBACrC0D,EAAIsJ,OAAUjoC,IACV7H,KAAKyzC,mBAAmBlN,EAAOC,EAAK3+B,IAExC2+B,EAAIkN,UAAY,KACZ1zC,KAAK2zC,mBAAmBpN,EAAOC,EAAK,0BAA0BxmC,KAAK0M,QAAQq2B,QAAU,gBAEzFyD,EAAI4K,QAAU,KACVpxC,KAAK2zC,mBAAmBpN,EAAOC,KAGH,MAAdA,EAAII,OAAiBJ,EAAII,OAASJ,GACxCoN,WAAc/rC,GAAI7H,KAAK6zC,2BAA2BtN,EAAOC,EAAK3+B,GAE1E,IAAIy8B,EAAUtkC,KAAK0M,QAAQ63B,eAAiB,CACxCuP,OAAQ,mBACRC,gBAAiB,WACjBC,mBAAoB,kBACpB,GAEAh0C,KAAK0M,QAAQ46B,aAAYhD,EAAQ,gBAAkBiC,EAAM,GAAGtlC,MAC5DjB,KAAK0M,QAAQ43B,SAAS2P,GAAkB3P,EAAStkC,KAAK0M,QAAQ43B,SAClE,IAAI,IAAI4P,KAAc5P,EAAQ,CAC1B,IAAI6P,EAAc7P,EAAQ4P,GACtBC,GAAa3N,EAAI4N,iBAAiBF,EAAYC,GAEtD,GAAIn0C,KAAK0M,QAAQ46B,WAAY,CAGzB,IAAK,IAAIX,KAAQJ,EAAMvmC,KAAKyM,KAAK,UAAWk6B,EAAMH,GAC9CxmC,KAAK0M,QAAQu2B,gBAAgBjjC,KAAKyM,KAAK,kBAAmB85B,EAAOC,GACrExmC,KAAKq0C,cAAc7N,EAAK,KAAMD,OAC3B,CACH,IAAI+N,EAAW,IAAIC,SAEnB,GAAIv0C,KAAK0M,QAAQ81B,OAAQ,CACrB,IAAIgS,EAAmBx0C,KAAK0M,QAAQ81B,OACJ,mBAArBgS,IAAiCA,EAAmBA,EAAiBnwC,KAAKrE,KAAMumC,EAAOC,EAAKD,EAAM,GAAGK,OAAOyL,QAAUryC,KAAKy0C,UAAUlO,EAAM,GAAIC,GAAO,OACjK,IAAI,IAAInnC,KAAOm1C,EAAiB,CAC5B,IAAIh1C,EAAQg1C,EAAiBn1C,GAC7B,GAAI+D,MAAMD,QAAQ3D,GAGlB,IAAI,IAAIX,EAAI,EAAGA,EAAIW,EAAMV,OAAQD,IAAIy1C,EAAS1vC,OAAOvF,EAAKG,EAAMX,SAC3Dy1C,EAAS1vC,OAAOvF,EAAKG,IAIlC,IAAK,IAAImnC,KAAQJ,EAAMvmC,KAAKyM,KAAK,UAAWk6B,EAAMH,EAAK8N,GACnDt0C,KAAK0M,QAAQu2B,gBAAgBjjC,KAAKyM,KAAK,kBAAmB85B,EAAOC,EAAK8N,GAC1Et0C,KAAK00C,oBAAoBJ,GAGzB,IAAI,IAAIz1C,EAAI,EAAGA,EAAIw0C,EAAWv0C,OAAQD,IAAI,CACtC,IAAI4zC,EAAYY,EAAWx0C,GAC3By1C,EAAS1vC,OAAO6tC,EAAUhuC,KAAMguC,EAAUrmC,KAAMqmC,EAAU/D,UAE9D1uC,KAAKq0C,cAAc7N,EAAK8N,EAAU/N,IAI1CjgB,gBAAgBigB,EAAOvgB,GACnB,IAAImsB,EAAmB,GAEnBwC,EAAc,EAClB,IAAI,IAAI91C,EAAI,EAAGA,EAAI0nC,EAAMznC,OAAQD,IAAImB,KAAK0M,QAAQkoC,cAAcvwC,KAAKrE,KAAMumC,EAAM1nC,IAAKuzC,IAClFD,EAAiBtzC,GAAKuzC,IAChBuC,IAAgBpO,EAAMznC,QAAQknB,EAAKmsB,MAIjD7rB,oBAAoBguB,GAEhB,GAA6B,SAAzBt0C,KAAK4wB,QAAQyF,QAAoB,IAAK,IAAIyE,KAAS96B,KAAK4wB,QAAQtvB,iBAAiB,mCAAmC,CACpH,IAAIuzC,EAAY/Z,EAAMt6B,aAAa,QAC/Bs0C,EAAYha,EAAMt6B,aAAa,QAGnC,GAFIs0C,IAAWA,EAAYA,EAAU9U,eAEjC,MAAO6U,EACX,GAAsB,WAAlB/Z,EAAMzE,SAAwByE,EAAMia,aAAa,YAEjD,IAAK,IAAI9C,KAAUnX,EAAMpuB,QAAYulC,EAAO+C,UAAUV,EAAS1vC,OAAOiwC,EAAW5C,EAAOzyC,aAChFs1C,GAA2B,aAAdA,GAA0C,UAAdA,GAAyBha,EAAMma,UAASX,EAAS1vC,OAAOiwC,EAAW/Z,EAAMt7B,QAKtI8mB,2BAA2BigB,EAAOC,EAAK3+B,GACnC,GAAK0+B,EAAM,GAAGK,OAAOyL,QAchB,CAID,IAAI1L,EAAOJ,EAAM,GAGbE,EAAQzmC,KAAKy0C,UAAU9N,EAAMH,GAC7B3+B,GACA4+B,EAAM4C,SAAW,IAAMxhC,EAAEqtC,OAASrtC,EAAEskC,MACpC1F,EAAM0F,MAAQtkC,EAAEskC,MAChB1F,EAAM6C,UAAYzhC,EAAEqtC,SAGpBzO,EAAM4C,SAAW,IACjB5C,EAAM6C,UAAY7C,EAAM0F,OAG5BxF,EAAKC,OAAOyC,SAAW,EACvB1C,EAAKC,OAAOuF,MAAQ,EACpBxF,EAAKC,OAAO0C,UAAY,EACxB,IAAI,IAAIzqC,EAAI,EAAGA,EAAI8nC,EAAKC,OAAOM,gBAAiBroC,IAAQ8nC,EAAKC,OAAO0L,OAAOzzC,SAAgD,IAAnC8nC,EAAKC,OAAO0L,OAAOzzC,GAAGwqC,WAC1G1C,EAAKC,OAAOyC,UAAY1C,EAAKC,OAAO0L,OAAOzzC,GAAGwqC,SAC9C1C,EAAKC,OAAOuF,OAASxF,EAAKC,OAAO0L,OAAOzzC,GAAGstC,MAC3CxF,EAAKC,OAAO0C,WAAa3C,EAAKC,OAAO0L,OAAOzzC,GAAGyqC,WAInD3C,EAAKC,OAAOyC,SAAW1C,EAAKC,OAAOyC,SAAW1C,EAAKC,OAAOM,gBAC1DlnC,KAAKyM,KAAK,iBAAkBk6B,EAAMA,EAAKC,OAAOyC,SAAU1C,EAAKC,OAAO0C,gBA1CxE,IAAK,IAAI3C,KAAQJ,EACTI,EAAKC,OAAOuF,OAASxF,EAAKC,OAAO0C,WAAa3C,EAAKC,OAAO0C,WAAa3C,EAAKC,OAAOuF,QACnFtkC,GACA8+B,EAAKC,OAAOyC,SAAW,IAAMxhC,EAAEqtC,OAASrtC,EAAEskC,MAC1CxF,EAAKC,OAAOuF,MAAQtkC,EAAEskC,MACtBxF,EAAKC,OAAO0C,UAAYzhC,EAAEqtC,SAG1BvO,EAAKC,OAAOyC,SAAW,IACvB1C,EAAKC,OAAO0C,UAAY3C,EAAKC,OAAOuF,OAExCnsC,KAAKyM,KAAK,iBAAkBk6B,EAAMA,EAAKC,OAAOyC,SAAU1C,EAAKC,OAAO0C,YAkC5EhjB,mBAAmBigB,EAAOC,EAAK3+B,GAC3B,IAAIirC,EACJ,GAAIvM,EAAM,GAAGqC,SAAWpB,GAAyCsK,UAC1C,IAAnBtL,EAAI2O,WAAR,CACA,GAAyB,gBAArB3O,EAAI4O,cAAuD,SAArB5O,EAAI4O,eAC1CtC,EAAWtM,EAAIyM,aACXzM,EAAI6O,kBAAkB,kBAAoB7O,EAAI6O,kBAAkB,gBAAgBzxC,QAAQ,qBAAqB,IAC7GkvC,EAAWp9B,KAAKC,MAAMm9B,GACxB,MAAOzuB,GACLxc,EAAIwc,EACJyuB,EAAW,qCAGnB9yC,KAAK6zC,2BAA2BtN,EAAOC,GACjC,KAAOA,EAAIoC,QAAUpC,EAAIoC,OAAS,IAC/BrC,EAAM,GAAGK,OAAOyL,QAAS9L,EAAM,GAAGK,OAAOiM,oBAAoB7yC,KAAKy0C,UAAUlO,EAAM,GAAIC,GAAMsM,GAChG9yC,KAAKozC,UAAU7M,EAAOuM,EAAUjrC,GAFS7H,KAAK2zC,mBAAmBpN,EAAOC,EAAKsM,IAItFxsB,mBAAmBigB,EAAOC,EAAKsM,GAC3B,GAAIvM,EAAM,GAAGqC,SAAWpB,GAAyCsK,SAAjE,CACA,GAAIvL,EAAM,GAAGK,OAAOyL,SAAWryC,KAAK0M,QAAQ42B,YAAa,CACrD,IAAImD,EAAQzmC,KAAKy0C,UAAUlO,EAAM,GAAIC,GACrC,GAAKC,EAAMkM,UAAa3yC,KAAK0M,QAAQ62B,iBAIjC,YAHAvjC,KAAK4yC,YAAYrM,EAAO,CACpBE,EAAMgM,YAGPtE,QAAQmH,KAAK,4CAExBt1C,KAAK6uC,iBAAiBtI,EAAOuM,GAAY9yC,KAAK0M,QAAQg5B,kBAAkBr7B,QAAQ,iBAAkBm8B,EAAIoC,QAASpC,IAEnHlgB,cAAckgB,EAAK8N,EAAU/N,GACzB,GAAsB,GAAlBC,EAAI2O,WAIR,GAAIn1C,KAAK0M,QAAQ46B,WACb,GAAIf,EAAM,GAAGK,OAAOyL,QAAS,CACzB,MAAM5L,EAAQzmC,KAAKy0C,UAAUlO,EAAM,GAAIC,GACvCA,EAAI+O,KAAK9O,EAAMgM,UAAUrmC,WACtBo6B,EAAI+O,KAAKhP,EAAM,SACnBC,EAAI+O,KAAKjB,QARZnG,QAAQmH,KAAK,iFAYrBhvB,UAAUigB,EAAO0M,EAAcprC,GAC3B,IAAK,IAAI8+B,KAAQJ,EACbI,EAAKiC,OAASpB,GAAyCwL,QACvDhzC,KAAKyM,KAAK,UAAWk6B,EAAMsM,EAAcprC,GACzC7H,KAAKyM,KAAK,WAAYk6B,GAM1B,GAJI3mC,KAAK0M,QAAQu2B,iBACbjjC,KAAKyM,KAAK,kBAAmB85B,EAAO0M,EAAcprC,GAClD7H,KAAKyM,KAAK,mBAAoB85B,IAE9BvmC,KAAK0M,QAAQk4B,iBAAkB,OAAO5kC,KAAK+uC,eAInDzoB,iBAAiBigB,EAAO/9B,EAASg+B,GAC7B,IAAK,IAAIG,KAAQJ,EACbI,EAAKiC,OAASpB,GAAyCgO,MACvDx1C,KAAKyM,KAAK,QAASk6B,EAAMn+B,EAASg+B,GAClCxmC,KAAKyM,KAAK,WAAYk6B,GAM1B,GAJI3mC,KAAK0M,QAAQu2B,iBACbjjC,KAAKyM,KAAK,gBAAiB85B,EAAO/9B,EAASg+B,GAC3CxmC,KAAKyM,KAAK,mBAAoB85B,IAE9BvmC,KAAK0M,QAAQk4B,iBAAkB,OAAO5kC,KAAK+uC,eAEnDzoB,gBACI,MAAO,uCAAuCjc,QAAQ,SAAS,SAASorC,GACpE,IAAIC,EAAoB,GAAhBrsC,KAAKssC,SAAgB,EAC7B,OAD0C,MAANF,EAAYC,EAAQ,EAAJA,EAAQ,GACnD5rB,SAAS,OAG1BxD,YAAY5kB,EAAIgL,GAEZ,IAAIigC,EAAUh+B,EAOd,GARAinC,QAEA51C,KAAK4wB,QAAUlvB,EACf1B,KAAK+pC,kBAAoB,GACzB/pC,KAAK2L,UAAY,GACjB3L,KAAKumC,MAAQ,GACe,iBAAjBvmC,KAAK4wB,UAAsB5wB,KAAK4wB,QAAU1vB,SAASgH,cAAclI,KAAK4wB,WAE5E5wB,KAAK4wB,SAAoC,MAAzB5wB,KAAK4wB,QAAQilB,SAAkB,MAAM,IAAIptC,MAAM,6BACpE,GAAIzI,KAAK4wB,QAAQkb,SAAU,MAAM,IAAIrjC,MAAM,8BAE3C++B,GAAyCjiB,UAAU1hB,KAAK7D,MAExDA,KAAK4wB,QAAQkb,SAAW9rC,KACxB,IAAI81C,EAAsG,OAApFnnC,EAAO64B,GAAyCuO,kBAAkB/1C,KAAK4wB,UAAoBjiB,EAAO,GAOxH,GALA3O,KAAK0M,QAAUunC,IAAkB,EAAM,GACpCrR,GAA0CkT,EAA2B,MAAXppC,EAAkBA,EAAU,IAEzF1M,KAAK0M,QAAQ67B,gBAAkBvoC,KAAK0M,QAAQ67B,gBAAgBl+B,QAAQ,OAAQ,IAExErK,KAAK0M,QAAQ04B,gBAAkBoC,GAAyCwO,qBAAsB,OAAOh2C,KAAK0M,QAAQigC,SAAStoC,KAAKrE,MAGpI,GADwB,MAApBA,KAAK0M,QAAQm2B,MAAa7iC,KAAK0M,QAAQm2B,IAAM7iC,KAAK4wB,QAAQpwB,aAAa,YACtER,KAAK0M,QAAQm2B,IAAK,MAAM,IAAIp6B,MAAM,oBACvC,GAAIzI,KAAK0M,QAAQg4B,eAAiB1kC,KAAK0M,QAAQi4B,kBAAmB,MAAM,IAAIl8B,MAAM,sGAClF,GAAIzI,KAAK0M,QAAQu2B,gBAAkBjjC,KAAK0M,QAAQw2B,SAAU,MAAM,IAAIz6B,MAAM,qDAC1E,GAAIzI,KAAK0M,QAAQ46B,YAActnC,KAAK0M,QAAQu2B,eAAgB,MAAM,IAAIx6B,MAAM,uDAExEzI,KAAK0M,QAAQi4B,oBACb3kC,KAAK0M,QAAQg4B,cAAgB1kC,KAAK0M,QAAQi4B,yBACnC3kC,KAAK0M,QAAQi4B,mBAGW,MAA/B3kC,KAAK0M,QAAQw4B,iBAAwBllC,KAAK0M,QAAQy4B,WAAcwB,GAAO3mC,KAAK0M,QAAQw4B,eAAe7gC,KAAKrE,KAAM2mC,EAAKliC,KAAMkiC,IAE1F,iBAAxB3mC,KAAK0M,QAAQ6wB,SAAqBv9B,KAAK0M,QAAQ6wB,OAASv9B,KAAK0M,QAAQ6wB,OAAO0D,gBAClF0L,EAAW3sC,KAAKssC,wBAA0BK,EAAStnC,YACxDsnC,EAAStnC,WAAWkC,YAAYolC,IAEO,IAAnC3sC,KAAK0M,QAAQq4B,oBACT/kC,KAAK0M,QAAQq4B,kBAAmB/kC,KAAK+kC,kBAAoByC,GAAyC2C,WAAWnqC,KAAK0M,QAAQq4B,kBAAmB,qBAC5I/kC,KAAK+kC,kBAAoB/kC,KAAK4wB,SAEnC5wB,KAAK0M,QAAQ83B,aACkB,IAA3BxkC,KAAK0M,QAAQ83B,UAAoBxkC,KAAK+pC,kBAAoB,CAC1D/pC,KAAK4wB,SAEJ5wB,KAAK+pC,kBAAoBvC,GAAyCyO,YAAYj2C,KAAK0M,QAAQ83B,UAAW,cAE/GxkC,KAAK0T,QAGb8zB,GAAyC0O,YAWzC1O,GAAyC96B,QAAU,GAGnD86B,GAAyCuO,kBAAoB,SAASnlB,GAElE,OAAIA,EAAQpwB,aAAa,MAAcgnC,GAAyC96B,QAAQypC,GAA+BvlB,EAAQpwB,aAAa,aACvI,GAGTgnC,GAAyCjiB,UAAY,GAErDiiB,GAAyC4O,WAAa,SAASxlB,GAE3D,GADuB,iBAAZA,IAAsBA,EAAU1vB,SAASgH,cAAc0oB,IACV,OAAxC,MAAXA,EAAkBA,EAAQkb,cAAWnV,GAAoB,MAAM,IAAIluB,MAAM,kNAC9E,OAAOmoB,EAAQkb,UAGnBtE,GAAyC6O,SAAW,WAChD,IAAIC,EACJ,GAAIp1C,SAASI,iBAAkBg1C,EAAYp1C,SAASI,iBAAiB,iBAChE,CACDg1C,EAAY,GAEZ,IAAIC,EAAiBngC,GAAW,MACxB,IAAIyqB,EAAS,GACb,IAAK,IAAIn/B,KAAM0U,EAAa,qBAAqB2T,KAAKroB,EAAG0F,WAAYy5B,EAAOh9B,KAAKyyC,EAAUzyC,KAAKnC,IAC3Fm/B,EAAOh9B,UAAK8yB,GACjB,OAAOkK,GAJiB,GAOhC0V,EAAcr1C,SAASk1B,qBAAqB,QAC5CmgB,EAAcr1C,SAASk1B,qBAAqB,SAEhD,MAAO,MACH,IAAIyK,EAAS,GACb,IAAK,IAAIiL,KAAYwK,GACwD,IAAzE9O,GAAyCuO,kBAAkBjK,GAAqBjL,EAAOh9B,KAAK,IAAI2jC,GAAyCsE,IACxIjL,EAAOh9B,UAAK8yB,GACjB,OAAOkK,GALJ,IAkBX2G,GAAyCgP,gBAAkB,CAEvD,kDAGJhP,GAAyCwO,mBAAqB,WAC1D,IAAIS,GAAiB,EACrB,GAAI/2C,OAAOg3C,MAAQh3C,OAAOmwC,YAAcnwC,OAAOi3C,UAAYj3C,OAAOk3C,MAAQl3C,OAAO60C,UAAYrzC,SAASgH,cAClG,GAAM,cAAehH,SAAS0F,cAAc,KACvC,MACoE+vB,IAAjE6Q,GAAyCqP,sBAE7CrP,GAAyCgP,gBAAkBhP,GAAyCqP,qBAEpG,IAAK,IAAIC,KAAStP,GAAyCgP,gBAAgB,GAAIM,EAAM/sB,KAAKwD,UAAUwpB,WAAY,CAC5GN,GAAiB,EACjB,eAR2CA,GAAiB,OAWjEA,GAAiB,EACxB,OAAOA,GAEXjP,GAAyCkI,cAAgB,SAASsH,GAG9D,IAAIC,EAAaC,KAAKF,EAAQryC,MAAM,KAAK,IAErCwyC,EAAaH,EAAQryC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAE5DyyC,EAAK,IAAIC,YAAYJ,EAAWn4C,QAChCw4C,EAAK,IAAIC,WAAWH,GACxB,IAAI,IAAIv4C,EAAI,EAAGuF,EAAM6yC,EAAWn4C,OAAQ04C,EAAM,GAAKpzC,EAAKozC,EAAM34C,GAAKuF,EAAMvF,GAAKuF,EAAKozC,EAAM34C,IAAMA,IAAIy4C,EAAGz4C,GAAKo4C,EAAWQ,WAAW54C,GAEjI,OAAO,IAAI+3C,KAAK,CACZQ,GACD,CACCn2C,KAAMk2C,KAId,MAAMjI,GAAgC,CAAC34B,EAAMmhC,IAAenhC,EAAK/Q,QAAQyP,GAAOA,IAASyiC,IACnFx3C,KAAK+U,GAAOA,IAIZkhC,GAAkCwB,GAAMA,EAAIttC,QAAQ,cAAe+T,GAAQA,EAAM4iB,OAAO,GAAGC,gBAIjGuG,GAAyC5gC,cAAgB,SAASsD,GAC9D,IAAIsQ,EAAMtZ,SAAS0F,cAAc,OAEjC,OADA4T,EAAIyX,UAAY/nB,EACTsQ,EAAIo9B,WAAW,IAG1BpQ,GAAyCmE,cAAgB,SAAS/a,EAAS9e,GACvE,GAAI8e,IAAY9e,EAAW,OAAO,EAElC,KAAM8e,EAAUA,EAAQvrB,YACpB,GAAIurB,IAAY9e,EAAW,OAAO,EAEtC,OAAO,GAEX01B,GAAyC2C,WAAa,SAASzoC,EAAI+C,GAC/D,IAAImsB,EAGJ,GAFkB,iBAAPlvB,EAAiBkvB,EAAU1vB,SAASgH,cAAcxG,GACrC,MAAfA,EAAGm0C,WAAkBjlB,EAAUlvB,GACzB,MAAXkvB,EAAiB,MAAM,IAAInoB,MAAM,aAAahE,+EAClD,OAAOmsB,GAEX4W,GAAyCyO,YAAc,SAAS4B,EAAKpzC,GACjE,IAAI/C,EAAI0U,EACR,GAAIyhC,aAAez0C,MAAO,CACtBgT,EAAW,GACX,IACI,IAAK1U,KAAMm2C,EAAIzhC,EAASvS,KAAK7D,KAAKmqC,WAAWzoC,EAAI+C,IACnD,MAAOoD,GACLuO,EAAW,WAEZ,GAAmB,iBAARyhC,EAEd,IAAKn2C,KADL0U,EAAW,GACAlV,SAASI,iBAAiBu2C,IAAKzhC,EAASvS,KAAKnC,QACjC,MAAhBm2C,EAAIhC,WAAkBz/B,EAAW,CACxCyhC,IAEJ,GAAgB,MAAZzhC,IAAqBA,EAAStX,OAAQ,MAAM,IAAI2J,MAAM,aAAahE,gGACvE,OAAO2R,GAMXoxB,GAAyCsB,QAAU,SAASgP,EAAUnO,EAAUoO,GAC5E,OAAIr4C,OAAOopC,QAAQgP,GAAkBnO,IAChB,MAAZoO,EAAyBA,SAA7B,GAKTvQ,GAAyCgH,YAAc,SAAS7H,EAAMjC,GAClE,IAAKA,EAAe,OAAO,EAE3BA,EAAgBA,EAAc//B,MAAM,KACpC,IAAIqzC,EAAWrR,EAAK1lC,KAChBg3C,EAAeD,EAAS3tC,QAAQ,QAAS,IAC7C,IAAK,IAAI6tC,KAAaxT,EAElB,GADAwT,EAAYA,EAAU97B,OACM,MAAxB87B,EAAUlX,OAAO,IACjB,IAAuG,IAAnG2F,EAAKliC,KAAKu7B,cAAcp8B,QAAQs0C,EAAUlY,cAAe2G,EAAKliC,KAAK3F,OAASo5C,EAAUp5C,QAAgB,OAAO,OAC9G,GAAI,QAAQirB,KAAKmuB,IAEpB,GAAID,IAAiBC,EAAU7tC,QAAQ,QAAS,IAAK,OAAO,OAE5D,GAAI2tC,IAAaE,EAAW,OAAO,EAG3C,OAAO,GAGW,oBAAXzc,QAAqC,OAAXA,SAAiBA,OAAOxS,GAAG6iB,SAAW,SAASp/B,GAChF,OAAO1M,KAAKm4C,MAAK,WACb,OAAO,IAAI3Q,GAAyCxnC,KAAM0M,QAIlE86B,GAAyCsC,MAAQ,QACjDtC,GAAyCqC,OAAS,SAGlDrC,GAAyC4Q,SAAW5Q,GAAyCqC,OAC7FrC,GAAyCqB,UAAY,YACrDrB,GAAyC6Q,WAAa7Q,GAAyCqB,UAC/FrB,GAAyCsK,SAAW,WACpDtK,GAAyCgO,MAAQ,QACjDhO,GAAyCwL,QAAU,UAmCnD,IAAI/B,GAAwC,SAASJ,EAAK14B,EAAKmgC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvF,IAAIC,EA1ByC,SAAS3gC,GAC7CA,EAAI4gC,aACb,IAAIC,EAAK7gC,EAAI8gC,cACT7J,EAASluC,SAAS0F,cAAc,UACpCwoC,EAAO1gC,MAAQ,EACf0gC,EAAOvtC,OAASm3C,EAChB,IAAInI,EAAMzB,EAAO0B,WAAW,MAC5BD,EAAIqI,UAAU/gC,EAAK,EAAG,GACtB,IAAM/L,KAAMA,GAAUykC,EAAIsI,aAAa,EAAG,EAAG,EAAGH,GAE5CT,EAAK,EACLa,EAAKJ,EACLK,EAAKL,EACT,KAAMK,EAAKd,GAEO,IADFnsC,EAAgB,GAAVitC,EAAK,GAAS,GACfD,EAAKC,EACjBd,EAAKc,EACVA,EAAKD,EAAKb,GAAM,EAEpB,IAAI5iB,EAAQ0jB,EAAKL,EACjB,OAAc,IAAVrjB,EAAoB,EACZA,EAKU2jB,CAA2CnhC,GACjE,OAAO04B,EAAIqI,UAAU/gC,EAAKmgC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,IAK/D,MAAMvJ,GACFjpB,mBACItmB,KAAKu5C,QAAU,oEAEnBjzB,gBAAgBwU,GACZ,IACI0e,EACAC,EAEAC,EACAC,EACAC,EANAC,EAAS,GAGTC,EAAO,GAIPC,EAAO,GACPl7C,EAAI,EACR,KACI26C,EAAO1e,EAAMj8B,KACb46C,EAAO3e,EAAMj8B,KACbi7C,EAAOhf,EAAMj8B,KACb66C,EAAOF,GAAQ,EACfG,GAAe,EAAPH,IAAa,EAAIC,GAAQ,EACjCG,GAAe,GAAPH,IAAc,EAAIK,GAAQ,EAClCC,EAAc,GAAPD,EACHvY,MAAMkY,GAAOG,EAAOG,EAAO,GACtBxY,MAAMuY,KAAOC,EAAO,IAC7BF,EAASA,EAAS75C,KAAKu5C,QAAQvY,OAAO0Y,GAAQ15C,KAAKu5C,QAAQvY,OAAO2Y,GAAQ35C,KAAKu5C,QAAQvY,OAAO4Y,GAAQ55C,KAAKu5C,QAAQvY,OAAO+Y,GAC1HP,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,GACtBl7C,EAAIi8B,EAAMh8B,SAEpB,OAAO+6C,EAEXvzB,eAAe0zB,EAAgBC,GAC3B,IAAKD,EAAe57B,MAAM,2BAA4B,OAAO67B,EAC7D,IAAIC,EAAWl6C,KAAKm6C,SAASH,EAAe3vC,QAAQ,0BAA2B,KAC3E+vC,EAAWp6C,KAAKq6C,eAAeH,GAC/B9nB,EAAQpyB,KAAKs6C,iBAAiBL,EAAmBG,GACrD,MAAO,0BAA0Bp6C,KAAKu6C,SAASnoB,KAEnD9L,wBAAwB2zB,EAAmBG,GACvC,IAAII,EAAYx6C,KAAKy6C,aAAaL,GAC9BM,EAAgB16C,KAAK26C,WAAWV,EAAmBO,GAEvD,OADc,IAAIjD,WAAWmD,GAGjCp0B,oBAAoB8zB,GAChB,IAAIQ,EACA9wC,EAAI,EACR,KAAMA,EAAIswC,EAASt7C,QAAO,CAEtB,GADA87C,EAAMR,EAAStwC,GACA,MAAX8wC,EAAI,GAAwB,MAAXA,EAAI,GAAY,OAAOA,EAC5C9wC,IAEJ,MAAO,GAEXwc,kBAAkB2zB,EAAmBO,GACjC,IAAIK,EAAYZ,EAAkB5vC,QAAQ,0BAA2B,IACjEywC,EAAM96C,KAAKm6C,SAASU,GACpBE,EAAgBD,EAAIl3C,QAAQ,IAAK,GACjCo3C,EAAMF,EAAI72C,MAAM,EAAG82C,GACnBE,EAAMH,EAAI72C,MAAM82C,GAChBh4C,EAAQi4C,EAGZ,OAFAj4C,EAAQA,EAAMuiB,OAAOk1B,GACrBz3C,EAAQA,EAAMuiB,OAAO21B,GACdl4C,EAEXujB,sBAAsB40B,GAClB,IAAIC,EAAO,EACPf,EAAW,GACf,OAAW,CAEP,GAA4B,MAAxBc,EAAcC,GAA4C,MAA5BD,EAAcC,EAAO,GAAY,MACnE,GAA4B,MAAxBD,EAAcC,GAA4C,MAA5BD,EAAcC,EAAO,GAAYA,GAAQ,MACtE,CAED,IAAIC,EAAWD,GADoB,IAA1BD,EAAcC,EAAO,GAAWD,EAAcC,EAAO,IAC/B,EAC3BP,EAAMM,EAAcj3C,MAAMk3C,EAAMC,GACpChB,EAASv2C,KAAK+2C,GACdO,EAAOC,EAEX,GAAID,EAAOD,EAAcp8C,OAAQ,MAErC,OAAOs7C,EAEX9zB,gBAAgBwU,GAEZ,IAAI0e,EACAC,EAEAC,EACAC,EACAC,EAHAE,EAAO,GAIPC,EAAO,GACPl7C,EAAI,EACJi8C,EAAM,GAKV,IAHiB,sBACFO,KAAKvgB,IAAQqT,QAAQmH,KAAK,oJACzCxa,EAAQA,EAAMzwB,QAAQ,sBAAuB,IAEzCqvC,EAAO15C,KAAKu5C,QAAQ31C,QAAQk3B,EAAMkG,OAAOniC,MACzC86C,EAAO35C,KAAKu5C,QAAQ31C,QAAQk3B,EAAMkG,OAAOniC,MACzC+6C,EAAO55C,KAAKu5C,QAAQ31C,QAAQk3B,EAAMkG,OAAOniC,MACzCk7C,EAAO/5C,KAAKu5C,QAAQ31C,QAAQk3B,EAAMkG,OAAOniC,MACzC26C,EAAOE,GAAQ,EAAIC,GAAQ,EAC3BF,GAAe,GAAPE,IAAc,EAAIC,GAAQ,EAClCE,GAAe,EAAPF,IAAa,EAAIG,EACzBe,EAAIj3C,KAAK21C,GACI,KAATI,GAAakB,EAAIj3C,KAAK41C,GACb,KAATM,GAAae,EAAIj3C,KAAKi2C,GAC1BN,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,GACtBl7C,EAAIi8B,EAAMh8B,SAEpB,OAAOg8C,GAGfvL,GAAkC2G,YChgE9Bh1C,SAASgH,cAAc,uBACR,IAAIozC,GAAS,qBAAsB,CAClDzY,IAAK,aACLa,uBAAuB,EACvB2B,mBAAoB,SCNjB,MAAMkW,GAAQ,CACjB,WACA,UACA,cACA,YACA,YACA,gBACA,SACA,gBACA,UACA,gBACA,eACA,yBAES7zB,GAAW,CACpB8zB,SAAU,GACVC,YAAY,EACZC,qBAAqB,EACrBC,UAAW,SACXC,UAAU,EACVC,cAAe,qBACfC,QAA2B,iBAAXp8C,SACoC,IAAhDA,OAAO6tB,UAAUwpB,UAAUnzC,QAAQ,QACvCm4C,eAAgB,SAChBC,qBAAqB,EACrBC,YAAY,EACZC,eAAe,EACfC,YAAa,KACbC,WAAY,QACZC,YAAa,GACbC,cAAe,EACfC,eAAgB,EAChB96B,QAAS,GACT+6B,eAAe,EACfC,eAAe,EACfC,YAAY,EACZzO,aAAe5jB,GAA2B,oBAAZ8jB,SAA2BA,QAAQmH,KAAKjrB,GACtEsyB,QAAUC,IACN,MAAMC,EAAO,IAAI3vC,KAAK0vC,EAAUE,WAChCD,EAAKE,SAAS,EAAG,EAAG,EAAG,GACvBF,EAAKG,QAAQH,EAAKI,UAAY,GAAMJ,EAAKK,SAAW,GAAK,GACzD,IAAIC,EAAQ,IAAIjwC,KAAK2vC,EAAKO,cAAe,EAAG,GAC5C,OAAQ,EACJ/zC,KAAK+1B,QAAQyd,EAAKC,UAAYK,EAAML,WAAa,MAC7C,GACEK,EAAMD,SAAW,GAAK,GACxB,IAEZG,cAAe,EACfC,qBAAsB,GACtBC,QAAQ,EACRC,OAAQ,UACRC,gBAAiB,EACjBC,KAAM,SACNC,kBAAmB,WACnBC,UAAW,yOACXC,YAAY,EACZ5wC,IAAK,IAAIC,KACT4wC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXC,UAAW,GACXC,cAAe,GACfC,OAAQ,GACRC,cAAe,GACfC,QAAS,GACTC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,QAAS,GACTvjC,SAAU,OACVwjC,qBAAiBhoB,EACjBioB,UAAW,uOACXC,uBAAuB,EACvBC,WAAY,EACZC,QAAQ,EACRC,WAAW,EACXC,aAAa,EACbnmB,MAAM,GC/EGomB,GAAU,CACnBC,SAAU,CACNC,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,SAAU,CACN,SACA,SACA,UACA,YACA,WACA,SACA,aAGRC,OAAQ,CACJF,UAAW,CACP,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,SAAU,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAGRE,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1DC,eAAgB,EAChBC,QAAUC,IACN,MAAMx1B,EAAIw1B,EAAM,IAChB,GAAIx1B,EAAI,GAAKA,EAAI,GACb,MAAO,KACX,OAAQA,EAAI,IACR,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,QACI,MAAO,OAGnBy1B,eAAgB,OAChBC,iBAAkB,KAClBC,YAAa,sBACbC,YAAa,kBACbC,KAAM,CAAC,KAAM,MACbC,cAAe,OACfC,eAAgB,QAChBC,cAAe,OACfC,gBAAiB,SACjBnB,WAAW,GCrEF10C,GAAM,CAACf,EAAQzK,EAAS,IAAM,MAAMyK,IAAStF,OAAgB,EAAVnF,GACnDshD,GAAOC,IAAmB,IAATA,EAAgB,EAAI,EAC3C,SAASC,GAASr3B,EAAIs3B,GACzB,IAAI9/B,EACJ,OAAO,WACH6X,aAAa7X,GACbA,EAAI5f,YAAW,IAAMooB,EAAG/a,MAAMlO,KAAMiG,YAAYs6C,IAGjD,MAAMC,GAAYjhD,GAAQA,aAAe6D,MAAQ7D,EAAM,CAACA,GCTxD,SAAS+E,GAAYk3B,EAAMp0B,EAAWi5C,GACzC,IAAa,IAATA,EACA,OAAO7kB,EAAK96B,UAAUC,IAAIyG,GAC9Bo0B,EAAK96B,UAAUU,OAAOgG,GAEnB,SAASR,GAAcD,EAAKS,EAAWq5C,GAC1C,MAAM54C,EAAInI,OAAOwB,SAAS0F,cAAcD,GAMxC,OALAS,EAAYA,GAAa,GACzBq5C,EAAUA,GAAW,GACrB54C,EAAET,UAAYA,OACEuvB,IAAZ8pB,IACA54C,EAAE6/B,YAAc+Y,GACb54C,EAEJ,SAAS64C,GAAUt7C,GACtB,KAAOA,EAAKs4B,YACRt4B,EAAKmC,YAAYnC,EAAKs4B,YAEvB,SAASijB,GAAWv7C,EAAMmD,GAC7B,OAAIA,EAAUnD,GACHA,EACFA,EAAKC,WACHs7C,GAAWv7C,EAAKC,WAAYkD,QADlC,EAIF,SAASq4C,GAAkBC,EAAgB/uB,GAC9C,MAAMpT,EAAU9X,GAAc,MAAO,mBAAoBk6C,EAAWl6C,GAAc,QAAS,YAAci6C,GAAiBE,EAAUn6C,GAAc,OAAQ,WAAYo6C,EAAYp6C,GAAc,OAAQ,aAQxM,IAPiD,IAA7C2mB,UAAUwpB,UAAUnzC,QAAQ,YAC5Bk9C,EAAS7/C,KAAO,UAGhB6/C,EAAS7/C,KAAO,OAChB6/C,EAASG,QAAU,aAEVtqB,IAAT7E,EACA,IAAK,MAAMzyB,KAAOyyB,EACdgvB,EAASv6C,aAAalH,EAAKyyB,EAAKzyB,IAIxC,OAHAqf,EAAQ3Z,YAAY+7C,GACpBpiC,EAAQ3Z,YAAYg8C,GACpBriC,EAAQ3Z,YAAYi8C,GACbtiC,EAEJ,SAASwiC,GAAex1C,GAC3B,IACI,GAAkC,mBAAvBA,EAAMy1C,aAA6B,CAE1C,OADaz1C,EAAMy1C,eACP,GAEhB,OAAOz1C,EAAM/M,OAEjB,MAAO0lB,GACH,OAAO3Y,EAAM/M,QClDrB,MAAMyiD,GAAY,OACLC,GAAa,CAACC,EAAalC,EAAW5B,IAAWA,EAAO8B,OAAOF,EAAY,YAAc,YAAYkC,GACrGC,GAAY,CACrBC,EAAGJ,GACHn3B,EAAG,SAAUw3B,EAASC,EAAWlE,GAC7BiE,EAAQE,SAASnE,EAAO8B,OAAOD,SAASz7C,QAAQ89C,KAEpDE,EAAG,CAACH,EAASI,KACTJ,EAAQ1E,SAAStjC,WAAWooC,KAEhCC,EAAG,CAACL,EAASI,KACTJ,EAAQ1E,SAAStjC,WAAWooC,KAEhCE,EAAG,CAACN,EAASO,KACTP,EAAQzE,QAAQvjC,WAAWuoC,KAE/BC,EAAG,CAACR,EAAS1B,EAAMvC,KACfiE,EAAQ1E,SAAU0E,EAAQS,WAAa,GACnC,GAAK9B,GAAI,IAAI9tB,OAAOkrB,EAAOuC,KAAK,GAAI,KAAKh2B,KAAKg2B,MAEtDoC,EAAG,SAAUV,EAASW,EAAY5E,GAC9BiE,EAAQE,SAASnE,EAAO8B,OAAOF,UAAUx7C,QAAQw+C,KAErDC,EAAG,CAACZ,EAASa,KACTb,EAAQc,WAAW9oC,WAAW6oC,KAElCE,EAAG,CAACC,EAAGC,IAAgB,IAAIx1C,KAA+B,IAA1BuM,WAAWipC,IAC3CC,EAAG,SAAUlB,EAASmB,EAASpF,GAC3B,MAAMqF,EAAa9hD,SAAS6hD,GACtB/F,EAAO,IAAI3vC,KAAKu0C,EAAQrE,cAAe,EAAG,EAAuB,GAAlByF,EAAa,GAAQ,EAAG,EAAG,EAAG,GAEnF,OADAhG,EAAKG,QAAQH,EAAKI,UAAYJ,EAAKK,SAAWM,EAAOgC,gBAC9C3C,GAEXhuC,EAAG,CAAC4yC,EAASqB,KACTrB,EAAQsB,YAAYtpC,WAAWqpC,KAEnCE,EAAG,CAACP,EAAGQ,IAAY,IAAI/1C,KAAK+1C,GAC5BC,EAAG,CAACzB,EAASO,KACTP,EAAQzE,QAAQvjC,WAAWuoC,KAE/BmB,EAAG,CAAC1B,EAASI,KACTJ,EAAQ1E,SAAStjC,WAAWooC,KAEhChjD,EAAG,CAAC4iD,EAAS2B,KACT3B,EAAQ4B,WAAW5pC,WAAW2pC,KAElCE,EAAG,CAAC7B,EAASO,KACTP,EAAQzE,QAAQvjC,WAAWuoC,KAE/BuB,EAAGnC,GACHprC,EAAG,CAACyrC,EAAS+B,KACT/B,EAAQE,SAASloC,WAAW+pC,GAAS,IAEzCztC,EAAG,CAAC0rC,EAAS+B,KACT/B,EAAQE,SAASloC,WAAW+pC,GAAS,IAEzCt5B,EAAG,CAACu3B,EAASa,KACTb,EAAQc,WAAW9oC,WAAW6oC,KAElCmB,EAAG,CAAChB,EAAGiB,IAAoB,IAAIx2C,KAAKuM,WAAWiqC,IAC/CC,EAAGvC,GACHr3C,EAAG,CAAC03C,EAASqB,KACTrB,EAAQsB,YAAY,IAAOtpC,WAAWqpC,MAGjCc,GAAa,CACtBpC,EAAG,SACHv3B,EAAG,SACH23B,EAAG,eACHE,EAAG,eACHC,EAAG,mBACHE,EAAG,GACHE,EAAG,SACHE,EAAG,eACHG,EAAG,OACHG,EAAG,eACH9zC,EAAG,WACHm0C,EAAG,OACHE,EAAG,eACHC,EAAG,eACHtkD,EAAG,eACHykD,EAAG,eACHC,EAAG,SACHvtC,EAAG,eACHD,EAAG,eACHmU,EAAG,eACHu5B,EAAG,OACHE,EAAG,eACH55C,EAAG,YAEM85C,GAAU,CACnBb,EAAInG,GAASA,EAAKiH,cAClBtC,EAAG,SAAU3E,EAAMW,EAAQ9wC,GACvB,OAAO8wC,EAAO2B,SAASC,UAAUyE,GAAQF,EAAE9G,EAAMW,EAAQ9wC,KAE7Dud,EAAG,SAAU4yB,EAAMW,EAAQ9wC,GACvB,OAAO20C,GAAWwC,GAAQ9tC,EAAE8mC,EAAMW,EAAQ9wC,GAAW,GAAG,EAAO8wC,IAEnEoE,EAAG,SAAU/E,EAAMW,EAAQ9wC,GACvB,OAAOpC,GAAIu5C,GAAQV,EAAEtG,EAAMW,EAAQ9wC,KAEvCo1C,EAAIjF,GAASvyC,GAAIuyC,EAAKqF,YACtBH,EAAG,SAAUlF,EAAMW,GACf,YAA0B7mB,IAAnB6mB,EAAOiC,QACR5C,EAAKI,UAAYO,EAAOiC,QAAQ5C,EAAKI,WACrCJ,EAAKI,WAEfgF,EAAG,CAACpF,EAAMW,IAAWA,EAAOuC,KAAKK,GAAIvD,EAAKqF,WAAa,KACvDC,EAAG,SAAUtF,EAAMW,GACf,OAAO6D,GAAWxE,EAAKkH,YAAY,EAAMvG,IAE7C6E,EAAIxF,GAASvyC,GAAIuyC,EAAKmH,cACtBxB,EAAI3F,GAASA,EAAKC,UAAY,IAC9B6F,EAAG,SAAU9F,EAAM4F,EAAG/1C,GAClB,OAAOA,EAAQiwC,QAAQE,IAE3BhuC,EAAIguC,GAASvyC,GAAIuyC,EAAKO,cAAe,GACrC8F,EAAIrG,GAASvyC,GAAIuyC,EAAKI,WACtBkG,EAAItG,GAAUA,EAAKqF,WAAa,GAAKrF,EAAKqF,WAAa,GAAK,GAC5DrjD,EAAIg+C,GAASvyC,GAAIuyC,EAAKoH,cACtBX,EAAIzG,GAASA,EAAKI,UAClBsG,EAAG,SAAU1G,EAAMW,GACf,OAAOA,EAAO2B,SAASE,SAASxC,EAAKK,WAEzClnC,EAAI6mC,GAASvyC,GAAIuyC,EAAKkH,WAAa,GACnChuC,EAAI8mC,GAASA,EAAKkH,WAAa,EAC/B75B,EAAI2yB,GAASA,EAAKmH,aAClBP,EAAI5G,GAASA,EAAKC,UAClB6G,EAAI9G,GAASA,EAAKK,SAClBnzC,EAAI8yC,GAASp2C,OAAOo2C,EAAKO,eAAeppB,UAAU,IC/HzCkwB,GAAsB,EAAGC,OAAAA,EAASz8B,GAAU08B,KAAAA,EAAOlF,GAASmF,SAAAA,GAAW,KAAa,CAAC5C,EAAS6C,EAAMC,KAC7G,MAAM/G,EAAS+G,GAAkBH,EACjC,YAA0BztB,IAAtBwtB,EAAOK,YAA6BH,EAGjCC,EACF3/C,MAAM,IACNzE,KAAI,CAACu1C,EAAG52C,EAAG6rB,IAAQm5B,GAAQpO,IAAqB,OAAf/qB,EAAI7rB,EAAI,GACxCglD,GAAQpO,GAAGgM,EAASjE,EAAQ2G,GACtB,OAAN1O,EACIA,EACA,KACLhiC,KAAK,IATC0wC,EAAOK,WAAW/C,EAAS6C,EAAM9G,IAWnCiH,GAAmB,EAAGN,OAAAA,EAASz8B,GAAU08B,KAAAA,EAAOlF,MAAc,CAACrC,EAAM6H,EAAaC,EAAUC,KACrG,GAAa,IAAT/H,IAAeA,EACf,OACJ,MAAMW,EAASoH,GAAgBR,EAC/B,IAAIS,EACJ,MAAMC,EAAWjI,EACjB,GAAIA,aAAgB3vC,KAChB23C,EAAa,IAAI33C,KAAK2vC,EAAKC,gBAC1B,GAAoB,iBAATD,QACKlmB,IAAjBkmB,EAAKkI,QACLF,EAAa,IAAI33C,KAAK2vC,QACrB,GAAoB,iBAATA,EAAmB,CAC/B,MAAM5yC,EAASy6C,IAAgBP,GAAUz8B,IAAU00B,WAC7C4I,EAAUv+C,OAAOo2C,GAAMzgC,OAC7B,GAAgB,UAAZ4oC,EACAH,EAAa,IAAI33C,KACjBy3C,GAAW,OAEV,GAAI,KAAK56B,KAAKi7B,IACf,OAAOj7B,KAAKi7B,GACZH,EAAa,IAAI33C,KAAK2vC,QACrB,GAAIsH,GAAUA,EAAOc,UACtBJ,EAAaV,EAAOc,UAAUpI,EAAM5yC,OACnC,CACD46C,EACKV,GAAWA,EAAOtG,WAEb,IAAI3wC,MAAK,IAAIA,MAAO6vC,SAAS,EAAG,EAAG,EAAG,IADtC,IAAI7vC,MAAK,IAAIA,MAAOkwC,cAAe,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5D,IAAI8H,EAASC,EAAM,GACnB,IAAK,IAAItmD,EAAI,EAAGumD,EAAa,EAAGC,EAAW,GAAIxmD,EAAIoL,EAAOnL,OAAQD,IAAK,CACnE,MAAMymD,EAAQr7C,EAAOpL,GACf0mD,EAAwB,OAAVD,EACdE,EAA4B,OAAlBv7C,EAAOpL,EAAI,IAAe0mD,EAC1C,GAAI3B,GAAW0B,KAAWE,EAAS,CAC/BH,GAAYzB,GAAW0B,GACvB,MAAMlnC,EAAQ,IAAIkU,OAAO+yB,GAAUhK,KAAKwB,GACpCz+B,IAAU8mC,GAAU,IACpBC,EAAc,MAAVG,EAAgB,OAAS,WAAW,CACpCr8B,GAAIs4B,GAAU+D,GACdtjB,IAAK5jB,IAAQgnC,UAIfG,IACNF,GAAY,KAChBF,EAAI1jD,SAAQ,EAAGwnB,GAAAA,EAAI+Y,IAAAA,KAAW6iB,EAAa57B,EAAG47B,EAAY7iB,EAAKwb,IAAWqH,IAE9EA,EAAaK,EAAUL,OAAaluB,GAG5C,GAAMkuB,aAAsB33C,OAASq0B,MAAMsjB,EAAW/H,WAMtD,OAFiB,IAAb6H,GACAE,EAAW9H,SAAS,EAAG,EAAG,EAAG,GAC1B8H,EALHV,EAAOlW,aAAa,IAAIxlC,MAAM,0BAA0Bq8C,OAOzD,SAASW,GAAaC,EAAOC,EAAOhB,GAAW,GAClD,OAAiB,IAAbA,EACQ,IAAIz3C,KAAKw4C,EAAM5I,WAAWC,SAAS,EAAG,EAAG,EAAG,GAChD,IAAI7vC,KAAKy4C,EAAM7I,WAAWC,SAAS,EAAG,EAAG,EAAG,GAE7C2I,EAAM5I,UAAY6I,EAAM7I,UAQ5B,MAGM7uC,GACJ,MAEF,SAAS23C,GAAgBzB,GAC5B,IAAI0B,EAAQ1B,EAAO9H,YACf+G,EAAUe,EAAO7H,cACjBgG,EAAU6B,EAAO5H,eACrB,QAAuB5lB,IAAnBwtB,EAAO2B,QAAuB,CAC9B,MAAMC,EAAU5B,EAAO2B,QAAQ5D,WACzB8D,EAAa7B,EAAO2B,QAAQ7B,aAC5BgC,EAAa9B,EAAO2B,QAAQ9B,aAC9B6B,EAAQE,IACRF,EAAQE,GAERF,IAAUE,GAAW3C,EAAU4C,IAC/B5C,EAAU4C,GAEVH,IAAUE,GAAW3C,IAAY4C,GAAc1D,EAAU2D,IACzD3D,EAAU6B,EAAO2B,QAAQ9B,cAEjC,QAAuBrtB,IAAnBwtB,EAAO+B,QAAuB,CAC9B,MAAMC,EAAQhC,EAAO+B,QAAQhE,WACvBkE,EAAajC,EAAO+B,QAAQjC,aAClC4B,EAAQx8C,KAAKL,IAAI68C,EAAOM,GACpBN,IAAUM,IACV/C,EAAU/5C,KAAKL,IAAIo9C,EAAYhD,IAC/ByC,IAAUM,GAAS/C,IAAYgD,IAC/B9D,EAAU6B,EAAO+B,QAAQlC,cAEjC,MAAO,CAAE6B,MAAAA,EAAOzC,QAAAA,EAASd,QAAAA,GCvHA,mBAAlBnjD,OAAO6G,SACd7G,OAAO6G,OAAS,SAAUrH,KAAW+iC,GACjC,IAAK/iC,EACD,MAAMF,UAAU,8CAEpB,IAAK,MAAMyH,KAAUw7B,EACbx7B,GACA/G,OAAO2G,KAAKI,GAAQzE,SAASpC,GAASV,EAAOU,GAAO6G,EAAO7G,KAGnE,OAAOV,ICHf,SAAS0nD,GAAkBz1B,EAAS01B,GAChC,MAAM19B,EAAO,CACTu7B,OAAQhlD,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIgqB,IAAiBu2B,GAAUC,eACnEpC,KAAMqC,IAuDV,SAASC,EAAez9B,GACpB,OAAOA,EAAGjkB,KAAK4jB,GAEnB,SAAS+9B,IACL,MAAMxC,EAASv7B,EAAKu7B,QACO,IAAvBA,EAAOlF,aAA+C,IAAtBkF,EAAOrF,aAGZ,IAAtBqF,EAAOtG,YACZn+C,OAAOqJ,uBAAsB,WAKzB,QAJ+B4tB,IAA3B/N,EAAKg+B,oBACLh+B,EAAKg+B,kBAAkB//C,MAAMqjC,WAAa,SAC1CthB,EAAKg+B,kBAAkB//C,MAAMI,QAAU,cAEhB0vB,IAAvB/N,EAAKi+B,cAA6B,CAClC,MAAMC,GAAal+B,EAAKm+B,KAAK/zB,YAAc,GAAKmxB,EAAOrF,WACvDl2B,EAAKi+B,cAAchgD,MAAM6H,MAAQo4C,EAAY,KAC7Cl+B,EAAKg+B,kBAAkB//C,MAAM6H,MACzBo4C,QAC0BnwB,IAArB/N,EAAKo+B,YACAp+B,EAAKo+B,YAAYh0B,YACjB,GACN,KACRpK,EAAKg+B,kBAAkB//C,MAAMogD,eAAe,cAC5Cr+B,EAAKg+B,kBAAkB//C,MAAMogD,eAAe,eAK5D,SAASC,EAAWr/C,GAChB,GAAkC,IAA9B+gB,EAAKu+B,cAAcroD,OAAc,CACjC,MAAMsoD,OAAsCzwB,IAAxB/N,EAAKu7B,OAAO2B,SAC5BL,GAAa,IAAIv4C,KAAQ0b,EAAKu7B,OAAO2B,UAAY,EAC/C,IAAI54C,KACJ,IAAIA,KAAK0b,EAAKu7B,OAAO2B,QAAQhJ,WAC7Bp1B,EAAWk+B,GAAgBh9B,EAAKu7B,QACtCiD,EAAYrK,SAASr1B,EAASm+B,MAAOn+B,EAAS07B,QAAS17B,EAAS46B,QAAS8E,EAAYC,mBACrFz+B,EAAKu+B,cAAgB,CAACC,GACtBx+B,EAAK0+B,sBAAwBF,OAEvBzwB,IAAN9uB,GAA8B,SAAXA,EAAE5G,MA+tD7B,SAAqB4G,GACjBA,EAAEE,iBACF,MAAMw/C,EAAuB,YAAX1/C,EAAE5G,KAAoB+8B,EAAckjB,GAAer5C,GAAIizB,EAAQkD,OAC/DrH,IAAd/N,EAAKm3B,MAAsB/hB,IAAgBpV,EAAKm3B,OAChDn3B,EAAKm3B,KAAKrY,YACN9e,EAAKw7B,KAAKrE,KAAKK,GAAIx3B,EAAKm3B,KAAKrY,cAAgB9e,EAAKw7B,KAAKrE,KAAK,MAEpE,MAAM/2C,EAAMyQ,WAAWqhB,EAAMt6B,aAAa,QAASyI,EAAMwQ,WAAWqhB,EAAMt6B,aAAa,QAASgqB,EAAO/Q,WAAWqhB,EAAMt6B,aAAa,SAAUgnD,EAAWzmD,SAAS+5B,EAAMt7B,MAAO,IAAKi3B,EAAQ5uB,EAAE4uB,QAC1L8wB,EAAyB,KAAZ1/C,EAAE4/C,MAAe,GAAK,EAAK,GAC7C,IAAIC,EAAWF,EAAWh9B,EAAOiM,EACjC,QAA2B,IAAhBqE,EAAMt7B,OAAgD,IAAvBs7B,EAAMt7B,MAAMV,OAAc,CAChE,MAAM6oD,EAAa7sB,IAAUlS,EAAKg/B,YAAaC,EAAe/sB,IAAUlS,EAAKk/B,cACzEJ,EAAW1+C,GACX0+C,EACIz+C,EACIy+C,EACAtH,IAAKuH,IACJvH,GAAIuH,IAAevH,IAAKx3B,EAAKm3B,OAClC8H,GACAE,OAAkBpxB,GAAY,EAAG/N,EAAKg/B,cAErCF,EAAWz+C,IAChBy+C,EACI5sB,IAAUlS,EAAKg/B,YAAcF,EAAWz+C,EAAMm3C,IAAKx3B,EAAKm3B,MAAQ/2C,EAChE6+C,GACAE,OAAkBpxB,EAAW,EAAG/N,EAAKg/B,cAEzCh/B,EAAKm3B,MACL4H,IACU,IAATn9B,EACKk9B,EAAWF,IAAa,GACxBn+C,KAAKD,IAAIs+C,EAAWF,GAAYh9B,KACtC5B,EAAKm3B,KAAKrY,YACN9e,EAAKw7B,KAAKrE,KAAKK,GAAIx3B,EAAKm3B,KAAKrY,cAAgB9e,EAAKw7B,KAAKrE,KAAK,MAEpEjlB,EAAMt7B,MAAQ8K,GAAIo9C,IAjwDlBM,CAAYngD,GAEhB,MAAMogD,EAAYr/B,EAAKs/B,OAAO1oD,MAC9B2oD,IACAC,IACIx/B,EAAKs/B,OAAO1oD,QAAUyoD,GACtBr/B,EAAKy/B,mBAeb,SAASF,IACL,QAAyBxxB,IAArB/N,EAAKg/B,kBAAoDjxB,IAAvB/N,EAAKk/B,cACvC,OACJ,IAAIjC,GAAS9kD,SAAS6nB,EAAKg/B,YAAYpoD,MAAMyE,OAAO,GAAI,KAAO,GAAK,GAAIm/C,GAAWriD,SAAS6nB,EAAKk/B,cAActoD,MAAO,KAAO,GAAK,GAAI8iD,OAAiC3rB,IAAvB/N,EAAK0/B,eAC9IvnD,SAAS6nB,EAAK0/B,cAAc9oD,MAAO,KAAO,GAAK,GAChD,EAjBV,IAAuBqiD,EAAM9B,OAkBPppB,IAAd/N,EAAKm3B,OAlBU8B,EAmBOgE,EAnBD9F,EAmBQn3B,EAAKm3B,KAAKrY,YAAvCme,EAlBIhE,EAAO,GAAM,GAAKzB,GAAIL,IAASn3B,EAAKw7B,KAAKrE,KAAK,KAoBtD,MAAMwI,OAAwC5xB,IAAxB/N,EAAKu7B,OAAOqE,SAC7B5/B,EAAKu7B,OAAO2B,SACTl9B,EAAK6/B,gBACL7/B,EAAK0+B,uBAED,IADJ7B,GAAa78B,EAAK0+B,sBAAuB1+B,EAAKu7B,OAAO2B,SAAS,GAQtE,QAN8CnvB,IAAxB/N,EAAKu7B,OAAOuE,SAC7B9/B,EAAKu7B,OAAO+B,SACTt9B,EAAK+/B,gBACL//B,EAAK0+B,uBAED,IADJ7B,GAAa78B,EAAK0+B,sBAAuB1+B,EAAKu7B,OAAO+B,SAAS,GAEnD,CACf,MAAMwC,OAAkC/xB,IAAxB/N,EAAKu7B,OAAOuE,QACtB9/B,EAAKu7B,OAAOuE,QACZ9/B,EAAKu7B,OAAO+B,QAClBL,EAAQx8C,KAAKL,IAAI68C,EAAO6C,EAAQxG,YAC5B2D,IAAU6C,EAAQxG,aAClBkB,EAAU/5C,KAAKL,IAAIo6C,EAASsF,EAAQzE,eACpCb,IAAYsF,EAAQzE,eACpB3B,EAAUj5C,KAAKL,IAAIs5C,EAASoG,EAAQ1E,eAE5C,GAAIuE,EAAe,CACf,MAAMC,OAAkC7xB,IAAxB/N,EAAKu7B,OAAOqE,QACtB5/B,EAAKu7B,OAAOqE,QACZ5/B,EAAKu7B,OAAO2B,QAClBD,EAAQx8C,KAAKJ,IAAI48C,EAAO2C,EAAQtG,YAC5B2D,IAAU2C,EAAQtG,YAAckB,EAAUoF,EAAQvE,eAClDb,EAAUoF,EAAQvE,cAClBb,IAAYoF,EAAQvE,eACpB3B,EAAUj5C,KAAKJ,IAAIq5C,EAASkG,EAAQxE,eAE5CjH,EAAS8I,EAAOzC,EAASd,GAE7B,SAASsG,EAAiBnH,GACtB,MAAM5E,EAAO4E,GAAW74B,EAAK0+B,sBACzBzK,GACAE,EAASF,EAAKqF,WAAYrF,EAAKoH,aAAcpH,EAAKmH,cAG1D,SAASjH,EAAS8I,EAAOzC,EAASd,QACK3rB,IAA/B/N,EAAK0+B,uBACL1+B,EAAK0+B,sBAAsBvK,SAAS8I,EAAQ,GAAIzC,EAASd,GAAW,EAAG,GAEtE15B,EAAKg/B,aAAgBh/B,EAAKk/B,gBAAiBl/B,EAAKy7B,WAErDz7B,EAAKg/B,YAAYpoD,MAAQ8K,GAAKse,EAAKu7B,OAAOnF,UAEpC6G,GADE,GAAKA,GAAS,GAAM,GAAKzF,GAAIyF,EAAQ,IAAO,IAEpDj9B,EAAKk/B,cAActoD,MAAQ8K,GAAI84C,QACbzsB,IAAd/N,EAAKm3B,OACLn3B,EAAKm3B,KAAKrY,YAAc9e,EAAKw7B,KAAKrE,KAAKK,GAAIyF,GAAS,WAC7BlvB,IAAvB/N,EAAK0/B,gBACL1/B,EAAK0/B,cAAc9oD,MAAQ8K,GAAIg4C,KAEvC,SAASuG,EAAYn9C,GACjB,MAAMsyB,EAAckjB,GAAex1C,GAC7Bo3C,EAAO/hD,SAASi9B,EAAYx+B,QAAUkM,EAAM+qB,OAAS,IACvDqsB,EAAO,IAAO,GACC,UAAdp3C,EAAMrM,MAAoB,QAAQ0qB,KAAK+4B,EAAKh5B,cAC7Cg/B,EAAWhG,GAGnB,SAAS99C,EAAK4rB,EAASllB,EAAOgb,EAASha,GACnC,OAAIhB,aAAiBtI,MACVsI,EAAMjK,SAASsnD,GAAO/jD,EAAK4rB,EAASm4B,EAAIriC,EAASha,KACxDkkB,aAAmBxtB,MACZwtB,EAAQnvB,SAASC,GAAOsD,EAAKtD,EAAIgK,EAAOgb,EAASha,MAC5DkkB,EAAQjkB,iBAAiBjB,EAAOgb,EAASha,QACzCkc,EAAKogC,UAAUnlD,KAAK,CAChBzC,OAAQ,IAAMwvB,EAAQ1kB,oBAAoBR,EAAOgb,MAGzD,SAASuiC,IACLC,EAAa,YAyDjB,SAASC,EAAWC,EAAUH,GAC1B,MAAMI,OAAsB1yB,IAAbyyB,EACTxgC,EAAKq8B,UAAUmE,GACfxgC,EAAK0+B,wBACF1+B,EAAKu7B,OAAO2B,SAAWl9B,EAAKu7B,OAAO2B,QAAUl9B,EAAK3b,IAC7C2b,EAAKu7B,OAAO2B,QACZl9B,EAAKu7B,OAAO+B,SAAWt9B,EAAKu7B,OAAO+B,QAAUt9B,EAAK3b,IAC9C2b,EAAKu7B,OAAO+B,QACZt9B,EAAK3b,KACjBq8C,EAAU1gC,EAAK2gC,YACfC,EAAW5gC,EAAK6gC,aACtB,SACmB9yB,IAAX0yB,IACAzgC,EAAK2gC,YAAcF,EAAOjM,cAC1Bx0B,EAAK6gC,aAAeJ,EAAOtF,YAGnC,MAAOl8C,GACHA,EAAEW,QAAU,0BAA4B6gD,EACxCzgC,EAAKu7B,OAAOlW,aAAapmC,GAEzBohD,GAAiBrgC,EAAK2gC,cAAgBD,IACtCJ,EAAa,gBACbQ,MAEAT,GACCrgC,EAAK2gC,cAAgBD,GAAW1gC,EAAK6gC,eAAiBD,GACvDN,EAAa,iBAEjBtgC,EAAK+gC,SAET,SAASC,EAAc/hD,GACnB,MAAMm2B,EAAckjB,GAAer5C,IAC9Bm2B,EAAY52B,UAAUxD,QAAQ,UAC/BmkD,EAAkBlgD,EAAGm2B,EAAYt9B,UAAU2G,SAAS,WAAa,GAAK,GAE9E,SAAS0gD,EAAkBlgD,EAAG4uB,EAAOozB,GACjC,MAAMlrD,EAASkJ,GAAKq5C,GAAer5C,GAC7BizB,EAAQ+uB,GACTlrD,GAAUA,EAAO0G,YAAc1G,EAAO0G,WAAWq4B,WAChDhyB,EAAQ01B,EAAY,aAC1B11B,EAAM+qB,MAAQA,EACdqE,GAASA,EAAMvH,cAAc7nB,GA0DjC,SAASo+C,EAAU1iD,EAAWy1C,EAAMkN,EAAWlrD,GAC3C,MAAMmrD,EAAgBC,EAAUpN,GAAM,GAAOqN,EAAatjD,GAAc,OAAQ,iBAAmBQ,EAAWy1C,EAAKI,UAAUnzB,YAuC7H,OAtCAogC,EAAWzI,QAAU5E,EACrBqN,EAAWC,GAAKtrD,EAChBqrD,EAAW3jD,aAAa,aAAcqiB,EAAK47B,WAAW3H,EAAMj0B,EAAKu7B,OAAOpI,kBACnC,IAAjC30C,EAAUxD,QAAQ,WACe,IAAjC6hD,GAAa5I,EAAMj0B,EAAK3b,OACxB2b,EAAKwhC,cAAgBF,EACrBA,EAAWxpD,UAAUC,IAAI,SACzBupD,EAAW3jD,aAAa,eAAgB,SAExCyjD,GACAE,EAAWG,UAAY,EACnBC,EAAezN,KACfqN,EAAWxpD,UAAUC,IAAI,YACzBioB,EAAK2hC,iBAAmBL,EACC,UAArBthC,EAAKu7B,OAAOzG,OACZp5C,GAAY4lD,EAAY,aAActhC,EAAKu+B,cAAc,IACD,IAApD1B,GAAa5I,EAAMj0B,EAAKu+B,cAAc,IAAI,IAC9C7iD,GAAY4lD,EAAY,WAAYthC,EAAKu+B,cAAc,IACC,IAApD1B,GAAa5I,EAAMj0B,EAAKu+B,cAAc,IAAI,IAC5B,iBAAd//C,GACA8iD,EAAWxpD,UAAUC,IAAI,cAKrCupD,EAAWxpD,UAAUC,IAAI,sBAEJ,UAArBioB,EAAKu7B,OAAOzG,MAk3CpB,SAAuBb,GACnB,QAAyB,UAArBj0B,EAAKu7B,OAAOzG,MAAoB90B,EAAKu+B,cAAcroD,OAAS,KAExD2mD,GAAa5I,EAAMj0B,EAAKu+B,cAAc,KAAO,GACjD1B,GAAa5I,EAAMj0B,EAAKu+B,cAAc,KAAO,GAr3CzCqD,CAAc3N,KAAUyN,EAAezN,IACvCqN,EAAWxpD,UAAUC,IAAI,WAE7BioB,EAAKq2B,aACsB,IAA3Br2B,EAAKu7B,OAAOrF,YACE,iBAAd13C,GACA2iD,EAAY,GAAM,GAClBnhC,EAAKq2B,YAAYwL,mBAAmB,YAAa,+BAAiC7hC,EAAKu7B,OAAOxH,QAAQE,GAAQ,WAElHqM,EAAa,cAAegB,GACrBA,EAEX,SAASQ,EAAeC,GACpBA,EAAW1uC,QACc,UAArB2M,EAAKu7B,OAAOzG,MACZkN,EAAYD,GAEpB,SAASE,EAAqBp0B,GAC1B,MAAMq0B,EAAar0B,EAAQ,EAAI,EAAI7N,EAAKu7B,OAAOrF,WAAa,EACtDiM,EAAWt0B,EAAQ,EAAI7N,EAAKu7B,OAAOrF,YAAc,EACvD,IAAK,IAAI9oC,EAAI80C,EAAY90C,GAAK+0C,EAAU/0C,GAAKygB,EAAO,CAChD,MAAM+sB,EAAQ56B,EAAKi+B,cAAc/hD,SAASkR,GACpCg1C,EAAav0B,EAAQ,EAAI,EAAI+sB,EAAM1+C,SAAShG,OAAS,EACrDmsD,EAAWx0B,EAAQ,EAAI+sB,EAAM1+C,SAAShG,QAAU,EACtD,IAAK,IAAID,EAAImsD,EAAYnsD,GAAKosD,EAAUpsD,GAAK43B,EAAO,CAChD,MAAMgf,EAAI+N,EAAM1+C,SAASjG,GACzB,IAAuC,IAAnC42C,EAAEruC,UAAUxD,QAAQ,WAAoBqmD,EAAUxU,EAAEgM,SACpD,OAAOhM,IA+BvB,SAASyV,EAAWC,EAASjvC,GACzB,MAAMkvC,EAAaC,EAASnqD,SAASoqD,eAAiBpqD,SAASC,MACzDoqD,OAAwB50B,IAAZw0B,EACZA,EACAC,EACIlqD,SAASoqD,mBACiB30B,IAA1B/N,EAAK2hC,kBAAkCc,EAASziC,EAAK2hC,kBACjD3hC,EAAK2hC,sBACkB5zB,IAAvB/N,EAAKwhC,eAA+BiB,EAASziC,EAAKwhC,eAC9CxhC,EAAKwhC,cACLS,EAAqB3uC,EAAS,EAAI,GAAK,QACvCya,IAAd40B,EACA3iC,EAAKs/B,OAAOjsC,QAENmvC,EAxCd,SAA6BD,EAAS10B,GAClC,MAAM+0B,GAAqD,IAAxCL,EAAQ/jD,UAAUxD,QAAQ,SACvCunD,EAAQ1J,QAAQsC,WAChBn7B,EAAK6gC,aACLsB,EAAWt0B,EAAQ,EAAI7N,EAAKu7B,OAAOrF,YAAc,EACjD2M,EAAYh1B,EAAQ,EAAI,GAAK,EACnC,IAAK,IAAIzgB,EAAIw1C,EAAa5iC,EAAK6gC,aAAczzC,GAAK+0C,EAAU/0C,GAAKy1C,EAAW,CACxE,MAAMjI,EAAQ56B,EAAKi+B,cAAc/hD,SAASkR,GACpCg1C,EAAaQ,EAAa5iC,EAAK6gC,eAAiBzzC,EAChDm1C,EAAQhB,GAAK1zB,EACbA,EAAQ,EACJ+sB,EAAM1+C,SAAShG,OAAS,EACxB,EACJ4sD,EAAelI,EAAM1+C,SAAShG,OACpC,IAAK,IAAID,EAAImsD,EAAYnsD,GAAK,GAAKA,EAAI6sD,GAAgB7sD,IAAM43B,EAAQ,EAAIi1B,GAAgB,GAAI7sD,GAAK4sD,EAAW,CACzG,MAAMhW,EAAI+N,EAAM1+C,SAASjG,GACzB,IAAuC,IAAnC42C,EAAEruC,UAAUxD,QAAQ,WACpBqmD,EAAUxU,EAAEgM,UACZp4C,KAAKD,IAAI+hD,EAAQhB,GAAKtrD,IAAMwK,KAAKD,IAAIqtB,GACrC,OAAOi0B,EAAejV,IAGlC7sB,EAAK+iC,YAAYF,GACjBP,EAAWL,EAAqBY,GAAY,GAqBxCG,CAAoBL,EAAWrvC,GAH/BwuC,EAAea,GAMvB,SAASM,EAAe/I,EAAMU,GAC1B,MAAMsI,GAAgB,IAAI5+C,KAAK41C,EAAMU,EAAO,GAAGtG,SAAWt0B,EAAKw7B,KAAK5E,eAAiB,GAAK,EACpFuM,EAAgBnjC,EAAKojC,MAAMC,gBAAgBzI,EAAQ,EAAI,IAAM,GAAIV,GACjEvD,EAAc32B,EAAKojC,MAAMC,eAAezI,EAAOV,GAAOiE,EAAOrnD,OAAOwB,SAASgrD,yBAA0BC,EAAevjC,EAAKu7B,OAAOrF,WAAa,EAAGsN,EAAoBD,EAAe,sBAAwB,eAAgBE,EAAoBF,EAAe,sBAAwB,eAC9R,IAAIpC,EAAYgC,EAAgB,EAAID,EAAcQ,EAAW,EAC7D,KAAOvC,GAAagC,EAAehC,IAAauC,IAC5CvF,EAAKhiD,YAAY+kD,EAAUsC,EAAmB,IAAIl/C,KAAK41C,EAAMU,EAAQ,EAAGuG,GAAYA,EAAWuC,IAEnG,IAAKvC,EAAY,EAAGA,GAAaxK,EAAawK,IAAauC,IACvDvF,EAAKhiD,YAAY+kD,EAAU,GAAI,IAAI58C,KAAK41C,EAAMU,EAAOuG,GAAYA,EAAWuC,IAEhF,IAAK,IAAIC,EAAShN,EAAc,EAAGgN,GAAU,GAAKT,IAClB,IAA3BljC,EAAKu7B,OAAOrF,YAAoBwN,EAAW,GAAM,GAAIC,IAAUD,IAChEvF,EAAKhiD,YAAY+kD,EAAUuC,EAAmB,IAAIn/C,KAAK41C,EAAMU,EAAQ,EAAG+I,EAAShN,GAAcgN,EAAQD,IAE3G,MAAME,EAAe5lD,GAAc,MAAO,gBAE1C,OADA4lD,EAAaznD,YAAYgiD,GAClByF,EAEX,SAASC,IACL,QAA2B91B,IAAvB/N,EAAKi+B,cACL,OAEJnG,GAAU93B,EAAKi+B,eACXj+B,EAAKq2B,aACLyB,GAAU93B,EAAKq2B,aACnB,MAAMyN,EAAOxrD,SAASgrD,yBACtB,IAAK,IAAIrtD,EAAI,EAAGA,EAAI+pB,EAAKu7B,OAAOrF,WAAYjgD,IAAK,CAC7C,MAAMqkD,EAAI,IAAIh2C,KAAK0b,EAAK2gC,YAAa3gC,EAAK6gC,aAAc,GACxDvG,EAAEvB,SAAS/4B,EAAK6gC,aAAe5qD,GAC/B6tD,EAAK3nD,YAAY8mD,EAAe3I,EAAE9F,cAAe8F,EAAEa,aAEvDn7B,EAAKi+B,cAAc9hD,YAAY2nD,GAC/B9jC,EAAKm+B,KAAOn+B,EAAKi+B,cAAcnpB,WACN,UAArB9U,EAAKu7B,OAAOzG,MAAkD,IAA9B90B,EAAKu+B,cAAcroD,QACnD8rD,IAGR,SAASlB,IACL,GAAI9gC,EAAKu7B,OAAOrF,WAAa,GACS,aAAlCl2B,EAAKu7B,OAAOxG,kBACZ,OACJ,MAAMgP,EAAmB,SAAUnJ,GAC/B,aAA4B7sB,IAAxB/N,EAAKu7B,OAAO2B,SACZl9B,EAAK2gC,cAAgB3gC,EAAKu7B,OAAO2B,QAAQ1I,eACzCoG,EAAQ56B,EAAKu7B,OAAO2B,QAAQ/B,oBAGCptB,IAAxB/N,EAAKu7B,OAAO+B,SACjBt9B,EAAK2gC,cAAgB3gC,EAAKu7B,OAAO+B,QAAQ9I,eACzCoG,EAAQ56B,EAAKu7B,OAAO+B,QAAQnC,aAEpCn7B,EAAKgkC,wBAAwBvC,UAAY,EACzCzhC,EAAKgkC,wBAAwB36B,UAAY,GACzC,IAAK,IAAIpzB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAK8tD,EAAiB9tD,GAClB,SACJ,MAAM2kD,EAAQ58C,GAAc,SAAU,iCACtC48C,EAAMhkD,MAAQ,IAAI0N,KAAK0b,EAAK2gC,YAAa1qD,GAAGklD,WAAWj6B,WACvD05B,EAAM9b,YAAc2Z,GAAWxiD,EAAG+pB,EAAKu7B,OAAOtF,sBAAuBj2B,EAAKw7B,MAC1EZ,EAAM6G,UAAY,EACdzhC,EAAK6gC,eAAiB5qD,IACtB2kD,EAAMxO,UAAW,GAErBpsB,EAAKgkC,wBAAwB7nD,YAAYy+C,IAGjD,SAASqJ,IACL,MAAM/6C,EAAYlL,GAAc,MAAO,mBACjCkmD,EAAmBptD,OAAOwB,SAASgrD,yBACzC,IAAIa,EACAnkC,EAAKu7B,OAAOrF,WAAa,GACS,WAAlCl2B,EAAKu7B,OAAOxG,kBACZoP,EAAenmD,GAAc,OAAQ,cAGrCgiB,EAAKgkC,wBAA0BhmD,GAAc,SAAU,kCACvDgiB,EAAKgkC,wBAAwBrmD,aAAa,aAAcqiB,EAAKw7B,KAAKnE,gBAClEj7C,EAAK4jB,EAAKgkC,wBAAyB,UAAW/kD,IAC1C,MAAMlJ,EAASuiD,GAAer5C,GACxBmlD,EAAgBjsD,SAASpC,EAAOa,MAAO,IAC7CopB,EAAK+iC,YAAYqB,EAAgBpkC,EAAK6gC,cACtCP,EAAa,oBAEjBQ,IACAqD,EAAenkC,EAAKgkC,yBAExB,MAAMK,EAAYrM,GAAkB,WAAY,CAAEsM,SAAU,OACtDC,EAAcF,EAAU72B,qBAAqB,SAAS,GAC5D+2B,EAAY5mD,aAAa,aAAcqiB,EAAKw7B,KAAKpE,eAC7Cp3B,EAAKu7B,OAAO2B,SACZqH,EAAY5mD,aAAa,MAAOqiB,EAAKu7B,OAAO2B,QAAQ1I,cAActzB,YAElElB,EAAKu7B,OAAO+B,UACZiH,EAAY5mD,aAAa,MAAOqiB,EAAKu7B,OAAO+B,QAAQ9I,cAActzB,YAClEqjC,EAAY/tC,WACNwJ,EAAKu7B,OAAO2B,SACVl9B,EAAKu7B,OAAO2B,QAAQ1I,gBAAkBx0B,EAAKu7B,OAAO+B,QAAQ9I,eAEtE,MAAMqM,EAAe7iD,GAAc,MAAO,2BAK1C,OAJA6iD,EAAa1kD,YAAYgoD,GACzBtD,EAAa1kD,YAAYkoD,GACzBH,EAAiB/nD,YAAY0kD,GAC7B33C,EAAU/M,YAAY+nD,GACf,CACHh7C,UAAAA,EACAq7C,YAAAA,EACAJ,aAAAA,GAGR,SAASK,IACL1M,GAAU93B,EAAKykC,UACfzkC,EAAKykC,SAAStoD,YAAY6jB,EAAK0kC,cAC3B1kC,EAAKu7B,OAAOrF,aACZl2B,EAAK2kC,aAAe,GACpB3kC,EAAK4kC,cAAgB,IAEzB,IAAK,IAAIx3C,EAAI4S,EAAKu7B,OAAOrF,WAAY9oC,KAAM,CACvC,MAAMwtC,EAAQqJ,IACdjkC,EAAK2kC,aAAa1pD,KAAK2/C,EAAM2J,aAC7BvkC,EAAK4kC,cAAc3pD,KAAK2/C,EAAMuJ,cAC9BnkC,EAAKykC,SAAStoD,YAAYy+C,EAAM1xC,WAEpC8W,EAAKykC,SAAStoD,YAAY6jB,EAAK6kC,cA+FnC,SAASC,IACA9kC,EAAK+kC,iBAGNjN,GAAU93B,EAAK+kC,kBAFf/kC,EAAK+kC,iBAAmB/mD,GAAc,MAAO,sBAGjD,IAAK,IAAI/H,EAAI+pB,EAAKu7B,OAAOrF,WAAYjgD,KAAM,CACvC,MAAMiT,EAAYlL,GAAc,MAAO,8BACvCgiB,EAAK+kC,iBAAiB5oD,YAAY+M,GAGtC,OADA87C,IACOhlC,EAAK+kC,iBAEhB,SAASC,IACL,IAAKhlC,EAAK+kC,iBACN,OAEJ,MAAMnO,EAAiB52B,EAAKw7B,KAAK5E,eACjC,IAAIL,EAAW,IAAIv2B,EAAKw7B,KAAKjF,SAASC,WAClCI,EAAiB,GAAKA,EAAiBL,EAASrgD,SAChDqgD,EAAW,IACJA,EAASxc,OAAO6c,EAAgBL,EAASrgD,WACzCqgD,EAASxc,OAAO,EAAG6c,KAG9B,IAAK,IAAI3gD,EAAI+pB,EAAKu7B,OAAOrF,WAAYjgD,KACjC+pB,EAAK+kC,iBAAiB7oD,SAASjG,GAAGozB,UAAY,qDAEhDktB,EAAS1rC,KAAK,oEAgBpB,SAASk4C,EAAYnsD,EAAOquD,GAAW,GACnC,MAAMp3B,EAAQo3B,EAAWruD,EAAQA,EAAQopB,EAAK6gC,aACzChzB,EAAQ,IAAkC,IAA7B7N,EAAKklC,qBAClBr3B,EAAQ,IAAkC,IAA7B7N,EAAKmlC,sBAEvBnlC,EAAK6gC,cAAgBhzB,GACjB7N,EAAK6gC,aAAe,GAAK7gC,EAAK6gC,aAAe,MAC7C7gC,EAAK2gC,aAAe3gC,EAAK6gC,aAAe,GAAK,GAAK,EAClD7gC,EAAK6gC,cAAgB7gC,EAAK6gC,aAAe,IAAM,GAC/CP,EAAa,gBACbQ,KAEJ+C,IACAvD,EAAa,iBACb8E,KA2GJ,SAASC,EAAezyB,GACpB,SAAI5S,EAAKu7B,OAAO+J,WAAYtlC,EAAKu7B,OAAO+J,SAAS7mD,SAASm0B,KAEnD5S,EAAKg+B,kBAAkBv/C,SAASm0B,GAE3C,SAAS2yB,EAActmD,GACnB,GAAI+gB,EAAK2I,SAAW3I,EAAKu7B,OAAO5G,OAAQ,CACpC,MAAMvf,EAAckjB,GAAer5C,GAC7BumD,EAAoBH,EAAejwB,GACnCqwB,EAAUrwB,IAAgBpV,EAAKkS,OACjCkD,IAAgBpV,EAAKgzB,UACrBhzB,EAAKgI,QAAQvpB,SAAS22B,IACrBn2B,EAAEimC,MACCjmC,EAAEimC,KAAKlqC,WACLiE,EAAEimC,KAAKlqC,QAAQglB,EAAKkS,SACjBjzB,EAAEimC,KAAKlqC,QAAQglB,EAAKgzB,WAC3B0S,EAAuB,SAAXzmD,EAAE5G,KACdotD,GACExmD,EAAE0mD,gBACDN,EAAepmD,EAAE0mD,gBACnBF,IACED,IACAH,EAAepmD,EAAE0mD,eACpBC,GAAa5lC,EAAKu7B,OAAO7G,qBAAqBmR,MAAMjzB,GAASA,EAAKn0B,SAAS22B,KAC7EswB,GAAaE,SACc73B,IAAvB/N,EAAK8lC,oBACkB/3B,IAAvB/N,EAAKk/B,oBACgBnxB,IAArB/N,EAAKg/B,aACgB,KAArBh/B,EAAKkS,MAAMt7B,YACUm3B,IAArB/N,EAAKkS,MAAMt7B,OACX0nD,IAEJt+B,EAAK6C,QACD7C,EAAKu7B,QACgB,UAArBv7B,EAAKu7B,OAAOzG,MACkB,IAA9B90B,EAAKu+B,cAAcroD,SACnB8pB,EAAKrI,OAAM,GACXqI,EAAK+gC,YAKrB,SAASb,EAAW6F,GAChB,IAAKA,GACA/lC,EAAKu7B,OAAO2B,SAAW6I,EAAU/lC,EAAKu7B,OAAO2B,QAAQ1I,eACrDx0B,EAAKu7B,OAAO+B,SAAWyI,EAAU/lC,EAAKu7B,OAAO+B,QAAQ9I,cACtD,OACJ,MAAMwR,EAAaD,EAASE,EAAYjmC,EAAK2gC,cAAgBqF,EAC7DhmC,EAAK2gC,YAAcqF,GAAchmC,EAAK2gC,YAClC3gC,EAAKu7B,OAAO+B,SACZt9B,EAAK2gC,cAAgB3gC,EAAKu7B,OAAO+B,QAAQ9I,cACzCx0B,EAAK6gC,aAAepgD,KAAKL,IAAI4f,EAAKu7B,OAAO+B,QAAQnC,WAAYn7B,EAAK6gC,cAE7D7gC,EAAKu7B,OAAO2B,SACjBl9B,EAAK2gC,cAAgB3gC,EAAKu7B,OAAO2B,QAAQ1I,gBACzCx0B,EAAK6gC,aAAepgD,KAAKJ,IAAI2f,EAAKu7B,OAAO2B,QAAQ/B,WAAYn7B,EAAK6gC,eAElEoF,IACAjmC,EAAK+gC,SACLT,EAAa,gBACbQ,KAGR,SAASO,EAAUpN,EAAM8H,GAAW,GAChC,IAAImK,EACJ,MAAMC,EAAcnmC,EAAKq8B,UAAUpI,OAAMlmB,EAAWguB,GACpD,GAAK/7B,EAAKu7B,OAAO2B,SACbiJ,GACAtJ,GAAasJ,EAAanmC,EAAKu7B,OAAO2B,aAAsBnvB,IAAbguB,EAAyBA,GAAY/7B,EAAK6/B,gBAAkB,GAC1G7/B,EAAKu7B,OAAO+B,SACT6I,GACAtJ,GAAasJ,EAAanmC,EAAKu7B,OAAO+B,aAAsBvvB,IAAbguB,EAAyBA,GAAY/7B,EAAK+/B,gBAAkB,EAC/G,OAAO,EACX,IAAK//B,EAAKu7B,OAAOvY,QAAyC,IAA/BhjB,EAAKu7B,OAAO1iC,QAAQ3iB,OAC3C,OAAO,EACX,QAAoB63B,IAAhBo4B,EACA,OAAO,EACX,MAAM1O,IAASz3B,EAAKu7B,OAAOvY,OAAQ7oC,EAAsC,QAA7B+rD,EAAKlmC,EAAKu7B,OAAOvY,cAA2B,IAAPkjB,EAAgBA,EAAKlmC,EAAKu7B,OAAO1iC,QAClH,IAAK,IAAWyhC,EAAPrkD,EAAI,EAAMA,EAAIkE,EAAMjE,OAAQD,IAAK,CAEtC,GADAqkD,EAAIngD,EAAMlE,GACO,mBAANqkD,GACPA,EAAE6L,GACF,OAAO1O,EACN,GAAI6C,aAAah2C,WACFypB,IAAhBo4B,GACA7L,EAAEpG,YAAciS,EAAYjS,UAC5B,OAAOuD,EACN,GAAiB,iBAAN6C,EAAgB,CAC5B,MAAM8L,EAASpmC,EAAKq8B,UAAU/B,OAAGvsB,GAAW,GAC5C,OAAOq4B,GAAUA,EAAOlS,YAAciS,EAAYjS,UAC5CuD,GACCA,EAEN,GAAiB,iBAAN6C,QACIvsB,IAAhBo4B,GACA7L,EAAErvC,MACFqvC,EAAE+L,IACFF,EAAYjS,WAAaoG,EAAErvC,KAAKipC,WAChCiS,EAAYjS,WAAaoG,EAAE+L,GAAGnS,UAC9B,OAAOuD,EAEf,OAAQA,EAEZ,SAASgL,EAAS7vB,GACd,YAA2B7E,IAAvB/N,EAAKi+B,iBACyC,IAAtCrrB,EAAKp0B,UAAUxD,QAAQ,YACuB,IAAlD43B,EAAKp0B,UAAUxD,QAAQ,uBACvBglB,EAAKi+B,cAAcx/C,SAASm0B,IAGxC,SAAS0zB,EAAOrnD,KACIA,EAAElJ,SAAWiqB,EAAKs/B,WAE7Bt/B,EAAKu+B,cAAcroD,OAAS,GAAK8pB,EAAKs/B,OAAO1oD,MAAMV,OAAS,IAC3D+I,EAAE0mD,eAAiBN,EAAepmD,EAAE0mD,gBACtC3lC,EAAKo0B,QAAQp0B,EAAKs/B,OAAO1oD,OAAO,EAAMqI,EAAElJ,SAAWiqB,EAAKgzB,SAClDhzB,EAAKu7B,OAAOxI,UACZ/yB,EAAKu7B,OAAO/H,YAG1B,SAAS8B,EAAUr2C,GACf,MAAMm2B,EAAckjB,GAAer5C,GAC7BwmD,EAAUzlC,EAAKu7B,OAAOrrB,KACtBlI,EAAQvpB,SAAS22B,GACjBA,IAAgBpV,EAAKs/B,OACrBzM,EAAa7yB,EAAKu7B,OAAO1I,WACzB0T,EAAevmC,EAAK2I,UAAYkqB,IAAe4S,GAC/Ce,EAAqBxmC,EAAKu7B,OAAO5G,QAAU8Q,IAAY5S,EAC7D,GAAkB,KAAd5zC,EAAEwnD,SAAkBhB,EAAS,CAC7B,GAAI5S,EAIA,OAHA7yB,EAAKo0B,QAAQp0B,EAAKs/B,OAAO1oD,OAAO,EAAMw+B,IAAgBpV,EAAKgzB,SACrDhzB,EAAKu7B,OAAOxI,UACZ/yB,EAAKu7B,OAAO/H,YACXpe,EAAYsxB,OAGnB1mC,EAAK4qB,YAGR,GAAIya,EAAejwB,IACpBmxB,GACAC,EAAoB,CACpB,MAAMG,IAAc3mC,EAAK8lC,eACrB9lC,EAAK8lC,cAAcrnD,SAAS22B,GAChC,OAAQn2B,EAAEwnD,SACN,KAAK,GACGE,GACA1nD,EAAEE,iBACFm/C,IACAsI,KAGAC,EAAW5nD,GACf,MACJ,KAAK,GACDA,EAAEE,iBACFynD,IACA,MACJ,KAAK,EACL,KAAK,GACGnB,IAAYzlC,EAAKu7B,OAAO1I,aACxB5zC,EAAEE,iBACF6gB,EAAKrI,SAET,MACJ,KAAK,GACL,KAAK,GACD,GAAKgvC,GAAclB,EAeVzlC,EAAKg/B,aACVh/B,EAAKg/B,YAAY3rC,aAdjB,GADApU,EAAEE,sBACyB4uB,IAAvB/N,EAAKi+B,iBACW,IAAfpL,GACIv6C,SAASoqD,eAAiBD,EAASnqD,SAASoqD,gBAAkB,CACnE,MAAM70B,EAAsB,KAAd5uB,EAAEwnD,QAAiB,GAAK,EACjCxnD,EAAE6nD,SAGH7nD,EAAEC,kBACF6jD,EAAYl1B,GACZy0B,EAAWL,EAAqB,GAAI,IAJpCK,OAAWv0B,EAAWF,GAUlC,MACJ,KAAK,GACL,KAAK,GACD5uB,EAAEE,iBACF,MAAM0uB,EAAsB,KAAd5uB,EAAEwnD,QAAiB,GAAK,EACjCzmC,EAAKi+B,oBACalwB,IAAnBqH,EAAYmsB,IACZnsB,IAAgBpV,EAAKkS,OACrBkD,IAAgBpV,EAAKgzB,SACjB/zC,EAAE6nD,SACF7nD,EAAEC,kBACFghD,EAAWlgC,EAAK2gC,YAAc9yB,GAC9By0B,EAAWL,EAAqB,GAAI,IAE9B0E,GACNrE,OAAWv0B,EAAmB,EAARF,GAErBuH,IAAgBpV,EAAK+mC,mBAC1B7G,EAAWlgC,EAAK2gC,YAAc9yB,GAEzB7N,EAAKu7B,OAAOzH,cACZ6S,GAAa3mC,EAAKg/B,aACnBh/B,EAAKg/B,YAAY3rC,QACrBirC,EAAWr/C,GACX+gB,EAAKy/B,oBAET,MACJ,KAAK,EACD,GAAIkH,EAAW,CACX,MAAMK,EAAQ,CACVhnC,EAAKg/B,YACLh/B,EAAKk/B,cACLl/B,EAAK0/B,cACL1/B,EAAKm3B,MAEJz6B,OAAOsD,EAAKinC,gBACZrqD,QAAQsE,GAAMA,IACbjL,EAAI+wD,EAAMhsD,QAAQo6B,GACxB,IAAW,IAAPn/B,EAAU,CACV,MAAMF,EAASixD,EAAM/wD,GAAKgJ,EAAEioD,UAAY,EAAI,IAC5CjoD,EAAEE,kBACDpJ,GAAUiqB,EAAKs/B,QAAQjsC,cAGtB2M,EAAKu7B,OAAOtG,YAClBj1B,EAAKi+B,eACLj+B,EAAKi+B,cAAcx/C,SAAS22B,IAC5Bn2B,EAAEioD,WACFjoD,EAAEE,iBACF6gB,EAAKs/B,OAAOjsC,UAO5B,QAAkB0a,IAAd/N,EAAKm3B,MAAsB/hB,IAAgBpV,EAAKm3B,KAChD,OAAQl4C,EAAExI,KACN,KAAKupB,EAAKw7B,KAAKrE,KAAK,GAAG/e,OAAO,GAC9B,KAAKpY,EAAKw7B,KAAKrE,KAAK,GAAG/e,OAAO,GAAGhB,cAC7BpX,EAAKm3B,KAAKrY,YAAc9e,EAAKw7B,KAAKrE,KAAK,GACvCoI,IACAC,IACA,MACJ,KAAKx/B,EAAKw7B,KAAKrE,KAAK,GAAG/e,OAAO,GAC9B,KAAKpY,EAAKw7B,KAAKrE,KAAK,GAAG/e,OAAO,GAAGhB,cAC7BpX,EAAKm3B,KAAKrY,YAAc9e,EAAKw7B,KAAKrE,KAAK,GACvCoI,IACAC,KAIRiG,GAAWJ,EAAejwB,KAC1BkrB,EAAa,YAAarhD,GAGlC,SAAS+iD,EAAYpvB,GACjB,GAAkC,IAA9B5S,EAAKu+B,cAAcroD,QAClB08B,KACKA,EAAK96B,UAAU2G,SAAS,kBACtBm0B,EAAK96B,UAAU2G,SAAS,uBAChC,OACJ,MAAM0oD,EAAYv0B,EACZA,EAAKimB,QAAQ3E,UACbl0B,EAAKm+B,KAAKrhD,kBAAkB+7C,QAAQ3E,UAAWkT,EAAcpnC,EAAKq8B,UAAUr8B,EAAKu+B,cAAc,QAAIxwB,GAAW,GAAMmmB,UAAWmT,EAAiB5mD,KAAKL,IAAI+mD,EAAWnnC,EAAKu+B,cAAc,GAAGrK,WAAYoT,EAAe7mD,KAAKJ,IAAI8mD,EAAWnnC,EAAKu+B,cAAc,GAAGrK,WACrQ,IAAIqT,GAAmB,EACnBC,EAAW,EAAGC,EAAW,EAC7B,IAAK,IAAI5vC,EAAIwvC,EAAgBxvC,EAAIyvC,EAAczvC,GAAKxS,GAC3Cg8C,EAAU,IAAI/8C,KAAKuT,IAAI,KACxB0vC,EACIA,GAAqB1vC,EAAIwvC,GAAkBxvC,EAAIyvC,EAC/CzvC,EAAIuvC,KAAiBI,GAAY3vC,EAAI2vC,GACrCA,EAAW3vC,EACNA,EAAIuvC,KAAiBK,GAAY5vC,EAAI4vC,KAC1CA,EAAW5vC,IAGvB,IAAK,IAAIzK,EAAI,EAAGA,EAAI4S,EAAKu7B,OAAOrF,WAAY9oC,IAAK,CAC7C,MAAMwtC,EAAQ56B,EAAKi+B,cAAc/hD,SAASkR,GAC1C,IAAK,IAAInX,EAAI,EAAG0kD,EAAIC,EAAM1+C,SAAShG,OAAQD,EAAI0kD,EAAG1kD,IAAK,CACnD,MAAMyxD,EAAU9M,EAAM1+C,SAASjG,GACzB0xD,EADoCD,EAAQ7O,QAC3B3E,UACjB0T,EAAcJ,EAAW,GAAKG,EAAYH,GAC3CC,EAAW,GAAKE,EAAYF,EAC7BG,GACAF,EAAQ5vD,UAAUC,IAAI,cACtB,CAAC,UAAW,aAAc,YAAYc,SAASg0C,IAC3C6a,EAAQ5vD,UAAUU,OAAOq0C,OAIxB0a,IAAqBK,IAE9B,CAAC,aAAc,UAAW,WAAY,cAAc/uD,SAASg0C,IACzD6a,EAAQ5vD,UAAUU,OAAOq0C,WAEhB9e,IAAT6E,IACAA,EAAK96B,UAAUC,IAAIovD,GAAannC,EAAKu+B,cAAc,GAAGrK,UAChD,aACA,YACFkT,EAAcD,GAAaQ,IAAcP,EACzCM,EAAQ5vD,UAAUC,IAAI,cACjBqvD,EAAcD,GAAaQ,IAAcP,GAC9CM,EAAQ5vD,UAAUC,IAAI,YACtB4vD,GAAaH,IACC,IAAbC,GAAkBE,GAAaF,KFxjC1BI,EEyjCeT,EFzjCVU,EEyjCuBX,GFzjChCY,EEyjCQJ,GFxjClBlnD,KAAKL,IAAIynD,EAAKC,IAAQC,EAAKtnD,KAAKJ,IAAIwnD,EAAKC,KEyjCjCJ,EAAQ5vD,UAAUC,IAAI,cF1jCrB,IAACgwD,EAAIF,EAAKC,EE+jC/B,SAASE,KACDhoC,EAAK2I,QAAW3I,EAAKu7B,OAAOpF,QAAWn2B,EAAKu7B,OAAO5G,QACnDsT,IAqCR,SAASC,EAAiB7vD,GACtB,OAAQ47C,IACJ,MAAM4E,EAAW74B,EAAKu7B,OAAO,IAAIljD,SAAc2nB,EAAKq8B,UAAUpI,EAAMj0B,EAAKu7B,OAAO/H,YAC1E2U,EAAiBnoC,EAAKu7B,OAAO,IAAa,QAATljD,EAAiB,MAAQ,kBAChD01B,IAAZ8qB,IACA74B,EAAc,QAAT3nB,EAAiB,iBAAmB,kBACrCwgD,EAAQS,WAAa,GACjBT,EAAQwC,aAAe,GACvBxC,EAAQuC,aAAe,GAE/Bp7B,EAAKu+B,gBACLv+B,EAAKu+B,cAAgBv+B,EAAKu+B,cAAc3hD,QAAQ09C,GAAM+G,EAAU/G,KAC3Dt6B,EAAKu+B,cAAcroD,QAAmB,QAATmC,GAC9B2nD,EAAiBnH,GACrB2G,KAEAx/B,EAAKi+B,gBACL8C,SACgBhzB,IAAZ8qB,EACA74B,EAAK+mC,mBAAmB1uD,GAAQwgD,EAAQrE,cAActzB,WAEtDlB,EAAK+mC,mBAAmBvpD,gBAAgBnF,GAC5C2nB,EAAK+mC,mBAAmBvwC,WAClB2xC,QACcp6B,IAAZ8qB,GACAsP,EAAe3T,gBAAkBqE,EAAQrE,gBA+G7D,SAAS4T,IACL,OAAOpoC,EAAKu7B,OAAOrrB,KACblI,EAAQ1oB,cAAc,gBACtB0oB,EAEV,SAASqgC,IAC6B,iBAAvBroC,EAAKu7B,OAAO3G,aAC4B,IAAxC+I,GAAU2K,MAAMtoC,EAAKu7B,OAAO3G,SACnC50B,EAAKu7B,OAAOlW,aAAa,IAAIxlC,MAAM,6BAA6BmgB,EAAKu7B,OAAO3G,WAChF50B,EAAKw7B,KAAOjlD,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIugD,GAAU2K,MAAM/uB,SAAyC,iBAAvBvZ,EAAKu7B,OAAO3G,OACpF50B,EAAKu7B,OAAO3G,OACW,YAAvB50B,EAAKu7B,OAAO3G,OACR+I,GAAU2K,MAAMtoC,EAAKu7B,OAAO3G,aAC5B7mB,GACVitB,GAAW3B,EAAI,IAAIr5B,EAAKw7B,KAAKrE,KAAK,MAAMn3B,EAAKw7B,KAAKrE,KAAK,MAAMn3B,EAAKw7B,KAAKrE,KAAK,GAAG/f,iBAAiBpX,EAAKw7B,KAAKrE,KAAK,GAAG/f,sBAErFrJ,IADVx3B,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIsgD,GAAiB5wC,KAAKC,MAAMD,KAAKy7C,UAAUvgC,EAAQmB,SAAW,MAClGitB,gBAC2BroB,IAAtC4vB,GAAUC,cAAcxH,YACxBp2B,EAAKu7B,OAAOnF,UAAYp2B,EAAKw7B,KAAKpF,WAEtCp2B,EAAK47B,WAAaN,GAAoBt7B,GACtCA,EAAKq8B,UAAYR,GAAiB,CAAEN,OAAQv7B,EAAKu7B,OAAQC,KAAMx7B,EAAKw7B,OAExE,SAASyM,EAAiBO,GACtB,GAAoC,mBAAzBxoC,EAAKu7B,OAAOhpC,SACnB,YAAYyN,EAAKu7B,OAAOhpC,SAASyN,EAAMwoC,GAE3C,QAA+Bz6B,IAA3B/N,EAAKg+B,kBACL,OACJsC,EAAa,yBACb,MAAMvK,EAAkByS,GAAyBxoC,EAAKyoC,iBAChDC,EAAiBluD,MAAMY,UAAUutD,OAAOltD,KAAKukB,EAAKg+B,kBAAkB9hD,UAAQ,CAAI0sD,EAAK/rD,IAAU+rD,EAAM/rD,EAAM4xB,cAAe,GAAIo6B,EAAgB7oC,EAAKg+B,kBAAkB5zB,YAAa0+B,EAAY9oC,EAAKu7B,OAAOhpC,SAASxW,MAAM,KAAMgtD,EAAoBD,EAAU,GAAIE,EAAsBF,EAAU5yD,OAAS,EAAI4yD,EAAU,GAAK,KAAMG,EAAclT,EAAgB/8C,wBAAyBkwD,EAAqBpyD,OAAOoC,YAAc+vD,EAAYnyB,OAAQqyB,EAAkC,UAAtBJ,GAC/a,UAAtBA,GACGG,EAAqBR,GACrBO,EAAYj8B,IAAM07B,EACpB17B,EAAMl2B,OAAOsyD,YACfH,EAAYj8B,KACVm8B,GAAgDT,EAAiB,EAArD3S,EAAgBtnB,aAAe,GAGjD,GAFA/yB,GAAYskB,EAAKg+B,kBAAmB,YAAamL,GACjDztD,GAAYskB,EAAKg+B,kBAAmB,cAAemL,GAC/CnpC,EAAKu7B,OAAO5G,OACZ,OACJ,IAAI5uC,EAAOjP,OAAOuyD,YAAcJ,EAAYljD,KACxCujD,GAAW,EACXC,GAAU,EACc,WAAxBP,GACAjjD,IAAS8iD,EAAgBI,EAAYnjD,OAAS,EAC9CwjD,GAAW,GAEkB,UAAxBN,IACLjjD,GAAQ8iD,EAAgBI,EAAYnjD,MACpCyjD,GAAU,GAEd7tD,GAAYskB,EAAKg+B,kBAAmB,aAAcsL,IAAaC,GAC/D7tD,GAAYskB,EAAKg+B,kBAAmB,cAAesL,GACnD5tD,GAAYskB,EAAKg+B,kBAAmB,aAAcuL,GAClD,MAAMtsD,EAAQnG,OAAOwB,SAASC,KAAK6xB,aAC9BtzB,OAAOuyD,YAAcJ,EAAYhsD,OAChCusD,EAAYzjD,EAAO8iD,EAAgB/xD,OAAOwB,SAASC,KAAK6xB,YACxDq/B,EAAaxsD,EAAQ4rD,EAAgB/xD,OAAOwB,SAASC,KAAK6xB,YAEhE,GADA1uB,GAAYskB,EAAKg+B,kBAAmB,YAAawL,IAC7CxpC,EAAKu7B,OAAOpF,OAGhB,GADAn2B,EAAKg+B,kBAAkB//C,MAAM+uB,IAAM,GAAGA,MACjCw8B,EAIA,GAAKC,EAIL,CACD,MAAMC,EAgBd,WACI,IAAIC,EAAgB,KACpB,IAAK,IAAI1zD,EAAI,EAAGA,EAAIqC,SAASsxD,YAAY1zD,OAAQD,IAAK,CAClD,MAAM4zD,EAAQvxD,SAASsxD,YAAY3zD,GACnC,IACI4zD,EAAMC,SAEV,MAAOroC,GACH,SAEJkoC,EAAgBE,EAChB,MAEJ,OAAwB,MAAjBF,EAAwBA,EAEnC,WACI,MAAM1rD,EAAQ3F,SAAS0F,cAAc,SAErC,OADA1F,SAASi6C,KAAKp2C,YAAY8B,GACnBA,EAAM4rD,MALkCE,GA7B/BC,GACZ,QAAYj8B,IAAR27B,EACA,OACJ,MAAMO,EAAYnzD,OAAOwB,SAASC,KAAK6xB,YACjC8/B,EAAazpD,KAAKJ,IAAI,EAAG4pD,EAAY,EAAIpB,EAAgB,GACzDsB,EAAe,wCACfC,EAAc,uCACdC,EAAcX,EAAII,SAAS5zD,OAC3Bo0D,EAAc,SAASrB,EAAYljD,sBACzCrK,GAAYskB,EAAKg+B,kBAAmB,aAAa,GACjDtiD,GAAYskB,EAAKg+B,kBAAmB,cAAc,GAClD0L,EAAIa,WAAW,GAAGJ,KAAgBC,IAAcE,IAAeD,GAC/DrqC,EAAKg+B,kBAAkB//C,MAAM8H,KAAO,GAAGmkD,MACvClqC,EAAKg+B,kBAAkB//C,MAAMhB,MAAQ,YAjBrC+iB,EAAKg+B,kBAAkB//C,MAAM8H,KAAO,OACpCia,EAAKg+B,kBAAkB//C,MAAMhB,MAAQ,GAAGA,WALxC+iB,EAAKg+B,kBAAkB//C,MAAM8H,KAAO,GAAGA,MACvCia,EAAKg+B,kBAAkB//C,MAAMhB,MAAQ,OA2C7C,SAAS8jD,IACD/gC,EAAKu7B,OAAOtG,YAAcj1B,EAAKy7B,WAEnCqF,IACAsE,IACAvB,KAEJ,SAAS+C,IACL5mC,EAAKs/B,OAAOjsC,SACwC,IAAhDvc,OAAO6tB,UAAUwpB,UAAUnzC,QAAQ,cACJ+yB,IAA/BpJ,UAAU6lC,iBACVvyD,WAAW+nB,EAAK6C,MAAO,GAGvB7C,EAAK6C,QAGb,SAASgkC,EAAW5nD,GAChBA,EAAEE,iBACFF,EAAEC,kBACF,MAIM2Y,EAAIkgC,GAAWO,GAAer5C,IAJdm6C,GAAQA,EAAIthD,WAC9BshD,EAAIthD,UAAU2G,SAAS,mBACtB26C,EAAIthD,UAAU2G,SAAS,wBACvB26C,EAAIthD,UAAU2G,SAAS,gBAE5B,QAAUsvB,IAANlW,EACA,OACJ,MAAM9hB,EAAS8hB,EACT4yC,EAAgBzqC,EAAK0+B,sBAAwB,IAAIp6C,KAAKvO,EAAO8iD,QAAQ3E,WACrEwW,GAAqBD,EAAatP,WAAan7B,EAAK6gC,cACtD4J,EAAatP,WACTn7B,EAAK6gC,aAAe7gC,EAAKu7B,OAAOrF,WAAa,IAC5B,UAArBl2B,EAAKu7B,OAAOzG,KAEhB,GADA90B,EAAK2hC,iBAAmB5rD,EACC,WAArBiqB,EAAKu7B,OAAOzG,KACZ90B,EAAKu+B,cAAgB,CAACkM,QACrB,GAAyB,aAArBzqC,EAAKu7B,OAAOzG,KAAqB,CACtC,MAAM6V,EAAgBjJ,EAAe+I,GACjCE,EACA3qC,EAAKu+B,cAAcxkB,OAAO5hC,SAASwyD,GAAgB,GAEnD3qC,EAAKu+B,cAActjD,KAAKwvD,OAEF,UAArBzqC,EAAKu7B,OAAOzG,OACiB,IAA9B90B,EAAKu+B,cAAcroD,QACnB8pB,EAAKrI,OAAM,GAAO,GAEtBqI,EAAK0+B,sBAAwB+L,EAC7BzqC,EAAKu+B,cAActjD,KAAKwvD,GACwC,IAA5D5N,GAAa4N,EAAczqC,EAAKu+B,cAAc,IAAI,IAClDv+B,EAAKu+B,cAAcrxC,MAAK,CAACosB,EAAGoE,IAAMpE,EAAE4a,UAAYxW,EAAEwW,aAG1D,GADAqL,IACImL,EAAmB,CACnB,MAAMzE,EAAYjmC,EAAK2gC,cAAgB8J,EAAajW,cACpDx0B,EAAK2gC,YAAc8J,EAAajW,cAChCx0B,EAAK6gC,aAAe4J,EAAatP,WAC7B8K,IACA3F,EAAa,gBACbQ,KAEJR,EAAa,iBAejB,GAbA8E,IACAvB,IACArE,IACKkL,GACoB,UAArB1qC,EAAKu7B,OAAOzG,MACe,IAA3B90B,EAAKu7B,OAAOrF,gBAEmBnoB,IAA1B/N,EAAK2hC,uBACW5zB,IAArB/N,EAAKg/B,aACLh/B,EAAK2hC,kBAAoB3hC,EAAK2hC,iBAAiBtuC,QAH/CyuC,EAAe/rD,QAKMg4B,IAArB/N,EAAKg/B,kBACgBjxB,IAArB/N,EAAKg/B,aAA6Bh/B,EAAKg/B,YAAY3rC,QACnD2M,EAAKu7B,OAAOjI,cAAe,CAC3B,MAAMsX,EAA8B,WAArB5qC,EAAKu7B,OAAOzG,OAAsB90B,EAAKu7B,OAAOzH,WACvD+W,EAA6B,UAArB7qC,EAAKu7B,OAAOzG,MACQ,IAA9B90B,EAAKu+B,cAAcroD,SAClB8pB,EAAKu7B,OAAOzH,YACb8W,GAAUC,IACVjE,IAGRvG,IA3/CJrgC,EAAKq8B,UAAYR,GAAiB,CAAEN,OAAQv7B,EAAKu7B,OAAQC,KAAMx7B,EAAKw7B,OACpEx7B,EAAKogC,UAAY,GACjBpgC,EAAKinC,eAAiB,GACtBjnC,EAAK8qC,cAAgB,GACrB9qC,EAAK+qC,MAAQ3uD,EACb4jB,EAAKgrC,kBAAoBhL,EACzBhgC,EAAKirC,kBAAoBhD,EACzBjoC,EAAK+iC,YAAcA,EACnB/iC,EAAKkgC,WAAaA,EAClBlgC,EAAKrI,MA4tBL,SAAeuzC,GAAqB,EAAMC,GAAY,GAClDnrC,EAAKkS,MAAMt7B,MAAQ,QACGm3B,IAAlB/N,EAAKgzB,WACLhzB,EAAKgzB,SAASp8C,MAAQ,SACDm3B,IAArB/N,EAAKorC,cACLprC,EAAKorC,YAAYx0D,MAAQ,IAC7BopB,EAAKu+B,cAAgB,GACrBv+B,EAAK0+B,2BAAwB3wB,GACX,IAAdo9B,IACAnrC,EAAK2gC,YAAc3gC,EAAKqrC,aAAa7W,cACrCx0B,EAAK6gC,aAAe7gC,EAAKqrC,aAAalQ,YAE1C,IAA+B,IAA3Bn7B,EAAKu7B,OAAOzH,WAAqB,CACjC,MAAMmJ,MAAEA,EAAKzC,QAAEA,EAAOd,QAAEA,GAAYsD,GAAgBh9B,EAAKu7B,QACzDpH,EAAS8I,EAAOzC,EAASd,GAE7B15B,EAAK+gC,SACDmK,GACA5K,EAAa,aA7uBrBtgC,EAAK6C,MA+uBL,WACI7C,EAAK2I,QAAS,EACT3I,EAAKy7B,gBACyB1tB,IAA3B/N,EAAKg+B,mBACLh+B,EAAKg+B,kBAAkBlmD,UAAUU,OAAO,aAExBu1B,IAAhB/N,EAAKs/B,QACLt/B,EAAKs/B,OAAOxnD,UAAUU,OAAO,WAGrC8nD,EAAa,YAxvBjBtgC,EAAKsrC,eAAiBttD,GACtBgiB,EAAKzc,QAyvBL,gBACwBwqB,IAAhB/N,EAAKu7B,QACL+E,EAAa,aACjB,IAAK,IAAIrqD,EAAI+pB,EAAKogC,UAAUlqD,OAAQD,KAChC+pB,EAAKogC,UAAUnqD,GAAGuC,SAGtB,GADAwnB,EAAKogC,UAAY,GACbpgC,EAAKorC,YACDprC,EAAKorC,YAAY3uD,YACjBujB,EAAKorC,YAAY3uD,WAAWkC,YAAYqhB,EAAKorC,aACjDprC,EAAKorC,iBAAcr9B,OAElB,GAAI/N,EAAKg+B,mBAAqBh+B,EAAKg+B,kBAAkBvhD,WACtD,GAAIujB,EAAKu7B,OAAOpF,QAAUn2B,EAAKg+B,kBAAkBvhD,WAAY,CACzD,MAAMqZ,EAAUkK,EAAKg+B,kBAAkBvhD,WAEvC,GADAqZ,EAAQy1C,WAAaz1C,EAAQnX,YAAYmX,EAAQy1C,WAC7Cz1C,EAAQrZ,WAAY,CACpB,KAAOqZ,EAAQgf,YACXhf,EAAQrZ,WAAWC,aAAaoZ,EAAQgf,WAAYhf,GACxDA,EAAQrZ,WAAWkC,YAAYmX,SAInCkK,EAAKg+B,kBAAkBvhD,WAAWkC,YAAYqhB,EAAKg+B,mBAEvDh+B,EAAKgzB,WACLhzB,EAAKkS,MAAM75B,KAAO,OACd2nB,EAAKgzB,SAASv2C,YACdujB,EAAKgzB,SAASv2C,WAAWkC,YAAYqhB,EAAKgzB,iBACvChzB,EAAKgzB,UAEZhzB,EAAKkS,QACLlS,EAAKkS,MAAM75B,KAAO2nB,EAAKkS,MAAMs5B,MAC7BxrC,EAAKkS,MAAMp6B,UAAUU,OAAO,mBAC5BwnB,EAAKkS,MAAM10B,gBAAgB,aAE/B,CACI,iBACA,wBACA,sBACA,sBACA,uBACA,uBACA,WACA,SACA,mBACA,iBACA,iBACA,OACA,gBACA,SACA,mBACA,iBACA,aACA,WACA,gBACA,oBACA,mBACA,eACA,eACA,0BACA,sBACA,qBACA,yBACA,mBACA,UACF3E,SAAS4yD,IACP,WACWzrC,EAAKyrC,GAEhB,MAAO5R,SA9zBf75B,EAAKqhC,UAAYA,EACjBrhC,EAAKugC,WAAaA,EAClBvgC,EAAK4qB,KA+nCL,SAAc3rC,EAAG82C,EAAkB/1B,EAAKyoC,kBACpC,IAAsB,IAAlBzoC,EAAKy7B,SAAmB,CACxB,GAAIx8C,EAAG,CACHA,EAAEE,iBACF,MAAMi2B,EAAckjB,GAAer5C,GAC/Bm2B,GACAA,EAAYsxB,OAQpB,YALyB34B,IAArB/N,EAAKorC,cACLprC,EAAKorC,YAAY/3C,QACjB2M,EAAKorC,YAAYtoB,cAErBwd,EAAa,UAGZ,GAAItgC,EAAKs/B,OAAO9oC,UAAYwJ,EAAKu7B,OAAO5G,OACzC,OAEJ,MAAM+W,EAAU1rC,EAAK2I,OACrB3I,EAAK2I,QAAS,EACT+iC,IACD1rC,EAAKg+B,kBAAkBlmD,UAAUC,IAAI,QACrCioB,EAAKs/B,OAAOxnD,UAAUC,IAAI,UAC1BuoD,EAAa,UACb2H,EAAiBlS,KAEU,IAA3B/1B,EAAKu7B,OAAOzH,aAAkD,IAA3B9zB,EAAKu7B,OAAOtG,cAChB,IAA3Bj1B,EAAKu7B,OAAO1I,iBACL9kB,IAAN9uB,GACI+gB,EAAK8lC,cAAcrnD,SAASQ,EAAE0mD,gBACnC1tD,YAAW,IAAM+nB,EAAKg/B,YAAY2M,UAAU,MA7pCxD3rC,EAAK+gC,OAASA,EACd/gC,EAAKrM,IA8/CL,SAAa01B,EAAQzyC,GACjB,GAAe,OAAXyyC,GAAqC,iBAAXA,EAAqB,CAC/C9yC,OAAO6G,OAAO4iB,EAAKu7B,OAAQlS,GAC3B,IAAK,MAAM5yC,KAAO4yC,OACStb,IAAnB69B,EAAUn1D,IACVm1D,EAAUn1D,GAAKoC,SAASqI,GAAMA,WAItC8e,EAAKu7B,OAAOlS,GAAUzyC,OACIm3B,IAAtB69B,EAAUviB,GACVuiB,EAAUviB,GAAQxwC,SAASqI,GAAMA,MAC5ByxC,GAAM33C,QAAQquC,IAAW,IAC9BrpB,EAAKu7B,OAAOlS,GAAUuO,GAAShhD,IAEvCopB,EAAK+gC,SACLvB,GAAY,IA7gDhBx/B,EAAKo0B,QAijDL,SAAiBH,EAAMoM,GAAgB,EAAOh/C,EAAS2e,EAAKu7B,OAAO/H,YAC/D,GAAc,IAATS,IAAeA,GAAUA,aAAgBz5C,OAAyB,IAAhBy5C,EAAK/9C,OACxD,OAAO8pB,EAAKrI,MAAM0oC,GACtBwL,EAAgB5X,EAAM5yC,GACtB2e,EAAK0+B,sBACD1+B,EAAKu+B,cAAcv+B,EAAKu+B,cAAcroD,OAAS,GACnD8pB,EAAK+gC,SACLR,OAAWxyB,EAAWsyB,GACtBL,IACkC,IAA9BhgC,EAAKu+B,cAAcroD,QACnB8pB,EAAKrI,OAAM,GAEf6nC,EAAYa,GACRA,GACAC,EAAa,aA9jDrBtgC,EAAKzI,OAisDL,SAAgBtY,GACZ,IAAoB,IAAhB+gB,EAAK2I,OACL,OAAO3I,EAAK6C,QAChB7C,EAAK4qB,KAAK3rC,IA1Nd,MAAM2sD,EAAY,CACdhX,OAAQ,CAACyT,EAAarD,GACtB9O,WAAY,CAACsO,EAAazG,EAAkB+G,GAC5C5H,QAAS,CAACqD,GACVjD,QAAS,CAACiD,GACVlN,WAAY,CACR,MACmC,IAA3BrzB,EAAKu7B,OAAOlI,YACZj3C,EAAK4jB,EAAKs/B,OAAQ,QAASt/B,EAAK4qB,MAChCxuC,EAAK4jB,EAAKs/B,OAAQ,QAASt/B,EAAK4qB,QAGhC5qB,EAAKs/B,OAAOh8C,oBAAoB,QAAS0c,EAAK4qB,MAC9C5qB,EAAKs/B,OAAOh8C,oBAAoB,QAAS0c,EAAK4qB,UAuB9D,SAASihB,EAAgBC,EAAWzqD,GAChC,IAAI0qD,EAAQ,GACZ,GAAID,aAAqBtxD,MACrBuxD,EAAQD,EAAUx0D,KAAKgjD,GAAMt6B,EAAKq8B,UAAU/B,EAAGj5C,UAC9C,GAAIyqD,aAAqBxnD,MAA6B,iBAAdwnD,EACzCC,EAAQ,CAAC/rC,EAAKq8B,UAAUyP,EAAWzqD,SAClC,GAAyB,iBAAdyqD,EACZ,OAAQ9rC,EAAKu7B,OAAOzG,MAChB,IAAK,SACL,IAAK,OACDiX,EAAQ,CAAC/rC,EAAKq8B,UAAUyP,EAAWzqD,IACnC,MACJ,IAAK,WACD0qD,EAAQD,EACH/vD,MAAMikB,EAAKu7B,OAAOhI,aAClBj8C,KAAK28C,GAASj0B,EAAKq8B,UAAUpI,EAAM5yC,KACxC,MACJ,IAAK,QACD0qD,EAAQD,EACH/vD,MAAMikB,EAAKw7B,KAAKzE,gBAChBz/C,KAAK28C,GAASj0B,EAAKq8B,UAAUpI,EAAM5yC,UAOhD2e,EAAKu7B,OAAOlW,aAAa,IAAIxlC,MAAM,0BAA0BiN,KAAKy7C,UAAUuD,OAChF9rC,EAAKu+B,cAAiBv+B,EAAKu7B,OAAOzI,oBAC5BiZ,EACAA,EAAMnvD,QAAQ09C,GAAMA,aAAah2C,MAAQ+8C,EAAU/G,GAAG,KACnC,UAArBt6B,EAAKu7B,OAAOzG,MACZ90B,EAAKu+B,cAAcrxC,MAAK,CAACosB,EAAGoE,IAAMpE,EAAE4a,UAAYxW,EAAEwW,YAkB1D,SAAS8X,EAAelqC,GACpB,OAAOA,EACFzmB,QACA/D,KAAK20D,GACc,iBAATA,GACS,iBAATA,GACPA,aAAgB3nD,KACT0b,EAAKq8B,UAAU4P,OAAMl+B,GAAW,GAElCk+B,GACW,iBAATA,GACPA,EAAKhhD,MACLghD,EAAK5F,GACE,CACHp7C,KAAM+U,EAAKq8B,UAAU4P,EAAKhhD,UAAM8iB,GAChCs4B,GAAIrmC,EAAKq8B,UAAU4P,EAAK5F,QAAIt4B,IAE7Bk+B,IAENrvD,QAAQsE,GAAMA,IAmHvB,SAASo/C,EAAax9C,EAAOU,GACzB,QAAoBuqB,IAAhB/N,EAAKu7B,OACL,OACJ,MAAM2Q,EAAQlsC,EAAKu7B,OAAOz4C,GAC1B,QAAcirB,IAAVm+B,GAAuBA,EAAMh2D,OAAS,EACtC,IAAK,IAAID,EAAI,EAAGi2D,EAAMj2D,IAAMA,EAAIi2D,EAAMh2D,OAAQD,IAC1Ci2D,EAAMj2D,GAAG+pB,EAAKu+B,cAAev+B,EAAKkS,MAAMt7B,MAAOopB,EAAMxc,GAE/C,aAAVV,IACAkd,EAAKkS,MAAMvH,cAAc6N,EAAY,WACrCxY,EAAKkS,MAAMvH,cAAc6N,EAAY,WAG7C,SAASA,EAAY38B,GACjB,MAAMoD,EAAI3G,SAASkgC,YAAY,SAE/B,OADAv5B,EAAEktD,UAAUtwD,GAAM,GAAM,GACjBoD,EAEX,SAASyiD,EAAezN,GACpB,IAAK,IAAIh+C,EAAI,EAAGA,EAAI+pB,EAAKu+B,cAAcroD,OAAQD,IAC3C,GAAkD,IAA9C4mD,GAAa78B,EAAKu+B,cAActoD,GAAIg+C,GACpC,MAAO,GAAKh+C,EAEpB,OAAO,EAQX,SAASmvD,IACDplC,EAAKu7B,OAAOtG,YAAcj1B,EAAKy7B,WAAaz7B,EAAKykC,WAErDzkC,EAAK2kC,aAAa9rD,SAAQ,CAAC0rD,EAAatuD,KACpC,MAAMqkD,EAAI,IAAIh2C,KAAK0b,EAAK2gC,YAAa3gC,EAAK6gC,aAAc,GACxDvG,EAAEvB,SAAS/4B,EAAK6gC,aAAe5qD,GAC3B+pB,EAAKu7B,OAAOrF,WAAa,GACS,WAAlCl2B,EAAKu7B,OAAOxG,kBACZ/0B,EAAK4kC,cAAc3uD,GAAG6oC,YAClB2Z,GAAW6B,EAAEa,WAAYn7B,EAAKu7B,OAAOtF,sBAAuBj2B,EAAKw7B,MAAQ,IAG7Ex7B,EAAKgkC,wBAAwBptD,MAAQ0jD,EAAEa,WAAWj6B,WAEtDqjC,EAAY3tD,MAAQ0jD,EAAE9F,cAActzB,cAExClB,EAAKklC,yBACuBn3B,IAAxB/N,EAAKu7B,OAAO2B,UACPl9B,EAAK2gC,cAAgB3gC,EAAKu7B,OAAO2B,QAAQ1I,cACpCx0B,EAAK6gC,cAAgB7gC,EAAKu7B,OAAO2B,QAAQ/B,WACzCn7B,EAAK2gC,YAAc3gC,EAAKu7B,OAAO2B,QAAQ1I,eACrDx0B,EAAKmlC,yBACuBp3B,IAAxB/N,EAAKu7B,OAAO+B,UACPt9B,EAAK2gC,cAAgB3gC,EAAKu7B,OAAO+B,QAAQ9I,cACpCx0B,EAAK6gC,aAAe,EAAI7gC,EAAKu7B,OAAO+B,QAAQnC,WAC5Cn7B,EAAK2gC,YAAc3gC,EAAKu7B,OAAO+B,QAAQ9I,gBAEzD,SAAS4X,EAAW/qD,GAChB,OAAO2e,EAAKu+B,cACPjnD,KAAK+0D,GAASrsC,EAAK47B,WAAWyQ,EAAMhrD,KACpCzE,QAAO,CAAC09C,EAAGrkD,EAAG6rB,IAA6B,UAArB9B,EAAKu7B,OAAOzG,MACnC90B,EAAKu7B,OAAOzH,YACZhyB,EAAI9mB,QAAQs/C,KAAOrkD,IAClB4U,KAA0B,UAArBmV,EAAKu7B,OAAOzG,KAChB90B,EAAKu7B,OAAOhI,YACZvzB,EAAKw7B,KAAKzE,gBAEpB,SAASyI,EAAYa,GAAgB,QACRtyB,IAArB/N,EAAKorC,aAA6BprC,EAAKssC,kBACvCtsC,EAAKorC,YAAYx0D,WACkBm3B,IAA/B/N,EAAK0+B,sBACC1+B,EAAK47B,WAAW57B,EAAK0+B,sBAAuB1+B,EAAKssC,iBACjD,IAEdtsC,EAAKkS,MAAMt7B,MAAQw1D,EAAWpsC,EAAKu7B,OAAO/H,iBACpBzlB,IAAlB/N,EAAKgzB,WACLhzB,EAAKgzB,SAASp8C,MAAQw1D,EAAWpsC,EAAKu7B,OAAOxI,aAE3B,IAAlBsN,GACAC,EAAa,iBAErB,SAASiM,EAAgBttD,GACrB,MAAMm2B,EAAckjB,GAAer5C,GAC7ButD,EAAcxsC,EAAK0kC,aAAajmD,SAAS22B,GACzCq3B,EAAczsC,EAAK6kC,aAAapmD,SAAS22B,GAC3Co3B,GAAeC,EACf1J,EAAYyJ,GAAe,EAAI,GAE1BxsC,EAAK2kC,aAAa3pD,QAAQo6B,IAAgB,EAC/CA,EAAYu2B,SAEPv2B,EAAYt9B,UAAU2G,SAAS,WACpCuhB,EAAKkgC,WAAWlgC,EAAK2gC,YAAc,GAE9BvrB,EAAYt9B,UAAU2G,SAAS,cACpCuhB,EAAKkgC,WAAWlgC,EAAK2gC,YAAc,GA0C3C,OAt0DA,WACI3gC,EAAKgI,QAAUhI,EAAKkS,MAAQlK,EAC5BhI,EAAK2I,QAAS,EA+qClB,WACI,MAAM+jC,EAAW,CACb,OACA,cACA,aACA,sBACA,aACA,YACA,aACA,aACA,WACA,wBACA,SACA,SACA,gBACA,iBAEEC,EAAap2D,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAI0P,KAAKC,MAAMD,KAAKy7C,UAAUvgC,EAAQmB,SAAW,MAAOu0B,GACjGzC,EAAU,GAChBj7B,EAAKu7B,OAAOc,UAAYsQ,EAAWtQ,UACnCr8B,EAAKu7B,OAAOK,WAAa+Q,EAAW/Q,WACpCrlD,OAAOC,eAAewpB,EAAKu7B,OAAQ,SAAU,CACzC3sC,IAAK,IAAMoR,EAAKu7B,OAAOqR,QACvBj5C,IAAMo4C,IACF/rC,EAAKu7B,OAAOqR,QAAUZ,EAAeD,MAG7Cx1D,OAAOC,eAAewpB,EAAKu7B,OAAQ,UAAW,CAC1C3sC,IAAK,IAAMoR,EAAKu7B,OAAO3I,SACvBj/B,IAAMo4C,IACF/rC,EAAKu7B,OAAO3I,SAAWoZ,EAAeD,MAG9C,MAAMc,EAA+B,SAApBF,EAAW7X,KAC5B,IAAK6X,EAAWnZ,aAAemZ,EAAW7Y,YAAc+Y,GAAW,CAC/D,MAAMC,EAAoBnP,GAAUC,cAAcpK,YAAcpsB,GAAeosB,WAC/EyH,EAAQzH,WACJmZ,EAAW1X,YAAc4X,EACnB,OAASF,EAAW9Y,cAAgB,KAAO,IAC3CiZ,EAAoB,QAAUH,EAAW9Y,cAAgB,KAAO,IAE9E,GAAI8Y,EAAW3Z,WACV2Z,EAAW7Y,YAAc+Y,KACzBF,EAAW5Z,UAAW,CACvB,MAAMga,EAAmBpP,GAAUC,cAAc7K,WAAa3rB,GAAe2rB,UAC7EkI,EAAQlI,UACJ4Z,EAAW1X,YAAc4X,EACnB,OAASF,EAAW9Y,cAAgB,OAAS,MAC7CkZ,EAAmB,OAAOJ,EAAW9Y,cAAgB,KAAO,OAE1Et9C,OAAOC,eAAewpB,EAAKu7B,OAAQ,UAAW,CAC1C3sC,IAAK,IAAMoR,EAAKu7B,OAAOyR,SACvBr5C,IAAKu0C,EAAiB,SAE1B3xD,OAAOC,eAAewpB,EAAKu7B,OAAQ,UAAW,CAC1C3sC,IAAK,IAAMoR,EAAKu7B,OAAO0R,SACvBt5C,IAAKu0C,EAAiB,SAE1B,MAAMgF,EAAoB70D,GAAU+gC,IAChCpZ,EAAKu7B,OAAgB,QAATljD,EAAiB,WAAa,YAAc2nB,EAAKq8B,UAAUjjB,EAAK,UAEhF7iC,OAAOC,eAAewpB,EAAKu7B,OAAQ,UAAW,CAC1C3sC,IAAK,IAAMoR,EAAKu7B,OAAO4R,SACvBx5C,IAAKu5C,EAAiB,SAE1B32D,OAAOC,eAAewpB,EAAKu7B,OAAQ,UAAW,CAC1C3sC,IAAK,IAAMoR,EAAKu7B,OAAO6R,SACvBz5C,IAAKu5C,EAAiB,SAEF,SAApBP,EAAW7X,OACX90B,EAAKu7B,OAAOtG,YAAa,EACzBj1B,EAAKu7B,OAAOzH,YAAa,GAE7Bv9C,OAAO6G,OAAO4iB,EAAKu7B,OAAQN,EAAS0R,GACpC,IAAK,IAAI12D,EAAI,EAAGA,EAAIy2D,EAASx2D,OAAQD,IACjC+pB,EAAKu7B,OAAOmR,EAASz2D,KACY,IAA7B+pB,EAAKu7B,OAAOmR,EAASz2D,KACY,SAA7B+pB,EAAKu7B,OAAOmR,EAASz2D,IACjC08C,GAAM/1C,QAAQywD,QAA+Bt/B,IAAtB/N,EAAKu7B,OAAO8R,KAAqBx0D,SAASw0D,IAC7DrtC,EAAKu7B,OAAO8R,GAAQzV,GAAS53B,EAAKu7B,OAAO8R,IAAS,IAAI/1D,IAAIwmD,MAE9D99B,EAAKy7B,UACAz7B,EAAKu7B,OAAO3H,gBACR5zB,EAAKu7B,OAAO5G,QACQ,WAArB30B,EAAKu7B,OAAOzG,OACX90B,EAAKu7B,OAAO1iC,QAAQ3iB,SACpB8pB,EAAKu7B,OAAOvY,SACZhjB,EAAKu7B,OAAOlF,aACb,iEAAiEl1B,KAAKwD,UAAUwpB,WACxF,IAAK,IAAIl4C,EAAI,EAAGA,EAAI+pB,EAAKu7B,OAAOzF,QAAQ5/C,OAAQD,IAAK,CACjD,MAAMq3D,EAAattC,EAAKu7B,OAAOzF,QAAQ7/C,GAAG+pB,IAAS,GACnD,IAAK,MAAMvpB,KAAO62D,EACV3a,GAAM33C,QAAQvE,IAAQ,EACtBupB,EAAKu7B,OAAO9kD,GAAOmhD,GAAS0V,EAAW72D,IAClCa,IAAIwmD,GACJphC,OAAOsD,EAAKu7B,OAAO9kD,SAEQ,IAApBk2D,EAAWl2D,KACvBupB,EAAKu7B,OAAO9kD,GAAO62D,EAAW72D,IAGrCk2D,EAAW1Z,gBACZjzB,EAAKu7B,OAAOtI,cACRmV,IAAe5pD,UAAY,IAAMwhB,EAAKu7B,OAAOtI,eAErDqN,EAAa,iBAvxCbiN,GACAlF,IAgnDJ,WAEI,GADAroC,EAAKkS,MAAQk2B,KACRpoC,EAAKkS,MAEN,YADAlS,EAAKu7B,OAAOlW,aAAa,IAAIxlC,MAAM,oCAGvCmgB,EAAKkS,MAAMs5B,MAAQxrC,EAAKkS,MAAM75B,KAC9B2nB,EAAKkS,MAAM75B,KAAO,OAClB2nB,EAAKkS,MAAMp6B,UAAUC,IAAI,mBACzBioB,EAAKs/B,OAASt/B,EAAKkS,MACflS,EAAKu7B,OAAOvI,WACZhzB,EAAKgzB,SAAWh1C,GAAcgiB,EAAKkS,MAAMyO,SAAU3gB,EAAKu7B,OAAOtI,eAC/DjzB,EAAKs/B,OAASt/B,EAAKgzB,SACnBhzB,EAAKgzB,SAASwa,YAAcxtC,EAAKkS,MAAMs7B,YACvCxtC,EAAKgzB,SAASx8B,SAAWwJ,EAAKkS,MAAM1b,SACpCwJ,EAAKgzB,SAASya,SAAWztC,EAAKkS,MAAMu7B,SACpCztC,EAAKgzB,SAASyO,SAAWzhC,EAAKkS,MAAMuvB,SACpCzhC,EAAKgzB,SAAS36C,KAAO,OACrB2nB,EAAKkS,MAAMv0B,aAAa,OAAQ,WAC3BqiB,EAAKu7B,OAAOpF,QAAUn2B,EAAKkS,MAAMz1B,YAClCujB,EAAKkS,MAAMz1B,WAAWC,aAAasjB,EAAKgzB,SAAUhzB,EAAKkS,MAAMw7B,cAEhE1tC,EAAKu7B,OAAO1I,YACb7yB,EAAKs/B,OAAO3hD,aAAa,WAAY,YACzCqiB,EAAKyoC,iBAAmBzoC,EAAKu7B,OAAOxF,iBAAmB/1B,EAAKs/B,OAvoD5DqO,GAskDJ,WACI3tC,EAAKu+B,cAAgB,GACrBv+B,EAAK3b,IAAM2b,EAAKq8B,UAAUr8B,EAAKu7B,OAAOl3C,MAAQ,IAAIC,KAClD,MAAMspD,EAAgB5tC,EAAKu7B,OAAOiD,cACJ,UAAxBx+B,EAAKkS,MAAMyO,UACe,aAAxB3gB,EAAKkS,MAAMyO,WACX3gB,EAAKkS,MAAMs7B,aACXxtC,EAAKkS,MAAMt7B,QAAUopB,EAAKkS,MAAMs7B,YAE9BxtC,EAAKkS,MAAMt7B,MADX,MAENg3D,GACA/B,EAAgB+B,EAAe5tC,EAAKu7B,OAAO/H,YAC/CxzB,EAAKqrC,aACDrrC,EAAKu+B,cAAcroD,OAAS,EACtB8pB,EAAKu+B,cAAc,GACnBv+B,EAAKu7B,OAAO2B,SACVl9B,EAAKu7B,OAAO2B,QAAQhJ,UAAYl0B,EAAK3b,IAAI6vC,UACvCl0B,EAAKu7B,OAAO2B,QACZl9B,EAAKu7B,OAAO+B,SACVt9B,EAAKu7B,OAAO+B,QAAQpJ,UAAYl0B,EAAK3b,IAAI6vC,UACvCl0B,EAAKu7B,OAAO+B,QACZt9B,EAAK3b,IACvB2b,EAAK2gC,YAAc3gC,EAAKqrC,aAAa7W,cACrCx0B,EAAK6gC,aAAe7gC,EAAKqrC,aAAalQ,WAClCn7B,EAAKu+B,cAAcroD,OAAS,IAC5B8pB,EAAK0+B,sBAAwB1+B,EAAKu+B,cAAc,SACxBxwB,IAAxB/N,EAAKu7B,OAAOqE,UACZ5/B,EAAKu7B,OAAOqE,QAAU5/B,EAAKq8B,UAAUr8B,EAAKu7B,OAAOqE,QAAS,aAClC7xB,IAAxB/N,EAAKu7B,OAAOuE,UACZ9/B,EAAKu7B,OAAOuE,QAAU9/B,EAAKq8B,UAAUr8B,EAAKu7B,OAAOuE,QAAS,QAC9D9/B,EAAK6/B,iBACC7/B,EAAKu7B,OAAO2B,UACTl9B,EAAKu7B,OAAO2B,QAAQ5D,WAAa,GAC9Bt5B,EAAKu7B,OAAO2B,QAAQ7B,aAAe,GACnCr7B,EAAKu7B,OAAO2B,QAAQ9B,aAAe,GAC/Cp7B,EAAK+/B,iBACC//B,EAAKu7B,OAAO+B,UACTt9B,EAAKu7B,OAAO+B,QAAQhE,WAAa,GAC9Bt5B,EAAKu7B,OAAO+B,QAAQjC,aAAe,GACnCr7B,EAAKu7B,OAAO+B,QAAQlC,aAAe,GA5mD/CyS,GAdA7tC,EAAKojC,MAAQ,CACTC,eAAc,CAACzI,EAAQ56B,EAAK6gC,aAAciN,EAAK9tC,EAAK2gC,cAClC,IAAV/F,IAAiBkT,EAAK,GAAM,GAAKA,EAAK,KAAQ,GAAMA,EAAK,KAAQ,GAC1D,GACJ9tC,EAAKw7B,KAAK7E,YAAYiE,IAYhC56B,EAAKy7B,UAsQd,WACI,MAAMsS,EAAWj3D,OAAOwB,SAASgrD,yBAGjC,GAFAtjC,EAAKg+B,kBAAoBhgD,GAAc,MAAO,sBAC9CgiB,EAAKg+B,kBAAkByD,UAAY,GAC9BzhC,EAAKu7B,OAAOtG,WAAY,CAGzB,GAFA8Y,EAAS5xD,aA8Rb6jB,EAAKykC,SAAWzmD,GAAc,MAAO,oBACrCgiB,EAAK2kC,aAAe,GACpB3kC,EAAK4kC,cAAgB,GACrB5kC,EAAK0kC,aAAe1mD,GAAc,OAAQ,wBAC1CgiB,EAAK0kC,aAAar7B,UAAYrJ,EAAKu7B,OAAOvF,UAC1Ch2B,EAAK6kC,aAAe7mD,GAAc,OAAQ,wBAC1CgiB,EAAK6kC,aAAax7B,UAAYrJ,EAAKu7B,OAAOvG,UAC1CwP,IACAjuD,OAAOC,eAAewpB,EAAM,sBAAuB,CAC/CpR,IAAK,IAAMoR,EAAKguC,qBAChBtwC,IAAI+5B,GACIz3B,EAAKguC,uBAAyBvW,IAC9B/7C,GAAYskB,EAAK0kC,aAAc,qBAAsBjN,GACrDz3B,EAAKguC,qBAAuBvW,MAIxClhD,OAAOC,eAAewpB,EAAM,sBAAuB,CAC/CpR,IAAK,IAAMoR,EAAKiuC,qBAChBvwC,IAAI+5B,GACIz3B,EAAKiuC,uBAAyBxW,IAC9B/7C,GAAYskB,EAAK6kC,aAAc,qBAAsBpN,GACrDz3B,EAAKiuC,qBAAuBxW,MAIxCz3B,EAAK+mC,mBAAqB/mC,EAAK2kC,aAAa,GAC5CS,IACOplC,EAAKykC,WAzTRzkC,EAAKkuC,eAAiBlwD,GAAc,MAAO,4BACvCgiB,EAAKu7B,OAAOlF,YAAa,CACzB,MAAM+H,YAAEA,EAAW/H,YAAEA,GAuZjC,WACIr2B,EAAKg+B,kBAAkBlmD,UAAUC,IAAI,YACrC,MAAMqmD,EAAcpgD,GAAc,MAAO,yBACzCogD,EAAYjiD,YAAY6B,GAAc,OAAQ,oBAAqBgiB,EAAKw7B,KAAKxE,mBAC7E,MAAMX,EAAcr4C,GAAc,MAAO,mBAEzC,OADAogD,EAAYjiD,YAAYk6C,GACjB,CACH+H,YAAAA,EACA/H,YAAAA,GA/ZyC8X,GACrCnuC,EAAKkuC,eAAe/xD,YAAYiiD,GAChCp+B,EAAKq2B,YAAcA,EACnBr2B,EAAKo+B,YAAcA,EAEvBp+B,EAAKouC,WAAapwD,GAAc,MAAO,wBACvCgiB,EAAKouC,WAAWjyD,YAAY2oD,KACvB9kC,EAAKi+B,gBACNj+B,EAAKi+B,cAAgBjgD,GAAc,MAAO,kBAC1CgiB,EAAKi+B,cAAcwD,UAAY,GAEnCoC,IACA7jC,EAAKouC,WAAWjyD,YAAY6jB,EAAKi+B,eACjCj+B,EAAKkuC,eAAe/xD,YAAY6jB,EAAKouC,YACrCL,EAAS5xD,YAAY6jB,EAAKkuC,gBAE1BluC,EAAKu7B,OAAOzH,YACZia,EAAS5xD,YAwSjB,WACI6jB,EAAKg+B,kBAAkBlmD,UAAUC,IAAI,WACjCioB,EAAKu7B,OAAOtG,YACZj1B,EAAKg+B,kBAAkBlmD,UAAUC,IAAI,cACzC,MAAM+mB,EAAWk+B,GAAgBh9B,EAAKu7B,QACtCv7B,EAAK8lC,cAAgB9nD,GAAc,MAAO,kBAC1CgiB,EAAK8lC,cAAcrE,UAAY,EAC/B,MAAM4M,EAAYrwD,GAAc,OAAQ,2BAA4B,KAC9DswD,EAAYtW,GAAkB,iBAAkB,CAClDuW,aAAcvuC,EAAKw7B,KAAKlE,gBAE5Bt3B,EAAKg/B,YAAcsP,EAAU9gC,qBAAqB,SAAS,GAC3D,MAAMghC,EAAcxW,GAAkB,mBAAoB,CACtDuW,aAAcvuC,EAAKw7B,KAAKjE,kBAE5Bv3B,EAAKk/B,cAAgBsP,EAAYhhC,qBAAqB,SAAS,GAC/DxN,EAAKg/B,YAAYyC,SAAWzhC,EAAKk/B,cAAcuC,UAAY,EAC3DzhC,EAAKg/B,YAAYpoD,MAAQ8K,GAAIse,EAAK0+B,sBAC5B1+B,EAAK0+B,sBAAsBpF,WAC3Bt5B,EAAKu7B,OAAOnF,UACRt3B,EAASm+B,MAthBvB,SAAuBhE,GACnB,OAAQA,EAAO,IACX,KAAK,EACL,KAAK,GACD,OAAO,GACX,QACI,OAAOA,EAAO,IAihBZwV,CAAc3vC,EAASm+B,QACjCj9B,EAAKk/B,cAActoD,MAAQ8K,GAAIse,EAAK0+B,sBAC9B1+B,EAAK0+B,sBAAsBrD,aAC3Bv8B,EAAS07B,SACfx6B,EAAKg/B,YAAYrhD,aAAa,OAAQqiB,EAAKu7B,OAAO9G,cAAcvzB,YAChElB,EAAKk/B,cAAcvhD,aAAa,OAAQqiB,EAAKu7B,OAAO1G,gBAAgB3zB,YACpElB,EAAKg/B,YAAYrhD,aAAa,MAAOqiB,EAAKu7B,OAAOnF,UAAY,IAAM,KACnEp2B,EAAKg/B,YAAYrhD,aAAa,MAAOqiB,EAAKu7B,OAAOnF,UAAY,KAAO,MACpEp2B,EAAKg/B,YAAYrhD,aAAa,YAAa,KAC3CqiB,EAAKk/B,cAAcvhD,aAAa,MAAO,KACvCqiB,EAAKk/B,cAAcvhD,aAAa,MAAO,MACvCqiB,EAAKk/B,cAAcvhD,aAAa,YAAa,KAC7CqiB,EAAK8lC,cAAc3pD,YAAYmyD,GAC/BtuC,EAAK8lC,cAAc3pD,YAAYkyD,GAC/BruC,EAAK8lC,cAAc3pD,YAAYqyD,GAC3BxuC,EAAKu7B,OAAOnF,WACZp2B,EAAK8lC,cAAchuD,UAAUC,IAAI,YACrC,GAAIioB,EAAKu7B,OAAO1H,cAAe,CAC3B7zB,EAAK8lC,cAAchuD,UAAUC,IAAI,cACjC,MAAM22D,EAAc1W,GAAkB,oBACtCh4B,EAAK0/B,cAAgBgP,EAAYlhC,qBAAqB,SAAS,GAC/DxN,EAAK0/B,cAAc9oD,MAAQ8K,GAAIse,EAAK0+B,sBAC9B1+B,EAAK0+B,sBAAsBtD,aAC3Bt8B,EAAS46B,SACf15B,EAAK0/B,cAAc/hD,aAAa,OAAQqiB,EAAKk/B,cAActnD,aAAa,SACxEooB,EAAK0/B,cAAc/hD,aAAa,MAAO,KACvCqiB,EAAK0/B,cAAc/hD,aAAa,MAAO,MACvCqiB,EAAK0/B,cAAc/hD,aAAa,YAAa,KAC7CqiB,EAAK8lC,cAAc3pD,YAAY6B,GAAc,OAAQ,2BAA4B,MACjFgiB,EAAK8lC,cAAc3pD,YAAYuyD,GAE9B1uC,EAAKu7B,OAAOnF,YACbp2B,EAAKm3B,KAAOn5C,GAAc,OAAQ,kBAAmBgiB,EAAKw7B,KAAKrE,KAAKK,IAAKx3B,EAAK0+B,sBACxE1+B,EAAKg/B,YAAYpoD,MACjBopB,EAAKu7B,OAAO9H,aAAe,MACjCzzB,EAAKm3B,KAAK/nB,MAAQpP,EAAKw7B,KAAKtE,YAC5Bl3B,EAAKm3B,KAAKsK,UAAY,EACtBzhC,EAAK8lC,cAAc3pD,YAAY6jB,EAAKm3B,OAExC,OAAOn3B,EAAK8lC,cApWa6I,IAEzBjzD,GAAYskB,EAAKg+B,kBAAmB,YAAkC,UAArBh+B,EAAKu7B,OAAOzG,MAC7Dp5C,GAAYskB,EAAKg+B,kBAAmB,WAAmC,IAAxBh+B,EAAKu7B,OAAOrI,SAC3Dx3C,GAAYskB,EAAKg+B,kBAAmB,aAAch+B,EAAKu7B,OAAOrF,WAAa,GAC3El2B,EAAKg+B,kBAAkB7hD,YAAY4xD,GACnC,MAAMa,OAAwC7gC,IAAzB/N,EAAKu7B,OAAO+J,eACKv3B,IAAlC/N,EAAKu7B,OAAO+J,SAASrY,SACzB,IAAIjtB,EAAKu7B,OAAO5G,QAAU30B,EAAKu7B,OAAOpF,UAClCn2B,EAAKg+B,kBAAkBlmD,UAAUC,IAAIioB,EAAKu7B,OAAO5G,OAAS,SAAW,UACjE30B,EAAKu7B,OAAO5G,UACPia,GAAgB5uC,EAAKgI,QAAQvrB,WAC9BujB,EAAKgI,QAAQvrB,WAAWC,aAAasjB,EAAKg+B,kBAAmBh+B,EAAKs/B,OAAOoO,kBAC3C3/B,IAAzB/N,EAAKu7B,OAAO+J,UACjBtlC,EAAKu7B,OAAO+J,SAASnpD,YAAY6jB,EAAKg+B,oBAE1Ch+B,EAAKu7B,OAAOpF,QAAQ,CACpB,MAAMrgC,EAAU9X,GAAc,MAAO,qBACjCgiB,EAAKgI,QAAQvrB,YACbujB,EAAKgI,QAAQvrB,WAAWC,aAAaoZ,EAASkK,EAAKgI,SACvDlS,EAAQ3Z,YAAY6jB,EAAKgI,SACrBhI,EAAKgzB,UACLl9B,EAAQ3Z,YAAY6jB,EAAKgzB,UAC7Bl9B,EAAQ3Z,YAAY6jB,EAAKg+B,mBAG5Bh+B,EAAKu7B,OAAOpF,QAAWn2B,EAAKu7B,OAAO5G,cACV5mB,IAAzB/N,EAAKu7B,OAAO+J,SACPtlC,EAAKu7B,OAAO+J,SACZxuD,OAAOwB,SAASC,MAAM4D,YAAY6jB,EAAKg+B,mBA3T7C6Q,GAkKR,WACQ7uC,EAAKu7B,OAAOrrB,MACZ,CAAC,OAAQ,QAAS,SAAU,SAASr3B,SAASihC,IAC1Ct/B,MAAMY,UAAUvC,QAAQ4C,KAAKukB,EAAKgI,QAAQtvB,iBAAiB,SAASohC,OAAUhhC,GAAOsD,EAAKtD,EAAI,QAASknB,EAAK8Z,SAGpH,GAAI9Z,EAAKy7B,SAEL,YA29CR,WACI,MAAMvP,EAAYlsB,EAAKu7B,OAAOzH,WACxB9zB,EAAKu7B,OAAOtG,WACR,OACA,iBACJ,OACNj1B,EAAKorC,YAAcptD,GAAc,QAASgiB,EAAKkS,MAAM1zB,UAAY,qBACjEwhB,EAAKorC,YAAY3J,SAAW,EAC5BzhC,EAAKorC,YAAY/yD,KAAO6zC,EACxBlsB,EAAKorC,YAAY50C,SAAWwJ,EAAKkS,MAAM1b,SACvCwJ,EAAKorC,YAAYqC,SAAWztC,EAAKkS,MAAMu7B,SACvCztC,EAAKorC,YAAYoC,YAAcxtC,EAAKkS,MAAMs7B,YAC1CxtC,EAAKssC,gBACa,mBAAdpgB,EACM,gBACc,SAAdA,EACI,QACA,QACVlsB,EAAKu+B,cAAcroD,OAAS,IAC5B8pB,EAAKorC,YAAY0D,aAAe9uC,EAAKorC,YAAYx0D,MAAQopB,EAAK47B,WAAW57B,EAAKu+B,cAAc,GAAIv+B,EAAKssC,kBAErGtsC,EAAKu7B,OAAO2B,UACZl9B,EAAKorC,YAAYhrD,IAAM4f,EAAK47B,WAAW57B,EAAKu7B,OAAO2B,QAAS,UAC5Dl9B,EAAKu7B,OAAO+B,UACZt9B,EAAKorC,YAAY/qD,IAAM2f,EAAK47B,WAAW57B,EAAKu7B,OAAO+B,QAAS,UAC5Dt9B,EAAKkS,MAAMt6B,aAAa,UACxBooB,EAAKorC,YAAYxpC,KAAO/jB,OAAOmiB,EAAKkS,MAAMt6B,aAAa,UAC3DooB,EAAKkS,MAAM75B,KAAO,cACI01B,IAAlB/N,EAAKgzB,WACLhzB,EAAKgzB,SAAS36C,KAAO,UACzB,IACQ2nB,EAAKkS,MAAMz1B,YACXujB,EAAKkS,MAAMz1B,WAAWC,aAAasjB,EAAKorC,YAAaprC,EAAKkS,MAAMw7B,aAExE,MAAOxH,IACP9pD,EAAK4jB,EAAKorC,YAAa,UAAWnsD,IAC9B+gB,EAAKo0B,QAAQkE,GAAer5C,GAAGrI,OAAO,EAAOopB,EAAKssC,iBAClDhM,EAAa,YACbA,EAAa,cAlgDbyO,GAGJ,MAAMC,EAAkBtX,GAASsQ,EAAU,IAC3ChoC,EAAKy/B,iBAAmB/H,GAAS2I,EAzNb,KA0NhBrgC,EAAKi+B,gBAAkB,oBAAoB98B,KAAKwD,UAAUwpB,YAC1D/xC,EAAK4jB,EAAKi+B,cAAe,aAAch/C,IACV,UAArB+gB,EAAKu7B,OAAOzG,MACZkN,EAAY1J,GAAer5C,OAEvC7C,EAAKtF,OAAOwB,SAASC,KAAM,UAAW+8C,GACjCt1B,EAAKu7B,OAAO5G,QAAW30B,EAAKu7B,OAAOpF,QACpC/5C,EAAKtF,OAAQ,SAAUk4D,QACCjhC,IAAxBj3B,OAAOm4D,aACP7yD,EAAKtF,OAAOwB,SAAU,aAAcitD,GAEpCnpD,EAAKtF,OAAOwB,SAAU,YAAaitD,GACvCnpD,EAAKtF,OAAOwB,SAAU,QAASitD,EAAe,CAAEntC,SAAS,KAC1B,IAA3B4H,EAAKu7B,OAAOlI,aACZj3C,EAAK4jB,EAAKs/B,OAAQ,QAASt/B,EAAK4qB,MAChCxuC,EAAK4jB,EAAKs/B,OAAQ,QAASt/B,EAAK4qB,YAET7c,IAAvB/N,EAAKi+B,gBACL7hD,EAAK4jB,EAAKykC,SAAU,QAAS8H,GAC7BnwD,EAAK4jB,EAAKykC,SAAU,CAAC,QAAS,aAAcxE,GAC5C7jD,EAAK4jB,EAAKi+B,cAAe,QAAS4I,IAEtC,QAA2B94B,IAAvB/N,EAAK8lC,oBACkB/3B,IAAvB/N,EAAKk/B,oBACgBnxB,IAArB/N,EAAKg/B,YAA2B,CAChC,MAAMkQ,EAAWjwD,GAAMq5C,GAAer5C,GAAG0sD,SACzCvvD,EAAK4jB,EAAK8lC,cAAe,CAAC,aAAcxH,GACxCliD,EAAK4jB,EAAK8lC,cAAe,OAAQxH,EAAY,CAAElmC,SAAS,IACxDhc,EAAK4jB,EAAK8lC,cAAe,QAAS9E,GAClC5kD,EAAK,CAAC4jB,EAAKg/B,YAAah/B,EAAKk/B,eAAgB,CAAC,QAAS,SAAUgQ,QACtCnhC,IAAvB/N,EAAK0/B,eACLtjD,EAAK4jB,EAAK0/B,cAAe,SAAS,IAAM1/B,EAAK0/B,eAAiB1/B,EAAK0/B,cAAciM,gBACnE59B,IAAd/N,EAAKm3B,MACL/6C,EAAK4jB,EAAKm3B,KAAM,SAAUl4C,IACtBq/C,EAAWr/C,GACXohD,OAIRrgC,EAAKu7B,OAAO1I,YACZz2C,EAAK4jB,EAAKs/B,OAAQ,OAAQgH,GArN9BnxB,IACInV,EAAKu+B,cAAcroD,QAAU8pB,EAAKu7B,OAAOtG,cACrCj1B,EAAKu7B,OAAOzH,YACZkM,EAAiBhgC,EAAKu7B,OAAOtG,WAAaj1B,EAAK0+B,2BAAwB3wB,GAE3EyxB,GAAY,IAEhBzB,IACA,MAAMoR,EAAW,iCAAiChuC,KAAKwD,UAAUwpB,YAC5DnuB,EAAKy7B,UAAY0T,GAClBlH,IAEJ3H,EAAa,WA+yDjBx1C,GACOkV,EAEX,SAASovC,GAAWC,EAAU9T,GAC1B,MAAMj/C,EAAQ9B,MAAMY,UAAUC,MACzBI,KAAK4zD,GACLzyD,QAAQsE,GAAMA,aAAatG,cAC1B+hB,EAAY,GAClB,IAAK,IAAI1mB,EAAI,EAAGA,EAAIqG,EAAMpG,OAAQD,IAAK,CACnC,MAAMuG,EAAOF,EAAMrG,GACnB,IACI,GAA0C,OAAtCuG,EAAK5E,aAAa,gBAClB,cACoBm2B,IAApBvxB,EAAK4yD,aACL5yD,EAAK4yD,WAAW7rD,UAChB/G,EAAK4yD,gBAAarhC,GAEtBvxB,EAAK4yD,WAAa3R,GAAkBjhD,EAAM++C,GAAU,IACpD5+B,EAAU1hB,KAAKuB,EAAK4yD,YAExB,MAAOnwD,GACHsmC,QAAQ9pB,MAAMxc,IAGtB,OAA4B,IAArB0d,EAAUzmB,OAAeymB,EAAU,GAAKA,EAExB,oBAAhB/hB,aACmB,oBAAnB00D,gBACa,oBAAbC,WACPD,eAAel0D,UAAUuiD,UAAY4R,SAASn0D,UAAUuiD,UAAY,SAAUpC,GAC1E,OAAO6T,GAAWh4D,KAAMmkD,IAE5B3gD,YAAYQ,UAAUuiD,UAAY,SAAUpC,GACxC,OAAO6T,GAAW,CAACh4D,MAAOmkD,KAGlC,InB+tBsCpuC,GmB/tBlCwwC,GAAY,SAAUhhD,EAAU4+C,GAChC,MAAwB,iBAAb5+C,EACAyyD,GAAWt4D,OAAOwB,SAASI,iBAAiBiE,GAAW4+C,GAEzD5+C,aAAoB6yD,KAClBJ,GAAW,CAACzyD,GAAW4+C,GAGvB6T,GAAWzyD,EAAU4+C,IAGpCoC,GAAUC,cAAgB,GAC1BD,GAAU2K,MAAQ,CACdmH,GAAIl5D,OAAO6G,OAAO,GAAIygD,IACtBtkB,QAAShjC,OAAO6G,OAAO,GAAIygD,KAE/BF,GAAU+R,SAAYlU,IAClBmC,GAAU2K,MAAM/uB,QAAUhjC,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIugD,GAAU2K,MAAM/uB,SAAUiiB,IAExFmC,GAAUgS,YAAepU,IACrBoC,GAAUC,cAAgBrnD,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIugD,GAAUC,eAAgBrC,IAExFoC,GAAUtB,UAAYR,GAAiB,IACvC8B,GAAU/B,WAAaN,GAAoB,IAC3CqC,GAAUd,aAAeA,GACH,oBAAXhqB,aAA+C,IAAdA,OAAOxS,KAC/CwS,OAAOxS,GAAGs9B,UAAY,SAAUpC,GAC5B,OAAO6T,GAAWh4D,KAAMmkD,KAGhCj3C,KAAKlJ,UAAUw0D,QAAU,SAAUzR,GAC/B,OAAO,IAAI75C,KAAKlN,KAAKo9C,cAAep9C,KAAK+jD,WAAY/jD,KAAKi9C,WAA6B,iBAAT8J,EAAoBhmD,SAASgmD,EAAM,IAAMA,KAErG,oBAAXrnD,SACPA,OAAO6mD,UAAYA,ICn7DvBA,GAAU,cAAe,CACrBnK,WAAY,QACZI,cAAe,SAGnB+J,GAAU,cAAe,CACvB7J,YAAY,EACZmB,YAAY,EACZzB,WAAY,MACZI,cAAe,SCLjB,IACI,IAAIic,GAAK,IAAI/4D,OAAOyhC,YAAY,QAEhC,GADAs3B,GAAG1wD,kBACyB,IAAxB0wD,GAAGC,iBAGH,MAAM,IAAIjwD,MAAM,6BAEtB,MAAMZ,GACN,IAAIs5B,GAAc,SAASz1B,EAAO82B,GAChC,IAAIE,EAAKi2B,EAsBT,OArBAn2B,EAASA,GAAU,CACjBC,SAAS,EACTxgB,YAAY,EACZ2U,YAAQD,IAGV+L,EAAMxhC,SAASkgC,YAAY,gBACvBC,gBAAgB31B,EAAO82B,EAAOC,QAASD,EAAOvgB,WAAYugB,EAAO5L,QACrE+hC,EAAcj2B,EAAI36B,eAClB26B,EAAI36B,eAAiB,WACnB4wD,EAAYt0D,KAAKrE,MACjB,IACEb,OAAOC,eAAeY,KAAM,mBAAoB,CAC9CwX,IAAK,WACH,OAAO,KAGX,MAAM3P,GACN7H,KAAK04D,kBAAmB,IAGrBh2B,GAGTvB,GAAYn9B,UAAYtE,OAAO8zB,MAAMxvB,UACrCtE,OAAOyhC,YAAcA,IrBwkFeprB,GAwgOG5W,OAAOqV,OAAO,CACnDC,UAAW,SAxgOAsB,GAAW,QAynPL8S,GA5mBPG,IAAqB,SAAUE,EAAQC,GsB9nTrDhqB,OAAOC,eAAe+pB,EAAS,aAAc,CAC3C3pB,OAAO,IAGT,IAAIo5D,EAAWz5D,OAAO6G,QAAU,SAAUrH,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIoH,UAAUnH,OAAQD,IAAK,CAAE,IAAIqH,EAASD,UAAUpH,GAAI,IAAK,IAAIQ,KAAO6G,EAAc/G,OAAO6E,UAAU+kB,eAAe1kB,KAAK6B,EAAQ7G,KAAQV,EAAOU,GAAO6G,EAAO7G,IAAY,OAAOV,GAEnPk6D,EAAgb,SAAUnuC,EAAK7rB,GAAK,GAAIuE,MAAMD,QAAQunB,GAAQ,OAAOA,EAAY,GAAIrB,OAAOC,YAAYnqB,OAAOurB,GAAQ,OAAxf,SAAuBA,EAAK7rB,GAAK,IAAIi6D,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAW7uC,OAAKwM,EAAW,IAAM,IAAK,IAAiCsiC,EAA7BC,EAAKxuC,EAAIrB,OAAOC,cAAmByvC,GAAME,EAAKC,EAAG/oD,QAAQ6V,QAAoB8yC,EAAKj1D,KAAKo1D,EAAGz5D,QAAYX,GAAKi6D,EAAKh6D,SAAWD,GAA3Dk6D,GAAK,IAAoE,MAAO1uC,GAAO2uC,GAAK,EAAM7uC,EAAKE,EAAM,QAAW,KAAW0uC,GAAMG,EAAW,QAAGA,EAAW,SAAM,QAAW,GAAIF,EAAI,MAAM7uC,GAAQ,OAAO2uC,EAA6HK,CAAczuC,EAAK7rB,GAAa,MAAM,IAAIJ,UAAU,yDAYtlB0qB,EAAAgZ,QAgjBA,SAAsBvR,EAASwoC,GAE7B,IAAInB,EAAW,GACXoB,EAAU,GAEd,OAAO,WAEL,GAAIzoC,GAAWA,aAAmBptB,aAAiD,WAAlCotB,EAAQyF,QAAQ4K,cAC/Dg3B,EAASp0D,KAAK+sB,QAET,GAAIA,GAA8B,iBAAZA,EAE3B,IADA,IAAI0oC,EAAep4D,SAASI,iBAAiBsvB,GACpC/xB,EAAI,EAAG0kD,EAAI+V,EAAax6D,OAAQD,EAAI0kD,IAAK1kD,EAC5Cy6D,EAAaz6D,aAAc2E,aAAyD,WAA1C81D,EAAaz6D,GAAGw3B,QAAQ4K,eACpEg3B,EAASp0D,KAAKy1D,EAAaz6D,SAI1B,GAAI+xB,GAAWA,EAAQ9xB,OAC5B,IAAK,IAAIy6D,EAAM,EAAGC,EAAM5oC,EAAQ9xB,OAAQy6D,EAAMC,IAAOD,EAC/C3oC,EAAQ2oC,aAAgB/1D,aAAsD,WAAvCotB,EAAQ2oC,GAAKljC,QAAQ4K,eAC9Dg3B,EAASp0D,KAAK+sB,EAAQ2oC,IAO5B,IAAK,IAAIE,EAAM,EAAGC,EAAMzB,EAASn5D,OAAQ26D,EAAMC,IAAOD,EACpDJ,EAAQx1D,KAAK81D,EAAQ1B,EAASwB,GAAMb,EAAS,GAAIgB,EAAeR,KAIlE,OAAOC,EA5BF,IAjjBT,IAAIO,EAAgB,CAClBC,eAAgB,0BAChBC,YAAa,uBACbC,WAAY,sBACZC,YAAa,uBACbC,cAAe,yBACfC,gBAAiB,cACjBC,cAAe,YACfC,gBAAiB,cACjBC,YAAa,WAGf,SAASV,EAAQj4D,EAAI44D,GACnB,IAAIT,EAAiB,eACjBtoC,GAAS,EACTgpC,EAAM,GACNhG,EAAS7yD,EACToQ,OAAY,EACZ0oD,OAAS,EACTC,OAAiB,EACjBC,OAAkB,EAClBC,OAAQ,EACRC,OAAY,EAEZC,OAAqB,EACrBC,EAAY,GAOhB,SAASC,EAAkBC,GACrBP,GACFA,EAAe/5D,UAAUU,OAAOk5D,EAAcH,oBAEvB,IAAda,IACTP,EAAiBO,GACFt6D,UAAUC,IAAI25D,EAAcH,eAGvC5oC,IACEypC,EAAUxkC,UAAYwkC,EAAUx5B,aAAa7C,WAAaq8B,EAAUxkC,UAAYwkC,EAAUx5B,aAAa7C,UAAYq8B,EAAUx5B,aAAajD,aAAey8B,EAAUz8B,eACrKy8B,EAAUznC,cAAc,IAAI4N,YAAY,oCAAqC,CAAEsB,SAAS,MAI5Fg4B,OAAiB9jC,EAOrB,SAASskC,EAAmBD,GACtBN,IACFA,EAAgBh6D,UAAUU,OAAOk5D,EAAcJ,iBAC/CQ,EAAgBt0D,gBAAgB,MAChCo0D,EAAOp0D,gBAAgB,+BAEA,IAAd40D,GACTA,EAAUt6D,UAAUC,IAAI25D,EAAcJ,iBACtCc,EAAUz0D,aAAa,KAAMszD,gBAAuBU,EAAM,mBAC1DC,EAAOj0D,aAAa,wBAAyBszD,gBAAuBU,EAAM,mBAC1EG,EAAkBM,EAClBR,EAAO11D,SAAS,GAAG4iC,YAAcgzB,EAAgBQ,2BAA2Bp2C,OAE5E41C,OAAkB/jC,EAClB6jC,EAAO11D,SAAS,GAAG4iC,YAAc,IAEnCqzB,EAAkBC,GAmBpB,SAASG,EAAoBjlD,GAG3B,IAAIklD,EAAsB,GAAGx3D,QAAQS,KAAKkwD,EAAO7nD,QAAS+tD,EAAeS,4BAGrE3G,EAAO7nD,QAAQ0uD,EAAsBllD,IACvC6kD,EAAkBxG,EAAO7nD,QAAQ0uD,EAAsBllD,GAAWmlD,uBAKtE,SAAS7nB,EAAK6M,GAEZ,GAAIA,QAAwB,IAATA,EAAsB,CAGvC,IAAIib,EAAqBp6D,SAASgH,cAAc,iBAA6BoyD,EAAcD,aACvFiB,IACFA,EAAmBC,aAAa/nB,MAAO,GAIzC1hC,EAAUpR,UAAUC,IAAI25D,EAAcD,aAGtCvoD,EAAUpR,UAAUC,IAAI25D,EAAcD,aACtCG,EAAOj0D,aAAa,gBAAiB,QAGjCm0D,IACFC,EAAMh8B,UAAY+7B,EAAgBlkC,WAIpC1kB,EAAUyhB,cAAc,IAAI4N,YAAY,uBAGxC5P,GAAS,OAKTzf,EAAUpR,UAAUU,OAAOk5D,EAAcD,aAGzCG,EAAOj0D,aAAa,gBAAiB,SAGrCgrB,GAAS,EAGTwpC,EAAkBL,GAGlB5oD,EAAUyhB,cAAc,IAAI4N,YAAY,wBAE1C,OAAO5P,EAGT,SAASiqC,EAAW3zD,GAEdA,EAAElJ,SAAW67D,GAAUA,EAAOnzD,SAASQ,EAAElJ,QACvC4yB,EACFiiB,GAAK,GAELA,IAGO3rC,EAAElJ,OAAO+B,WAAamH,EAAElJ,OAAO+B,UAAU2G,SAASizD,EAAcN,cAAgBW,EAAMtzD,SAASQ,EAAElJ,SAC1Gs8D,EAAmBpzD,EAAElJ,QAErB+7D,EAAgBQ,2BAA2BlmB,UAAW,EACtDxB,GAAK,GAEL+gB,EAAOhhC,cAAc,IAAI4N,YAAY,YAE5Bt5B,EAAElJ,SAAW41D,EAGlBiG,IAAWt5D,SAASoqD,eAAiBiJ,IAAWrzD,SAASoqD,eAC3DkP,EAAOv+C,QAGAsV,IAAWzf,EAAUzK,SAASQ,EAAElJ,SACzC60C,GAAK,GAIT,SAASioB,EAAe5zD,GAElBA,EAAElJ,OAAO+B,WAAamH,EAAElJ,OAAO+B,UAAU2G,SAASizD,EAAcN,cAClEe,EAAkBlzD,EAAElJ,QAIxB,SAAS+8D,EAAa7zD,GACpB,GAAK0pB,EAMH,OAAQ1pB,EAAEwnD,SACR,KAAK,GACL,KAAK,GAEH4L,EAAmBR,GAEnBC,EAAgBQ,2BAA2BlmB,UAAW,EAEtDuf,EAAOhhC,cAAc,IAAI4N,YAAY,WACrCqS,GAAK,GACL,MACF,KAAK,GAEHA,GAAK,GACL,MAEF,KAAK,GAEH2nB,GAAqB,GACrB,MACF,KAAK,GAEHA,EAAoB,GACpB,MACF,QAEE,GAAItzD,EAAEwnD,SAAW,IAAMxnD,EAAEwnD,SAAW,GAAI,CAElCwL,GACFviC,aAAauiC,GAIfA,EAAqBh6D,YAAW,WAC9Bi6D,EAAY,KACX,MAGHA,GAAar0D,OAAOk1D,aAAa9zD,EAAEwnD,SAGnC,IAAK,IAAIxwD,EAAI,EAAG0kD,EAAIgR,EAAO7nD,QAAQ5N,OAAQD,EAAI0kD,EAAG1kD,IAGhD,GAAI01D,EAAO7nD,QAAQ7N,GAAGimB,KAAKmc,cAAc26B,OAAO,EAAGd,EAAUh8D,UAAYg8D,EAAW,CAClFC,EAAkBxG,EAAO7nD,QAAQ7N,GAAGw8D,uBACpC,aAlDQ,KAAdxzD,EAAEwnD,SAAgC,KAAdxnD,EAAEwnD,SAAgC,KAAdxnD,EAAEwnD,SAC5C7b,IA0DN,SAASqoB,IACP,IAAI1qD,EAAQojD,EAAOhB,cAGnB0H,GAFyB,IAAX9pD,OAAewlB,EAAY49B,EAAO7nD,QAAQyE,GAAOkqD,uBAWjE,SAASS,EAAgBj0D,GACvB,IAAIk0D,EAAYl0D,EAAEspB,cACd6qC,EAAan0D,EAAElJ,OAEfq9D,EAAWxlC,UAAYulC,EAAUp9B,UACnCo9B,EAAUp9B,UAAYq9B,EAAWxlC,UAGjCulC,EAAUp9B,UAAYq9B,EAAWxlC,UAAYwlC,EAAWz9B,aAAew9B,EAAUx9B,aAIrF,SAAS3M,IACP1wB,SAASyL,iBAAiB,QAAS6uD,GACnCb,EAAMhuD,iBAAiB,YAAa8uD,GACpCd,EAAMhuD,iBAAiB,oCAAqCmvD,GAC5DvH,EAAO5nD,iBAAiB,SAAUkvD,GAClC/pD,EAAUnF,iBAAiB,UAAW+uD,GAGxC,SAASO,IACP/6D,SAASgL,oBAAoB,QAASsvD,GACtCb,EAAMzuD,oBAAoB,YAAauvD,GACvCd,EAAMzuD,oBAAoB,oCAAqC4vD,GAC/DvH,EAAOroD,oBAAoB,SAAU2vD,GACrC/pD,EAAU5F,oBAAoB,UAAWwvD,GAqB3C,SAASQ,EAAYp3D,GACnB,IAAImzD,EAAWnzD,EACXq3D,EAAU,GAEd,QAA+B,IAApBlE,EAASn5D,OAClB,MAAM,IAAIL,UAAU,oBAGtB,IAAK,IAAII,EAAI,EAAG+lB,EAAKqzC,EAASn5D,OAAQD,EAAI+lB,EAAI/lB,IAC5C,GAAIo5D,EAASp5D,aAAc2E,aAAqD,aAAtCy0D,EAASp5D,GAAGw3B,QAAQ4K,cAA8B,CAC1F,IAAIm7B,EAAcl7D,SAAS0F,cAAc,OACzCw1D,EAAY17D,UAAUC,IAAI25D,EAAcL,eACxCmC,EAAY71D,aAAa,aAAc0xD,EAASp5D,GAAGsU,OAInDipD,EAAYC,6BAA+BpE,EAASp5D,GAIpDo5D,EAASp5D,GAAGy9D,wBAA0BF,EAGtC,IADA,IAAIG,EAAWL,EAAYjE,EAASp5D,GAAGiG,UAC9Bw+C,EAAI,EAAGkZ,EAAKD,EAASz9D,OAAQwkD,EAAIkZ,EAAIlZ,IAC5C8Y,EAAYr3D,YAAYw3D,EAASjZ,IAGnC6Y,EAAQt4D,KAAKu4D,OACR,CAAA,KAAInE,EAASp5D,aAAc2E,aAAqD,WAAtCy0D,EAASp5D,GAAGw3B,QAAQ4K,eAqBnE,MAAM,IAAIxiC,UAAU,oBApBpB,IAAIu8D,EAAY95D,SAAS0F,cAAc,OACvCo0D,EAAUt6D,UAAUC,IAAI25D,EAAcN,aACtCgB,EAAUtzB,YAAcuwB,EAASp5D,GAAGimB,KACpCk2C,EAAUz0D,aAAa,aAAc0xD,EAASp5D,GAAGW,OACjDw7D,EAAUz0D,aAAa,OAAQ,UAI/By0D,EAAUE,2BAA6BjD,EAASp5D,GAIhDo5D,EAASp5D,GAAGw8D,sBAAwBL,EAGhC/C,EAASp5D,GAAGm2C,UACdimB,EAAmBD,GAErBmB,EAAQt4D,KAAKm3D,GAKjB,OAAOmB,EAGT,SAASM,EAAQC,EAASC,EAAoBC,GAC5C,IAAIj+D,OAAS,EACb,QAAyB,IAAdi+D,GAA6BA,IAAcrI,EACpD51D,EAASg8D,MACJ,CAAA,KAAIiC,aAAqBp5D,aAAmD,aAApCo5D,EAAUvmC,QAAQ4K,eAAgCszB,EAAOltD,SAASu1D,IAG/G,MAAM,IAAIn+D,UAAU,oBAFpBE,EAASi+D,EAAUN,wBAMrB,IAAIl3D,EAAOs3D,aAAmBl5D,YAAc,CAACk5D,GAAWA,EAGxD,GAAIC,EACF,IAAK,IAAI99D,EAAI,EAAG0kD,EAAIn+C,EAAKtG,OAAQD,EAAI0kD,EAAG1kD,IAClCF,IAAWg8D,EACbpG,EAAOxvD,YAAYK,EAAKvG,IAExBF,EAAO09D,6BAA6Bt3D,YAAYK,EAAKvG,IAS3D,IAHA,IAAIg+D,EAAiBX,EAAY92D,GAGxB8zD,EAAK,EAAG4D,EAAKD,EAAe/9D,OAAQo6D,EAAK4D,EAAI5D,IACpDv6D,EAAOoG,YAAY83D,EAAe3D,IAGpC,OAAO9zD,GAiET0M,EAAY5Q,SAAS0F,cAAc,QACzBlG,UAAUC,IAAI25D,EAAcT,eAAgBA,IAGtDW,EAASt5D,SAAS0F,cAAc,SACzBQ,UAAYkzD,EAAcR,YACjCU,EAAOj0D,aAAa,OAAQ,YAC5Bi0D,EAAOj0D,aAAa,oBAAqB,QACzCi0D,EAAOj0D,aAAa,gBAAiB,SACrCi0D,EAAOvoC,UAAY,gBAA2C,IAA1BsiC,EAAOhB,cAAuBgB,EAAO7nD,QAAQ6nD,EAAOhB,eAAezuC,KAAO,IAAM,eAKpH61C,EAAQz5D,SAAS0F,cAAc,OAG/B,IADA,IAAIm2D,EAAW,iEACNl+D,EAAI,EAAGA,EAAI,EAAGA,IACrB07D,GAAOwC,EAAS/7B,OAAO33B,KAAKH,MAAMG,KAAKssC,SAAWonB,EAASj+D,SA6E7D,OA3EA67D,EAAMvtD,GAAKysD,gBAAuBU,EAAM,SACxCI,EAAMvzD,UAAYkzD,EAAcP,WAChCY,EAAMp0D,aAAa,OAAQ,WAC3Bi0D,EAAOj0D,aAAa,YAAao0D,EAAMvtD,IAEvCqvD,EAAQlI,EAAOzvD,UAAU,GAGzBgN,EAAU/M,YAAYy1D,GACtBjG,EAAOlvD,WAAW23D,aAAalrD,EAAWyiD,GAC1CziD,EAAU/M,YAAYwvD,GACtBziD,EAAU/M,YAAY41D,GAGlBz5D,SAASgH,cAAc,cAAgBqsD,EAAOnnD,GAAK,MACrDwtD,EAAY15D,SAASgH,cAAc,cAAgBqsD,EAAOnnD,GAAK,MACP,UAA/C0E,EAAUzM,WAAWgxB,QAAQ4K,gBACtC25B,EAAY9oD,EAAUzM,iBAEC,IAAdu1D,IACTA,EAAUr0D,aAAa,KAAMszD,gBAAuBU,EAAM,UAC1DC,EAAOj0D,aAAa,kBAAmBszD,gBAAuBU,EAAM,WAIlEhG,EAAOn1C,SACTtN,EAAUpR,UAAUC,IAAI25D,EAAcF,kBAEtCI,EAAOj0D,aAAa,WAAY,KAChCguD,EAAOhuD,aAAa,WAAY,MAChCqrB,KAIF9f,EAAUypD,aAAe,CACvB0B,oBACE,OAAO3C,GAET9mB,WACE,OAAOjiB,GAETiiB,SAAS6M,GACP7M,EAAK6M,IAEPjhC,eACE,OAAOm1C,EAAOn1C,UAEhBA,aAAaihC,IA7Of,SAAkBA,GACZA,IAASkU,EAAOn1C,UAClBtN,EAAUpR,UAAUC,IAAI25D,EAAcF,iBACtC7F,EAAOn1C,UAAW,EAClBo7C,EAAOp0D,gBAAgB,YACvB0L,EAAUyhB,cAAc,IAAI4N,YAAY,2BACxC86B,MACU5b,GAAQkU,EAAOn1C,WACzBtN,EAAUpR,UAAUU,OAAOk5D,EAAcF,iBACzC7F,EAAOn1C,UAAW,EAClBo7C,EAAOj0D,aAAa,WAAY,KAChCuL,EAAUyhB,cAAc,IAAI4N,YAAY,0BACxCvP,KAkOAxS,CAASihC,IAEX7gD,YACE,OAAO+0D,EAAO/0D,OAEhBA,UAAUwiC,GA1cZ,IAAkBxiC,EAEZ09D,EAFY19D,EA2cLwiC,GAzcPk7B,EAAW3I,EAAOrsD,cAAc,iBAAoB1I,EAAQ,SAK9D09D,EAFsBrE,EAAetE,EAAO7nD,QAAS,GAE1B,IAI7BwwD,EAASloB,UAAW,EAEpBimB,EAAmB1G,EAAO7nD,QAAQ6nD,EAAOhB,eAAe8H,wBAgcxDz2D,OAAQ,SAAgBQ,EAAMzG,GAC5B,OAAO89D,EAAQr3D,GAAM,EAAMzG,IAE7B2G,aAAc,SAAsBF,EAAMzG,GACxC,OA9IJ,SAAuByG,EAAMw3D,GAC3B,IAAIj+D,OAAS,EACb,GAAIi+D,aAAqBp5D,aAAmD,WAApCo5D,EAAUvmC,QAAQ4K,eAA8BszB,EAAOltD,SAASu1D,GACtGj+D,EAASi+D,EAAUvB,0BACd,CAAA,KAAIuB,aAAqBp5D,aAAmD,aAApCo5D,EAAUvmC,QAAQ4K,eAAgCszB,EAAOltD,SAASu1D,IAG/G,MAAM,IAAIn+D,UAAU,oBAFpBE,EAASi+D,EAAUN,wBAMrB,IAAIO,EAAiBX,EAAY92D,EAAKtG,OAASsG,EAAO,CAACA,IAKvD,OAHAzG,EAAO0G,WAAWC,aAAau3D,EAAe,GAAIl+D,GAG3Ci+D,EAAUv3D,WAAWC,aAAaF,EAAKtG,OAASsG,EAAK,GAAKA,EAAMw3D,GA8H9DO,CAAc/3D,EAAMzG,IAE7ByC,OA7HF,SAAgBgE,GACd,IAAIg4D,OAAU,EACd,GAAIh4D,aAAgB5B,aAA8C,WAA/B4B,EAAKixB,QAAQ4K,eAA8BszB,EAAOltD,SAASjC,GAC5Fg4D,EAAUh4D,EAAKi2D,0BACV,CAAA,KAAIj2D,aAAgB5B,aAA8C,aAA/B4B,EAAKixB,QAAQ4K,eAAgCszB,EAAOltD,SAASjC,IAGrG,MAAM,IAAI3G,UAAU,oBAFpB2+D,EAAUh4D,EAAKk3D,wBAIjBc,EAAQ/3D,WAAWkC,YAAY61D,GAC/B,IAAIC,EAAcj4D,EAAKC,WAAWkC,YAAYnC,GAE9C,OADAy2D,IACOwB,GAkHPv6D,MA/GF,WAEE,IADA,IAAIw6D,EAAU,GACP/I,EAAOzvD,SAAShG,QACrB67D,EAAMpzD,YAAYozD,EAAM71D,SAAS,IACjCw4D,EAAQz5D,KAAK0wD,EAAOhtD,YAAYgtD,EAAOzvD,SAAS,KAGlD,OADAm2D,IACOqC,GAyGPnxD,QAtGF,WACE,IAAK,IAAItN,EAAI,EAAG0kD,EAAIgR,EAAO7nD,QAAQ5N,OAAQD,EAAI0kD,EAAG1kD,WACzC01D,EAAO7nD,QAAQ7N,GAAGw8D,sBAG3B,IADA,IAAIkC,EAAWhJ,EAAOn+B,qBAAqB,YAClConC,EAAM,EAAGC,EAAMF,EAASz+D,OAAQ0+D,EAAMC,EAAKD,WAC3CD,EAASjB,wBAKlB,OAFAL,IAEOnqD,EAAUzM,WAAW23D,aAAazI,EAAQziD,IA4FjD0oD,OAAQA,EACRjG,OAAQA,EACRoG,MAAOA,EACP7oD,UAAWA,GAIbyiD,EAAOgH,aAAezpD,EAAUypD,aAGzBzpD,EAAUypD,iBC/jBnBA,CAAa,UC0Cb,IA5BE,SAAAmC,IAAc,IAAA39D,EAAAC,KAAA1B,EAAA0B,KAAA09D,GAAAp+D,EAAAU,KAAA,iBAIE,WACd,IAAM41B,EAAM10B,SAASqxB,gBAAgBoM,UAErCz9B,SAASC,KAAKT,UAAUyf,OAhBR,cAgB4ByV,GAjB3B,IAkBjB10B,SAASC,KAAKT,UAAUyf,OAfP,qBAiBfzgB,OAAOoC,YAAc8zB,GAAO10B,SAASC,KAAKk2B,aAlB1B,IA+BlBt3B,EAAK49D,UAAY/nC,KAtBjB10B,SAASyL,iBAAiB,SAAU3M,KAAK49D,cAAe,CAAC78C,SAAS,KxBjBtE","file":"scripts.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  /**\r\n   * Animate\r\n   * ======================================\r\n   * - add class to element in viewport\r\n   * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n   * - set animation delay via [animate-delay] html attribute\r\n   * - set visible threshold via [animate-threshold] html attribute\r\n   */\n  var ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches;\n  var THRESHOLD = '0.75';\n  var LOAD_THRESHOLD = '0.2';\n  var ELEMENTS$1 = '.animate';\n  var VISIBLE_CLASS = 'animate--visible';\n\n  var Animate = function Animate() {\n    var _this = this;\n\n    _classCallCheck(this, Animate);\n\n    _defineProperty(this, \"observeCallback\", function (entries) {\n      entries.map(function (entry) {\n        var section = entry.target;\n\n        var delay = _this.getDelay(section);\n\n        var sectionBodyClass = section.getAttribute('animate-body-class');\n\n        if (entry.isIntersecting) {\n          if (ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n            section.classList.add(VISIBLE_CLASS);\n\n            _this.bodyClass(sectionBodyClass, 'add');\n          } else {\n            setTimeout(function () {\n              section.classList.add(VISIBLE_CLASS);\n\n              _this.bodyClass(sectionBodyClass, 'add');\n            }, delay);\n          }\n        } else {\n          _this.bodyClass(sectionBodyClass, 'remove');\n        }\n      });\n    });\n\n    _defineProperty(this, \"getDelay\", function (section) {\n      var delay = section.getAttribute('animate-delay');\n\n      if (!ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n        var delay = section.getAttribute('animate-delay-desktop');\n      }\n\n      if (delay === null) {\n        return 0;\n      } else if (delay.includes('.')) {\n        return parseInt(delay * 1000);\n      } else {\n        return parseInt(delay);\n      }\n    });\n\n    _defineProperty(this, \"bodyClass\", function (htmlclass, type) {\n      if (!htmlclass) {\n        return;\n      }\n\n      if (type == 'add') {\n        document.body.classList.add(htmlclass);\n      } else {\n        document.body.classList.remove(htmlclass);\n      }\n    });\n\n    this.sections = document.querySelectorAll(ELEMENTS$1);\n    this.THRESHOLD = THRESHOLD;\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD;\n\n    if ('IntersectionObserver' in window) {\n      this.sections.forEach(function (el) {\n        var BoundingClientRect = el.getBoundingClientRect();\n        var visibleRatio = BoundingClientRect.height / window.innerHeight;\n\n        if (visibleRatio > 0.95) {\n          _this.THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 30;\n          _this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20;\n        } // observe on page load\n\n\n        var loadObserver = new IntersectionObserver(_this.observeCallback, {\n          threshold: _this.LOAD_THRESHOLD\n        });\n        loadObserver.observe(el);\n        setTimeout(function () {\n          loadObserver.disconnect();\n        }, 100); // observe\n\n        var observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : _this.THRESHOLD;\n        var observer = new IntersectionObserver(_this.observeCallback, {\n          threshold: observerThreshold\n        });\n        observer.observe(el);\n      });\n    } else {\n      this.sections.forEach(function (el) {\n        el.classList.add(VISIBLE_CLASS);\n      });\n    }\n  };\n\n  new Animate();\n\n  /*!\n   * Splide.js\n   * Version  : 3.2.5\n   * License  : MIT\n   * Copyright: 2021 Naotoshi Fujita\n   */\n  const PROJECT_CODE = \"splide\";\n  const DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\n  const CREATED = 1;\n  const MOUNTED = 2;\n  const IDLE = 3;\n  const MOVING = 4;\n  const DESTROYED = 5;\n  const STATES = {\n    CREATED,\n    MOUNTED,\n    IDLE,\n    MOVING,\n    DESTROYED\n  };\n\n  const DEFAULT_EVENT_PRIORITY = 10;\n  const DEFAULT_USER_EVENT_PRIORITY = 20;\n\n  function empty(array) {\n    array.length = 0;\n  }\n\n  function isObject(subject) {\n    return !isNull(subject) && typeof subject === \"object\";\n  }\n  function isArray(subject) {\n    return Array.isArray(subject);\n  }\n  function isFunction(subject) {\n    return typeof subject === \"function\";\n  }\n  function isString(subject) {\n    return typeof subject === \"string\";\n  }\n  function isUndefined(subject) {\n    return typeof subject === \"undefined\";\n  }\n  function isNull(subject) {\n    return subject === null;\n  }\n  function isHTMLElement(subject) {\n    return subject instanceof HTMLElement;\n  }\n\n  function toArray(value) {\n    return isArray(value) ? value : [value];\n  }\n\n  function forEach(values, iteratee) {\n    toArray(values).forEach(iteratee);\n  }\n\n  function includes(array, value) {\n    return array.indexOf(value) > -1;\n  }\n\n  function push(array, items) {\n    array.push(...toArray(items));\n    return array;\n  }\n\n  const arrayProto = Array.prototype;\n\n  function slice(arrayLike, start, end) {\n    return arrayProto.slice.call(arrayLike, start, end);\n  }\n\n  function find(arrayLike, predicate) {\n    return slice(arrayLike).filter(predicate)[0];\n  }\n\n  function toggleClass$1(elm, classes, add) {\n    if (elm) {\n      forEach(classes, (name) => {\n        if (name) {\n          elm.classList[add ? \"add\" : \"remove\"](name);\n        }\n      });\n    }\n  }\n\n  function addClass(elm, classes) {\n    toggleClass$1(elm, isString(classes) ? classes.split(\" \") : classes, true);\n  }\n\n  function append(parent, children) {\n    forEach(children, parent.appendChild.bind(parent));\n  }\n\n  function before(nodes, ref) {\n    forEach(nodes, (node) => {\n      const parent = ref.parentNode;\n      if (parent) {\n        parent.insertBefore(node, ref);\n      }\n    });\n  }\n\n  function matches(elm, selector) {\n    return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n  }\n\n  function children(parent, selector) {\n    return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n  }\n\n  function child(parent, selector) {\n    return selector ? children(parent, selector)[0] : parent.firstElementChild;\n  }\n\n  function forOwn(object, iteratee, right) {\n    if (object) {\n      let keys = Object.keys(object);\n      keys = right ? keys.reverse() : keys;\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \"__proto__\") {\n          if (iteratee(object[key], key) === false) {\n            break;\n          }\n        }\n      }\n    }\n    return object;\n  }\n\n  function assign(object) {\n    slice(arguments, 1).forEach((source) => {\n      forOwn(source, (value, key) => {\n        object[key] = source[key];\n      });\n    });\n    return object;\n  }\n\n  function merge(object, source) {\n    forOwn(source, (value, key) => {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n    return object;\n  }\n\n  function removeAttribute(elm, attrs) {\n    if (elm) {\n      forEach(attrs, (attr) => {\n        elm.removeAttribute(attr);\n      });\n    }\n  }\n\n  function setAttribute(elm, attrs, value) {\n    if (isObject(attrs)) {\n      forOwn(attrs, (value2, name) => {\n        setAttribute(elm, name, value2);\n      });\n    } else {\n      isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    }\n  }\n\n  function create(tag, attrs, parent) {\n    const elm = document.createElement(tag);\n    if (attrs) {\n      isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n    }\n    parent && append(parent, elm);\n    return elm;\n  }\n\n  function style(elm, prop, value) {\n    if (isUndefined(value)) {\n      return getComputedStyle(elm)[prop];\n    }\n    if (!isNull(value)) {\n      const { style: style2 } = elm;\n      value = `${value}`;\n      if (style2[prop] !== value) {\n        style2[prop] = value;\n      }\n    }\n  }\n\n  function display(elm, display2) {\n    style(elm, \"display\", display2);\n  }\n\n  function focus(elm) {\n    elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n  }\n\n  function getAttribute(elm, attr) {\n    return elm.getAttribute(attr);\n  }\n\n  function hasClass(elm, className) {\n    return elm && elm.classList.contains(className);\n  }\n\n  function rect(target) {\n    return target.getBoundingClientRect();\n  }\n\n  function remove(nodes) {\n    forEach(nodes, (node) => {\n      if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n  }\n\n  function measure(parent, value) {\n    if (isString(value)) {\n      const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n      value = rect(div).width;\n      remove(div);\n    }\n    return value;\n  }\n\n  function parseHtml(html) {\n    return child(new DOMParser().parseFromString(html, \"text/html\").body);\n  }\n\n  function prevent(e, stopPropagation) {\n    e.preventDefault();\n    if (stopPropagation) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function query(parent, selector) {\n    return parent && parent.querySelector(selector);\n  }\n\n  function queryAll(parent, selector) {\n    return slice(parent.querySelectorAll(selector));\n  }\n\n  function removeClass(elm, classes) {\n    toggleClass$1(elm, classes, false);\n  }\n\n  function unit(value) {\n    return isString(value) ? value : value ? `${value}px` : \"\";\n  }\n\n  function assert(condition, message = \"\") {\n    if (!condition) {\n      throw new Error(`[${PROJECT_CODE}] ${message}`);\n    }\n  }\n\n  function nextTick(callback) {\n    setTimeout(callback);\n  }\n\n  const noop = () => {\n  };\n\n  function raf(func) {\n    return requestAnimationFrame(func);\n  }\n\n  const { min, max, floor, ceil, abs } = Math;\n\n  function approximatelyEqual(x, y, epsilon) {\n    return abs(x - y) < epsilon;\n  }\n\n  function between(number, minOrMax, maxOrMin, exclusive) {\n    const minimum = min(minOrMax, maxOrMin);\n    const maximum = max(minOrMax, maxOrMin);\n    return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n  }\n\n  function clamp(number, x, y) {\n    const minimum = min(x, y);\n    const maximum = max(x, y);\n    return min(max(minimum, number), maximum);\n  }\n\n  function sign(x) {\n    return +(x > 0) - +(x < 0);\n  }\n\n  function format(string, replacements) {\n    forEach(replacements, (replacement) => {\n      string = string.replace(\"%s\", `${replacement}`);\n    });\n    return string;\n  }\n\n  function pad$1(number) {\n    return number < 10 ? `0${number}` : `${number}`;\n  }\n\n  const ids = {};\n  function uniqueId(prefix) {\n    return `${prefix}${pad$1(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n  }\n\n  function EventBus() {\n    let handlers = {};\n    function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n      forEachEvent(events, (event, namespace) => {\n        handlers[event] = handlers[event] || [];\n        push(handlers[event], {\n          _event: event,\n          _callback: callback,\n          _namespace: namespace,\n          _priority: priority,\n          _key: key\n        }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n      });\n    }\n    function off(events, key) {\n      forEachEvent(events, (event, namespace) => {\n        const eventHandlers = handlers[event];\n        handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n          return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n        });\n      });\n    }\n    function offBy(key) {\n      forOwn(handlers, (eventHandlers, event) => {\n        off(event, key);\n      });\n    }\n    function emit(event) {\n      (handlers[event] || []).forEach((handler) => {\n        handler._callback.apply(handler, slice(arguments, 1));\n      });\n    }\n    function destroy() {\n      handlers = {};\n    }\n    function forEachEvent(events, iteratee) {\n      toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n        const fragments = eventNS.split(\".\");\n        iteratee(fragments[0], fragments[1]);\n      });\n    }\n    return {\n      on,\n      off,\n      offBy,\n      emit,\n      destroy\n    };\n  }\n\n  const EVENT_MOUNTED = \"mounted\";\n  const EVENT_READY = \"ready\";\n  const EVENT_MOVE = \"move\";\n  const EVENT_MOVED = \"moved\";\n  const EVENT_CLICK = \"click\";\n  const EVENT_ACTIVE = \"active\";\n  const EVENT_INACTIVE = \"inactive\";\n  const EVENT_VISIBLE = \"visible\";\n  const EVENT_HIDDEN = \"hidden\";\n  const EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\n  const EVENT_REFRESH = \"refresh\";\n  const EVENT_UPDATED = \"updated\";\n  const EVENT_RESIZE = \"resize\";\n  const EVENT_RESIZED = \"resized\";\n  const EVENT_REPOSITIONED = \"repositioned\";\n  const EVENT_DRAG = \"drag\";\n  const EVENT_DRAGGING = \"dragging\";\n  const EVENT_DRAGGED = \"dragged\";\n  const EVENT_SCROLL = \"scroll\";\n  const EVENT_SCROLLED = \"scrolled\";\n  const EVENT_DESTROY = \"destroy\";\n  const EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\n  const EVENT_ARROWS_UPDATED = \"arrows:updated\";\n  const EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\n  const EVENT_PAGINATION_UPDATED = \"pagination:updated\";\n  const EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\n  const EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\n  const EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\n  const EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\n  const EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\n  function EventInterface(Splide2) {\n    const { event } = Splide2;\n    const key = {};\n    let listeners = [];\n    function on(events, callback, priority) {\n      event.on(events, callback, key, priority);\n    }\n    function off(events) {\n      event.off(events, key);\n    }\n    function bind(targets, events, callback, options) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners.push([target, event2, callback, options]);\n        target.addEventListener(event2, callback, options);\n      });\n    }\n    function unbind(targets, events, callback) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners = listeners.filter((listener) => {\n          if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n            target.removeEventListener(event2, listener[2], listener[3]);\n            return false;\n          }\n          return true;\n        });\n      });\n    }\n    function forEachEvent(targets, events, iteratee) {\n      forEach(targets, (target) => {\n        if (target) {\n          events.split(\" \").forEach(iteratee.bind(null, target));\n        }\n      });\n    }\n    function destroy() {\n      listeners = listeners.filter((data) => unbind(data[0], data[1]));\n      event.offBy(key);\n    }\n    event.on(EVENT_DESTROY, destroy, key);\n    return {\n      on,\n      off,\n      emit: event.emit,\n      bind,\n      unbind,\n      destroy\n    };\n  }\n\n  function RequestInterval(interval, onInterval, onUpdate, limit) {\n    const { now } = Date;\n    let startTime;\n    let rate = 0;\n    let id;\n    let paused = true;\n    let count = 0;\n    function update() {\n      if (!paused) {\n        const elapsed = now() - startTime;\n        if (elapsed >= interval) {\n          rate = 1;\n          startTime = now();\n        } else {\n          rate = elapsed / interval;\n        }\n        if (onUpdate) {\n          onUpdate(rate);\n        }\n        if (rate === 1) {\n          onInterval();\n          if (limit && ++count >= limit) {\n            return pause();\n          }\n        }\n        raf(update);\n      }\n    }\n    function start(resume) {\n      !resume && cancel();\n      startTime = now() - (resume ? rate * interval : 0);\n      paused = false;\n      raf(update);\n    }\n    function pause() {\n      paused = true;\n    }\n    function rewind() {\n      startTime = now();\n      rate = 0;\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n    }\n    function cancel() {\n      cancelAnimationFrame(id);\n      rate = 0;\n      id = 0;\n      paused = true;\n    }\n    function isPaused() {\n      return paused;\n    }\n    return {\n      start,\n      rewind,\n      pause,\n      cancel,\n      isPaused\n    };\n  }\n\n  function State(initialState) {\n    let state = initialState;\n    function set(value) {\n      state = value;\n    }\n    function is(states) {\n      return includes(toArray(states), state);\n    }\n    return { set, is };\n  }\n\n  function Throttle(func, duration) {\n    let interval;\n    function throttled() {\n      if (!interval) {\n        interval = RequestInterval(duration || 0, () => {\n          func.apply(this, arguments);\n          interval = null;\n        }, null, 1);\n        interval.start();\n      }\n    }\n    return throttled;\n  }\n\n  function Options(Splide2, Components2, options) {\n    const throttledObserve = Throttle(observe);\n    let initialOptions;\n    let points;\n    let currPoint;\n    function setup() {\n      try {\n        merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n      } catch (e) {\n        assert(false, e.message);\n      }\n      initialOptions = merge({}, options);\n      const { breakpoints } = options;\n      if (breakpoints) {\n        const isMin = options.mediaQuery === \"min\";\n        points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n          point,\n          matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n        ]);\n        observe();\n      }\n    }\n    function mount() {\n      if (points) {\n        addEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function destroy(completely) {\n      if (completely) {\n        removeEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function observe() {\n      const item = find(points, (item2) => item2[1].matches) || [];\n      if (item[0] !== currPoint) {\n        onMatch(currPoint = item[0]);\n      }\n    }\n    function onMatch(point) {\n      const newOptions = options.breakpoints[point] || initialOptions;\n      if (newOptions.destroy) {\n        Splide2.options = initialOptions;\n        Splide2.destroy(newOptions.destroy === \"completely\");\n      } else {\n        if (Splide2.state.is(DESTROYED)) {\n          destroy(true);\n          Splide2.mount();\n        }\n        Splide2.options = newOptions;\n      }\n    }\n    return {\n      setup,\n      mount,\n      destroy\n    };\n  }\n\n  const RTL = \"rtl\";\n  const TTB = \"ttb\";\n\n  const ORIENTATION_MAP = {\n    marginRight: [\"marginBottom\", \"marginLeft\"],\n    autoWidth: [\"autoHeight\"],\n    fixedWidth: [\"fixedHeight\"],\n    paddingLeft: [\"paddingTop\", \"paddingRight\"],\n    paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n    width: [\"height\"],\n    left: [\"top\", \"right\"],\n    right: [\"bottom\", \"left\"],\n    x: [\"y\"],\n    X: [\"Y\"],\n    Y: [\"X\"],\n    ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n    ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n  };\n  function Direction(Splide2, Components2, options) {\n    function resolve(prop, axisOnly) {\n      const { direction } = options;\n      const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n      return ORIENTATION_MAP[prop][index] || prop;\n    }\n    function orient(value) {\n      return value * (options.direction === RTL ? 1 : -1);\n    }\n    return {\n      resolve,\n      orient\n    };\n  }\n\n  const CLASS_ROOT = PROJECT_CODE;\n  const CLASS_SLIDER = `${PROJECT_CODE}__slider`;\n  const CLASS_TRACK = `${PROJECT_CODE}__track`;\n  const CLASS_LIST = `${PROJECT_CODE}__list`;\n  const CLASS_SLIDE = `${PROJECT_CODE}__slide`;\n  const CLASS_CLONE = `${CLASS_SLIDE}--clone`;\n  const CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\n  const CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\n  const CLASS_ARROW = `${PROJECT_CODE}__arrow`;\n  const CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\n  const CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\n  const CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\n  const CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\n  const CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\n  const CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\n  const CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\n  const CLASS_PLAY = `${PROJECT_CODE}__play`;\n  const CLASS_PAUSE = `${PROJECT_CODE}__pause`;\n  const CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\n  const CLASS_INITIALIZED = \"is-initialized\";\n  const CLASS_ACTIVE = \"is-active\";\n  const CLASS_PREV = \"is-prev\";\n  const CLASS_NEXT = \"is-next\";\n  const CLASS_VISIBLE = \"is-visible\";\n  const CLASS_LOADING = \"is-loading\";\n  const STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\n  const CLASSES = {\n    slide: CLASS_SLIDE,\n    clone: CLASS_CLONE,\n    arrows: CLASS_ARROWS,\n    arrow: CLASS_ARROW,\n    prev: CLASS_ARROW_PREV,\n    next: CLASS_ARROW_NEXT,\n    pagination: CLASS_PAGINATION,\n    page: CLASS_PAGINATION_PAGE,\n    spinner: CLASS_SPINNER\n  };\n\n  function Elements(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { root } = Splide2;\n    const elements = {};\n    const slides = [];\n    let classes;\n    let slider;\n    let track;\n    let list;\n    function setup() {\n      collect();\n      identify();\n      addClass(root, classes = getClasses());\n    }\n    function mount() {\n      on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n      on(EVENT_UPDATED, update);\n    }\n    function destroy() {\n      [root, track, list].forEach((elm) => {\n        removeAttribute(elm, \"style\");\n      });\n      empty(slides);\n      removeClass(root, classes);\n    }\n    function refresh() {\n      destroy();\n      setup();\n    }\n    function update() {\n      removeClass(root, classes);\n      addClass(root, classes = getClasses());\n    }\n    function collect() {\n      slider = child(root, `.${CLASS_SLIDER}`);\n      track = query(root, `.${CLASS_TRACK}`);\n      list = child(track, `.${CLASS_LIST}`);\n      assert(track && list, \"A track/list element is missing.\");\n      push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n      const autoplay = find(`.${CLASS_AUTOPLAY}`);\n      const arrows = find(`.${CLASS_ARROWS}`);\n      assign(elements, {\n        root,\n        slider,\n        track,\n        list,\n        slides,\n        arrows,\n        autoplay,\n        prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n        next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n        bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n        play: query(autoplay, `.${CLASS_PLAY}`),\n        pause: query(autoplay, `.${CLASS_PAUSE}`)\n      });\n    }\n    function identify() {\n      const id = root.id || uniqueId(PROJECT_CODE);\n      root.id = id;\n      track.id = track.id || `${id}-track`;\n      list.id = list.id || `${id}-list`;\n    }\n    function find(selector) {\n      return child(root, selector) || child(slider, selector);\n    }\n    function getClasses() {\n      return [\n        `${CLASS_ROOT}--${options.type}`,\n        `${CLASS_ROOT}--${options.direction}`,\n        options.drag && `${CLASS_ROOT}--draggable`,\n        options.isNavigation && `${CLASS_ROOT}--nav`,\n        CLASS_ACTIVE\n      ];\n    }\n    return assign(elements, {\n      setup,\n      mount,\n      destroy\n    });\n  }\n\n  const ROLE = \"role\";\n  const ARIA_CONTROLS = \"aria-controls\";\n  const ARIA_CURRENT = \"aria-current\";\n  const ARIA_LABEL = \"aria-label\";\n  const ARIA_HIDDEN = \"aria-hidden\";\n  const TAB_INDEX = \"tabindex\";\n  const DISABLED = \"disabled\";\n  const ARIA_ORIENTATION = \"aria-orientation\";\n  const ALL_ATTRIBUTES = [\n    ROLE,\n    ARIA_CONTROLS,\n    ARIA_CURRENT,\n    ARIA_LABEL,\n    ARIA_HIDDEN,\n    ARIA_ORIENTATION,\n    TAB_INDEX,\n    DISABLED\n  ];\n\n  const SLIDE = \"slide\";\n  const LOOP = \"loop\";\n  const FADE = \"fade\";\n\n  function Slide$1(Splide2, index, slideIndex, slide) {\n    const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n    const { Components, root, options } = Splide2;\n    const { isNavigation, updateOnMove } = options;\n    const { resolve } = Components.Direction;\n    const styles = getAttribute(slide, \"style\");\n    const isClone = slideIndex > -1;\n    const container = child(slide, `.${CLASS_CONTAINER}`);\n    const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n    let destroyed;\n    function mount() {\n      init();\n      bind(slide, \"click keydown\", (e) => {\n        emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n      });\n      on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n      if (updateOnMove) {\n        on(EVENT_MOVE, onMove.bind(this));\n      }\n    }\n    function init() {\n      if (!isClone) {\n        slide.id = `${root.id}-slide${pad$1(index + 1)}`;\n      }\n      if (isNavigation) {\n        const idx = isClone ? slideIndex : index;\n        const label = format(options.i18n.slideX, idx + 1);\n        const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n        setAttribute(slide, ARIA_LABEL, label);\n        setAttribute(slide, ARIA_CONTROLS, controls);\n        setAttribute(slide, ROLE, \"menuitem\");\n      }\n    }\n    function destroy() {\n      destroyed = true;\n      destroyEvents();\n      removeClass(slide, STATUS_CLASSES);\n      removeAttribute(slide, ALL_ATTRIBUTES);\n      setAttribute(slide, \"style\", styles);\n    }\n    function onMove(next, prev, dest) {\n      if (!destroyed) {\n        update.call(this);\n        if (dest === index) {\n          updateActivity.call(this, true);\n        }\n      }\n    }\n    function update() {\n      if (!destroyed) {\n        const { index: currIndex } = Splide2;\n        updateActivity.call(this, isActive());\n        updateVisibility.call(this, isVisible());\n        toggleClass$1(slide, CLASS_PREV, index === currIndex - 1);\n        toggleClass$1(slide, CLASS_NEXT, index === currIndex + 1);\n      }\n    }\n    function updateActivity(active) {\n      if (active !== hasClass(slide, CLASS_ACTIVE)) {\n        toggleClass$1(slide, CLASS_ACTIVE, active);\n        if (isNavigation) {\n          setAttribute(slide, ARIA_CURRENT, active || null);\n        }\n        emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n      }\n    }\n    function updateVisibility(visible) {\n      const ariaHidden = !visible && !isActive();\n      setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n      setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n      if (focusableNodes) {\n        focusableNodes.forEach((node) => {\n          setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n        });\n      }\n      if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n        toggleClass$1(slide, CLASS_VISIBLE, visible);\n        emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n      }\n    }\n    function style$1(prop, value, useContainer) {\n      style(useContainer && container || slide, prop, value);\n    }\n    function isActive() {\n      return Splide2.index === index;\n    }\n    function isVisible() {\n      if (Splide2.is(FADE)) {\n        return isActive();\n      }\n      const trackRect = rect(Components.Elements.track);\n      const slideRect = rect(slide);\n      const left = resolve(\"left\");\n      const right = resolve(\"right\");\n      return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n    }\n    function isWithin(from, distance) {\n      let diff = abs(from - index);\n      if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n        diff = min(diff, Splide2.length - diff);\n      }\n      return diff <= distance;\n    }\n    return {\n      index,\n      slideIndex,\n      slide,\n      container,\n      isClone,\n      mount,\n      destroy,\n      style: style$1,\n      isWithin\n    };\n  }\n\n  function Slides(Splide2, Components2, options) {\n    const { on, emit, bind } = EventInterface(Splide2);\n    const { slides, list } = Components2.Elements;\n    const Slides2 = [];\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n      });\n    }\n    function init() {\n      slides.forEach((slide, index) => {\n        register(slide, index, -1);\n      });\n    }\n    function destroy() {\n      forEach$1((Slide2) => {\n        Slide2.destroy();\n      });\n      empty(Slides2);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function register(slide, index, slideIndex) {\n      const object = Slide$1(Splide2, index, slideIndex, slide);\n      object.mount();\n      Slides2.push(object);\n    }\n    function get(excludeClones) {\n      return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n    }\n    function getIn(page) {\n      const { Controller } = Components2;\n      const index = Controller.toIndex(page);\n      const max = Controller.hasFocus() ? 1 : options.perPage;\n      return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n    }\n    function getAt(index) {\n      return filter(index)[0];\n    }\n    function add(items, index) {\n      forEach(items, (slide) => {\n        if (isString(slide)) {\n          slide = parseHtml(slide);\n        }\n        if (isHTMLElement(slide)) {\n          const ref = slides[index];\n          ref ? before(slide, ref) : append(list, slide);\n          addClass(slide, options.classes.slide);\n          observeImages(slide, emit.bind(null, EVENT_RESIZE));\n        }\n      });\n      emit(EVENT_REFRESH);\n    }\n    function remove$1(matcher) {\n      remove(filter(matcher).map((Slide2) => Slide2.slide));\n      emit(EVENT_REFRESH);\n    }\n    function forEach$1(iteratee, excludeClones) {\n      get(excludeClones).forEach(iteratee);\n    }\n    function filter(matcher) {\n      return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n    }\n    function style(prop, value, useContainer) {\n      forEach$1((Slide2) => {\n        Slide2.style(prop, value, useContainer);\n      });\n    }\n    function observeImages(elm, callback) {\n      const images = queryAll(elm, \"img\");\n      let { length } = images;\n      if (length) {\n        images.forEach((img) => {\n          bind(img, \"load error\", () => {\n            if (!--length) {\n              callback();\n            }\n          });\n        });\n      } else {\n        callback();\n      }\n    }\n    function getLength(excludeClones) {\n      return excludeClones ? slides.length : Slides2.length;\n    }\n    function isEnough() {\n      return Slides2.length > options.perPage;\n    }\n    return {\n      mount,\n      destroy,\n      register,\n      get,\n      getIn,\n      getAt,\n      add,\n      remove: remove$1,\n      forEach: forEach$1,\n      filter,\n      style,\n      getLength,\n      isEnough\n    };\n  }\n\n  function Layout(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const { root, track, list } = Components2.Elements;\n    const { getAt } = Slides;\n    let vertical;\n    let rootRect;\n    function mount() {\n      init();\n      bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on(EVENT_RESIZE, resize);\n    }\n    function init() {\n      rootRect = null;\n      vertical = options.direction === TTB;\n      style(root, \"maxWidth\", unit(options.width));\n      style(track, resolve(\"paddingLeft\"), cssPadding(false));\n      style(track, resolve(\"paddingRight\"), cssPadding(true));\n      resize();\n    }\n    function resize() {\n      const newRect = rect(root);\n      if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n        style(track, \"height\", cssTrackHeight());\n        Slides.style(resolve(\"marginRight\"), unit(options.gap));\n        Slides.style(\"width\", cssSlideWidth() || null);\n        setSlidesHeight();\n        rootRect = newRect;\n        emit(EVENT_RESIZED);\n      }\n    }\n    function setSlidesHeight() {\n      Slides.style(\"height\", cssSlideHeight() || null, true);\n    }\n    function cssPadding(right) {\n      const { padding } = options;\n      const prop = resolve(right ? \"right\" : \"left\");\n      return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n    }\n    function cssTrackHeight() {\n      let height = \"\";\n      if (vertical) {\n        height = cssHeight();\n        assert(height, \"height or heightRatio is missing.\");\n        height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n      }\n      return height;\n    }\n    function cssHeight() {\n      return unit(options.height || rect(list).width * options.heightRatio);\n    }\n    function cssSlideWidth() {\n      return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n    }\n    function cssSlideHeight() {\n      return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n    }\n    function cssSlideSize() {\n      const gap = unit(options.gap);\n      return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n    }\n    function listSize() {\n      return rect(list)[resolve(\"width\")];\n    }\n    function slideSize(index, withoutGap) {\n      const Slide = getAt(index || 0);\n      return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n    }\n    function totalSize(index, withoutGap) {\n      const Slide = getAt(index);\n      if (Slide) {\n        const right = rect(Slide.slide)[resolve(\"right\")];\n        const left = rect(list)[resolve(\"left\")];\n        return abs(right - left) + (withoutGap ? 0 : getGap());\n      }\n      return 0;\n    }\n    function sliderSize() {\n      return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n    }\n    function getGap() {\n      const Slide = getAt(0);\n      return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n    }\n    function getPadding(right) {\n      return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n    }\n    return {\n      mount,\n      listSize,\n      slideSize,\n      sliderSize,\n      totalSize,\n      getPadding\n    };\n  }\n\n  function Clones(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Elements, Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const clones = [];\n    let cloneCount;\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_UPDATED, EVENT_RESIZE], observe);\n    }\n    function init() {\n      if (cloneCount = computeCloneCount()) {\n        generate(cloneCount);\n        emit(EVENT_RESIZE);\n      }\n    }\n    function destroy() {\n      remove(clones);\n      empty(clones);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function observe() {\n      if (cloneCount < computeCloneCount()) {\n        emit(EVENT_REFRESH);\n      }\n    }\n    function generate(count) {\n      const slides = Slides.get().slice();\n      const { length } = slides;\n      if (length) {\n        while (slides.length < count) {\n          push(slides, slides);\n        }\n        push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n          const isHead = index < count;\n          const clone = cloneDeep(Slide.slide, index);\n          isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n          push(clones, clone);\n          Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n        });\n      }\n    }\n    function cloneDeep(elm, index) {\n      const clone = elm.cloneNode(true);\n      addClass(clone, options.classes.clone);\n      clone.id = `${Splide2.root.id}-clone${pad$1(index + 1)}`;\n      return clone;\n    }\n    function computeCloneCount() {\n      let { clones: clones2 } = options;\n      if (!Splide2.is(LOOP)) {\n        clones2 = 0;\n      } else if (!clones2) {\n        const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n        const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n        const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n        clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n      }\n      return clones2;\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Move(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n    const { resolve, orient } = Components2.Direction;\n    const { list, track } = Components2.Elements;\n    let waiting;\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n    }\n    function destroy() {\n      removeAttribute(list, \"style\");\n    }\n    function reposition() {\n      if (!isBusy()) {\n        Components2.Scroll.cancel();\n        jump(Splide2.index);\n        emit(EVENT_REPOSITIONED);\n      }\n    }\n    function move(dest, index, prev, callback) {\n      if (!isBusy()) {\n        const { set } = Splide2.state;\n        const position = getPosition();\n        const looping = dest !== index;\n        waiting = looping || options.waitForTransition;\n        set(MOVING);\n        emit(EVENT_MOVE, index, prev, dest);\n        Components2.Transition.start(dest, () => {\n          looping && jump(index);\n          waiting = false;\n          set(IDLE);\n          emit(EVENT_MOVED, index, prev, dest);\n          if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n            Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n          } else {\n            callback && callback();\n          }\n        });\n      }\n    }\n    function jump(index) {\n      translate(toPosition(index, true));\n    }\n    function translate(position, preventLoop) {\n      if (!Splide2.is(FADE)) {\n        list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n      }\n    }\n    function loop(position) {\n      if (!waiting && Splide2.is(LOOP)) {\n        const diff = orient(position - getPosition());\n        const exceededMin = exceededLimit(false, position) && diff < 0;\n        const exceededMax = exceededLimit(true, position) && diff > 0;\n        if (exceededMin || exceededMax) {\n          position = shift(position, exceededMax);\n        }\n      }\n      return position;\n    }\n    function shift(position, backwards) {\n      const excess = position - getLimit(backwards);\n      const size = sliderSize();\n      position -= sign(excess) * size * ceil(abs(excess) / size);\n      return position;\n    }\n    function cancel() {\n      waiting = false;\n      translate(getPosition());\n      Components2.Transition.cancel();\n    }\n    function toIndex(position) {\n      const Slides = Components2.Slides.get();\n      let index = 0;\n      let minDistance = Infinity;\n      for (let i = 0; i < Slides.length; i++) {\n        const slideIndex = Slides[i].index;\n        const distance = abs(toPosition(slideIndex, true) - position);\n        if (distance <= minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        } else {\n          break;\n        }\n      }\n      return index;\n    }\n    function toPosition(index, trimming) {\n      const position = orient(totalSize(index - 1) - offset(index));\n      return trimming ? trim(position) : position;\n    }\n    function getPosition() {\n      const left = resolve(\"left\");\n      return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n    }\n    function trim(position) {\n      if (options.trimSpace && Splide2.is(SLIDE)) {\n        position = clamp(position, 0, orient(sliderSize() - listSize()));\n      }\n      return position;\n    }\n    function offset(index) {\n      const { focus } = options;\n      return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n    }\n    function getLimit(max) {\n      return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n    }\n    function isBusy() {\n      return !!waiting;\n    }\n    function exceededLimit(max, position) {\n      position = isUndefined(position) ? getPosition() : position;\n      const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n      const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n      return exceededMin || exceededMax;\n    }\n    return {\n      mount,\n      destroy,\n      move,\n      jump,\n      translate,\n      shift,\n      cancel,\n      toIndex,\n      toPosition,\n      getPosition,\n      getLimit,\n      isBusy,\n      exceededLimit\n    };\n  }\n\n  function Controller(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit } = Move;\n    const { isEnough, getLength } = Components2.Slides;\n    const isLoop = Splide2.is(LOOP);\n    const isSlide = Splide2.is(SLIDE);\n    let currIndex = options.start || 0;\n    let prevIndex = currIndex;\n    let slideCount;\n    let perMove;\n    let perPage;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n    }\n    function init() {\n      slideCount = getLength(true);\n      perMove = options.perMove;\n      perPage = options.perPage;\n      currIndex = clamp(currIndex, 0, slideCount - 1);\n    }\n    function go(control, allowSameIndex, callback) {\n      const dest = parse(control);\n      if (options.useScroll) {\n        scroll(dest, true, true, options.speed, callback);\n      } else {\n        const index = loop(dest);\n        if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n          setIndex(index);\n          Move.move(dest, index, prevIndex, callback);\n        }\n      }\n    }\n    function scroll(destination, useIndex, snap, duration, callback) {\n      const dest = useIndex ? destination : toDest(destination);\n      Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n        setIndex(Move.toIndex(Move.getPosition()));\n        callback && callback();\n      });\n    }\n    function parse(control) {\n      let index = currIndex;\n      if (isString(control)) {\n        const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n        if (indicator === \"+\" || indicator === \"-\") {\n          index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n        } else if (indicator === \">\") {\n          index = number ? toIndex(+number) : getNext(true);\n        } else if (indicator === \"<\") {\n          index = getPrev(true);\n        }\n      } else {\n        if (isLoop) {\n          index = clamp(control, -perPage, slideCount + perPage - 1);\n        } else {\n          index = clamp(control, 0, getEnd());\n        }\n      }\n      return index;\n    }\n    function getNext(destination) {\n      return getAdjacent(false, destination);\n    }\n    function getPrev(destination) {\n      return getAdjacent(true, destination);\n    }\n    function getAdjacent(prev, destination) {\n      const number = perMove || (hasFocus() ? 1 : perPage);\n      const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n      if (dest === -1 && isSlide) {\n        if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n          return prev ? 0 : getEnd();\n        }\n      }\n      return destination ? dest : loop(dest);\n    }\n    function computeDestIndex(dest, from, incremental) {\n      if (isEnough()) {\n        const end = getEnd();\n        if (dest < 0 || dest > end) {\n          if (between(0, dest, from, true) || between(end, from, dest, true)) {\n            dest = toIndex(toPage(dest));\n          } else {\n            if (isLoop) {\n              dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n            } else if (options.rewind) {\n              dest = dest < 0 ? end : 0;\n            } else {\n              dest = -1;\n            }\n          }\n        } else {\n          if (!incremental && dest !== from) {\n            dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n          }\n        }\n      } else {\n        dest = -1;\n      }\n      return dest;\n    }\n    function getEnd() {\n      let end = slideCount - perPage;\n      if (hasFocus() || isLoop && perMove) {\n        end = slideCount - 1;\n      }\n      return max(end, 0);\n    }\n    function loop(index) {\n      if (isLoop) {\n        return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n      }\n      return index;\n    }\n    function toIndex(page) {\n      return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n    }\n    function toPage(index) {\n      if (!hasFocus()) {\n        index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n        index = floor(index / perPage);\n      }\n      return index;\n    }\n    function toDest(destination) {\n      const closest = Move.toIndex(destination);\n      return isSlide ? clamp(closest, 0, getEnd()) : closest;\n    }\n    function setIndex(index) {\n      if (index !== currIndex) {\n        prevIndex = currIndex;\n        currIndex = index;\n      }\n    }\n    function getIndex(prev) {\n      return prev ? prevIndex : currIndex;\n    }\n    function hasFocus() {\n      return !isUndefined(options.focus) || options.isNavigation;\n    }\n    return {\n      mount,\n      go,\n      scroll,\n      getNext,\n      getPrev,\n      getEnd,\n      setIndex,\n      getIndex,\n      toIndex,\n      toPage,\n      toDest,\n      hasFocus\n    };\n  }\n\n  const XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\n  const PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\n  const SIZE = 40;\n\n  function Arrows(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { classes, i18n } = options;\n    const { Elements, Controller } = Components2;\n    let wrapper = Elements.arrows;\n    let prev = Elements.prev;\n    let next = Elements.next;\n    let created;\n    const arrows = {};\n    function mount() {\n      init();\n      on(EVENT_UPDATED, init);\n    }\n    function init() {\n      if (options.arrows) {\n        if (!prev || !next) {\n          createArrows();\n        }\n      }\n      if (prev && next) {\n        if (!arrows.prev) {\n          const { id } = Elements.track;\n          setAttribute(prev, ARIA_CONTROLS, id);\n          setAttribute(next, ARIA_CONTROLS, id);\n          arrows.prev = prev;\n          arrows.next = next;\n          listen();\n          emit(EVENT_ARROWS_MOUNTED, prev, next);\n        } else {\n          display(wrapper, options.arrows === false ? \"none\" : \"\");\n        }\n      }\n    }\n    function destroy() {\n      if (created) {\n        remove(wrapper);\n      } else {\n        removeAttribute(prev, ALL_ATTRIBUTES);\n        removeAttribute(next, ALL_ATTRIBUTES);\n      }\n    }\n    function listen() {\n      const { go } = Controller;\n      on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n      bind(next, \"click\", () => {\n        go(\">\", true);\n      });\n      bind(prev, \"click\", () => {\n        go(\"<\", true);\n      });\n    }\n    function createArrows() {\n      wrapper = create(\"div\", classes.arrows);\n      prev = createArrow(true);\n      next = createArrow(false);\n      created = true;\n      append(wrapper, [prev, next]);\n      before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n    }\n    function createArrow(prev2) {\n      const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n      return parseHtml(arrow);\n    }\n    function update() {\n      const index = Splide2.index;\n      const prevIndex = Controller.getPrev();\n      const nextIndex = Controller.getNext();\n      const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n      prev.disabled = prevIndex < 0;\n      next.disabled = nextIndex < 0;\n      setAttribute(prev, ARIA_LABEL, prevLabel);\n      setAttribute(next, ARIA_LABEL, nextLabel);\n      emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n    }\n    return {\n      arrows,\n      mount,\n      destroy\n    };\n  }\n\n  function Autoplay(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Elements } = Components2;\n    const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n    const { isPaused } = interval;\n    let hovered;\n    let focused;\n    let paused;\n    function mount() {\n      const { autoplay } = options;\n      if (autoplay) {\n        initButton(true);\n        initButton(false);\n        listen();\n        if (autoplay !== \"pause\") {\n          play();\n        }\n      }\n    }\n    function initButton(forPause) {\n      const prop = forPause ? \"pause\" : \"play\";\n      const button = Elements[prop];\n      if (button) {\n        setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n        setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n        bind(button, \"click\", forPause ? pause : play);\n      }\n    }\n    function listen() {\n      const { root } = Elements;\n      if (options.pauseOnHover) {\n        bind(root, \"mouseenter mouseleave\", (e) => {\n          hovered = e.type === \"mouseenter\";\n          autoToggle();\n        });\n      }\n      if (options.pauseOnFocus) {\n        bind(root, \"focusin focusout\", (e) => {\n          focused = e.type === \"focusin\";\n          autoToggle();\n        });\n      }\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    }\n    function play() {\n      if (isPaused() && Components2.Slides.isEnough()) {\n        interval.start(!options.resetProgress);\n        focused = hovered = paused = false;\n        emit(EVENT_AUTOPLAY_PLAY);\n      }\n    }\n    function pause(manual = true) {\n      if (!isPaused()) {\n        interval.pause();\n        emit(EVENT_AUTOPLAY_PAUSE);\n      }\n      paused = manual;\n    }\n    function autoToggle() {\n      if (!paused) {\n        if (!hovered && !focused) {\n          play();\n        } else {\n          pause(false);\n        }\n      }\n    }\n    function update(rate) {\n      const { bar } = Elements;\n      if (bar) {\n        style(bar, \"width\", `${rate * 100}%`);\n      }\n      emit(EVENT_AUTOPLAY_PLAYING, rate);\n    }\n    return {\n      mount,\n      destroy: interval.cancel,\n      play,\n      pause,\n      isPaused\n    };\n  }\n\n  function Cover(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      if (options.cover) {\n        on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n          toggle(true, img, Slide);\n        });\n        on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n      }\n    }\n    function destroy() {\n      apply(false);\n    }\n    function apply(cover) {\n      Components2.Slides.forEach((Slide) => {\n        const img = child(Slide.container || Slide.slide, \"img\");\n        if (img && img.src) {\n          toggle(cover, img, Slide);\n        }\n      });\n    }\n    function toggle(cover, img, Slide) {\n      Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n      display(img, cover ? \"none\" : \"\");\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const BOUNCE_DIFF_THRESHOLD = 10;\n  const BOUNCE_DURATION = 600;\n  const FRICTION_FACTOR = 0.6;\n  const BASE_VELOCITY = 1.5;\n  const MIN_DURATION = 800;\n\n  function Scroll(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit, exceededLimit } = Move;\n    let interval;\n    let scrollCallback;\n    function mount() {\n      on(EVENT_MOVE, clear);\n      on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n    }\n    function scroll(destination, duration, callback, suppressConstraint) {\n      const start = getPosition();\n      let friction = 1;\n      duration = duration || computeDuration(abs(destination - start));\n      scrollCallback = callback;\n      clear();\n      interval = RequestInterval(duration, onScrolled, (rate) => {\n        const position = getPosition();\n        const target = start + (destination - start) * easing(rate);\n        const diff = (target - getPosition()) * friction;\n        Move.translate(position + diff);\n        if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n          friction *= FRICTION_FACTOR;\n          if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n            bounce(exceededLimit(false));\n          }\n        }\n      }, 1);\n      emit(EVENT_SCROLL);\n      interval.start();\n    }\n    function bounce(backwards) {\n      scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n    }\n    function onScrolled() {\n      const position = getPosition();\n      const index = Move.toIndex(position);\n      if (!between(index, 0, Splide2.length - 1)) {\n        Move.translate(Move.shift(position, index > 0), true);\n      }\n      scrollCallback && scrollCallback();\n      emit(EVENT_SCROLLED);\n    }\n    function computeDuration(distance) {\n      return max(distance / BASE_VELOCITY, MIN_DURATION);\n    }\n    function clear() {\n      if (interval) {\n        interval.cancel();\n      }\n    }\n    function cancel() {\n      if (interval && !interval.isPaused()) {\n        clear();\n        onScrolled();\n      }\n    }\n    function easing(t) {\n      const { easingFunc } = options;\n      return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n    }\n    return {\n      mount,\n      destroy: clear,\n      scroll,\n      cancel\n    };\n  }\n\n  const FRICTION = 5;\n  const LOG_INTERVAL = 200;\n  const POINTER_DOWN_EVENTS = \"touchstart mousedown\";\n  const POINTER_MOVE_EVENTS = \"touchmove mousemove\";\n  const POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\n  function Drag(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Move, Scroll, Controller } = Components2;\n    const { track } = Components2.Elements;\n    const { resolve, orient } = Components2.Direction;\n    const { getPosition, exceededLimit } = Move;\n    const listenerOptions = { passive: false, capture: true };\n    let basePosition;\n    let baseEvent;\n    let prevBaseEvent;\n    let lastEvent;\n    let isFree;\n    let dragging;\n    let hasExceeded = false;\n    let clickPrevented;\n    let disabled;\n    let target;\n    function mount() {\n      bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n      bind(track, \"click\", onClick, { capture: true });\n      bind(track, \"dragstart\", prevent);\n      on([EVENT_MOUNTED, EVENT_UPDATED], init);\n    }\n    function init() {\n      const { drag } = options;\n      disable(!drag);\n      isFree = drag === \"free\";\n    }\n    function onPointerDown(e) {\n      if (!disabled) {\n        const { noDrag } = options;\n        const isTouch = isTouchEvent(e);\n        const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n        if (isDraggable && (isTouch || !e.button)) {\n          if (!Move.isBusy()) {\n            target = isTouch ? track : window;\n            prevBaseEvent = null;\n            lastEvent = null;\n            clickPrevented = false;\n            bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n            bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n            Move.cancel();\n            Scroll.cancel();\n            save(e);\n          } else {\n            prevent(e, true);\n          }\n        }\n      }\n    }\n    function onPointerMove(e) {\n      if (!lastEvent) {\n        emit(EVENT_DRAG);\n      }\n      lastEvent = e;\n      if (e.cancelable) {\n        const diff = coordOf(e) - coordOf(baseEvent);\n        if (dragging) {\n          Move.translate(basePosition + constrain(diff));\n          const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n          const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n          if (expired || exceeded) {\n            save(e);\n          }\n          emit(EVENT_DRAGGING);\n          clickPrevented = true;\n          prevent(e);\n        } else {\n          let { dragMinThreshold: thresholds } = options;\n          thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n          dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n          if (isSliderDirection()) {\n            prevent(e);\n          }\n        }\n      }\n    }\n    function onPointerUp(e) {\n      unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n      unbind(target, POINTER_UP_EVENTS, onPointerUp);\n      if (lastEvent) {\n        if (dragging || e.cancelable && isSliderDirection()) {\n          const velocity = computeVelocity(e);\n          const destination = computeDestination(velocity);\n          if (isFree) {\n            Controller.scroll(destination);\n          } else if (Splide2.is(FADE)) {\n            Controller.go(Splide2.index + orient(sign(velocity)));\n          } else {\n            Controller.go(Controller.toDest(destination), true);\n          }\n          prevent(e);\n        }\n        emit(EVENT_DRAGGED);\n      }\n      dragging = false;\n    }\n    function save(e) {\n      prevBaseEvent = baseEvent;\n      baseEvent = e;\n      basePosition = getPosition();\n    }\n    function onClick(e) {\n      if (!disabled && clickPrevented) {\n        prevent(e, true);\n      }\n    }\n    function isSliderDirection() {\n      const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n      const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n      return diffX > diffY;\n    }\n    function computeVelocity(e) {\n      if (Splide2.is(LOOP) || !hasExceeded) {\n        const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n        const diffCoord = coordOf(lastEvent) - coordOf(base);\n        const diffTime = timeOf(e) - timeOf(base);\n        const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n        if (diffTime && isFlick) {\n          return diffCoord / diffTime;\n        }\n      }\n      return 0;\n    }\n    function computeDestination(velocity) {\n      return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n    }\n    function coordOf(e, orthogonal) {\n      return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n    }\n    function timeOf(e) {\n      return e.timeStamp;\n    }\n    function constrain(diff) {\n      return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n    }\n    function isTouchEvent(e) {\n      return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n    }\n    function isDragging() {\n      return dragging;\n    }\n    function disable(value) {\n      disabled = value;\n    }\n    return {\n      mount,\n      disable,\n      isDragging\n    };\n  }\n\n  const IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\n  function Keyboard(Splide2, Components2, options) {\n    const { on, bind, unbind } = EventInterface(Splide2);\n    const { root } = Components2.Elements;\n    const { resolve } = Components2.Direction;\n    let target;\n    function mount() {\n      init();\n      on(EVENT_UPDATED, () => {\n        destroy();\n        init();\n      });\n    }\n    function init() {\n      const { keyboard = \"global\" } = options;\n      if (keyboard) {\n        if (keyboard === \"focused\") {\n          target = root;\n          setAttribute(root, TAB_INDEX, 0);\n        } else {\n          target = window;\n        }\n        bind(target, \"keydown\", onKeydown);\n      }\n    }\n    function destroy() {\n      unbind(target, \"keydown\");\n      if (isHTMLElement(target)) {\n        removeAttribute(target, TAB_INDEX);\n      }\n    }\n    function onKeydown(e) {\n      const { key } = e;\n      const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n      if (normalizedKey === resolve(\"ArrowLeft\")) {\n        Splide2.go(\"<\");\n      } else if (normalizedKey === resolve(\"ArrowRight\")) {\n        Splide2.go(\">\");\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\n  const SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\n  const IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\n  function LazyLoad(Splide2, Components2, options) {\n    const { on, off, bind, emit } = EventInterface(Splide2);\n    const isSequential = options.lazyLoad === \"sequential\";\n    let images = [];\n    let index = 0;\n    function mount() {\n      if (options.lazyLoad) {\n        on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n          destroy();\n          init();\n        });\n        if (!isSequential) {\n          on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n        }\n      }\n    }\n    function init() {\n      Components2.Slides.forEach((_Slide) => {\n        queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n          const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n          const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n          if (src !== _img.src || srcset !== _img.srcset) {\n            const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n            setAttribute(_spinner, ROLE, \"presentation\");\n            images.push({ _img, _Slide, src, srcset, _spinner });\n            !_img.src && display(_img, \"none\");\n          }\n        });\n      });\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function destroy() {\n      index = 0;\n      images = [];\n    }\n    function observe() {\n      images = images.filter((data) => {\n        const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n        if (data._Slide.isWithin(Splide2.index, distance)) {\n          return load(data);\n        }\n        return true;\n      });\n      if (!images.length) {\n        off(EVENT_MOVED);\n      }\n    }\n    function load(data) {\n      const { _img } = data;\n      addClass(data._Slide.slide, CLASS_LOADING);\n      bind(_img, \"load error\", (e) => {\n        onLoad(data, e.type === \"error\");\n      });\n      [\"src\", \"srcset\"].forEach((name) => {\n        if (data[name]) {\n          setAttribute(_img, name, data[name]);\n          removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n        }\n      });\n    }\n    function onLoad(data, error) {\n      const { _Slide } = data;\n      removeClass(_Slide.slide, CLASS_LOADING);\n      if (!error) {\n        remove(data._spinner);\n        display(data._img, \"\");\n        emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n        emit(EVENT_RESIZE);\n      }\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function loadNext() {\n      if (index < images.length) {\n        load(images[index++]);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Pagination(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Slides, Elements, Controller } = Components2;\n    const { hasFocus, getIndex } = Controller;\n    const items = [];\n    let list;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on([EVENT_MOVE, EVENT_SCROLLED], update);\n    }\n    function init() {\n      destroy();\n      if (options.pagination && Slides.isEnough()) {\n        createPagination();\n        emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n        update();\n      }\n    }\n    function destroy() {\n      if (list) {\n        remove(list);\n        items.forEach((item) => {\n          unbind(item.button, \"click\");\n        });\n        empty(items);\n        list = null;\n      }\n    }\n    function createPagination() {\n      const { length } = Splide2;\n      const { classes, i18n, perPage } = options;\n      const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n      const max = hasFocus() ? length : ceil(length / perPage);\n      list = create(\"ul\", classes.pagination, parent);\n      for (let i = 0; i < max; i++) {\n        const li = create(\"li\", null, list);\n        const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n        const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n        const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n        bind(button, \"click\", onClick.bind(null, i));\n        setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n        setAttribute(button, ARIA_LABEL, format(text, i + 1));\n        items.push({ li, button, page: i });\n      }\n    }\n    function onClick(page) {\n      Controller.go(`>${page}`, true, () => {\n        const Slide = Slides.getAt(Controller.toIndex(page));\n        Slide && focus(Slide.slide);\n      });\n    }\n    function getAt(index) {\n      return items[Controller.toPage(index)];\n    }\n    function update() {\n      const prev = getAt(getIndex(true));\n      const curr = getAt(getIndex());\n      if (prev) {\n        removeClass(prev.button, CLASS_ACTIVE);\n        removeAttribute(prev.button, ARIA_CURRENT);\n      }\n      if (curr) {\n        addClass(curr.button, CLASS_ACTIVE);\n        setAttribute(curr.button, ARIA_CURRENT, true);\n      }\n      emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n    }\n    return {\n      items,\n      mount,\n      destroy,\n      getAt\n    };\n  }\n\n  const TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\n  function Sync(Splide2, Components2, options) {\n    const { splides } = Splide2;\n    const { list } = Components2.Elements;\n    function mount() {\n      if (options.isNavigation) {\n        navigate();\n      } else {\n        sync();\n      }\n    }\n    function destroy() {\n      removeAttribute(list, ALL_ATTRIBUTES);\n    }\n    function sync() {\n      const processed = [];\n      splides.concat(Splide2).forEach((splide, index, instances) => {\n        EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n          instances.forEach((instance) => {\n            if (instance !== splide && !includes(processed, splide)) {\n              processed.push(instance);\n              instance.go(instance.is(LOOP) ? dest : index2);\n            }\n          });\n          empty(processed);\n        });\n      });\n    }\n    function navigate() {\n      const { on, emit } = EventInterface(Splide2);\n      on(EVENT_CLICK, onClick);\n      on(EVENT_SLIDE_KEYDOWN, onKeydown);\n      on([EVENT_MOUNTED, EVENT_UPDATED], update);\n      setAttribute(list, ROLE, \"menu\");\n      emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n    }\n    function update() {\n      setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n    }\n    function onClick(Slide) {\n      Splide2.go(Slide.index);\n    }\n    function onKeydown(Slide, e) {\n      if (includes(TRIGGER_KEYS, e.key)) {\n        onClick(Slide);\n        prevent(e);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Wheel(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    function mount() {\n      if (options.wheel) {\n        bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n      }\n    }\n    function onWheel(e) {\n      const { deltaY } = e;\n      if (deltaY) {\n        Splide2.go(deltaY < 0 ? \"<\" : \">\");\n        prevent(e);\n      }\n    }\n    return {\n      mount\n    };\n  }\n\n  var ComponentConstructors = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Options: Options,\n    Direction: Direction,\n    Elements: Elements,\n    Slides: Slides,\n    Layout: Layout,\n    Clones: Clones,\n    Move: Move,\n    Controller: Controller,\n    Arrows: Arrows,\n    Autoplay: Autoplay,\n    Cover: Cover,\n    Scroll: Scroll,\n    Drag: Drag,\n    Keyboard: Keyboard,\n    LazyLoad: LazyLoad,\n    Pagination: Pagination,\n    Sync: Sync,\n    Wheel: Wheel\n  });\n\n  const I18N = {\n    prev: \"Previous slide\",\n    next: \"Next slide\",\n    first: \"Go to first slide\",\n    last: \"Go to last slide\",\n    slideX: \"Go to slide %s\",\n    pageX: \"Go to page %s\",\n    play: \"Start autoplay\",\n    pause: \"Pause autoplay\"\n  };\n\n  const DEFAULTS = {\n    type: \"slide\",\n    speed: 400,\n    waitForTransition: true,\n    perPage: 1,\n    arrows: true,\n    pagination: true,\n    interval: 5e3,\n    pauseOnHover: true,\n    pauseOnFocus: true,\n    resetProgress: true,\n    easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n    drag: true,\n    direction: \"ltr\",\n    slideFocus: true,\n    trimSpace: true,\n    focusableNodes: \"a, button, textarea, input, select, iframe\",\n    classes: CLASSES,\n    i18n: I18N\n  };\n\n  function Fade(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        nextTick(() => {\n          Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n        });\n      });\n    }\n    function start(index, done) {\n      const { track } = Components2.Elements;\n      style(track, \"height\", unit(rect(track).height));\n      nextTick(() => {\n        done();\n        style(track, \"height\", \"\");\n      });\n    }\n    return {\n      mount,\n      start,\n      cancel: noop\n    };\n  }\n\n  function Slide(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    const { Move, Controller } = Components2;\n    const { list } = Components2.Elements;\n    let endCallback;\n    function mount() {\n      bind(list, \"transitionend\", (e) => {\n        if (e.target === list && endCallback) {\n          cancel();\n          endCallback();\n        }\n      });\n    }\n    function start(index, done) {\n      const destination = Move.toPosition(index, true);\n      const position = Move.getPosition();\n      const speed = getSpeed(index);\n      if (abs(destination - position) >= 1 && speed >= 1) {\n        apply(`transform ${speed}ms ${options.easing}`);\n        Move.translate(destination, true);\n        endCallback = done;\n      } else {\n        Move.jump(index);\n        done();\n      }\n    }\n    function cancel() {\n      apply(\"\");\n    }\n    function getSpeed(index) {\n      const { rewindSpeed } = options;\n      if (Splide2.is(SLIDE) && rewindSpeed) {\n        const prev = Controller.getIndex(true);\n        const end = Controller.getEnd();\n        if (prev === 0 && index >= end || prev >= end && index === 0) {\n          return rewindSpeed;\n        }\n      }\n      return options.speed;\n    }\n    function apply(transition) {\n      style(list, \"transition\", transition);\n    }\n    return {\n      mount,\n      start,\n      cancel\n    };\n  }\n\n  const _Splide = class {\n    constructor(target, options) {\n      this.event = EventBus();\n      this.Components = {};\n      this.state = State(CREATED);\n      this.splides = [];\n      this._options = {};\n      this._Extensions = {};\n      const root = isString(target) ? query(document, target) : target;\n      assert(root, `${root} is invalid.`);\n      this.root = root;\n      merge(DEFAULTS, _Splide.defaults);\n      merge(merge(this._options, DEFAULTS), options || {});\n    }\n    mount(Extensions, Transition) {\n      const { state, Components: Components2 } = this;\n      assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n      state.set(CREATED);\n      this._Components = Components2;\n      this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n      this._Extensions = Extensions || this._Extensions;\n      const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n      forOwn(Constructors, (Component, key) => {\n        const component = Component(this, Components2, this._options);\n        Components2[key] = component;\n        component.setup && component.setup();\n      });\n      forOwn(Components2, (component) => {\n        component.mount && component.mount();\n      });\n      this.emit(EVENT_MOUNTED);\n      addClass(this.root, CLASS_INITIALIZED);\n      state.set(IDLE);\n      this.emit(EVENT_READY);\n      return this;\n    }\n    sync(splide) {\n      this.splides.push(splide);\n      splide.splides.push(this);\n      return this;\n    }\n    go(control) {\n      this._Components.Controller.go(control);\n      return this;\n    }\n    on(events, callback) {\n      this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n      return this;\n    }\n    off(events) {\n      this.event.off(events);\n      return this;\n    }\n    emit(event) {\n      this.event.emit(event, ...slice(arguments, 1));\n      return this;\n    }\n    add(slides, index) {\n      this._Components.Slides.add(slides, index);\n      return this;\n    }\n    remove(matcher) {\n      this._Components.Slides.remove(matcher);\n      return this;\n    }\n    is(type) {\n      return this._options.type === type;\n    }\n    refresh() {\n      this.emit(EVENT_REFRESH);\n      return this;\n    }\n    destroy(completely = true) {\n      const { event, state } = this;\n      if (state.is(CREATED)) {\n        event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n      } else {\n        forOwn(this._Components, (component) => {\n          component.destroy && component.destroy(completely);\n        }, true);\n        event.emit(EVENT_DESTROY);\n        event.destroy();\n        completely && empty(this.splides);\n        state.set(DESTROYED);\n      }\n      return this;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      const { _options } = this;\n      merge(_options, options);\n      if (!this.state.is(CREATED)) {\n        this.emit(EVENT_UPDATED, _options);\n      }\n    }\n    get length() {\n      return this._Components.Slides.getLength(true);\n    }\n    get index() {\n      return this._Components.Controller.getIndex();\n    }\n  };\n  let Splide = _Splide;\n  Splide.defaults = {};\n  Splide.STATES = STATES;\n\n  if (document.querySelector('#carousel')) {\n    new Splide('#carousel', {\n      pagination: false,\n      type: 'slide',\n      perPage: 4,\n      perMove: 1,\n      gap: 32,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10,\n          padding: {\n            right: 30,\n            left: 30\n          }\n        },\n        767: {\n          perPage: 1,\n          gap: 10,\n          padding: {\n            right: 30,\n            left: 30\n          }\n        },\n        1024: {\n          perPage: 2,\n          gap: 16,\n          padding: {\n            right: 0,\n            left: 0\n          }\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  if (document.querySelector('#testimonials')) {\n    new Splide('#testimonials', {\n      pagination: false,\n      type: 'slide',\n      perPage: 3,\n      perMove: 1,\n      gap: 28,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10\n        },\n        767: {\n          perPage: 2,\n          gap: 10\n        },\n        1024: {\n          perPage: 2,\n          gap: 16\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  /**\r\n   * Toggle Nav\r\n   * ======================================\r\n   * - toggle class on body\r\n   */\n  var ELEMENTS = '.togglenav__button';\n  var TOGGLE_CLASS = 'nav-is-open';\n\n  var ToggleNav = /*#__PURE__*/function () {\n    function ToggleNav() {\n      var _this = this;\n\n      _classCallCheck(this, ToggleNav);\n\n      this.elements = document.querySelectorAll(ELEMENTS);\n\n      if (!this.elements) {\n        return false;\n      }\n\n      this.elements.forEach(function (el) {\n        el.addEventListener('click', _this.toggleNav, false);\n      });\n    }\n\n    _createClass(ToggleNav, [{\n      key: \"toggleNav\",\n      value: function toggleNav(e) {\n        document.body.classList.toggle(TOGGLE_CLASS);\n        document.body.classList.toggle('lock');\n        e.preventDefault();\n      }\n    }]);\n\n    return ToggleNav;\n  }();\n\n  new ToggleNav();\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  function getCjsExportFromNamespace (n) {\n  \treturn n && n['default'] || n;\n  }\n\n  var simpleLightbox_modules = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports[\"default\"] = void 0;\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var SimpleLightbox = /*#__PURE__*/function () {\n    function SimpleLightbox(elements, options) {\n      var _this = this;\n\n      _classCallCheck(this, SimpleLightbox);\n\n      _defineProperty(this, \"defaultOptions\", {\n        sourceAttr: 'href',\n        overlay: true,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n      });\n\n      _defineProperty(this, \"transitionPrefix\", void 0);\n\n      _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n      _defineProperty(this, \"transitionCapable\", false);\n\n      _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n      _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n      _defineProperty(this, \"initialLocationHash\", void 0);\n\n      _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n      _defineProperty(this, \"isOpen\", false);\n\n      _defineProperty(this, \"isAnimating\", false);\n\n      _defineProperty(this, \"isClosing\", false);\n\n      _defineProperty(this, \"isFadeIn\", false);\n\n      _defineProperty(this, \"urlChangedOnce\", false);\n\n      _defineProperty(this, \"hashReseted\", false);\n\n      _defineProperty(this, \"historyHasChanges\", false);\n\n      _defineProperty(this, \"historyUpdateTimeout\", null);\n\n      _defineProperty(this, \"currentImage\", void 0);\n\n      _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n      _defineProperty(this, \"domNodes\", {});\n\n      _defineProperty(this, \"loadedImages\", []);\n\n      _defineProperty(this, \"initialImageIndex\", 0);\n\n      _defineProperty(this, \"currentImageIndex\", 0);\n\n      _defineProperty(this, \"initialSelector\", null);\n\n      _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n      _defineProperty(this, \"controlCoordinates\", {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n      });\n\n      this.options = Object.assign(this.defaultOptions, options);\n      this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n      if (typeof elements === 'string') {\n        this.initialSelector = elements;\n        this.elements = Array.from(document.querySelectorAll(elements));\n      } else {\n        this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n      }\n\n      this.relatedElements = [];\n      this.transitionPrefix = this.calculateTransitionPrefix();\n      this.transitionCapable = this.transitionPrefix !== false;\n      this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n      if (this.options.rel) {\n        this.elements = this.getRelated(this.options.rel);\n      }\n\n      if (this.options.uniqueImages) {\n        var imgArr = [];\n        this.elements = Array.from(this.elements).filter(function (element) {\n          var src = element.getAttribute(_this.options.sourceAttr);\n\n          if (imgArr.indexOf(src) === -1) {\n            imgArr.push(src);\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      this.createDomNodes();\n\n      if (this.options.close) {\n        this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n      }\n\n      if (this.options.nav) {\n        this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n      }\n\n      if (this.options.spinner) {\n        this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n      }\n\n      this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n        if (_this.isValidLink(event.currentTarget)) {\n          event.preventDefault();\n\n          if (_this.isAnimating) {\n            return false;\n          }\n\n          _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n          _this.openImage(event.currentTarget);\n        }\n      }); // close addEventListener click addEventListener doc\n\n      if (this.options.docClose) {\n        this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n          if (_this.isOpen && event.target === event.currentTarget) {\n            _this.close();\n          }\n        });\n      } // disable rightclick\n\n\n      if (this.options.disableRightClick) {\n        this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n          if (event.target.parentElement.classList.contains(\"sl-image\")) {\n            event.preventDefault();\n          }\n        });\n      } // keyboard-control\n\n\n      if (this.options.enableKeyboard) {\n        this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n          _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n          if (_this.isAnimating && event.key === 'Escape') {\n            _this.currentImage.setAttribute('src', '');\n\n            _this.isAnimating = false;\n            return _this.close();\n          }\n\n          if (_this.isOpen) {\n            event.preventDefault();\n\n            if (event.key === 'Escape') {\n              _this.close();\n            }\n\n            if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n              _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n            }\n          }\n        }, this.options.throttleInterval));\n      }\n\n      this.addEvents();\n    }\n\n    _createClass(SimpleLightbox, [{\n      key: \"checkPassiveEventsSupport\",\n      value: function checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          window.addEventListener(\"testPassive\", null, opts);\n          window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n\n        return supportsPassive;\n      }\n    }, {\n      key: \"createDomNodes\",\n      value: function createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = \".7\";\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n        if (this.options.captionClass) {\n          this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex', -1);\n        this.domNodes.wrapper.setAttribute('role', 'dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n        if (this.options.className) {\n          this.domNodes.wrapper.classList.add(this.options.className);\n        }\n\n        if (this.options.rtl) {\n          this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n      }\n    }, {\n      key: \"throttle\",\n      value: function throttle(func, limit) {\n        var inThrottle;\n        return function () {\n          if (!inThrottle) {\n            func.apply(this, arguments);\n            inThrottle = true;\n            setTimeout(function () {\n              return inThrottle = false;\n            }, limit);\n          }\n        };\n      }\n    }, {\n      key: \"isValidLink\",\n      value: function isValidLink(element) {\n        return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"calculateTransitionPrefix\",\n      value: function calculateTransitionPrefix() {\n        var s = (document.body || document.documentElement).style;\n        return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n      }\n    }, {\n      key: \"toggleScrollbar\",\n      value: function toggleScrollbar(type) {\n        var scrollbarWidth = 0;\n        var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n        if (type === 'hide') {\n          var fullWindowWidth = window.innerWidth;\n\n          if (!fullWindowWidth) {\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n\n          if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n            var scrollDiv = document.createElement('div'),\n                paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n            scrollDiv.classList.add('sl-scrollbar-measure');\n            document.body.appendChild(scrollDiv);\n            scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            document.body.dataset.originalPaddingRight = paddingRight;\n\n            if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n              document.body.classList.add('hidden-scroll');\n              document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n              fixedElements.forEach(function (element) {\n                var actualPadding = element.style.paddingRight;\n                var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n                element.dataset.originalPaddingRight = actualPadding;\n                element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n              });\n            }\n          }\n        } else {\n          document.body.classList.remove('hidden-scroll');\n          document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n          fixedElements.forEach(function (element) {\n            var padding = element.dataset.originalPaddingRight;\n\n            if (typeof padding !== 'undefined') {\n              element.style.paddingRight = padding;\n            }\n          });\n        }\n\n        return scrollbarWidth;\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        var _this2 = this;\n\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n          return false;\n        }\n\n        this.isClosing = true;\n        var element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n          this.historyHasChanges = false;\n\n          if (!this.hashReseted) {\n            this.resetHash();\n          }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n          if (_this2.options.disableScroll) {\n            _this2.toggleScrollbar('show');\n          }\n\n          if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n            document.querySelector('html').classList.remove(_this2.options.htmlClass);\n          }\n\n          document.body.removeChild(_this2.domNodes.wrapper);\n          document.body.removeChild(_this2.domNodes.overlay);\n          _this2.domNodes.additionalHtml = null;\n          element.dispatchEvent(new Event('closed.simplelightbox'));\n          _this2.isClosing = false;\n        });\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false; // reset touchcontrol coordinates\n\n        for (var key in this.controlCoordinates) {\n          this.controlCoordinates[key] = 0;\n        }\n\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        return window.location.hash.substring(1);\n      }\n    }, {\n      key: \"preload\",\n      value: function preload() {\n        var _this3 = this;\n\n        var index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n            prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n        nextImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            //is this condition even required... setting multiple times will not change usage...\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n        prevImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"loadImage\",\n      value: function loadImage(direction) {\n        var _this4 = this;\n\n        var slideDirection = direction;\n\n        if (this.options.rtl) {\n          direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n        var newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n          return false;\n        }\n\n        this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n        if (this.options.animationSlide) {\n          this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n        }\n\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n          _this4.isAnimating = true;\n\n          if (!_this4.isClosing) {\n            setTimeout(function () {\n              var element = _this4.relatedElements[_this4.currentImageIndex];\n\n              _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n              if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n                _this4.show(_this4.domNodes.spinner);\n              }\n\n              if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n                _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n              }\n\n              _this4.adjustImage(slideDirection);\n\n              if (_this4.options.preloading) _this4.preload();\n            }, 100);\n          } else {\n            _this4.isAnimating = false;\n          }\n        });\n      }\n    }, {\n      key: \"adjustImage\",\n      value: function adjustImage(direction) {\n        var _this5 = this;\n\n        if (!this.currentImage) {\n          return false;\n        }\n\n        var tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n        tmpImage.addEventListener('error', function (event) {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n          _this5.isAnimating = false;\n          _this5.isOpen = true;\n          _this5.domNodes.spinner.style.display = 'none';\n          var dirIsDefined = direction === 1 || direction === -1;\n\n          if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n            return _this5.close();\n          }\n\n          if (_this5.options.alertError) {\n            alert(_this5.options.alertErrorMessage);\n          }\n\n          _this5.loadImage(dirIsDefined ? direction : 1);\n        });\n        tmpImage.addEventListener('load', function (event) {\n          if (typeof direction !== 'undefined') {\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n          } // history\n\n\n          if (_this5.options.history) {\n            _this5.updateURL();\n          }\n\n          if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n            _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n          }\n\n          var imageWidth = event.target.width,\n              imageHeight = event.target.height;\n\n          if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n            var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n            imageWidth /= ratio;\n            imageHeight /= ratio;\n          }\n\n          _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n          _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n          _this5.domNodes.image.style.width = imageWidth + 'px';\n          _this5.domNodes.image.style.height = imageHeight + 'px';\n          _this5.domNodes.spinner.style.display = 'none';\n\n          if (_this5.options.focus) {\n            _this5.forceFocus();\n          }\n\n          _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n            if (_this5.options.focus) {\n              _this5.domNodes.wrapper.focus();\n            }\n          });\n\n          _this5.isOpen = true;\n          var captionContainer, captionText;\n\n          if (typeof _this5.options.captionSelector === 'string') {\n            captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n          } else if (typeof _this5.options.captionSelector === 'function') {\n            captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n          }\n\n          if (_this5.options.captions && captionContainer) {\n            if (_this5.options.captionType === 'data') {\n              captionText = captionContainer.dataset[_this5.options.captionsData];\n            } else if (_this5.options.captionType === 'text') {\n              captionText = captionContainer.innerHTML;\n            } else {\n              captionText = captionContainer.getAttribute(_this5.options.captionsData);\n            }\n          }\n\n          if (!_this5.options.loop) {\n            if (_this5.currentImageIndex === 0) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n\n            if (_this5.currentImageIndex > 0) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n          } else {\n            if (_this5.relatedElements.length === 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            } else {\n              _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            }\n          }\n\n          if (direction === 1 || direction === -1) {\n            if (_this5.options.animationSlide) {\n              _this5.slide(0, 100 * direction + 'px');\n\n              setTimeout(function () {\n                _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n              }, 50);\n            }\n\n            _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n              _this5.isAnimating = false;\n\n              _this5.setCaption(captionText, imageWidth);\n            });\n          } else {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          }\n\n          if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n            _this5.domNodes.additionalHtml = document.createElement('div');\n\n            _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n            _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n            _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n          }\n        });\n      }\n    }, {\n      key: \"zoomPanElement\",\n      value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n      }\n    }, {\n      key: \"minMax\",\n      value: function minMax(value, min, max) {\n        return value < min ? min : value > max ? max : value;\n      }\n    }, {\n      key: \"setZoomData\",\n      value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n      }\n    }, {\n      key: \"hashchangeHandler\",\n      value: function hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n          this.hashReseted = true;\n          this.close();\n        }\n      }\n    }, {\n      key: \"addEvents\",\n      value: function addEvents() {\n        var _this6 = this;\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n          //this.adjustImage.bind(this)\n          if (_this6.isOpen) {\n            _this6.adjustImage();\n          }\n        });\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n          setTimeout(function () {\n            _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n              if (_this6.isOpen) {\n                _this6.hashchangeHandler();\n              }\n            });\n          }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n          if (!event.currentTarget.tagName.match(/button/i)) {\n            return true;\n          }\n\n          event.preventDefault();\n          _this6.controlCoordinates.swipeDiff = 0;\n\n          _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n          var scale = 1;\n          this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n            if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n              return true;\n            }\n\n            if (_this6.controlCoordinates.containerHeight == 0) {\n              _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n              _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n              _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n              _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n              _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n              _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            }\n\n            event.preventDefault();\n            var delta = event.delta || event.wheelDelta;\n\n            if (delta === undefined) {\n              //we are on firefox\n              delta = event.detail;\n            }\n\n            delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n            // apply zoom\n\n            scale += delta * _this6.options.scrollZoomFactor * scale;\n            scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n            _this6.controlCoordinates.targetScale = scale;\n            _this6.controlCoordinates.pinchOffsetX = event.pageX;\n            _this6.controlCoordinates.pinchOffsetY = event.pageY;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n            if (_this6.controlCoordinates.targetScale > 1) {\n              _this6.controlCoordinates.zoomed = true;\n\n              if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            } else {\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n            _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n            _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n          if (event.target.tagName === 'A' && event.type === 'touchstart') {\n            return true;\n          }\n\n          if (event.type === 'mousedown') {\n            event.preventDefault();\n            _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            _this6.controlCoordinates.capture = true;\n          } else {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n            if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                if (!_this6.controlCoordinates.doubleTapped) {\n                  _this6.controlCoordinates.doubleTapped = true;\n                  setTimeout(function () {\n                    _this6.controlCoordinates.doubleTapped = false;\n                  }, 300);\n                } else {\n                  _this6.currentImage.classList.add('sl-transition');\n\n                  if (!_this6.controlCoordinates.zoomed) {\n                    _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n\n                    _this6.controlCoordinates.zoomed = true;\n                  } else {\n                    _this6.controlCoordinates.initialScale = 1;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    _this6.controlCoordinates.zoomed = false;\n                  }\n\n                  setTimeout(function () {\n                    if (_this6.currentImage) {\n                      _this6.currentImage.classList.remove('sl-transition');\n                    }\n                  }, 200);\n                  return false;\n                }\n\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              } else if (_this6.controlCoordinates.touchCount === 2)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n                _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n                _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n                _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n              }\n\n            _this6.controlCoordinates.capture = true;\n          }\n\n          if (_this6.controlCoordinates.mousedown) return true;\n\n          if (_this6.transitionCapable) {\n            _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n          }\n\n          _this6.controlCoordinates.mousedown = true;\n          _this6.controlCoordinates.swipeDiff = 0;\n          _this6.controlCoordinates.swipeYDiff = 0;\n          _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n          return false;\n        });\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n          if (!_this6.controlCoordinates.mousedown) {\n            return true;\n          }\n\n          if (event.type === 'touchmove') {\n            if (_this6.controlCoordinates.capture === false) {\n              return false;\n            }\n\n            _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.touchmoveCount++;\n\n            if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n                if (_this6.controlCoordinates.initialPinchDistance === null) {\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                }\n\n                if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                  /* Initialize helpers */\n                  _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                  _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                  _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                  _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                  _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                  _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                  _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                  if (_this6.controlCoordinates.targetScale > 1) {\n                    _this6.controlCoordinates.zoomed = true;\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n                  }\n\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                  _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                  _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                  _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                }\n              } else {\n              _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n              _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n              _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n              _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n              _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n              }\n\n              _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n              _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n            }\n          }\n          /* Mouse Move implementation */\n\n\n          if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n            if (event.type == 'touchmove') return true;\n            event.preventDefault();\n            if (_this6.controlCoordinates.capture === false) return false;\n            _this6.controlCoordinates.pointerOffsetX = event.clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.clientY;\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n            _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n            _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n            _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n            if (_this6.options.animationSlide) {\n              _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n          if (_this6.isTouchDevice && event.type === 'touchend') {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n\n            if (_this6.controlCoordinates.touchCount === 0)\n              /* No touch */\n              {\n                /* Set attributes */\n                if (_this6.currentImage) {\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n                }\n\n                if (_this6.controlCoordinates.initialScale === 1) {\n                  _this6.controlCoordinates.zoomed = false;\n\n                  if (_this6.domNodes.caption.style.display === 'none') {\n                    _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = null;\n                _this6.controlCoordinates.capture = false;\n              } else if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n              } else if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPinchDistance = null;\n              }\n          }\n\n          if (_this6.controlCoordinates.mousedown) {\n            _this6.controlCoordinates.mousedown = false;\n            var possibleDir = true;\n\n            if (!_this6.options.loop) {\n              if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n                possibleDir = false;\n              }\n\n              if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n                possibleDir = false;\n              }\n            }\n\n            if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n              _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n            } else if (_this6.options.animationSlide) {\n              _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n            }\n\n            if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n              _this6.close();\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n          if (_this6.isTouchDevice) return;\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          _this6.currentImage.classList.add('sl-transition');\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n\n            _this6.controlCoordinates.zoomed = true;\n          } else {\n            _this6.controlCoordinates.initialScale = 1;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            _this6.controlCoordinates.zoomed = false;\n\n            if (_this6.domNodes.caption.style.display === 'none') {\n              _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          }\n\n          setTimeout(function () {\n            if (_this6.currentImage) {\n              _this6.currentImage.classList.remove('sl-transition');\n\n              _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n            }\n          }, 200);\n          _this6.controlCoordinates.capture = true;\n          return false;\n        });\n      }\n    }, {\n      key: \"getDimensions\",\n      value: function getDimensions(element) {\n        var styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n          height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n          width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n      }\n    }, {\n      key: \"updateHash\",\n      value: function updateHash() {\n        var newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n          window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n          // what is the browser target of this?\n          if (this.historyHasChanges) {\n            window.location.replace(newURL);\n          } else {\n            window.location.hash = newHash;\n          }\n        }\n\n        if (!this.historyHasChanges) {\n          this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n      }\n    }, {\n      key: \"resetHash\",\n      value: function resetHash() {\n        this.hashReseted = true;\n\n        if (this.urlChangedOnce) {\n          history.back();\n        } else {\n          if (this.pushStateSupport) {\n            history.pushState('', document.title, window.location.pathname + window.location.search);\n          } else {\n            window.location.hash = '';\n          }\n        } //\n        //in case an history operation is still pending\n\n\n        clearTimeout(this.historyUpdateTimeout);\n      }\n    }, {\n      key: \"updateURL\",\n      value: function updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n\n        if (!this.historyHasChanges) {\n          this.updateHash(); // first time\n        } else {\n          this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n      }\n    }, {\n      key: \"setCaption\",\n      value: function setCaption(captionText, imageWidth) {\n        var _this7 = this;\n\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n          this.hide(this.domNodes.caption);\n          this.domNodes.caption.style.width = imageWidth + 'px';\n          this.domNodes.caption.innerHTML = captionText;\n          this.domNodes.image.appendChild(this.domNodes.caption);\n          setTimeout(function () {\n            _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n          }, this.options.captionDelay);\n        }\n      }\n    }, {\n      key: \"slide\",\n      value: function slide(speed, pos) {\n        if (!this.transitionCapable) {\n          return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n      }\n    }, {\n      key: \"getRelated\",\n      value: function getRelated(rel) {\n        var elems;\n\n        if (rel && rel !== false && rel !== 'nofollow') {\n          elems = Array.from(this.elements).filter(function (element) {\n            return element.getAttribute('rel') === rel;\n          });\n        } else {\n          elems = this.elements;\n        }\n\n        return elems;\n      }\n    }, {\n      key: \"openImage\",\n      value: function openImage(element) {\n        var _this8 = this;\n\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n          this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n          document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n        if (this.options.overlay) {\n          document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n          if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.removeChild(this.domNodes.counter);\n          } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.appendChild(this.domNodes.counter);\n          }\n        }\n\n        this.isAnimating = true;\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n        var targetURL = element.getAttribute(this.options.sourceAttr);\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n          this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n        this.domNodes.image.appendChild(this.currentImage);\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n        this.adjustImage();\n\n        if (this.options.preloading) {\n          this.preload();\n        }\n\n        setTimeout(function () {\n          element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n        }, this.options.animationSpeed);\n      }\n    }, {\n      key: \"forceFocus\",\n      value: function forceFocus() {\n        var _this9 = this;\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n          if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n            _this9.domNodes.wrapper.focus();\n          }\n        });\n      } // utility\n\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator = _createForOfIteratorHelper(elements),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var element = _step.value;\n\n            if (!element.namespaces) {\n              element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n\n            var _iterator2 = _createForOfIteratorHelper(events),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var event = _step2.value;\n                var options = opts || false;\n                var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                  if (_typeof(options) === 'object') {\n                    options.passive = true;\n                  } else {\n                    options = {\n                      passive: true\n                    };\n                  }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator3 = _createForOfIteratorHelper(elements),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var element = _step3.value;\n\n            var _iterator4 = _createForOfIteratorHelper(events),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var event = _step4.value;\n\n                if (element.namespaces && element.namespaces[event]) {\n                  element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                  delete element.namespaces[event];\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }, {\n      key: \"fadeOut\",\n      value: function fadeOut(elements, duration, callback) {\n        var _this10 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator5 = _createForOfIteratorHelper(elements),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var element = _step5.value;\n            element.style.opacity = 1;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        this.isFadeIn = false;\n\n        var step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if ((currentOpacity -= step) < 0) {\n            var _iterator6 = _createForOfIteratorHelper(elements),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var element = _step6.value;\n                element.style.display = \"none\"; // element.style.opacity = '';\n\n                element.style.opacity = 1;\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            callback && callback.call(_this10, elements);\n          } else {\n            var _iterator7 = _createForOfIteratorHelper(elements),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _element = _step7.value;\n                _element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n\n            requestAnimationFrame(fade);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"fadeIn\",\n      value: function fadeIn(elements, duration, callback, display) {\n        var _this11 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator8 = _createForOfIteratorHelper(elements),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var element = _step8.value;\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        this.isFadeIn = true;\n\n        var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if (!((currentOpacity += step) > opacityTarget)) {\n            var _iterator9 = _createForOfIteratorHelper(elements),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var element = _step9.value;\n                element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n\n            if (!_this11.isFadeIn) return;\n            requestAnimationFrame(fade);\n          } else {\n            var _iterator10 = _createForOfIteratorHelper(elements),\n                _step10;\n\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var _element2 = _step10.value;\n                _element2.style.opacity = '';\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n\n            callback && callback.call(_this11, elements);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"hide\",\n      value: function hide(elements) {\n        elements = this.wrap(elements);\n\n        var _iterator11 = _createForOfIteratorHelper(elements),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var element = _step11.value;\n\n            if (element.style.display != 'none') {\n              element.dataset.initialDisplay = element.style.display;\n            }\n\n            element.style.display = 'none';\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n    }, {\n      key: \"show\",\n      value: function show(elements, display) {\n        elements = this.wrap(elements);\n\n        var _iterator12 = _createForOfIteratorHelper(elements),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var element = _step12.value;\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      }\n    }, {\n      key: \"wrap\",\n      value: function wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n      }\n    }, {\n      key: \"on\",\n      value: function on(events, callback) {\n        events = this.wrap(events);\n\n        var _iterator13 = _createForOfIteratorHelper(this.elements),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var element = _step13.value;\n\n            if (!element.fullyNamespacedEvents) {\n              element.fullyNamespacedEvents = {};\n            }\n\n            var _iterator14 = _createForOfIteratorHelper(events),\n                _step14;\n\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var event = _step14.value;\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n\n        return this;\n      }\n    }, {\n      key: \"off\",\n      value: function off(events) {\n        events = this.wrap(events);\n\n        var _iterator15 = _createForOfIteratorHelper(this.elements),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var element = _step15.value;\n\n            var _iterator16 = _createForOfIteratorHelper(events),\n                _step16;\n\n            try {\n              for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                var event = _step16.value;\n\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                  element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n              }\n            } catch (err) {\n              _iterator16.e(err);\n            } finally {\n              _iterator16.f();\n            }\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n\n        return this;\n      } // api\n\n    }, {\n      key: \"open\",\n      value: function open(elem) {\n        elem = elem || this.elements[0];\n\n        if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n          elem = elem.get(0);\n        }\n\n        this.initialImageIndex = this.elements.indexOf(elem);\n\n        if (this.initialImageIndex > -1) {\n          this.openImage(elem);\n        }\n      }\n    }, {\n      key: \"next\",\n      value: function next() {\n        this.loadImage(1);\n      }\n    }, {\n      key: \"prev\",\n      value: function prev() {\n        this.loadImage(-1);\n      } // get some useful data\n\n    }, {\n      key: \"getLighboxData\",\n      value: function getLighboxData() {\n        return {\n          currentImageIndex: this.currentImageIndex,\n          currentImage: this.currentImage,\n          globalScrollbarWidth: this.globalScrollbarWidth\n        };\n      } //close is exposed anyways..\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        //remove all custom event listeners from elements\n        this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n        this.close();\n\n        if (this.isOpen) {\n          document.body.removeChild(this.domNodes.wrapper);\n          document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n      }\n    }, {\n      key: \"refresh\",\n      value: function refresh() {\n        if (!this.initialSelector) {\n          throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        var options = this.options,\n            selector = this.initialSelector;\n        this.destroy();\n        this.constructor(selector, options);\n        return this;\n      }\n    }]);\n\n    return SimpleLightbox;\n  }();\n\n  var _default = SimpleLightbox;\n  exports[\"default\"] = _default;\n  commonjsGlobal.SimpleLightbox = SimpleLightbox;\n  });\n\n  var SimpleLightbox = unwrapExports(simpleLightbox_modules);\n\n  new SimpleLightbox('.gallery__fancybox', {\n    /* options */\n  });\n\n  /**\n   * Sticky Sidebar v2 JavaScript Plugin.\n   * @version 1.0.1\n   * @author Øystein Blixhavn <oystein@blixhavn.no>\n   * @license The MIT License (MIT)\n   */\n  const StickySidebar = (() => {\n\n      // ---------------------------------\n      // # Define Constants\n      // ---------------------------------\n      //\n      const EVENT_KEY = '.stickySidebar';\n\n      const DEFAULTS = {\n        /**\n         * Additional top spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        topSpacing: 0,\n\n        /**\n         * Additional bottom spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        bottomSpacing: 0,\n\n        /**\n         * Container sidebar selector to know what the beginning and end of sticky element.\n         * @type {String|False}\n         */\n        containerSelector: false,\n\n        /**\n         * Parent element where the scrolling happens.\n         */\n        scrollContainer: false,\n\n        /**\n         * Inner wrapper selector.\n         * @type {String}\n         */\n        innerWrapperSelector: '.inner-wrapper-sticky',\n\n        /**\n         * The name of CSS class to apply to elements when they have become stuck.\n         * @type {String|False}\n         */\n        stickyClass: 'is-affixed',\n\n        /**\n         * The sidebar returns to its normal position if its width below this value.\n         * @type {Numeric}\n         */\n        minWidth: false\n      };\n\n      // ---------------------------------\n      // # Class Definition\n      // ---------------------------------\n      //\n      /**\n       * Sticky Sidebar Class.\n       * @public\n       */\n      class StickySidebar{\n\n        /**\n         * Sticky Sidebar Constructor.\n         * @constructor\n         * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n         * @param {Object} options - The options of sticky sidebar.\n         */\n        constructor(sidebar, options = {}){\n          this.options = StickySidebar.extend(DEFAULTS, options);\n\n          // Sidebar element query if there's no one, throw error.\n          this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n          if( 'undefined' === typeof this.sidebar )\n            throw new Error(\"There is no specific sidebar element.\");\n\n          this.sidebarInner = false;\n          this.container = this.sidebar.parentElement;\n\n          // Current Affix Type of sidebar element.\n          this.affixedType = 'STATIC';\n          this.direction = 'down';\n          this.support = {\n            transform:   false,\n            transform3d: false\n          };\n\n          this._initialized = false;\n          this._reStyle = false;\n          this._breakpoint = false;\n\n          // Dimensions of sidebar, container and screen viewport.\n          this.dimensions = {\n            translateY: 0,\n            maxTranslateY: 0,\n            topSpacing: 0,\n            lastTopSpacing: 0,\n            bottomSpacing: 0,\n            lastBottomSpacing: 0,\n            sidebarHeight: 0,\n            sidebarWidth: 0,\n            containerTop: 0,\n            containerHeight: 0,\n            viewportHeight: 0,\n            viewportTop: 0,\n            lastViewportTop: 0,\n          };\n\n          // Bind event handlers for referencability.\n          ['handleEvent'].forEach( (method) => {\n            this[method] = this[method].bind(this);\n          });\n\n          // Initialize sticky sidebar for first time.\n          this.initialize();\n        }\n\n        /**\n         * Initializes the sticky sidebar by adding inner wrapper, define its container,\n         * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n         * @private\n         */\n        initialize(){\n          this._setSupportFeatures();\n\n          // Get sticky sidebar inner wrapper, if not found, will create one.\n          if( this.options.innerWrapperSelector ){\n            this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n            if( null === this.sidebarInner )\n              this.sidebarInner = false;\n          }\n\n          if( ! this.sidebarInner ){\n            let wrapper = document.createElement('div');\n            wrapper.setAttribute('class', 'inner-wrapper-sticky');\n            this.sidebar.appendChild(wrapper);\n\n            while( this.sidebar.firstChild != wrapper )\n              wrapper.appendChild(this.sidebar.firstChild);\n\n            this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n          }\n\n          // Container wrapper of the sidebar.\n          if( this.options.containerSelector ){\n            let containers = document.querySelectorAll(this.options.containerSelector);\n            containers = Array.prototype.slice.call(containers);\n\n            containers.forEach((container, item) => {\n              if( ! container.contains(this.sidebar) ) return;\n              this.container = container;\n            });\n\n            if( ! containers.length )\n              throw new Error(\"The container does not contains on the sidebar.\");\n          }\n\n          // Get scroll container, if provided\n          this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n          // If top/bottom spacing is not function parse value to integer.\n          if( 'function' !== typeof this.options.topSpacing )\n            this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n          if( 'function' !== typeof this.options.bottomSpacing )\n            this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n          // Breakdown sticky sidebar if screen width below `options.minWidth`.\n          this._widthBreakpoint();\n\n          // Calculate dimensions of sidebar, container and viewport.\n          this.calcDimensions();\n\n          // Affix sidebar in proper position.\n          this.stickyPosition();\n\n          // Bind all events.\n          this.bindEvents();\n\n          // Inform other properties the sticky sidebar is initialized.\n          this._initialized = true;\n        }\n\n        /**\n         * Bind all events of sticky sidebar plugin.\n         * @protected\n         */\n        bindEvents(){\n          this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n          this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n          this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n          this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n          if( 'undefined' !== typeof ResizeObserver ){\n            const resizeObserver = new ResizeObserver(() => this.handleEvent());\n            resizeObserver.observe(this.sidebarInner);\n            resizeObserver.observe(this.container);\n          }\n        }\n\n        /**\n         * Handles all events of the plugin.\n         * @param {Object} event - Event object passed from listener.\n         */\n        handleEvent(event){\n          this.updateSticky(event);\n        }\n\n        /**\n         * Calculates dimensions of sidebar, container and screen viewpoint\n         * @public\n         */\n        calcDimensions(){\n          if( this._breakpoint ) return;\n          var dims = this.dimensions;\n\n          // Container of sticky sidebar dimensions.\n          dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n          dims.containerHeight = this.container.clientHeight;\n          dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n          // Sidebar dimensions.\n          dims.sidebarHeight = this.sidebarInner.offsetHeight;\n          dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n          // Screen viewport dimensions.\n          dims.viewportHeight = window.innerHeight;\n\n          // Maximum sidebar translate Y.\n          dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n          this._calcDimensionsWithScroll();\n        }\n\n        /**\n         * Some dimensions values need to be up-to-date when scrolling the page.\n         * @private\n         */\n        _calcDimensionsWithScroll(){\n          var dims = this.dimensions;\n\n          dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n          if (this.scrollContainer) {\n            dims.viewportTop = this.scrollContainer.scrollTop;\n            dims.viewportLeft = this.scrollContainer.scrollLeft;\n          } else {\n            dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n            dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n          }\n          dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n          dims.topSpacing    = this.options.topSpacing;\n          dims.bottomSpacing = this.options.bottomSpacing;\n\n          if( 'function' === typeof dims.topSpacing )\n              dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n          if( 'function' === typeof dims.bottomSpacing )\n              dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n          if( 'VIEWPORT-TOP' === this.affixedType ){\n            // Adjust translate Y in the case decrease top spacing value.\n            if( dims.topSpacing < dims.lastTopSpacing ){\n              dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n              this._reStyle = true;\n            }\n          } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n            // Adjust translate Y in the case decrease bottom spacing value.\n            if( dims.bottomSpacing < dims.lastBottomSpacing ){\n              dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n              this._reStyle = true;\n            }\n          }\n\n          dims.lastTopSpacing    = dims.topSpacing;\n          dims.lastBottomSpacing = dims.bottomSpacing;\n        }\n\n        /**\n         * Determine whether the sidebar is bigger than viewport.\n         * @public\n         * @return {Boolean}\n         */\n        isSidebarFitsViewport() {\n          return this.dimensions.viewportHeight >= (\n            this.dimensions.lastBottomSpacing +\n            this.dimensions.lastTopSpacing +\n            this.dimensions.sidebarHeight\n          );\n        }\n\n        /**\n         * Observe browser scrolling direction top and down.\n         */\n        observeScrollDir(){\n          var dims = this.dimensions;\n          if( dims.lastViewportTop === dims.viewportTop ) return;\n\n          var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n          // If the browser is scrolling not in the same direction.\n          if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n            this.direction = 'down' === this.direction ?  'up' : 'down';\n        }\n\n        /**\n         * Gets affix type of sidebar according to current scroll top and scrolling direction.\n         * @public\n         * @return {String|False} - Proper affix type.\n         */\n        getAffixType(){\n          this._calcDimensionsWithScroll();\n          var dims = this.dimensions;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var affixType = this.affixedType;\n\n         if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n            dims.translateY = 0;\n            affixType = 'STATIC';\n          } else {\n            affixType = ( 'up' === this.direction ) ?\n              this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n          }\n\n          // Make sure the translate Y is not bigger than container height.\n          dims.translateY = Math.max(0, dims.translateY);\n          dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n          dims.translateY = Math.round(dims.translateY);\n\n          dims.lastViewportTop = dims.viewportTop;\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling down.\n         * @private\n         * @return {String} - Proper affix type of scrolling down direction.\n         */\n        _getAffixTypeScrollingDown(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( this.isSidebarFitsViewport() ){\n            if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( colliderTop >= dims.containerTop ){\n              dims.translateY = colliderTop - dims.containerTop;\n              affixType = 'VIEWPORT-TOP';\n            }\n          } else {\n            if( dims.containerBottom <= colliderBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n              dims.translateY = colliderBottom - sidebarBottom;\n              affixType = 'VIEWPORT-BOTTOM';\n\n            } else if( dims.containerTop + dims.translateY <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling up.\n         * @private\n         * @return {String} - Proper affix type of scrolling up direction.\n         */\n        _getAffixTypeScrollingUp(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( colliderTop <= dims.translateY + dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n\n          } else if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( ! this.isSidebarFitsViewport() ){\n\n            if( dims.containerTop <= colliderTop &&\n                (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Gets inline style of sticky sidebar wrapper and inner wrapper according\n         * to its affix type.\n         * @private\n         * @param {String} affixType - Affix type of sticky sidebar.\n         * @return {Object}\n         */\n        _getStyle(affixType){\n          if( 'undefined' === typeof affixType ) return;\n\n          var style = {inner: {}, outer: {}};\n          var dims = this.dimensions;\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n              style.inner = {position: 'fixed', top: dims.topSpacing,\n                    left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n              break;\n            case 'VIEWPORT-BOTTOM':\n              style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                    bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n              break;\n            case 'CONTAINER-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n              let translate = this._getTranslate(0, dims.translateY + 'px');\n\n              if( translate )\n                style.inner = {transform: translate};\n              else\n                style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n              break;\n          }\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n            case 'VIEWPORT-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n            case 'CONTAINER-BOTTOM':\n              style.outer = {height: dims.sidebarHeight, position: 'relative'};\n              break;\n          }\n\n          style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n          style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n              bottom: '', width: '',  transform: ''}, style.inner);\n\n          return style;\n        }\n\n        /**\n         * Cause the sidebar to be sticky according to affix type by adding inline\n         * style, adding helper class and trigger events.\n         * @function\n         * @protected\n         * @param {string} force - Update sticky sidebar position by force.\n         */\n        stickyPosition(force){\n          if( this._breakpoint ) return;\n\n          force = this._reStyle || force || false;\n\n          this.options.topSpacing;\n          this.options.bottomSpacing;\n\n          var affixType = this.getAffixType();\n          var style = this._getStyle(affixType);\n\n          if( (this.affixedType != affixType || force) && affixType ){\n            let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n            if( 'STATIC' === affixType )\n              StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            else\n              StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n            for( let key in style.outer ){\n              let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n              this.sidebar.style[key] = style.outer[key] + unit;\n            }\n\n            for( let key in style.inner ){\n              let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n              this.sidebarInner.style[key] = style.inner[key] + unit;\n            }\n\n            let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n          } else {\n            if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n          }\n\n          this.affixedType = affixType;\n        }\n\n        /**\n         * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n         * @protected\n         */\n        _widthBreakpoint(){\n\n          if( window.innerWidth <= this.options.minWidth ){\n            this._breakpoint = true;\n            this.affixedType = 'STATIC';\n\n            this.sidebar.removeAttribute('style');\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            this.sidebarInner.removeAttribute('style');\n          } else {\n            this._breakpoint = false;\n          }\n        }\n\n        /**\n         * Switches between functions stack for each event type, if there's no\n         * event, it will re-initialize sticky sidebar.\n         * @public\n         */\n        updateSticky(event = {}){\n          if( this._running ) return;\n          this._running = true;\n\n          ((eventType) => {\n            requestAnimationFrame(() => {\n              switch( eventType ){\n                // When browser is scrolling and re-calculate just dimensions\n                // within scroll.\n                case 'scroll':\n                  this._calcDimensionsWithScroll();\n                  this.observeScrollDir();\n                  this.stickyPosition();\n                  break;\n\n                // When browser is resizing or there's no event, observe width\n                // breakpoint and re-calculate dimensions.\n                case 'resize':\n                default:\n                  this._widthBreakpoint();\n                  this.calcDimensions();\n                  this.stickyPosition(true);\n                  break;\n              }\n              this._running = false;\n            });\n          })(event.type);\n        }\n\n        /**\n         * Set browser support features to the public property.\n         * @private\n         */\n        _setSupportFeatures(){\n          var support = this.support;\n\n          support.transform = StickySidebar.supportTransform();\n          support.transform3d = StickySidebar.supportTransform(true);\n        }\n\n        /**\n         * Get translate value, if the browser supports transfrom3d, it will adopt it.\n         * and the same with translate. if browser doesn't support both return false.\n         * @param {Number} y - Value of Y-axis.\n         * @param {Number} x - Value of X-axis.\n         * @param {Number} z - Value of Z-axis.\n         * @return {String|False}\n         */\n        _getTranslate(y = 0, x = 0, z = 0){\n          if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n          else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n          else return false;\n        }\n\n        /**\n         * Destroy sticky sidebar plugin.\n         * @public\n         */\n        destroy(){\n          window.removeEventListener('resize', this, {capture: false});\n          window.removeEventListener('scroll', this, {capture: false});\n\n          this.sidebar.classList.remove(this.options.stickyClass);\n          this.sidebar.style.minHeight = '';\n\n          this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n          var styleReset = {inner: {}, outer: {}};\n\n          styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n          styleReset.outer = {height: '', position: ''};\n\n          for( let key in styleReset.outer )\n            this.sidebar.style[key] = styleReset.outer[key];\n\n          for( let key in styleReset.inner )\n            this.sidebarInner.style[key] = styleReset.inner[key];\n\n          if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n            ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n            ResizeSensor.detach(this.container, this.handleEvent);\n          }\n        }\n\n        /**\n         * Determine if the browser supports CSS transform feature.\n         * @function\n         * @static\n         * @param {Boolean} transform3d - Detect transform with translate3d.\n         * @return {String}\n         */\n        static supportTransform(transform3d){\n          var result = false,\n              property = (transform3d) ? 'perspective' : 'transform',\n              upper = property.charAt(0).toUpperCase() + property.slice(1),\n              prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n              support = document.createElement('support'),\n              style = support.style;\n\n          (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n            if (style[property] !== undefined) {\n              result = property;\n              return false;\n            }\n          });\n          return result;\n        }\n\n        /**\n         * Trigger custom event.\n         * @static\n         * @param {DOMObject} element - Target element on the DOM.\n         * @param {String} eventName - Event name.\n         * @param {Object} data -\n         */\n        static eventTrigger(element, eventName, data){\n          try{\n            var event = new CustomEvent(eventName, {detail: data});\n          } catch(e){\n            var event = document.createEvent('CustomEvent');\n            event.initCustomEvent(eventName, true, true, data);\n          }\n          element.dispatchEvent(event);\n        }\n\n        /**\n         * Extend options object with defaults.\n         * @function\n         * @static\n         */\n        static extend(defaults, options){\n          var results = {};\n          for( let key in defaults ){\n            if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n            else results[key] = defaults[key];\n          }\n          return results;\n        }\n\n        /**\n         * Get current coordinates left and top of specific element.\n         * @static\n         */\n        static offsetRelative(element){\n          var result = {left: 0, top: 0};\n\n          do{\n            let offsetTop = element.offsetTop;\n            let offsetLeft = element.offsetLeft;\n\n            if( ! isNaN(offsetTop) )\n              result.top += offsetTop;\n\n            if( ! isNaN(offsetLeft) )\n              result.left += offsetLeft;\n\n            element = ( 'BODY' === element.tagName ) ?\n                        element.parentElement : element.offsetParent;\n          } while(element)\n          return result;\n        }\n\n        /**\n         * Add specific class name to specific element.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static addClass(element, className){\n          if( ! StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.add(className);\n            else\n              element.className += ' ' + className;\n          }\n        }\n\n        /**\n         * Remove specific class name to specific element\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static removeClass(element, className){\n          if( StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.remove(className);\n            else\n              element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n          }\n        }\n\n        /**\n         * Determine weather the element has specific class name.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static hasClass(element, className){\n          if (element.classList)\n            return element.classList.contains(className);\n          else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n\n        /**\n         * Gets default values of configuration options.\n         * @static\n         * @return {Object}\n         */\n        static get defaults(){\n          return DEFAULTS;\n        }\n      }\n\n      return StickySidebar;\n    })();\n\n    // Global\n    // -------------------------\n    window.StickySidebar = StickySidebar;\n\n  if (document.querySelector('.sidebar')) {\n    new StickySidebar('.sidebar', {\n      containerSelector: '.layout',\n      innerWrapperSelector: '.sidebar__inner',\n      topSpacing: 30,\n      bottomSpacing: 20\n    });\n  }\n\n  var objectExtend = extend;\n\n  /*\n    var obj = {a: 3, b: 5};\n    extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 4, b: 5, c: 8}\n\n    var obj = {a: 3, b: 5};\n    extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 3, b: 5}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n    extend({a: 4, b: 5}); // {a: 4, b: 5}\n    extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n    extend({a: 4, b: 5}, true); {a: 4, b: 5}\n    extend('hello', {a: 4, b: 5}); // throws\n    extend(3, {a: 4, b: 5}); // throws\n  */\n\n  function extend(/* [deep], obj1, obj2, [objn] */) {\n    var args = [].slice.call(arguments);\n    var deep = false;\n    if (typeof args[0] == 'boolean') {\n      deep = args.shift();\n    }\n    var result = args[0];\n    if (isUnextendable(result)) {\n      throw new Error('extendee must be an object');\n    }\n    var extenders = args.slice(1);\n    var len = extenders.length;\n    for (var i = 0; i < len; i++) {\n      var extender = extenders[i];\n      for (var key in extender) {\n        if (Object.prototype.hasOwnProperty.call(extender, key)) {\n          var value = extender[key];\n          if (deep && isCloneable(value)) {\n            var base = Array.isArray(value) ? [] : {};\n            result[key] = extend(\n              true,\n              Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n                ? result[key]\n                : base,\n              value\n            );\n          } else {\n            result[key] = value;\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  function isCloneable(obj) {\n    return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n  }\n\n  function isUnextendable(val) {\n    return !val || (typeof val != 'object' && typeof val != 'function');\n  }\n\n  function $parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n  }\n\n  class $4040acfd8584338d$export$2e2bcd8739ae039 {\n      // Add an event listener for given event\n      on(event, fn) {\n          this._callbacks = this._callbacks || {\n          };\n          // Create namespace for this event\n          if (!this._callbacks[event]) this._callbacks[event] = [];\n          this._callbacks[event].push(fn);\n          return this;\n      }\n      emit(event, ...args) {\n          this._callbacks = this._callbacks || {\n          };\n          let callbacks = this._callbacks[event];\n          if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n          // trigger a corresponding DOM event\n          if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n              args: args\n          }));\n          return this;\n      }\n      makeEvent(eventName, detail) {\n          let params = {\n              bubbles: true,\n              cancelable: true,\n              detail: detail\n          };\n          if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n          else {\n              // IE 11 support\n              // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n              var evt = document.createEvent(\"CustomEvent\");\n              evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n              return evt;\n          }\n      }\n      // Remove event listener for given event. If fn is not provided, all event\n      // listeners for that event will be removed. If neither is provided, all\n      // event listeners will be removed.\n      off(event, fn) {\n          if (!this._callbacks || arguments.length === 0) {\n              this._callbacks = {\n              };\n              return this;\n          }\n          // specific event\n          let callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n          // remove all handlers\n          if (arguments.length === 1) {\n              delete this._callbacks[event];\n              return this;\n          }\n          // remove specific handler\n          for(let i = 0; i < callbacks.length; i++){\n              let callback = callbacks[i];\n              if (callback === fn) {\n                  callbacks.splice(i, 1);\n                  break;\n              }\n          }\n          return this;\n      }\n  }\n\n\n\n  var $fd6031f88dce2e32$exports = {};\n  $fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\n  let $4ca367182776f80b$var$defaultOptions = {\n      /**\n     * Has to be specified on elements other than form (or when the form doesn't\n     * have an `action` attribute).\n     *\n     * You can also provide a function that will be called with `files` and\n     * `dataBlocks`  and must return the url as string.\n     */ url: null,\n      /**\n     * Can be changed to `\"put\"` if necessary. You can also provide a function\n     * that will be called with `files` and must return the method (since `v3.12.0`).\n     */ method: \"post\",\n      /**\n     * Will be set on the XHRequest.\n     */ withCredentials: false,\n      /**\n     * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n     * If set to null or 0, no timeout is going to be set.\n     */ timeout: null,\n      /**\n     * How many file uploads to process in parallel (See the\n     * Enqueuing file uploads documentation section for more info)\n     */ parallelUploads: 2,\n      /**\n     * Whether to send multiple files in one request. If\n     * this it set to true, then the fallback file input element will\n     * have the `multiple` attribute as well. This option will\n     * also trigger additional events (like `processingmultiple`). See the events\n     * documentation section for more information.\n     */ uploadMultiple: false,\n      /**\n     * Whether you want files to be uploaded in chunks to your server. This can't be\n     * used in combination with `uploadMultiple`.\n     *\n     * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n     */ chunking: false,\n      /**\n     * If `chunking` is enabled, this defines whether **every** file should be chunked,\n     * even if the file size is below chunkSize. This means, that the additional chunk\n     * form data will be submitted and the `chunksUploaded` callback will be invoked.\n     */ forceChunking: false,\n      /**\n     * If `chunking` is `true`, then this defines the chunk size in bytes.\n     */ chunkSize: 2097152,\n      /**\n     * If `true`, the individual chunks of a file are being uploaded simultaneously.\n     */ parallelChunkUploads: false,\n      /**\n     * Whether a chunk should be retried if it fails.\n     */ retryChunks: false,\n      /**\n     * If `retryChunks` is true, how many times should it be retried.\n     */ retryChunksLimit: 3,\n      /**\n     * The maximum filesize (in MiB) that is allowed to be uploaded.\n     */ maxFilesize: 256,\n      /**\n     * The name of the file param that gets transferred.\n     * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n     * Dropzone will append `[]` to the name.\n     */ paramName: \"file\",\n      /**\n     * Whether thumbnails for images should be generated\n     */ createImageThumbnails: true,\n      /**\n     * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n     */ maxThumbnailFilesize: 10,\n      /**\n     * If `null`, the ratio of the image will be used to calculate it.\n     */ thumbnailWidth: 120,\n      /**\n     * The same as `thumbnailWidth`. If both are null, images will not be resized.\n     */ thumbnailHeight: 120,\n      /**\n     * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ thumbnailMethod: \"crop\",\n      /**\n     * If set, images will be resized to these dimensions before being **uploaded**.\n     * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n     * ratio of the file will be preserved.\n     *\n     * The `options.transformFile` function uses these options, so if the `transformFile` function\n     * is overridden, these options don't do anything.\n     */ resizeWidth: null,\n      /**\n     * See `resizeWidth`.\n     */ resizeHeight: null,\n      /**\n     * The mime type of the resized image (before it gets uploaded to the server).\n     * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n     * See `resizeWidth` for more information.\n     */ resizeMimeType: null,\n      /**\n     * The quality of the resized images. See `resizeWidth`.\n     */ resizeQuality: 0.8,\n      /**\n     * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ resizeMethod: \"contain\",\n      /**\n     * The base that is used to calculate the **displayed** filesize. You can\n     * change this to 1024 if you would rather display kibibytes, mebibytes,\n     * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n     * not `1 kilobyte`. You can change this to `1024` if you don't care about\n     * validity.\n     */ filesizeBase: 1000,\n      /**\n     * If not `null` defines how many files this Dropzone handles. If it exceeds,\n     * the event `maxfilesexceeded` will be called. The dropzone element gets the\n     * class `dz-max-files-reached` accordingly so you can provide visual\n     * feedback.\n     */ maxFiles: null,\n      /**\n     * An optional object to send additional headers to the server. Eg:\n     * `{ \"My-Awesome-Header\": \"header value\" }`\n     */ headers: null,\n      /**\n     * Should the default headers be set or not?\n     * Accept: application/json <- for requesting json response\n     * Cache-Control: no-cache <- Request shouldnt be cached\n     * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n     */ defaultHeaders: true,\n      /**\n     * If `true`, the dropzone element itself will be clickable, if `false`\n     * nothing will be clickable.\n     *\n     * You can also pass an HTML element, a CSS selector (for multiple elements)\n     * or an array of those. In that case, all of those elements will trigger an\n     * upload when clicked.\n     */ clickable: true,\n      /**\n     * Whether hidden files in directories should be ignored.\n     */ ignoreHiddenFiles: true,\n      /**\n     * The default implementation of `accept` checks the file's mime type or\n     * extension against this list. This is a comma separated list of mime\n     * types or file extensions.\n     *\n     * Eg.: `image/*,application/pdf,.psd`\n     *\n     * If the Dropzone is `clickable` this option will also be used as\n     * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n     * parameter on the hidden file input as well.\n     */ acceptedFiles: null,\n      /**\n     * **Deprecated!**\n     * Use acceptedFiles instead.\n     */ acceptedMimeTypes: null,\n      /**\n     * If false, files will be added to the queue but the queue will not be\n     * processed automatically.\n     * This can be useful if you need some additional user input before sending\n     * files (or if you want want all files sent at once).\n     * If you're ready to send the file simply call `myDropzone.processQueue()`.\n     *\n     * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n     * section for more information.\n     */ autoProcessQueue: true,\n      /**\n     * If false, files added to the dropzone will not be queued by default.\n     * You'll have to call `enqueueFile(file)` manually.\n     */ autoQueue: true,\n      /**\n     * If `true`, this will add a link to every file preview to remove or cancel (if\n     * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n     * and `dictRemoveFile` options are used for the wording.\n     */ addRemoveLinks: false,\n      /**\n     * Defines where to display the file previews – if `null` the\n     * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n     * selector. The element should have the `dropzone-previews` class so\n     * the previews are displayed properly.\n     */ previewsContainer: null,\n      /**\n     * Set this to `true` if you don't want previews to be shown.\n     */ disablePreviews: false,\n      /**\n     * This is the element the hidden input field (which is used when clicking on the\n     * dropzone to trigger file selection) will be appended to. This might\n     * be important in case you use frameworks to switch the content of your page.\n     *\n     * Can be a selector string, or an element directly.\n     */ hiddenInputContainer: \"body\",\n      /**\n     * If null, no capture type will be specified\n     * If camera, mobile devices will skip the file selection and choose camera\n     * If microphone, mobile devices will skip the file selection and choose the microphone\n     * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n     * On apple devices multiple must be set to false.  AcceptedFiles may need to\n     * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n     */ capture: null,\n      /**\n     * **Deprecated**. Use `renameFile` instead.\n     */ renameFilename: null,\n      /**\n     * A function that is invoked before the file is uploaded to the server and renames the file.\n     * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n     * file that gets used during the upload can be accessed through `file.upload.filename`.\n     */ renameFile: null,\n      /**\n     * If `true` the fallback will be forced. This is very useful to test your server\n     * implementations first and make sure that everything works as\n     * expected without dropzone if you experience problems, and to test\n     * how your fallbacks will look.\n     */ forceFallback: false,\n      /**\n     * The text used before any files are dropped.\n     */ dictDefaultMessage: \"Drop files here to upload\",\n      /**\n     * The text that replaces the default message text it the browser is not supported.\n     */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      /**\n     * The text that will be added before the fallback form.\n     * If you provide a  fallback element yourself, or if this option is `null` this will\n     * be ignored.\n     */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      /**\n     * If the filesize is too big.\n     * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n     */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      /**\n     * If the file doesn't match the file type.\n     */ dictInvalidFileType: \"You can't upload files of this type.\",\n      /**\n     * If the server response was invalid.\n     * `{{statusCode}}` will be replaced with the servers status code.\n     */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n     */ dictCancelUpload: \"Cancel upload\",\n      /**\n     * The text that is displayed if an upload was manually canceled\n     */ dictUploadCanceled: \"Upload canceled.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n     */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used to remove a file.\n     */ dictRemoveFile: \"Remove file\",\n      /**\n     * If this is not null, then the user will be prompted before removing a file.\n     */ dictRemoveFileConfirmation: null,\n      /**\n     * Displayed if `maxFiles` is st and exceeded.\n     * The string `{{maxFiles}}` will be replaced by the configuration value.\n     */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n      /**\n     * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n     * `b` for bytes.\n     */ dictFileSizeUnits: {\n          tb: \"TB\",\n          gb: \"GB\",\n          mb: \"MB\",\n          kb: \"KB\",\n          b: \"b\"\n      },\n      /**\n     * Called when dropzone initialized\n     * You can add event listeners here\n     */ init () {\n      },\n      /**\n     * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n     * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n     * of a function, this needs to return a map.\n     *\n     * The default implementation does nothing for normal uploads, but adds relevant information for\n     * chunked uploads.\n     *\n     * This is the same as adding hidden input fields in the form element.\n     */ params (files, xhr, chunk) {\n          if (chunk) return {\n              dzuuid: chunk.file.upload.uuid,\n              dzchunkindex: chunk.index,\n              dztotalfilesize: chunk.file.size,\n              dzchunksize: this.options.chunkSize,\n              dztotalchunkcount: chunk.file.upload.totalChunkCount,\n              dzchunkbyteoffset: chunk.index * this.options.chunkSize\n          };\n      },\n      /**\n     * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n     * and a `done` function as parameters.\n     *\n     * If the done function is invoked without arguments, the file is \"accepted\" and will\n     * be processed. If you pass an error message, the file is rejected, and the error\n     * message will be displayed.\n     * This function will not be called if the file is too big or doesn't match the mime types.\n     */ accept (file, done) {\n          return done();\n      },\n      /**\n     * The callback that will be invoked when all chunks have been uploaded for a file.\n     * It gets the file for which the chunks have been uploaded as the first parameter,\n     * and the `done` function as second. `done()` needs to be invoked when everything\n     * needed to finish the upload process is done.\n     */ chunksUploaded: function(file, done) {\n          done();\n      },\n      /**\n     * Sends the file as binary blob in body instead of form data.\n     * If this is set, the `params` option will be ignored.\n     * It's an error to set this to `true` along with `uploadMultiple` since\n     * multiple files cannot be in a single binary body.\n     */ binaryBody: false,\n      /**\n     * Gets called when the browser is not supported.\n     * The default implementation shows the fallback input field and adds\n     * a text.\n     */ fallback () {\n          // This code should pass in IE7... :(\n          let messageElement;\n          this.element.className = `${this.element.className} dz-browser-not-supported`;\n          for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n              messageElement = child;\n              child.className = \"dz-message\"; // Removes the 'dz-default' class\n              break;\n          }\n          if (!messageElement) {\n              messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n              this.element.appendChild(messageElement);\n          }\n          let span = messageElement.getElementsByTagName(\"span\")[0];\n          if (span) {\n              if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n              else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n          }\n          return this.element.appendChild(this.getFallbackForm());\n      },\n      /**\n     * Gets called to calculate the thumbnail dimensions.\n     *\n     * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n     *\n     *  - `srcWidth` & `srcHeight` (required)\n     *  - `trgWidth` & `trgHeight` (required)\n     *  - `srcX` & `srcY` (optional, default `0`)\n     *  - `trgX` & `trgY` (optional, default `0`)\n     *\n     * Those values are going to be used by `ctx.drawImage()`.\n     */ resize (file, width, height, resizeMethod) {\n          let info = {\n              srcX: 0,\n              srcY: 0,\n              srcWidth: file.width,\n              srcHeight: file.height\n          };\n          let srcRatio = file.width / file.height;\n          // Automatically calculate dimensions if not specified\n          if (width == null && height == null) {\n              width = info.srcWidth;\n              height = info.srcHeight;\n          } else if (width == null) width = height * srcRatio;\n          else if (height == null) height = width / srcRatio;\n          // Make sure images aren't upscaled\n          width = Math.min(width, info.srcWidth);\n          height = Math.min(height, info.srcHeight);\n          let trgRatio = width / height;\n          if (info.srcWidth > width || info.srcHeight > height) {\n              // Image is bigger and needs rescaling\n              if (resizeMethod === \"crop\") {\n                  if (srcRatio > trgRatio) {\n                      info.srcHeight = file.height;\n                      info.srcWidth = info.srcHeight * trgRatio;\n                  } else {\n                      info.srcWidth = file.width;\n                      info.srcHeight = info.srcWidth / trgRatio;\n                  }\n              } else if (resizeMethod === \"contain\") {\n                  // Method 'contain'\n                  if (srcRatio > trgRatio) height = width / srcRatio;\n                  else width = height * srcRatio;\n              } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n          }\n          info.srcX = (file.width - info.srcWidth) / 2;\n          info.srcY = (file.height - info.srcHeight) / 2;\n          info.trgWidth = width;\n          info.trgHeight = height;\n          return info;\n      },\n      /**\n     * Can be used to transform the file (for example, resize an image if necessary).\n     *\n     * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n     * images according to those dimensions.\n     *\n     * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n     * to be invoked with the file when the transformation is done.\n     */ transformFile (file, done) {\n          if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n          else return done(file);\n      },\n      /**\n     * A string that contains the template used for each dropped\n     * file. Change it to fulfill your needs but make sure to properly\n     * provide all elements.\n     *\n     * If you want to use an actual HTML element instead of providing a String\n     * as a config option, you could create a div with the id `tpl`,\n     * put the template inside it and provide the element like this:\n     *\n     *     document\n     *       .querySelector('#tpl')\n     *       .innerHTML\n     *\n     */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n      /*\n     Those functions register themselves to the events on init and handle all\n     the user interface specific stuff. Overwriting them won't break the upload\n     but can break the way it's displayed.\n     You can overwrite them if you don't like the default behavior. If you just\n     want to add an additional event handler, register it on the dropzone object\n     and don't overwrite those options.\n     */ // Those are self explanatory and simply concern the DragnDrop.\n      drop (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart (e) {\n      },\n      dragend (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste (e) {\n      },\n      // Called whenever there are no files left in the dropzone anymore, and the\n      // dropzone should be displayed as if in the initial state.\n      reset () {\n          return this.element.classList.remove(\"dz-started\");\n      },\n      // Called when a file is added to the queue\n      // Receives `file`\n      addedfile (file) {\n          if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n          if (this.previewsContainer && !this.options.disablePreviews) {\n              file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n              file.previewTemplate = file.previewElement; // Backwards compatibility\n              this.previewsContainer.appendChild(file.previewElement);\n              for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n              for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n              if (this.options.addRemoveLinks) {\n                  file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                  file.previewElement.appendChild(file._removeLink);\n              }\n              let removeFileEvent = (e)=>{\n                  e.preventDefault();\n                  e.stopPropagation();\n                  if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                  );\n                  else {\n                      if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                      );\n                      else return this.removeFile(file);\n                  }\n              };\n              for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n          }\n      },\n      // Called whenever a file is removed.\n      removedfile (file) {\n          if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n          return this._updateMaxFilesReachedClass();\n      },\n      // Called when a thumbnail has been generated\n      // Receives `file` and `dataUrl`\n      thumbnail (file, dataUrl) {\n          if (file.previewElement) {\n              file.previewElement.classList.remove(\"dz-file-preview\");\n              for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                  thumbnailElement.alt = file.name;\n                  thumbnailElement.src = dataUrl;\n              }\n              return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n              , 1);\n          }\n      },\n      // Called whenever an error occurs\n      // Receives `file` and `message`\n      error (file, message) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-error\");\n              if (typeof message !== \"string\" && message.error) message = message.error;\n              for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n          }\n      },\n      errormultiple () {\n      },\n      // Called when a file gets processed. Since there is a cue, not all added\n      // files are processed immediately.\n      // Receives `file`\n      processing (file) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-processing\");\n              if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n          }\n      },\n      processingmultiple () {\n      },\n      // Called whenever the upload progress gets updated.\n      // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n      // To get the total number of bytes of the file, use `file.size`\n      uploadprogress (file, progress, bytesSent) {\n          if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n      },\n      // Called whenever the total upload progress gets updated.\n      // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n      totaluploadprogress () {\n      },\n      // Called just before the file is sent. Gets the `xhr` object as second\n      // parameter, so you can modify it (for example to add a CSRF token) and a\n      // `formData` object to add additional information.\n      sending () {\n      },\n      sendingmultiple () {\n      },\n      // When the complete upload is finished and successful\n      // Receives `file`\n      success (file) {\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n      },\n      successmultiple () {\n      },\n      // When the upload is canceled.\n      canceled (file) {\n          return this.emit(\"error\", file, this.options.dictUploadCanceled);\n      },\n      canceledmultiple () {\n      },\n      // When the upload is finished, either with success or an error.\n      // Receives `file`\n      complete (file) {\n          if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n      },\n      completemultiple () {\n      },\n      maxfilesexceeded () {\n      },\n      maxfilesreached () {\n      },\n      queuecomplete () {\n      },\n      addedfiles () {\n      }\n  };\n  var $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\n  class $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n      static initClass() {\n          // Exposing the emitter class, mainly for tests\n          this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n          /*\n       This is a list of all available events you can register on a dropzone object.\n\n       You can register an event handler like this:\n\n       dropzone.on(\"dragEnter\", function() { });\n\n       */ this.prototype.events = [\n              \"drop\",\n              \"dragstart\",\n              \"dragend\",\n              \"dragenter\",\n              \"dragover\",\n              \"dragleave\",\n              \"addedfile\",\n              \"addedfiles\",\n              \"removedfile\",\n              \"thumbnail\",\n              \"error\",\n              \"errormultiple\",\n              \"processing\",\n              \"processingmultiple\",\n              \"uploadprogress\",\n              \"totaluploadprogress\",\n              \"sending\",\n              \"sendingmultiple\",\n              \"success\",\n              \"successmultiple\",\n              \"canceled\",\n              \"canceledmultiple\",\n              \"complete\",\n              \"completemultiple\",\n              \"reset\",\n              \"maxfilesexceeded\",\n              \"maxfilesreached\",\n              \"queuecomplete\", \n          ];\n          this.prototype._thumbnailQueue = [];\n          this.prototype._processingThumbnail = false;\n      }\n      // Returns all files that have been accepted\n      getAcceptedFiles() {\n          return this.files.filter((file)=>file.accepted\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that have been rejected\n      // Not sure when that's going to be useful, but added for completeness.\n      getRejectedFiles() {\n          return this.files.filter((file)=>!file.accepted\n          ).map((file)=>file\n          );\n      }\n      getFilesWithStatus(status) {\n          return this.files.filter((file)=>file.status === status\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that are in the queue\n      getQueuedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n      }\n      getUploadingFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n      }\n      getAddedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n      }\n      // Files that are either queued or uploading\n      getActiveFiles() {\n          return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n          ).map((file)=>file\n          );\n      }\n      // The function that gets called when Dropzone is initialized. You\n      // can (and should) setup event listeners inside this function.\n      init() {\n          // In case it isn't set already\n          if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n          if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n          if (this.clickableElements.length) {\n              let setupHiddenFileInput = ()=>{\n                  if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                  this.hiddenFileInput = document.createElement(\"input\");\n                  this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                  if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                  this.hiddenFileInput.className = \"dz-hidden-input\";\n                  if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                  if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                  // Making sure that no one can \"tab\" into this field.\n                  this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                  // Not setting `display=\"none\"` because some browsers don't accept clicks\n                  // on elements that aren't displayed.\n                  this.hiddenFileInput.style.visibility = \"hidden\";\n                  this.hiddenFileInput.style.position = \"absolute\";\n                  this.hiddenFileInput.style.top = \"0\";\n                  this.hiddenFileInput.style.left = \"0\";\n                  this.hiddenFileInput.style.height = \"0\";\n                  this.hiddenFileInput.style.width = \"0\";\n                  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                  this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                      let { files: files  } = this.hiddenFileInput;\n                      if (files.length) for (let file of files)this.addFile(file);\n                      this.emit(\"addedfiles\", files);\n                      setupHiddenFileInput();\n                  });\n              };\n              setupHiddenFileInput();\n          }\n          this.URL = window.URL !== null ? window.URL : window.webkitURL;\n          // Setup all event listeners on the Dropzone object itself.\n          // They're not in @setupEventListeners() because they shouldn't be removed\n          // again when the dropzone gets disabled.\n          for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n          this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n          );\n          // Emit a `queuecomplete` event if all files finished uploading.\n          this.on(\"complete\", (file)=>{\n              if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n              return setTimeout(()=>this.emit(\"queuecomplete\")\n              , 0);\n          });\n          const containsFiles = function(e) {\n              if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n              // IE, we need to iterate like this instead of\n              // using e.dataTransfer.types.some()\n              for(var i = 0; i < e.dataTransfer.types.length; i++){\n                  if (e.dataTransfer.types[i] === \"Files\") return true;\n              }\n              return false;\n          };\n          let noPropagation = function(e) {\n              // If there are no files, we don't want to stop\n              // propagation so we don't interfere with other\n              // drag and drop behaviour.\n              if (!containsFiles(e)) return;\n              e.stopPropagation();\n              if (e.preventDefault) return e.preventDefault();\n              else return e.returnValue = false;\n          };\n          // Create the listeners\n          this.listeners = [\n              {\n                  element: this.element,\n                  events: {\n                      dragstart: (e)=>{\n                          return this.emit(\"dragstart\", e);\n                      },\n                      dragenter: (e)=>{\n                          noPropagation(e);\n                          return this.emit(\"dragenter\", e);\n                      },\n                      dragover: (e)=>{\n                          // Makes it possible to drag files from chrome's download bar\n                          // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                          // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                          let efct;\n                          try {\n                              efct = e.dataTransfer.effectAllowed;\n                          } catch (error) {\n                          }\n                          e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                          noPropagation(e);\n                          return this.emit(\"dragover\", e);\n                      },\n                      dragleave: (e)=>{\n                          return this.emit(\"dragleave\", e);\n                      },\n                      drop: (e)=>{\n                          noPropagation(e);\n                          return this.drop(e);\n                      },\n                      dragend: (e)=>{\n                          return this.emit(\"dragend\", e);\n                      }\n                  }\n              }, \n          ];\n          this.clickableElements.forEach((clickableElement)=>{\n              return this.listeners.push({\n                  element: clickableElement,\n                  events: {\n                      click: (evt)=>{\n                          // Only the actual dropzone or the message element should trigger file selection\n                          if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                          return true;\n                      }\n                  }\n              });\n          });\n          this.enable();\n          return this.options.init.call(this);\n      }\n      // Not fully tested yet\n      destroy() {\n          this.disable();\n          this.removeAllFiles(true);\n          if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n              this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n              this.hiddenFileInput = null;\n          }\n          delete this.element.dropzone;\n          return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n      }\n      updateTotalUploadProgress() {\n          let totalUploadProgress;\n          let totalBytesSent = 0;\n          let totalBytes = 0;\n          let activeFiles = this.getActiveFiles();\n          if (activeFiles.length) {\n              for (let file of this.getActiveFiles()){\n                  totalBytesSent += file.upload.bytesSent;\n                  totalBytes += file.upload.total;\n              }\n              totalUploadProgress = 100 * totalBytesSent / totalBytes;\n          } else totalUploadProgress = 100;\n          return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n      }\n      // @options.paramName can be a function taking one parameter rather than a string.\n      // A parameter name for a file is obtained simply by calling this with an index number.\n      _getParamName(n) {\n          if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n          else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n      }\n      // If @options.renameFile is a function,\n      // the function will be used to rename the file.name before appending it to the formData\n      _renameFile(file) {\n          if (typeof this.options.renameFile !== \"function\") return file.name;\n          return this.options.renameFile(file);\n      }\n      // Returns a form that can be used as fallback if the browser does not support DragnDrop\n      //\n      // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n      // This code has to pass in IE7 :(\n      getFallbackForm() {\n          let existingFallback, form;\n          if (existingFallback = this.getExistingFallback()) return existingFallback;\n          let fieldsString = '<div class=\"dz-fallback\">';\n          if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n          fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n          let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n          if (this.element.tagName !== \"FORM\") {\n              form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n              form.appendChild(fields);\n          } else {\n              // Make sure that the enctype and method attributes are set properly\n              this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n              this.element.setAttribute(\"method\", this.options.method);\n          }\n          return form != null ? form : fields;\n      }\n      // Returns the fallback elements if they exist already\n      //\n      // This code has to pass in IE7 :(\n      getExistingFallback() {\n          let getFallback = function(elements) {\n              for (let el of elements){\n                  if (/(^| )fallback($| )/.test(el.className)) return el;\n              }\n          };\n          for (let tagName of [\n              \"div\",\n              \"form\"\n          ]){\n              var fallback;\n              if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n          }\n      }\n      // Activates all listeners stored in @listeners\n      setupEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.addEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Deactivates all listeners stored in @listeners\n      removeEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.removeEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Removes all event listeners and cancels all files in the queue or being processed.\n      disable() {\n          this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n          );\n          this.removeEventListeners();\n          this.disabled = true;\n          return this.files.map((file)=>this.cancelUpload(file)\n          );\n      }\n      enable() {\n          delete this.disabled;\n          this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n          );\n          return this.setupEventListeners();\n      }\n      // Returns a nicely formatted filesize\n      filesize(size) {\n          let selectedSize = 0;\n          let selectedUnit = \"b\";\n          if (size > 0) {\n              let units = [\n                  \"tb\",\n                  \"gb\",\n                  \"mb\",\n                  \"kb\",\n                  \"b\"\n              ];\n              for(let i = 0; i < units.length; i++){\n                  let unit = units[i];\n                  let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                  if (size >= cutoff) {\n                      selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                      selectedUnit = unit;\n                      break;\n                  }\n              }\n              selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n          }\n          return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n      }\n      // Adds or removes the `dz-max-files-reached` class from the form.\n      _updateMaxFilesReachedClass() {\n          if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n              return this.element.classList.add(\"dz-max-files-reached\");\n          } else return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n      drop(e) {\n          if (!e.dataTransfer) return;\n          this.emit(\"drop\", e);\n          // Convert the FileList to an Array\n          // This is necessary for IE11\n          let files = [];\n          for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n          // Even if it's a folder, files.length will contain the folders.\n          if (files.length) {\n              let { items: items  } = e.dataTransfer;\n              if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n              this._addFilesFromItems(items);\n              else this.handleFiles(files);\n          }\n          this.emit(\"addedfiles\", files);\n      }\n      paste(e) {\n          if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n          ) == null) return;\n          this.emit(\"paste\", e);\n          let { items: items  } = e.clipboardData;\n          if (items.length) return this._addFilesFromItems(items);\n      }\n      handleFiles(files) {\n          for (let file of files)this.addFile(file);\n      }\n      // When a folder is dropped (or files are pasted), items must be handled\n      // instead of files.\n      _addFilesFromItems(items) {\n          return (()=>{\n              let result = [];\n              for (let item of items){\n                  var entry;\n                  if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                      if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                      else if (entry.isDirectory) // Append all files from that directory to files\n                      result.push(this._addFilesFromDirectory(entry, entry.name));\n                      else result.push(undefined);\n                  } else if (item.getAsFile != null) {\n                      if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                      else result.push(undefined);\n                  } else result.push(undefined);\n              }\n              return result;\n          })();\n      }\n      // Goes through the directory, and adds each file it finds recursively\n      _addFilesFromDirectory(directory, path) {\n          let dirReader = directory.createReader();\n          let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n              )\n          ;\n          var readEntries = ()=>{\n              return dirReader.readEntries((entries)=>{\n                  if (entries.length > 0) {\n                      for (let entry of entries){\n                          if (entry.isFile) entry.file((file)=>{\n                              if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                              file.fullPath = `${path}/${file.name}`;\n                              return this.addFile(file);\n                          });\n                          else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                      }\n                      // Recursively call readEntries() again, since browser only handle\n                      // the first 100 entries.\n                      // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                      readEntries();\n                  }\n                  return null;\n              }, errorHandler);\n          };\n          return readEntries();\n      }\n      // If `done()` is called without argument the file is accepted\n      // If you call it with an error message, the file is rejected\n      // (This allows for asynchronous validation)\n      //\n      // This function checks the filesize, and if the file.type passes the\n      // `acceptedFiles` check.\n      accept(file, done) {\n          if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n          else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n          else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n              this.emit(\"maxfilesexceeded\", file);\n          } else this.options.accept.call(this, file, done);\n      }\n      addFile(file) {\n          file.upload = {\n              uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n              progress: 0,\n              // Setting the total upload size to file.size for the beginning\n              // It's actual different than the size to be transmitted.\n              total: file.size,\n              bytesSent: 0,\n              filename: this._renameFile(file)\n          };\n          this.files.push(file);\n          file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n          this.emit(\"addedfile\", file);\n          this._enqueueThumbnail(file);\n          this.accept(file, (error)=>{\n              if (error) {\n                  file.accepted = false;\n                  this._errorProcessing([\n                      file\n                  ], error); // Will set the file.status\n              } else {\n                  file.accepted = true;\n                  if (this.options.autoQueue) this.enqueueFile(file);\n                   // Will set .accepted = true\n              }\n              this._updateMaxFilesReachedClass();\n          });\n      }\n      // Wrapper for enqueueFile\n      enqueueFiles(files) {\n          for (let file of files)this.enqueueFile(file);\n          return null;\n      }\n      enqueueFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n              if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n              , 0); // Deferring the call\n          } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n      _enqueueThumbnail(file) {\n          if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n              this._thumbnailQueue.push(file);\n              return setTimeout(()=>this._processThumbnailQueue()\n              , 0); // Deferring the call\n          }\n      }\n      _processThumbnailQueue() {\n          if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n          this._processingThumbnail = true;\n          let file = this._thumbnailQueue.shift();\n          return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n              this.emit(\"thumbnail\", file, dataUrl);\n              this._processingThumbnail = false;\n              return this._processThumbnailQueue();\n          });\n      }\n      // Can be called by the user to remove a file\n      removeFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n          this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n          this.emit(\"removedfile\", file);\n          if (this.files.length === 0) return this.emit(\"reset\");\n      }\n      // Removes all files that aren't currently processed from the list\n      removeAllFiles(cancelIfNecessary) {\n          // Create a copy of files since removeFile() changes the @files array.\n          if (cancelIfNecessary == null) cancelIfNecessary = false;\n          for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n          return null;\n      }\n      // Resizes an image before it gets sent to the server. This function is the default behavior of\n      // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n      // the resized blob.\n      resizeImage(file, width, height, resizeMethod, callback) {\n          return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n              if (canvas == null) // The image has not been resized\n              return callback(file);\n              else {\n                  let { resizeMimeType: resizeMimeType  } = this.options;\n                  if (resizeMimeType == null) resizeMimeType = file.type;\n                  let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                  if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                  resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                  return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n              }\n          });\n      }\n      createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n          let fileReader = new FileReader();\n          fileReader.onload = ()=>{\n              file.dataURL = fileReader.result;\n              // Don't bother creating a thumbnail for SVG images since they're vector\n              if (file.type === \"image/svg+xml\") {\n                  if (callback != null) callback(fileReader.result);\n                  return;\n              }\n              this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n          };\n          fileReader.readAsDataURL(file);\n      }\n      // `mockFile` needs to have these attributes:\n      //\n      //     { name: 'name', size: 12345, imageUrl: '' }\n      //\n      // `callback` will be invoked when the image has been downloaded and displayed.\n      // `crossOrigin` will be added to the `img` tag when accessing the file.\n      displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n          this.emit(\"addedfile\", mockFile);\n          this.emit(\"complete\", mockFile);\n          if (!resizeThumbnail) {\n              this.emit(\"thumbnail\", mockFile, imageUrl);\n              if (callback) callback();\n          } else {\n              let onDone = (thumbnail)=>{\n                  this.emit(\"thumbnail\", mockFile, thumbnail);\n                  if (callback) callback();\n              };\n              mockFile.dataURL = imageUrl;\n              this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n          }\n      }\n      createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n          // Not using `new Image` here because of a bug in latest Chrome versions.\n          // See https://github.com/enyo/dropzone/pull/226\n          let img = document.createElement(\"img\");\n          if (crossOrigin) img.crossOrigin = crossOrigin;\n          // fixOrientation is not needed anymore with browsers handling imageOrientation\n          fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n          img.onload = ()=>{\n              let loadExif = (callback)=>callback(1)\n              ;\n              if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                      return callback(EXIF.getTag(this, \"Orientation\"));\n                  })\n              ;\n              return loadExif((orientation)=>{\n                  file.width = img.width;\n                  file.height = img.height;\n                  let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                  let canvas = document.createElement(\"canvas\");\n                  let ctx = canvas.getContext(\"2d\");\n                  canvas.width = resizeInfo.trgWidth;\n                  canvas.height = resizeInfo.trgHeight;\n                  if (orientation > 4) {\n                      canvas.width = resizeInfo.trgHeight;\n                      canvas.height = resizeInfo.trgWidth;\n                  }\n                  switch(orientation){\n                      case 2:\n                          // horizontal flip\n                          ctx.translate(canvas.width, 0);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 3:\n                          // 180° rotate left\n                          ctx.translate(canvas.width, canvas.height);\n                          ctx.rotate(Math.PI);\n                          break;\n                      case 4:\n                          // vertical flip\n                          ctx.translate(0, canvas.height);\n                          ctx.scale(1, -1);\n                          break;\n                      case 5:\n                          // vertical flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.scale(1, -1);\n                          break;\n                      case 6:\n                          // 90° rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(0, -canvas.width);\n                          break;\n                      case 7:\n                          // horizontal flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(canvas.height, -canvas.width);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 8:\n                          // 90° rotate left\n                          ctx.rotate(-0.5 * Math.PI);\n                          ctx.translate(-canvas.height, 0);\n                          break;\n                  }\n                  // This is a bugfix for iOS' scaling bug.\n                  $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                  let thumbnail = canvas.toDataURL(\"image/png\");\n                  if (callback != null) return callback(thumbnail, canvas);\n              });\n          };\n          if (callback != null) img.onerror = callback;\n          return img.src = file.dataURL;\n      }\n      // Goes through the queue and processes files if there aren't too many already.\n      processQueue() {\n          let { parallelUploads: parallelUploads  } = this.options;\n          let processingLength = this.getUploadingFiles().length;\n          let i = processingLength;\n          // There are already at least as many files uploading than should be\n          if (processingLength >= parallelUploads) return;\n          let queuedFiles = this.getQueuedFiles();\n          if (!(queuedFiles.length > 0)) return;\n          if (this.options.uploadMultiple) // The files should be uploaded in one request\n          return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n          else while(i < parallelUploads){\n              if (!queuedFiles.length) return;\n               // Nothing left to process\n              this.processFile(queuedFiles.shift());\n              i++;\n          }\n      }\n      // Wrapper for `processFiles`\n      processFile(file) {\n          return this.processFiles([\n              file\n          ]);\n      }\n      // Loads the file, then calls finishedLoading()\n      processFiles(files) {\n          for (let file of files){\n              file.processing = true; // Backwards compatibility\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n              this.emit(\"processing\", file);\n          }\n          if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n          return this.uploadFiles(files);\n      }\n      _getFilesWithXhr(xhr) {\n          return this.files.filter((file)=>file.xhr === xhr\n          ).map((file)=>file\n          );\n      }\n      // Cancels the file upload and sets the status to CANCELED\n      // **if** the file is actually being uploaded.\n      // If it's still in the queue, the file is being removed from it and the status\n      // set to CANCELED.\n      cancelUpload(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n              let groupedFiles = this._getFilesWithXhr(file.xhr);\n              for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n              for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n          } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              this.emit(\"canceled\", file);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                  file\n              ]);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      resolveOption(option, ...args) {\n          if (typeof option === \"function\") return option.apply(this, args);\n          return option;\n      }\n      uploadFile(file) {\n          return this.uploadFiles([\n              file\n          ]);\n      }\n      uploadFiles(files) {\n          this._transformFiles(files, (transformedFiles)=>{\n              if (this.options.chunking) {\n                  // Chunking is not allowed to be used with `uploadMultiple` so we know\n                  // that there is only __one__file.\n                  let transformedFile = transformedFiles[0];\n                  files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                  files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n              }\n              if (files[0].upload.chunked) {\n                  // This file should be sent in chunks!\n                  // If the chunking option is set, we **know** that there can only be **one** file, since\n                  // uploadMultiple is not allowed with this option.\n                  let file = files[0];\n                  let transformedFile = transformedFiles[0];\n                  file.upload.chunks = [];\n                  let handleNextChunk = ()=>{\n                      let chunkIndex = 0;\n                      // Find the next item in file.upload.chunks that is not defined yet.\n                      while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                      // This means, that all chunks have already been started.\n                      if (chunkIndex >= file.upload.totalChunkCount) return;\n                      let start = chunkIndex * this.options.chunkSize;\n                      let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                      let dataBlock = {\n                          name: this._getParamName(0),\n                          data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                          filename: file.upload.filename,\n                          chunkIndex: chunkIndex\n                      };\n                      file.upload.chunks[chunkIndex] = {\n                          file: file,\n                          index: chunkIndex,\n                          dataBlock: dataBlock,\n                          status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                          progress: 0,\n                          retries: 0\n                      };\n                      this._uploadData(files, [\n                          dataBlock\n                      ]);\n                  };\n                  file.upload.finishedChunkUpload = (chunk, response)=>{\n                      let allFinished = true;\n                      chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                      // Clear the data from the chunk\n                      chunk.dataBlock = null;\n                      chunk.response = chunk.xhr.responseText;\n                      chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                      // Leaving this reference to xhr will cause memory leaks.\n                      chunk.xhr = null;\n                      for(let i = 0; i < file.upload.totalChunkCount; i++){\n                          if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                          if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                      }\n                      if (allFinished) this.options.chunksUploaded(file, ()=>{\n                          this._finished(files, response, null);\n                      });\n                  };\n                  if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                  else handleNextChunk();\n              } else {\n                  let dataBlocks = [];\n                  for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                      name: this._getParamName(i),\n                      data: transformedFiles[i],\n                      filename: files[i].upload.filename\n                  };\n                  this._uploadData(files, dataBlocks);\n              }\n          });\n      }\n      /// Returns the right chunk for given file and xhr\n      _getChunk(file, xhr) {\n          for(let i = 0; i < file.upload.totalChunkCount; i++){\n              if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n          }\n      }\n      // This function actually uploads the file(s) to the server.\n      //\n      //  If dataBlocks contains the actual data to upload (meaning, that this could\n      // either be transformed files, or individual chunks for chunked upload) then\n      // they will be used for the actual data to upload.\n      _uploadData(files, dataBlocks) {\n          let xhr = new XMLHttpRequest();\n          // Put the xhr object in the file objects to be able to reference it later.\n          for (let file of files)file.xhr = xhr;\n          if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n          // later, and found with _getChunk.\n          files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n          let method = this.resolveOption(this.options.method, files, dataBlocks);\n          let url = this.resolveOption(this.options.url, files, dataBlocks);\n          xhr.open(method, url, true);\n          // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n          let timeout = this.resolveOption(this.options.timeout, files);\n          if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n          // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n          xhr.withCredentials = !!this.options.withCredentials;\n          xhr.onload = (e)=>{\n              this._finishedUploading(files, xhr, e);\n          };\n          xhr.ontimeout = ()=>{\n              this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n          };\n          xhr.onerror = ()=>{\n              this._handleUploadError(files, xhr);\n          };\n          // Some browsers do not have the .upload property\n          let progressObj = xhr.upload != null ? xhr.upload : xhr;\n          progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n          ;\n          let headers = this.options.defaultHeaders ? {\n              Accept: \"application/json\",\n              \"Cache-Control\": \"no-cache\",\n              \"X-Requested-With\": \"XMLHttpRequest\"\n          } : {\n          };\n          if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n          if (this.options.headers) objectExtend(headers, this.options.headers);\n          for(let headerName in headers){\n              let headerValue = headers[headerName];\n              if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n          }\n          if (this.options.binaryBody) {\n              // Since the file is going to be sent as binary body, it doesn't make\n              // any sense to generate `FormData` for it.\n              for (let file of files)this.emit(\"sending\", file, xhr);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n              this.submitRequest(xhr, null, files);\n          } else {\n              let formData = new FormData();\n              // Adding all @options parameters\n              if (this.options.params) {\n                  let additionalParams = this.options.params;\n                  if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                  for(let key in additionalParams){\n                      let value = additionalParams[key];\n                      if (Array.isArray(value)) // The additional parameter contains an array,\n                      // so lets iterate over it to attach each value\n                      // individually.\n                      for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                      else formData.append(key, value);\n                  }\n              }\n              // Let the user add additional data if necessary\n              for (let file of files)this.emit(\"sending\", file, xhr, formData);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n              this._addFormElementData(formData);\n              // Finally add the files\n              // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n              for(let i = 0; i < dataBlocks.length; i++){\n                  let dataBlock = dataBlocks[i];\n                  formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n              }\n              this.submitRequest(xhr, formData, files);\n          }\n      }\n      // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n      _transformFiles(files, done) {\n          let transformedFiles = [];\n          // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n          let doneCounter = 0;\n          for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n              transformedFiles[i] = transformedFile;\n              if (++doneCounter === files.length) done(transformedFiles);\n          });\n      }\n      // Takes care of adding other input elements of the form to the AJAX request\n      _addFormElementData(formData) {\n          // Take care of other input elements\n          if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n              let inputName = input.getAttribute(\"name\");\n              let inputType = input.getAttribute(\"type\");\n              if (inputType) inputType = inputType.toLowerCase();\n              // If the input doesn't have a name, we can't use it.\n              if (typeof inputName === \"undefined\" || inputName === null) continue;\n              if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                  // Possibly multiple values\n                  for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n              } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n          }\n      }\n      // Invoked when there is new progress information about given files.\n      // If e is not provided, it is assumed that the upload is finished.\n      _updateFilesUploadProgress(files, xhr, e) {\n          if (!files[0].upload.chunked) // Handle file uploads without chunking\n          for (let file of files){\n              if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n              if (e) {\n                  file.upload.progress = 100 * e.loaded / e.total;\n                  file.upload.total = e.total;\n                  file.upload.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  file.upload.progress = 100;\n                  file.upload.bytesSent = file.upload.total;\n              }\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n          else {\n              // Handle chunked file uploads\n              // Chunked upload is not compatible with uploading multiple files in one\n              // request, so we know there's only one file.\n              let file = files[0];\n              // Since this is a chunked upload, we need to update the appropriate chunk\n              // progress.\n              let chunk = this._getChunk(file, xhr);\n              if (e) {\n                  chunk.progress = 100 * e.loaded / e.total;\n                  chunk.total = e.total;\n                  chunk.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  chunk.progress = 100;\n                  chunk.bytesSent = chunk.total;\n              }\n              // Now tally the *file* upload progress from its individual chunks\n              file.upload.progress = 0;\n              file.upload.total = 0;\n              file.upload.bytesSent = 0;\n              for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                  file.upload.progress += file.upload.chunks[i].progress;\n                  file.upload.total += file.upload.chunks[i].total;\n                  file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n              }\n              // Since the process is a percentage, we need to divide by the amount of\n              // chunks we've used.\n              file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n      }\n      _finishedUploading(files, xhr, e) {\n          let response;\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (xhr.readyState !== 4) return;\n          if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n              response = xhr.responseText;\n              if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                  response = JSON.parse(response);\n              } catch (error) {\n                  e = error;\n                  response = \"Invalid JSON response from server.\";\n              }\n          }\n          this._updateFilesUploadProgress(files, xhr);\n          if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n          else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n          else this._finished(files, response, e);\n      }\n      _handleUploadError(files, xhr, response) {\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (files[0].upload.chunked && this.options.retryChunks) {\n              let chunk = this._getChunk(files[0], xhr);\n              if ((chunk.retries++) < this.options.retryChunksLimit) {\n                  this._uploadData(files, [\n                      chunk.dataBlock\n                  ]);\n                  return;\n              } else console.warn(\"Retried this chunk too often. Giving up.\");\n          }\n          this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n      }\n      submitRequest(xhr, formData, files) {\n          if (xhr.readyState != 1) {\n              console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n              return;\n          }\n          if (this.options.binaryBody) {\n              if (files[0].upload.chunked) {\n                  const chunk = this._getChunk(files[0], xhr);\n                  xhr.send(chunk.dataBlock.data);\n              } else xhr.send(files[0]);\n          } else xhr.send(formData);\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _finished(files, responseText, e) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n              this.emit(\"success\", file, responseText, e);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"successmultiple\", files, responseText, e);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _errorProcessing(files, message, xhr) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n              this.emit(\"error\", file, message, xhr);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"errormultiple\", files, message, xhr);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      static uuidv4() {\n          return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n              let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n              return v.toString(16);\n          });\n      }\n      constructor(el, options){\n          super();\n          let fallback, left;\n          this.element = el;\n          this.clickableElements = [];\n          this.listeners = [];\n          this.files = []; // All files\n          if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n          // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n          if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n          if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n          // Now add this dropzone to the instances.\n          $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n          // Put the dropzone inside the element itself.\n          this.element.dropzone = this;\n          let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n          };\n          this.options = objectExtend(true, {\n          }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n          });\n          this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n          // If the browser failed, just call the fallback and leave\n          if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n          // @options.url = @element.getAttribute \"action\" unless @options.url?\n          if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n          if (!this.options.url) throw new Error(\"No URL provided.\");\n          if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n          if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n          if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n          // Backwards compatibility\n          if (this.options.acceptedMimeTypes) {\n              this.options.acceptedFiles = this.options.acceptedMimeTypes;\n              delete this.options.acceptedMimeTypes;\n          }\n          // Backwards compatibility\n          if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n          ;\n          if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n          if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n          fallback.parentNode.removeChild(fallback);\n          // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n          if (this.options.previewsContainer !== false) {\n              if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n              else this.previewsContainer = this.element;\n          }\n          if (this.options.clickable) {\n              if (this.options.clickable === true) this.clickableElements = [\n                  this.element\n              ];\n              else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n          }\n          this.init();\n      }\n  }\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n  // This is a map of options for your different dropzones. Add configurations\n  // to this object for your different dropzone elemens.\n  //\n  // Example:\n  //\n  //     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n  //\n  // And in html:\n  //\n  //     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n  };\n  // Returns the options for an element or undefined if none available.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n      // Get the `Dropzone.options.elementId` for this element if it exists\n      if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n      else return undefined;\n  };\n  // Holds a list of all dropzone instances\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n  // Returns the dropzone for given element if any\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n      if (typeof element === \"string\") element = document.querySelector(element);\n      if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n      return element.dropzone;\n  };\n  // Looks for all .dropzone elements and creates a dropzone for them\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n      let dropzones;\n      if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n      else {\n          dropzones = [];\n          // IE :(\n          let checkElements = (elements)=>(()=>{\n                  let result = [];\n                  for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                  else result.push(undefined);\n                  return result;\n              })()\n          ;\n          checkElements(document.getElementsByTagName(\"div\"));\n          checkElements(document.getElementsByTagName(\"form\"));\n      }\n      return (()=>{\n          let result = [];\n          for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n          if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n          else result.push(undefined);\n          return result;\n      })();\n  };\n  // Some browsers support drag and drog functionality, but not correctly.\n  //\n  // So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n  // But what to do when browsers *theoretically* support an API, but crash\n  // when using it.\n  //\n  // This is a list of regular expressions tested against navigator.userAgent\n  //\n  // ** It should only be used on browser that *do* support the API, but\n  // incorrectly **\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n      // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n      /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n  ];\n  // Checks if the browser is supported\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n      let capableBrowser = true;\n      if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n          if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n          else {\n              if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n              // configuration.\n              $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n              // The browser supports the API, but may be blocked.\n              for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                  capableBrowser = false;\n                  continue;\n              }\n          }\n      } else capableBrowser = false;\n      return capableBrowser;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n      // convert base64 to raw binary data held in a string\n      // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n      let byteString = atob(dataURI.split(\",\")[1]);\n      // separate out the mime component\n      let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n      // write the bytes of the string to an ArrayBuffer\n      let ab = new ArrayBuffer(byteString.length);\n      let ia = new Uint8Array(ab);\n      for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n      // write the ArrayBuffer to a blob\n      return new Blob([\n          ab\n      ], {\n          type: mimeString\n      });\n  };\n  // Returns an array without the rejected item\n  const $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n      ).map((item)=>item\n      )\n  ;\n  // abc-def_ghi -> abcDefGhi\n  const $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n      )\n  ;\n  // Creates an element from string\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n      let div = document.createElement(\"div\");\n      div.innerHTML = string;\n      return div.childNodes[0];\n  };\n  // Tests if given element is inside (or simply is) the container\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n      if (element === container) return true;\n       // Coffeescript doesn't support do/while loops\n      while(element = element.parentNode){\n          if (element === container) return true;\n      }\n      return false;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n      let element;\n      if (typeof el === \"string\") element = document.querySelector(el);\n      else if (el.nodeType != null) element = el;\n      if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n      return element;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n      let el, elements;\n      if (els instanceof Array) {\n          elements = [];\n          try {\n              for (el of els)elements.push(this.getElement(el, name));\n          } catch (e) {\n              elements = null;\n          }\n      } else if (typeof els === \"string\") {\n          elements = [];\n          for (el of document.querySelectorAll(els))elements.push(el);\n      } else if (els.nodeType != null) elements = [\n          els\n      ];\n      if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n      return elements;\n  };\n  // Asks the user the question and calls accepted or rejected accordingly\n  //\n  // The default implementation just uses `window.confirm` and then calls the\n  // appropriate callback.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n      if (window.confirm(question)) return accepted();\n      else if (rejected != null) return rejected();\n  };\n  // Validates the mime type like this:\n  //\n  // https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n      if (!acceptedFiles) return true;\n       // If there are no accepted mime types, it's OK\n      acceptedFiles = acceptedFiles.split(\",\");\n      let mimeType = file.type;\n      let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n      for (let validType of acceptedFiles){\n          validType = validType.trim();\n          if (validType.charAt(0) === \".\") {\n              if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n          } else if (/\\/\\*$/.test(validType)) {\n              // This is something like a image/* mime type\n              if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n          } else {\n              if (mimeType === validType) return true;\n          }\n      }\n      return false;\n  };\n  // Augment jQuery\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n          return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n      });\n  };\n  // Dropzone file status codes\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n  // For backwards compatibility. Now, if a file is accepted, it's either queued\n  // or uploading.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n  /*\n\n   Bugfix for iOS 6 and 7\n   Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n   based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n   */ // Detecting vertical squash in loaded image.\n  // Fixes a bug which squash image vertically while drawing into canvas for some images.\n  // This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n  let $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n      img.naturalWidth;\n      let ih = img.naturalHeight;\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = ih;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n      // search image edge pixel position in case it is squashed vertically.\n      let sy = 0;\n      let ey = ih;\n      let py = ih;\n      while(py > sy){\n          let alpha = data[(py - 1) * 4 + 3];\n          if (alpha === 0) ey = py;\n          else sy = py;\n          py = ey + sy >> 1;\n      }\n      let ratio = py / ih;\n      if (ratio === 0) return 1;\n      else return ratio;\n  };\n  // A replacement for context.drawImage\n  // (args are for source and destination).\n  var $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n      return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n  // Based on MinifyJpeg\n  // Source: http://www.perry.cz/files/ExifRestorer.js\n  // http://elicon.blog57.fc2.com/blog-entry-206.html\n  class $3ed269f2f0fb224b$var$ExifRestore {\n      static initClass() {\n          this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      }\n      static encode64(input) {\n          let output = \"\";\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          while(true){\n              chr1 = input[i++];\n              chr2 = input[i++];\n              chr3 = input[i++];\n              enc1 = chr1 >> 2;\n              enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n              enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n              enc4 = chr3 & 63;\n              if (isNaN(chr2)) enc3 = enc4 = 64;\n              else if (isNaN(chr3)) enc4 = 64;\n              output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return output;\n      }\n      static restore(origFileBase64, resizedFileBase64) {\n          if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n          let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n          let segments = this.slice2Segments(rawImage);\n          let image = this.exifManipulation(resizedFileBase64, segments);\n          return `data:image/jpeg;base64,${this.encode64(image)}`;\n      }\n      static exifManipulation(resizedFileBase64, segments) {\n          let exifArray = this.getExifArray(segments);\n          let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n          let aBuffer = new Uint8Array(newImageArray);\n          return aBuffer;\n      }\n      static getExifArray(segments) {\n          let seg = undefined;\n          let x = 0;\n          while(x < segments.length){\n              seg = segments[x];\n              if (seg[0] === 255 & seg[1] === 225) return seg;\n              x++;\n          }\n          return [];\n      }\n      static insertExif(resizedFileBase64, exifArray) {\n          let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n          let buf = this.decode64(imageData);\n          let separatePoint = buf.indexOf(255, 3);\n          let mae = buf.slice(0, separatePoint);\n          let ato = buf.slice(separatePoint);\n          let array = mae;\n          array = array.concat(exifArray);\n          array = array.concat(ato);\n          return array;\n      }\n      static slice2Segments(rawImageArray) {\n          let head = 0;\n          let segments = [];\n          while(true){\n              var length;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n              else {\n                  length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                  let endPoint = head + length + 2;\n                  let seg = rawImageArray.slice(head, endPoint);\n                  segments.push(seg);\n                  head = endPoint;\n              }\n              if (head > rawImageArray.length) break;\n          }\n          return segments;\n      }\n      static decode64(input) {\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          let buf = [];\n          // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n          let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n          if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n          input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n          while(true){\n              enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n              chr1 = enc1 << 2 | enc2 >> 4;\n              chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n              chr3 = (enc3 & 3) << 6 | enc4;\n              buf.push(chr1);\n              if (enc3 !== 64) buf.push(chr2);\n              if (enc4 !== 64) buf.push(chr3);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return buf;\n      }\n  }\n  $3ed269f2f0fb224b$var$ExifRestore.initClass();\n  function $3ed269f2f0fb224b$var$__guard__(value, transform) {\n      return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n  }\n  function $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n      if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n      else return undefined;\n  }\n\n  if (document.querySelector('div.form__dropzone')) {\n    new $3ed269f2f0fb224b$export$2e2bcd8739ae039(\"div.form__dropzone\", {\n      url: \"/file/post\",\n      createImageThumbnails: false,\n      dictDefaultMessage: 'Here'\n    });\n  }\n\n  const HOOKS = [\n      \"onChange\",\n      \"onClose\",\n      \"onDayCreate\",\n      \"onDestroy\",\n      \"onKeyDown\",\n      \"onMonthChange\",\n      \"onOpen\",\n      \"onParseConfig\",\n      \"onReady\",\n      \"onValueUpdate\",\n      \"onYearChange\",\n      \"onPreCalendarPosition\",\n  ];\n  const defaults = {\n      _disable: [],\n      allowInput: false,\n      allowInvalidPreload: false,\n      altFormat: \"F j, Y\",\n      altInput: false,\n      altInputClass: \"form-control input\",\n      animate: typeof window === \"object\" &&\n          window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n      ariaDateFormat: \"F j, Y\",\n      autoFillDefaultTime: true,\n      clickOpens: true,\n      closeOnSelect: true,\n      conjunction: \", \",\n      dateFormat: \"Y-m-d\",\n      defaultHour: 12,\n      defaultMinute: 0,\n      defaultSeconds: 0,\n      disable: [],\n      disableMobile: false,\n      enableSeconds: false,\n      enableTime: false,\n      errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n      getWeek: (givenDate) => {\n          const date = new Date(givenDate.getTime());\n          date.setHours(0, 0, 0, 0);\n          date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n          var week1 = new Date(date.getFullYear(), 0, 4);\n          return (1 +\n              Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                  3 +\n                  ((week1.getDay() + 6) % 7)) /\n                  7));\n      },\n      hourIncrement: 1,\n      ignoredFocusElements: [],\n      inline: false,\n      locale: \"default\",\n      minuteIncrement: 5,\n      mode: \"single\",\n      monthSelectorType: \"dropdown\",\n      nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n      noCalendar: false,\n      now: new Date(),\n      onChange: [],\n      onClose: [],\n      onDayCreate: [],\n      onDestroy: [],\n      onKeyDown: [],\n      onMonthChange: [],\n      onOpen: [],\n      onParseConfig: [],\n      onReady: [],\n      onValueUpdate: [],\n      onYearChange: [],\n      onPreCalendarPosition: [],\n      plugins: [],\n      position: \"auto\",\n      positionElement: undefined,\n      prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n      shorthandCurrentMonth: false,\n      showMonths: 1,\n      static: false,\n      time_24hr: false,\n      weekNumbers: false,\n      wrap: false,\n  };\n\n  const english = {\n      weekdays: {\n          shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n          longhand: [\n              \"Sunday\",\n              \"Monday\",\n              \"Tuesday\",\n              \"Wednesday\",\n              \"Thursday\",\n              \"Friday\",\n              \"Saturday\",\n          ],\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"May\",\n              \"Jun\",\n              \"Jul\",\n              \"Aug\",\n              \"Sep\",\n              \"Oct\",\n              \"Nov\",\n              \"Dec\",\n          ],\n          longhand: [\n              \"January\",\n              \"February\",\n              \"March\",\n              \"April\",\n              \"May\",\n              \"June\",\n              \"July\",\n              \"August\",\n              \"September\",\n              \"October\",\n              \"November\",\n              \"December\",\n          ],\n      },\n      daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n      firstDayOfWeek: 0,\n      ordinal: (nth) => {\n          const s = nth % 100;\n          if (s > 3 && s < 21)\n              return \"th\";\n          switch (s % 10) {\n              case 1:\n                  return \"st\";\n              case 2:\n                  return \"nd\";\n              case 3:\n                  return \"rd\";\n              default:\n                  return \"th\";\n          }\n      },\n      rangeSeparator: \" to \",\n      weekAbbreviation: \"Wk\",\n      scrollTitle: \"Scroll to increment\",\n      toggleTitle: \"Click to toggle\",\n      amPM: [\"AM\", \"PM\"],\n      yearAriaLabel: \"Year\",\n      monthAriaLabel: \"Month\",\n      hourAriaLabel: \"Hour\",\n      minuteAriaLabel: \"Minute\",\n      time_24hr: false,\n  };\n\n  const pad = (number, length = 2) => `000${number}`.slice(length * -1);\n  const int = (bool) => (bool === true ? 1 : 0);\n  function debounce(fn, wait) {\n      let t;\n      return function () {\n          clearTimeout(t);\n          t = setTimeout(() => fn.apply(this, arguments), wait);\n      };\n  }\n  const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n\n  function toggleClass(elem, className, bool) {\n      if (bool === true)\n          return elem.classList.add(className);\n      elem.classList.remove(className);\n  }\n  function createElement(tag, className, content) {\n      const e = window.document.createElement(tag);\n      className = className || \"\";\n      content = content || \"\";\n      e.className = className;\n      if (content !== undefined)\n          e.textContent = content;\n      return e;\n  }\n  function clearNode(node) {\n      while (node.firstChild)\n          node.removeChild(node.firstChild);\n  }\n  function findParent(node, condition) {\n      if (condition(node))\n          return node;\n      else if (node.parentNode)\n          return findParent(node.parentNode, condition);\n      return undefined;\n  }\n  function createNumberInput(inputClassName, opts) {\n      const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n      if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n          numInput.type = \"number\";\n      }\n      else {\n          numInput.type = \"text\";\n          numInput.pattern = \"\\\\d*\";\n      }\n      if (opts !== undefined)\n          for (const key in opts)\n              numInput.setAttribute(key, opts[key]);\n      wrapper.appendChild(numInput);\n      wrapper.appendChild(arrowUp);\n      wrapper.appendChild(arrowDown);\n      return wrapper;\n  }\n  function getEventTarget(event) {\n      try {\n          if (typeof event.composedPath === \"function\") {\n              const path = event.composedPath();\n              return path[0];\n          }\n          return event.target;\n      }\n      catch (error) {\n          return event.target;\n      }\n  }\n\n  const doNothing = () => undefined;\n  const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n  const revFormat = {\n      D: doNothing,\n      F: function (dateObj, monthName, locale) {\n          dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n      },\n      G: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      H: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      J: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      K: (dateObj, amPM, locale) => {\n          dateObj.setHours((dateObj.getHours() % 12) +\n              12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n      },\n      M: function (dateObj, shortMonth, locale) {\n          dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n      },\n      S: (dateObj, seconds) => {\n          dateObj.setSeconds(parseFloat(seconds));\n      },\n      U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n      W: function (dateObj, weekNum, locale) {\n          const weekNumber = parseInt(weekNum);\n          const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n          date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n          return date;\n      },\n      Y: (dateObj, year) => {\n          dateObj.setFullYear(parseFloat(year));\n      },\n      Z: (_, ISODate) => new Date(ISODate),\n      d: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      h: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      i: (dateObj, minutes) => {\n          dateObj.setMinutes(parseFloat(minutes));\n      },\n      j: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      l: doNothing,\n      m: (dateObj, month) => {\n          dateObj.setMonth(parseFloat(month) - 1);\n      },\n      n: (dateObj, month) => {\n          dateObj.setMonth(parseFloat(month) - 1);\n      },\n      s: (dateObj, seconds) => {\n          dateObj.setSeconds(parseFloat(seconds));\n      },\n      u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n      w: doNothing,\n      y: (dateObj, year) => {\n          dateObj.setFullYear(2000 + parseFloat(year));\n      },\n  };\n  const tokenRegex = {\n      D: \"(\\\\w+)\",\n      F: \"(\\\\w+)\",\n      G: \"(\\\\d\\\\d|\\\\d)\",\n      H: \"(\\\\d\\\\d|\\\\d)\",\n      J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n      K: \"\",\n      M: \"(\\\\w+)\",\n      S: \"(\\\\d\\\\d|\\\\d)\",\n      U: \"(.+)\",\n      W: \"(\\\\d\\\\d|\\\\d)\",\n      Y: \"(\\\\d{4})\",\n      Z: \"(.+)\",\n      d: \"(\\\\d\\\\d|\\\\d)\",\n      h: \"(\\\\d\\\\d|\\\\d)\",\n      i: \"(\\\\d\\\\d|\\\\d)\",\n      j: \"(\\\\d\\\\d|\\\\d)\",\n      l: \"(\\\\w+)\",\n      m: \"(\\\\d\\\\d|\\\\d)\",\n      n: \"(\\\\d\\\\d|\\\\d)\",\n      s: \"(\\\\d\\\\d|\\\\d)\",\n      u: \"(.+)\",\n      w: \"(\\\\d\\\\d|\\\\d)\",\n      y: \"(\\\\d{2})\",\n  };\n  const formats = {\n      Z: (date) => date.toISOString(),\n      D: function (date, locale, options) {\n          return locale.weekdays.shorthand[formats.w(date, locale, options)];\n      },\n      F: function (date, locale, options) {\n          return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n      },\n      G: function (date, locale, options) {\n          return pad(formats.h(date, locale, options));\n      },\n      H: (date) => pad(date.getHours()),\n      J: function (date, locale) {\n          return locale.ordinal !== undefined\n              ? date.getDate() + locale.ordinal(date.getDate())\n              : date.getDate();\n      },\n      K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n      M: function (date, locale) {\n          return monthToStr(date.getMonth(), true, locale);\n      },\n      S: (date) => pad(date.getSeconds()),\n      U: (date) => date.getTime() / 1000,\n      W: function (date, _, options) {\n          return options.getWeek(date);\n      },\n      Y: (date) => pad(date.getFullYear(), 4),\n      d: (date) => pad(date.getDate()),\n      h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n      i: (date) => pad(date.getMinutes()),\n      j: (date) => date.getDate(),\n      l: function (date, locale) {\n          return locale.weekdays.longhand[date.getDay()];\n      },\n      m: (date) => pad(date.getMonth() + 1),\n      n: (date) => date.getMonth() + 1,\n      s: (date) => date.getSeconds(),\n      u: (date) => date.getTime(),\n      w: (date) => date.getDay(),\n      y: (date) => String(date.getFullYear()).substring(2),\n  };\n\n  const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n      const locale = overrideLocale || l10n;\n      if (config.formatDate !== undefined && !isMobile) {\n          return config.formatDate(dateObj, frmt, locale);\n      }\n      return frmt\n          .split(\"\")\n          .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n          ? formats[c](dateObj, locale, config)\n          : c !== \"\\\\\"\n              ? c\n              : \"\")\n          .join(\"\");\n  };\n  const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n      if (date !== 0 && !date)\n          return undefined;\n      const locale = customLocale || l10n;\n      let parsedDate;\n      const dateOrig = date;\n      if (date instanceof Date)\n          parsedDate = new Date(date.getTime());\n      else if (typeof date !== \"string\" &&\n          date.toFixed !== undefined)\n          parsedDate = new Date(date);\n      else if (typeof date === \"string\") {\n          const format = givenFormat || (config || defaults).dateFormat;\n          const datestr = String(date).trim();\n          if (datestr === \"today\") {\n              parsedDate = new Date();\n              timeless = true;\n          }\n          else if (/Z$/.test(datestr) ||\n              /GMT$/.test(datestr))\n              parsedDate = new Date(date);\n          else if (config && config.parseDate)\n              parsedDate = config.parseDate(date, format);\n          else {\n              parsedDate =\n                  !config || !config.noCalendar\n                      ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                      : new Date(new Date().setHours(0, 0, 0, 0));\n              let matched, ops = [];\n              for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                  const token = format[i];\n                  const isBackSlash = token === \"\\\\\";\n                  const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                  if (tokenRegex[token] && !escaped) {\n                      regexStr += tokenRegex[token];\n                      const match = new RegExp(regexStr).exec(date);\n                      if (match && (matched = true)) {\n                          ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                              fn: revFormat[token],\n                              val: match[++matchIndex],\n                          });\n                      }\n                  }\n                  else if (!isBackSlash)\n                      regexStr += \".\";\n                  ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n              }\n              parsedDate = matched ? parsedDate : undefined;\n          }\n      }\n      if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n          config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n          return undefined;\n      }\n      if (timeless === true)\n          parsedDate.setHours(0, 0, 0, 0);\n      return parsedDate;\n  };\n  function compareDates(date1, date2, timeless = true) {\n      if (timeless !== false) {\n          return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n              new Date(date2.getTime()).setHours(0, 0, 0, 0));\n      }\n      return date1.getTime() - date2.getTime();\n  }\n  const isBetween = (ts, ts1, ts2) => {\n      return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n  };\n  const duration = {\n      DAY: 86400000,\n  };\n  function getDefaultHours(config) {\n      let hours = config.defaultHour;\n      let minutes = config.defaultMinute;\n      let seconds = config.defaultSeconds;\n      if (config.minDate !== undefined) {\n          const minHour = config.minDate.getHours();\n          const minMinutes = config.minDate.getMinutes();\n          const minSeconds = config.minDate.getSeconds();\n          if (hours < minHour) {\n              hours = minHour;\n          }\n          if (hours === minHour && minutes < minMinutes) {\n              minutes = minMinutes;\n          }\n          if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n              seconds = config.minDate.getSeconds();\n      }\n      if (config.maxDate !== undefined) {\n          const maxHr = config.maxDate.getHours();\n          const maxMinutes = config.maxDate.getMinutes();\n          hours = Math.min(hours, maxHr);\n          if (hours === maxHr)\n              minutes = Math.min(maxMinutes, minutes);\n          if (hours === maxHr && minutes === maxMinutes)\n              seconds = config.maxDate.getSeconds();\n      }\n      return { hours, minutes, seconds };\n  }\n\n  if (typeof Object.assign !== \"function\") {\n      Object.assign = function (target, ...args) {\n          if (!target) {\n              throw TypeError(\"Cannot convert undefined or null to object\");\n          }\n          for (const source of args) {\n              if (source) {\n                  Object.keys(source).forEach((key) => (target[key] = source[key]));\n              }\n          }\n          return target;\n      };\n  }\n\n  const DEBOUNCED_CHANGE_MS = 300;\n  function FlatpickrInstance(element, instanceConfig) {\n      const self = {\n          config: Object.assign(Object.assign({}, defaults), flatpickr.defaultConfig),\n          l10n: english,\n      };\n      self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n      self._handlers = [];\n      self.pluginElements = [];\n      self.loadedPlugins = [];\n      self._bind = bind;\n      self._setHoursFromDate = setHoursFromDate;\n      self._positionCalendar = positionCalendar;\n      self.changeMonth = changeMonth;\n      self.changeYear = changeYear;\n      self.clear = clear;\n      self.close = close;\n      self._createElement = createElement;\n      self.destroy = destroy;\n      self.isEnabled = isEnabled;\n      self.jumpToDate = jumpToDate;\n      self.open = open;\n      self.redraw = redraw;\n      self.set = set;\n      self.setDate = setDate;\n      self.toggle = toggle;\n      function setupHelperFunctions() {\n          self.utils = {\n              getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                  if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                      return 29;\n                  return self.l10n.daysInMonth[month];\n              },\n          };\n      }\n      function init() {\n          self.element = self.input = element;\n          self.isOpen = false;\n          parseConfig();\n          setupLocale();\n          setupInputs();\n          setupDates();\n          setupHelperFunctions();\n          if (!self.isMobile)\n              build();\n          bindEvents();\n          if (self.selectedDates.length || self.config.noCalendar) {\n              if (self.config.enableTime) {\n                  setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n              }\n              updateValue(false);\n          }\n          setCalendarWidth();\n          const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n          if (!self.isMobile && isSafari) {\n              positionCalendar();\n          }\n          triggerEvent(\"onReady\");\n      }\n      function bindToInstance(fn) {\n          return fn.bind(self);\n      }\n      function setCalendarWidth() {\n          const config = self.config;\n          if (config.weekNumbers === false && config.showMonths === 1) {\n              return;\n          }\n          else if (config.noCalendar !== true) {\n              window.requestAnimationFrame(function () {\n                  if (self.calendarContainer !== undefined) {\n                      self.calendarContainer.style.visibility = \"hidden\";\n                      self.calendarContainer.style.display = \"block\";\n                  }\n                  if (self.daysContainer !== undefined) {\n                      const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                      self.daysContainer.style.width = daysWidth + \"px\";\n                      self.calendarContainer.style.width =\n                          daysWidth +\n                              (self.weekWrapper !== undefined\n                                  ? self.weekWrapper.offsetWidth\n                                  : 0) +\n                              \"px\";\n                      self.calendarContainer.style.removeProperty(\"visibility\");\n                      self.calendarContainer.style.removeProperty(\"display\");\n                  }\n              });\n          }\n      }\n      function updateTime(e) {\n          if (self.selectedDates.length === 0) {\n              const defaultDate = self.config.minDate === undefined ||\n                  compareDates(new Date(), self.config.minDate) >= 0\n                  ? new Date()\n                  : new Date(self.config.minDate.getTime());\n              const defaults = getDefaultHours(self.config);\n              defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n              self.selectedDates = [defaultDate];\n              self.latestSelectedDateObj = defaultDate;\n          }\n          if (e !== undefined && e.type !== \"blur\") {\n              timeWrapper(e);\n          }\n          const prevValue = self._input.value;\n          setHoursFromInputs();\n          updateValue();\n          if (self._input.value !== prevValue) {\n              self._debouncedChange();\n          }\n      }\n      function ampm2military(hour, amPM) {\n          return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n      }\n      function military2ampm(hour) {\n          switch (hour % 24) {\n              case 0:\n              case 12:\n                  return 12;\n              default:\n                  return hour % 12;\n          }\n      }\n      function setHoursFromInputs() {\n          if (self.hourElement === undefined || self.minuteElement === undefined)\n              return;\n          let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n              ? (parseInt(self.secondElement.value, 10) || 0) % 60\n              : 0;\n          if (self.amPM !== undefined) {\n              hours = ampm2military(hours, self.amPM.textContent);\n          }\n          const limitMinHours = self.config.minTime !== undefined ||\n              (self.config.minDate &&\n                  self.minDateHasTime &&\n                  self.latestSelectedDateObj &&\n                  compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                      0);\n          const limitMaxHours = self.config.maxTime !== undefined ||\n              (self.config.maxDate &&\n                  self.maxDateHasTime &&\n                  self.latestSelectedDateObj &&\n                  compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                      0);\n          if (limitMaxHours) {\n              const maxTime = self.config.maxTime !== undefined\n                  ? self.config.maxTime\n                  : self.config.maxDate;\n              hours = Math.min(hours, maxTime.getHours());\n              if (hours === maxTime.getHours())\n                  minutes = Math.min(minutes, maxTime.getMinutes());\n              if (minutes === maxTime.getMinutes())\n                  seconds = Math.min(seconds, maxTime.getSeconds());\n          }\n          if (limitMinHours) {\n              const minTime = self.config.minTime !== undefined\n                  ? self.config.minTime\n                  : self.config.minDate;\n              hours = Math.max(hours, minTime.getHours());\n              if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                  minutes = minTime.getMinutes();\n              if (minutes === minTime.getMinutes())\n                  seconds = Math.max(seconds, minTime.getSeconds());\n          }\n          setHours(hours, minutes, seconds);\n      }\n      function setHoursFromDate(dateObj) {\n          const date = dateObj || self.latestSelectedDateObj;\n          if (date) {\n              setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n          }\n      }\n      function setHours(hours, minutes, seconds) {\n          if (self.latestSelectedDateObj !== undefined) {\n              self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n          }\n          if (!self.hourElement || !self.minuteElement || self.isMobile)\n              return;\n          self.hourElement.value = pad(!self.config.time_24hr\n              ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n              : hours);\n          self.minuteElement.value = pad(minutes);\n          if (self.amPM !== undefined)\n              self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n          if (self.secondElement !== undefined)\n              self.secondElement.value = pad(seconds);\n      }\n      function onYearInput(event) {\n          const eventTarget = getEventTarget(event);\n          const year = parseInt(eventTarget.value) + (event.delta || 0);\n          if (year / 1000 > 1 ||\n              (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n              changeYear(year);\n          }\n      }\n      function bind(element, event, handler, options) {\n          if (event instanceof Array)\n              return event.forEach((ev) => bind(element, ev, handler, options));\n          if (element instanceof Array)\n              return element.forEach((el) => bind(el, event, handler, options));\n          element.addEventListener(event, handler, options);\n          self._handlers.push({\n              remove: () => element.removeEventListener(event, handler),\n          });\n      }\n      function triggerChange() {\n          triggerEvent(\"onChange\");\n      }\n      function bindEvents() {\n          if (self.config.wrap) {\n              [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                  Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n              });\n          }\n          if (self.isMobile) {\n              setupMobile();\n              return;\n          }\n          const debouncedResize = debounce(onResize, 50);\n          self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n          if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n              bind(self.daysContainer, \"mouseover\", (e) => {\n                  if (self.config.mode === \"range\")\n                      onMouseOver(getEventTarget(e));\n              });\n          bind(window.document.body, \"keydown\", onKeyDown);\n          if (!self.config.inline && !self.config.static)\n              bind(window, \"resize\", debouncedResize);\n          if (window.ontouchstart !== undefined)\n              bind(window.document, \"touchstart\", documentClick);\n          else\n              bind(window.document, \"mousedown\", documentClick);\n          bind(window.document, \"focus\", documentClick, { capture: true });\n          if (self.config.clickOpens === true) {\n              bind(self._input, \"focus\", self.open);\n              bind(self._input, \"click\", self.open);\n          }\n          if (self.daysContainer !== undefined) {\n              bind(self.monthNav, \"click\", onMonthNavClick);\n              bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n              bind(self.daysContainer, \"click\", selectDate);\n          }\n          if (self.timeContainer !== undefined &&\n              self.minuteElement !== undefined &&\n              self.hourElement !== undefined) {\n              const selText = (e) => getEventTarget(e).select();\n              bind(self.timeContainer, [\"increment\"], updateTime);\n              bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n              bind(self.timeContainer, \"click\", timeIncrement);\n              bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n              if (self.secondElement !== undefined)\n                  bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n              if (self.amPM !== undefined) {\n                  bind(self.amPM, \"click\", (e) => {\n                      updateTime(e);\n                      triggerChange();\n                  });\n              }\n          }\n          if (self.config.allowInput) {\n              bind(self._input, \"blur\", onBlur);\n          }\n      }\n      function jumpToDate(jumpDate, triggerChange) {\n          const jumpTo = jumpDate !== undefined\n              ? self.parseDate(jumpDate)\n              : self.latestSelectedDateObj ||\n                  (self.config.minDate && self.config.minDate > self.now\n                      ? self.config.minDate\n                      : self.config.maxDate && self.config.maxDate < self.now\n                          ? self.config.maxDate\n                          : self.now);\n          const oldYear = self.currentYear;\n          const oldMonth = self.currentMonth;\n          try {\n              if (jumpTo !== undefined) {\n                  self.currentYear = jumpTo.getFullYear();\n                  self.currentMonth = jumpTo.getMonth();\n              }\n          }\n          catch (e) {\n              e.message = \"Invalid date supplied: \" + jumpTo;\n              self.config.errorHandler(e);\n          }\n          if (triggerChange && self.currentYear !== oldYear) {\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n          if (triggerChange &&\n              (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n              triggerEvent(\"onMonthChange\");\n          }\n          self.redraw();\n      }\n      function timeIncrement(e) {\n          const eventTarget = getEventTarget(e);\n          if (~eventTarget.className.indexOf(\"arrow\"))\n              incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n      }\n      function incrementNumInput(e, delta, inputElem) {\n          const target = e && getEventTarget(e);\n          const input = inputElem ||\n              (target && target.parentNode && target.parentNode.firstChild);\n          const event = createEvent(\"increment\");\n          event.delta = delta;\n          input && input.dispatchEvent(event);\n      }\n      function build() {\n          const fragment = window.document.createDocumentFragment();\n          self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n          self.calendarContainer.tabIndex = -1;\n          if (!self.config.noCalendar) {\n              fragment.appendChild(buildMonthNav());\n              self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n              if (self.config.weekNumbers) {\n                  const { weekWrapper, weekNumbers } = buildWeeks();\n                  self.innerContainer.appendChild(weekWrapper);\n                  self.weekNumbers = weekNumbers;\n                  self.weekWrapper = weekWrapper;\n              }\n              self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n              self.rContainer.appendChild(buildWeekdays());\n              if (!self.daysContainer) {\n                  self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                  self.daysContainer.tabIndex = -1;\n              }\n              buildDays();\n              self.rContainer.appendChild(self.daysContainer);\n              self.innerContainer.appendChild(self.rContainer);\n              fragment.appendChild(self.innerContainer);\n          }\n          if (self.config.enableTime) {\n              fragment.appendChild(buildTime());\n          }\n          toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n          toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n          toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n          self.calendarContainer.appendChild(fragment);\n          const customAppend = self.config.appendTo !== undefined &&\n              self.config.appendTo.nodeType !== undefined;\n          if (self.config.inline || self.config.static) {\n              self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n              if (self.config.inline) {\n                  if (!customAppend && self.element.parentNode)\n                      self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                  else if (self.config.appendTo !== undefined)\n                      self.config.appendTo.appendChild(self.calendarContainer);\n              }\n              if (self.config.static) {\n                  const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                  if (self.element.parentNode)\n                      self.element.parentNode.insertBefore(wrapper, self.element);\n                  wrapper.appendChild(self.element);\n                  if (self.altInput)\n                      wrapper.appendChild(self.altInput);\n                  wrapper.appendChild(self.calendarContainer);\n              }\n          }\n          if (!self.config.static && !self.config.inline)\n              (self.config.appendTo !== undefined\n                  ? self.config.appendTo\n                  : window.document.body).appendChild(self.calendarContainer);\n      }\n      function createDay(className, date, dayNumber, i) {\n          const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n          dayElement.dateObj = date;\n          dayElement.$i = i;\n          dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n          if (className.indexOf(\"hidden\") === -1 &&\n              compareDates(date, self.now) === 0) {\n              self.todayDateElem = dayElement;\n              dayElement.classList.add(\"today\");\n              dayElement.setAttribute(\"aria-current\", \"date\");\n          }\n          if (dateIsEnabled) {\n              dayElement.tabIndex = -1;\n              if (isDateSelected(date)) {\n                  dayElement.classList.add(\"selected\");\n                  self.selectedDateElem = dayElement;\n                  if (self.config.mode === \"range\") {\n                      toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                          compareDates(date, self.selectedDates[0], true) === 0);\n                      toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                          compareDates(date, self.selectedDates[1], true) === 0);\n                      if (className === \"nextMonthDay\")\n                          dayElement.classList.add(\"inRange\");\n                  }\n              }\n          }\n          else {\n              dayElement.classList.add(\"flatpickr-disabled\");\n          }\n          if (self.config.mode === \"range\") {\n              if (isDateInRange(date) && !isDateSelected(date))\n                  dayElement.classList.add(\"inRange\");\n          }\n          if (self.weekNumbers &&\n              self.config.showMonths === 1 &&\n              className !== \"prevMonthDay\" &&\n              dayNumber % 7 === 1) {\n              self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n          }\n          triggerEvent(\"onDayCreate\", dayElement);\n          return dayElement;\n      }\n      function focusOnDayElem(targetNode) {\n          targetNode.focus();\n          if (self.config.mode === \"range\")\n              onMouseOver(targetNode);\n      }\n      function getFirstAvailableDay(delta) {\n          const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n          const endMonth = delta > 0 ? self.config.showMonths : -1;\n          for (let m = startMonth; m != endMonth; m += delta) {\n              const month = self.daysContainer.children[m];\n              const startIndex = delta > 0 ? 0 : month.children.length - 1;\n              const endIndex = delta > 0 ? month.children.length : -1;\n              for (let i = startIndex; i != endIndex; i += delta) {\n                  const c = month.children[i];\n                  if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                      return c;\n              }\n          }\n          return undefined;\n      }\n      function getNextAvailableDay(current, delta) {\n          const givenMonth = current.className.indexOf(\"Month\") === -1\n              ? current.dateObj.getMonth()\n              : self.currentMonth;\n          const endMonth = delta > 0 ? self.config.showMonths : -1;\n          const loopDelta = delta > 0 ? 1 : -1;\n          for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n              const month = self.daysContainer.children[m];\n              const startIndex = givenMonth - self.currentMonth === m\n                  ? current.$i + delta\n                  : delta < 0\n                      ? month.children.length - 1\n                      : 0;\n              const numMonthDays = month.children.length;\n              for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                  const c = month.children[i];\n                  if (c.className.indexOf(\"hidden\") === -1 &&\n                      isEnabled(c.dateObj) &&\n                      Math.abs(current.$i - i) >= Math.abs(delta))\n                      return focusOnDayElem(c);\n              }\n          }\n          self.changeMonth(loopDelta);\n          focusOnDay(getFirstAvailableDay(loopDelta), 0);\n          return undefined;\n      }\n      function focusOnDay(current, offset) {\n          const dayFocused = isInView(document.activeElement || document.body);\n          const startElem = current !== undefined\n              ? current\n              : dayFocused\n                  ? document.activeElement\n                  : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                      ? self.selectedDateElem\n                      : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                          ? self.todayDateElem\n                          : getFirstAvailableDay(offset > 0 ? 1 : -1);\n          if (startElem === undefined) {\n              self._input.focus();\n          }\n          else if (!dayFocused) {\n              focusOnDayElem(startElem);\n          }\n          else {\n              getNextAvailableDay(startElem, offset);\n          }\n      }\n      function buildMonthDays(year, month) {\n          const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n          const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n          const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n          let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n          for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n              days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n          }\n          for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n              days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n          }\n          for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n              (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n              days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n          }\n          const dayContainer = createElement(\"div\", \"dayContainer\");\n          dayContainer.appendChild(days);\n          return dayContainer;\n      }\n      function buildDays() {\n          if (self.daysContainer === undefined) {\n              return;\n          }\n          clearNode(self.daysContainer);\n          if (self.weekNumbers)\n              clearNode(self.weekNumbers);\n          const frag = document.createDocumentFragment();\n          for (let i = 0; i < self.config.showMonths; i++) {\n              const d = new Date(self.currentYear, self.currentMonth, 1);\n              d.setMonth(self.currentMonth + i);\n              frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n          }\n          self.daysContainer.appendChild(frag);\n          self.days = self.daysContainer.firstChild;\n          if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n              onMouseOver();\n          }\n      }\n      function buildMonthSwitch() {\n          if (self.config.showMonths > 1 ||\n              self.config.monthSelectorType !== \"dropdown\")\n              return;\n          const shouldBuildMonth = function (month) {\n              if (self.config.minDate !== undefined &&\n                  self.currentYear === self.config.minDate.getFullYear() &&\n                  month < self.config.minDate.getMonth()) {\n                  return false;\n              }\n              return !(self.config.maxDate !== undefined &&\n                  self.currentYear === self.config.maxDate.getFullYear() &&\n                  month > self.config.maxDate.getMonth());\n          };\n          self.monthsDropdownContainer.tabIndex = -1;\n          self.monthsDropdownContainer.innerHTML = \"\";\n          for (let i = 0; i < 12; i++) {\n              if (!shouldBuildMonth(i))\n                  continue;\n              const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n              month.value = new Date(self.currentYear, i).getMonth().toString();\n              month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n              month.tabIndex = -1;\n              if (self.currentMonth === i) {\n                  month.selected = true;\n              }\n              self.monthsDropdownContainer.appendChild(month);\n          }\n      }\n      function buildMonth() {\n          const container = createElement(\"div\", \"flatpickr-month\");\n          const monthNavFragment = window.document.createDocumentFragment();\n          let monthElement;\n          if (self.config.showMonths > 1 ||\n              self.config.monthSelectorType === \"static\") {\n              monthElement = createElement(\"span\", \"cur-month\");\n          }\n          else {\n              self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n              self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n              bind(self.monthsDropdownContainer, \"change\", (e) => {\n                  const target = getEventTarget(e);\n                  const selectedMonth = parseInt(target.value, 10);\n                  self.changeMonth(selectedMonth - self.currentMonth);\n                  triggerEvent(\"onMonthChange\");\n              });\n              buildMonthSwitch();\n              monthElement = self.monthsDropdownContainer;\n          }\n          const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n          const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n          yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n          if (self.config.minDate) {\n              yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n          }\n          if (self.config.maxDate) {\n              yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n              yearElement.disabled =\n                  !!self.config.minDate &&\n                      self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n          }\n          const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n          currentMonth.appendChild(monthElement);\n          currentMonth.appendChild(yearInput);\n          monthNavFragment.appendChild(currentMonth);\n          container.appendChild(monthNavFragment);\n          return {\n              container,\n              yearElement,\n              monthElement,\n          };\n      }\n      function buildMonths() {\n          clearNode(self.monthNav);\n          self.monthNav.appendChild(self.prevMonthNav);\n          if (self.config.showMonths) {\n              self.yearElements = [];\n              self.monthElements = [];\n          }\n          for (let m = self.config.showMonths; m--;) {\n              const month = buildMonth();\n              self.yearElements.push(month.yearElement);\n              self.monthElements.push(month.monthElement);\n              self.monthNav.appendChild(month.container);\n          }\n          self.monthNav.appendChild(self.nextMonthNav);\n      }\n      function buildMonthNav() {\n          self.monthNav = createElement(\"div\", \"flatpickr-months\");\n          self.yearElements = [];\n          self.monthElements = [];\n          self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n          self.prevMonthNav.innerHTML = self.config.prevArrow;\n          self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n          self.nextMonthNav.innerHTML = self.config.nextArrow;\n          buildMonths();\n          Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n              get: () => self.__hidePrevMonthArrow,\n              set(bool) {\n                  if (self.__hidePrevMonthArrow !== bool) {\n                      toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                      self.__hidePrevMonthArrow = bool;\n                  }\n              },\n          });\n          Object.defineProperty(self, \"_hideNextMonthArrow\", {\n              get: () => self.__hideNextMonthArrow,\n              set(bool) {\n                  if (self.__hideNextMonthArrow !== bool) {\n                      toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                      self.__hideNextMonthArrow = bool;\n                  }\n              },\n          });\n          self.currentYearElement = self.yearElements[0];\n          updateNavigationCurrentMonth();\n          return self.monthNav;\n      }\n      function buildTime() {\n          self.calendarContainer.classList.add(\"hasTime\");\n          if (self.config.noCalendar)\n              self.calendarContainer.classList.add(\"noCalendar\");\n          const defaults = getDefaultHours(self.config);\n          self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n          self.timeContainer.tabIndex = -1;\n          const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n          const hourInput = createNumberInput(\"flatpickr-hour\", {\n              \"aria-label\": self.l10n.hourAriaLabel,\n          });\n          self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n          const minuteInput = createNumberInput(\"flatpickr-minute\", {\n              \"aria-label\": self.l10n.minuteAriaLabel,\n          });\n          self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n          self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n          self.hourElement.value = pad(self.latestSelectedDateObj\n              ? self.latestSelectedDateObj.getHours()\n              : self.config.time_24hr\n                  ? defaults.hours\n                  : military2ampm(defaults.hours));\n          self.minuteElement.value = pad(self.latestSelectedDateObj\n              ? self.latestSelectedDateObj.getMinutes()\n              : defaults.minutes);\n          self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n          self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n          self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n          self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n          self.hourElement.setAttribute(\"maxlength\", \"2\");\n          self.minuteElement.setAttribute(\"min\", \"0\");\n          self.minuteElement.setAttribute(\"max\", \"59\");\n          self.minuteElement.setAttribute(\"maxlength\", \"2\");\n          self.timeContainer.appendChild(hourInput);\n          self.timeContainer.appendChild(separator);\n          self.timeContainer.appendChild(minuteInput);\n          if (self.config.time_24hr)\n              self.timeContainer.classList.add(\"time24hr\");\n          if (self.config.enableSeconds) {\n              self.timeContainer.classList.add(\"hasSeconds\");\n              const secondInput = createNumberInput(\"flatpickr-second\");\n              self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n              self.secondElement.value = pad(self.latestSelectedDateObj\n                  ? self.latestSelectedDateObj.getSeconds()\n                  : defaults.seconds);\n              self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n              self.secondElement.setAttribute(\"min\", \"0\");\n              self.secondElement.setAttribute(\"max\", \"59\");\n              self.secondElement.setAttribute(\"maxlength\", \"2\");\n              self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n              self.timeContainer.appendChild(secondInput);\n          }\n          if (!self.config.time_24hr) {\n              self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                  ? self.hourElement.value\n                  : self.config.defaultHour) > 11)]);\n              self.amPM.title = self.l10n.toggleTitle;\n              self.amPM.tabIndex = -1;\n              self.timeContainer.appendChild(self.amPM);\n          }\n          return self.timeContainer;\n      }\n      function buildWeekdays() {\n          if (!self.weekdayContainer)\n              self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n          else\n              clearNode(self.weekdayContainer);\n          for (let i = self.config.showMonths; i--;) {\n              const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n              self.weekdayContainer.appendChild(container);\n          }\n          updateWeekdays();\n          return self.weekdayContainer;\n      }\n      function updateWeekdays() {\n          if (!self.weekdayContainer) {\n              return;\n          }\n          const firstDayOfWeek = self.l10n.firstDayOfWeek;\n          let weekdays = [...self.l10n.weekdays.shorthand];\n          if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n              weekdays = [\n                  ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                  ...weekdays.splice(0, firstDayOfWeek),\n              ];\n          }\n          for (let i = self.config.showMonths; i--;) {\n              self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n          }\n      }\n      function buildWeeks() {\n          self.calendarContainer.classList.add(\"hasWeeks\");\n          const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n          weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n          const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n          weekWrapper.appendChild(weekNumbers);\n          return {\n              weekWrapper,\n              weekNumbers,\n          };\n      }\n      function changeMonth(value, isOffset = true) {\n          const delta = isOffset ? value : value - self.currentMonth;\n          if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n              (delta > 0 && self._hideNextMonthArrow === true))\n              return;\n          self.currentMonth += delta;\n          if (self.currentMonth < 0 || self.currentMonth > 11) {\n              self.currentYear += self.currentMonth > 11 ? 1 : -1;\n              self.currentMonth = (self.currentMonth + 12) % 12;\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n          buildDays();\n          triggerEvent(\"onMonthChange\");\n          updateNavigationCurrentMonth();\n      }\n      function clear(triggerChangeEvent = true, toInitial = true) {\n          self.input.value = \"\";\n          if (self.altInput !== undefined)\n              self.altInput.value = \"\";\n          if (self.mobileInput !== undefined)\n              self.mobileInput.value = \"\";\n          self.selectedDates = [];\n          self.latestSelectedDateObj = undefined;\n          if (toInitial === true) {\n              self.currentYear = self._initialDate.getFullYear();\n              self.currentMonth = self._initialDate.getMonth();\n          }\n          if (self.config.enableTime === true) {\n              const { hours, minutes, seconds } = getDefaultHours(self.config);\n              setHours(hours, minutes, seconds);\n          }\n          self.redraw();\n          if (triggerChangeEvent)\n              triggerEvent(\"onChange\");\n      }\n      function close() {\n          self.isOpen = false;\n          if (!self.isMobile) {\n              if (self.calendarContainer !== undefined) {\n                  self.calendarContainer.classList.remove(\"open\");\n              }\n              if (self._input !== undefined) {\n                  self._input.classList.remove(\"active\");\n              }\n          }\n          triggerEvent(\"onClose\");\n      }\n      function destroy() {\n          if (self.config !== undefined)\n              triggerEvent(\"onDestroy\");\n          for (let i = self._handlers.length; i--;) {\n              self._handlers[i].remove();\n          }\n          self._handlers = [];\n          if (self.mobileInput) {\n              if (self.mobileInput.parentNode)\n                  self.mobileInput.parentNode.removeChild(self.mobileInput);\n              self.mobileInput = undefined;\n          }\n          else if (self.calendarContainer && self.calendarContainer.parentNode) {\n              if (self.config.static && self.calendarContainer.parentNode) {\n                  const wrapper = self.calendarContainer.parentNode;\n                  wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                  if (wrapper.parentNode) {\n                      while (wrapper.firstChild)\n                          wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                      wrapper.parentNode.removeChild(wrapper);\n                  }\n              }\n              else\n                  self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n          }\n          if (self.altInput) {\n              self.input.type = \"text\";\n              if (self.altInput.parentNode)\n                  self.altInput.parentNode.removeChild(self.altInput);\n              delete self.altInput;\n          }\n          if (self.input) {\n              self.input.type = self.input._type;\n              self.input.classList.remove(\"flatpickr-input\");\n              self.input.removeAttribute(\"readonly\");\n          }\n          [\n              \"_showTimeInput\",\n              \"latestSelectedDateObj\",\n              \"_hideNextMonthArrow\",\n              \"_hidePrevMonthArrow\",\n              \"__hideNextMonthArrow\",\n              \"__hidePrevMonthArrow\",\n              \"isMobile\",\n              \"isOpen\",\n              \"selectedDateElem\",\n              \"minDateHasTime\",\n              \"maxDateHasTime\",\n              \"days\",\n              \"daysContainer\",\n              \"_input\",\n              \"_positionElement\",\n              \"innerContainer\",\n              \"rContainer\",\n              \"monthNav\",\n              \"todayDateElem\",\n              \"calendarContainer\",\n              \"weekdayContainer\",\n              \"prevMonthNav\",\n              \"nextMonthNav\",\n              \"monthsDropdownContainer\",\n              \"currentMonthElement\",\n              \"currentYearElement\",\n              \"navigationCurrentMonth\",\n              \"selectedDateElem\",\n              \"config\",\n          ].forEach((k) => {\n              try {\n                  delete self[k];\n              }\n              catch (_) { }\n          });\n      }\n      function isCalendarElem(elem) {\n          if (self.config.appendTo && self.config.appendTo.contains(elem))\n              return true;\n          return self.calendarContainer.contains(elem);\n      }\n      function documentClick(e) {\n          if (self.isOpen && !self.config.inline) {\n              const eventTarget = getEventTarget(e);\n              const isCalendarElement = isCalendarElem(eventTarget);\n              const isInput = eventTarget === self.input ||\n                  eventTarget === self.altInput ||\n                  self.element.contains(eventTarget) ||\n                  (e.path &&\n                      e.path.indexOf &&\n                      (~e.path.indexOf(self.input) ||\n                          ~e.path.indexOf(self.altInput)));\n              const lostFocus = e.type === \"blur\"\n                  ? isInput &&\n                      e.relatedTarget &&\n                      !isCalendarElem(e.relatedTarget)\n                  : !isInput &&\n                      !isCalendarElement &&\n                      !isCalendarElem(e.relatedTarget);\n              const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n              if (lostFocus && isIgnored) {\n                  if (self.timeContainer !== undefined &&\n                      self.minuteElement !== undefined &&\n                      self.hourElement !== undefined &&\n                      self.input.value !== \"\" &&\n                      self.input.value !== undefined) {\n                      updateTime();\n                  }\n                  self.close();\n                  if (self.config &&\n                      self.config.mode === \"range\" &&\n                      self.selectedDates.length === 1) {\n                      self.clear(false);\n                      self.redraw();\n                  }\n              }\n          }\n      }\n      function changeYear(newYear) {\n          if (!newYear ||\n              (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n              (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n              return;\n          const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n          self.currentYear = newYearNum || self.currentYear;\n          if (self.config.maxDate &&\n              self.currentYear === self.config.maxDate.getFullYear()) {\n              self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n          }\n          else if (self.config.minDate &&\n              self.currentYear === self.config.minDate.getFullYear()) {\n              self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n          }\n          if (isNewYear) {\n              self.redraw();\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n      }\n      function isEnabled(date, timeless = true) {\n          var _a;\n          const dateToCheck = self.parseDate(date, undefined, timeless);\n          if ((self.config.minDate &&\n              dateToCheck &&\n              compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n              (self.config.maxDate &&\n                  dateToCheck &&\n                  compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n              return false;\n          if (!self.config.enable && self.config.disable.length === 0)\n              return true;\n          if (dateToCheck === undefined)\n              return false;\n          const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n          for (let i = 0, d; i < array.length; i++) {\n              d = array[i];\n              if (typeof d === \"function\" &&\n                  d(dateToCheck))\n                  return bool;\n              else if (d instanceof Date &&\n                  dateToCheck !== undefined &&\n                  d.getTime() === dateToCheck.getTime())\n                  return bool;\n              else if (typeof d === \"string\") {\n                  const parsed = self.parseDate(d, undefined, true);\n                  return parsed && parsed.getTime() === dateToCheck.getTime()\n                      ? bool\n                      : !bool;\n              }\n              else if (typeof d === \"object\" &&\n                  dateToCheck !== undefined &&\n                  d.from &&\n                  d.to &&\n                  dateToCheck.getTime() >= d.from.getTime() &&\n                  dateToCheck.getTime() <= d.to.getTime())\n                  return bool;\n          }\n          return !bool;\n      }\n      function isInView(elem) {\n          if (self.daysContainer !== undefined)\n              return (elem.className.indexOf(\"hidden\") === -1 &&\n                  elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                  self.daysContainer.contains(elem));\n          return false;\n      }\n      function onBlur(e) {\n          const isInput = e.target === self._input;\n          if (isInput &&\n              (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n              !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n              self.setDate(self._input.value, true, e.target === self.altInput\n                  ? self.config.altFormat\n                  : self.config.dateFormat);\n          }\n      }\n      function onKeyDown(e) {\n          const eventTarget = getEventTarget(e);\n          const isInput = self.config.wrap\n              ? element.contains(eventTarget)\n              : eventTarget === self._input;\n          const allowInput = self.config.allowInput;\n          const allowKeydown = self.isOpen && (!allowInput || !isInput);\n          const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n          if (e.keyCode === 13 && isInput) {\n              if (allowInput) {\n                  self.setDate(self._input.value, true, eventTarget === self.altInput\n                      ? self.config.altFormat\n                      : self.config.dateFormat);\n                  return eventTarget.blur();\n              }\n              else {\n                  self.open();\n              }\n          }\n          else if (isCalendarElem(eventTarget) ||\n              allowKeydown ||\n              allowInlineKeydown) {\n              const isTimeObj = !!self.timeContainer &&\n                  self.timeContainer.contains(eventTarget);\n              switch (e.keyCode) {\n                  case 13:\n                      if (isTimeObj) {\n                          e.preventDefault();\n                          updateTime();\n                          focusAndClose();\n                      }\n                      else\n                          selectDate(e);\n                      break;\n                  case 27:\n                      e.preventDefault();\n                      focusAndClose();\n                      break;\n                  case 8:\n                  case 46:\n                      if (isInput && !self.config.allowInput) {\n                          e.preventDefault();\n                          self.clear();\n                      }\n                      break;\n                  case 37:\n                  case 39:\n                      if (!isTimeObj && !isInput) {\n                          e.preventDefault();\n                          if (self.daysContainer !== undefined &&\n                              (allowInput === false ||\n                                  (document.activeElement && isInView(document.activeElement)))) {\n                              const delta = e.keyCode === 39 ? 1 : -1;\n                              if (!e.ctrlKey)\n                                  focusOnDay(undefined, delta);\n                              else {\n                                  e.stopPropagation();\n                                  changeMonth(delta);\n                                  focusOnDay(getFirstAvailableDay(1), 0);\n                              }\n                          }\n                      }\n                      else if (self.hourElement)\n                          self.hourElement.focus();\n                      break;\n                  case 38:\n                  case 40:\n                      e.preventDefault();\n                      const delta = e.keyCode === 40 ? 1 : -1;\n                      if ((self.daysContainer &&\n                          eventTarget.$i !== undefined) ||\n                          eventTarget === self.input ||\n                          eventTarget === self.altInput) {\n                          if (e.ctrlKey) {\n                              e.stopPropagation();\n                              changeYear(self.currentYear - delta);\n                              focusOnDay(getFirstAvailableDay(1), 0);\n                          }\n                          else if (!isTimeObj)\n                              focusOnDay(undefined, delta * 7);\n                      }\n                      else if (eventTarget === self.currentYearElement) {\n                          changeYear(self.currentYear - delta);\n                      }\n                      else if (self.config.enableTime) {\n                          if (!isTimeObj && self.hourElement)\n                              self.hourElement.focus();\n                          updateTime(e);\n                          self._debouncedChange();\n                      }\n                      break;\n                  case 9:\n                      if (isTimeObj) {\n                          const elems = [\n                              self.hourElement,\n                              self.minuteElement,\n                              self.secondElement,\n                              self.amPM,\n                          ]\n                              .concat(self.pluginElements)\n                              .filter((x) => x);\n                          const i = elems.indexOf(eventTarget);\n                          if (i !== -1) {\n                              const target = elems[i + (e.shiftKey ? -1 : 1)];\n                              e.preventDefault();\n                              (target || self._input).focus();\n                          }\n                      }\n                      else if (!self.config.noCalendar &&\n                          self.daysContainer &&\n                          self.daysContainer.contains(eventTarget) &&\n                          e.shiftKey) {\n                          e.preventDefault();\n                          self._input.focus();\n                      }\n                      break;\n              }\n          }\n          if (self.amPM !== undefined && eventTarget === self.amPM) {\n              switch (e.key) {\n                  case self.l10n.amPM[0].charAt(0):\n                  case self.l10n.amPM[0].charAt(0).toLowerCase():\n                      self.amPM.textContent = self.l10n.amPM[0];\n                      setHoursFromInputs();\n                      updateValue();\n                      break;\n                  case self.l10n.amPM[1].charAt(0):\n                  case self.l10n.amPM[1].charAt(0).toLowerCase():\n                      self.amPM.textContent = self.l10n.amPM[1];\n                      setHoursFromInputs();\n                      updateValue();\n                      break;\n              }\n          }\n          if (isInput || isCalendarElem(eventTarget)) {\n              triggerEvent(\"onKeyDown\", e);\n          }\n      }\n      function onMouseOver(elem) {\n          if (self.selectedDates.length !== 1 ||\n              (elem &&\n                  (!elem.classList.contains(\"flatpickr-day\") ||\n                      elem.classList.contains(\"flatpickr-disabled\"))))\n              return;\n          const hoverDate = elem\n              ? elem.dateObj.getTime()\n              : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n          let containsDisabled = false;\n          let minRange = 0, maxRange = 0;\n          for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n              if (!isEnabled(new Date(t), true)) {\n                  containsDisabled =\n                      containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                  if (t < initialDate && (!minRange || t > minRange))\n                      minRange = t;\n                  else if (t > initialDate && (!maxRange || t < maxRange))\n                      maxRange = t;\n              }\n          }\n          for (let m = 0; m < self.config.showMonths; m++) {\n              const month = self.daysContainer.children[m];\n              for (let i = 0, l = month.children.length; i < l; i++) {\n                  const dayElem = month.children[i], date = dayElem.dateObj;\n                  const timestamp = date.getTime();\n                  const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                      (maxRange > 0 && timestamp > maxRange);\n                  if (outOfRange) {\n                      dayElem.classList.add(\"notAllowed\");\n                      [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                          dayElem.classList.remove(c);\n                      });\n                      continue;\n                  }\n                  else if (containsDisabled && !outOfRange)\n                      continue;\n                  [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                      dayElem.classList.remove(c);\n                  });\n                  if (elem !== undefined) {\n                      elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                          ? \"startRange\"\n                          : \"endRange\");\n                      if (initialDate < hoverDate && timestamp === initialDate)\n                          dayElem.classList.add(\"startRange\");\n                      else if (initialDate > hoverDate && timestamp === initialDate)\n                          dayElem.classList.add(\"endRange\");\n                      if (timestamp >= minRange &&\n                          (maxRange === 0 || timestamp <= maxRange) &&\n                          isBetween(timestamp, initialDate, hoverDate))\n                          dayElem.classList.add(\"inRange\");\n                  }\n              }\n          }\n      }\n      function onResize() {\n          if (self.isOpen && !self.config.static && !self.config.inline)\n              positionCalendar();\n      }\n      function open(e, positionElement = self._positionElement) {\n          if (self.isMobile === true) {\n              if (e) {\n                  e.preventDefault();\n                  const eventTarget = getEventTarget(e);\n                  if (eventTarget) {\n                      eventTarget.blur();\n                  }\n              }\n              if (self.mobileInput !== undefined) {\n                  self.mobileInput.focus();\n                  self.mobileInput.click();\n              }\n              triggerEvent(\"onOpen\");\n              return;\n          }\n          else if (self._input.disabled || self.config.inline) {\n              return;\n          }\n          const wasOpen = self.isOpen;\n          self.isOpen = true;\n          if (!wasOpen) {\n              self.calendarContainer.classList.add(\"open\");\n              self._input.classList.add(\"active\");\n              triggerEvent(\"onOpen\");\n              positionCalendar(positionElement);\n          }\n          if (self.config.enableTime === true && self.config.noCalendar === true) {\n              if (self.config.allowInput === false &&\n                  (e === undefined ||\n                      !self.timeContainer.contains(e.relatedTarget))) {\n                  setTimeout(() => self.hourElement.select(), 50);\n              }\n          }\n      }\n      function minMaxDateSetter(type) {\n          return (date) => {\n              const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n              const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n              if (dateObj !== undefined) {\n                  self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                      dateObj.getHours() > 0 ||\n                          dateObj.getMinutes() > 0 ||\n                          dateObj.getSeconds() > 0;\n              }\n              if (self.selectedDates) {\n                  self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                  if (!self.selectedDates.length && type === \"min\")\n                      setHoursFromDate(dateObj);\n                  updateValue();\n              }\n              if (self.daysContainer) {\n                  redraw();\n                  if (dateObj !== undefined)\n                      self.currentYearElement[type] = dateObj.getFullYear().toString();\n                  else\n                      self.currentYearElement.removeAttribute(type);\n                  self.currentYearElement.disabled =\n                      !!inverseDateObj &&\n                          dateObj !== undefined &&\n                          inverseDateObj.getFullYear() === dateObj.getFullYear();\n              }\n          };\n      }\n      function parseConfig() {\n          const boolOpts = [\n              \"wrap\",\n              \"weekNumbers\",\n              \"allowInput\",\n              \"allowInvalidPreload\",\n              \"clickOpens\",\n              \"time_24hr\",\n              \"enableTime\",\n              \"noCalendar\",\n              \"altInput\",\n              \"shorthandCurrentMonth\",\n              \"inline\",\n              \"static\",\n              \"enableSeconds\",\n              \"disableMobile\",\n          ];\n          const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n          const formats = {};\n          self.config.parseDate = userConfig.parseDate;\n          self.config.formatDate = userConfig.formatDate;\n          Object.defineProperty(self.config, \"enable\", {\n              get: () => self.config._enable,\n              set: (dates) => {\n                  self.config._enable = parseDateRules(dates);\n              },\n          });\n          Object.defineProperty(self.config, \"disable\", {\n              get: () => self.config._disable,\n              set: (dates) => {\n                  self.config._disable = parseDateRules(dates);\n              },\n          });\n          const timeMode = userConfig.mode === \"time\";\n          if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n              const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;\n              formats.dateFormat =\n                  userConfig.noCalendar || timeMode\n                      ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                      : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n          }\n          if (userConfig.altInput &&\n              (userConfig.enableTime || timeMode) &&\n              !userConfig.altFormat) {\n              const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;\n              formats.altFormat =\n                  userConfig.noCalendar || timeMode\n                      ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                      : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n          }\n          Object.defineProperty(self.config, \"minDate\", {\n              get: () => self.config._minDate,\n              set: minMaxDateSetter(\"min\"),\n          });\n          Object.defineProperty(self.config, \"maxDate\", {\n              get: () => self.config._maxDate,\n              set: minMaxDateSetter(\"max\"),\n          });\n          const minMaxTimeSetter = (type) => (val) => {\n              self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n          };\n          Object.defineProperty(self.config, \"minTime\", {\n              get: () => self.config._minTime,\n              set: minMaxTimeSetter(\"min\"),\n          });\n          Object.defineProperty(self.config, \"maxTime\", {\n              get: () => self.config._maxTime,\n              set: minMaxTimeSetter(\"max\"),\n          });\n          if (userConfig.mode === \"time\") {\n              self.config.noCalendar = true;\n              self.config.enableTime = true;\n          }\n          Object.assign(self.config, formats, userConfig);\n          for (let i = 0; i < boolOpts.length; i++)\n              self.config[boolOpts[i]] =\n                  self.config[boolOpts[i]] === true ||\n                      self.config[boolOpts[i]] === \"true\";\n          HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n              self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n          });\n          self.isMobile =\n              !self.config.disableMobile &&\n                  !self.config.inline &&\n                  self.config.mode === \"single\" &&\n                  !self.config.disable.length &&\n                  !self.config.enable &&\n                  !self.config.weekNumbers &&\n                  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n          for (let i = 0; i < self.config.plugins.length; i++) {\n              const pluginConf = self.config.plugins[i](self) || {};\n              for (const key in pluginConf) {\n                  if (HOOKS.indexOf(key) > -1) {\n                      self.config[key] = arrayify(pluginConf[key])\n                          .map(bindToInstance)\n                          .concat(self.config[key]);\n                  }\n                  else if (typeof userConfig[key] === \"undefined\")\n                      self.config[key] = pluginConf[key];\n              }\n          }\n          if (!userConfig.altInputClass) {\n              self.config.altInputClass =\n                  getInputElem().className + \" \" + self.config.altInputClass;\n          }\n          triggerEvent(\"onParseConfig\");\n      }\n      function getInputElem() {\n          return self.config.wrap\n              ? element.querySelector(\"[data-input]\")\n              : element;\n      }\n      function setupLocale() {\n          if (typeof self.config.locale !== \"object\" &&\n              typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n              self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n          self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n              ? self.config.locale\n              : self.config.locale !== \"default\"\n                  ? flatpickr.l10ns[self.config.locale]\n                  : undefined));\n          tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n          const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n          if (userConfig.time_24hr === undefined &&\n              flatpickr.defaultConfig.time_24hr === undefined) {\n              self.config.time_24hr = self.l10n.time_24hr;\n          }\n          self.formatDate = createDateFormatter(self);\n          self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n      }\n      function positionCalendar(customPositionElement) {\n          if (typeof self.config.position === \"function\") {\n              return void self.config.position(self, customPositionElement);\n          }\n          if (self.calendarContainer === undefined)\n              return;\n          triggerEvent(\"onPreCalendarPosition\");\n          const positionElement = customPositionElement || self._positionElement;\n          const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n              (configPosVertical !== \"below\" &&\n                  distanceFromBottom < calendarHeight &&\n                  inputBounds.top > calendarHeight);\n          const top = window.pageYOffset +\n              inputBounds.top +\n              (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n          toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n          toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n          if (self.config.inline)\n              return;\n          let left = window.pageXOffset + inputBounds.left;\n          let isCenter = false;\n          let isRight = false;\n          if (configPosHorizontal === \"center\") {\n              left -= (calendarWidth - inputBounds.width) / 2;\n              isCenter = true;\n          }\n          else if (configPosHorizontal === \"right\") {\n              left -= calendarWidth - inputBounds.width;\n              isRight = true;\n          }\n          toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n          toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n          toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n          const right = window.document.body.offsetWidth -\n              (window.pageXOffset + inputBounds.right);\n          const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n          const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n          toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n          if (self.config.static)\n              return;\n          self.calendarContainer.style.top = `${top}px`;\n          if (!rightMost) {\n              self.calendarContainer.style.left = `${left}px`;\n              self.calendarContainer.style.right = \"auto\";\n          }\n          else if (!centerMost) {\n              self.calendarContainer.style.left = \"auto\";\n              self.calendarContainer.style.right = `${right}px`;\n          }\n          else {\n              const doc = getDocumentStyleSheet();\n              if (doc === undefined)\n                  return;\n              const bodyWidth = window.document.body.offsetWidth;\n              const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n              const centerBefore = \".flatpickr-calendar.centerMost:before\";\n              const centerAfter = \".flatpickr-calendar.centerMost:after\";\n              const centerIndex = doc.cssRules.length;\n              const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n              toggleClass(self.calendarContainer, \"rightMost\", false);\n              toggleClass(self.calendarContainer, \"centerMost\", true);\n              doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n              self.calendarContainer.style.left = `${centerLeft}px`;\n              self.calendarContainer.style.right = \"auto\";\n          }\n      }\n      function getDocumentStyleSheet() {\n          let editableSheet = null;\n          for (let i = 0; i < document.styleSheets.length; i++) {\n              const sheet = document.styleSheets[i];\n              try {\n                  sheet.cssRules;\n              }\n              catch (err) {\n                  continue;\n              }\n              editableSheet = sheet;\n              break;\n          }\n          return editableSheet != null ? editableSheet : createStyleSheet();\n      }\n      function createStyleSheet() {\n          const style = document.createElement(\"style\");\n          document.head.appendChild(style);\n          return style.sheet;\n      }\n      function redraw() {\n          if (self.config.noCalendar || self.isMobile)\n              return;\n          buildMonthSwitch();\n          updateNavigationCurrentMonth();\n          buildDays();\n      }\n      function focusAndClose() {\n          self._input.focus();\n          if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n              navigator.msMaxTouchPoints !== undefined) {\n              setTimeout(self.close, 0);\n          }\n          else {\n              self.close();\n          }\n      }\n      function selectDate(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          const isSelectable = (day) => day.classList &&\n              day.classList.contains(\"flatpickr-day\") &&\n              !day.classList.contains(\"flatpickr-disabled\") &&\n              !day.classList.contains(\"notAllowed\");\n          const t = findParent(getEventTarget(e), isSelectable);\n          if (t === undefined)\n              return;\n          const target = t;\n          const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n          const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n              selectedDate.getMonth() >\n                  self.currentMonth + self.config.showMonths - 1) &&\n              self.config.mode !== \"range\";\n          self.selectedDateElem = target;\n          if (self.config.mode === \"single\")\n              self.selectedDates = [selectedDate];\n          else if (self.config.mode === \"multiple\") {\n              const selectedIndex = isDateSelected(selectedDate);\n              if (selectedIndex)\n                  self.selectedDates.splice(parseInt(selectedIndex), 1);\n              else\n                  self.selectedDates.push(selectedDate);\n          }\n          else if (self.config.mode === \"range\") {\n              if (self.selectedDates.length === 2) {\n                  self.clear(false, false);\n              }\n              self.latestSelectedDateObj = selectedDate;\n              self.selectedDates.push(selectedDate);\n              if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                  self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n          }\n          setHoursFromInputs();\n          if (shouldChangeMonth) {\n              const isNewYear = self.currentYear !== selectedDate.getFullYear();\n              self.currentYear = selectedDate.getFullYear();\n              self.currentMonth = selectedDate.getMonth();\n              if (isNewYear) {\n                  triggerEvent(\"onYearChange\");\n                  buildMonthSwitch();\n              }\n              triggerEvent(\"onMonthChange\");\n          }\n          updateNavigationCurrentMonth();\n          buildDays();\n          updateValue();\n          if (!shouldChangeMonth &&\n              self.config.mode !== \"range\" &&\n              self.config.showMonths === 1)\n              focusOnDayElem(target);\n          else if (self.selectedDateElem !== undefined &&\n              self.hourElement === undefined) {\n              self.selectedDateElem && self.selectedDateElem.focus();\n          }\n          if (self.hourElement !== undefined)\n              self.hourElement !== undefined && self.hourElement.focus();\n          if (self.config.closeOnSelect) {\n              const single = self.config.mode === \"single\" && !self.config.enableTime;\n              const range = self.config.mode === \"range\" &&\n                  self.selectedDates.length === 2 &&\n                  !self.config.enableTime;\n              if (single || range) {\n                  focusAndClose();\n              }\n          }\n          triggerChange();\n      }\n      const CALLBACKS = {\n          locale: [setupLocale, updateWeekdays],\n          showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n          minDate: [jumpToDate],\n          maxDate: [jumpToDate],\n          clickOpens: [\n              () => {\n                  if (self.config.clickOpens === true) {\n                      bind(self._input, \"focus\", self.open);\n                      bind(self._input, \"click\", self.open);\n                  }\n                  else {\n                      self._input.removeEventListener(\"focus\", self.open);\n                      self._input.removeEventListener(\"click\", self.open);\n                  }\n              },\n          ],\n      };\n      function set(option, value) {\n          if (option !== null && typeof option === \"object\") {\n              Object.assign(self.config, option);\n              for (const key in option) {\n                  if (CALLBACKS[key] !== undefined)\n                      CALLBACKS[key].forEach((x) => x());\n              }\n          }\n          else {\n              self.config[option] = value;\n              if (CALLBACKS[option] !== undefined)\n                  CALLBACKS[option].forEach((x) => x());\n              else if (HOOKS.indexOf(option) > -1)\n                  self.config[option] = arrayify(value);\n          }\n          self.redraw();\n          updateValue(true);\n      }\n      function setSelectedDate(inputDate, format) {\n          let dates = [];\n          if (inputDate instanceof Array)\n              dates = inputDate.map((d) => self.parseDate(d, format));\n          else if (inputDate instanceof Date || typeof inputDate === \"number\")\n              dates = [self.parseDate(inputDate, format)];\n          else if (typeof inputDate === \"string\") {\n              switch (self.config.mode) {\n                  case \"single\":\n                  case \"time\":\n                      dates = [self.parseDate(inputDate, format)];\n                      break;\n                  case \"multiple\":\n                      dates = inputDate\n                          .split(self.config.conjunction)\n                          .map((date) => self.parseDate(date, format));\n                      break;\n                  case \"range\":\n                      dates = inputDate\n                          .split(self.l10n.rangeSeparator)\n                          .map((date) => self.parseDate(date, format));\n                      break;\n              }\n          }\n          else\n              self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n          self.selectedDates = (self.config.allowInvalidPreload\n              ? dates\n              : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n          if (self.config.mode === \"range\")\n              self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n      }\n      function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n          if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n              return self.clear(triggerChange);\n          setSelectedDate(date, format);\n          self.latestSelectedDateObj =\n              self.selectedDates[self.selectedDates.length - 1];\n          self.redraw();\n          jumpToDate(undefined, triggerChange);\n          setHoursFromDate();\n          if (self.selectedDates.length === 0) {\n              self.clear(false);\n          }\n          updateValue(triggerChange);\n          if (triggerChange)\n              triggerEvent(\"onChange\");\n      }\n      function parseDateRules(arr) {\n          return arr\n              .slice()\n              .map((rule) => {\n              if (typeof rule === \"string\" ||\n                  typeof rule === \"number\" ||\n                  rule instanceof Date) {\n                  return self.parseDate(rule, undefined, true);\n              }\n              else if (rule &&\n                  typeof rule === \"object\" &&\n                  rule.from &&\n                  rule.to)\n                  return {\n                      from: self.parseDate(rule.from, undefined),\n                      to: self.parseDate(rule.to, undefined),\n                  };\n              return rule;\n          })\n              .filter((x) => x);\n      }\n      function setupDates() {\n          self.selectedDates = [];\n          self.now = self.parseDate(self.config.now) || new Date();\n          const preloadedDate = self.config.defaultDate ||\n              ((self.input.nodeName === \"INPUT\" ||\n                  self.input.nodeName === \"TEXTAREA\") &&\n                  self.input.placeholder &&\n                  self.input.value === self.input.placeholder\n                  ? null\n                  : self.input.value);\n          if (preloadedDate)\n              setSelectedDate(preloadedDate, self.config.dateFormat);\n          self._initialDate =\n              self.selectedDates.length > 0\n                  ? self.selectedDates[0]\n                  : self.config.minDate &&\n                      self.config.minDate.getTime() > self.now.getTime()\n                      ? self.config.minDate\n                      : self.config.maxDate &&\n                          self.config.maxDate.getTime() < self.now.getTime()\n                          ? self.config.maxDate\n                          : self.now;\n          self.currentYear = self._initialDate.getFullYear();\n          self.currentMonth = self._initialDate.getMonth();\n          if (self.selectedDates.length > 0)\n              self.latestSelectedDateObj = self.selectedDates[0];\n          if (self.config.minTime !== undefined)\n              self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n          if (self.config.maxTime !== undefined)\n              self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n          self.minDateHasTime =\n              !!self.config.minDate &&\n                  (self.config.minDate.getHours() > 0 ||\n                      self.config.minDate.getMinutes() > 0 ||\n                      self.config.minDate.getSeconds() > 0);\n          self.maxDateHasTime =\n              !!self.config.maxDate &&\n                  (self.config.maxDate.getHours() > 0 ||\n                      self.config.maxDate.getMinutes() > 0 ||\n                      self.config.maxDate.getSeconds() > 0);\n      }\n      function setupInputs() {\n          self.input = getInputElem();\n          if (!self.input) {\n              self.config.errorHandler(new Error(\"Invalid input element specified\"));\n              return;\n          }\n          self.input._type = self.input.type;\n          self.input.type = \"text\";\n          self.input.classList.add(\"flatpickr-input\");\n          self._input = self.input;\n          if (self.config.altInput) {\n              self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n              self._input = self.altInput;\n              self.altInput.placeholder = self.input.placeholder;\n              self.altInput.disabled = self.input.disabled;\n              self.altInput.required = self.input.required;\n              self.altInput.tabIndex = self.input.tabIndex;\n              self.altInput.type = \"text\";\n              self.input.setAttribute(\"type\", \"hidden\");\n              if (!self.config.static && self.input.parentNode)\n                  self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n          }\n          if (!self.config.allowInput)\n              self._input.setAttribute(\"readonly\", \"readonly\");\n          self._positionElement = self.config.positionElement || self._input;\n      }\n      function setupMobile() {\n          const inputType = self.config.enableTime\n              ? self.config.noCalendar\n                  ? \"time\"\n                  : \"datetime-local\"\n              : \"date\";\n          self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n          self.mobileInput.tabIndex = 1;\n          self.mobileInput.type = inputType;\n          self.mobileInput.disabled = self.input.disabled;\n          self.mobileInput.required = self.input.required;\n          self.mobileInput.placeholder = self.input.placeholder;\n          self.mobileFormatStr =\n              inputType === \"datetime-local\"\n                  ? \"Y-m-d\\\\TH:i:S\"\n                  : inputType === \"date\"\n                      ? \"Y-m-d\"\n                      : \"H:i:S\";\n          if (self.selectedDates.length > 0) {\n              self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n          }\n          if (self.config.minDate)\n              self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n          if (self.config.maxDate)\n              self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n          if (self.input.getAttribute(\"step\"))\n              self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n          self.input.type = \"hidden\";\n          if (self.altInput !== undefined)\n              self.altInput.type = \"hidden\";\n          try {\n              if (self.input.parentNode)\n                  self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n          }\n          catch (_a) { }\n          bind(self.mobileInput, \"change\", (e) => {\n              self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n              triggerEvent(\"onChange\");\n              triggerEvent(\"onClose\");\n          });\n      }\n      function toggle(e) {\n          if (self.isOpen === true)\n              return self.close();\n          self.open(e);\n      }\n      function triggerEvent(event, data) {\n          if (self.config === undefined)\n              return;\n          const hooks = self.config[event];\n          if (hooks !== undefined && hooks.length > 0) {\n              for (let i = 0; hooks[i] && i < hooks.length; i++)\n                  hooks[i](self.selectedDates, self.input.value, self, data);\n          }\n          if (event === \"onChange\") {\n              self.input.dispatchEvent(createEvent(\"change\"));\n              self.input.dispatchEvent(createEvent(\"input\"));\n          }\n      }\n      function createEvent(name) {\n          const e = document.createEvent(\"Event\");\n          e.initEvent(name, true, true);\n          return e;\n      }\n      function isDateSelected(date) {\n          for (let i = 0; i < self.selectedDates.length; i++) {\n              if (compareDates(self.selectedDates[i], date) === 0)\n                  return \"\" + i;\n          }\n          return false;\n      }\n      function isDateInRange(date) {\n          if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n              return false;\n          return (compareDates(date, self.selectedDates[0]) >= 0 &&\n              compareDates(date, self.selectedDates[1]) <= 0);\n      }\n      function updateNavigationCurrentMonth() {\n          if (self.config.noCalendar || self.isMobile || !self.monthNav)\n              return;\n          self.yearElements.forEach((yearElement, i) => {\n              const d = new Date(self.currentYear, self.currentMonth, 1);\n              d.setMonth(self.currentMonth + i);\n              if (self.config.showMonths > 1 ||\n                  self.config.monthSelectorType === \"static\") {\n                  self.monthElements[i].textContent =\n                      monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n              }\n              else {\n                  self.monthsDropdownContainer.value = d.getMonth().toString();\n              }\n              yearElement.value = d.getFullYear().toString();\n          });\n          self._hidePrevMonthArrow =\n              self.config.minDate !== undefined &&\n                  (self.currentYear === self.config.minDate.getFullYear()\n                      ? self.currentMonth <= self.config.minDate.getMonth()\n                      : self.currentYear < self.config.minDate.getFullYear());\n          self._hideNextMonthArrow =\n              self.config.maxDate !== undefined &&\n                  (self.currentYear === self.config.maxDate.getFullYear()\n                      ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                      : self.currentYear > self.config.maxDate.getFullYear());\n      }\n      function getDateStr(format) {\n          return self.selectedDates\n              .map((dObj) => self.formatDate(dObj, format))\n              .filter((d, i, arr) => self.config.mode !== \"range\" ||\n              self.config.enableTime ||\n              arr.indexOf(d) === i)\n              .join(self.config.mode !== \"range\"\n              ? self.config.conjunction\n              : self.l10n.rangeSeparator);\n      }\n      function updateValue(triggerChange = true) {\n          if (self.mobileInput !== undefined && self.mobileFormatStr) {\n              self.mobileInput.value =\n                  self.latestSelectedDateObj !== undefined\n                      ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                      : \"\";\n          }\n          self.input.value = getDateStr(self.config.dateFormat);\n          if (self.altInput !== undefined) {\n              self.altInput.value = getDateStr(self.config.altFormat);\n          }\n          if (triggerChange !== false)\n              triggerEvent(\"onValueUpdate\");\n      }\n      function onMonthNavClick(e) {\n          const eventTarget = getEventTarget(e);\n          const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n          const isNextMonth = self.nextMonthNav.contains(eventTarget);\n          if (isPrevMonth || isNextMonth) {\n              changeMonth(isPrevMonth ? -1 : 1);\n          }\n          else if (self.yearElements.indexOf(eventTarget) >= 0) {\n              eventTarget.select();\n          }\n          else if (eventTarget.classList.contains(\"arrowUp\")) {\n              self.changeYear(self.currentYear + 1);\n          }\n          else if (eventTarget.classList.contains(\"arrowDown\")) {\n              self.changeYear(self.currentYear - 1);\n          }\n      }\n      function timeWrapper(e) {\n          e.preventDefault();\n          const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n          if (self.amPM !== undefined && eventTarget === self.amPM) {\n              self.amPM.textContent =\n                  self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n          }\n          const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n              (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n          let newValue = curValue + step * delta;\n          if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n              const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n              if (newValue < min) {\n                  newValue =\n                      max +\n                          newValue +\n                          int(!isHourElem) +\n                          (int(isHourElem) && int(!self.amPM));\n                  if (isMinuteElem)\n                      incrementNumInput(undefined, -1, self.hourElement);\n              }\n              else if (newValue > max) {\n                  newValue =\n                      input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                  if (isMinuteElem)\n                      incrementNumInput(undefined, 1, self.hourElement);\n              }\n              if (self.amPM &&\n                  isHourElem &&\n                  (step === 1\n                      ? newValue + curValue === 23\n                      : Math.abs(newValue - curValue) > step)) {\n                  self.amPM.textContent =\n                      self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n              }\n              input.value = pad(newValue);\n          }\n      }\n      init();\n      return self;\n  }\n  function _flatpickr(nodeList, config) {\n      const nodes = Array.prototype.slice\n          .call(nodeList)\n          .filter((x) => x instanceof HTMLElement);\n      const instances = [];\n      for (let i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n          try {\n              if (node.getAttribute(\"data-fp-omit\") !== null)\n                  continue;\n              if (node._flatpickr !== undefined) {\n                  node._flatpickr.destroy();\n                  node._flatpickr = undefined;\n              }\n              node._flatpickr = FlatpickrInstance(node, config || {});\n              instances.push(node._flatpickr);\n          }\n          catch (e) {\n              console.error(e);\n          }\n      }\n      return instances.length === 1 ? instances[0] : instances;\n  }\n  if (typeof HTMLElement !== \"undefined\" &&\n      typeof HTMLCollection !== \"undefined\" &&\n      typeof NodeList !== \"undefined\") {\n      HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n          return _flatpickr(this, config);\n      };\n      HTMLElement.prototype.flatpickr = function (config) {\n          return _flatpickr([this], config);\n      };\n  }\n  var flatpickr = function (selector, config) {\n      if (typeof selector === \"string\") {\n          return _flatpickr(window.document.querySelectorAll(selector), config);\n      }\n      else if (selector instanceof Node) {\n          return _flatpickr([selector], config);\n      }\n      else {\n          return _flatpickr(selector, config);\n      }\n  };\n  flatpickr.defaultConfig = {};\n  flatpickr.l10ns = {\n      en: Object.assign({}, english),\n      default: Object.assign({}, english),\n  };\n  flatpickr.localize = (l10n) => {\n      flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n  };\n  flatpickr.setDefaults = (config) => {\n      flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n  };\n  flatpickr.parseDate = createDateParser({});\n  flatpickr.formatDate = createDateFormatter({});\n  flatpickr.compareDates = compareDates;\n  if (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n      jQuery.fn.flatpickr = function (config) {\n          return _flatpickr(this, config);\n      };\n  }\n  Date.prototype.fp_incr = function (days) {\n      return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n  };\n  if (typeof window !== \"undefined\") {\n      window.flatpickr = flatpickr;\n  }\n\n  flatpickr(\".form__date\", {\n    dateFormat: \"d-m-Y\",\n    disableMobile: \"true\"\n  });\n  flatpickr(\".form__time\", {\n    enableTime: true,\n    noCalendar: true,\n    dateFormat: \"H-i\",\n    disableMobile: \"true\"\n  });\n\n  // Polyfill for creating CustomEvents on IE9/10/11\n\n  // code pulled from:\n  // https://github.com/d4tocchini/customevent-polyfill\n  // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n  try {\n      var ce = new window.CustomEvent('test');\n      ce.preventDefault();\n      if (ce.defaultPrevented !== true) {\n          // IE has problems with .preventDefault() on custom events\n          // http://stackoverflow.com/questions/23349191\n          throw new Error('Could not prevent default');\n      }\n  } catch(e) {\n    var CustomEvent$1 = function(event, params) {\n      var evt, origPrevent;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      evt = document.createEvent(\"CustomEvent\");\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function () {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function () {\n              return true;\n            }\n          });\n        } catch(e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent$1.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent$1; // expose definition to window\n  }\n\n  var customEventPolyfill = /*#__PURE__*/Object.freeze({\n    __proto__: null\n  });\n\n  getCjsExportFromNamespace(customEventPolyfill);\n\n  var build = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * custom-select\nlightweight JS script for custom select creation.\needs no dependencies.\nnv0.0.1\nhttps://github.com/custom-select/custom-select)\nnopyright (c) 2016 Gionatan Lombardi & Marco Nucara\nicense\nn\n  exports.default = customSelect;\n\n\n\n  var defaultParams = {\n    containerClass: 'custom-select-container',\n    openerClass: 'custom-select-opener',\n    panelClass: 'custom-select-panel',\n    optionClass: 'custom-select-option',\n    optgroupClass: 'custom-select-optgroup',\n    isSelectedClass: 'is-selected',\n    hasFocusClass: 'has-focus',\n    isDisabledClass: 'is-disabled',\n    isOpenClass: 'is-open'\n  };\n\n  function builder(el, builderParams) {\n    var containerClass = 'customSelect';\n    var isOpen = false;\n    var uId = '';\n    var select = el;\n    var container = void 0;\n    var opener = void 0;\n    var focusedElement = void 0;\n    var selectedElement = void 0;\n    var panel = void 0;\n    var currLabel = void 0;\n\n    var resetSearchTimeout = void 0;\n    var searchKey = '';\n\n    //\n    // Inner Functions\n    //\n\n    // Sets the focused element with the neccessary classes substitutions\n    function setFocusedElement(cstOption) {\n      if (focusedElement) {\n        focusedElement.classList.remove(builderParams.hasFocusClass);\n      }\n      if (typeof cstOption !== 'undefined') {\n        focusedElement = cstOption;\n        focusedElement.classList.add(builderParams.hasFocusClass);\n        // Offset update: checks if the focused element is in the visible part of the panelClass\n        // if not dispatches a custom event\n        if (isOpen) {\n          if (cstOption.offsetTop < cstOption.offsetParent.scrollTop || cstOption.offsetTop > cstOption.offsetParent.scrollTop + cstOption.offsetParent.clientHeight - cstOption.clientHeight) {\n            cstOption.dispatchEvent(new CustomEvent('custom-select:focus-outside-panel', { bubbles: true }));\n          }\n        }\n      } else {\n        focusedElement = undefined;\n      }\n    }\n\n    // Reassigns the focused and selected custom option\n    // Updates the opener text\n    // IMPORTANT: the setSelectedElement function doesn't change the select value!\n    function setSelectedElement(cstOption) {\n      if (selectedElement) {\n        selectedElement.classList.remove(builderParams.isSelectedClass);\n        selectedElement.removeAttribute('id');\n        opener.removeAttribute('aria-activedescendant');\n      }\n      if (typeof cstOption !== 'undefined') {\n        cstOption.classList.add(builderParams.isSelectedClass);\n        cstOption.setAttribute('id', containerClass + '-' + uId + '-selectedOption');\n        opener.setAttribute('aria-activedescendant', containerClass + '-' + uId + '-selectedOption');\n        selectedElement = cstOption;\n        opener.children[0].textContent = selectedElement.customSelectOriginalOption.text;\n      } else {\n        selectedElement = undefined;\n        opener.children[0].textContent = '';\n      }\n      setFocusedElement(cstOption);\n    }\n\n    function setValue(value) {\n      // Gets the option with the provided value\n      var toSelect = select.querySelector('option[value=\\'' + value + '\\']');\n      // If no option has the provided value get the first\n      if (!toSelect) {\n        var _select$options = _slicedToArray(select.options, 1);\n\n        toSelect = _select$options[0];\n      }\n      // The option with the provided value becomes the selected one\n      // And changes the select current value\n      toSelect.selected = true;\n\n      setSelectedElement(select.options[select.selectedIndex].customSelectCstOption);\n    }\n\n    function moveFocuesedElement(direction) {\n      // Get all the .custom-select-options\n      // Get the index of the current focused one\n      var currentFocusedIndex = [].indexOf.call(select.options, focusedElement.customSelectOriginalOption);\n      // If the next or prev custom option exist\n      // Sets it as the new focused one\n      if (select.options[currentFocusedIndex + direction]) {\n        setFocusedElement(select.options[currentFocusedIndex + direction].customSelectCstOption);\n      }\n    }\n\n    // Open/Close function (toggle)\n    function open(bool) {\n      // Open\n      if (bool || typeof bool === 'undefined') {\n        // If present closes an opened instance of the plugin\n        // Only one at time can be open\n        var openedCustomSelect = document.querySelector('.' + containerClass + '.' + builderParams.isOpenClass);\n        if (openedCustomSelect) {\n          openedCustomSelect.customSelect.open = false;\n        }\n\n        // Opens only the clicked one\n        container.classList.add(builderParams.isOpenClass);\n\n        // aria-expanded update\n        container.classList.add(builderParams.isOpenClass);\n        opener.setAttribute('aria-expanded', 'true');\n\n        // Updates the scrollTop position of the panel in relation with the focused option\n        if (selectedElement) {\n          panel.scrollTop = selectedElement.offsetTop;\n        }\n\n        // Dispatches the custom event open\n        container.dispatchEvent(new CustomEvent('custom-select:open'));\n\n        // Sets the global state\n        isOpen = true;\n\n        // Close\n      } else {\n        // Removes the css classes\n        container.classList.remove(builderParams.isOpenClass);\n\n        // aria-expanded update\n        opener.setAttribute('aria-expanded', 'false');\n\n        // Sets the global state\n        isOpen = false;\n\n        // When closing the panel the focused custom option must be the selected one\n        setFocusedElement(selectedElement);\n\n        // Dispatches the custom event close\n        container.dispatchEvent(new CustomEvent('custom-select:close'));\n      }\n      return isOpen;\n    }\n\n    function clickEvent(e) {\n      // Opener click\n      if (e.target === opener || opener.contains(e.target)) {\n        if (isOpen) {\n          open(false);\n        } else {\n          open();\n        }\n        // Custom Option click\n      } else if (e.target.classList && e.target.classList.contains(builderParams.optionClass) && panel.contains(e.target)) {\n        setSelectedElement(e.target);\n        // Sets the corrisponding select's option to selected updating the select's value too\n        selectedElement.customSelectOriginalOption.selected = true;\n        open(false);\n        // Triggers the native change event of the select\n        select.dispatchEvent(new CustomEvent('change'));\n        // click on label or select (click on label corrispond to select click)\n      } else if (e.target === select) {\n        // if the original select is focusable (for any external reason) let the focus\n        // else trigger the focus on opener\n        if (opener !== document.activeElement && select !== document.activeElement) {\n          opener.focus();\n        }\n        // Click outside the container closes the panel\n      } else if (isOpen && !container.contains(e.target)) {\n        open(false);\n      }\n    }\n\n    function mouseoverEvent(e) {\n      // On mouse move over and options it bacames the focused one\n      if (e.target.classList && e.target.classList.contains(builderParams.optionClass)) {\n        setFocusedElement(e.target);\n      }\n    }\n\n    function keydownEvent(e) {\n      if (!isOpen) {\n        // On \"Arrow down\", \"Arrow up\" and \"Space\" keys opens the panel\n        if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32) {\n          open();\n        }\n      } else {\n        switch (e.keyCode) {\n          case 13:\n          case 32:\n            // On \"Enter\" or \"Space\" selects the focused element as the selected one\n            setSelectedElement(focusedElement);\n            // Sets the corrisponding select's option to selected updating the select's value too\n            selectedElement.customSelectOriginalOption.selected = true;\n            // Triggers the native change event of the select\n            select.dispatchEvent(new CustomEvent('change'));\n            open(false);\n            break;\n          case 27:\n            // On \"Escape\" closes the panel\n            open(false);\n            break;\n\n          case 38:\n            // On \"Arrow up\" set focus to the prev option if present\n            moveFocuesedElement(-1);\n            break;\n          case 40:\n            // On \"Arrow down\" set focus to the next option if present\n            moveFocuesedElement(+1);\n            break;\n          default:\n            // search in panel (autocomplete)\n            if (e.keyCode >= 48 && e.keyCode <= 90) {\n              // clear existing reset timeout\n              if (resetSearchTimeout) {\n                clearTimeout(resetSearchTimeout);\n              }\n\n              // reset timeout for empty search key\n              resetSearchTimeout = setTimeout(function () {\n                searchKey = '';\n              }, 1500);\n\n              // update search keyword appending the current key\n              searchKey += String.fromCharCode(e.keyCode);\n\n              // search the element\n              for (var i = 0, l = select.options.length; i < l; i++) {\n                // removed cause not supported by IE:\n                // if (options[i].text.startsWith(searchKey))\n                if (select.options[i].text.toUpperCase().substr(0, searchKey.length) === searchKey) {\n                  setFocusedElement(select.options[i].customSelectCstOption);\n                  break;\n                }\n              }\n            }\n            break;\n        }\n      }\n    }\n\n    function changeEvent() {\n      var index = select.selectedIndex;\n      var element = index === -1 ? undefined : select.options[index].customSelectCstOption;\n\n      setSelectedElement(element);\n    }\n\n    // When the option is outside the visible part of the opened panel, updates the scrollTop position\n    // This is the default behaviour\n    // To block it the plugin user must\n    // add a \"custom-select:focus-outside-panel\" eventListener on the panel\n    // with useCapture set to true\n    // and stopPropagation\n    function scrollToFocused(e) {\n      var currPanel = e.currentTarget;\n      var currOption = e.target;\n      // Up\n      if (currOption.offsetTop < currPanel.scrollTop) {\n        currPanel.scrollTop = currOption.offsetTop;\n        // Down\n      } else {\n        currPanel.scrollTop = currOption.offsetTop + currOption.clientHeight - currPanel.clientHeight;\n      }\n    }\n\n    function addEvents() {\n      document.addEventListener('click', clickEvent);\n      panel.addEventListener('mouseover', mouseoverEvent);\n      panel.addEventListener('custom-select:focus-outside-panel', scrollToFocused);\n      select.addEventListener('change', changeEvent);\n      container.addEventListener('keydown', keydownEvent);\n    }\n\n    function removeEvents() {\n      document.removeEventListener('click', clickEvent);\n      panel.removeEventListener('mouseover', mouseoverEvent);\n      panel.removeEventListener('custom-select:focus-outside-panel', scrollToFocused);\n      select.removeEventListener('change', changeEvent);\n      container.removeEventListener('keydown', keydownEvent);\n    }\n\n    function disabled(bool) {\n      if (bool && !select.disabled) {\n        container.classList.add(builderParams.isDisabledClass);\n        select.disabled = true;\n        opener.removeAttribute('tabindex');\n        container.dispatchEvent(new CustomEvent('custom-select:disabled'));\n        removeEvents();\n      } else if (!bool && select.disabled) {\n        container.classList.remove(builderParams.isDisabledClass);\n        select.disabled = false;\n        opener.setAttribute('tabindex', '0');\n        container.dispatchEvent(new CustomEvent('custom-select:enabled'));\n        addEvents();\n      }\n    }\n\n    // Form a given select children DOM tree (options and optgroup),\n    // Creates the corresponding custom HTMLElements list (divs with different classes and attributes)\n    function parseMarkup(children) {\n      var nodeList = children;\n      var cstList = [];\n\n      if (typeof nodeList.length === 'undefined') {\n        throw new TypeError('Invalid Argument');\n      }\n\n      for (var i = 0, li = nodeList.length; i < li; i++) {\n        if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTGROUP') {\n          var cstOptgroup = document.createElement('div');\n          cstOptgroup.classList.add(builderParams.optgroupClass);\n          cstOptgroup.setAttribute('data-label', nodeList[i].label);\n\n          // IMPORTANT: Stores in a property of the created custom option group\n          // a hook to the the corrisponding select's option group\n          cstOptgroup.customSelectOriginalOptgroup = nodeList[i];\n\n          // IMPORTANT: Stores in a property of select's option group\n          // a hook to the created custom option group\n          nodeList[i].customSelectCstOptgroup = cstOptgroup;\n\n          var subNodes = parseMarkup(nodeList[i].children);\n          for (var j = 0, lj = subNodes.length; j < lj; j++) {\n            cstOptgroup.appendChild(subNodes[j]);\n          }\n\n          cstList.push(cstOptgroup);\n        } else if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTION') {\n          var cstOption = document.createElement('div');\n          cstOption.classList.add(builderParams.optionClass);\n          cstOption.textContent = nodeList[i].text;\n          cstOption.setAttribute('data-value', nodeList[i].value);\n          cstOption.setAttribute('role', 'option');\n\n          // IMPORTANT: Stores in a property of the created custom option\n          // a hook to the the corrisponding select's option\n          cstOption.customSelectOriginalOption = nodeList[i];\n\n          // IMPORTANT: Stores in a property of select's option\n          // a hook to the created custom option\n          nodeList[i].customSelectCstOption = cstOption;\n\n          // If the select's option is selected\n          if (nodeList[i].selected) {\n            setSelectedElement(cstOption);\n          }\n          cstList.push(cstOption);\n        } else {\n          throw new TypeError('Invalid Argument');\n        }\n      }\n      return cstList;\n    }\n\n    function _append(nodePar, appendIntoOriginal, targetPar) {\n      var target = void 0;\n      if (typeof targetPar === 'undefined' || targetPar === select) {\n        target = panel;\n      } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n        target = targetPar.customSelectCstOptgroup;\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n\n      // If the node provided is a single HTMLElement it is stored in an array\n      var node = nodePar instanceof HTMLElement ? [nodePar] : nodePar;\n\n      // Injects the options|optgroup in the select\n      if (appendIntoOriginal) {\n        for (var i = 0, l = node.length; i < l; i++) {\n          if (target === panel) {\n            select.appendChild(node[i]);\n          } else {\n            target.customSelectOriginalOptgroup.appendChild(node[i]);\n          }\n        }\n      }\n\n      // The custom markup to append\n      var markupToInsert = parseMarkup(node);\n\n      // Injects the created DOM content in the panel\n      for (var _i = 0, _l = markupToInsert.length; _i < _l; _i++) {\n        target.appendChild(markupToInsert[_i]);\n      }\n\n      return node;\n    }\n\n    function _insertBefore(node, targetPar) {\n      var target = void 0;\n      if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTION' && select.contains(targetPar)) {\n        target = targetPar.customSelectCstOption;\n      } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n        target = targetPar.customSelectCstOptgroup;\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n\n      // The custom markup to append\n      var markupToInsert = parseMarkup(node.length ? node : [node]);\n\n      target.parentNode.insertBefore(markupToInsert[0], target);\n\n      // Injects the option or optgroup node in the original select and returns the injected node\n      return targetPar.parentNode.insertBefore(node.length ? node[0] : node, targetPar);\n    }\n\n    function remove(node) {\n      var cstNode = void 0;\n      if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTION' && select.contains(node)) {\n        cstNode = node.customSelectCstOption;\n      } else if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTGROUP' && select.contains(node)) {\n        cstNode = node.customSelectCstOptgroup;\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n      cstNode.parentNode.removeChild(cstNode);\n      var removedNode = node.parentNode.removeChild(node);\n      changeEvent();\n      return removedNode;\n    }\n\n    function empty() {\n      var removed = [];\n      while (select.children.length) {\n        panel.removeChild(panel.children[0]);\n        removed.push(select.removeChild(select.children[0]));\n      }\n      setSelectedElement();\n      return removed;\n    }\n\n    function destroy() {\n      for (var i = 0, l = select.options.length; i < l; i++) {\n        delete select.options[i].customSelectCstOption;\n      }\n      var optGroup = select.getElementsByTagName('optgroup');\n      for (var _i2 = 0, _l2 = optGroup.length; _i2 < _l2; _i2++) {\n        delete optGroup.customSelectCstOptgroup;\n      }\n\n      removeEvents();\n\n      return container.parentNode.replaceChild(select, container);\n    }\n    //\n    // Custom Select DOM tree creation\n    //\n\n    // Creates the container/wrapper\n    container = document.createElement('div');\n    container.classList.add(builderParams.containerClass, containerClass);\n\n    // Creates the opener\n    opener = document.createElement('span');\n    opener.className = builderParams.openerClass;\n    opener.setAttribute('role', 'combobox');\n    opener.setAttribute('aria-autocomplete', 'list');\n    opener.setAttribute('aria-expanded', 'false');\n    opener.innerHTML = '<span>\\n   ' + (select.selectedIndex !== -1 ? select.options[select.selectedIndex].text : '') + '\\n   </span>';\n\n    // Creates the panel\n    // and injects the markup of the select inside\n    // with some tag and attributes replacement\n    panel = document.createElement('div');\n    // Create random id\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < 5; i++) {\n      uId += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    panel.id = containerClass + '-' + uId + '-panel';\n    panel.className = builderParams.panelClass;\n    panel.setAttribute('role', 'listbox');\n    opener.setAttribute('aria-owns', panel.id);\n\n    _append(select.children, false);\n\n    // Injects the container in the original DOM position of the select\n    container.appendChild(opener);\n    select.parentNode.replaceChild(container, select);\n    container.appendChild(select);\n    container.appendChild(panel);\n\n    // ARIA labelledby - label\n    if (document.querySelector('label[for=\"' + select.id + '\"]')) {\n      currLabel = document.querySelector('label[for=\"' + select.id + '\"]');\n    } else if (container.parentNode.tagName.toUpperCase() === 'LABEL') {\n      currLabel = container.parentNode;\n    }\n    if (typeof currLabel !== 'undefined') {\n      currLabel.setAttribute('id', containerClass + '-' + uId + '-label');\n      opener.setAttribute('aria-labelledby', containerClass + '-' + uId + '-label');\n    }\n\n    // Event Init\n    if (select.disabled) {\n      container.classList.add(builderParams.isDisabledClass);\n    } else {\n      opener.setAttribute('tabindex', '0');\n      select.setAttribute('tabindex', '-1');\n      addEvents();\n    }\n\n    // Stores the plugin public exposed methods and properties, directly in the container HTMLElement\n    container.customSelect = {\n      get pluginOptions() {\n        return builderParams;\n      },\n      get open() {\n        return isOpen;\n      },\n      set open(bool) {\n        open(bool);\n      },\n      get disabled() {\n        return select.disabled;\n      },\n      set disabled(bool) {\n        disabled(bool);\n      },\n      get value() {\n        return select.value;\n      },\n      set value(val) {\n        setValue(val);\n      },\n      append: function append(node, target) {\n        return _append(node, true, target);\n      },\n      insertBefore: function insertBefore(node, target) {\n        return _insertBefore(node, target);\n      },\n      remove: remove,\n      empty: empty,\n      destroy: destroy,\n      opener: opener,\n      select: select,\n      panel: panel,\n      container: container\n    };\n\n    // Stores the plugin directly in the original select\n    select.customSelect = container.customSelect;\n\n    // Returns the plugin instance, with the public exposed methods and properties\n    return container.customSelect;\n  }\n\n  function customSelect(element, customParams) {\n    // Overrides the default options with the ones provided by the user\n    var nodeList = [];\n    var selects = [];\n\n    return function init() {\n      // The plugin is called on a single HTMLElement\n      if (element && element instanceof HTMLElement && element.tagName.toUpperCase() === 'SELECT') {\n        nodeList.push(element);\n        // The plugin is called on a selector\n      } else if (element && typeof element === 'string') {\n        var elementsList = document.querySelectorAll(element);\n        for (var i = 0, l = elementsList.length; i < l; ++i) {\n          if (elementsList[i] instanceof HTMLElement && elementsList[i].tagName.toUpperCase() === 'SELECT') {\n            nodeList.push(elementsList[i]);\n          }\n        }\n        // The plugin is called on any HTMLElements list (NodeList, HTMLCollection, Array, etc.)\n      } else if (element && element.length) {\n        for (var _i3 = 0, _l3 = element.length; _i3 < _l3; ++_i3) {\n          if (element[_i3] instanceof HTMLElement && element[_i3].tagName.toUpperCase() === 'SELECT') {\n            nodeList.push(element[_i3]);\n          }\n        }\n      }\n\n      // Launches the plugin over every HTMLElement\n      // And stores every plugin instance\n      for (var _i4 = 0, _l4 = nodeList.length; _i4 < _l4; ++_i4) {\n        selects.push(builder(nodeList[_i4], _extends({}, defaultParams, customParams)));\n      }\n\n      // Returns all plugin instances\n      return selects;\n    }();\n  }\n\n\n  });\n\n  var customSelect = unwrapExports(build);\n\n  customSelect('select');\n\n  /*\r\n    @ Add body class if:\r\n    - scroll started\r\n    - scrolled to bottom\r\n  */\n  var START_OFFSET = 34;\n  var START_CLASS = \"is-scrolled\";\n  var BOTTOM_OFFSET = 10;\n  var BOTTOM_CLASS = \"is-scrolled-bottom\";\n\n  var ScrollClass = function ScrollClass() {\n    var _this = this;\n\n    _classCallCheck(this, ScrollClass);\n\n    _defineProperty(this, \"scrollHandler\", function () {\n      var top = document.documentElement.scrollTop;\n      document.body.classList.toggle(START_CLASS, top >= START_OFFSET);\n      document.body.classList.toggle(BOTTOM_CLASS, window.innerHeight + top >= document.body.offsetHeight - BOTTOM_OFFSET);\n\n      _this.oldScroll = top;\n    });\n\n    document.addEventListener(\"scroll\", this.scrollHandler, {\n      passive: true\n    });\n  };\n\n  new ScrollClass();\n\n}());\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\r\n * Animate\r\n * ======================================\r\n * - add class to element in viewport\r\n * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n * - set animation delay via [animate-delay] html attribute\r\n * - set visible threshold via [animate-threshold] html attribute\r\n */\r\n\r\n const ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches\r\n const THRESHOLD = '0.75'\r\n const LOAD_THRESHOLD = '0.2'\r\n const ELEMENTS = '.animate'\r\n const VISIBLE_CLASS = 'animate--visible'\r\n\r\n class Animate {\r\n   constructor() {\r\n    this.sections = document.querySelectorAll(ELEMENTS)\r\n    this.THRESHOLD = THRESHOLD\r\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD\r\n\r\n      if('IntersectionObserver' in window) {\r\n        this.sections.forEach((el) => {\r\n         const BoundingClientRect = el.getBoundingClientRect()\r\n         const visibleRatio =  BoundingClientRect.height / window.innerHeight\r\n\r\n         if(visibleRatio > 0.95){\r\n           this.THRESHOLD =  window.innerHeight / BoundingClientRect.height / 100 * 30\r\n           this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20\r\n         }\r\n\r\n          // observe on page load\r\n          const loadObserver = new IntersectionObserver(this.observeCallback, {\r\n            threshold: this.LOAD_THRESHOLD\r\n          });\r\n          loadObserver.observe(el);\r\n\r\n\r\n          setTimeout(() => {\r\n            loadObserver.disconnect();\r\n          }, 100);\r\n\r\n          // observe\r\n          const observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : this.THRESHOLD\r\n          const observer = new IntersectionObserver(this.observeCallback, {\r\n            threshold: observerThreshold\r\n          });\r\n          observer.observe(el);\r\n        })\r\n      } else {\r\n        this.sections.forEach((el) => {\r\n          el.classList.add(VISIBLE_CLASS)\r\n        })\r\n      }\r\n   }\r\n\r\n    observeCallback = (entries) => {\r\n      entries.map((entry) => {\r\n        const section = entry.target;\r\n        const delay = this.getDelay(section)\r\n        const sectionBodyClass = section.getAttribute('animate-body-class')\r\n\r\n        if (entry.isIntersecting) {\r\n          if(ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n            section.classList.add(VISIBLE_CLASS)\r\n\r\n            this.bodyClass(sectionBodyClass, 'add')\r\n          } else {\r\n            setTimeout(() => {\r\n              section.classList.add(VISIBLE_CLASS)\r\n              this.bodyClass(sectionBodyClass, 'add')\r\n            }, delay)\r\n          }\r\n        } else {\r\n          this.bodyClass(sectionBodyClass, 'remove')\r\n        }\r\n      });\r\n    }\r\n\r\n   getDelay = (section) => {\r\n   var delay = section.getAttribute('animate-delay')\r\n\r\n   if(!ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n     var delay = section.getAttribute('animate-delay-desktop')\r\n   }\r\n\r\n   if (delay === null) {\r\n     return 0\r\n   } else if (delay.includes('.')) {\r\n     return parseInt(delay * 1000)\r\n   } else {\r\n     return parseInt(delay)\r\n   }\r\n   }\r\n\r\n   bodyClass = (htmlclass, type) => {\r\n     if(!htmlclass){\r\n       return\r\n     }\r\n\r\n      if(type == 'add'){\r\n        document.body.classList.add(htmlclass)\r\n      } else {\r\n        document.body.classList.remove(htmlclass)\r\n      }\r\n    }\r\n }\r\n\r\n new Animate()\r\n","/*!\n * Splide.js\n * Version  : 3.2.5\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\n\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = ref.parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, (attr) => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    const { style: style2 } = elm;\n    value = `${value}`;\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition, message = \"\") {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n  function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n  function emit(event) {\n    (handlers[event] || []).forEach((handler) => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n  function destroy() {\n    handlers = {};\n  }\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const { event } = Splide2;\n  const key = {};\n  let listeners = [];\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  function off(events) {\n    event.off(events, key);\n  }\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter((listener) => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, (target) => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  function destroy() {\n    listeners = listeners.filter((data) => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const { now } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n      if (rate === 1) {\n        onInterval();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      raf(update);\n    }\n  }\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return { set, is };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n    initialOptions = merge({}, options);\n    const { breakpoints } = options;\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n        point,\n        matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n      ]);\n      observe();\n    }\n  }\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function observe() {\n    const item = find(points, (item2) => item2[1].matches) || [];\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n      Splide2.options = newOptions;\n    }\n  }\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\n\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const { direction } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n  function destroy() {\n    [root, track, list].forEach((elm) => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n  function refresh() {\n    destroy();\n    setup();\n  }\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  function getClasses() {\n    return [\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE\n    ];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  TAB_INDEX,\n  DISABLED\n];\n\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n  const { Components, root, options } = Splide2;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n  function mount() {\n    init();\n    bind(slide, \"click keydown\", (e) => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove.bind(this));\n    }\n  }\n  function init() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n    if (isNavigation) {\n      const idx = isClone ? slideIndex : index;\n      const label = format(options.i18n.slideX, idx + 1);\n      const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n      setAttribute(slide, ARIA_LABEL, label);\n      setAttribute(slide, ARIA_CONTROLS, controls);\n      setAttribute(slide, ROLE, \"menuitem\");\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n  function onMove(next, prev, dest) {\n    if (!destroyed) {\n      update.call(this);\n      if (dest === index) {\n        updateActivity.call(this, true);\n      }\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      const { index: currIndex } = Splide2;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n  function updateVisibility(visible) {\n    const ariaHidden = !visible && !isActive();\n    setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n    setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n    if (focusableNodes) {\n      focusableNodes.forEach((node) => {\n        setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n      });\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    return Splide2.index === index;\n  }\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n    return diff <= distance;\n  }\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    style: style$1,\n    isWithin\n  };\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const { on, emit, bind } = EventInterface(Splide2);\n  const { slides, list } = Components2.Elements;\n  const Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1((Slide2) => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n  }\n  function getIn(page) {\n    const { Controller } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, (slide) => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map((Slide2) => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n  function style(prop, value, useContainer) {\n    forEach$1((Slide2) => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let { length } = images;\n    if (length) {\n      images.forEach((img) => {\n        bind(img, \"load error\", () => {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const { root, track, list } = Components2.Elements;\n  const { getAt } = Slides;\n  let vertical;\n  let rootRect;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n  function resize() {\n    const newRect = rect(root);\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      Slides.style(resolve(\"marginRight\"), unit(options.gap));\n      Slides.style(\"width\", cssSlideWidth() || null);\n      setSlidesHeight();\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n  function cssPadding(right) {\n    const { padding } = options;\n    const prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    let height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n  }\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Elements, Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n  function computeCloneCount() {\n    let { clones: clones2 } = options;\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n  const { resolve, orient } = Components2.Direction;\n  const { list, track } = Components2.Elements;\n  let waiting;\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n  function reposition() {\n    if (!isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const { set } = Splide2.state;\n      const position = getPosition();\n      const looping = dest !== index;\n      waiting = looping || options.waitForTransition;\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Components2.Transition.start(dest, () => {\n        looping && jump(index);\n        waiting = false;\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n    }\n  }\n  function loop(position) {\n    if (!waiting && Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= sign(excess) * size * ceil(abs(excess) / size);\n    return position;\n  }\n  function cancel() {\n    waiting = false;\n    translate(getPosition());\n    Components2.Transition.cancel();\n  }\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    const { focus } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function isBusy() {\n    return !!waiting;\n  }\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit } = Move;\n  const { isEnough, getLength } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    let index = currIndex;\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      if (isLoop) {\n        index = clamp(control, -perPage, slideCount + perPage - 1);\n      } else {\n        index = clamp(control, 0, getEnd());\n      }\n    }\n    return index;\n  }\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function getEnd() {\n    let end = slideCount - perPage;\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n    return max(end, 0);\n  }\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n    return index;\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n    return index;\n  }\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n    if (prev && next) {\n      if (!arrows.prev) {\n        const { id } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    const { go } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nfunction Autoplay(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Elements } = Components2;\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const { isPaused } = interval;\n  let hovered;\n  let focused;\n  let paused;\n  function mount() {\n    const { autoplay } = options;\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n  function listen() {\n    const { root } = Elements;\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", (e) => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", (e) => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(manual = true) {\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n    paused = manual;\n  }\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  function update(rate) {\n    const { bar } = Elements;\n    if (bar) {\n      style(bar, \"width\", `${rate * 100}%`);\n    }\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  function destroy() {\n    apply(false);\n  }\n  function apply(cover) {\n    Components2.Slides.forEach((Slide) => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit, exceededLimit } = Move;\n  let interval;\n  let scrollCallback;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, (rate) => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  function easing(t) {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Move, Scroll, Controller } = Components2;\n  const { track } = Components2.Elements;\n  const { resolve, orient } = Components2.Direction;\n  const { getPosition, exceededLimit } = Move;\n  const listenerOptions = { passive: false, capture: true };\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n    bind(track, \"click\", onClick, { capture: true });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    const { drag } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    if (!disabled) {\n      const { noDrag } = options;\n      const isTouch = isTouchEvent(e);\n      const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n      if (isDraggable && (isTouch || !e.button)) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          clickPrevented = false;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n    lastEvent = e;\n    if (e.cancelable) {\n      const diff = coordOf(e) - coordOf(baseEvent);\n      if (dragging) {\n        Move.translate(basePosition + constrain(diff));\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n        if (expired || exceeded) {\n          save(e);\n        }\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        let { dragMinThreshold: thresholds } = options;\n        thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n        dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(Splide2.index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n        prevent(e);\n      }\n      emit(EVENT_DRAGGED);\n    }\n    dragging = false;\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\nfunction Keyboard(Splide2, Components2, options) {\n  const { on, bind, unbind } = EventInterface(Splide2);\n  const { root } = Components2.Elements;\n  const { resolve } = Components2.Direction;\n  let target;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, () => {\n      destroy();\n      init();\n    });\n  }\n  function init() {\n    const { keyboard = \"global\" } = options;\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n      bind(target, \"keydown\", onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, \"keydown\");\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n  function onKeydown(e) {\n    const { key } = e;\n    const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n    if (normalizedKey === resolve(\"ArrowLeft\")) {\n      Splide2.go(\"<\");\n    } else if (normalizedKey === resolve(\"ArrowRight\")) {\n      Splide2.go(\">\");\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const { on, off, bind, emit } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        destroy();\n        init();\n      });\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n  function init() {\n    Components2.Slides.forEach((_Slide) => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({ _img, _Slide, src, srcset, _spinner });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  function observe() {\n    images = images.filter((data) => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n      return true;\n    });\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  function load(data) {\n    const { _img } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", (e) => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach((name) => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  function onLoad(data, error) {\n    const { _Slide } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Slides, Elements, Controller } = Components2;\n  const { hasFocus, getIndex } = Controller;\n  const items = [];\n  let list;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  function init() {\n    destroy();\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n      update();\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach((item) => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  function createPagination() {\n    const { length } = Splide2;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n      const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({ li, button, page: i });\n    }\n  }\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n    emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\nfunction Sync(Splide2, Components2, options) {\n  const { splides } = Splide2;\n  const { list } = Components2.Elements;\n  function mount() {\n    if (options.isNavigation) {\n      navigate();\n    } else {\n      sync();\n    }\n  }\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n  }\n  function sync() {\n    const processed = [];\n    splides.concat(Splide2).forEach((splide, index, instances) => {\n      EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n        instances.forEach((instance) => {\n          if (instance !== splide && !includes(processed, splide)) {\n            processed.push(instance);\n            instance.go(instance.is(LOOP) ? dest : index2);\n          }\n        });\n        empty(processed);\n      });\n    });\n  }\n  function navigate() {\n    const { on, emit } = EventInterface(Splide2);\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n    }\n  }\n  function onWheel(e) {\n    const { deltaY } = e;\n    if (deltaY) {\n      Splide2.go(deltaY < 0 ? \"<\" : \">\");\n      prevent(e);\n    }\n  }\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\n\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n  function start(index, done) {\n    const { track } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  const { Move, Controller } = Components2;\n  const { list } = Components2.Elements;\n  let endCallback;\n  function mount() {\n    bind(list, \"transitionend\", (e) => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    apply(\"\");\n  }\n  function getSpeed(index) {\n    const { rewindSpeed } = options;\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n  mount(Extensions, Transition) {\n    const { state, Components: Components2 } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, (component) => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  sync(splide) {\n    this.splides.push(splide);\n    splide.splides.push(this);\n    return this;\n  }\n  go(control) {\n    this._Components.Controller.go(control);\n    return this;\n  }\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n    return this;\n  }\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n    return this;\n  }\n  is(type) {\n    return this._options.type === type;\n  }\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  destroy(completely = true) {\n    const { event, state } = this;\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, (component) => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    const { _options } = this;\n    merge(_options, options);\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n};\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\nconst CLASS_RENDERED = \"is-rendered\";\n\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n  build() {\n    let css = \"\";\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach((breakpoint) => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      css += `#${this.id} ${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n  static clean(splide) {\n    const { on } = EventInterface(splide);\n    const { root } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? { html: content } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n  registerRootStyles() {\n    this.breakpoints.forEach(([width, options]) => {\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n  registerTrackStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n  registerListStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n    });\n  }\n  registerSlideStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      const height = this.cssSlideHeight(options);\n      if (height) {\n        Style2.rule(selector, \"height\", height, width);\n      } else {\n        Style2.rule(selector, \"padding-top\", this.cssSlidePadding(options), width);\n      }\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n  buildTranslate(options) {\n    const { resolve, orient } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n    return values.filter(Boolean).map((value) => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n  cssOffsetClones(options) {\n    const { resolve, orient } = this.Direction;\n    const cloneCount = this.getCloneCount();\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n  cssOffsetCenter(options) {\n    const { resolve, orient } = this.Direction;\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n    const values = [];\n    const { perPage, gap } = options;\n    values.push(`${orient(50 / perPage)}%`);\n    if (gap) {\n      const { value, unit: unit2 } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n    return values;\n  }\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n    if (cloneCount && options.gap) {\n      const { orient } = this.Direction;\n      const { value, unit: unit2 } = this.parseCssValue(options.gap);\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n      const { perPage } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n    return \"\";\n  }\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n  cssPadding(options, right) {\n    const { padding } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  cssTrackHeight(options) {\n    let height = \"\";\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n    return height;\n  }\n  cssHeight(options) {\n    return unit(options.height);\n  }\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  cssSlidePadding(options) {\n    const { heightRatio } = options;\n    return heightRatio ? `${heightRatio * 100}%` : \"\";\n  }\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return { value: number, unit: unit2 };\n    }\n    return { value, unit: \"px\" };\n  }\n  parseBreakpoints() {\n    const { breakpoints } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n    return false;\n  }\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n  buildClasses() {\n    const { options } = this;\n    return [\n      CLASS_ROOT,\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE,\n      !this.config.hidden && CLASS_RENDERED\n    ].filter(Boolean).join(\" \");\n  }\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n  renderSlides() {\n    const { slideTag: tag } = this.config;\n    return this.slides.map((content) => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n  cover(content) {\n    const { styles, html = \"\" } = content;\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n  generateClones(contents) {\n    const { classes } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, { class: `${content.attrs.class} ${classes.clone}` });\n      const clone = assign({}, content, { attrs });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n  getCloneCount() {\n    if (this.isLoop()) {\n      const { options } = this;\n      if (options.clones) {\n        return options.clones;\n      }\n      const perPage = max(...this.breakpoints.map(([, options2]) => options2.perPage));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n    return 0;\n  }\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n  renderArrow(prev) {\n    const { classes, i18n } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n  html() {\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n    html += beforeTrack || \"\";\n    if (arrows) {\n      html += this.renderArrows();\n    }\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n    html += `</div>`;\n    return html;\n  }\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };\n","import Splide from '@splidejs/splide';\r\n\r\n\r\nif (document.querySelector('#carousel')) {\r\n  new Splide( '#carousel', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 4,\r\n    perMove: 1,\r\n    gap: 32,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n        padding: { right: 30, left: 30 },\r\n      },\r\n      767: {\r\n        perPage: 1,\r\n        gap: 10,\r\n        padding: { right: 30, left: 30 },\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n        padding: { right: 0, left: 0 },\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n\r\nif (document.querySelector('#testimonials')) {\r\n  new Splide( '#testimonials', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 3,\r\n    perMove: 1,\r\n    gap: 28,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n      },\r\n      767: {\r\n        perPage: 2,\r\n        gap: 10,\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n","/**\r\n * Toggle Nav\r\n * ======================================\r\n * - toggle class on body\r\n */\r\n\r\nconst ELEMENTS = '.togglenav__button'\r\nconst TOGGLE_CLASS = 'nav-is-open'\r\n\r\nclass ToggleNav {\r\n  constructor() {\r\n    this.elements = document.querySelectorAll(ELEMENTS)\r\n\r\n    if (!this.elements) {\r\n      return false\r\n    }\r\n\r\n    this.elements.forEach((el) => {\r\n      el.addEventListener('click', this.toggleNav, false)\r\n    })\r\n  }\r\n\r\n  toggleNav(e) {\r\n    document.body.classList.toggle(TOGGLE_CLASS)\r\n    document.body.classList.toggle('lock')\r\n\r\n    e.preventDefault()\r\n  }\r\n}\r\n\r\nnew ToggleNav()\r\n","import SimpleLightbox from \"simplelightbox\";\r\n\r\nnew SimpleLightbox('.gallery__fancybox', { /* options */ });\r\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.1\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SimpleLightbox = /*#__PURE__*/function () {\n  function SimpleLightbox(elements, options) {\n    var _this = this;\n\n    _classCallCheck(this, SimpleLightbox);\n\n    _defineProperty(this, \"defaultOptions\", {\n      sourceAttr: 'href',\n      overlay: true,\n      spinner: true,\n      nav: true,\n      navText: ['&lsaquo;', '&rsaquo;'],\n      captions: true,\n      captionDelay: 0,\n      captionSelector: 'img',\n      captionType: 'attr',\n      captionsData: 'title',\n      captionPosition: 'bottom',\n      captionClass: '',\n      close: true,\n      closeText: '&times;',\n      swipeClose: true,\n      showCounter: true,\n      fileExt: 'png|jpg|jpeg|gif|webp',\n      animationSlide: true,\n      animationSpeed: 250,\n      preloading: true,\n      enableKeyboard: true,\n      loop: true,\n      rel: false,\n      docClose: true,\n      swipeTolerance: 50,\n      className: 'simple-lightbox',\n      widthRatio: 0.8,\n      heightRatio: 0.9,\n      scaleImageToRatio: false,\n      disableRightClick: false,\n      disableScroll: true,\n      alertError: true,\n      alertErrorMessage: 'Image not found, next image will be loaded',\n      additionalHtml: false,\n      history: true,\n      throttleInterval: 0,\n      doubleTapZoom: 2,\n      maxZoom: 10,\n      htmlClass: 'has-lightbox',\n      rtl: false,\n      fixedClass: 'sl-fixed',\n      fadeSpeed: 300,\n      uniqueImages: true,\n      focus: true,\n      scrollZoom: true,\n      scrollZoomFactor: 0.5\n    });\n\n    _defineProperty(this, \"transitionPrefix\", void 0);\n\n    _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n    _defineProperty(this, \"transitionCapable\", false);\n\n    _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n    _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n    _defineProperty(this, \"initialLocationHash\", void 0);\n\n    _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n    _defineProperty(this, \"isOpen\", false);\n\n    _defineProperty(this, \"isAnimating\", false);\n\n    _defineProperty(this, \"isClosing\", false);\n\n    _defineProperty(this, \"isFadeIn\", false);\n\n    _defineProperty(this, \"urlChangedOnce\", false);\n\n    _defineProperty(this, \"hashReseted\", false);\n\n    _defineProperty(this, \"historyHasChanges\", false);\n\n    _defineProperty(this, \"historyUpdateTimeout\", null);\n\n    _defineProperty(this, \"currentImage\", void 0);\n\n    _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n    _defineProperty(this, \"domNodes\", {});\n\n    _defineProperty(this, \"loadedImages\", []);\n\n    _defineProperty(this, \"initialImageIndex\", 0);\n\n    _defineProperty(this, \"currentImageIndex\", 0);\n\n    _defineProperty(this, \"initialSelector\", null);\n\n    _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n    _defineProperty(this, \"controlCoordinates\", {\n      swipeDiff: 0,\n      swipeYDiff: 0,\n      swipeStart: 0,\n      swipeEnd: 0,\n      swipeYStart: 0,\n      swipeYEnd: 0,\n      mousedown: false,\n      imageLeft: 0,\n      zoomed: false,\n      containerHeight: 0,\n      containerWidth: 0,\n      containerOffsetX: 0,\n      containerOffsetY: 0,\n      imgHeight: 0,\n      imgWidth: 0,\n      capture: false,\n      initialOffsetX: 0,\n      initialOffsetY: 0,\n      initialPointerOffsetX: 0,\n      initialPointerOffsetY: 0,\n      initialPointerOffsetX2: 0,\n      initialPointerOffsetY2: 0,\n      initialScale: 1,\n      initialPinchDistance: 0,\n      pointerOffsetX: 0,\n      pointerOffsetY: 0,\n      pointerOffsetX2: 0,\n      pointerOffsetY2: 0,\n      targetOffsetX: 0,\n      targetOffsetY: 0,\n      targetScale: 0,\n      pinchOffsetX: 0,\n      pinchOffsetY: 0,\n      limitOffsetX: 0,\n      limitOffsetY: 0,\n      scaleDifference: 0,\n      targetPinchDistance: 0,\n      touchCount: 0,\n      doubleTapped: false,\n      touchmoveCount: 0\n    });\n\n    this.options = Object.assign(this.defaultOptions, options);\n    this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n    if (typeof elements === 'string') {\n      this.initialSelector = elements;\n      this.elements = Array.from(document.querySelectorAll(elements));\n    } else {\n      this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n    }\n\n    this.relatedElements = [];\n    this.transitionPrefix = this.calculateTransitionPrefix();\n    this.transitionCapable = this.transitionPrefix !== false;\n    this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n    if (this.options.rel) {\n      this.elements = this.getRelated(this.options.rel);\n    }\n\n    if (this.options.uniqueImages) {\n      var imgArr = [];\n      this.elements = Array.from(this.elements).filter(function (element) {\n        var src = element.getAttribute(_this.options.sourceAttr);\n\n        if (imgArr.indexOf(src) === -1) {\n          imgArr.push(src);\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    this.createDomNodes();\n\n    if (this.options.close) {\n      this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n    }\n\n    if (this.options.nav) {\n      this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n    }\n\n    if (this.options.spinner) {\n      this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n    }\n\n    this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n      if (_this.isValidLink(event.currentTarget)) {\n        event.preventDefault();\n\n        if (_this.isAnimating) {\n          return false;\n        }\n\n        _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n        _this.openImage(event.currentTarget);\n      }\n    }); // close addEventListener click addEventListener doc\n\n    if (this.options.docClose) {\n      this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n        if (_this.isOpen && event.target === event.currentTarget) {\n          _this.close();\n        }\n      });\n    } // disable rightclick\n\n\n    if (this.options.disableRightClick) {\n      this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n        if (event.target.parentElement.classList.contains(\"sl-image\")) {\n          event.preventDefault();\n        }\n      });\n    } // keyboard-control\n\n\n    if (this.options.enableKeyboard) {\n      this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n        _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n        if (_this.isAnimating && event.key === 'Escape') {\n          _this.currentImage.setAttribute('src', '');\n\n          _this.isAnimating = false;\n          return _this.close();\n        }\n\n        if (_this.isOpen) {\n          event.preventDefault();\n\n          if (event.key === 'Escape') {\n            _this.close();\n          }\n\n          if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n            _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n          }\n        }\n      }, this.options.throttleInterval));\n    }\n\n    this.addEvents();\n  }\n\n  _createClass(SimpleLightbox, [{\n    key: \"checkPassiveEventsSupport\",\n    value: function checkPassiveEventsSupport() {\n      // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n      // Test via a getter in the options object to see if the passive property is accessed\n      var supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            supportsPassive = true;\n          }\n        });\n        window.addEventListener(\"testPassive\", null, opts);\n        window.removeEventListener(\"testPassive\", null, opts);\n      } catch (e) {}\n\n      return supportsPassive;\n    }\n  }, {\n    key: \"createDomNodes\",\n    value: function createDomNodes() {\n      this.domNodes.overlay = document.createElement('div');\n      this.domNodes.overlay.classList.add('sl-overlay');\n      this.domNodes.overlay.dataset.opacityTarget = \".7\";\n      this.domNodes.closeButton = document.createElement('button');\n      this.domNodes.closeButton.classList.add('sl-close');\n      this.domNodes.closeButton.innerHTML = this.options.closeText;\n      this.domNodes.spinner = document.createElement('div');\n      this.domNodes.spinner.classList.add('sl-spinner');\n      this.domNodes.spinner.innerHTML = '<div></div>';\n      this.domNodes.navigation = document.createElement('div');\n      this.domNodes.navigation.classList.add('sl-navigation');\n      this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n      this.domNodes.counter = document.createElement('div');\n      this.domNodes.counter.classList.add('sl-counter');\n      this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n      this.domNodes.caption = document.createElement('div');\n      this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n      if (this.options.captionClass) {\n        this.domNodes.caption.classList.add(this.options.captionClass);\n      }\n\n      this.domNodes.image = document.createElement('div');\n      this.domNodes.image.classList.add('sl-image');\n      this.domNodes.wrapper = document.createElement('div');\n      this.domNodes.wrapper.classList.add('sl-wrapper');\n      this.domNodes.wrapper.setAttribute('tabindex', -1);\n      this.domNodes.wrapper.setAttribute('role', 'dialog');\n      this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n      if (this.options.className) {\n        this.domNodes.wrapper.classList.add(this.options.className);\n      }\n\n      if (this.options.rtl) {\n        this.domNodes.wrapper.classList.add('sl-dir-rtl');\n      }\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(func, limit) {\n      var inThrottle;\n      return function () {\n        if (!inThrottle) {\n          func.apply(this, arguments);\n          inThrottle = true;\n          setTimeout(function () {\n            return inThrottle = false;\n          }, limit);\n        }\n      };\n    }\n  }, {\n    key: \"isValidLink\",\n    value: function isValidLink(element) {\n      return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"calculateTransitionPrefix\",\n    value: function calculateTransitionPrefix() {\n      var s = (document.body || document.documentElement).style;\n      return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n    }\n  }, {\n    key: \"toggleScrollbar\",\n    value: function toggleScrollbar(type) {\n      var scrollbarWidth = 0;\n      var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n      if (type === 'hide') {\n        var fullWindowWidth = window.innerWidth;\n\n        if (!fullWindowWidth) {\n          var documentElementRect = document.documentElement.getBoundingClientRect();\n          fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n        }\n\n        if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n          var scrollDiv = document.createElement('div'),\n              paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n          scrollDiv.classList.add('sl-scrollbar-measure');\n          document.body.appendChild(scrollDiv);\n          scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          document.body.removeChild(scrollDiv);\n          document.body.dataset.originalPaddingRight = paddingRight;\n\n          if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n            document.body.classList.add('hidden-scroll');\n            document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n            fixedElements.forEach(function (element) {\n              var actualPadding = element.style.paddingRight;\n              var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n              element.dataset.originalPaddingRight = actualPadding;\n              element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n            });\n          }\n        }\n      } else {\n        document.body.classList.remove('hidden-scroll');\n        document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n        fixedElements.forEach(function (element) {\n          var padding = element.dataset.originalPaddingRight;\n\n          if (typeof padding !== 'undefined') {\n            element.style.paddingRight = padding;\n          }\n        });\n      }\n\n      return scrollbarWidth;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      if (!this.isOpen || this.isAnimating || this.isClosing) {\n        return false;\n      }\n\n      this.isClosing = true;\n      var element = this.relatedElements[this.currentImageIndex];\n      element.dispatchEvent(new Event('close.simplelightbox'));\n\n      if (this.options.history) {\n        this.historyHasChanges = false;\n\n        if (!this.hashReseted) {\n          this.resetHash();\n        }\n      }\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n        if (_this2.options.disableScroll) {\n          _this2.toggleScrollbar('show');\n        }\n\n        if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n          document.querySelector('html').classList.remove(_this2.options.htmlClass);\n        }\n\n        document.body.removeChild(_this2.domNodes.wrapper);\n        document.body.removeChild(_this2.domNodes.overlay);\n        _this2.domNodes.additionalHtml = null;\n        element.dispatchEvent(new Event('closed.simplelightbox'));\n        _this2.isClosing = false;\n      });\n      this.currentImage = null;\n      this.isOpen = false;\n      this.isAnimating = false; // reset touchcontrol coordinates\n\n      for (var key in this.controlCoordinates) {\n        this.controlCoordinates[key] = 0;\n      }\n\n      this.controlCoordinates.mousedown = false;\n      this.controlCoordinates.zoomed = false;\n      this.controlCoordinates.capture = false;\n      this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n      this.controlCoordinates.doubleTapped = false;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return window.location.hash.substring(1);\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      var _this3 = this;\n\n      var index = this.currentImageIndex,\n          length = this.relatedElements.length,\n          next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n          prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n          nextImage = new Image(),\n          prevImage = new Image();\n      nextImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          //is this condition even required... setting multiple times will not change usage...\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n      });\n      nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n      prevImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n      });\n      prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(direction) {\n      var _this4 = this;\n\n      var slideDirection = direction;\n\n      if (this.options.rtl) {\n        direction = -direction;\n      }\n\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n      var newIndex = this.currentImageIndex + direction;\n\n      if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n        return false;\n      }\n\n      this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n      if (this.options.animationSlide) {\n        this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n      }\n\n      this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n        _this4.isAnimating = true;\n\n        if (!_this4.isClosing) {\n          setTimeout(function () {\n            var element = _this4.relatedElements[_this4.currentImageIndex];\n\n            _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n            if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n              _this4.show(_this4.domNodes.spinner);\n            }\n\n            if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n              _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n            }\n\n            _this4.adjustImage(slideDirection);\n\n            if (_this4.options.preloading) _this4.preload();\n          }, 100);\n        } else {\n          _this4.isAnimating = false;\n        }\n      });\n    }\n  }, {\n    key: \"adjustImage\",\n    value: function adjustImage(direction) {\n      var _this5 = this;\n\n      if (!this.currentImage) {\n        return false;\n      }\n\n      var tmpImage = new Image(),\n          windowWidth = window.innerWidth * this.options.widthRatio,\n          windowHeight = window.innerHeight * this.options.heightRatio;\n      tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n      this.zoomPanElement(0, 0, 1);\n      tmpImage.addEventListener('error', function (event) {\n        _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n        _this5.isAnimating = false;\n        _this5.isOpen = true;\n        _this5.domNodes.spinner.style.display = 'none';\n        var dirIsDefined = direction === 1 || direction === -1;\n\n        if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n          return _this5.close();\n        }\n\n        if (_this5.options.alertError) {\n          alert(_this5.options.alertErrorMessage);\n        }\n\n        _this5.loadImage(dirIsDefined ? direction : 1);\n      });\n      tmpImage.addEventListener('load', function (event) {\n        if (typeof direction !== 'undefined') {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n        } // history\n\n\n        if (_this5.options.history) {\n          _this5.updateURL();\n        }\n\n        if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n          _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n        }\n\n        var imageWidth = event.target.width,\n            imageHeight = event.target.height;\n\n        if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n          var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n          imageWidth /= ratio;\n          imageHeight /= ratio;\n        }\n\n        _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n        _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n        _this5.domNodes.image.style.width = imageWidth + 'px';\n        _this5.domNodes.image.style.height = imageHeight + 'px';\n        _this5.domNodes.spinner.style.display = 'none';\n\n        if (_this5.options.focus) {\n          _this5.forceFocus();\n        }\n\n        _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n          if (_this5.options.focus) {\n            _this5.domNodes.wrapper.focus();\n          }\n        });\n\n        _this5.isOpen = true;\n        var captionContainer, captionText;\n\n        if (typeof _this5.options.captionSelector === 'string') {\n          captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n        } else if (typeof _this5.options.captionSelector === 'function') {\n          captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n        }\n\n        if (_this5.options.captions && captionContainer) {\n          if (_this5.options.captionType === 'data') {\n            captionText = captionContainer.dataset[_this5.options.captionsData];\n          } else if (_this5.options.captionType === 'text') {\n            captionText = captionContainer.innerHTML;\n          } else {\n            captionText = captionContainer.getAttribute(_this5.options.captionsData);\n          }\n        }\n\n        if (!_this5.options.loop) {\n          if (_this5.currentImageIndex === 0) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n\n          if (_this5.currentImageIndex > 0) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n        } else {\n          if (_this5.relatedElements.length === 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          } else {\n            _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          }\n        }\n\n        if (direction === 1 || direction === -1) {\n          if (_this5.options.animationSlide) {\n            _this5.slide(0, 100 * direction + 'px');\n\n            setTimeout(function () {\n              _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n            }, 50);\n          }\n\n          _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          });\n        } else {\n          _this5.isAnimating = false;\n\n          _this5.setCaption(captionText, imageWidth);\n        }\n\n        if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n          _this5.domNodes.additionalHtml = document.createElement('div');\n\n          _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n          _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n          _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n        }\n      });\n    }\n  }, {\n    key: \"zoomPanElement\",\n    value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n      this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n    }\n  }, {\n    key: \"minMax\",\n    value: function minMax(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n  }, {\n    key: \"setZoomData\",\n    value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n      this.currentImage.dataset.scale = initialScale;\n      this.currentImage.dataset.translateX = targetOffsetX;\n      this.currentImage.dataset.translateY = targetOffsetY;\n    }\n  }, {\n    key: \"hashchangeHandler\",\n    value: function hashchangeHandler() {\n      if (this.isOpen && this.hash === this.initialLocationHash) {\n        this.hashReseted = true;\n        this.close();\n      }\n    }\n  }, {\n    key: \"addEvents\",\n    value: function addEvents() {\n      var _this6 = this;\n\n      // resize/responsive\n      this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n        //this.adjustImage.bind(this)\n        if (_this6.isOpen) {\n          _this6.adjustImage();\n        }\n      });\n      this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n      if (this.options.history) {\n        setTimeout(function () {\n          _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n            if (_this6.isOpen) {\n              _this6.hashchangeHandler();\n            }\n          });\n        }, 40);\n      }\n\n      this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n        if (!event.currentTarget.tagName.match(/button/i)) {\n          return true;\n        }\n\n        event.preventDefault();\n        _this6.controlCoordinates.swipeDiff = 0;\n\n        _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n      });\n\n      if (this.options.scrollZoom) {\n        var scale = 1;\n        this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n          if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n            return true;\n          }\n\n          if (_this6.controlCoordinates.containerHeight == 0) {\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          }\n\n          event.preventDefault();\n          var delta = event.delta || event.wheelDelta;\n\n          if (delta === undefined) {\n            //we are on firefox\n            delta = event.detail;\n          }\n\n          delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n          // apply zoom\n\n          scale += delta * _this6.options.scrollZoomFactor * scale;\n          scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n          _this6.controlCoordinates.targetScale = scale;\n          _this6.controlCoordinates.pinchOffsetX = event.pageX;\n          _this6.controlCoordinates.pinchOffsetY = event.pageY;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n          if (_this6.controlCoordinates.targetScale > 1) {\n            _this6.controlCoordinates.zoomed = true;\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          } else {\n            if (_this6.controlCoordinates.initialScale === 1) {\n              _this6.controlCoordinates.zoomed = false;\n\n              if (_this6.domNodes.caption.style.display === 'none') {\n                _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = null;\n            _this6.controlCoordinates.capture = false;\n          }\n\n          _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n          _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n          _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n          _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n          _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        });\n      }\n\n      this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n        if (event.target.tagName === 'A' && event.type === 'touchstart') {\n          return true;\n        }\n\n        if (event.type === 'mousedown') {\n          event.preventDefault();\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n          _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n          _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          _this6.controlCoordinates.capture = true;\n        } else {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              if (!_this6.controlCoordinates.doubleTapped) {\n                _this6.controlCoordinates.doubleTapped = true;\n                setTimeout(function () {\n                  _this6.controlCoordinates.doubleTapped = false;\n                }, 300);\n              } else {\n                _this6.currentImage.classList.add('sl-transition');\n\n                if (!_this6.controlCoordinates.zoomed) {\n                  _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n\n                  _this6.controlCoordinates.zoomed = true;\n                } else {\n                  _this6.controlCoordinates.initialScale = 1;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  _this6.controlCoordinates.zoomed = false;\n                }\n\n                setTimeout(function () {\n                  if (_this6.currentImage) {\n                    _this6.currentImage.classList.remove('sl-transition');\n                  }\n                }, 200);\n                return false;\n              }\n\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            } else if (_this6.controlCoordinates.touchCount === 2)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n              _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n              _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n            }\n\n          _this6.controlCoordinates.capture = true;\n        }\n\n        if (_this6.controlCoordinates.mousedown) return true;\n\n        if (_this6.transitionCapable) {\n          _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n        }\n\n        _this6.controlCoordinates.mousedown = true;\n        _this6.controlCoordinates.swipeDiff = 0;\n        _this6.controlCoordinates.swipeYDiff = 0;\n        _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n        _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n        return false;\n      });\n      this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n        if (!_this6.controlCoordinates.mousedown) {\n          return true;\n        }\n\n        if (event.type === 'touchmove') {\n          if (_this6.controlCoordinates.capture === false) {\n            return false;\n          }\n\n          _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.touchmoveCount++;\n\n          if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n              if (_this6.controlCoordinates.initialPinchDistance === null) {\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                /* Initialize helpers */\n                _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                if (_this6.controlCoordinates.targetScale > 1) {\n                  _this6.controlCoordinates.zoomed = true;\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              }\n            } else {\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n        }\n        /* Mouse Move implementation */\n\n\n        if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n          if (event.type == 'touchmove') return true;\n          event.preventDefault();\n          if (_this6.controlCoordinates.capture === false) return false;\n          _this6.controlCoordinates.pointerOffsetX = event.clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.clientY;\n          _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n          }\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n            _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n          }\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        }\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n          _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n          _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n          if (_this6.options.animationSlide) {\n            _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n        if (_this6.isTouchDevice && event.type === 'touchend') {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n\n          if (_this6.controlCoordinates.touchCount === 0)\n            /* No touch */\n            {\n              /* Set attributes */\n              if (_this6.currentImage) {\n                _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n              }\n\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            } else if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            } else if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPinchDistance = null;\n            }\n        }\n\n        if (_this6.controlCoordinates.mousedown) {\n          _this6.controlCoordinates.mousedown = false;\n          var possibleDir = true;\n\n          if (!_this6.options.loop) {\n            if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n              possibleDir = false;\n            }\n\n            if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n              possibleDir = false;\n            }\n          }\n\n          if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n            _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n          } else if (_this6.options.animationSlide) {\n            _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n          }\n\n          if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n            _this6.close();\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n        if (_this6.isTouchDevice) return;\n        _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n        _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n        _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n        _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n        _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n        _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n        _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n        _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n        _this6.currentImage.classList.add('sl-transition');\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n            _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n\n          _this6.controlCoordinates.zoomed = true;\n        } else {\n          _this6.controlCoordinates.initialScale = 1;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          _this6.controlCoordinates.zoomed = false;\n\n          if (_this6.domNodes.caption.style.display === 'none') {\n            _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n        }\n\n        setTimeout(function () {\n          if (_this6.currentImage) {\n            _this6.currentImage.classList.remove('sl-transition');\n\n            _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n          }\n        }, 200);\n        _this6.controlCoordinates.capture = true;\n        return false;\n      });\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions(element) {\n      var styles = window.getComputedStyle(element),\n          height = element.offsetHeight,\n          width = element.offsetWidth,\n          borderTopWidth = parseFloat(styles.borderTopWidth),\n          borderBottomWidth = parseFloat(styles.borderBottomWidth),\n          paddingTop = parseFloat(styles.paddingTop),\n          paddingBottom = parseFloat(styles.paddingBottom),\n          borderLeftWidth = parseFloat(styles.borderLeftWidth),\n          borderRightWidth = parseFloat(styles.borderRightWidth),\n          paddingLeft = parseFloat(styles.paddingLeft),\n          paddingRight = parseFloat(styles.paddingRight);\n      return {\n        height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n        width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n      };\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash() {\n      var newHash = 'pid=' + (this.currentImageIndex + 1),\n          newURL = window.location.href.split('#')[0] + '#' + newHash;\n      this.hashReseted = false;\n\n      if (this.pushStateSupport) {\n        window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n      } else {\n        // what is the browser target of this?\n        if (this.historyHasChanges) {\n          window.location.replace(newURL);\n        } else {\n          window.location.hash = newHash;\n        }\n      }\n\n      if (!this.historyHasChanges) {\n        this.urlChangedOnce = true;\n      }\n\n      this.historyHasChanges = true;\n    }\n  }, {\n    key: \"resetHash\",\n    value: function resetHash() {\n      this.hashReseted = true;\n\n      if (this.urlChangedOnce) {\n        history.back();\n      } else {\n        if (this.pushStateSupport) {\n          history.pushState('', document.title, window.location.pathname + window.location.search);\n        } else {\n          window.location.hash = '';\n        }\n      } //\n      //in case an history operation is still pending\n\n\n      clearTimeout(this.historyUpdateTimeout);\n    }\n  }, {\n    key: \"updateURL\",\n    value: function updateURL() {\n      clearTimeout(this.historyUpdateTimeout);\n\n      if (!this.historyHasChanges) {\n        this.updateHash(); // first time\n      } else {\n        this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n      }\n    }\n  }, {\n    key: \"setCaption\",\n    value: function setCaption(captionText, imageWidth) {\n      var _this7 = this;\n\n      if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n        this.hide(this.domNodes.caption);\n        this.domNodes.caption.style.width = imageWidth + 'px';\n        this.domNodes.caption.innerHTML = captionText;\n        this.domNodes.image.appendChild(this.domNodes.caption);\n        setTimeout(function () {\n          _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n        }, this.options.captionDelay);\n      }\n    }\n  }, {\n    key: \"slide\",\n    value: function slide(speed, pos) {\n      if (!this.transitionCapable) {\n        return this.domNodes.image.style.left = pos;\n      }\n\n      this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n      this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n  }, {\n    key: \"getRelated\",\n    value: function getRelated(rel) {\n      var elems;\n\n      if (rel && rel !== false && rel !== 'nofollow') {\n        elems = Array.from(this.elements).filter(function (element) {\n          return element.getAttribute('rel') === rel;\n        });\n      } else {\n        elems = this.elements;\n      }\n\n      return elems;\n    }\n  }, {\n    key: \"openImage\",\n    value: function openImage(element) {\n      var _this8 = this;\n\n      element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n      if (this.options.disableScroll) {\n        this.globalScrollbarWidth = this.toggleScrollbar('hide');\n      }\n\n      if (this.options.htmlClass && this.options.htmlClass !== '') {\n        document.querySelector('html').classList.add(this.options.htmlClass);\n      }\n\n      document.body.appendChild(this.domNodes.wrapper);\n      this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n      if (this.options.overlay) {\n        document.body.appendChild(this.domNodes.overlay);\n      }\n\n      this.relatedElements = this.getRelated(element.rel);\n\n      if (this.options.showCounter) {\n        if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.removeChild(this.domNodes.counter);\n        } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.appendChild(this.domNodes.counter);\n        }\n      }\n\n      this.isAnimating = true;\n      this.currentImageIndex = this.relatedElements.indexOf(element);\n      var targetURL = element.getAttribute(this.options.sourceAttr);\n      this.currentImage = document.createElement('img');\n      this.currentImage.style.display = 'none';\n      this.currentImage.setAttribute('src', targetURL);\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n\n      if (this.loadedImages.indexOf(targetURL) === -1) {\n        this.loadedImages.push(targetURL);\n      }\n\n      this.domNodes.image.innerHTML = '';\n      this.domNodes.image.setAttribute('style', '');\n      this.domNodes.image.appendChild(this.currentImage);\n      this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n      this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n      this.show(this.domNodes.spinner);\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n      this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n      this.adjustImage();\n\n      if (this.options.preloading) {\n        this.preload();\n      }\n\n      setTimeout(function () {\n        element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n      }, this.options.animationSpeed);\n    }\n  }, {\n    key: \"forceFocus\",\n    value: function forceFocus() {\n      var _this9 = this;\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n        if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n          _this9.domNodes.wrapper.focus();\n        }\n      });\n    } // utility\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(elements, events, callback, opts) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator = _createForOfIteratorHelper(elements),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var element = _step.value;\n\n          if (!element.namespaces) {\n            element.namespaces = {};\n          } // save the namespaces addEventListener the DOM element itself\n\n\n          var _iterator2 = _createForOfIteratorHelper(events),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var event = _step2.value;\n              var options = opts || false;\n              var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n              if (needsPassiveFix && this.isPassiveEventsSupported) {\n                if (_typeof(options) === 'object') {\n                  options.passive = true;\n                } else {\n                  options = {\n                    passive: true\n                  };\n                }\n              }\n\n              element.namespaces[event] = callback;\n              element.addEventListener(event.split('.')[0], callback, options);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(elements, events) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator3 = _createForOfIteratorHelper(elements),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var element = _step3.value;\n\n          var _iterator4 = _createForOfIteratorHelper(events),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var event = _step4.value;\n\n              if (element.namespaces && element.namespaces[event]) {\n                element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                delete element.namespaces[event];\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"fadeOut\",\n    value: function fadeOut(elements, duration, callback) {\n      var _this10 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator5 = _createForOfIteratorHelper(elements),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var element = _step5.value;\n          element.style.opacity = 1;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.isFadeIn = false;\n\n      var step = 16.66666 / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if ((currentOpacity -= step) < 0) {\n          var _iterator6 = _createForOfIteratorHelper(elements),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var element = _step6.value;\n              element.style.display = \"none\"; // element.style.opacity = '';\n\n              element.style.opacity = 1;\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          callback && callback.call(_this10, elements);\n        } else {\n          var _iterator7 = _createForOfIteratorHelper(elements),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _element = _step7.value;\n              _element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n\n          requestAnimationFrame(fade);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"fadeIn\",\n    value: function fadeIn(elements, duration, callback, display) {\n      var _this11 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator8 = _createForOfIteratorHelper(elements),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var element = _step8.value;\n          element.style.opacity = 0;\n          element.style.display = display || \"block\";\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      this.isFadeIn = true;\n\n      var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n          step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if (!((currentOpacity += step) > opacityTarget)) {\n          var _iterator9 = _createForOfIteratorHelper(elements),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var element = _step9.value;\n              element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n\n          if (!_this11.isFadeIn) return;\n          requestAnimationFrame(fade);\n        } else {\n          var _iterator10 = _createForOfIteratorHelper(elements),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var _element2 = _step10.value;\n              _element2.style.opacity = '';\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          callback && callback.call(_this11, elements);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(elements) {\n      elements = this.wrap(elements);\n\n      var _iterator11 = _createForOfIteratorHelper(elements),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var element = _step11.value;\n\n          if (element.style.display != 'none') {\n            element.dataset.initialDisplay = element.style.display;\n          }\n\n          element.style.display = 'none';\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(elements, display) {\n      elements = this.wrap(elements);\n\n      var _iterator12 = _createForOfIteratorHelper(elements),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var element = _step12.value;\n          element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap(input) {\n      return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n  }, {\n    key: \"on\",\n    value: function on(events, callback) {\n      events = this.wrap(events);\n\n      var _iterator13 = _createForOfIteratorHelper(this.elements),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var element = _step13.value;\n\n          if (!element.fullyNamespacedEvents) {\n            element.fullyNamespacedEvents = {};\n          }\n\n          var _iterator14 = _createForOfIteratorHelper(events),\n              _step14;\n\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var event = _step14.value;\n              element.fullyNamespacedEvents[event] = callback;\n              element.addEventListener(event, callback);\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(events) {\n      events = this.wrap(events);\n\n      var _iterator15 = _createForOfIteratorHelper(this.elements),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var element = _step15.value;\n\n          var _iterator16 = _createForOfIteratorHelper(events),\n              _step16;\n\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var event = _step16.value;\n\n              if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n              }\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      return this;\n    } // api\n\n  }, {\n    key: \"open\",\n    value: function open(elem) {\n      elem = elem || this.elements[0];\n\n      if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n        elem = elem.get(0);\n      }\n\n      this.initialImageIndex = this.elements.indexOf(elem);\n\n      if (this.initialImageIndex > -1) {\n        this.openImage(elem);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.loadImage(1);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.loadImage(-1);\n    } // get some useful data\n\n  }, {\n    key: \"getLighboxData\",\n    value: function getLighboxData() {\n      return {\n        currentImageIndex: this.currentImageIndex,\n        currentImage: this.currentImage,\n        globalScrollbarWidth: this.globalScrollbarWidth\n      };\n    } //close is exposed anyways..\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      //remove all custom event listeners from elements\n      this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n      this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n      this.removeEventListener(window, 'resize.' + this.eventNamespace);\n      this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n      this.close();\n\n      if (this.isOpen) {\n        document.body.removeChild(this.domNodes.wrapper);\n        document.body.removeChild(this.domNodes.overlay);\n      }\n\n      this.elements = null;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (!this.initialSelector) {\n        throw 'refreshing only works when you initialize using a selector!';\n      }\n\n      var options = this.options,\n          selector = this.initialSelector;\n      this.destroy();\n      this.constructor(selector, options);\n      return this;\n    }\n  }]);\n\n  return SimpleLightbox;\n}();\n\nvar _default = SimpleLightbox;\nexports[\"default\"] = _default;\nglobal.SimpleLightbox = SimpleLightbox;","/**\n * Sticky Sidebar v2 JavaScript Plugin.\n * @version 1.0.1\n * @author Øystein Blixhavn <oystein@blixhavn.no>\n * @license The MIT License (MIT)\n */\nconst StickySidebar = (() => {\n\n    // ---------------------------------\n    // # Define Constants\n    // ---------------------------------\n    //\n    const EVENT_KEY = '.stickySidebar';\n    const VERSION   = '1.0.1';\n\n    const DEFAULTS = {\n      /**\n       * Additional top spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      topSpacing: 0,\n\n      /**\n       * Additional bottom spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      bottomSpacing: 0,\n\n      /**\n       * Container sidebar selector to know what the beginning and end of sticky element.\n       * @type {String|False}\n       */\n      containerSelector: false,\n\n      /**\n       * Parent element where the scrolling happens.\n       */\n      scrollContainer: false,\n\n      /**\n       * Inner wrapper selector.\n       * @type {String}\n       */\n      innerWrapperSelector: '.inner-wrapper-sticky',\n\n      /**\n       * The name of CSS class to apply to elements when they have become stuck.\n       * @type {String|False}\n       */\n      stickyClass: 'is-affixed',\n\n      /**\n       * The sidebar returns to its normal position if its width below this value.\n       * @type {Numeric}\n       */\n      minWidth: false\n    };\n\n    // ---------------------------------\n    // # Class Definition\n    // ---------------------------------\n    //\n    /**\n     * Sticky Sidebar Class.\n     * @public\n     */\n    class StickySidebar{\n\n      /**\n       * Sticky Sidebar Constructor.\n       * @constructor\n       * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n       * @param {Object} options - The options of sticky sidebar.\n       */\n      constructor(sidebar, options = {}){\n        this.options = StickySidebar.extend(DEFAULTS, options);\n\n        // Sidebar element query if there's no one, throw error.\n        this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n        if( 'undefined' === typeof this.sidebar )\n          throw new Error(\"There is no specific sidebar element.\");\n\n        this.sidebarInner = false;\n        this.container = this.sidebar.parentElement;\n\n        // Current Affix Type of sidebar element.\n        this.affixedType = 'STATIC';\n        this.direction = 'down';\n        this.support = {\n          transform:   false,\n          transform3d: false\n        };\n\n        this._initialized = false;\n        this._reStyle = false;\n        this._breakpoint = false;\n\n        // Dimensions of sidebar, container and screen viewport.\n        this.dimensions = {\n          translateY: 0,\n          maxTranslateY: 0,\n          topSpacing: 0,\n          lastTopSpacing: 0,\n          bottomSpacing: 0,\n          lastBottomSpacing: 0,\n          sidebarHeight: 0,\n          sidebarWidth: 0,\n          containerTop: 0,\n          containerHeight: 0,\n          viewportHeight: 0,\n          viewportTop: 0,\n          lastViewportTop: 0,\n        };\n\n        // Bind event handlers for referencability.\n        ['handleEvent'].forEach( (method) => {\n          this[method] = this[method].bind(this);\n        });\n\n        // Initialize sticky sidebar for first time.\n        this.initialize();\n      }\n\n      /**\n       * Initializes the sticky sidebar by adding inner wrapper, define its container,\n       * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n       * @private\n       */\n      initialize(){\n        this._setSupportFeatures();\n\n        // Get sticky sidebar inner wrapper, if not found, will create one.\n        if( this.options.innerWrapperSelector ){\n          this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n          if( null === this.sidebarInner )\n            this.sidebarInner = false;\n        }\n\n        if( ! this.sidebarInner ){\n          let wrapper = document.createElement('div');\n          wrapper.setAttribute('class', 'inner-wrapper-sticky');\n          this.sidebar.appendChild(wrapper);\n\n          while( this.sidebar.firstChild != wrapper )\n            wrapper.appendChild(this.sidebar.firstChild);\n\n          this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n        }\n\n        // Container wrapper of the sidebar.\n        if( this.options.containerSelector ){\n          let containers = document.querySelectorAll(this.options.containerSelector);\n          containers = Array.prototype.slice.call(containers);\n\n          containers.forEach((container, item) => {\n            if( ! container.contains(this.sidebar) ) return;\n            this.container = container;\n          });\n\n          if( ! containers.length )\n            throw new Error(\"The container does not contains on the sidebar.\");\n        }\n\n        // Get scroll container, if provided\n        this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n        // If top/bottom spacing is not function parse value to integer.\n        if( 'function' !== typeof this.options.topSpacing )\n          this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n        if( 'function' !== typeof this.options.bottomSpacing )\n          this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n        // Breakdown sticky sidebar if screen width below `options.minWidth`.\n        this._widthBreakpoint();\n\n        // Calculate dimensions of sidebar, container and viewport.\n        this.calcDimensions();\n\n        // Affix sidebar in proper position.\n        this.stickyPosition();\n\n        // Bind all events.\n        this.bindEvents();\n\n        // Inform other properties the sticky sidebar is initialized.\n        this._initialized = true;\n      }\n\n      /**\n       * Bind all events of sticky sidebar plugin.\n       * @protected\n       */\n      bindEvents(){\n        this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n        this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n        this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n        this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n        if( 'undefined' !== typeof ResizeObserver ){\n          const resizeObserver = new ResizeObserver(() => this.handleEvent())\n          resizeObserver.observe(this.sidebarInner)\n          resizeObserver.observe(this.container)\n        }\n      }\n\n      /**\n       * Handles all events of the plugin.\n       * @param {Object} event - Event object passed from listener.\n       */\n      handleEvent(event){\n        this.updateSticky(event);\n      }\n\n      /**\n       * Calculates dimensions of sidebar, container and screen viewpoint\n       * @public\n       */\n      calcDimensions(){\n        if( this._breakpoint ) return;\n        var dims = this.dimensions;\n\n        // Container of sticky sidebar dimensions.\n        dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n        dims.containerHeight = this.container.clientHeight;\n        dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n        // Sidebar dimensions.\n        dims.sidebarHeight = this.sidebarInner.offsetHeight;\n        dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n        // Screen viewport dimensions.\n        dims.viewportHeight = window.innerHeight;\n\n        // Maximum sidebar translate Y.\n        dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n        this._calcDimensionsWithScroll();\n      }\n\n      /**\n       * Some dimensions values need to be up-to-date when scrolling the page.\n       * @private\n       */\n      _calcDimensionsWithScroll(){\n        var dims = this.dimensions;\n\n        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n        if (this.scrollContainer) {\n          dims.viewportTop = this.scrollContainer.scrollTop;\n          dims.viewportLeft = this.scrollContainer.scrollLeft;\n        } else {\n          dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n          dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n        }\n        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n        dims.topSpacing    = this.options.topSpacing;\n        dims.bottomSpacing = this.options.bottomSpacing;\n\n        if( 'function' === typeof dims.topSpacing )\n            dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n        if( 'function' === typeof dims.bottomSpacing )\n            dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n        if( 'VIEWPORT-TOP' === this.affixedType ){\n          // Adjust translate Y in the case decrease top spacing value.\n          if( dims.topSpacing < dims.lastTopSpacing ){\n            dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n            this._reStyle = true;\n          }\n        } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n          // Adjust translate Y in the case decrease bottom spacing value.\n          if( dims.bottomSpacing < dims.lastBottomSpacing ){\n            dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n            this._reStyle = true;\n          }\n        }\n\n        dims.lastTopSpacing    = dims.topSpacing;\n        dims.lastBottomSpacing = dims.bottomSpacing;\n      }\n\n      /**\n       * Determine whether the sidebar is bigger than viewport.\n       * @public\n       * @return {Boolean}\n       */\n      isSidebarFitsViewport() {\n        return this.dimensions.viewportHeight >= (\n          this.dimensions.lastBottomSpacing +\n          this.dimensions.lastTopSpacing +\n          this.dimensions.sidebarHeight\n        );\n      }\n\n      /**\n       * Observe browser scrolling direction top and down.\n       */\n      observeScrollDir(){\n        var dims = this.dimensions;\n        if( dims.lastViewportTop === dims.viewportTop ) return;\n\n        var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n        // If the browser is scrolling not in the same direction.\n        if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n          this.direction = 'down' === this.direction ?  'up' : 'down';\n      }\n\n      /**\n       * Gets affix type of sidebar according to current scroll top and scrolling direction.\n       * @public\n       * @return {String|False} - Proper affix type.\n       */\n      getAffixType(){\n        this._calcDimensionsWithScroll();\n        var dims = this.dimensions;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var affixType = this.affixedType;\n\n       if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n          dims.translateY = 0;\n          affixType = 'STATIC';\n        } else {\n          affixType = ( 'up' === this.direction ) ?\n            this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n        }\n\n        // Make sure the translate Y is not bigger than container height.\n        dims.translateY = Math.max(0, dims.translateY);\n        dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n        dims.translateY = Math.round(dims.translateY);\n\n        dims.lastViewportTop = dims.viewportTop;\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling down.\n       * @private\n       * @return {String} - Proper affix type of scrolling down direction.\n       */\n      _getAffixTypeScrollingDown(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( this.isSidebarFitsViewport() ){\n          if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( colliderTop >= dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n          }\n        } else {\n          if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n            dims.translateY = colliderBottom - sidebarBottom;\n            affixType = 'VIEWPORT-BOTTOM';\n\n          } else if( dims.containerTop + dims.translateY <= colliderTop &&\n            (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling up.\n       * @private\n       * @return {String} - Proper affix type of scrolling up direction.\n       */\n      _getAffixTypeScrollingUp(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( colliderTop <= dims.translateY + dims.containerTop ){\n          dims.translateY = colliderTop - dims.containerTop;\n          affixType = 'VIEWPORT-TOP';\n\n        } else if( dims.containerBottom <= colliderBottom ){\n          dims.translateY = dims.containerBottom - sidebarBottom;\n          affixType = 'CONTAINER-BOTTOM';\n\n        } else if( ! this.isSidebarFitsViewport() ){\n\n          if( dims.containerTop <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Gets inline style of sticky sidebar wrapper and inner wrapper according\n       * to its affix type.\n       * @private\n       * @param {String} affixType - Affix type of sticky sidebar.\n       * @return {Object}\n       */\n      _getStyle(affixType){\n        if( 'undefined' === typeof affixType ) return;\n\n        var style = {inner: {}, outer: {}};\n        var dims = this.dimensions;\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n            style.inner = {position: 'fixed', top: dims.topSpacing,\n                  left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n            break;\n          case 'VIEWPORT-BOTTOM':\n            style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                  bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n            break;\n          case 'CONTAINER-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n            let translate = this._getTranslate(0, dims.translateY + 'px');\n\n            if( translate )\n              style.inner = {transform: translate};\n            else\n              style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n            break;\n        }\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n          case 'VIEWPORT-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n          case 'CONTAINER-BOTTOM':\n            style.outer = {height: dims.sidebarHeight, position: 'relative'};\n            break;\n        }\n\n        style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n        style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n            bottom: '', width: '',  transform: ''}, style.inner);\n\n        return style;\n      }\n\n      /**\n       * Cause the sidebar to be sticky according to affix type by adding inline\n       * style, adding helper class and trigger events.\n       * @function\n       * @protected\n       * @param {string} force - Update sticky sidebar position by force.\n       */\n      stickyPosition(force){\n        if( this._breakpoint ) return;\n\n        force = this._reStyle || force || false;\n\n        var offsetTop = this.options.topSpacing;\n        var offsetBottom = this.options.bottomSpacing;\n\n        var affixType = this.getAffixType();\n        var style = this._getStyle(affixType);\n\n        if( (this.affixedType != affixType || force) && affixType ){\n          let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n          if( 'STATIC' === affixType )\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          else\n            StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n          for( let key in style.outer ){\n            let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n            this.sidebar.style[key] = style.outer[key] + unit;\n          }\n\n          for( let key in style.inner ){\n            let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n            this.sidebarInner.style[key] = style.inner[key] + unit;\n          }\n\n          let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n        } else {\n          if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n        }\n\n        this.affixedType = affixType;\n      }\n\n      /**\n       * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n       * @protected\n       */\n      _widthBreakpoint(){\n\n        if( window.innerWidth <= this.options.minWidth ){\n          this._breakpoint = true;\n          this.affixedType = 'STATIC';\n\n          this.sidebar.removeAttribute('style');\n          StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          this.sidebarInner.removeAttribute('style');\n        } else {\n          this._breakpoint = false;\n        }\n      }\n\n      /**\n       * Switches between functions stack for each event type, if there's no\n       * event, it will re-initialize sticky sidebar.\n       * @public\n       */\n      updateSticky(event = {}){\n        if( this._running ) return;\n        this._running = true;\n\n        ((eventType) => {\n          requestAnimationFrame(() => {\n            switch( eventType ){\n              // When browser is scrolling and re-calculate just dimensions\n              // within scroll.\n              case 'scroll':\n                this._calcDimensionsWithScroll();\n                this.observeScrollDir();\n                this.stickyPosition();\n                break;\n\n              // When browser is resizing or there's no event, observe width\n              // breakpoint and re-calculate dimensions.\n              case 'resize':\n              default:\n                this._widthBreakpoint();\n                this.calcDimensions();\n                this.stickyPosition(true);\n                break;\n            }\n            this._running = false;\n          });\n        })(event.type);\n      }\n\n      /**\n       * Set browser support features to the public property.\n       * @private\n       */\n      _setSupportFeatures(){\n        var support = this.support;\n\n        support.transform = StickySidebar.supportTransform();\n        support.transform3d = StickySidebar.supportTransform(true);\n      }\n\n      /**\n       * Get translate value, if the browser supports transfrom3d, it will adopt it.\n       * and the same with translate. if browser doesn't support both return false.\n       * @param {Number} y - Value of Y-axis.\n       * @param {Number} x - Value of X-axis.\n       * @param {Number} z - Value of Z-axis.\n       * @return {String|False}\n       */\n      _getTranslate(y = 0, x = 0, z = 0){\n        if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n        else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n        else return false;\n      }\n\n      /**\n       * Destroy sticky sidebar plugin.\n       * @public\n       */\n      destroy(){\n        window.removeEventListener('resize', this, {capture: false});\n        window.removeEventListener('scroll', this, {capture: false});\n\n        this.sidebar.classList.remove(this.options.stickyClass);\n        this.sidebar.style.minHeight = '';\n\n        this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n        var styleReset = {inner: {}, outer: {}};\n\n        styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n        styleReset.outer = {height: '', position: ''};\n\n        for( let key in styleReset.outer )\n          this.sidebar.style[key] = styleReset.outer[key];\n\n        for( let key in styleReset.inner )\n          this.sidebarInner.style[key] = styleReset.inner[key];\n\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n          ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n          ResizeSensor.detach(this.container, this.handleEvent);\n        }\n      }\n\n      /**\n       * Determine if the browser supports CSS transform feature.\n       * @function\n       * @static\n       * @param {Boolean} transform3d - Detect transform with translate3d.\n       * @return {String}\n       */\n      static supportTransform(transform3d){\n        var result = false,\n            property = (transform3d) ? 'perspective' : 'transform',\n            upper = property.charAt(0).toUpperCase() + property.slice(1),\n            prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n            support = document.createElement('support'),\n            style = support.style;\n\n        (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n          if (style[property] !== undefined) {\n            result = property;\n            return false;\n          }\n        });\n        return result;\n      }\n\n      /**\n       * Trigger custom event.\n       * @static\n       * @param {DOMObject} element - Target element on the DOM.\n       * @param {String} eventName - Event name.\n       * @param {Object} data -\n       */\n      static eventTrigger(element, eventName, data){\n        try{\n          var event = new CustomEvent(eventName, {detail: data});\n        } catch(e){\n          var event = document.createEvent('CustomEvent');\n          event.initCustomEvent(eventName, true, true, data);\n        }\n        element.dispatchEvent(event);\n      }\n\n      /**\n       * Extend options object with defaults.\n       * @function\n       * @static\n       */\n      static extend(defaults, options){\n        var results = {};\n        for( let key in defaults ){\n          if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n          else results[key] = defaults[key];\n        }\n        return results;\n      }\n\n      /**\n       * Get current coordinates left and top of specific element.\n       * @static\n       */\n      static offsetRelative(element){\n        var result = {left: 0, top: 0};\n\n        do{\n          let offsetTop = element.offsetTop;\n          let offsetLeft = element.offsetLeft;\n\n          if( ! isNaN(offsetTop) )\n            result.top += offsetTop;\n\n          if( ! isNaN(offsetLeft) )\n            result.left += offsetLeft;\n\n          element = ( 'BODY' === element.tagName ) ?\n                      element.parentElement : element.offsetParent;\n        } while(element)\n        return result;\n      }\n\n      /**\n       * Add specific class name to specific element.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static addClass(element, className){\n        if( ! StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.add(className);\n          else\n            element.className += ' ' + className;\n        }\n      }\n\n      /**\n       * Remove specific class name to specific element\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static removeClass(element, className){\n        if( StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.remove(className);\n          else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n      }\n\n      /**\n       * Determine weather the element has specific class name.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static hasClass(element, className){\n        if (element.classList)\n          return element.classList.contains(className);\n        else\n          return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n      }\n\n      /**\n       * Gets default values of configuration options.\n       * @static\n       * @return {Object}\n       */\n      static get defaults(){\n        return DEFAULTS;\n      }\n    }\n\n    return StickySidebar;\n  })();\n\n  export default StickySidebar;\n\n  // Global\n  // -------------------------\n  window.StickySidebar = StickySidebar;\n","import StickySidebar from \"sticky-sidebar-v2\";\r\n\r\nif (document.querySelector('.sidebar')) {\r\n  var sidebar = new StickySidebar('.sidebar', {\r\n          containerSelector: '.layout',\r\n          innerWrapperSelector: '.sidebar__inner',\r\n          topSpacing: 30,\r\n          bottomSpacing: 20\r\n  });\r\n}\r\n","var objectExtend = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(\n            true,\n            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n              ? result[key]\n              : base,\n            value\n          );\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || (typeof val != 'object' && typeof val != 'function');\n}\n\nexport {objectExtend as default};\n","import $ewBKy$justextend from \"just-extend\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nclass $4040acfd8584338d$export$2e2bcd8739ae039 {\n    // Add an event listener for given event\n    on(event, fn) {\n        this._callbacks = this._callbacks || {\n        };\n        // Create namespace for this event\n        if (!this._callbacks[event]) this._callbacks[event] = [];\n        this._callbacks[event].push(fn);\n        return this;\n    }\n    emit(event, ...args) {\n        this._callbacks = this._callbacks || {\n        };\n        let callbacks = this._callbacks[event];\n        if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n        // trigger a corresponding DOM event\n        if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n            args: args\n        }));\n        return this;\n    }\n    makeEvent(eventName, detail) {\n        let params = {\n            bubbles: true,\n            cancelable: true,\n            detail: detail\n        };\n        if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n        else {\n            // IE 11 support\n            // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n            var evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        }\n    }\n    // Remove event listener for given event. If fn is not provided, all event\n    // listeners for that event will be removed. If neither is provided, all\n    // event listeners will be removed.\n    off(event, fn) {\n        if (!this._callbacks || arguments.length === 0) {\n            this._callbacks = {\n            };\n            return this;\n        }\n        // specific event\n        let callbacks = this._callbacks[event];\n        if (!callbacks) return this;\n        // remove all handlers\n        if (arguments.length === 1) {\n            delete this._callbacks[event];\n            return this;\n        }\n        // remove specific handler\n        for(let i = 0; i < callbacks.length; i++){\n            let callback = callbacks[i];\n            if (callback === fn) {\n                callbacks.splice(i, 1);\n                break;\n            }\n        }\n        return this;\n    }\n}\n\n\n\nvar $fd6031f88dce2e32$exports = {};\n$fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\nlet $4ca367182776f80b$var$defaultOptions = {\n    /**\n   * Has to be specified on elements other than form (or when the form doesn't\n   * have an `action` attribute).\n   *\n   * You can also provide a function that will be called with `files` and\n   * `dataBlocks`  and must return the url as string.\n   */ url: null,\n    /**\n   * Can be changed to `\"put\"` if necessary. You can also provide a function\n   * that will be called with `files` and must return the method (since `v3.12.0`).\n   */ method: \"post\",\n    /**\n   * Will be set on the XHRequest.\n   */ withCredentials: false,\n    /**\n   * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n   * If set to null or 0, no timeout is going to be set.\n   */ timeout: null,\n    /**\n   * How many file uploads to process in parallel (See the\n   * Enqueuing file uploads documentation section for more info)\n   */ parallelUploads: 2,\n    /**\n   * Whether to send multiple files in one request. If\n   * this it set to true, then the fallback file input element will\n   * have the `multiple` attribute as well. This option will\n   * also trigger additional events (like `processingmultiple`). See the events\n   * documentation section for more information.\n   */ uploadMultiple: false,\n    /**\n   * Whether you want files to be uploaded in chunks to your server. This can't be\n   * used in combination with `uploadMultiple`.\n   *\n   * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n   */ chunking: false,\n    /**\n   * If `chunking` is enabled, this defines whether **every** file should be chunked,\n   * even if the file size is below chunkSize. This means, that the additional chunk\n   * form data will be submitted and the `chunksUploaded` callback will be invoked.\n   */ forceChunking: false,\n    /**\n   * If `chunking` is `true`, then this defines the chunk size in bytes.\n   */ chunkSize: 2097152,\n    /**\n   * If `true`, the individual chunks of a file are being uploaded simultaneously.\n   */ parallelChunkUploads: false,\n    /**\n   * Whether a chunk should be retried if it fails.\n   */ retryChunks: false,\n    /**\n   * If `retryChunks` is true, how many times should it be retried.\n   */ retryChunksLimit: 3,\n    /**\n   * The maximum filesize (in MiB) that is allowed to be uploaded.\n   */ maxFilesize: 256,\n    /**\n   * The name of the file param that gets transferred.\n   * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n   * Dropzone will append `[]` to the name.\n   */ paramName: \"file\",\n    /**\n   * Whether thumbnails for images should be generated\n   */ createImageThumbnails: true,\n    /**\n   * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n   */ maxThumbnailFilesize: 10,\n    /**\n   * If `null`, the ratio of the image will be used to calculate it.\n   */ thumbnailWidth: 120,\n    /**\n   * The same as `thumbnailWidth`. If both are null, images will not be resized.\n   */ thumbnailHeight: 120,\n    /**\n   * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ thumbnailMethod: \"crop\",\n    /**\n   * If set, images will be resized to these dimensions before being **uploaded**.\n   * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n   * ratio of the file will be preserved.\n   *\n   * The `options.transformFile` function uses these options, so if the `transformFile` function\n   * is overridden, these options don't do anything.\n   */ resizeWidth: null,\n    /**\n   * See `resizeWidth`.\n   */ resizeHeight: null,\n    /**\n   * The mime type of the resized image (before it gets uploaded to the server).\n   * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n   * See `resizeWidth` for more information.\n   */ resizeMimeType: null,\n    /**\n   * The quality of the resized images. See `resizeWidth`.\n   */ resizeQuality: 0.8,\n    /**\n   * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ resizeMethod: \"contain\",\n    /**\n   * The base that is used to calculate the **displayed** filesize. You can\n   * change this to 1024 if you would rather display kibibytes, mebibytes,\n   * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n   * not `1 kilobyte`. You can change this to `1024` if you don't care about\n   * validity.\n   */ filesizeBase: 1000,\n    /**\n   * If not `null` defines how many files this Dropzone handles. If it exceeds,\n   * the event `maxfilesexceeded` will be called. The dropzone element gets the\n   * class `dz-max-files-reached` accordingly so you can provide visual\n   * feedback.\n   */ maxFiles: null,\n    /**\n   * An optional object to send additional headers to the server. Eg:\n   * `{ \"My-Awesome-Header\": \"header value\" }`\n   */ headers: null,\n    /**\n   * Should the default headers be set or not?\n   * Accept: application/json <- for requesting json response\n   * Cache-Control: no-cache <- Request shouldnt be cached\n   * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n   */ defaultHeaders: true,\n    /**\n   * If `true`, the dropzone element itself will be clickable, if `false`\n   * nothing will be clickable.\n   *\n   * You can also pass an HTML element, a CSS selector (for multiple elements)\n   * or an array of those. In that case, all of those elements will trigger an\n   * upload when clicked.\n   */ clickable: true,\n    /**\n   * Whether hidden files in directories should be ignored.\n   */ ignoreHiddenFiles: true,\n    /**\n   * The default implementation of `accept` checks the file's mime type or\n   * extension against this list. This is a comma separated list of mime\n   * types or file extensions.\n   *\n   * Eg.: `image/*,application/pdf,.psd`\n   *\n   * If the Dropzone is `clickable` this option will also be used as\n   * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n   * parameter on the hidden file input as well.\n   */ acceptedFiles: null,\n    /**\n   * **Deprecated!**\n   * Use acceptedFiles instead.\n   */ acceptedMimeTypes: null,\n    /**\n   * If false, files will be added to the queue but the queue will not be\n   * processed automatically.\n   * This can be useful if you need some additional user input before sending\n   * files (or if you want want all files sent at once).\n   * If you're ready to send the file simply call `myDropzone.processQueue()`.\n   *\n   * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n   * section for more information.\n   */ autoProcessQueue: true,\n    /**\n   * If false, files added to the dropzone will not be queued by default.\n   * You'll have to call `enqueueFile(file)` manually.\n   */ autoQueue: true,\n    /**\n   * If `true`, this will add a link to every file preview to remove or cancel (if\n   * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n   * and `dictRemoveFile` options are used for the wording.\n   */ addRemoveLinks: false,\n    /**\n   * Defines where to display the file previews – if `null` the\n   * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n   * selector. The element should have the `dropzone-previews` class so\n   * the previews are displayed properly.\n   */ previewsContainer: null,\n    /**\n   * Set this to `true` if you don't want previews to be shown.\n   */ disablePreviews: false,\n    /**\n   * This is the element the hidden input field (which is used when clicking on the\n   * dropzone to trigger file selection) will be appended to. This might\n   * be important in case you use frameworks to switch the content of your page.\n   *\n   * Can be a selector string, or an element directly.\n   */ hiddenInputContainer: \"body\",\n    /**\n   * If null, no capture type will be specified\n   * If camera, mobile devices will skip the file selection and choose camera\n   * If microphone, mobile devices will skip the file selection and choose the microphone\n   * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n   * On apple devices multiple must be set to false.  AcceptedFiles may need to\n   * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n   */ capture: null,\n    /**\n   * **Deprecated**. Use `renameFile` instead.\n   */ renameFilename: null,\n    /**\n   * A function that is invoked before the file is uploaded to the server and renames the file.\n   * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n   * file that gets used during the upload can be accessed through `file.upload.filename`.\n   */ renameFile: null,\n    /**\n   * If `true` the fallback will be forced. This is very useful to test your server\n   * implementations first and make sure that everything works as\n   * expected without dropzone if you experience problems, and to test\n   * how your fallbacks will look.\n   */ forceFallback: false,\n    /**\n   * The text used before any files are dropped.\n   */ dictDefaultMessage: \"Drop files here to upload\",\n    /**\n   * The text that replaces the default message text it the browser is not supported.\n   */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n    /**\n   * The text that will be added before the fallback form.\n   * If you provide a  fallback element yourself, or if this option is `null` this will\n   * be ignored.\n   */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n    /**\n   * If the filesize is too big.\n   * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n   */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n    /**\n   * If the file doesn't match the file type.\n   */ dictInvalidFileType: \"You can't upload files of this type.\",\n    /**\n   * If the server response was invalid.\n   * `{{statusCode}}` will be replaced with the servers status code.\n   */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n   */ dictCancelUpload: \"Cancel upload\",\n    /**\n   * The text that is displayed if an upload was manually canceled\n   */ dictUploadCanceled: \"Upload canceled.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n   */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used to remove a file.\n   */ dictRemoveFile: \"Remove file\",\n    /**\n   * If this is not null, then the user will be prompted before removing a file.\n   */ dictRemoveFileConfirmation: null,\n    /**\n   * Displayed if `maxFiles` is st and exceeded.\n   * The string `{{maxFiles}}` will be replaced by the configuration value.\n   */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n    /**\n   * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n   * `b` for bytes.\n   */ dictFileSizeUnits: {\n        tb: \"TB\",\n        gb: \"GB\",\n        mb: \"MB\",\n        kb: \"KB\",\n        b: \"b\"\n    },\n    /**\n   * Called when dropzone initialized\n   * You can add event listeners here\n   */ init () {\n    },\n    /**\n   * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n   * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n   * of a function, this needs to return a map.\n   *\n   * The default implementation does nothing for normal uploads, but adds relevant information for\n   * chunked uploads.\n   *\n   * This is the same as adding hidden input fields in the form element.\n   */ params (files, xhr, chunk) {\n        if (chunk) return {\n            dzuuid: chunk.file.upload.uuid,\n            dzchunkindex: chunk.index,\n            dztotalfilesize: chunk.file.size,\n            dzchunksize: this.options.chunkSize,\n            dztotalchunkcount: chunk.file.upload.totalChunkCount,\n            dzchunkbyteoffset: chunk.index * this.options.chunkSize\n        };\n    },\n    /**\n   * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n   * and a `done` function as parameters.\n   *\n   * If the done function is invoked without arguments, the file is \"accepted\" and will\n   * be processed. If you pass an error message, the file is rejected, and the error\n   * message will be displayed.\n   * This function will not be called if the file is too big or doesn't match the mime types.\n   */ accept (file, done) {\n        return done();\n    },\n    /**\n   * The callback that will be invoked when all chunks have been uploaded for a file.\n   * It gets the file for which the chunks have been uploaded as the first parameter,\n   * and the `done` function as second. `done()` needs to be invoked when everything\n   * needed to finish the upload process is done.\n   */ chunksUploaded: function(file, done) {\n        done();\n    },\n    /**\n   * Sends the file as binary blob in body instead of form data.\n   * If this is set, the `params` option will be ignored.\n   * It's an error to set this to `true` along with `uploadMultiple` since\n   * multiple files cannot be in a single binary body.\n   */ binaryBody: false,\n    /**\n   * Gets called when the browser is not supported.\n   * The default implementation shows the fallback input field and adds\n   * a text.\n   */ fallback () {\n        // This code should pass in IE7... :(\n        let messageElement;\n        this.element.className = `${this.element.className} dz-browser-not-supported`;\n        for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\"; // Removes the 'dz-default' class\n            break;\n        }\n        if (!messageElement) {\n            messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n            this.element.appendChild(messageElement);\n        }\n        let span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n            if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n            else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n        }\n        return this.element.appendChild(this.getFallbackForm());\n    },\n    /**\n   * Gets called to calculate the thumbnail dimensions.\n   *\n   * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n   *\n   *  - `srcWidth` & `srcHeight` (required)\n   *  - `trgWidth` & `trgHeight` (required)\n   *  - `srcX` & `srcY` (optional, default `0`)\n   *  - `trgX` & `trgY` (optional, default `0`)\n   *\n   * Those values are going to be used by `ctx.drawImage()`.\n   */ resize (file, width, height, resizeMethod) {\n        let info = {\n            srcX: 0,\n            srcY: 0,\n            srcWidth: file.width,\n            srcHeight: file.height\n        };\n        let srcRatio = file.width / file.height;\n        // Automatically calculate dimensions if not specified\n        if (width == null && height == null) {\n            width = info.srcWidth;\n            height = info.srcHeight;\n        } else if (width == null) width = height * srcRatio;\n        else if (height == null) height = width / srcRatio;\n        // Make sure images aren't upscaled\n        width = Math.min(width, info.srcWidth);\n        height = Math.min(height, info.srcHeight);\n        let trgRatio = width / height;\n        if (info.srcWidth > width || info.srcHeight > height) {\n            // Image is bigger and needs rescaling\n            if (resizeMethod === \"crop\") {\n                if (srcRatio > trgRatio) {\n                    info.srcHeight = file.height;\n                    info.srcWidth = info.srcHeight * trgRatio;\n                } else {\n                    info.srcWidth = file.width;\n                    info.srcHeight = info.srcWidth / trgRatio;\n                }\n            } else if (resizeMethod === \"contain\") {\n                // Method 'contain'\n                if (srcRatio > trgRatio) height = width / srcRatio;\n                else width = height * srcRatio;\n            } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        info.trgWidth = width;\n        info.trgHeight = height;\n        return info;\n    },\n    /**\n   * Can be used to transform the file (for example, resize an image if necessary).\n   *\n   * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n   * images according to those dimensions.\n   *\n   * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n   * to be invoked with the file when the transformation is done.\n   */ transformFile (file, done) {\n        if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n        else return done(file);\n    },\n    /**\n   * A string that contains the template used for each dropped\n   * file. Change it to fulfill your needs but make sure to properly\n   * provide all elements.\n   *\n   * If you want to use an actual HTML element instead of providing a String\n   * as a config option, you could create a div with the id `tpl`,\n   * put the template inside it and provide the element like this:\n   *\n   *     document\n   *       .querySelector('#tpl')\n   *       .innerHTML\n   *\n   */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n    /*\n   Those functions register themselves to the events on init and handle all\n   the user interface specific stuff. Overwriting them won't break the upload\n   but can break the way it's displayed.\n   You can overwrite them if you don't like the default behavior. If you just\n   want to add an additional event handler, register it on the dropzone object\n   and don't overwrite those options.\n   */ // Those are self explanatory and simply concern the DragnDrop.\n    drop (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragstart (e) {\n    },\n    dragend (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragenter (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragover (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragleave (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    paste (e) {\n    },\n    // Called whenever there are no files left in the dropzone anymore, and the\n    // dropzone should be displayed as if in the initial state.\n    reset () {\n        return this.element.classList.remove(\"dz-started\");\n    },\n    // Called when a file is added to the queue\n    // Receives `file`\n    addedfile (file) {\n        if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n        if (this.previewsContainer && !this.options.disablePreviews) {\n            file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n            file.previewTemplate = file.previewElement; // Backwards compatibility\n            this.previewsContainer.appendChild(file.previewElement);\n            for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n            for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n            if (this.options.addRemoveLinks) {\n                file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                file.previewElement.appendChild(file._removeLink);\n            }\n            let removeFileEvent = (e)=>{\n                e.preventDefault();\n                e.stopPropagation();\n                if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                );\n                else {\n                    if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                    );\n                    else return this.removeFile(file);\n                }\n            };\n            for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n        }\n    },\n    // Called whenever a file is removed.\n    removedfile (file) {\n        if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n        return this._updateMaxFilesReachedClass();\n    },\n    // Called when a thumbnail has been generated\n    // Receives `file` and `dataUrl`\n    thumbnail (file, dataUrl) {\n        if (file.previewElement) {\n            file.previewElement.classList.remove(\"dz-file-preview\");\n            for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                thumbnailElement.alt = file.name;\n                thumbnailElement.src = dataUrl;\n            }\n            return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n            , 1);\n        }\n    },\n    // Called whenever an error occurs\n    // Receives `file` and `message`\n    error (file, message) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-error\");\n            if (typeof message !== \"string\" && message.error) message = message.error;\n            for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n        }\n    },\n    errormultiple () {\n    },\n    // Called when a file gets processed. Since there is a cue, not all added\n    // files are processed immediately.\n    // Receives `file`\n    processing (file) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-processing\");\n            if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n        }\n    },\n    processingmultiple () {\n    },\n    // Called whenever the upload progress gets updated.\n    // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n    // To get the total number of bytes of the file, use `file.size`\n    uploadprogress (file, progress, bytesSent) {\n        if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n    },\n    // Called whenever the total upload progress gets updated.\n    // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n    totaluploadprogress () {\n    },\n    // Called just before the file is sent. Gets the `xhr` object as second\n    // parameter, so you can modify it (for example to add a CSRF token) and a\n    // `formData` object to add additional information.\n    sending () {\n    },\n    sendingmultiple () {\n    },\n    // When the complete upload is finished and successful\n    // Receives `file`\n    success (file) {\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n    },\n    successmultiple () {\n    },\n    // When the upload is canceled.\n    canceled (file) {\n        return this.emit(\"error\", file, this.options.dictUploadCanceled);\n    },\n    canceledmultiple () {\n    },\n    // When the upload is finished, either with success or an error.\n    // Receives `file`\n    complete (file) {\n        if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n    },\n    completemultiple () {\n    },\n    maxfilesexceeded () {\n    },\n    maxfilesreached () {\n    },\n    queuecomplete () {\n    },\n    addedfiles () {\n    }\n};\nvar $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\nclass $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n    static initClass() {\n        // Exposing the emitter class, mainly for tests\n        this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n        /*\n     This is a list of all available events you can register on a dropzone object.\n\n     You can register an event handler like this:\n\n     dropzone.on(\"dragEnter\", function() { });\n\n     */ this.prototype.events = [\n            \"drop\",\n            \"dragstart\",\n            \"dragend\",\n            \"dragenter\",\n            \"dragover\",\n            \"dragleave\",\n            \"addedfile\",\n            \"addedfiles\",\n            \"removedfile\",\n            \"thumbnail\",\n            \"error\",\n            \"errormultiple\",\n            \"processing\",\n            \"processingmultiple\",\n            \"uploadprogress\",\n            \"totaluploadprogress\",\n            \"sending\",\n            \"sendingmultiple\",\n            \"success\",\n            \"successmultiple\",\n            \"canceled\",\n            \"canceledmultiple\",\n            \"complete\",\n            \"completemultiple\",\n            \"reset\",\n            \"maxfilesexceeded\",\n            \"maxfilesreached\",\n            \"queuecomplete\", \n        ];\n        this.prototype._thumbnailQueue = [];\n        this.prototype._processingThumbnail = false;\n    }\n    // Returns all files that have been accepted\n    getAcceptedFiles() {\n        return this.files.filter((file)=>file.accepted\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that have been rejected\n    // Not sure when that's going to be useful, but added for completeness.\n    getRejectedFiles() {\n        return this.files.filter((file)=>!file.accepted\n        ).map((file)=>file\n        );\n    }\n    getFilesWithStatus(status) {\n        return this.files.filter((file)=>file.status === status\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that are in the queue\n    getQueuedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n    }\n    getUploadingFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n    }\n    getAddedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n    }\n    // Files that are either queued or uploading\n    getActiveFiles() {\n        return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n        ).map((file)=>file\n        );\n    }\n    // The function that gets called when Dropzone is initialized. You\n    // can (and should) setup event listeners inside this function.\n    init() {\n        // In case it isn't set already\n        if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n        if (this.clickableElements.length) {\n            let setupHiddenFileInput = ()=>{\n                if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                this.hiddenFileInput = document.createElement(\"input\");\n                this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                this.hiddenFileInput.className = \"dz-hidden-input\";\n                if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                // Making sure that no one can \"tab\" into this field.\n                this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                // Not setting `display=\"none\"` because some browsers don't accept clicks\n                // on elements that aren't displayed.\n                this.hiddenFileInput.style.visibility = \"hidden\";\n                this.hiddenFileInput.style.position = \"absolute\";\n                this.hiddenFileInput.style.top = \"0\";\n                this.hiddenFileInput.style.left = \"0\";\n                this.hiddenFileInput.style.height = \"0\";\n                this.hiddenFileInput.style.width = \"0\";\n                $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                    let { files: files  } = this.hiddenFileInput;\n                    if (files.length) for (let file of files)this.addFile(file);\n                    this.emit(\"addedfiles\", files);\n                    setupHiddenFileInput();\n                });\n            };\n            setupHiddenFileInput();\n        }\n        this.URL = window.URL !== null ? window.URL : window.webkitURL;\n        // Setup all event listeners on the Dropzone object itself.\n        // They're not in @setupEventListeners() because they shouldn't be removed\n        // again when the dropzone gets disabled.\n        for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n        this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n        );\n        // Emit a `queuecomplete` event if all files finished uploading.\n        this.on(\"complete\", (file)=>{\n            if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n            return setTimeout(()=>this.emit(\"queuecomplete\")\n            , 0);\n        });\n        const containsFiles = function(e) {\n            if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n            // IE, we need to iterate like this instead of\n            // using e.dataTransfer.types.some()\n            for(var i = 0; i < e.dataTransfer.types.length; i++){\n                if (e.dataTransfer.types[i] === \"Files\") return true;\n            }\n            return false;\n        };\n        let noPropagation = function(e) {\n            // If there are no files, we don't want to stop\n            // propagation so we don't interfere with other\n            // drag and drop behaviour.\n            if (!containsFiles(e)) return;\n            e.stopPropagation();\n            if (e.preventDefault) return e.preventDefault();\n            else return e.returnValue = false;\n        };\n        // Create the listeners\n        this.listeners = [\n            {\n                element: this.element,\n                events: {\n                    dragstart: (e)=>{\n                        return this.emit(\"dragstart\", e);\n                    },\n                    dragenter: (e)=>{\n                        noPropagation(e);\n                        return this.emit(\"dragenter\", e);\n                    },\n                    dragover: (e)=>{\n                        // Makes it possible to drag files from chrome's download bar\n                        // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                        // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                        let efct;\n                        try {\n                            efct = e.dataTransfer.effectAllowed;\n                        } catch (error) {\n                        }\n                        e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                        noPropagation(e);\n                        return this.emit(\"dragover\", e);\n                    },\n                    dragleave: (e)=>{\n                        return this.emit(\"dragleave\", e);\n                    },\n                    drop: (e)=>{\n                        noPropagation(e);\n                        return this.drop(e);\n                    },\n                    dragend: (e)=>{\n                        return this.emit(\"dragend\", e);\n                    }\n                }\n            }, \n        ];\n        this.clickableElements.forEach((clickableElement)=>{\n            return this.listeners.push({\n                element: clickableElement,\n                events: {\n                    click: (evt)=>{\n                        // Only the actual dropzone or the message element should trigger file selection\n                        if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                        return true;\n                    }\n                }\n            });\n        });\n        this.enable();\n        return this.options.init.call(this);\n    }\n    // Not fully tested yet\n    destroy() {\n        this.disable();\n        this.removeAllFiles(true);\n        if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n            this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n            this.hiddenFileInput = null;\n        }\n        delete this.element.dropzone;\n        return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n    }\n    updateTotalUploadProgress() {\n        let totalUploadProgress;\n        let totalBytesSent = 0;\n        let totalBytes = 0;\n        let activeFiles = this.getActiveFiles();\n        if (activeFiles.length) {\n            for (let file of this.getActiveFiles()){\n                totalBytesSent += file.upload.bytesSent;\n                totalBytes += file.upload.total;\n            }\n            totalUploadProgress = 100 * totalBytesSent / totalBytes;\n        } else totalUploadProgress = 100;\n        return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    }\n    // @options.paramName can be a function taking one parameter rather than a string.\n    // A parameter name for a file is obtained simply by calling this with an index number.\n    _getParamName(n) {\n        if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n        else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n    }\n    // If @options.renameFile is a function,\n    // the function will be used to rename the file.name before appending it to the formData\n    _renameFile(file) {\n        if (typeof this.options.renameFile !== \"function\") return file.name;\n        return this.options.renameFile(file);\n    }\n    // Returns a form that can be used as fallback if the browser does not support DragnDrop\n    //\n    // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n    // This code has to pass in IE7 :(\n    getFallbackForm() {\n        let existingFallback, form;\n        if (existingFallback = this.getExistingFallback()) return existingFallback;\n        let fieldsString = '<div class=\"dz-fallback\">';\n        if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n        fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n        let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n        if (this.element.tagName !== \"FORM\") {\n            form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n            form.appendChild(fields);\n        } else {\n            // Make sure that the enctype and method attributes are set properly\n            this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n            this.element.setAttribute(\"method\", this.options.method);\n        }\n        return form != null ? form : fields;\n    }\n    // Returns the fallback elements if they exist already\n    //\n    // This code has to pass in IE7 :(\n    getExistingFallback() {\n        let getFallback = function(elements) {\n            for (let el of elements){\n                if (/(^| )fallback($| )/.test(el.className)) return el;\n            }\n        };\n        for (let tagName of [\n            \"div\",\n            \"form\"\n        ]){\n            var fallback;\n            if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n        }\n    }\n    // Activates all listeners stored in @listeners\n    setupEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.addEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Deactivates all listeners stored in @listeners\n    removeEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.removeEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Removes all event listeners and cancels all files in the queue or being processed.\n    disable() {\n        this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n        );\n        this.removeEventListeners();\n        this.disabled = true;\n        return this.files.map((file)=>this.cancelUpload(file)\n        );\n    }\n    enable() {\n        delete this.disabled;\n        this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n        );\n        return this.setupEventListeners();\n    }\n    // Returns a nicely formatted filesize\n    filesize(size) {\n        let selectedSize = 0;\n        let selectedUnit = \"b\";\n        if (size > 0) {\n            let units = [\n                \"tb\",\n                \"gb\",\n                \"mb\",\n                \"kb\",\n                \"b\"\n            ];\n            for(let i = 0; i < units.length; i++){\n                let unit = units[i];\n                let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                if (size >= cutoff) {\n                    selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                    selectedUnit = unit;\n                    break;\n                }\n            }\n            selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n        }\n        return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n    }\n    // Adds or removes the `dz-max-files-reached` class from the form.\n    _updateMaxFilesReachedClass() {\n        if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n            return this.element.classList.add(\"dz-max-files-reached\");\n        } else return this.element.classList.remove(\"dz-max-files-reached\");\n    }\n    drop(e) {\n        if (!e.dataTransfer) return;\n        this.emit(\"drop\", e);\n        // Convert the FileList to an Array\n        // This is necessary for IE11\n        let files = [];\n        for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n        // Even if it's a folder, files.length will contain the folders.\n        if (files.length) {\n            let { items: items  } = e.dataTransfer;\n            if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n            this._addFilesFromItems(items);\n            else this.handleFiles(files);\n        }\n        this.emit(\"addedfiles\", files);\n    }\n    paste(e) {\n        if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n        ) == null) return;\n        this.emit(\"paste\", e);\n        let { items: items  } = e.clipboardData;\n        if (items.length) return this._addFilesFromItems(items);\n    }\n    handleFiles(files) {\n        for (let file of files)this.addFile(file);\n    }\n    // When a folder is dropped (or files are pasted), items must be handled\n    // instead of files.\n    _addFilesFromItems(items) {\n        return (()=>{\n            let result = [];\n            for (let item of items){\n                var entry;\n                if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                    if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                    else if (entry.isDirectory) // Append all files from that directory to files\n                    result.push(this._addFilesFromDirectory(entry, entry.name));\n                    else result.push(undefined);\n                } else if (item.getAsFile != null) {\n                    if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                    else result.push(undefined);\n                } else result.push(undefined);\n            }\n            return result;\n        })();\n    }\n    // Goes through the directory, and adds each file it finds recursively\n    _addFilesFromDirectory(directory, path) {\n        let dirReader = directory.createReader();\n        let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n            )\n        ;\n        var readEntries = ()=>{\n            return dirReader.readEntries((entries)=>{\n                if (entries.length > 0) {\n                    for (let entry of entries){\n                        if (entry.isFile) entry.file((file)=>{\n                            if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                            file.fullPath = `${path}/${file.name}`;\n                            return this.addFile(file);\n                        });\n                        else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                    }\n                    // Recursively call readEntries() again, since browser only handle\n                    // the first 100 entries.\n                    // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                    readEntries();\n                }\n                return null;\n            }, errorHandler);\n        };\n        return readEntries();\n    }\n    // If `done()` is called without argument the file is accepted\n    // If you call it with an error message, the file is rejected\n    // (This allows for asynchronous validation)\n    //\n    // This function checks the filesize, and if the file.type passes the\n    // `acceptedFiles` check.\n    accept(file, done) {\n        if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n        else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n        else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n            this.emit(\"maxfilesexceeded\", file);\n        } else this.options.accept.call(this, file, done);\n    }\n    addFile(file) {\n        file.upload = {\n            uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n            progress: 0,\n            // Setting the total upload size to file.size for the beginning\n            // It's actual different than the size to be transmitted.\n            total: file.size,\n            bytesSent: 0,\n            filename: this._renameFile(file)\n        };\n        this.files.push(file);\n        file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n        this.emit(\"addedfile\", file);\n        this._enqueueThumbnail(file);\n        this.accept(file, (error)=>{\n            if (error) {\n                file.accepted = false;\n                this._errorProcessing([\n                    file\n                ], error); // Will set the file.status\n            } else {\n                file.accepted = true;\n                if (this.options.autoQueue) this.enqueueFile(file);\n                 // Will set .accepted = true\n            }\n            this._updateMaxFilesReachedClass();\n        });\n    }\n    // Wrapper for enqueueFile\n    enqueueFiles(files) {\n        for (let file of files)this.enqueueFile(file);\n        return null;\n    }\n    enqueueFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n            if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n            , 0); // Deferring the call\n        } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n    }\n    _enqueueThumbnail(file) {\n        if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n            this._thumbnailQueue.push(file);\n            return setTimeout(()=>this._processThumbnailQueue()\n            , 0); // Deferring the call\n        }\n    }\n    _processThumbnailQueue() {\n        if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n        this._processingThumbnail = true;\n        let file = this._thumbnailQueue.shift();\n        return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n            this.emit(\"thumbnail\", file, dataUrl);\n            this._processingThumbnail = false;\n            return this._processThumbnailQueue();\n        });\n    }\n    // Can be called by the user to remove a file\n    removeFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n        this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n        this.emit(\"removedfile\", file);\n        if (this.files.length === 0) return this.emit(\"reset\");\n    }\n    // Removes all files that aren't currently processed from the list\n    removeAllFiles(cancelIfNecessary) {\n        // Create a copy of files since removeFile() changes the @files array.\n        if (cancelIfNecessary == null) cancelIfNecessary = false;\n        for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n        return null;\n    }\n    // Resizes an image before it gets sent to the server. This function is the default behavior of\n    // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n    // the resized blob.\n    resizeImage(file, width, height, resizeMethod, callback) {\n        return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n            if (canvas == null) // The image has not been resized\n            return callback(file);\n            else {\n                let { resizeMimeType: resizeMimeType  } = this.options;\n                if (resizeMimeType == null) resizeMimeType = file.type;\n                let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n            }\n        });\n    }\n    createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n        let fileReader = new FileReader();\n        fileReader.onload = ()=>{\n            file.dataURL = fileReader.result;\n            // Don't bother creating a thumbnail for SVG images since they're vector\n            if (file.type === \"image/svg+xml\") {\n                if (callback != null) callback(fileReader.result);\n                return;\n            }\n            this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n        };\n        fileReader.readAsDataURL(file);\n    }\n    // `mockFile` needs to have these attributes:\n    //\n    //     { name: 'name', size: 12345, imageUrl: '' }\n    //\n    // `callback` will be invoked when the image has been downloaded and displayed.\n    // `crossOrigin` will be added to the `img` tag when accessing the file.\n    displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n        this.emit(\"addedfile\", mockFile);\n        this.emit(\"complete\", mockFile);\n        if (!resizeThumbnail) {\n            this.emit(\"thumbnail\", mockFile, imageUrl);\n            if (callback) callback();\n        } else {\n            let onDone = (thumbnail)=>{\n                this.emit(\"thumbnail\", mockFile, thumbnail);\n                if (callback) callback();\n            };\n            mockFile.dataURL = imageUrl;\n            this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n        }\n    }\n    createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n        // Not using `new Image` here because of a bug in latest Chrome versions.\n        // See https://github.com/enyo/dropzone/pull/226\n        let img = document.createElement(\"img\");\n        if (crossOrigin) img.crossOrigin = crossOrigin;\n        // fixOrientation is not needed anymore with browsers handling imageOrientation\n        fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n        img.onload = ()=>{\n            let loadExif = (callback)=>callback(1)\n            ;\n            if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                    return callback(EXIF.getTag(this, \"Orientation\"));\n                })\n            ;\n            return loadExif((orientation)=>{\n                file.width = img.width;\n                file.height = img.height;\n                let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                let canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = resizeInfo.trgWidth;\n                canvas.height = resizeInfo.trgHeight;\n                if (orientation > 4) {\n                    canvas.width = resizeInfo.trgHeight;\n                    canvas.height = resizeInfo.trgWidth;\n                }\n                switch(orientation){\n                    case 2:\n                        // horizontal flip\n                        ctx.translate(canvas.width, 0);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 3:\n                        // 180° rotate left\n                        ctx.translate(canvas.width, canvas.height);\n                        ctx.rotate(Math.PI);\n                        break;\n                    case 4:\n                        // vertical flip\n                        ctx.translate(0, canvas.height);\n                        ctx.scale(1, -1);\n                        break;\n                    case 5:\n                        // vertical flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.scale(1, -1);\n                        break;\n                    case 6:\n                        // 90° rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(0, -canvas.width);\n                        break;\n                    case 7:\n                        // horizontal flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(canvas.height, -canvas.width);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 8:\n                        // 90° rotate left\n                        ctx.rotate(-0.5 * Math.PI);\n                        ctx.translate(-canvas.height, 0);\n                        break;\n                }\n                // This is a bugfix for iOS' scaling bug.\n                $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                let thumbnail = canvas.toDataURL(\"image/png\");\n                if (callback != null) return callback(thumbnail, canvas);\n            });\n        };\n        if (callback != null) img.onerror = callback;\n        return img.src = file.dataURL;\n    }\n    // Goes through the queue and processes files if there aren't too many already.\n    processQueue() {\n        let { parallelUploads: parallelUploads  } = this.options;\n        let processingLength = this.getUploadingFiles().length;\n        let i = processingLength;\n        // There are already at least as many files uploading than should be\n        if (processingLength >= parallelUploads) return;\n        let queuedFiles = this.getQueuedFiles();\n        if (!(queuedFiles.length > 0)) return;\n        if (this.options.uploadMultiple) // The files should be uploaded in one request\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n        else while(i < parallelUploads){\n            if (!queuedFiles.length) return;\n             // Nothing left to process\n            this.processFile(queuedFiles.shift());\n            i++;\n        }\n    }\n    // Wrapper for `processFiles`\n    processFile(file) {\n        return this.processFiles([\n            file\n        ]);\n    }\n    // Loads the file, then calls finishedLoading()\n    processFiles(files) {\n        for (let file of files){\n            file.processing = true; // Backwards compatibility\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n            this.emit(\"processing\", file);\n        }\n        if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n        return this.uploadFiles(files);\n    }\n    _getFilesWithXhr(xhr) {\n        let files;\n        return files = this.files.filter((file)=>file.xhr === xhr\n        ).map((file)=>file\n        );\n    }\n    // Cancels the file upload and sets the status to CANCELED\n    // **if** the file is actually being uploaded.\n    // If it's still in the queue, the file is being removed from it and the status\n    // set to CANCELED.\n    cancelUpload(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n            let groupedFiles = this._getFilesWithXhr(file.xhr);\n            for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n            for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n        } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            this.emit(\"canceled\", file);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                file\n            ]);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    resolveOption(option, ...args) {\n        if (typeof option === \"function\") return option.apply(this, args);\n        return option;\n    }\n    uploadFile(file) {\n        return this.uploadFiles([\n            file\n        ]);\n    }\n    uploadFiles(files) {\n        this._transformFiles(files, (transformedFiles)=>{\n            if (this.options.chunking) {\n                // Chunking is not allowed to be used with `uploadMultiple` so we know\n                // that there is only __one__file.\n                let transformedFile = transformedFiles[0];\n                files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n            }\n            if (files[0].upload.chunked) {\n                // This file should be sent in chunks!\n                // If the chunking option is set, we **know** that there can only be **one** file, since\n                // uploadMultiple is not allowed with this option.\n                let file = files[0];\n                let transformedFile = transformedFiles[0];\n                let startedChunkCount = 0;\n                file.upload.chunks = [];\n                let handleNextChunk = ()=>{\n                    let chunkIndex = 0;\n                    // Find the next item in file.upload.chunks that is not defined yet.\n                    while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                    // This means, that all chunks have already been started.\n                    if (chunkIndex >= file.upload.totalChunkCount) return;\n                    startedChunkCount++;\n                    let start = chunkIndex * this.options.chunkSize;\n                    let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                    let dataBlock = {\n                        name: this._getParamName(0),\n                        data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                        filename: file.upload.filename,\n                        chunkIndex: chunkIndex\n                    };\n                    file.upload.chunks[chunkIndex] = {\n                        file: file,\n                        index: chunkIndex,\n                        dataBlock: dataBlock,\n                        status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                        progress: 0,\n                        retries: 0\n                    };\n                    this._uploadData(files, [\n                        dataBlock\n                    ]);\n                };\n                file.upload.finishedChunkUpload = (chunk, response)=>{\n                    let allFinished = true;\n                    chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                    // Clear the data from the chunk\n                    chunk.dataBlock = null;\n                    chunk.response = chunk.xhr.responseText;\n                    chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                    // Leaving this reference to xhr will cause memory leaks.\n                    chunk.xhr = null;\n                    for(let i = 0; i < file.upload.totalChunkCount; i++){\n                        if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                        if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                    }\n                    if (allFinished) this.options.chunksUploaded(file, ()=>{\n                        this._finished(files, response, null);\n                    });\n                };\n                if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                else handleNextChunk();\n            } else {\n                let dataBlocks = [];\n                for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                    name: this._getParamName(i),\n                    data: transformedFiles[i],\n                    filename: files[i].upload.filename\n                };\n                this._uploadData(files, dataBlocks);\n            }\n        });\n    }\n    /// Returns the right chunk for given file and xhr\n    _getChunk(file, xhr) {\n        for(let i = 0; i < file.upload.totalChunkCount; i++){\n            if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n        }\n    }\n    // This function actually uploads the file(s) to the server.\n    //\n    //  If dataBlocks contains the actual data to upload (meaning, that this could\n    // either be transformed files, or individual chunks for chunked upload) then\n    // they will be used for the actual data to upload.\n    _uploadData(files, dataBlocks) {\n        let xhr = new XMLHttpRequest();\n        // Put the xhr object in the file objects to be able to reference it later.\n        for (let file of files)file.xhr = xhr;\n        if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n        // later, and found with _getChunk.\n        files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n        let method = this.resolveOption(this.options.method, files, dataBlocks);\n        let url = this.resolveOption(this.options.url, files, dataBlocks);\n        xhr.open(method, url, true);\n        // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n        let timeout = this.resolveOption(this.options.timeout, files);\n        if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n        // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n        xhr.withCredentials = !!this.options.withCredentials;\n        xhr.onload = (e)=>{\n            this._finishedUploading(files, xhr, e);\n        };\n        xhr.ontimeout = ()=>{\n            this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n        };\n        xhr.onerror = ()=>{\n            this._handleUploadError(files, xhr);\n        };\n        // Some browsers do not have the .upload property\n        let progressObj = xhr.upload != null ? xhr.upload : xhr;\n        progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n        ;\n        let headers = this.options.defaultHeaders ? {\n            Accept: \"application/json\",\n            \"Cache-Control\": \"no-cache\",\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        } : {\n        };\n        if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n        if (this.options.headers) $ewBKy$justextend(headers, this.options.headers);\n        for(let headerName in headers){\n            let headerValue = headers[headerName];\n            if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n        }\n        if (this.options.binaryBody) {\n            // Since the file is going to be sent as binary body, it doesn't make\n            // any sense to generate `FormData` for it.\n            for (let file of files)this.emit(\"sending\", file, xhr);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n            this.submitRequest(xhr, null, files);\n        } else {\n            let formData = new FormData();\n            // Adding all @options parameters\n            if (this.options.params) {\n                let additionalParams = this.options.params;\n                if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                for(let key in additionalParams){\n                    let value = additionalParams[key];\n                    if (Array.isArray(value)) // The additional parameter contains an array,\n                    // so lets iterate over it to attach each value\n                    // individually.\n                    for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                    else formData.append(key, value);\n                }\n            }\n            // Let the user add additional data if necessary\n            for (let file of files)this.emit(\"sending\", file, xhr, formData);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n            this._addFormElementData(formData);\n            // Finally add the files\n            // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n            for(let i = 0; i < dataBlocks.length; i++){\n                let dataBlock = dataBlocks[i];\n                formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n            }\n            this.submitRequest(xhr, formData, files);\n        }\n    }\n    // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n    _transformFiles(files, done) {\n        let transformedFiles = [];\n        // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n        let doneCounter = 0;\n        for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n            transformedFiles[i] = transformedFile;\n            if (++doneCounter === files.length) done(transformedFiles);\n        });\n    }\n    // Takes care of adding other input elements of the form to the AJAX request\n    _addFormElementData(formData) {\n        // Take care of other input elements\n        if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n            let inputName = input.getAttribute(\"name\");\n            let inputType = input.getAttribute(\"type\");\n            if (inputType) inputType = inputType.toLowerCase();\n            // If the input doesn't have a name, we can't use it.\n            if (typeof inputName === \"undefined\" || inputName === null) continue;\n            if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                // Possibly multiple values\n                for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n            } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n        }\n    }\n    // Invoked when there is new progress information about given files.\n    // If e is not provided, it is assumed that the upload is finished.\n    _updateFilesUploadProgress(files, xhr, e) {\n        if (!files[0].upload.chunked) // Handle file uploads without chunking\n        for (let file of files){\n            if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n            if (e) {\n                file.upload.progress = 100 * e.loaded / e.total;\n                file.upload.total = e.total;\n                file.upload.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                file.upload.progress = 100;\n                file.upload.bytesSent = file.upload.total;\n            }\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n        else {\n            // Handle chunked file uploads\n            // Chunked upload is not compatible with uploading multiple files in one\n            // request, so we know there's only one file.\n            let file = files[0];\n            // Since this is a chunked upload, we need to update the appropriate chunk\n            // progress.\n            let chunk = this._getChunk(file, xhr);\n            if (e) {\n                chunk.progress = 100 * e.loaded / e.total;\n                chunk.total = e.total;\n                chunk.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                chunk.progress = 100;\n                chunk.bytesSent = chunk.total;\n            }\n            // Now tally the *file* upload progress from its individual chunks\n            file.upload.progress = 0;\n            file.upload.total = 0;\n            file.upload.bytesSent = 0;\n            for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                file.upload.progress += file.upload.chunks[i].progress;\n                file.upload.total += file.upload.chunks[i].total;\n                file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n            }\n            // Since the process is a percentage, we need to divide by the amount of\n            // chunks we've used.\n            file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n    }\n    _finishedUploading(files, xhr, e) {\n        let response;\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (xhr.readyState !== 4) return;\n        if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n            response = xhr.responseText;\n            if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                response = JSON.parse(response);\n            } catch (error) {\n                e = error;\n                response = \"Invalid JSON response from server.\";\n            }\n        }\n        this._updateFilesUploadProgress(files, xhr);\n        if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n        else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n        else this._finished(files, response, e);\n    }\n    _handleUploadError(files, xhr, response) {\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (files[0].upload.chunked && this.options.retryChunks) {\n            let chunk = this._getChunk(files[0], xhr);\n            if ((chunk.retries++) < this.options.retryChunksLimit) {\n                this._uploadData(files, [\n                    chunk.dataBlock\n                ]);\n                return;\n            } else console.warn(\"Retried this chunk too often. Giving up.\");\n        }\n        this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n    }\n    submitRequest(xhr, formData, files) {\n        if (xhr.readyState != 1) {\n            console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n            return;\n        }\n        if (this.options.binaryBody) {\n            if (files[0].upload.chunked) {\n                const chunk = this._getChunk(files[0], xhr);\n                xhr.send(chunk.dataBlock.data);\n            } else xhr.send(files[0]);\n        } else xhr.send(formData);\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _finished(files, responseText, e) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n            this.emit(\"success\", file, responseText, e);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"successmultiple\", files, responseText, e);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _errorProcessing(files, message, xhr) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n            this.emit(\"error\", file, message, xhr);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"errormultiple\", files, message, xhr);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    static uuidv4() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n            return v.toString(16);\n        });\n    }\n    constructor(el, options){\n        super();\n        let fallback, left;\n        this.element = el;\n        this.clickableElements = [];\n        this.listeners = [];\n        this.files = []; // All files\n        if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n        // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n        if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n        if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n        // Now add this dropzone to the instances.\n        $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n        // Put the dropzone inside the element itself.\n        this.element.dropzone = this;\n        let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n        };\n        this.options = $ewBKy$justextend(true, {\n        }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n        });\n        this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n        // If the browser failed, just call the fallback and leave\n        if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n        // @options.url = @element.getAttribute \"action\" unless @options.url?\n        if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n        if (!this.options.url) throw new Error(\"No URL provided.\");\n        if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n        if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n        if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n        // Backwards compatibility\n        if (this.options.acceptedMimeTypes) {\n            this.options.acceptedFiles = this.options.acceptedMimeTypes;\n            delete this.options.acceptedMimeTypes;\n        }\n        // Backwards compatibility\n        if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n        ;\n        if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n        if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n        fallback.parentNode.removeChild(fallback);\n        // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n        if (this.options.previewsContainer !== false) {\n            if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n            else this.previewsContainer = this.element;\n        }\n        if (this.options.clickable) {\n            if (this.options.clickable === true) this.clickableElements = [\n                this.element\n            ];\n            else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n        }\n        this.init();\n    }\n}\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n// This is a map of options for your different dropzones. Add configurations\n// to this object for your different dropzone elemens.\n//\n// Example:\n//\n//     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n//\n// And in html:\n//\n//     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n};\n// Returns the options for an element or undefined if none available.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n    // Get the `Dropzone.options.elementId` for this element if it exists\n    if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n    else return undefined;\n};\n// Holds a list of all dropzone instances\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n// Returns the dropzone for given element if any\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    return element.dropzone;\n};\n// Looks for all .dropzone elements and creates a dropzone for them\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n    let dropzones;\n    if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n    else {\n        dropzones = [];\n        // IE :(\n        let checkElements = (elements)=>(()=>{\n                let result = [];\n                for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                else result.push(undefined);\n                return result;\n            })()\n        ;\n        checkElements(document.getElementsByTagName(\"div\"));\n        checkElements(document.getElementsByTagName(\"form\"));\n    }\n    return (()=>{\n        let result = [];\n        for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n        if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n        else result.push(undefined);\n        return result;\n    })();\n};\n// Some browsers support drag and drog functionality, but not correctly.\n//\n// So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n// But what to do when browsers *theoretically* support an API, but crash\n// when using it.\n//\n// This is a list of regular expressions tested against navigator.userAgent\n//\n// ** It should only be used on browser that *do* support the API, but\n// incorrectly **\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n    // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n    /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n];\n// Checks if the browser is supported\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n    let capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n        if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n        else {\n            if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n            // configuration.\n            $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n            // The browser supports the API, but may be blocked.\n            for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                capableBrowser = false;\n                continue;\n            }\n        }\n    } else capableBrowser = false;\n    return capableBrowser;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    let byteString = atob(dataURI.split(\",\")[1]);\n    // separate out the mime component\n    let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n    // write the bytes of the string to an ArrayBuffer\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n    // write the ArrayBuffer to a blob\n    return new Blob([\n        ab\n    ], {\n        type: mimeString\n    });\n};\n// Returns an array without the rejected item\nconst $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n    ).map((item)=>item\n    )\n;\n// abc-def_ghi -> abcDefGhi\nconst $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n    )\n;\n// Creates an element from string\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n    let div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n};\n// Tests if given element is inside (or simply is) the container\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n    if (element === container) return true;\n     // Coffeescript doesn't support do/while loops\n    while(element = element.parentNode){\n        if (element === container) return true;\n    }\n    return false;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n    let element;\n    if (typeof el === \"string\") element = document.querySelector(el);\n    else if (el.nodeType != null) element = el;\n    if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n    return element;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n    let el, elements;\n    if (els instanceof Array) {\n        elements = [];\n        try {\n            for (el of els)elements.push(this.getElement(el, name));\n        } catch (e) {\n            elements = null;\n        }\n    } else if (typeof els === \"string\") {\n        elements = [];\n        for (el of document.querySelectorAll(els))elements.push(el);\n    } else if (els.nodeType != null) elements = [\n        els\n    ];\n    if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n    return elements;\n};\n// Asks the user the question and calls accepted or rejected accordingly\n//\n// The default implementation just uses `window.confirm` and then calls the\n// appropriate callback.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) return accepted();\n    else if (rejected != null) return rejected();\n};\n// Validates the mime type like this:\n//\n// https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n    if (!acceptedFiles) return true;\n     // If there are no accepted mime types, it's OK\n    acceptedFiles = acceptedFiles.split(\",\");\n    let mimeType = file.type;\n    let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (let validType of acceptedFiles){\n        validType = validType.trim();\n        if (validType.charAt(0) === \".\") {\n            if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n        } else if (/\\/\\*$/.test(validType)) {\n            // This is something like a image/* mime type\n            if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n        } else {\n            if (mimeType === validType) return true;\n        }\n    }\n    return false;\n};\n// Augment jQuery\nif (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n    return this.each(function() {\n        return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n    });\n};\n// Dropzone file status codes\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n// For backwards compatibility. Now, if a file is accepted, it's either queued\n// or uploading.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n/*\n\n Bugfix for iOS 6 and 7\n Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n */ // Detecting vertical squash in loaded image.\n// Fixes a bug which squash image vertically while drawing into canvas for some images.\n// This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\nlet $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n    let iw = img.naturalWidth;\n    let ih = img.naturalHeight;\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n    // search image edge pixel position in case it is squashed vertically.\n    let sy = 0;\n    let ey = ih;\n    let py = ih;\n    while(py > sy){\n        let alpha = data[(py - 1) * 4 + 3];\n        if (alpha === 0) ey = py;\n        else sy = py;\n        py = ey + sy >> 1;\n    }\n    let ratio = py / ih;\n    if (ratio === 0) return 1;\n    else return ratio;\n};\n// A replacement for context.drawImage\n// (args are for source and destination).\nvar $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n};\n// Based on MinifyJpeg\n// Source: http://www.perry.cz/files/ExifRestorer.js\n// http://elicon.blog57.fc2.com/blog-entry-206.html\nclass $3ed269f2f0fb224b$var$ExifRestore {\n    static initClass() {\n        this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    }\n    static encode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        while(true){\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n            enc1 = chr1 >> 2;\n            enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n            enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) enc3 = enc4 = 64;\n            else if (isNaN(chr3)) enc4 = 64;\n            output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return output;\n    }\n    static restore(origFileBase64, resizedFileBase64) {\n        if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n        let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n        let segments = this.slice2Segments(rawImage);\n        let image = this.exifManipulation(resizedFileBase64, segments);\n        return `data:image/jpeg;base64,${this.encode64(image)}`;\n    }\n    static exifManipulation(resizedFileBase64, segments) {\n        let exifArray = this.getExifArray(segments);\n        let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n        let aBuffer = new Uint8Array(newImageArray);\n        return aBuffer;\n    }\n    static getExifArray(segments) {\n        let seg = undefined;\n        let x = 0;\n        while(x < segments.length){\n            seg = segments[x];\n            if (seg[0] === 255 & seg[1] === 225) return seg;\n            x++;\n        }\n        return [];\n    }\n    static insertExif(resizedFileBase64, exifArray) {\n        let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n        let buf = this.decode64(imageData);\n        let separatePoint = buf.indexOf(255, 3);\n        let mae = buf.slice(0, separatePoint);\n        let ato = buf.slice(separatePoint);\n        let array = mae;\n        array = array.concat(exifArray);\n        array = array.concat(ato);\n        return array;\n    }\n    static slice2Segments(rawImageArray) {\n        let head = 0;\n        let segments = [];\n        while(true){\n            var length;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n            else {\n                length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                let endPoint = head + length + 2;\n                let seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length) break;\n        }\n        return segments;\n    }\n    static decode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        let buf = [];\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while(true){\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n            chr1 = enc1 << 2 | enc2 >> 4;\n            chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n            chr3 = (enc3 & 3) << 6 | enc4;\n            buf.push(chr1);\n            if (enc3 !== 64) buf.push(chr2);\n            if (enc4 !== 64) buf.push(chr3);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return buf;\n    }\n}\n$3ed269f2f0fb224b$var$ExifRestore.initClass();\n/*\n * contentloaded.js\n *\n * Author: Diego Perini (diego.perini at gmail.com)\n * Summary: cross-browser wrapper for DOMContentLoaded\n * Updated: 20101020\n * License: MIT\n * Version: 1.2\n *\n * URL:\n * http://javascript.nwbox.com/ContentLoaded/\n * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n */ // @win window reference\n// @fn function reference\nlet $3ed269f2f0fb224b$var$contentLoaded = function(win, fn) {\n    let done = false;\n    let top = true;\n    let doc = win.document;\n    let root = doc.documentElement;\n    let add = doc.addEventListener ? \"addEventListener\" : \"attachEvent\";\n    let rem = doc.addEventListener ? \"removeEventListener\" : \"detachEvent\";\n    let pre = doc.addEventListener ? \"\" : \"on\";\n    var init = function(e) {\n        if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") return;\n        (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n        if (!done && (done = true)) return fn.call(win, e.type || e);\n    };\n    var poll = function() {\n        try {\n            root.doScroll(\"left\");\n        } catch (e) {\n            setTimeout(poll, 50);\n            return;\n        }\n        return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n        if (doc.createEventObject && root.doScroll) {\n            try {\n                top = !win.frameElement;\n            } catch (error) {\n            }\n            if (top) poll();\n        }\n        doc[add](pre + \"DOMContentLoaded\", init, false);\n        doc[add](pre + \"readystatechange\", init, false);\n        return win[add](pre + \"load\", init, false);\n    }\n};\nfunction $3ed269f2f0fb224b$var$__guard__(value, transform) {\n    return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n}\nfunction $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n    if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n    else return undefined;\n}\n\n\nexport {$3ed269f2f0fb224b$export$2e2bcd8739ae039 as default, $3ed269f2f0fb224b$export$2e2bcd8739ae039 as Dropzone};\n//# sourceMappingURL=dropzone.mjs.map\n","import { Dropzone } from \"dropzone\";\r\n\r\nif (document.querySelector('div.form__dropzone')) {\r\n  const dropzone = new Dropzone(\"div.form__dropzone\", {\r\n    url: \"/file/post\",\r\n    createImageThumbnails: false,\r\n    dictDefaultMessage: 'Here'\r\n  });\r\n}\r\n","export const HOOKS = [\n    \"onChange\",\n    \"onClose\",\n    \"onDayCreate\",\n    \"onDestroy\",\n    \"onKeyDown\",\n    \"onMonthChange\",\n    \"onOpen\",\n    \"onParseConfig\",\n    \"onReady\",\n    \"onValueUpdate\",\n    \"onYearChange\",\n    \"onPreCalendarPosition\",\n];\nexport const defaults = {\n    _disable: [],\n    allowInput: false,\n    allowInvalidPreload: false,\n    altFormat: \"F j, Y\",\n    altInput: false,\n    altInputClass: \"form-control input\",\n    animate: typeof window === \"object\" &&\n        window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n    ariaDateFormat: \"F j, Y\",\n    autoFillDefaultTime: true,\n    clickOpens: true,\n    closeOnSelect: true,\n    conjunction: \", \",\n    dateFormat: \"Y-m-d\",\n    defaultHour: 12,\n    defaultMinute: 0,\n    defaultSeconds: 0,\n    disable: [],\n    disableMobile: false,\n    enableSeconds: false,\n    enableTime: false,\n    errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n    getWeek: (givenDate) => {\n        const date = new Date(givenDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n        var week1 = new Date(date.getFullYear(), 0, 4);\n        return (1 +\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                3 +\n                ((week1.getDay() + 6) % 7)) /\n                7));\n    },\n    hourIncrement: 1,\n    ignoredFocusElements: [],\n    inline: false,\n    locale: \"default\",\n    minuteIncrement: 5,\n    mode: \"single\",\n    monthSelectorType: \"dropdown\",\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n    noCalendar: false,\n    now: new Date(),\n    onChange: [],\n    onClose: [],\n    onDayCreate: [],\n    onDestroy: [],\n    onKeyDown: [],\n    onMonthChange: [],\n    onOpen: [],\n    onParseConfig: [],\n    onReady: [],\n    onValueUpdate: [],\n    onYearChange: [],\n    onPreCalendarPosition: [],\n    plugins: [],\n    position: \"auto\",\n    positionElement: undefined,\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n    shorthandCurrentMonth: false,\n    showMonths: 1,\n    static: false,\n    time_24hr: false,\n    weekNumbers: false,\n    wrap: false,\n};\n","export const english = {\n    weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ],\n    },\n    months: {\n        shorthand: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        longhand: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ],\n    },\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    firstDayOfWeek: 0,\n    ordinal: (nth) => {\n        const s = nth % 100;\n        if (s > 3 && s < 21)\n            return \"th\";\n        switch (s % 10) {\n            case 1:\n                return \"st\";\n            case 2:\n                return \"nd\";\n            case 3:\n                return \"rd\";\n            default:\n                return \"th\";\n        }\n    },\n    rangeSeparator: \" to \",\n    weekAbbreviation: \"Wk\",\n    scrollTitle: \"Scroll to increment\",\n    toggleTitle: \"Click to toggle\",\n    amPM: [\"AM\", \"PM\"],\n    yearAriaLabel: \"Year\",\n    monthAriaLabel: \"Month\",\n    hourAriaLabel: \"Hour\",\n    minuteAriaLabel: \"Minute\",\n    time_24hr: false,\n};\nexport default english;\n","export const pad = (number, length = 2) => `000${number}`.slice(length * -1);\nexport const int = (bool) => (bool === true ? 1 : 0);\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\nexport const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n","export function toggleClass(elem, className, bool) {\n    if (bool === true)\n        return elem.classList.add(className);\n    elem.classList.remove(className);\n}\nexport function createElement(tag, className, content) {\n    const e = window.document.createElement(tag);\n    className = className || \"\";\n    content = content || \"\";\n    e.className = className;\n    if (content !== undefined)\n        e.textContent = content;\n    return e;\n}\nexport function clearNode(node) {\n    while (node.firstChild)\n        node.removeChild(node.firstChild);\n}\nexport function findParent(node, condition) {\n    if (condition(node))\n        return node;\n    else if (node.parentNode)\n        return findParent(node.parentNode, condition);\n    return undefined;\n}\nexport function createNumberInput(inputClassName, opts) {\n    const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n    if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n        numInput.type = \"number\";\n    }\n    else {\n        numInput.type = \"text\";\n        numInput.pattern = \"\\\\d*\";\n    }\n    if (opts !== undefined)\n        for (const key in opts)\n            numInput.setAttribute(key, opts[key]);\n    wrapper.appendChild(numInput);\n    wrapper.appendChild(arrowUp);\n    wrapper.appendChild(arrowDown);\n    return wrapper;\n}\nexport function getEventTarget(event) {\n    try {\n        if (typeof event.composedPath === \"function\") {\n            const path = event.composedPath();\n            return path[0];\n        }\n        return event.target;\n    }\n    catch (error) {\n        return event.target;\n    }\n}\n","import { int, pad } from \"../utils\";\nconst doNothing = () => undefined;\nexport const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\nexport const revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    H: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: (dateObj, amPM, locale) => {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n    W: function (dateObj, weekNum, locale) {\n        const weekNumber = parseInt(weekNum);\n        const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: (dateObj, year) => {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: (_, ISODate) => new Date(ISODate),\n    d: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    i: (dateObj, minutes) => {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n    w: doNothing,\n    y: (dateObj, year) => {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nexport const tokenRegex = {\n    D: \"(\\\\w+)\",\n    F: \"(\\\\w+)\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"(\\\\w+)\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"(\\\\w+)\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nexport const formats = {\n    Z: (date) => date.toISOString(),\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return pad(formats.h(date, locale, options));\n    },\n    H: (date) => pad(date.getHours()),\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: (date) => pad(date.getSeconds()),\n    U: (date) => date.getTime() / 1000,\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: (date) => pad(date.getFullYear(), 4),\n    d: (date) => pad(date.getDate()),\n    h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n    i: (date) => pad(date.getMinutes()),\n    j: (date) => date.getDate(),\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: (date) => pad(date.getMonth() + 1),\n    n: (date) => date.getMonth() + 1,\n    s: (date) => date.getSeconds(),\n    u: (date) => date.getTime(),\n    w: (date) => date.getDay(),\n    y: (date) => String(date.getFullYear()).substring(2),\n};\n","import { tokenRegex, revFormat, formats, } from \"./formatting\";\nimport { defaults } from \"../types/options\";\nimport { english } from \"../l10n/default\";\nexport const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n    const locale = overrideLocale || l10n;\n    if (config.formatDate !== undefined && !isMobile) {\n        return config.formatDate(dateObj, frmt, locale);\n    }\n    return frmt\n        .split(\"\")\n        .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n        ? formats[c](dateObj, locale, config)\n        : c !== \"\\\\\"\n            ? c\n            : \"\")\n        .join(\"\");\n};\nexport const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n    if (date !== 0 && !date)\n        return undefined;\n    const locale = customLocale || l10n;\n    let parsedDate;\n    const dateOrig = date;\n    if (date instanceof Date)\n        parsedDate = new Date(date.getTime());\n    else if (typeof date !== \"string\" &&\n        date.toFixed !== undefined)\n        parsedDate = new Date(date);\n    else if (typeof date === \"string\") {\n        const format = givenFormat || (config || defaults).dateFormat;\n        const datestr = String(date).trim();\n        if (datestr === \"today\") {\n            parsedDate = new Date();\n            timeless = true;\n        }\n        else if (/Z$/.test(datestr) ||\n            /GMT$/.test(datestr))\n            parsedDate = new Date(date);\n        else if (config && config.parseDate)\n            parsedDate = config.parseDate(date, format);\n        else {\n            parsedDate =\n                !config || !config.noCalendar\n                    ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                    : new Date(new Date().setHours(0, 0, 0, 0));\n            let matched, ops = [];\n            for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                const token = format[i];\n                const isBackSlash = token === \"\\\\\";\n                const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                if (tokenRegex[token] && !escaped) {\n                    regexStr += tokenRegex[token];\n                    const match = new RegExp(regexStr).exec(date);\n                    if (match && (matched = true)) {\n                        ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                            fn: revFormat[token],\n                            val: match[++matchIndex],\n                        });\n                    }\n                }\n                else if (!isBackSlash)\n                    regexStr += \".\";\n                ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n            }\n            parsedDate = matched ? parsedDate : undefined;\n        }\n    }\n    if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n        config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n        return undefined;\n    }\n    if (timeless === true)\n        parsedDate.setHours(0, 0, 0, 0);\n    return parsedDate;\n};\nexport function compareDates(date1, date2, timeless = true) {\n    if (timeless !== false) {\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\n    }\n    return date1.getTime() - date2.getTime();\n}\nexport function compareTimes(date1, date2) {\n    return (3600 * (date1.getHours() - date2.getHours()) +\n        60 * (date1.getMinutes() - date2.getMinutes()) +\n        date1.getSeconds() -\n        date2.getSeconds());\n}\nexport const isBetween = (ts, ts1, ts2) => {\n    return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n};\nexport const duration = {\n    DAY: 86400000,\n};\nexport function getDefaultHours(config) {\n    let hours = config.defaultHour;\n    let minutes = config.defaultMinute;\n    let seconds = config.defaultSeconds;\n    if (config.minDate !== undefined) {\n        const minHour = config.minDate.getHours();\n        const minMinutes = config.minDate.getMinutes();\n        const minSeconds = config.minDate.getSeconds();\n        if (hours < minHour) {\n            hours = minHour;\n        }\n        if (hours === minHour && minutes < minMinutes) {\n            minutes = minMinutes;\n        }\n        if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n            seconds = config.minDate.getSeconds();\n    }\n    if (config.maxDate !== undefined) {\n        const maxHr = config.maxDate.getHours();\n        const maxMinutes = config.maxDate.getMinutes();\n        hours = Math.min(hours, maxHr);\n        if (hours === maxHr)\n            minutes = Math.min(maxMinutes, minutes);\n        if (hours === maxHr && minutes === maxMinutes)\n            seconds = config.maxDate.getSeconds();\n    }\n    return { hours, minutes, seconds };\n}\n","\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target, ...args) {\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        for (const source of args) {\n            if (source) {\n                Object.keys(source).forEach((key) => (target[key] = source[key]));\n            }\n        }\n        return target;\n    };\n}\n","import { defaults as defaultOptions, HOOKS, } from \"./types/options\";\nimport English from \"./l10n/default\";\nimport { arrayify, debounce, int, pad } from \"./utils\";\nimport { clearNode, createElement, createNumberInput, findParent, toggleClass, getEventTarget, } from \"./utils/dom\";\nimport { compareDates, createDateParser, createDateFormatter, duration, isBetween, getDefaultHours, } from \"./utils/dates\";\nimport { tokenRegex, monthToStr } from \"./utils/formatting\";\nimport \"./utils/polyfills\";\nconst DEBOUNCED_CHANGE_MS = 300;\nfunction FlatpickrInstance(element, instanceConfig) {\n    const self = {\n        config: Object.assign(Object.assign({}, defaultOptions), flatpickr.defaultConfig),\n        l10n: English,\n    };\n    self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    self._handlers = [];\n    self.pluginElements = [];\n    self.loadedPlugins = [];\n    self._bind = bind;\n    self._setHoursFromDate = setHoursFromDate;\n    self._positionCalendar = positionCalendar;\n    self.changeMonth = changeMonth;\n    self.changeYear = changeYear;\n    self.clear = clear;\n    self.close = close;\n    self._createElement = createElement;\n    self.destroy = destroy;\n    self.isEnabled = isEnabled;\n    self.jumpToDate = jumpToDate;\n    self.open = open;\n    self.redraw = redraw;\n    self.set = set;\n    self.setDate = setDate;\n    self.toggle = toggle;\n    function setupHelperFunctions() {\n        self.utils = {\n            getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                    return 29;\n                return self.l10n.daysInMonth[month];\n            },\n        };\n    }\n    function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile)\n            build();\n        bindEvents();\n        if (self.selectedDates.length || self.config.noCalendar) {\n            if (self.config.enableTime) {\n                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n            }\n            updateValue(false);\n        }\n        setCalendarWidth();\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (!self.isMobile && isSafari) {\n            positionCalendar();\n        }\n        triggerEvent(\"onReady\");\n    }\n    function bindToInstance(fn) {\n        return fn.bind(self);\n    }\n    function setCalendarWidth() {\n        const config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) {\n            return;\n        }\n        else if (config.noCalendar !== true) {\n            window.requestAnimationFrame(function () {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width =\n                        daysWidth +\n                            (self.weekWrapper !== undefined\n                                ? self.weekWrapper.offsetWidth\n                                : 0) +\n                            \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n    }\n    function updateTime(e) {\n        if (self.selectedDates.length === 0) {\n            const defaultDate = self.config.minDate === undefined ||\n                compareDates(new Date(), self.config.minDate) >= 0\n                ? new Date()\n                : new Date(self.config.minDate.getTime());\n            const defaults = getDefaultHours(self.config);\n            defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n            self.selectedDates = [defaultDate];\n            self.latestSelectedDateObj = defaultDate;\n        }\n        if (e !== undefined && e.type !== \"blur\") {\n            timeWrapper(e);\n        }\n        const prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n        if (self._input.value !== prevValue) {\n            self._debouncedChange();\n        }\n    }\n    function ampm2military(hour, amPM) {\n        return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n    }\n    function military2ampm(hour) {\n        switch (hour % 24) {\n            case 0:\n            case 12:\n                return 12;\n            default:\n                return hour % 12;\n        }\n    }\n    function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined)\n            return;\n        let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\n            : 0;\n        if (self.amPM !== undefined) {\n            hours = ampm2military(hours, self.amPM.textContent);\n        }\n        const limitMinHours = self.config.minTime !== undefined ||\n            (self.config.minDate &&\n                self.minDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                    0);\n        const limitMaxHours = self.config.maxTime !== undefined ||\n            (self.config.maxDate &&\n                self.maxDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                    0);\n        if (limitMaxHours) {\n            const maxTime = self.config.maxTime !== undefined\n                ? self.config.maxTime\n                : self.config.maxDate;\n            hours = Math.min(hours, maxTime.getHours());\n            if (hours === maxTime.getHours())\n                minutes = Math.min(minutes, maxTime.getMinutes());\n            if (minutes === maxTime.getMinutes())\n                seconds = Math.min(seconds, maxTime.getSeconds());\n        }\n        if (limitMinHours) {\n            const minTime = self.config.minTime !== undefined\n                ? self.config.minTime\n                : self.config.minDate;\n            hours = Math.max(hours, minTime.getHours());\n            if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                minutes = minTime.getMinutes();\n            if (minutes === minTime.getMinutes())\n                seconds = Math.max(seconds, minTime.getSeconds());\n        }\n        setHours(hours, minutes, seconds);\n    }\n    function setHoursFromDate(dateObj) {\n        const date = dateObj || self.latestSelectedDateObj;\n        if (date) {\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n    }\n    function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\n            return;\n        self.hourElement.value = pad(!self.config.time_24hr\n            ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n            : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined)\n            self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined)\n            self.secondElement.value = pad(seconds);\n    }\n    function onYearInput(event) {\n        const eventTarget = getEventTarget(event);\n        const year = parseInt(eventTarget.value) + (event.delta || 0);\n        if (year / 1000 > 1 ||\n            (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n            changeYear(year);\n        }\n    }\n    function bind(element, event, handler, options) {\n        if (event instanceof Array)\n            return event.forEach((ev) => bind(element, ev, handler, options));\n        if (element instanceof Array)\n            return element.forEach((el) => bind(el, event, handler, options));\n        element.addEventListener(event, handler, options);\n        self._handlers.push({\n            remove: () => element.removeEventListener(event, handler),\n        });\n    }\n    function triggerChange() {\n        triggerEvent(\"onChange\");\n    }\n    function bindEvents() {\n        if (self.config.wrap) {\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n            });\n        }\n        if (self.isMobile) {\n            setupMobile();\n            return;\n        }\n        const debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n            bind(self.daysContainer, \"mouseover\", (e) => {\n                if (self.config.mode === \"range\")\n                    onMouseOver(getEventTarget(e));\n            });\n        bind(window.document.body, \"keydown\", onKeyDown);\n        if (!self.config.inline && !self.config.static)\n            bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined)\n            bind(window.document, \"touchstart\", documentClick);\n        else\n            bind(window.document, \"mousedown\", documentClick);\n        bind(window.document, \"focus\", documentClick, { capture: true });\n        if (self.config.clickOpens === true) {\n            bind(self._input, \"focus\", self.open);\n            bind(self._input, \"click\", self.open);\n        }\n        if (self.daysContainer !== undefined) {\n            bind(self.monthNav, \"click\", onMonthNavClick);\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n            bind(self.daysContainer, \"click\", selectDate);\n        }\n        if (self.timeContainer !== undefined &&\n            self.minuteElement !== undefined &&\n            self.hourElement !== undefined) {\n            const selText = (e) => getEventTarget(e).select();\n            bind(self.timeContainer, [\"increment\"], updateTime);\n            bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n            bind(self.timeContainer, \"click\", timeIncrement);\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n            if (self.secondElement !== undefined)\n                bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n            if (self.amPM !== undefined) {\n                bind(self.amPM, \"click\", (e) => {\n                    updateTime(e);\n                    triggerChange();\n                });\n            }\n        }\n        if (self.config.allowInput) {\n            bind(self._input, \"blur\", onBlur);\n        }\n    }\n    function jumpToDate(jumpDate, triggerChange) {\n        const jumpTo = jumpDate !== undefined\n            ? self.parseDate(jumpDate)\n            : self.latestSelectedDateObj ||\n                (self.config.minDate && self.config.minDate > self.now\n                    ? self.config.minDate\n                    : self.config.maxDate && self.config.maxDate < self.now\n                        ? self.config.maxDate\n                        : self.now);\n        const oldYear = self.currentYear;\n        const oldMonth = self.currentMonth;\n        try {\n            if (jumpTo !== undefined) {\n                self.currentYear = jumpTo.getFullYear();\n                self.currentMonth = jumpTo.getMonth();\n            }\n        }\n        catch (e) {\n            e.message = \"Invalid date supplied: \" + jumpTo;\n            self.config.errorHandler(e);\n        }\n        if (triggerChange && self.currentYear !== oldYear) {\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        if (triggerChange &&\n            (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n            triggerEvent(\"onMonthChange\");\n        }\n        self.redraw();\n    }\n    function timeIncrement(e) {\n        const eventTarget = getEventTarget(e);\n        if (~eventTarget.className.indexOf(\"arrow\"))\n            incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n    }\n    function incrementNumInput(e, delta, inputElem) {\n        const target = e && getEventTarget(e);\n        const input = inputElem ||\n            (target && target.parentNode && target.parentNode.firstChild);\n        const event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n    }\n    function build() {\n        const fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n        if (!self.config.noCalendar) {\n            fragment.appendChild(buildMonthNav());\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n            if (self.config.weekNumbers) {\n                const { weekWrapper, weekNumbers } = buildWeeks();\n                self.innerContainer.appendChild(weekWrapper);\n                self.weekNumbers = weekNumbers;\n                self.weekWrapper = weekWrapper;\n            }\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n            self.rContainer.appendChild(buildWeekdays());\n            if (!self.daysContainer) {\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                self.daysContainer.tabIndex = -1;\n            }\n            buildDays();\n            self.rContainer.appendChild(self.daysContainer);\n            self.innerContainer.appendChild(self.rContainer);\n            fragment.appendChild(self.innerContainer);\n        }\n        if (self.config.enableTime) {\n            fragment.appendChild(buildTime());\n        }\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        const customAppend = self.config.appendTo !== undefined &&\n            self.config.appendTo.nodeType !== undefined;\n        if (self.config.inline || self.config.static) {\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n            if (self.config.inline) {\n                if (!customAppend && self.element.parentNode)\n                    self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                else if (self.config.appendTo !== undefined)\n                    self.config.appendTo.appendChild(self.calendarContainer);\n            }\n            if (self.config.static) {\n                const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                if (self.element.parentNode)\n                    self.element.parentNode.insertBefore(wrapper, self.element);\n                wrapper.appendChild(self.element);\n                if (self.altInput)\n                    wrapper.appendChild(self.altInput);\n                wrapper.appendChild(self.calendarContainer);\n            }\n        }\n        if (!self.config.static && !self.config.inline)\n            (self.config.appendTo !== undefined\n                ? self.config.appendTo\n                : window.document.body).appendChild(self.calendarContainer);\n    }\n    function createDay(className, date, dayNumber, i) {\n        const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n        if (className.indexOf(\"hidden\") === -1 &&\n            compareDates(date, self.now) === 0) {\n            self.todayDateElem = dayElement;\n            dayElement.classList.add(\"today\");\n            dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n        if (dateIsEnabled) {\n            dayElement.tabIndex = -1;\n            if (isDateSelected(date)) {\n                dayElement.classList.add(\"selected\");\n                self.selectedDateElem = dayElement;\n                if (self.config.mode === \"range\") {\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                        compareDates(date, self.selectedDates[0], true) === 0);\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                        compareDates(date, self.selectedDates[1], true) === 0);\n                    if (className === \"nextMonthDay\")\n                        dayElement.classList.add(\"inRange\");\n                }\n            }\n        }\n        else {\n            dayElement.classList.add(\"flatpickr-disabled\");\n        }\n        if (self.config.mode === \"range\") {\n            if (isDateInRange(date) && !isDateSelected(date))\n                dayElement.classList.add(\"inRange\");\n        }\n        if (self.weekNumbers &&\n            self.config.showMonths === 1 &&\n            className !== \"prevMonthDay\" &&\n            dayNumber % 7 === 1) {\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n    }\n    function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\")\n            onMouseOver(targetNode);\n    }\n    function getFirstAvailableDay(delta) {\n        const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        for (let m = startMonth; m != endMonth; m += delta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = delta > 0 ? 0 : month.children.length - 1;\n            const endIndex = delta > 0 ? month.children.length : -1;\n            for (let i = startIndex; i != endIndex; i += delta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                    return c;\n            }\n        }\n        return undefined;\n    }\n    function getNextAvailableDay(current, delta) {\n        const givenMonth = current.className.indexOf(\"Month\") === -1\n            ? current.dateObj.getMonth()\n            : self.currentMonth;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        const loopDelta = delta > 0 ? 1 : -1;\n        for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = givenMonth - self.currentMonth === m\n                ? current.$i + delta\n                : delta < 0\n                    ? month.children.length - 1\n                    : 0;\n            const numMonthDays = month.children.length;\n            for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 &&\n                    isEnabled(c.dateObj) &&\n                    Math.abs(current.$i - i) >= Math.abs(delta))\n                    return focusOnDayElem(c);\n            }\n        }\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n    }\n    function focusOnDay(current, offset) {\n        const dayFocused = isInView(document.activeElement || document.body);\n        const startElem = current !== undefined\n            ? current\n            : dayFocused\n                ? document.activeElement\n                : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                    ? self.selectedDateElem\n                    : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                        ? self.todayDateElem\n                        : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) {\n            self._input.focus();\n        }\n        else if (!dayFocused) {\n            focusOnDayElem(startElem);\n        }\n        else {\n            getNextAvailableDay(startElem, offset);\n        }\n    }\n    function buildMonthDays(year, month) {\n        const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n        const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n        for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n            (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n            days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n        const dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n    }\n    function buildDays() {\n        if (self.daysContainer === undefined) {\n            return;\n        }\n        clearNode(self.daysContainer);\n        if (self.weekNumbers)\n            clearNode(self.weekNumbers);\n        const frag = document.createDocumentFragment();\n        for (let i = 0; i < self.config.showMonths; i++) {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n            onMouseOver();\n        }\n    }\n    function buildMonthSwitch() {\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType !== \"dropdown\")\n            return;\n        const shouldBuildMonth = function (month) {\n            if (self.config.minDate !== undefined &&\n                self.currentYear === self.config.minDate.getFullYear() &&\n                month < self.config.minDate.getMonth()) {\n                return false;\n            }\n            return !(self.config.maxDate !== undefined &&\n                self.currentYear === self.config.maxDate.getFullYear() &&\n                month > self.config.maxDate.getMonth());\n        };\n        self.monthsDropdownContainer.tabIndex = -1;\n        self.monthsDropdownContainer.innerHTML = \"\";\n        for (let i = 0; i < 12; i++) {\n            if (!shouldBuildMonth(i))\n                continue;\n            const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n            month.value = new Date(self.currentYear, i).getMonth().toString();\n            month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n            month.tabIndex = -1;\n            if (self.currentMonth === i) {\n                month.selected = true;\n            }\n            self.monthsDropdownContainer.appendChild(month);\n        }\n    }\n    function buildMonth() {\n        const container = createElement(\"div\", \"flatpickr-month\");\n        const monthNavFragment = window.document.createDocumentFragment();\n        let monthElement;\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType === \"static\") {\n            monthElement = createElement(\"span\", \"cur-month\");\n        }\n        else {\n            self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n            self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n            bind(self.monthsDropdownContainer, \"change\", (e) => {\n                const target = getEventTarget(e);\n                const selectedMonth = parseInt(target.value, 10);\n                self.changeMonth(selectedMonth - self.currentMonth);\n                triggerEvent(\"onMonthChange\");\n            });\n            buildMonthSwitch();\n            monthElement = self.monthsDropdownContainer;\n        }\n        const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n        const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) {\n            yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n        }\n        if (self.config.maxDate) {\n            yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n            yearElement.disabled =\n                !!self.config.minDate &&\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n        const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n            container,\n            yearElement,\n            monthElement,\n        };\n    }\n    function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n        if (self.config.showMonths) {\n            self.yearElements = [];\n            self.monthElements = [];\n        }\n        for (let m = self.config.showMonths; m--;) {\n            const month = buildMonth();\n            self.yearElements.push(month.yearElement);\n            self.monthElements.push(month.monthElement);\n            self.monthNav.appendChild(month.container);\n        }\n        self.monthNav.appendChild(self.nextMonthNav);\n    }\n    function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n            get: () => self.__hidePrevMonthArrow,\n            set(bool) {\n                if (self.__hidePrevMonthArrow !== bool) {\n                    toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hidePrevMonthArrow = bool;\n                }\n            },\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n            get: () => self.__hideNextMonthArrow,\n            set(bool) {\n                if (self.__hideNextMonthArrow !== bool) {\n                    toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hideNextMonthArrow = bool;\n                }\n            },\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n    }\n    function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar)\n            self.calendarContainer.classList.add(\"noCalendar\");\n        const defaults = getDefaultHours(self.config);\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        const hourInput = createNumberInput(\"flatpickr-hour\", {\n            \"aria-label\": self.l10n.hourAriaLabel,\n        });\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        const minuteInput = createNumberInput(\"flatpickr-minute\", {\n            \"aria-label\": self.l10n.minuteAriaLabel,\n        });\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getHours()\n            : self.config.time_24hr\n                ? defaults.hours\n                : military2ampm(defaults.hours));\n        self.minuteElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getMinutes()\n            : defaults.minutes);\n        self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.hourElement.setAttribute(\"maxlength\", \"2\");\n        self.minuteElement.setAttribute(\"min\", \"0\");\n        self.minuteElement.setAttribute(\"max\", \"59\");\n        self.minuteElement.setAttribute(\"maxlength\", \"2\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr)\n            self.timeContainer.classList.add(\"time24hr\");\n        if (self.config.enableSeconds) {\n            self.timeContainer.classList.add(\"hasSeconds\");\n            const secondInput = createNumberInput(\"flatpickr-second\");\n            self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n            self.secondElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getSeconds()\n                : defaults.seconds);\n            self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n            self.secondElement.setAttribute(\"min\", \"0\");\n            self.secondElement.setAttribute(\"max\", \"59\");\n            self.secondElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n            self.timeContainer.appendChild(secondInput);\n        }\n        if (!self.config.time_24hr) {\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                ? self.hourElement.value\n                : self.config.defaultHour) > 11)]);\n            self.amPM.title = self.l10n.toggleTitle;\n            self.amPM.tabIndex = -1;\n            self.timeContainer.appendChild(self.amPM);\n        }\n        return self.timeContainer;\n    }\n    function buildWeekdays() {\n        if (!self.weekdayContainer)\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n        else\n            clearNode(self.weekdayContainer);\n        for (let i = self.config.showMonths; i--;) {\n            const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n            self.weekdayContainer.appendChild(container);\n        }\n        updateWeekdays();\n        return self.weekdayContainer;\n    }\n    function updateWeekdays() {\n        if (!self.weekdayContainer) {\n            return;\n        }\n        const firstDayOfWeek = self.l10n.firstDayOfWeek;\n        let weekdays = [...self.l10n.weekdays.shorthand];\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n            weekdays = [\n                ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                ...weekdays.splice(0, firstDayOfWeek),\n            ];\n        }\n        for (let i = self.config.showMonths; i--;) {\n            self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n        }\n    }\n    function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n            weekWrapper,\n            weekNumbers,\n        };\n    }\n    function changeMonth(value, isOffset = true) {\n        const delta = isOffset ? value : value - self.currentMonth;\n        if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n            (delta > 0 && self._hideNextMonthArrow === true))\n            return;\n        self.currentMonth += delta;\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\n            self.currentMonth = (self.currentMonth + 12) % 12;\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n    }\n    function clear(triggerChangeEvent = true, toInitial = true) {\n        self.input.value = \"\";\n        if (self.altInput !== undefined)\n            self.altInput.value = \"\";\n        if (self.mobileInput !== undefined)\n            self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        if (toInitial === true) {\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n        }\n        if (self.config.enableTime === true) {\n            const { hours, minutes, seconds } = getDefaultHours(self.config);\n            setHours(hours, minutes, seconds);\n        }\n        self.redraw();\n        if (triggerChangeEvent)\n            triggerEvent(\"onChange\");\n    }\n    function close() {\n        self.isOpen = false;\n        if (!self.isMobile) {\n            if (self.calendarContainer !== undefined) {\n                self.calendarContainer.classList.remove(\"open\");\n            }\n            if (self._input !== undefined) {\n                self._input.classList.remove(\"active\");\n            }\n        }\n        triggerEvent(\"onClose\");\n    }\n    function destroy() {\n        if (self.config !== undefined)\n            triggerEvent(\"onDestroy\");\n        for (let i = self._handlers.length; i--;) {\n            self._handlers[i].remove();\n        }\n        self._handlers = [];\n        if (self.mobileInput) {\n            if (self.mobileInput.parentNode)\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\n            self.mobileInput = undefined;\n        }\n        else if (self.calendarContainer && self.calendarContainer.parentNode) {\n            if (self.config.static && self.calendarContainer.parentNode) {\n                const wrapper = self.calendarContainer.parentNode;\n                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                if (wrapper.parentNode) {\n                    while (wrapper.firstChild)\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                }\n            }\n            else\n                self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n        if (self.altInput) {\n            self.input.type = \"text\";\n            if (self.altInput.parentNode)\n                self.altInput.parentNode.removeChild(self.altInput);\n            delete self.altInput;\n        }\n        if (self.input) {\n            self.input.type = self.input._type;\n            self.input.classList.remove(\"flatpickr-input\");\n            self.input.removeAttribute(\"readonly\");\n        }\n        [\n            \"_showTimeInput\",\n            \"latestSelectedDateObj\",\n            \"_hideNextMonthArrow\",\n            \"_hidePrevMonthArrow\",\n            \"__hideNextMonthArrow\",\n            \"__hidePrevMonthArrow\",\n            \"isMobile\",\n            \"isOpen\",\n            \"selectedDateElem\",\n            \"minDateHasTime\",\n            \"maxDateHasTime\",\n            \"days\",\n            \"daysContainer\",\n            \"_input\",\n            \"_positionElement\",\n            \"innerContainer\",\n            \"rContainer\",\n            \"monthNav\",\n            \"todayDateElem\",\n            \"calendarContainer\",\n            \"weekdayContainer\",\n            \"prevMonthNav\",\n            \"nextMonthNav\",\n            \"monthsDropdownContainer\",\n            \"currentMonthElement\",\n            \"currentYearElement\",\n            \"navigationCurrentMonth\",\n            \"selectedDateElem\",\n            \"config\",\n        ].forEach((k) => {\n            try {\n                delete self[k];\n            }\n            catch (_) { }\n        });\n    }\n    function isCalendarElem(elem) {\n        if (self.config.appendTo && self.config.appendTo.contains(elem))\n            return true;\n        return self.calendarContainer.contains(elem);\n    }\n    function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n            const eventTarget = getEventTarget(e);\n            const isCalendarElement = isCalendarElem(eventTarget);\n            const isInput = eventTarget === self.input ||\n                eventTarget === self.altInput ||\n                self.element.contains(eventTarget) ||\n                (e.path &&\n                    e.path.indexOf &&\n                    (~e.path.indexOf(self.input) ||\n                        ~e.path.indexOf(self.altInput)));\n            const lostFocus = e.type === \"blur\"\n                ? isInput &&\n                    e.relatedTarget &&\n                    !isCalendarElem(e.relatedTarget)\n                : !isInput &&\n                    !isCalendarElement &&\n                    !isCalendarElem(e.relatedTarget);\n            const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n            if (lostFocus && isIgnored) {\n                if (self.timeContainer !== undefined &&\n                    self.minuteElement !== undefined &&\n                    self.hourElement !== undefined &&\n                    self.input.value !== \"\" &&\n                    self.input.value !== undefined) {\n                    updateTime();\n                }\n                self.close();\n                if (self.config &&\n                    self.config.mode === \"range\" &&\n                    self.selectedDates.length === 1) {\n                    self.clear(false);\n                    self.redraw();\n                }\n            }\n        }\n    }\n    function changeYear(newYear) {\n        if (!newYear ||\n            (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n            (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n            return;\n        const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n        if (self.config.maxDate &&\n            self.currentYear === self.config.maxDate.getFullYear()) {\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        }\n        else if (self.config.minDate &&\n            self.currentYear === self.config.minDate.getFullYear()) {\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n        if (isNewYear) {\n            self.redraw();\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n    }\n    function isEnabled(date, timeless = true) {\n        var _a;\n        const dateToCheck = self.parseDate(date, undefined, timeless);\n        if ((self.config.minDate &&\n            dateToCheck &&\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n            (self.config.maxDate &&\n                dateToCheck &&\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n            return false;\n        if (!self.config.enable && self.config.disable.length === 0)\n            return true;\n        if (dateToCheck === undefined)\n            return false;\n        const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n        for (let i = 0, d; i < array.length; i++) {\n            d = array[i];\n            if (typeof d === \"function\" &&\n                d(dateToCheck))\n                return bool;\n            else if (d instanceof Date &&\n                dateToCheck !== undefined &&\n                d.getTime() === dateToCheck.getTime())\n                return bool;\n            else if (typeof d === \"string\") {\n                const parsed = self.parseDate(d, undefined, true);\n                return parsed && parsed.getTime() === dateToCheck.getTime()\n                    ? bool\n                    : !bool;\n            }\n            else if (typeof d === \"object\" &&\n                dateToCheck !== undefined &&\n                d.from &&\n                d.to &&\n                dateToCheck.getTime() >= d.from.getTime() &&\n                dateToCheck.getTime() <= d.to.getTime())\n                return bool;\n        }\n        return !bool;\n    }\n    function isInView(elem) {\n        if (self.daysContainer !== undefined)\n            return (elem.className.indexOf(\"hidden\") === -1 &&\n                elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                self.daysContainer.contains(elem));\n        return false;\n    }\n    function onBlur(e) {\n        const isInput = e.target === self._input;\n        if (isInput &&\n            (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n            !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n            self.setDate(self._input.value, true, e.target === self.altInput\n                ? self.config.altFormat\n                : self.config.dateFormat);\n        }\n    }\n    function onKeyDown(e) {\n        const eventTarget = getEventTarget(e);\n        const isInput = self.config.wrap\n            ? element.contains(eventTarget)\n            : eventTarget === self._input;\n        const allowInput = self.config.allowInput;\n        const allowKeydown = self.isOpen && (!allowInput || !isInput);\n        const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n        if (e.keyCode === 13 && isInput) {\n            if (allowInput) {\n                self.setDate(self._input.value, true, eventTarget === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n                return eventTarget.blur();\n            }\n            else {\n                self.open();\n            }\n        }\n        else if (isCalendarElem(eventTarget) ||\n            allowKeydown ||\n            allowInlineKeydown) {\n            const isTimeObj = !!self.timeContainer &&\n                self.timeContainer.contains(eventTarget);\n            switch (e.keyCode) {\n                case 13:\n                    if (isTimeObj) {\n                        e.preventDefault();\n                        updateTime();\n                        focusAndClose();\n                    }\n                    else\n                        selectDate(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    focusAndClose();\n                    break;\n                case 8:\n                case 46:\n                    if (isInput && !self.config.allowInput) {\n                        e.preventDefault();\n                        self.clear();\n                    }\n                    break;\n                case 37:\n                case 39:\n                    if (!isTimeObj && !isInput) {\n                        e.preventDefault();\n                        if (self.daysContainer !== undefined &&\n                            (allowInput === false ||\n                                (document.activeElement && isInView(document.activeElement)))) {\n                            const delta = e.keyCode === 39 ? 1 : -1;\n                            if (!e.ctrlKey)\n                                focusOnDay(undefined, delta);\n                            else {\n                                e.stopPropagation();\n                                changeMonth(delta);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                        }\n                    }\n                    else if (self.hourElement)\n                        self.hourElement.focus();\n                    break;\n                case 38:\n                case 40:\n                    e.preventDefault();\n                    const delta = e.keyCode === 40 ? 1 : -1;\n                    if ((self.daysContainer &&\n                        eventTarget.$i !== undefined) ||\n                        eventTarget === self.input ||\n                        eventTarget === self.altInput) {\n                        if (e.ctrlKey) {\n                            e.stopPropagation();\n                            changeYear(self.currentYear - delta);\n                            focusOnDay(getFirstAvailableDay(1), 0);\n                        }\n                        else if (!isTimeObj)\n                            focusOnDay(undefined, delta * 7);\n                    }\n                    else if (eventTarget === self.currentYearElement) {\n                        changeYear(self.currentYear - delta);\n                    }\n                    else if (self.config.enableTime) {\n                        if (!isTimeObj && self.hourElement)\n                            self.hourElement.focus();\n                        updateTime(e);\n                        self._debouncedChange();\n                    }\n                    break;\n                case 9:\n                    if (isTimeObj) {\n                        const elems = [\n                            self.hourElement,\n                            self.minuteElement,\n                            self.secondElement,\n                            self.amPM,\n                        ]\n                            .concat(self.pluginElements)\n                            .filter((x) => x);\n                        const i = elems.indexOf(eventTarget);\n                        if (i !== -1) {\n                            const target = elems[i + (e.shiftKey ? -1 : 1)];\n                            e.preventDefault();\n                            (target || self._input).focus();\n                        }\n                    }\n                    else if (!self.config.noCalendar &&\n                        self.daysContainer &&\n                        self.daysContainer.contains(eventTarget) &&\n                        e.shiftKey) {\n                        e.preventDefault();\n                        self._input.focus();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            switch (e.key) {\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n        }\n        if (isInput || isCalendarElem(eventTarget)) {\n            triggerEvent(\"onKeyDown\", e);\n        }\n    }\n    function onMouseOver(elem) {\n        if (self.selectedDates.length !== 1 ||\n            (elem &&\n                (!elem.classList.contains(\"flatpickr-day\") ||\n                    elem.classList.contains(\"flatpickr-disabled\"))))\n            return;\n        const hoverDate = elem\n            ? elem.dateObj.getTime()\n            : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n        let containsDisabled = false;\n        let minRange = 0, maxRange = 0;\n        for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n            if (!isEnabled(new Date(t), true)) {\n                containsDisabled =\n                    containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                if (t < initialDate && (!minRange || t > minRange))\n                    minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange))\n                    maxRange = t;\n            }\n        }\n        for (let m = 0; m < self.config.showMonths; m++) {\n            const month = self.daysContainer.children[m];\n            for (let i = 0, l = month.children.length; i < l; i++) {\n                const dayElem = month.children[i], date = dayElem.dateObj;\n                const timestamp = date.getTime();\n                const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                    (maxRange > 0 && timestamp > maxRange);\n                if (outOfRange) {\n                    dayElem.classList.add(\"notAllowed\");\n                    [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                        dayElem.classList.remove(c);\n                    });\n                    continue;\n                }\n                else if (containsDisabled && !outOfRange)\n                    continue;\n                [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                    dayElem.classList.remove(c);\n                });\n                if (elem !== undefined) {\n                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                        ? \"startRange\"\n                        : \"endRange\");\n                    if (initialDate < hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"startRange\");\n                    else if (initialDate > hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"endRange\");\n                    if (timestamp >= minRange &&\n                        (maxRange === 0 || timestamp <= maxRange) &&\n                        isBetween(timestamp, initialDate, hoverDate))\n                        dayElem.classList.add(\"inRange\");\n                }\n            }\n        }\n    }\n    function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline)\n            positionCalendar();\n    }\n    function open(e, positionElement = self._positionElement) {\n        if (self.isMobile === true) {\n            if (e) {\n                e.preventDefault();\n                const eventTarget = getEventTarget(e);\n                if (eventTarget) {\n                    eventTarget.blur();\n                }\n            }\n            if (self.mobileInput !== undefined) {\n                self.mobileInput.focus();\n                self.mobileInput.click();\n            }\n            triggerEvent(\"onOpen\");\n            return;\n        }\n        else if (self._input.disabled || self.config.inline) {\n            return;\n        }\n        const wasOpen = self.isOpen;\n        self.isOpen = true;\n        if (!wasOpen) {\n            self.calendarContainer.classList.add(\"open\");\n            self._input.classList.add(\"active\");\n            triggerEvent(\"onOpen\");\n            positionCalendar(positionElement);\n        }\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n            if (self.config.allowInput === false &&\n                (e === undefined ||\n                    !self.timeContainer.contains(e.relatedTarget))) {\n                setTimeout(() => self.hourElement.select(), 50);\n            }\n        }\n    }\n    function minMaxDateSetter(type) {\n        return (date) => {\n            const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n            const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n            if (dateObj !== undefined) {\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                    dateObj.getHours() > 0 ||\n                        dateObj.getMinutes() > 0 ||\n                        dateObj.getSeconds() > 0;\n            }\n            if (self.selectedDates) {\n                self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                if (!self.selectedDates.length && type === \"min\")\n                    setHoursFromDate(dateObj);\n                updateValue();\n            }\n            if (self.daysContainer) {\n                redraw();\n                if (dateObj !== undefined)\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\n                else\n                    self.currentYearElement.removeAttribute(type);\n                self.currentYearElement.disabled =\n                    !!inverseDateObj &&\n                        dateObj !== undefined &&\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\n            }\n        };\n    }\n    function parseConfig() {\n        const boolOpts = [\n            \"wrap\",\n            \"weekNumbers\",\n            \"allowInput\",\n            \"allowInvalidPreload\",\n            \"clickOpens\",\n            \"time_24hr\",\n            \"enableTime\",\n            \"noCalendar\",\n            \"altInput\",\n            \"shorthandCurrentMonth\",\n            \"inline\",\n            \"static\",\n            \"enableSeconds\",\n            \"disableMobile\",\n        ];\n        const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n        const formats = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n            get: () => self.config._enable,\n            set: (dates) => {\n                self.config._enable = parseDateRules(dates);\n            },\n        });\n        Object.defineProperty(self.config, \"disable\", {\n            get: () => self.config._disable,\n            set: (dates) => {\n                self.config._disable = parseDateRules(dates);\n            },\n        });\n        const timeMode = userConfig.mode === \"time\";\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n            const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaultOptions.dateFormat;\n            formats.dateFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                    : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n        if (userConfig.altInput &&\n            (userConfig.enableTime || timeMode) &&\n            !userConfig.altFormat) {\n            const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaultOptions.altFormat;\n            formats.altFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                    : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n        }\n        Object.defineProperty(self.config, \"minDate\", {\n            get: () => self.config._minDate,\n            set: minMaxDateSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n            get: () => self.config._maxDate,\n            set: minMaxDateSetter(\"max\"),\n        });\n        const minMaxTimeSetter = (type) => (val) => {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n        };\n        Object.defineProperty(self.config, \"minTime\", {\n            get: () => self.config._minTime,\n            set: minMaxTimeSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n            get: () => self.config._maxTime,\n            set: minMaxTimeSetter(\"max\"),\n        });\n        if (userConfig.mode === \"time\") {\n            self.config.noCalendar = true;\n            self.config.enableTime = true;\n        }\n        Object.assign(self.config, formats, userConfig);\n        for (let i = 0; i < boolOpts.length; i++)\n            self.config[boolOpts[i]] =\n                self.config[boolOpts[i]] === true ||\n                    self.config[boolOpts[i]] === \"true\";\n        HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n            self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile =\n            !self.config.disableMobile &&\n                !self.config.inline &&\n                self.config.mode === \"single\" &&\n                !self.config.disable.length &&\n                !self.config.enable &&\n                !self.config.weekNumbers &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        for (let i = 0; i < self.config.plugins.length; i++) {\n            const pluginConf = self.config.plugins[i](self) || {};\n            for (const key in pluginConf) {\n                if (HOOKS.indexOf(key) > -1) {\n                    self.config[key] = arrayify(pluginConf[key])\n                        .map(bindToInstance)\n                        .concat(self.config[key]);\n                }\n                else if (typeof userConfig[key] === \"undefined\")\n                    self.config[key] = pluginConf[key];\n            }\n        }\n        if (!userConfig.altInputClass) {\n            self.config.altInputClass =\n                getInputElem().className + \" \" + self.config.altInputClass;\n        }\n        triggerEvent(\"onParseConfig\");\n    }\n    function getInputElem() {\n        return self.config.wrap\n            ? element.querySelector(\"[data-input]\")\n            : element;\n    }\n    function setupLocale() {\n        if (typeof self.config.locale !== \"object\" &&\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n            self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n        self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n            ? self.config.locale\n            : self.config.locale !== \"default\"\n                ? flatpickr.l10ns[self.config.locale]\n                : undefined));\n        tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n        const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n        if (userConfig.time_24hr === undefined &&\n            flatpickr.defaultConfig.time_24hr === undefined) {\n            self.config.time_24hr = self.l10n.time_24hr;\n        }\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    }\n    function positionCalendar(customPositionElement) {\n        if (typeof self.config.position === \"function\") {\n            return void self.config.position(self, customPositionElement);\n        }\n        if (self.calendarContainer === undefined)\n            return;\n        triggerEvent(\"onPreCalendarPosition\");\n        const positionElement = customPositionElement || self._positionElement;\n        const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n            (configPosVertical !== \"below\" &&\n                distanceFromBottom < calendarHeight &&\n                inputBounds.top > calendarHeight);\n        const top = window.pageYOffset +\n            inputBounds.top +\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline)\n            return;\n        let left = window.pageXOffset + inputBounds.left;\n        let isCenter = false;\n        let isRight = false;\n        if (configPosHorizontal === \"center\") {\n            left -= (calendarWidth - inputBounds.width) / 2;\n            isCenter = true;\n        }\n        else if (configPosHorizontal === \"right\") {\n            left -= calendarWidth - inputBounds.width;\n            isRight = true;\n        }\n        toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n        toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n        toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n        const right = window.document.body.offsetWidth -\n            (window.pageXOffset + inputBounds.right);\n        const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static)\n            return;\n        self.calendarContainer.style.top = `${top}px`;\n        if (!rightMost) {\n            self.calendarContainer.style.left = `${left}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n        else if (!centerMost) {\n            self.calendarContainer.style.left = \"auto\";\n            self.calendarContainer.style.right = `${right}px`;\n        }\n        else {\n            const doc = getDocumentStyleSheet();\n            if (doc === undefined)\n                return;\n            const bodyWidth = window.document.body.offsetWidth;\n            const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n            const centerBefore = \".flatpickr-calendar.centerMost:before\";\n            const centerAfter = \".flatpickr-calendar.centerMost:after\";\n            const centerIndex = doc.cssRules.length;\n            const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n            toggleClass(self.calendarContainer, \"rightMost\", false);\n            toggleClass(self.calendarContainer, \"centerMost\", true);\n            doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n            self.calendarContainer.style.left = `${centerLeft}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n    }\n    function getDocumentStyleSheet() {\n        let editableSheet = null;\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i];\n            try {\n                sheet.cssRules;\n            }\n            catch (err) {\n                continue;\n            }\n            editableSheet = sheet;\n            break;\n        }\n        return editableSheet != null ? editableSheet : createStyleSheet();\n    }\n    function createStyleSheet() {\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        return style.sheet;\n    }\n    function redraw() {\n        if (self.config.noCalendar || self.isMobile)\n            return;\n        buildMonthSwitch();\n        updateNavigationCurrentMonth();\n        buildDays();\n    }\n    function focusAndClose() {\n        self._input.focus();\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.msMaxTouchPoints !== undefined) {\n            setTimeout(self.close, 0);\n        }\n        else {\n            self.close();\n        }\n    }\n    function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const isSelectable = (day) => day.classList &&\n            day.classList.contains(\"flatpickr-day\") &&\n            !day.classList.contains(\"flatpickr-disabled\") &&\n            !day.classList.contains(\"notAllowed\");\n        const t = findParent(getEventTarget(e), isSelectable);\n        if (t === undefined)\n            return;\n        const target = t;\n        const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n        const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n            selectedDate.getMonth() >\n                self.currentMonth + self.config.showMonths - 1) &&\n            self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\")\n            self.selectedDates = [selectedDate];\n        else if (self.config.mode === \"multiple\") {\n            const selectedIndex = isDateSelected(selectedDate);\n            if (selectedIndex)\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\n            else\n                self.selectedDates.push(selectedDate);\n        }\n        else if (self.config.mode === \"range\") {\n            if (self.selectedDates.length === 2) {\n                self.clear(false, false);\n            }\n            self.latestSelectedDateObj = selectedDate;\n            self.selectedDates.push(selectedDate);\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n        }\n        setHoursFromInputs();\n        if (shouldChangeMonth) {\n            const isNewYear = self.currentYear !== selectedDate.getFullYear();\n            self.currentYear = selectedDate.getFullYear();\n            self.currentMonth = selectedDate.getMonth();\n            if (isNewYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            triggerEvent(\"onMonthChange\");\n        }\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (!shouldChangeMonth &&\n            self.config.mode !== \"range\" &&\n            self.config.showMonths === 1)\n            focusOnDayElem(target);\n        else if (self.selectedDateElem !== undefined &&\n            self.hourElement === undefined) {\n            self.selectedDateElem && self.selectedDateElem.focus();\n        }\n        if (self.hourElement !== undefined)\n            self.hourElement !== undefined && self.hourElement.focus();\n        if (self.config.closeOnSelect) {\n            const single = self.config.mode === \"single\" && !self.config.enableTime;\n            const range = self.config.mode === \"range\" &&\n                self.selectedDates.length === 2 &&\n                !self.config.enableTime;\n            if (single || range) {\n                focusAndClose();\n            }\n        }\n        triggerChange();\n    }\n    const CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n        minDate: [jumpToDate],\n        maxDate: [jumpToDate],\n        clickOpens: [\n            () => {\n                if (self.config.clickOpens === true) {\n                    bind(self._input, \"focus\", self.open);\n                    bind(self._input, \"click\", self.open);\n                }\n                else {\n                    self._input.removeEventListener(\"focus\", self.open);\n                    self._input.removeEventListener(\"click\", self.open);\n                }\n            },\n        ],\n    };\n    function set(option, value) {\n        if (option !== null && typeof option === \"object\") {\n            Object.assign(self.config, option);\n            for (const key in option) {\n                if (CALLBACKS[key] !== undefined)\n                    CALLBACKS[key].forEach((x) => x());\n            }\n        }\n        else {\n            self.config[option] = value;\n            if (CALLBACKS[option] !== undefined)\n                CALLBACKS[option].forEach((x) => x());\n            else if (HOOKS.indexOf(option) > -1)\n                self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        updateValue(true);\n    }\n    function setSelectedDate(inputDate, format) {\n        let dates = [];\n        if (inputDate instanceof Array)\n            dates = inputDate.map((d) => self.parseDate(d, format));\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\n            dates = [self.parseDate(inputDate, format)];\n        else if (typeof inputDate === \"string\") {\n            switch (self.config.mode) {\n                case \"single\":\n                case \"time\":\n                    dates = [self.parseDate(inputDate, format)];\n                    break;\n                case \"multiple\":\n                    dates = inputDate\n                        .split(self.config.conjunction)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                case \"range\":\n                    dates = inputDate\n                        .split(self.l10n.rangeSeparator)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                default:\n                    break;\n            }\n        }\n        else\n            self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n        self.selectedDates = (self.config.allowInvalidPreload\n            ? dates\n            : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n        if (self.config.mode === \"range\")\n            self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n    }\n    function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n        if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n            return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.latestSelectedDateObj =\n            self.selectedDates[self.selectedDates.length - 1];\n        self.redraw();\n        jumpToDate(undefined, triggerChange);\n        setHoursFromDate();\n        if (self.selectedDates.length === 0) {\n            self.clear(false);\n        }\n        updateValue(triggerChange);\n        if (triggerChange)\n            triggerEvent(\"onChange\");\n    }\n    function parseDateRules(arr) {\n        return arr\n            .slice()\n            .map((rule) => {\n            if (typeof rule === \"string\" ||\n                typeof rule === \"number\" ||\n                rule instanceof Date) {\n                return self.parseDate(rule, undefined, true);\n            }\n            else if (rule &&\n                typeof rule === \"object\" &&\n                rule.from &&\n                rule.to)\n                return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined),\n                };\n            return rule;\n        })\n            .filter((x) => x);\n    }\n    function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        const preloadedDate = self.config.defaultDate ||\n            ((self.input.nodeName === \"INPUT\" ||\n                self.input.nodeName === \"TEXTAREA\") &&\n                self.input.placeholder &&\n                self.input.value === self.input.placeholder\n                ? null\n                : self.input.value);\n        if (preloadedDate)\n            setSelectedDate(preloadedDate, self.config.dateFormat);\n        self._initialDate =\n            self.selectedDates.length > 0\n                ? self.selectedDates[0]\n                : self.config.minDate &&\n                    self.config.minDate.getTime() > self.now.getTime()\n                    ? self.config.minDate\n                    : self.config.maxDate &&\n                        self.config.maxDate.getTime() < self.now.getTime()\n                        ? self.config.maxDate\n                        : self.now;\n        self.currentYear = self._initialDate.getFullYear();\n        self.currentMonth = self._initialDate.getMonth();\n        if (self.selectedDates.length > 0)\n            self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined)\n            self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined)\n            self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime =\n            !!self.config.minDate &&\n                (self.config.minDate.getHours() > 0 ||\n                    self.config.minDate.getMinutes() > 0 ||\n                    self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime =\n            !!self.config.maxDate &&\n                (self.config.maxDate.getHours() > 0 ||\n                    self.config.maxDate.getMinutes() > 0 ||\n                    self.config.maxDate.getSeconds() > 0);\n    }\n    function setupInputs() {\n        self.input = getInputElem();\n        if (!self.input) {\n            self.config.errorHandler(new Error(\"Invalid input element specified\"));\n            return;\n        }\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n        if (self.config.altInput) {\n            self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n            self._input = self.altInput;\n            self.altInput.placeholder = self.input.placeholder;\n            self.altInput.disabled = self.input.disabled;\n            self.altInput.required = self.input.required;\n            self.altInput.tabIndex = self.input.tabIndex;\n            self.altInput.type = \"text\";\n            self.input.setAttribute(\"type\", \"hidden\");\n            if (!self.config.static && self.input.parentNode)\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n        if (!self.config.allowInput)\n            self._input.setAttribute(\"readonly\", \"readonly\");\n        self._positionElement = self.config.positionElement || self._input;\n    }\n    function setupMobile() {\n        const inputType = self.config.enableTime\n            ? self.config.noCalendar\n                ? \"time\"\n                : \"datetime-local\"\n            : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr =\n            inputType === \"datetime-local\"\n                ? \"Y-m-d\\\\TH:i:S\"\n                : inputType === \"date\"\n                    ? \"Y-m-d\"\n                    : \"H:i:S\";\n        if (self.selectedDates.length > 0) {\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n        if (self.config.minDate)\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate)\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        if (self.input.getAttribute(\"step\"))\n            self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined)\n            self.altInput.type = \"hidden\";\n        try {\n            if (self.input.parentNode)\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        }\n        catch (_a) { }\n        bind(self.mobileInput, \"change\", (e) => {\n            self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n            triggerEvent(\"onChange\");\n            triggerEvent(\"onClose\");\n        });\n    }\n    function toggle(e) {\n        if (self.isOpen === true)\n            return self.close();\n        self.open(e);\n    }\n    function triggerEvent(event, data) {\n        if (self.config === undefined)\n            return;\n        const hooks = self.config[event];\n        if (hooks !== undefined && hooks.length > 0) {\n            for (let i = 0; hooks[i] && i < hooks.length; i++)\n                hooks[i](self.selectedDates, self.input.value, self, data);\n        }\n        if (event === \"onChange\") {\n            self.input.dispatchEvent(createEvent(\"change\"));\n            self.input.dispatchEvent(createEvent(\"input\"));\n        }\n    }\n    function createEvent(name) {\n        const e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n    }\n    function isDateSelected(date) {\n        for (let i = 0; i < self.selectedDates.length; i++) {\n            if (compareDates(self.selectedDates[i], date) === 0)\n                return \"\" + i;\n        }\n        return false;\n    }\n    function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n            return false;\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\n            compareDates(date, self.selectedDates[1]) <= 0);\n    }\n    function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\n            return;\n        self.yearElements.forEach((yearElement, i) => {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                self.monthElements[i].textContent =\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n            }\n            else {\n                self.monthsDropdownContainer.value = d.getMonth().toString();\n            }\n            yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow =\n            self.config.minDate !== undefined &&\n                (self.currentYear === self.config.minDate.getFullYear()\n                    ? self.currentMonth <= self.config.minDate.getMonth()\n                    : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow =\n            self.config.maxDate !== undefined &&\n                (self.currentYear === self.config.maxDate.getFullYear()\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                    : self.currentYear > self.config.maxDate.getFullYear());\n    }\n    function getDateStr(format) {\n        return self.selectedDates\n            .map((dObj) => self.formatDate(dObj, format))\n            .filter((d, i, arr) => self.config.mode !== \"range\" ||\n            self.config.enableTime ||\n            arr.indexOf(d) === i)\n            .join(self.config.mode !== \"range\"\n            ? self.config.conjunction\n            : self.l10n.rangeSeparator);\n    }\n    function updateValue(triggerChange = true) {\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n            self.mobileInput.value =\n                self.latestSelectedDateObj !== undefined\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                    : \"\";\n        }\n        self.input.value = getDateStr(self.config.dateFormat);\n        if (self.altInput !== undefined) {\n            self.altInput.value = getDateStr(self.config.altFormat);\n        }\n        if (triggerChange !== false)\n            triggerEvent(\"onValueUpdate\");\n    }\n    function onMonthNavClick(e) {\n        const eventTarget = getEventTarget(e);\n        const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n        const isNextMonth = self.nextMonthNav.contains(eventTarget);\n        if (isPrevMonth || isNextMonth) {\n            changeMonth(isPrevMonth ? -1 : 1);\n        }\n        else if (self.yearElements.indexOf(eventTarget) >= 0) {\n            eventTarget.select();\n        }\n        else if (eventTarget.classList.contains(\"arrowUp\")) {\n            self.changeYear(self.currentYear + 1);\n        }\n        else if (eventTarget.classList.contains(\"arrowDown\")) {\n            self.changeYear(self.currentYear - 1);\n        }\n    }\n    function timeWrapper(e) {\n        e.preventDefault();\n        const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            self.amPM.textContent =\n                self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n        const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n            (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n        let newValue = curValue + step * delta;\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n            const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n            if (newValue < min) {\n                newValue =\n                    max +\n                        newValue +\n                        int(!isHourElem) +\n                        (int(isHourElem) && int(!self.amPM));\n                if (isMinuteElem)\n                    incrementNumInput(undefined, -1, self.hourElement);\n            }\n            else if (newValue > max) {\n                newValue =\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                if (isMinuteElem)\n                    incrementNumInput(undefined, 1, self.hourElement);\n            }\n            if (self.amPM &&\n                isHourElem &&\n                (step === 1\n                    ? newValue + curValue === 23\n                    : Math.abs(newValue - curValue) > step)) {\n                self.amPM.textContent =\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            input.value = pad(newValue);\n        }\n    }\n    init();\n    return self;\n}\nfunction _flatpickr(nodeList, config) {\n    const nodes = Array.prototype.slice\n        .call(nodeList)\n        .filter((x) => x instanceof HTMLElement);\n    const instances = [];\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        try {\n            if (node.getAttribute(\"data-fp-omit\") !== null)\n                continue;\n            if (node._flatpickr !== undefined) {\n                node._flatpickr.destroy();\n                node._flatpickr = undefined;\n            }\n            node._flatpickr = FlatpickrInstance(node, config || {});\n            instances.push(node._flatpickr);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    return instances.length === 1 ? instances[0] : instances;\n}\nif (typeof HTMLElement !== \"undefined\" &&\n    typeof HTMLCollection !== \"undefined\" &&\n    typeof NodeList !== \"undefined\") {\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n    HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n    };\n}\nvar flatpickr = function (selector, config) {\n    if (typeof selector === \"string\") {\n        return _flatpickr(window.document.querySelectorAll(selector), config);\n    }\n    else if (selector instanceof Node) {\n        return _flatpickr([selector], config);\n    }\n    else {\n        return _flatpickr(selector, config);\n    }\n};\nflatpickr.defaultConfig = {};\nflatpickr.l10ns = {\n    en: Object.assign({}, English),\n    default: Object.assign({}, English),\n};\nflatpickr.localize = (l10n) => {\n    flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n};\nflatpickr.setDefaults = (config) => {\n    flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n};\nflatpickr.parseDate = createDateParser({});\nflatpickr.formatDate = createDateFormatter({});\nflatpickr.compareDates = compareDates;\nif (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n    jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n}\nDate.prototype.fp_incr = function (days) {\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n};\nif (typeof window !== \"undefined\") {\n    window.flatpickr = flatpickr;\n}\nexport default flatpickr;\n","import flatpickr from \"flatpickr\";\r\n\r\nflatpickr(\".form__date\", {\r\n    dateFormat: \"d-m-Y\",\r\n    disableMobile: \"true\",\r\n});\r\n\r\nflatpickr(\".form__time\", {\r\n  enableTime: true,\r\n  noCalendar: true,\r\n  dateFormat: \"H-i\",\r\n  disableMobile: \"true\",\r\n});\r\n","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\ncustom-select\nlightweight JS script for custom select creation.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Needs no dependencies.\nnv0.0.1\nhttps://github.com/custom-select/custom-select)\nnopyright (c) 2016 Gionatan Lombardi & Marco Nucara\nicense\nn\nexports.default = customSelect;\n\nrequire('custom-event-polyfill');\n\nvar defaultParams = {\n  containerClass: 'custom-select-container',\n  openerClass: 'custom-select-opener',\n  panelClass: 'custom-select-panel',\n  optionClass: 'custom-select-option',\n  optgroupClass: 'custom-select-optgroup',\n  isSelectedClass: 'is-selected',\n  hasFocusClass: 'has-focus',\n  isDisabledClass: 'is-disabled',\n  isOpenClass: 'is-open'\n};\n\nfunction builder(el, builderParams) {\n  var containerClass = 'customSelect';\n  var isOpen = false;\n  var uId = '';\n  var select = el;\n  var container = void 0;\n  var opener = void 0;\n  var focusedElement = void 0;\n  var selectedElement = void 0;\n  var panel = void 0;\n  var currLabel = void 0;\n\n  var resetSearchTimeout = void 0;\n  var searchKey = '';\n\n  //\n  // Inner Functions\n  //\n\n  // Sets the focused element with the neccessary classes substitutions\n  function setFocusedElement(cstOption) {\n    if (focusedElement) {\n      focusedElement.classList.remove(builderParams.hasFocusClass);\n    }\n    if (typeof cstOption !== 'undefined') {\n      focusedElement = cstOption;\n      focusedElement.classList.add(builderParams.hasFocusClass);\n      // Offset update: checks if the focused element is in the visible part of the panelClass\n      // if not dispatches a custom event\n      if (isOpen) {\n        if (cstOption.offsetTop < cstOption.offsetParent.scrollTop || cstOption.offsetTop > cstOption.offsetParent.scrollTop + cstOption.offsetParent.clientHeight - cstOption.clientHeight) {\n          cstOption.dispatchEvent(new CustomEvent('custom-select:focus-outside-panel', { bubbles: true }));\n        }\n      }\n    } else {\n      focusedElement = undefined;\n    }\n  }\n\n  // Reassigns the focused and selected custom option\n  // Updates the opener text\n  // IMPORTANT: the setSelectedElement function doesn't change the select value!\n  function setSelectedElement(cstOption) {\n    if (selectedElement) {\n      selectedElement.classList.remove(builderParams.isSelectedClass);\n      selectedElement.removeAttribute('id');\n      opener.removeAttribute('aria-activedescendant');\n    }\n    if (typeof cstOption !== 'undefined') {\n      cstOption.classList.add(builderParams.isSelectedClass);\n      cstOption.setAttribute('id', containerClass + '-' + uId + '-selectedOption');\n      opener.setAttribute('aria-activedescendant', containerClass + '-' + uId + '-selectedOption');\n      selectedElement = cstOption;\n      opener.children[0].textContent = selectedElement.customSelectOriginalOption.text;\n    } else {\n      selectedElement = undefined;\n      opener.children[0].textContent = '';\n    }\n    setFocusedElement(cstOption);\n  }\n\n  function setValue(value) {\n    // Gets the option with the provided value\n    var toSelect = select.querySelector('option[value=\\'' + value + '\\']');\n    // If no option has the provided value get the first\n    if (!toSelect) {\n      var _select$options = _slicedToArray(select.options, 1);\n\n      toSelect = _select$options[0];\n    }\n    // The option with the provided value becomes the selected one\n    // And changes the select current value\n    toSelect.selected = true;\n\n    setSelectedElement(select.options[select.selectedIndex].customSelectCstOption);\n  }\n\n  function moveFocuesedElement(direction) {\n    // Get all the .custom-select-options\n    // Get the index of the current focused one\n    var currentFocusedIndex = [].indexOf.call(select.options, focusedElement.customSelectOriginalOption);\n    // If the next or prev custom option exist\n    // Sets it as the new focused one\n    if (select.options[currentFocusedIndex + direction]) {\n      setFocusedElement(select.options[currentFocusedIndex + direction].customSelectCstOption);\n    }\n  }\n\n  // Open/Close function (toggle)\n  function open(bool) {\n    // Open\n    if (bool || typeof bool === 'undefined') {\n      // If present closes an opened instance of the plugin\n      // Only one at time can be open\n      var openedCustomSelect = document.querySelector('.' + containerClass + '.' + builderParams.isOpenClass);\n      if (openedCustomSelect) {\n        openedCustomSelect.customSelect.open = false;\n      }\n\n      // Opens only the clicked one\n      container.classList.add(builderParams.isOpenClass);\n\n      // aria-expanded update\n      container.classList.add(builderParams.isOpenClass);\n      opener.setAttribute('aria-expanded', 'true');\n\n      // Updates the scrollTop position of the panel in relation with the focused option\n      if (selectedElement) {\n        panel.scrollTop = selectedElement.offsetTop;\n      }\n\n      // Dispatches the custom event open\n      container.dispatchEvent(new CustomEvent('custom-select:open'));\n\n      // Sets the global state\n      isOpen = true;\n\n      // Close\n    } else {\n      // Removes the css classes\n      container.classList.remove(builderParams.isOpenClass);\n\n      // aria-expanded update\n      opener.setAttribute('aria-expanded', 'false');\n\n      // Sets the global state\n      isOpen = false;\n\n      // When closing the panel the focused custom option must be the selected one\n      setFocusedElement(selectedElement);\n\n      // Dispatches the custom event close\n      container.dispatchEvent(new CustomEvent('custom-select:close'));\n    }\n    return isOpen;\n  }\n\n  function clickEvent(e) {\n    // Opener click\n    if (e.target === opener || opener.contains(e.target)) {\n      if (isOpen) {\n        open(false);\n      } else {\n        open();\n      }\n      // Custom Option click\n    } else if (e.target.classList && e.target.classList.contains(builderParams.optionClass) && panel.contains(e.target)) {\n      setSelectedElement(e.target);\n      // Sets the corrisponding select's option to selected updating the select's value too\n      selectedElement.customSelectOriginalOption.selected = true;\n      open(false);\n      // Triggers the native change event of the select\n      select.dispatchEvent(new CustomEvent('change'));\n      // click on label or select (click on label corrispond to select click)\n    } else if (e.target === select) {\n      // if the original select is focusable (for any external reason) let the focus\n      // else trigger the focus on opener\n      if (opener !== document.activeElement && select !== document.activeElement) {\n        opener.focus();\n      }\n      // Click outside the container closes the panel\n    } else if (isOpen && !container.contains(e.target)) {\n      open(false);\n    }\n  }\n\n  function mouseoverEvent(e) {\n    // On mouse move over and options it bacames the focused one\n    if (e.target.classList && e.target.classList.contains(builderParams.optionClass)) {\n      setFocusedElement(e.target);\n    }\n  }\n\n  function keydownEvent(e) {\n    if (!isOpen) {\n      // On \"Arrow down\", \"Arrow up\" and \"Space\" keys opens the panel\n      if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32) {\n        open();\n      }\n    } else {\n      switch (e.keyCode) {\n        case 13:\n        case 32:\n          // On \"Enter\" or \"Space\" selects the focused element as the selected one\n          setSelectedElement(focusedElement);\n          // Sets the corrisponding select's option to selected updating the select's value too\n          selectedElement.customSelectOriginalOption.selected = true;\n          // Triggers the native change event of the select\n          select.dispatchEvent(new CustomEvent('change'));\n          open(false);\n          break;\n        case 27:\n          // On \"Escape\" closes the panel\n          open(false);\n          break;\n\n        case 38:\n          // On \"Arrow up\" set focus to the prev option if present\n          moveFocuesedElement(-1);\n          break;\n        case 40:\n          // On \"Arrow down\" set focus to the next option if present\n          moveFocuesedElement(+1);\n          break;\n        default:\n          // search in panel (autocomplete)\n          if (e.keyCode >= 48 && e.keyCode <= 90) {\n            // clear existing reset timeout\n            if (resetSearchTimeout) {\n              clearTimeout(resetSearchTimeout);\n            }\n\n            // reset timeout for empty search key\n            resetSearchTimeout = setTimeout(function () {\n              searchKey = '';\n            }, 1500);\n\n            // update search keyword appending the current key\n            searchKey += String.fromCharCode(e.keyCode);\n\n            // search the element\n            for (var i = 0, l = select.options.length; i < l; i++) {\n              // removed cause not supported by IE:\n              // if (options[i].text.startsWith(searchKey))\n              if (select.options[i].text.toUpperCase().substr(0, searchKey.length) === searchKey) {\n                setFocusedElement(select.options[i].customSelectCstOption);\n                break;\n              }\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  function changeEvent() {\n    var index = select.selectedIndex;\n    var element = index === -1 ? undefined : select.options[index].customSelectCstOption;\n\n    setSelectedElement(element);\n  }\n\n  // When the option is outside the visible part of the opened panel, updates the scrollTop position\n  // This is the default behaviour\n  // To block it the plugin user must\n  // add a \"custom-select:focus-outside-panel\" eventListener on the panel\n  // with useCapture set to true\n  // and stopPropagation\n  function scrollToFocused(e) {\n    var currPanel = e.currentTarget;\n    var currOption = e.target;\n    // Up\n    if (currOption.offsetTop < currPanel.scrollTop) {\n      currPanel.scrollTop = currOption.offsetTop;\n      // Down\n    } else {\n      currPanel.scrollTop = currOption.offsetTop + currOption.clientHeight - currPanel.clientHeight;\n    }\n  }\n\n  function addEvents() {\n    document.addEventListener('click', clickEvent);\n    panel.addEventListener('mouseover', mouseoverEvent);\n    panel.addEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.addEventListener('change', changeEvent);\n    container.addEventListener('keydown', keydownEvent);\n  }\n\n  function removeEvents() {\n    document.removeEventListener('click', clickEvent);\n    panel.removeEventListener('mouseover', mouseoverEvent);\n    panel.removeEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.removeEventListener('change', changeEvent);\n    container.removeEventListener('keydown', keydownEvent);\n  }\n\n  function disabled(bool) {\n    if (bool && !select.disabled) {\n      container.classList.add(builderParams.isDisabledClass);\n      select.disabled = true;\n      opener.removeAttribute('tabindex');\n      container.dispatchEvent(new CustomEvent('custom-select:disabled'));\n      removeEvents();\n    } else if (!bool && select.disabled) {\n      container.classList.remove(builderParams.isDisabledClass);\n      select.disabled = false;\n      opener.setAttribute('tabindex', '0');\n      container.dispatchEvent(new CustomEvent('custom-select:enabled'));\n      addEvents();\n    }\n  }\n\n  // Form a given select children DOM tree (options and optgroup),\n  // Creates the corresponding custom HTMLElements list (divs with different classes and attributes)\n  function parseMarkup(children) {\n    var nodeList = children;\n    var cstList = [];\n\n    if (typeof nodeList.length === 'undefined') {\n      throw new TypeError('Invalid Argument');\n    }\n\n    for (var i = 0, li = nodeList.length; i < li; i++) {\n      if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTGROUP') {\n        var cstOptgroup = document.createElement('div');\n        cstOptgroup.classList.add(builderParams.optgroupClass);\n        cstOptgroup.setAttribute('data-label', nodeList[i].label);\n\n        // IMPORTANT: Stores in a property of the created custom option group\n        // a hook to the the corrisponding select's option group\n        cstOptgroup.customSelectOriginalOptgroup = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option group\n        // a hook to the created custom option group\n        nodeList[i].customSelectCstOptgroup = cstOptgroup;\n\n        var subNodes = parseMarkup(nodeList[i].children);\n        for (var j = 0, lj = subNodes.length; j < lj; j++) {\n          cstOptgroup.appendChild(subNodes[j]);\n        }\n\n        cstList.push(cstOptgroup);\n      } else if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTION') {\n        var cstOption = document.createElement('div');\n        cstOption.classList.add(builderParams.optionClass);\n        cstOption.textContent = nodeList[i].text;\n        cstOption.setAttribute('data-value', nodeList[i].value);\n        cstOption.setAttribute('role', 'option');\n\n        // IMPORTANT: Stores in a property of the created custom option\n        // a hook to the the corrisponding select's option\n        cstOption.customSelectOriginalOption = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option\n        // a hook to the created custom option\n        nodeList[i].customSelectCstOption = cstOption;\n\n        // If the select's option is selected\n        if (nodeList[i].selected) {\n          setSelectedElement(cstOption);\n        }\n        cstList.push(cstOption);\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n    }\n    return cstList;\n  }\n\n  function _append(nodePar, appendIntoOriginal, targetPar) {\n    var target = void 0;\n    if (typeof targetPar === 'undefined' || targetPar === select) {\n      target = panel;\n    } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // If the node provided is a single HTMLElement it is stored in an array\n    var node = nodePar instanceof HTMLElement ? [nodePar] : nodePar;\n\n    // Injects the options|optgroup in the select\n    if (appendIntoOriginal) {\n      for (var i = 0, l = node.length; i < l; i++) {\n        if (target === panel) {\n          select.appendChild(node[i]);\n        } else {\n          target.customSelectOriginalOptgroup.appendChild(node[i]);\n        }\n      }\n    }\n\n    // The custom markup to append\n    var markupToInsert = parseMarkup(node);\n\n    // Injects the created DOM content in the panel\n    for (var _i = 0, _l = markupToInsert.length; _i < _l; _i++) {\n      target.appendChild(markupToInsert[_i]);\n    }\n\n    return node;\n  }\n\n  function _insertBefore(node, targetPar) {\n    var target = void 0;\n    if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTION' && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOption;\n    } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // The custom markup to append\n    var markupToInsert = parseMarkup(node.length ? node : [node]);\n\n    target.parentNode.insertBefore(markupToInsert[0], target);\n\n    // Injects the option or optgroup node in the original select and returns the injected node\n    return targetPar.parentNode.insertBefore(node.length ? node[0] : node, targetPar);\n  }\n\n  function remove(node) {\n    var cstNode = void 0;\n    if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTION' && select.contains(node)) {\n      cstNode = node.customSelectCstOption;\n    } else if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTGROUP' && select.contains(node)) {\n      cstNode = node.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n    cstNode.parentNode.removeChild(cstNode);\n    var removedNode = node.parentNode.removeChild(node);\n    changeEvent();\n    return removedNode;\n  }\n\n  function empty() {\n    var removed = [];\n    while (select.children.length) {\n      panel.removeChild(panel.children[0]);\n      removed.push(select.removeChild(select.children[0]));\n    }\n    setSelectedElement();\n    return removed;\n  }\n\n  function destroy() {\n    for (var i = 0, l = select.options.length; i < l; i++) {\n      delete select.options[i].customSelectCstOption;\n    }\n    var optGroup = select.getElementsByTagName('optgroup');\n    for (var _i2 = 0, _l2 = optGroup.length; _i2 < _l2; _i2++) {\n      delete optGroup.customSelectCstOptgroup;\n    }\n\n    removeEvents();\n\n    return container.parentNode.replaceChild(select, container);\n  }\n  //\n  // Custom Select DOM tree creation\n  //\n\n  // Creates the container/wrapper\n  container = document.createElement('div');\n  container.classList.add(builderParams.containerClass, containerClass);\n\n  // Creates the opener\n  opener = document.createElement('span');\n  opener.className = builderParams.openerClass;\n  opener.setAttribute('role', 'combobox');\n  opener.setAttribute('aria-autocomplete', 'list');\n  opener.setAttribute('aria-expanded', 'false');\n  opener.innerHTML = '<span>\\n   ' + (select.selectedIndex !== -1 ? select.options[select.selectedIndex].text : '') + '\\n   </span>';\n\n  // Creates the panel\n  // and injects the markup of the select inside\n  // with some tag and attributes replacement\n  panel = document.createElement('div');\n  // Create random id\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (var i = 0; i < 5; i++) {\n    uId += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  panel.id = containerClass + '-' + uId + '-panel';\n  panel.className = builderParams.panelClass;\n  panel.setAttribute('role', 'listbox');\n  opener.setAttribute('aria-owns', panel.id);\n\n  _append(select.children, false);\n\n  // Injects the container in the original DOM position of the select\n  container.appendChild(opener);\n  select.parentNode.replaceChild(container, select);\n  container.appendChild(select);\n  container.appendChild(panel);\n\n  // ARIA labelledby - label\n  if (document.querySelector('label[for=\"' + select.id + '\"]')) {\n    currLabel = document.querySelector('label[for=\"' + select.id + '\"]');\n  } else if (container.parentNode.tagName.toUpperCase() === 'LABEL') {\n    currLabel = container.parentNode;\n  }\n  if (typeof currLabel !== 'undefined') {\n    currLabel.setAttribute('id', containerClass + '-' + uId + '-label');\n    opener.setAttribute('aria-labelledby', containerClass + '-' + uId + '-label');\n  }\n\n  // Event Init\n  if (select.disabled) {\n    container.classList.add(builderParams.isDisabledClass);\n  } else {\n    opener.setAttribute('tabindex', '0');\n    select.setAttribute('tabindex', '-1');\n    addEvents();\n  }\n\n  // Stores the plugin public exposed methods and properties, directly in the container HTMLElement\n  container.customSelect = {\n    get pluginOptions() {\n      return builderParams;\n    },\n    get open() {\n      return isOpen;\n    },\n    set open(bool) {\n      open(bool);\n    },\n    get disabled() {\n      return select.disabled;\n    },\n    set disabled(bool) {\n      disabled(bool);\n    },\n    get value() {\n      return select.value;\n    },\n    set value(val) {\n      setValue(val);\n    },\n    append: function append(node, target) {\n      return _append(node, true, target);\n    },\n    insertBefore: function insertBefore(node, target) {\n      return _insertBefore(node, target);\n    },\n    remove: remove,\n    empty: empty,\n    destroy: destroy,\n    opener: opener,\n    select: select,\n    panel: panel,\n    container: container\n  };\n\n  // Stores the plugin directly in the original select\n  select.customSelect = container.customSelect;\n\n  // Returns the plugin instance, with the public exposed methods and properties\n  return container.customSelect;\n}\n\nfunction customSelect(element, customParams) {\n  // Overrides the default options with the ones provided by the user\n  var nodeList = [];\n  var selects = [];\n\n  return function init() {\n    // The plugin is called on a single HTMLElement\n    if (element && element instanceof HTMLElement && element.tagName.toUpperCase() === 'SELECT') {\n      nodeList.push(element);\n      // The plugin is called on a selector\n    } else if (element && typeof element === 'string') {\n      var elementsList = document.querySelectorAll(element);\n      for (var i = 0, l = elementsList.length; i < l; ++i) {\n        if (elementsList[i] instanceof HTMLElement && elementsList[i].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(elementsList[i]);\n        }\n      }\n      // The plugin is called on any HTMLElements list (NodeList, HTMLCollection, Array, etc.)\n    } else if (element && element.length) {\n      for (var _i3 = 0, _l3 = element.length; _i3 < _l3; ++_i3) {\n        if (element[_i3] instanceof HTMLElement && element[_i3].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(element[_i3]);\n        }\n      }\n    }\n\n    // Launches the plugin over every HTMLElement\n    // And stores every plugin instance\n    for (var _i4 = 0, _l4 = nodeList.length; _i4 < _l4; ++_i4) {\n      selects.push(builder(nodeList[_i4], _extends({}, defaultParams, customParams)));\n    }\n\n    // Returns all plugin instances\n    return selects;\n  }();\n}\n\n//# sourceMappingURL=index.js.map","import customSelect from 'custom-select';\n\ncustomSelect('select');\n","/*\r\n  @ Add body class if:\r\n  - scroll started\r\n  - scrolled to bottom\r\n*/\r\n\r\nconst START_OFFSET = 34;\r\nconst START_CLASS = \"is-scrolled\";\r\nconst BOTTOM_OFFSET = 10;\r\nconst BOTTOM_CLASS = \"is-scrolled-bottom\";\r\n\r\nconst UP_DOWN_CLASSES = false;\r\nconst UP_CLASS = \"scrolling-up\";\r\nconst DOWN_CLASS = \"scrolling-down\";\r\n\r\nclass ScrollClass {\r\n  constructor() {\r\n    document.addEventListener(\"scroll\", this.scrollHandler, {passive: true});\r\n  }\r\n\r\n  scrollHandler = () => {\r\n    const top = document.documentElement.scrollTop;\r\n\r\n    document.body.classList.toggle(START_CLASS, top >= START_OFFSET);\r\n    document.body.classList.toggle(\r\n      BOTTOM_CLASS,\r\n      window.innerHeight + top >= document.body.offsetHeight - BOTTOM_OFFSET\r\n    );\r\n\r\n    if (UP_DOWN_CLASSES) {\r\n      if(this.oldScroll > top){\r\n        document.body.classList.add(UP_CLASS)\r\n        document.body.classList.remove(DOWN_CLASS);\r\n      } else {\r\n        document.body.classList.add(DOWN_CLASS)\r\n        document.body.classList.remove(UP_CLASS);\r\n      }\r\n    }\r\n\r\n    this.oldScroll = top;\r\n\r\n  };\r\n}\r\n\r\nnew ScrollClass();\r\n"]}