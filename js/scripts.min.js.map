{"version":3,"sources":["scripts.js","src/scripts/modules/Animate.js","node_modules/@splidejs/splide/dist/js/splide.esm.js","src/scripts/modules/Carousel.js","src/scripts/modules/ToggleNav.js","src/scripts/modules/Lightbox.js","node_modules/simplelightbox/dist/simple-lightbox.modules.js","node_modules/sticky-sidebar-v2/src/sticky-sidebar.js","src/scripts/modules/Sticky.js","node_modules/just-extend/index.esm.js","node_modules/dropzone/dist/dropzone.mjs","src/scripts/modules/Dropzone.js","node_modules/flatpickr/dist/esm/types/options.js","node_modules/flatpickr/dist/esm/l10n/default.js","node_modules/flatpickr/dist/esm/utils/index.js","node_modules/flatpickr/dist/esm/utils/dom.js","node_modules/flatpickr/dist/esm/utils/formatting.js","node_modules/flatpickr/dist/esm/utils/dates.js","node_modules/flatpickr/dist/esm/utils/polyfills.js","node_modules/flatpickr/dist/esm/index.js","src/scripts/modules/Flatpicker.js","node_modules/custom-event-polyfill/custom-event-polyfill.js","node_modules/custom-select/build/index.js","src/scripts/modules/CustomSelect.js","src/scripts/modules/ScrollClass.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","ISMOBILE","window","matchMedia","matches","VISIBLE_CLASS","Animate","_this","this","entries","map","entry","section","delay","getDelay","sectionBodyClass","getAttribute","isIntersecting","classList","add","bodyClass","setTimeout","includes","parseInt","htmlclass","type","document","body","remove","sections","querySelectorAll","THRESHOLD","LOAD_THRESHOLD","forEach","el","BoundingClientRect","getBoundingClientRect","height","innerHeight","loadObserver","IntersectionObserver","observeCallback","threshold","observe","disconnect","observerThreshold","PROJECT_CODE","DATA_ATTRIBUTE","STATES","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","empty","array","isObject","subject","isNull","isArray","Array","isString","isUndefined","isHTMLElement","HTMLElement","toArray","values","iteratee","indexOf","push","items","arrayProto","prototype","slice","arrayLike","start","end","call","toggleClass","elm","classes","name","addClass","split","append","parent","children","appendChild","bind","before","nodes","ref","node","parentNode","insertBefore","selector","filter","child","firstElementChild","forOwn","object","right","keys","reverse","assign","arguments","source","merge","removeAttribute","attrs","attr","setAttribute","value2","String","create","tag","createElement","style","prop","getComputedStyle","style2","display","display2","hasClass","className","contains","rect","removeChild","parseHtml","html","DOMParser","parseFromString","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","removeClass","unit","assert","condition","message","Error","nextTick","callback","noop","raf","func","requestAnimationFrame","min","max","floor","ceil","abs","Math","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","x","y","sign","format","string","replacements","replacement","replace","pad","ids","EVENT_MOUNTED","EVENT_READY","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_REPOSITIONED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","event","listeners","unbind","targets","events","forEachEvent","event2","listener","removeEventListener","destroy","data","offBy","on","priority","off","emit","options","addEventListener","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","id","rate","paused","count","update","elapsed","pause","cancel","cancelAnimationFrame","resume","rewind","isPaused","Throttle","duration","apply","TTB","ORIENTATION_MAP","marginRight","autoWidth","fixedWidth","paddingLeft","paddingRight","width","left","X","Y","ArrowLeft","ArrowRight","CLASS_SLIDE","CLASS_CLONE","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","STATUS_CLASSES","CLASSES","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","ROLE","ARIA_CONTROLS","ARIA_CURRENT","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","ARIA_ORIENTATION","ALL_ATTRIBUTES","SLIDE","LOOP","FADE","Slide$1","index","slideIndex","destroyEvents","Components","root","isNavigation","updateOnMove","resolve","Direction","styles","isClone","container","focusableNodes","destroyed","onMove","dest","updateActivity","currIndex","isActive","updateVisibility","is","trackRect","Elements","track","slideRect","isVisible","active","visible","ariaHidden","slideFocus","mount","idx","label","i18n","slideX","controls","splides","splide","join","init","useContainer","isWithin","from","distance","diff","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","IE_ARROW_KEYS","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","ComponentConstructors","freeze","__proto__","Options","Components2","throttledObserve","initialOptions","points","currPoint","completely","item","predicate","item2","point","newOptions","breakpoints","state","onMatch","setup","JSON","parse","isMin","mediaQuery","sort","n","m","axisOnly","direction","orient","elements","slides","slider","list","autoplay","find","bar","play","collect","prefix","identify","getClasses","refresh","drag","DEFAULT_EVENT_PRIORITY","Slides","Slides2","register","forEach$1","Slide2","get","excludeClones","matcher","Slide1","getIn","Controller","toIndex","hasFocus","perPage","getAt","images","img","observeImages","getLength","isEnough","Layout","vertical","rootRect","cssPadding","resize","newRect","cssHeight","cssTrackHeight","gap","cssSlideSize","fixedHeight","autoHeight","padding","heightRatio","totalSize","withoutGap","Slide","getGap","parseFloat","listSize","slideSize","sliderSize","getPadding","Clones","clones","cloneCount","computeCloneCount","isHead","cloneNode","cloneDeep","generate","clones2","fixedSize","div","measure","flickMaxPages","Move","waiting","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","transform","getPosition","exceededMin","exceededLimit","exceededMax","shift","loop","backwards","excess","getLimit","size","trimming","focus","offset","trimSpace","trim","getEnd","move","set","looping","waitForTransition","Transition","go","minDistance","Infinity","isLoop","isSlide","slideCount","perMove","prevIndex","scroll","destination","useIndex","snap","toDest","setIndex","getNext","getAdjacent","getPrev","computeDestIndex","epsilon","incremental","toPage","closest","control","allowSameIndex","indicator","match","useScroll","speed","getIndex","Arrows","created","wrapper","createArrow","listen","prev2","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","Autoplay","hovered","focused","initButton","forPause","button","resetProgress","manual","autoToggle","pauseOnHover","pauseOnFocus","Cover","cover","src","toggle","scrollCallback","suppressConstraint","friction","clear","onScrolled","t","easingFunc","pow","easing","Drag","listenerOptions","passive","capture","basePosition","baseEvent","prevBaseEvent","lastEvent","isFree","dragging","clickPrevented","hasExceeded","disable","onPointerDown","noDrag","isTouch","isTouchEvent","onPointerMove","onPointerUp","save","cancelable","coordOf","constrain","expired","timeOf","exceeded","dragMinThreshold","thresholds","mouse","touch","isSliderDirection","velocity","base","diffCoord","diffTime","isFlick","computeVelocity","flickPower","computeDestination","onClick","orthogonal","touches","timeStamp","TouchEvent","isDragging","Keyboard","keyboard","onKeydown","normalizedKey","LazyLoad","isSequential","lazyLoad","preloadPages","_Slide","load","_img","error","_spinner","loadNext","onLoad","srcset","parentElement","Pagination","li","class","text","pageX","createPagination","preventScroll","curr","Sync","navigate","processed","concat","instances","index2","sync","Wheel","onWheel","deltaY","wheel","DEFAULTS","Fade","done","endCallback","transition","rewindSpeed","getSpeed","_Splide","[object Object]","handlers","namespace","eventHandlers","handler","_key","_namespace","eventNS","fragments","_event","_callback","_priority","handler1","handler2","EventBus","initialState","states","State","_options","_Extensions","defaults","Extensions","_Components","_Transition","Component","component","Splide","500","767","1024","1400","320","ToggleNav","toggleNav","protoProps","staticProps","commonjsGlobal","globalThis","global","self","unwrapExports","__esModule","hasOwnProperty","createCommonjsModule","fn","module","exports","_typeof","Symbol","iterator","constructor","_createForOfIteratorHelper","o","allowArrayLike","it","minLen","_arrayLikeToArray","toString","test","_unsupportedIterableToArray","F","s","_e","f","err","normalCompletion","didErr","step","_e2","arr","len","arr2","SimpleLightbox","sourceAttr","overlay","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","rel","docClose","swipeTolerance","widthRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","scrollZoom","scrollZoomFactor","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","relatedElements","transitionPrefix","calculateTransitionPrefix","transitionCapable","initialLocationHash","hash","getRelated","imgArr","element","createDomNodes","domNodes","closeButton","navigation","eventNamespace","isValidLink","currentTarget","isAnimating","initialImageIndex","openImage","isOpen","throttle","controlCoordinates","currentImage","loadImage","addEvents","supportsPassive","opts","dataset","opacityTarget","innerHTML","counter","caption","image","inThrottle","RegExp","documentElement","scrollbarWidth","fixedElements","fullWindowWidth","innerWidth","documentElementRect","clientWidth","isAppleDevice","scrollDiv","offsetWidth","originalPaddingRight","actualPadding","calculatedPadding","_this2","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","fadeOut","toggleScrollbar","minMax","location","substring","_this3","nextImage","Image","prevImage","loadedImages","_this4","slideDirection","newIndex","show","adjustImage","preload","_this5","tmpImage","windowWidth","windowHeight","scale","translateX","translateY","zoomPanElement","dirIsDefined","alert","updateURL","captionContainer","captionText","imageWidth","imageHeight","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","hide","setCaption","_this6","hashchangeHandler","getElementsByTagName","tagName","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","pageY","opacity","setZoomData","clientX","clientY","sqrt","isTouchDevice","possibleDir","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","newHash","newURL","href","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","clearTimeout","historyUpdateTimeout","updateHash","_this7","pos","_this8","targetURL","_this9","wrap","_step","_iterator","namespaces","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_step5","_this10","_iterator5","isFadeIn","fade","currentOpacity","_step6","_iterator6","_step7","_iterator7","_step8","_this11","_iterator8","_step10","_iterator10","_step9","_iterator9","_step11","_iterator11","initialDisplay","_step12","_iterator12","input","_step13","_iterator13","fullyNamespacedEvents","_step14","_iterator14","_step15","_iterator15","_step16","_iterator16","elem","jQuery","_default","StickySidebar","EVENT_KEY","topSpacing","bottomSpacing","containerSelector","scrollContainer","innerWrapperSelector","stickyClass","minWidth","sidebar","extend","sidebarInner","affixedType","support","transform3d","_initialized","_reStyle","_breakpoint","dimensions","maxTranslateY","lastTopSpacing","lastBottomSpacing","sidebarHeight","sidebarWidth","containerTop","viewportHeight","viewportTop","lastViewportTop","method","initialize","_setSupportFeatures","firstChild","containers","_widthBreakpoint","calcDimensions","stickyPosition","bindEvents","eventTarget","ResizeObserver","resizeObserver","handleEvent","updateSticky","dims","offsetRelative","clientHeight","containerBottom","_calcDimensionsWithScroll","sidebarLeft","scrollTop","viewportLeft","scrollLeft","viewportBottom","furthest","colliderTop","affixType","_getAffixTypeScrollingUp","_getAffixTypeScrollingDown","round","sidebarBottom","colliderBottom","isSidebarFitsViewport","inner","outer","bottom","_getTranslate","force","getAffixType","_getStyle","affixEvent","toLowerCase","eventTrigger","affixedEvent","_running","eventType","observeScrollDir","supportTransform","z","minHeight","styleReset","resizeSensor","ResizeSensor","detach","result","property","upper","charAt","toUpperCase","eventName","CustomEvent","createEvent","initCustomEvent","results","isNaN","offsetParent","objectExtend","args","deep","isUnextendable","extenders","extender","isCloneable","val","$parcel$interopDefault","a","default","$4040acfd8584338d$export$2e2bcd8739ae039","_callbacks","callbacks","makeEvent","params","bubbles","evt","splice","$4ca367182776f80b$export$2e2bcd8739ae039","url","withCredentials","timeout","parallelUploads","uploadMultiple","chunking","forceChunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","maxFilesize","paramName","createImageThumbnails","maxThumbnailFilesize","thumbnailWidth","thumbnailHeight","thumbnailMethod","resizeWidth","resizeHeight","resizeMimeType","resizeQuality","resizeMethod","filesizeBase","maxFiles","headers","defaultHeaders","clickable","ignoreHiddenFiles","acceptedFiles","acceptedMimeTypes","autoProcessQueue","autoQueue","addRemoveLinks","previewsContainer","disablePreviews","hiddenInputContainer","renameFilename","renameFile","forceFallback","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictUploadCanceled","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","dictFileSizeUnits","tb","gb","mb","kb","b","files","xhr","chunk","dzuuid","file","upload","uuid","dzchunkindex","dztotalfilesize","dzchunksize","dztotalchunkcount","totalChunkCount","dzchunkbyteoffset","accept","chunksUploaded","binaryBody","messageElement","$3ed269f2f0fb224b$export$2e2bcd8739ae039","span","textContent","innerText","getFallbackForm","info","srcX","srcY","srcWidth","srcHeight","srcRatio","trgRatio","trgWidth","trgHeight","resizeImage","previewTemplate","previewElement","filesize","_removeLink","removeFileEvent","status","UPLOADING","confirm","removeFile","removeLink","_updateMaxFilesReachedClass","dataUrl","thumbnailElement","alt","progress","bytesSent","nodeName","Emitter","_thumbnailQueue","_processingThumbnail","accepted","getFilesWithStatus","QUEUED","ADDED","clickableElements","setupHiddenFileInput","hiddenFileInput","visibility","getElement","addFile","URL","webkitURL","updateTotalUploadProgress","getAddedFiles","getUploadingFiles","getQueuedFiles","noPropagation","dataTransfer","types","containsFiles","returnValue","dragstart","dragenter","dragover","efct","effectAllowed","dropEffect","dragleave","drop","dragend","clickableElement","click","elementInside","enable","removeAllFiles","dropzone","totalUploadProgress","totalBytesSent","totalBytes","getActiveFiles","total","existingFallback","form","getExistingFallback","fieldsString","_getParamName","fields","getFallback","fallback","elementListeners","removeEventListeners","cancelUpload","setupEventListeners","selectedSize","selectedUnit","units","getAcceptedFiles","webkitGetAsEntry","_addFilesFromItems","handleFiles","clipboardData","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","path","dirReader","createReader","errorHandler","$3ed269f2f0fb224b$var$__guardMethod__","console","methodName","log","readEntries","fullPath","isValidFile","uuidv4","filename","_renameFile","_enqueueThumbnail","_errorProcessing","enqueueFile","processQueue","_processThumbnailQueue","createThumbnail","$3ed269f2f0fb224b$var$without","cancelIfNecessary","canvas","resizedDataURL","toDataURL","$3ed269f2f0fb224b$var$ExifRestore","restore","dataURL","dataURItoBlob","fixOrientation","fileReader","FileReader","onload","createThumbnailFromUrl","readAsDataURL","mockFile","imageUrl","crossOrigin","resizeThumbnail","onDone","thumbnail","loadExif","EXIF","getData","getTag","orientation","resizeInfo","ctx","getContext","rotate","PI","$3ed269f2f0fb224b$var$drawImageIOSFix","trgX","trgY","onerror","processingLength","queuedFiles","processFiles","processFile","processing","uploadFiles","groupedFiles","_getFilesWithXhr","groupedFile","CANCELED","abort","groupedFile1","option","_transformFiles","transformedFiles","transformedFile","chunked","chunks","handleNextChunk","chunkIndex","dataBlock","webkitSlice","retries","_uploadData","finishedChunkUpload","response","allFinished","SUCCESS","responseText","responseHeaders","getAllResponseHeaders","_finished","dataBlocks","XMLHttpRequest","resolveOption","open","_finishedUploading","ontimeout","_handleUploadError","onprogress","_updateFilesUploadProgress","Accept","Cache-Control","X-Requested-With","$ewBKy$justextend","headerName","headerValue","setRequestHeader","submitRequest","formData","FormData","additionalParams","_getChunk","_addFormElementData","doneCounter","transformFile","inputName","inputType","hasAttribute","selected","checked","loaded","readyState","responseType","getResponseHeader","warn","send","ERROR","c","r","random","super","nodeType","elementOptions","optionsForElement","isBrowserSupported","getElements","initClass","$3ed269f2f0fb224b$var$camelize","forElement","discover","dropzones","checkElements","blockedBrowsers","capableBrowser","File","FileList","Blob","blacklistedBrowsers","regex","userAgent","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","asc","charCodeAt","rejectedItem","str","childNodes","els","question","rejected","mimeType","baseMimeType","validType","each","ACCEPTED","PROCESSING","sx","sy","sw","sh","dx","dy","dw","dh","vertSquashRatio","naturalWidth","ih","naturalHeight","drawImage","getImageData","ey","py","$3ed269f2f0fb224b$var$detectVerticalSquash","KEY_STR","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","encode64","exifArray","getExifArray","newImageArray","insertExif","seg","imageData","buf","separatePoint","mae","ato","rawImageArray","head","endPoint","exec","Dropzone","HOOKS","_disable","allowInput","allowInvalidPreload","altFormat","altInput","altInputClass","animate","ariaDateFormat","autoFillDefaultTime","clickOpens","closeOnSelect","conjunction","dateFormat","defaultHour","defaultMinute","defaultSeconds","disableMobile","enableSeconds","enableTime","getWeek","givenDate","date","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","hourIncrement","ignoredFocusElements","inline","locale","minuteIncrement","mode","monthSelectorType","nextArrow","noCalendar","onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","plugins","positionElement","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","english","weekdays","shorthand","longhand","months","daysInMonth","firstDayOfWeek","ordinal","nth","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","amPM","yearAriaLabel","monthAriaLabel","hourAriaLabel","minuteAriaLabel","int","bool","debounce","wait","arrayify","content","clearNode","findParent","createNumberInput","inputClassName","numInput","arrowUp","arrowDown","pattern","getEventTarget","composedPath","doNothing","monthToStr","monthNumber","revFormat","D","dateObj","monthName","setMonth","G","hour","H","J","day","K","getHours","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","W","weekNum","weekNumber","year","setFullYear","Z","ISODate","d","h","minutes","setMinutes","j","l","month","u","unixMillSeconds","w","tokenRegex","formats","toISOString","getMonth","getSeconds","getMinutes","createDateFormatter","config","l10n","isMobile","frmt","overrideLocale","formatDate","createDateParser","givenFormat","timeless","customLocale","parsedDate","dateOrig","toFixed","datestr","parseDate","matched","ops","matchIndex","regexStr","token","isBackSlash","escaped","compareDates","date1","date2","getDefaultHours","hours","minDate","minHour","minMinutes","minSeconds","maxDate","maxHr","maxMinutes","FlatpickrInstance","instanceConfig","flatpickr","defaultConfig","English","bindToInstance","setCalendarWidth","calendarContainer","daysContainer","daysWidth","days","weekWrapper","removeProperty","updateTime","selectedDates","defaultDate","getMilliseconds","latestSelectedDateObj","isKeyDown","curValue","which","newValue","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","secondElement","limitMinHours","minTime","minDateHasTime","maxTime","maxDateHasTime","setHoursFromDate","onYearInput","changeYear","ev","_handlers","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","oldYear","currentYear","oldMonth","currentMonth","buildMonthSwitch","redraw","timeIncrement","inputElem","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","todayDateElem","tabIndex","isDateSelected","selectedDateElem","isDateInRange","insertAdjacentHTML","focusOnDayElem","targetNode","onMouseOver","getFirstAvailableDay","startMonth","endMonth","startIndex","endIndex","focusOnDay","current","dayFocused","isInView","activeElement","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","shouldBuildMonth","monthsDropdownContainer","buildMonth","monthNavFragment","monthElement","selectedMonth","yearInput","tabindex","yearElement","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","isOffset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isCalendarElement","isInput","lostFocus","relatedTarget","isIgnored","some","timeContainer","newYear","newYearNum","isNewYear","_a","dateToCheck","parsed","to","onBlur","allowKeydown","allowInlineKeydown","keyCode","blur","isTimeObj","focusAndClose","selectDate","ctrlKey","currentYearElement","elems","pluginElements","shiftKey","hoverDate","initialDate","rangeStartDate","rangeEndDate","containsDisabled","minRange","maxRange","dayElem","timestamp","outOfRange","ts1","ts2","ts","onResize","positionCalendar","minMaxDateSetter","inverseDateObj","getInputElem","setupLocale","l10ns","stringify","customPositionElement","_positionElement","calendarHeight","reduce","acc","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","distanceFromBottom","showOnTop","pageYOffset","pageXOffset","isCenter","isRight","rightMost","centerMost","doc","editableSheet","styleSheets","sheet","cssRules","createStyleSheet","getDocumentStyleSheet","bodyWidth","centerLeft","centerBefore","centerAfter","centerIndex","centerStyle","insertRule","msMaxTouchPoints","selectedDate","shouldChangeMonth","selectedIndex","single","range","loadedPlugins","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","toInitial","mobileInput","_initialDate","_createElement","lastChild","_type","k","wasOpen","select","CALLBACKS","setSelectedDate","inputDate","dates","parseDateRules","rule","hooks","initEvent","getDateStr","dObj","mobileFormatStr","onMonthNavClick","isPrevMonth","isNextMonth","boolOpts","userConfig","_enable","timeMode","defaultDateFormat","defaultAltFormat","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","pluginConf","parseConfig","placeholder","required","nextSibling","setupInputs","preloadedDate","setupDates","yr","fragment","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","buildWeeks","rContainer","separator","hourInput","aria-label","minuteInput","military2ampm","secondInput","buildTime","customAppend","build","defaultValue","setupMobile","debouncedResize","ontouchstart","selText","isSafari","_flatpickr","nodeList","HTMLCollection","NodeList","Node","en","localize","setDefaults","fp_incr","ce","defaultPrevented","origPrevent","_extends","_slicedToArray","_arr","_n","_d","_s","_i","sliceIterator","customParams","selects","elementsList","_i3","_l3","_i4","_l4","builder","defaultParams","containerClass","openerClass","panelClass","optionClass","optgroupClass","isSelectedClass","hasFocusClass","isDisabledClass","isOpenClass","builderParams","uId","opener","focusedElement","selectedElement","panel","currLabel","resetSearchTimeout","searchKey","setFocusedElement","cstOption","setSelectedElement","customSelectOriginalOption","moveFocuesedElement","currentFocusedIndex","customSelectCstOption","openedCustomSelect","customSelect","clickEvent","mouseoverEvent","keydownEvent","fromCharCode","substr","changeEvent","scrollToFocused","currPanel","currOption","removeEvents","parseMarkup","cstList","cstOptgroup","customSelectOriginalOptgroup","customSelectCstOptgroup","subNodes","lj","_append","nodePar","appendIntoOriginal","targetPar","markupToInsert","_l","possible","replaceChild","pluginOptions","toSelect","_insertBefore","cstNode","removedNode","removed","optGroup","_i2","_l2","ScrollClass","oldScroll","scrollHandler"],"mappings":"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","file":"scripts.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  /**\r\n   * Animate\r\n   * ======================================\r\n   * - add class to element in viewport\r\n   * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n   * - set animation delay via [animate-delay] html attribute\r\n   * - set visible threshold via [animate-threshold] html attribute\r\n   */\n  var ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches;\n  var THRESHOLD = '0.75';\n  var LOAD_THRESHOLD = '0.2';\n  var ELEMENTS$1 = '.animate';\n  var VISIBLE_CLASS = 'animate--visible';\n\n  var Animate = function Animate() {\n    var _this = this;\n\n    _classCallCheck(this, Animate);\n\n    _defineProperty(this, \"observeCallback\", function (entries) {\n      entries.map(function (entry) {\n        var section = entry.target;\n\n        var delay = _this.getDelay(section);\n\n        var sectionBodyClass = section.getAttribute('animate-body-class');\n\n        if (entry.isIntersecting) {\n          if (ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n            section.classList.add(VISIBLE_CLASS);\n\n            _this.bodyClass(sectionBodyClass, 'add');\n          } else {\n            setTimeout(function () {\n              section.classList.add(VISIBLE_CLASS);\n\n              _this.bodyClass(sectionBodyClass, 'add');\n            }, delay);\n          }\n        } else {\n          _this.bodyClass(sectionBodyClass, 'remove');\n        }\n      });\n    });\n\n    _defineProperty(this, \"getDelay\", function (section) {\n      var delay = section.getAttribute('animate-delay');\n\n      if (!ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n        var delay = section.getAttribute('animate-delay-desktop');\n      }\n\n      if (delay === null) {\n        return 0;\n      } else if (delay.includes('.')) {\n        return parseInt(delay * 1000);\n      } else {\n        return parseInt(delay);\n      }\n    });\n\n    _defineProperty(this, \"bodyClass\", function (htmlclass, type) {\n      if (!htmlclass) {\n        return;\n      }\n\n      if (type == 'add') {\n        document.body.classList.add(htmlclass);\n      } else {\n        document.body.classList.remove(htmlclass);\n      }\n    });\n\n    this.sections = document.querySelectorAll(ELEMENTS$1);\n    this.THRESHOLD = THRESHOLD;\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD;\n\n    if ('IntersectionObserver' in window) {\n      this.sections.forEach(function (el) {\n        var BoundingClientRect = el.getBoundingClientRect();\n        var visibleRatio = BoundingClientRect.height / window.innerHeight;\n\n        if (visibleRatio > 0.95) {\n          _this.THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 30;\n          _this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20;\n        } // observe on page load\n\n\n        var loadObserver = new IntersectionObserver(_this.observeCallback, {\n          threshold: _this.LOAD_THRESHOLD\n        });\n        loadObserver.observe(el);\n        setTimeout(function () {\n          loadObserver.disconnect();\n        }, 100); // observe\n\n        var observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : _this.THRESHOLD;\n        var observer = new IntersectionObserver(_this.observeCallback, {\n          threshold: observerThreshold\n        });\n        observer.observe(el);\n      });\n    } else {\n      this.sections.forEach(function (el) {\n        el.classList.add(VISIBLE_CLASS);\n      });\n    }\n  };\n\n  new Animate();\n\n  /*!\n   * Splide.js\n   * Version  : 3.2.5\n   * License  : MIT\n   * Copyright: 2021 Naotoshi Fujita\n   */\n  const PROJECT_CODE = \"splide\";\n  const DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\n  const CREATED = 1;\n  const MOUNTED = 2;\n  const IDLE = 3;\n  const MOVING = 4;\n  const DESTROYED = 5;\n  const STATES = {\n    CREATED,\n    MOUNTED,\n    IDLE,\n    MOVING,\n    DESTROYED\n  };\n\n  const DEFAULT_EVENT_PRIORITY = 10;\n  const DEFAULT_USER_EVENT_PRIORITY = 20;\n\n  function empty(array) {\n    array.length = 0;\n  }\n\n  function isObject(subject) {\n    return !isNull(subject) && typeof subject === \"object\";\n  }\n  function isArray(subject) {\n    return Array.isArray(subject);\n  }\n  function isFunction(subject) {\n    return typeof subject === \"function\";\n  }\n  function isString(subject) {\n    return typeof subject === \"string\";\n  }\n  function isUndefined(subject) {\n    return typeof subject === \"undefined\";\n  }\n  function isNull(subject) {\n    return subject === null;\n  }\n  function isHTMLElement(subject) {\n    return subject instanceof HTMLElement;\n  }\n\n  function toArray(value) {\n    return isArray(value) ? value : [value];\n  }\n\n  function forEach(values, iteratee) {\n    toArray(values).forEach(iteratee);\n  }\n\n  function includes(array, value) {\n    return array.indexOf(value) > -1;\n  }\n\n  function push(array, items) {\n    array.push(...toArray(items));\n    return array;\n  }\n\n  const arrayProto = Array.prototype;\n\n  function slice(arrayLike, start, end) {\n    return arrayProto.slice.call(arrayLike, start, end);\n  }\n\n  function find(arrayLike, predicate) {\n    return slice(arrayLike).filter(predicate)[0];\n  }\n\n  function toggleClass$1(elm, classes, add) {\n    if (elm) {\n      forEach(classes, (name) => {\n        if (name) {\n          elm.classList[add ? \"add\" : \"remove\"](name);\n        }\n      });\n    }\n  }\n\n  function addClass(elm, classes) {\n    toggleClass$1(elm, isString(classes) ? classes.split(\" \") : classes, true);\n  }\n\n  function append(parent, children) {\n    forEach(children, parent.appendChild.bind(parent));\n  }\n\n  function before(nodes, ref) {\n    forEach(nodes, (node) => {\n      const parent = ref.parentNode;\n      if (parent) {\n        parent.insertBefore(node, ref);\n      }\n    });\n  }\n\n  function matches(elm, selector) {\n    return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n  }\n\n  function children(parent, selector) {\n    return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n  }\n\n  function child(parent, selector) {\n    return selector ? children(parent, selector)[0] : parent.firstElementChild;\n  }\n\n  function forOwn(object, iteratee, right) {\n    if (object) {\n      let keys = Object.keys(object);\n      keys = right ? keys.reverse() : keys;\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \"__proto__\") {\n          if (iteratee(object[key], key) === false) {\n            break;\n          }\n        }\n      }\n    }\n    return object;\n  }\n\n  function assign(object) {\n    slice(arguments, 1).forEach((source) => {\n      forOwn(source, (value, key) => {\n        object[key] = source[key];\n      });\n    });\n    return object;\n  }\n\n  function merge(object, source) {\n    forOwn(source, (value, key) => {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n    return object;\n  }\n\n  function removeAttribute(elm, attrs) {\n    if (elm) {\n      forEach(attrs, (attr) => {\n        elm.removeAttribute(attr);\n      });\n    }\n  }\n\n  function setAttribute(elm, attrs, value) {\n    if (isObject(attrs)) {\n      forOwn(attrs, (value2, name) => {\n        setAttribute(elm, name, value2);\n      });\n    } else {\n      isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    }\n  }\n\n  function create(tag, attrs, parent) {\n    const elm = document.createElement(tag);\n    if (attrs) {\n      isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n    }\n    parent && append(parent, elm);\n    return elm;\n  }\n\n  function style(elm, prop, value) {\n    if (isUndefined(value)) {\n      return getComputedStyle(elm)[prop];\n    }\n    if (!isNull(value)) {\n      const { style: style2 } = elm;\n      value = `${value}`;\n      if (style2[prop] !== value) {\n        style2[prop] = value;\n      }\n    }\n  }\n\n  function display(elm, display2) {\n    style(elm, \"display\", display2);\n  }\n\n  function focus(elm) {\n    elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n  }\n\n  function getAttribute(elm, attr) {\n    return elm.getAttribute(attr);\n  }\n\n  function hasClass(elm, className) {\n    return elm && elm.classList.contains(className);\n  }\n\n  function rect(target) {\n    return target.getBoundingClientRect();\n  }\n\n  function remove(nodes) {\n    forEach(nodes, (node) => {\n      if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n  }\n\n  function measure(parent, value) {\n    if (isString(value)) {\n      const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n      value = rect(div).width;\n      remove(div);\n    }\n    return value;\n  }\n\n  function parseHtml(html) {\n    return child(new DOMParser().parseFromString(html, \"text/html\").body);\n  }\n\n  function prevent(e, stopPropagation) {\n    e.preventDefault();\n    if (stopPropagation) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function query(parent, selector) {\n    return parent && parent.querySelector(selector);\n  }\n\n  function queryAll(parent, selector) {\n    return slice(parent.querySelectorAll(selector));\n  }\n\n  function removeClass(elm, classes) {\n    toggleClass$1(elm, classes, false);\n  }\n\n  function unit(value) {\n    return isString(value) ? value : value ? `${value}px` : \"\";\n  }\n\n  function assert(condition, message = \"\") {\n    if (!condition) {\n      throw new Error(`[${PROJECT_CODE}] ${message}`);\n    }\n  }\n\n  function nextTick(callback) {\n    setTimeout(callback);\n  }\n\n  const noop = () => {\n  };\n\n  function raf(func) {\n    return requestAnimationFrame(func);\n  }\n\n  const { min, max, floor, ceil, abs } = Math;\n\n  function approximatelyEqual(x, y, epsilon) {\n    return abs(x - y) < epsilon;\n  }\n\n  function between(number, minOrMax, maxOrMin, exclusive) {\n    const minimum = min(minOrMax, maxOrMin);\n    const maximum = max(minOrMax, maxOrMin);\n    return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n  }\n\n  function clamp(number, x, y) {\n    const minimum = min(x, y);\n    const maximum = max(x, y);\n    return min(max(minimum, number), maximum);\n  }\n\n  function sign(x) {\n    return +(x > 0) - +(x < 0);\n  }\n\n  function format(string, replacements) {\n    forEach(replacements, (replacement) => {\n      string = string.replace(\"%s\", `${replacement}`);\n    });\n    return string;\n  }\n\n  function pad$1(number) {\n    return number < 10 ? `0${number}` : `${number}`;\n  }\n\n  const ids = {};\n  function uniqueId(prefix) {\n    return `${prefix}${pad$1(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n  }\n\n  function EventBus() {\n    let handlers = {};\n    function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n      forEachEvent(events, (event, namespace) => {\n        handlers[event] = handlers[event] || [];\n        push(handlers[event], {\n          _event: event,\n          _callback: callback,\n          _namespace: namespace,\n          _priority: priority,\n          _key: key\n        }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n      });\n    }\n    function off(events, key) {\n      forEachEvent(events, (event, namespace) => {\n        const eventHandlers = handlers[event];\n        handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n          return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n        });\n      });\n    }\n    function offBy(key) {\n      forOwn(handlers, (eventHandlers, event) => {\n        off(event, key);\n      });\n    }\n    function emit(event) {\n      (handlers[event] || []).forEach((handler) => {\n        handler._callback.apply(handler, slice(arguments, 1));\n      });\n    }\n    function destroy() {\n      handlers = {};\n    }\n    function forEachEvent(events, iteratee) {\n      toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n        const fragments = eventNS.split(\".\");\n        iteratee(fragments[0], fragments[1]);\n      });\n    }\n    return {\n      on,\n      off,\n      offBy,\n      emit,\n      destroy\n    };\n  }\n\n  const EVENT_MOUNTED = \"mounted\";\n  const EVENT_READY = \"ready\";\n  const EVENT_MOVE = \"move\";\n  const EVENT_MOVED = \"moved\";\n  const EVENT_CLICK = \"click\";\n  const EVENT_ACTIVE = \"active\";\n  const EVENT_INACTIVE = \"inactive\";\n  const EVENT_VISIBLE = \"visible\";\n  const EVENT_HIDDEN = \"hidden\";\n  const EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\n  const EVENT_REFRESH = \"refresh\";\n  const EVENT_UPDATED = \"updated\";\n  const EVENT_RESIZE = \"resize\";\n  const EVENT_RESIZED = \"resized\";\n  const EVENT_REPOSITIONED = \"repositioned\";\n  const EVENT_DRAG = \"drag\";\n  const EVENT_DRAGGING = \"dragging\";\n  const EVENT_DRAGGED = \"dragged\";\n  const EVENT_SCROLL = \"scroll\";\n  const EVENT_SCROLLED = \"scrolled\";\n  const EVENT_DESTROY = \"destroy\";\n  const EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\n  const EVENT_ARROWS_UPDATED = \"arrows:updated\";\n  const EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\n  const EVENT_PAGINATION_UPDATED = \"pagination:updated\";\n  const EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\n  const EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\n  const EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\n  const EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\n  const EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\n  function EventInterface(Splide2) {\n    const { event } = Splide2;\n    const key = {};\n    let listeners = [];\n    function on(events, callback, priority) {\n      event.on(events, callback, key, priority);\n    }\n    function off(events) {\n      event.off(events, key);\n    }\n    function bind(targets, events, callback, options) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners.push([target, event2, callback, options]);\n        target.addEventListener(event2, callback, options);\n      });\n    }\n    function unbind(targets, events, callback) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners = listeners.filter((listener) => {\n          if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n            target.removeEventListener(event2, listener[2], listener[3]);\n            return false;\n          }\n          return true;\n        });\n      });\n    }\n    function forEachEvent(targets, events, iteratee) {\n      forEach(targets, (target) => {\n        if (target) {\n          events.split(\" \").forEach(iteratee.bind(null, target));\n        }\n      });\n    }\n    function destroy() {\n      listeners = listeners.filter((data) => unbind(data[0], data[1]));\n      event.offBy(key);\n    }\n    event.on(EVENT_DESTROY, destroy, key);\n    return {\n      on,\n      off,\n      emit: event.emit,\n      bind,\n      unbind,\n      destroy\n    };\n  }\n\n  function RequestInterval(interval, onInterval, onUpdate, limit) {\n    const { now } = Date;\n    let startTime;\n    let rate = 0;\n    let id;\n    let paused = true;\n    let count = 0;\n    function update() {\n      if (!paused) {\n        const elapsed = now() - startTime;\n        if (elapsed >= interval) {\n          rate = 1;\n          startTime = now();\n        } else {\n          rate = elapsed / interval;\n        }\n        if (onUpdate) {\n          onUpdate(rate);\n        }\n        if (rate === 1) {\n          onInterval();\n          if (limit && ++count >= limit) {\n            return pause();\n          }\n        }\n        raf(update);\n      }\n    }\n    function start(resume) {\n      !resume && cancel();\n      startTime = now() - (resume ? rate * interval : 0);\n      paused = false;\n      raf(update);\n    }\n    function pause() {\n      paused = true;\n    }\n    function rewind() {\n      startTime = now();\n      rate = 0;\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n    }\n    function cancel() {\n      cancelAnimationFrame(id);\n      rate = 0;\n      id = 0;\n      paused = true;\n    }\n    function isPaused() {\n      return paused;\n    }\n    return {\n      start,\n      rewind,\n      pause,\n      cancel,\n      isPaused\n    };\n  }\n\n  function State(initialState) {\n    let state = initialState;\n    function set(value) {\n      state = value;\n    }\n    function is(states) {\n      return includes(toArray(states), state);\n    }\n    return { set, is };\n  }\n\n  function Throttle(func, duration) {\n    let interval;\n    function throttled() {\n      if (!interval) {\n        interval = RequestInterval(duration || 0, () => {\n          func.apply(this, arguments);\n          interval = null;\n        }, null, 1);\n        interval.start();\n      }\n    }\n    return throttled;\n  }\n\n  function Options(Splide2, Components2, options) {\n    const throttledObserve = Throttle(observe);\n    let initialOptions;\n    let points;\n    let currPoint;\n    function setup() {\n      try {\n        merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n      } catch (e) {\n        assert(false, e.message);\n      }\n      initialOptions = merge({}, options);\n      const { breakpoints } = options;\n      if (breakpoints) {\n        const isMin = options.mediaQuery === \"min\";\n        points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n          point,\n          matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n        ]);\n        observe();\n      }\n    }\n    function mount() {\n      if (points) {\n        addEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function destroy(completely) {\n      if (completely) {\n        removeEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function observe() {\n      const item = find(points, (item2) => item2[1].matches) || [];\n      if (item[0] !== currPoint) {\n        onMatch(currPoint = item[0]);\n      }\n    }\n    function onMatch(point) {\n      const newOptions = options.breakpoints[point] || initialOptions;\n      if (newOptions.destroy) {\n        Splide2.options = initialOptions;\n        Splide2.destroy(newOptions.destroy === \"completely\");\n      } else {\n        if (Splide2.state.is(DESTROYED)) {\n          destroy(true);\n          Splide2.mount();\n        }\n        Splide2.options = newOptions;\n      }\n    }\n    return {\n      setup,\n      mount,\n      destroy\n    };\n  }\n\n  const RTL = \"rtl\";\n  const TTB = \"ttb\";\n\n  const ORIENTATION_MAP = {\n    marginRight: [\"marginBottom\", \"marginLeft\"],\n    autoWidth: [\"autoHeight\"],\n    fixedWidth: [\"fixedHeight\"],\n    paddingLeft: [\"paddingTop\", \"paddingRight\"],\n    paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n    width: [\"height\"],\n    left: [\"top\", \"right\"],\n    right: [\"bottom\", \"left\"],\n    x: [\"y\"],\n    X: [\"Y\"],\n    Y: [\"X\"],\n    ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n    ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n  };\n  function Direction(Splide2, Components2, options) {\n    function resolve(prop, axisOnly) {\n      const { direction } = options;\n      const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n      return ORIENTATION_MAP[prop][index] || prop;\n    }\n    function orient(value) {\n      return value * (options.direction === RTL ? 1 : -1);\n    }\n    return {\n      resolve,\n      orient\n    };\n  }\n\n  const CLASS_ROOT = PROJECT_CODE;\n  const CLASS_SLIDER = `${PROJECT_CODE}__slider`;\n  const CLASS_TRACK = `${PROJECT_CODE}__track`;\n  const CLASS_LIST = `${PROJECT_CODE}__list`;\n  const CLASS_SLIDE = `${PROJECT_CODE}__slide`;\n  const CLASS_CLONE = `${CLASS_SLIDE}--clone`;\n  const CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\n  const CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\n  const CLASS_ARROW = `${PROJECT_CODE}__arrow`;\n  const CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\n  const CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\n  const CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\n  const CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\n  const CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\n  const CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\n  const CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\n  const CLASS_PLAY = `${PROJECT_CODE}__play`;\n  const CLASS_PAUSE = `${PROJECT_CODE}__pause`;\n  const CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\n  const CLASS_INITIALIZED = \"is-initialized\";\n  const CLASS_ACTIVE = \"is-active\";\n  const CLASS_PREV = \"is-prev\";\n  const CLASS_NEXT = \"is-next\";\n  const CLASS_VISIBLE = \"is-visible\";\n  const CLASS_LOADING = \"is-loading\";\n  const STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\n  const CLASSES = {\n    slide: CLASS_SLIDE,\n    clone: CLASS_CLONE,\n    arrows: CLASS_ARROWS,\n    arrow: CLASS_ARROW,\n    prev: CLASS_ARROW_PREV,\n    next: CLASS_ARROW_NEXT,\n    pagination: CLASS_PAGINATION,\n    page: CLASS_PAGINATION_PAGE,\n    spinner: CLASS_SPINNER\n  };\n\n  function Elements(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { root } = Splide2;\n    const elements = {};\n    const slides = [];\n    let classes;\n    let slider;\n    let track;\n    let list;\n    function setup() {\n      collect();\n      identify();\n      addClass(root, classes = getClasses());\n    }\n    function mount() {\n      on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n      on(EVENT_UPDATED, update);\n    }\n    function destroy() {\n      [root, track, list].forEach((elm) => {\n        removeAttribute(elm, \"style\");\n      });\n      empty(slides);\n      removeClass(root, classes);\n    }\n    function refresh() {\n      destroy();\n      setup();\n    }\n    function update() {\n      removeClass(root, classes);\n      addClass(root, classes = getClasses());\n    }\n    function collect() {\n      slider = child(root, `.${CLASS_SLIDER}`);\n      track = query(root, `.${CLASS_TRACK}`);\n      list = child(track, `.${CLASS_LIST}`);\n      assert(track && list, \"A track/list element is missing.\");\n      push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n      const autoplay = find(`.${CLASS_AUTOPLAY}`);\n      const arrows = find(`.${CLASS_ARROWS}`);\n      assign(elements, {\n        root,\n        slider,\n        track,\n        list,\n        slides,\n        arrows,\n        autoplay,\n        prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n        next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n        bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n        play: query(autoplay, `.${CLASS_PLAY}`),\n        pause: query(autoplay, `.${CLASS_PAUSE}`)\n      });\n    }\n    function identify() {\n      const id = root.id || uniqueId(PROJECT_CODE);\n      root.id = id;\n      track.id = track.id || `${id}-track`;\n      list.id = list.id || `${id}-list`;\n    }\n    function find(selector) {\n      return child(root, selector) || child(slider, selector);\n    }\n    function getClasses() {\n      return [\n        `${CLASS_ROOT}--${options.type}`,\n        `${CLASS_ROOT}--${options.direction}`,\n        options.drag && `${CLASS_ROOT}--draggable`,\n        options.isNavigation && `${CLASS_ROOT}--nav`,\n        CLASS_ACTIVE\n      ];\n    }\n    return assign(elements, {\n      setup,\n      mount,\n      destroy\n    });\n  }\n\n  const ROLE = \"role\";\n  const ARIA_CONTROLS = \"aria-controls\";\n  const ARIA_CURRENT = \"aria-current\";\n  const ARIA_LABEL = \"aria-label\";\n  const ARIA_HIDDEN = \"aria-hidden\";\n  const TAB_INDEX = \"tabindex\";\n  const DISABLED = \"disabled\";\n  const ARIA_ORIENTATION = \"aria-orientation\";\n  const ALL_ATTRIBUTES = [\n    ROLE,\n    ARIA_CONTROLS,\n    ARIA_CURRENT,\n    ARIA_LABEL,\n    ARIA_HIDDEN,\n    ARIA_ORIENTATION,\n    TAB_INDEX,\n    DISABLED\n  ];\n\n  const SLIDE = \"slide\";\n  const LOOP = \"loop\";\n  const FADE = \"fade\";\n\n  function Slide$1(Splide2, index, slideIndex, slide) {\n    const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n    const { Components, root, options } = Splide2;\n    const { isNavigation, updateOnMove } = options;\n    const { resolve } = Components.Direction;\n    const styles = getAttribute(slide, \"style\");\n    const isClone = slideIndex > -1;\n    const container = child(slide, `.${CLASS_CONTAINER}`);\n    const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n    let destroyed;\n    function mount() {\n      init();\n      bind(slide, \"click keydown\", (e) => {\n        emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n      });\n      on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n      if (updateOnMove) {\n        on(EVENT_MOVE, onMove.bind(this));\n      }\n    }\n    function init() {\n      if (!isClone) {\n        slide.id = `${root.id}-slide${pad$1(index + 1)}`;\n      }\n      if (isNavigation) {\n        const idx = isClone ? slideIndex : index;\n        const label = format(options.i18n.slideX, idx + 1);\n        const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n        setAttribute(slide, ARIA_LABEL, label);\n        setAttribute(slide, ARIA_CONTROLS, controls);\n        setAttribute(slide, ROLE, \"menuitem\");\n      }\n    }\n    function destroy() {\n      destroyed = true;\n      destroyEvents();\n      removeClass(slide, STATUS_CLASSES);\n      removeAttribute(slide, ALL_ATTRIBUTES);\n      setAttribute(slide, \"style\", styles);\n    }\n    function onMove(next, prev, dest) {\n      if (!destroyed) {\n        update.call(this);\n        if (dest === index) {\n          updateActivity.call(this, true);\n        }\n      }\n    }\n    function update() {\n      if (!destroyed) {\n        const { index: currIndex } = Splide2;\n        updateActivity.call(this, isActive());\n        updateVisibility.call(this, isVisible());\n        toggleClass$1(slide, CLASS_PREV, index === currIndex - 1);\n        toggleClass$1(slide, CLASS_NEXT, index === currIndex + 1);\n      }\n    }\n    function updateActivity(active) {\n      if (active !== hasClass(slide, CLASS_ACTIVE)) {\n        toggleClass$1(slide, CLASS_ACTIVE, active);\n        if (isNavigation) {\n          setAttribute(slide, ARIA_CURRENT, active || null);\n        }\n        emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n      }\n    }\n    function updateVisibility(visible) {\n      const ariaHidden = !visible && !isActive();\n      setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n      setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n      if (focusableNodes) {\n        focusableNodes.forEach((node) => {\n          setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n        });\n      }\n      if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n        toggleClass$1(slide, CLASS_VISIBLE, visible);\n        emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n      }\n    }\n    function style$1(prop, value, useContainer) {\n      style(useContainer && container || slide, prop, value);\n    }\n    function isActive() {\n      return Splide2.index === index;\n    }\n    function isVisible() {\n      if (Splide2.is(FADE)) {\n        return isActive();\n      }\n      const trackRect = rect(Components.Elements.track);\n      const slideRect = rect(slide);\n      const left = resolve(\"left\");\n      const right = resolve(\"right\");\n      return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n    }\n    function isWithin(from, distance) {\n      let diff = abs(from - index);\n      if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n        diff = min(diff, Splide2.length - diff);\n      }\n      return diff <= distance;\n    }\n    return {\n      index,\n      slideIndex,\n      slide,\n      container,\n      isClone,\n      mount,\n      destroy,\n      style: style$1,\n      isWithin\n    };\n  }\n\n  function Slides(Splide2, Components2, options) {\n    const { on, emit, bind } = EventInterface(Splide2);\n    const { slides, list } = Components2.Elements;\n    const Slides2 = [];\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n      });\n    }\n    function init() {\n      slides.forEach((slide, index) => {\n        register(slide, index, -1);\n      });\n    }\n    function destroy() {\n      forEach$1((Slide2) => {\n        Slide2.destroy();\n      });\n      empty(Slides2);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function register(slide, index, slideIndex) {\n      const object = Slide$1(Splide2, index, slideIndex, slide);\n      object.mount();\n      Slides2.push(object);\n    }\n    function get(excludeClones) {\n      return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n    }\n    function getIn(page) {\n      const { Controller } = Components2;\n      const index = Controller.toIndex(page);\n      const max = Controller.hasFocus() ? 1 : options.perPage;\n      return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n    }\n    function getAt(index) {\n      return filter(index)[0];\n    }\n    function add(items, index) {\n      forEach(items, (slide) => {\n        if (isString(slide)) {\n          slide = parseHtml(slide);\n        }\n        if (isHTMLElement(slide)) {\n          const ref = slides[index];\n          ref ? before(slide, ref) : append(list, slide);\n          addClass(slide, options.classes.slide);\n          observeImages(slide, emit.bind(null, EVENT_RESIZE));\n        }\n      });\n      emit(EVENT_REFRESH);\n    }\n    function remove$1(matcher) {\n      remove(filter(matcher).map((Slide2) => Slide2.slide));\n      emit(EVENT_REFRESH);\n    }\n    function forEach$1(iteratee, excludeClones) {\n      get(excludeClones).forEach(iteratee);\n    }\n    function filter(matcher) {\n      return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n    }\n    function style(prop, value, useContainer) {\n      forEach$1((Slide2) => {\n        Slide2.style(prop, value, useContainer);\n      });\n    }\n    function observeImages(elm, callback) {\n      const images = queryAll(elm, \"img\");\n      let { length } = images;\n      if (length) {\n        images.forEach((img) => {\n          bind(img, \"load error\", () => {\n            if (!--length) {\n              callback();\n            }\n          });\n        });\n      } else {\n        callback();\n      }\n    }\n    function getLength(excludeClones) {\n      return excludeClones ? slides.length : Slides2.length;\n    }\n    function isEnough() {\n      return Slides2.length > options.perPage;\n    }\n    return {\n      mount,\n      destroy,\n      register,\n      get,\n      getIn,\n      getAt,\n      add,\n      remove: remove$1,\n      forEach: forEach$1,\n      filter,\n      style,\n      getLength,\n      isEnough\n    };\n  }\n\n  function Layout(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const { root, track, list } = Components2.Elements;\n    const { getAt } = Slides;\n    let vertical;\n    let rootRect;\n    function mount() {\n      init();\n      bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on(EVENT_RESIZE, resize);\n    }\n    function init() {\n      rootRect = null;\n      vertical = options.direction === TTB;\n      style(root, \"maxWidth\", unit(options.width));\n      style(track, resolve(\"paddingLeft\"), cssPadding(false));\n      style(track, resolve(\"paddingRight\"), cssPadding(true));\n      resize();\n    }\n    function resize() {\n      const newRect = rect(root);\n      if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n        style(track, \"height\", cssTrackHeight());\n        Slides.style(resolve(\"marginRight\"), unit(options.gap));\n        Slides.style(\"width\", cssSlideWidth() || null);\n        setSlidesHeight();\n        rootRect = newRect;\n        emit(EVENT_RESIZED);\n      }\n    }\n    function setSlidesHeight() {\n      Slides.style(\"height\", cssSlideHeight() || null, true);\n    }\n    function cssPadding(right) {\n      const { padding } = options;\n      const prop = resolve(right ? \"right\" : \"left\");\n      return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n    }\n    function cssTrackHeight() {\n      let height = \"\";\n      if (vertical) {\n        height = cssHeight();\n        assert(height, \"height or heightRatio is missing.\");\n        height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n      }\n      return height;\n    }\n    function cssHeight() {\n      return unit(options.height || rect(list).width * options.heightRatio);\n    }\n    function cssSlideWidth() {\n      return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n    }\n    function cssSlideHeight() {\n      return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n    }\n    function cssSlideSize() {\n      const gap = unit(options.gap);\n      return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n    }\n    function listSize() {\n      return rect(list)[resolve(\"width\")];\n    }\n    function slideSize(index, withoutGap) {\n      const Slide = getAt(index || 0);\n      return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n    }\n    function totalSize(index, withoutGap) {\n      const Slide = getAt(index);\n      if (Slide) {\n        const right = rect(Slide.slide)[resolve(\"right\")];\n        const left = rect(list)[resolve(\"left\")];\n        return abs(right - left) + (withoutGap ? 0 : getGap());\n      }\n      return 0;\n    }\n    function sliderSize() {\n      return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n    }\n    function getGap() {\n      const Slide = getAt(0);\n      return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n    }\n    function getPadding(right) {\n      return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n    }\n    return {\n      mount,\n      listSize,\n      slideSize,\n      sliderSize,\n      totalSize,\n      getPadding\n    };\n  }\n\n  function Clones(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Elements, Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const clones = [];\n    let cloneCount;\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_UPDATED, EVENT_RESIZE], observe);\n    }\n    function init() {\n      if (cloneCount = computeCloneCount()) {\n        generate(cloneCount);\n        emit(EVENT_RESIZE);\n      }\n    }\n    function destroy() {\n      remove(clones);\n      empty(clones);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function observe() {\n      if (cloneCount < computeCloneCount()) {\n        emit(EVENT_REFRESH);\n      }\n    }\n    function generate(count) {\n      const slides = Slides.get().slice();\n      const { length } = slides;\n      if (length) {\n        while (slides.length < count) {\n          push(slides, slides);\n        }\n        push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n          const isHead = index < count;\n          const clone = cloneDeep(Slide.slide, index);\n          isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n          push(clones, clone);\n          Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n        });\n      }\n    }\n    function cloneDeep(elm, index) {\n      const clone = elm.cloneNode(true);\n      addClass(clone, options.classes.clone);\n      clone.id = `${Splide2.root.id}-clone${pad$1(index + 1)}`;\n      return clone;\n    }\n    function computeCloneCount() {\n      let { clones: clones2 } = options;\n      if (!Splide2.is(LOOP)) {\n        clones2 = 0;\n      } else if (!clones2) {\n        const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n        const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n        const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n        clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n      }\n      return clones2;\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Move(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n    const { resolve, orient } = Components2.Direction;\n    const { list, track } = Components2.Elements;\n    let waiting;\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n    }\n    function destroy() {\n      removeAttribute(list, \"style\");\n    }\n    function reposition() {\n      if (!isBusy()) {\n        Components2.Scroll.cancel();\n        jump(Splide2.index);\n        emit(EVENT_REPOSITIONED);\n      }\n    }\n    function move(dest, index, prev, callback) {\n      if (!isBusy()) {\n        const { set } = Splide2.state;\n        const position = getPosition();\n        const looping = dest !== index;\n        waiting = looping || options.waitForTransition;\n        set(MOVING);\n        emit(EVENT_MOVE, index, prev, dest);\n        Components2.Transition.start(dest, () => {\n          looping && jump(index);\n          waiting = false;\n          set(IDLE);\n          emit(EVENT_MOVED, index, prev, dest);\n          if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n            Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n          } else {\n            callback && callback();\n          }\n        });\n      }\n    }\n    function jump(index) {\n      translate(toPosition(index, true));\n    }\n    function translate(position, preventLoop) {\n      if (!Splide2.is(FADE)) {\n        list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n      }\n    }\n    function loop(position) {\n      if (!waiting && Splide2.is(LOOP)) {\n        const diff = orient(position - getPosition());\n        const exceededMin = exceededLimit(false, position) && diff < 0;\n        const exceededMax = exceededLimit(true, position) && diff > 0;\n        if (exceededMin || exceededMax) {\n          position = shift(position, exceededMax);\n        }\n      }\n      return position;\n    }\n    function shift(position, backwards) {\n      const excess = position - getLimit(backwards);\n      const size = sliderSize();\n      position -= sign(excess) * size * ceil(abs(excess) / size);\n      return position;\n    }\n    function cancel() {\n      waiting = false;\n      translate(getPosition());\n      Components2.Transition.cancel();\n    }\n    function toIndex(position) {\n      const Slides = Components2.Slides.get();\n      let index = 0;\n      let minDistance = Infinity;\n      for (let i = 0; i < Slides.length; i++) {\n        const slideIndex = Slides[i].index;\n        const distance = abs(toPosition(slideIndex, true) - position);\n        if (distance <= minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        } else {\n          break;\n        }\n      }\n      return index;\n    }\n    function toPosition(index, trimming) {\n      const position = orient(totalSize(index - 1) - offset(index));\n      return trimming ? trim(position) : position;\n    }\n    function getPosition() {\n      const left = resolve(\"left\");\n      return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n    }\n    function trim(position) {\n      if (options.trimSpace && Splide2.is(SLIDE)) {\n        position = clamp(position, 0, orient(sliderSize() - listSize()));\n      }\n      return position;\n    }\n    function offset(index) {\n      const { focus } = options;\n      return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n    }\n    function getLimit(max) {\n      return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n    }\n    function isBusy() {\n      return !!waiting;\n    }\n    function exceededLimit(max, position) {\n      position = isUndefined(position) ? getPosition() : position;\n      const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n      const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n      return exceededMin || exceededMax;\n    }\n    return {\n      mount,\n      destroy,\n      move,\n      jump,\n      translate,\n      shift,\n      cancel,\n      toIndex,\n      toPosition,\n      getPosition,\n      getLimit,\n      isBusy,\n      exceededLimit\n    };\n  }\n\n  function Controller(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit } = Move;\n    const { isEnough, getLength } = Components2.Slides;\n    const isLoop = Splide2.is(LOOP);\n    const isSlide = Splide2.is(SLIDE);\n    let currIndex = options.start || 0;\n    let prevIndex = currIndex;\n    let slideCount;\n    let perMove;\n    let perPage;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n    }\n    function init() {\n      slideCount = getLength(true);\n      perMove = options.perMove;\n      perPage = options.perPage;\n      currIndex = clamp(currIndex, 0, slideCount - 1);\n    }\n    function go(control, allowSameIndex, callback) {\n      const dest = parse(control);\n      if (options.useScroll) {\n        scroll(dest, true, true, options.speed, callback);\n      } else {\n        const index = loop(dest);\n        if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n          setIndex(index);\n          Move.move(dest, index, prevIndex, callback);\n        }\n      }\n    }\n    function scroll(destination, useIndex, snap, duration, callback) {\n      const dest = useIndex ? destination : toDest(destination);\n      Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n        setIndex(Move.toIndex(Move.getPosition()));\n        callback && callback();\n      });\n    }\n    function parse(control) {\n      let index = currIndex;\n      if (isString(control)) {\n        const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n        if (indicator === \"+\" || indicator === \"-\") {\n          index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n        } else if (indicator === \">\") {\n          index = number ? toIndex(+number) : getNext(true);\n        } else if (indicator === \"<\") {\n          index = getPrev(true);\n        }\n      } else {\n        if (isLoop) {\n          index = clamp(control, -perPage, slideCount + perPage - 1);\n        } else {\n          index = clamp(control, 0, getEnd());\n        }\n      }\n      return index;\n    }\n    function getNext(destination) {\n      return getAdjacent(false, destination);\n    }\n    function getPrev(destination) {\n      return getAdjacent(true, destination);\n    }\n    function getAdjacent(prev, destination) {\n      const number = perMove || (hasFocus() ? 1 : perPage);\n      const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n      if (dest === -1 && isSlide) {\n        if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n          return prev ? 0 : getEnd();\n        }\n      }\n      return destination ? dest : loop(dest);\n    }\n    function computeDestIndex(dest, from, incremental) {\n      if (isEnough()) {\n        const end = getEnd();\n        if (dest < 0 || dest > end) {\n          if (between(0, dest, from, true) || between(end, from, dest, true)) {\n            dest = toIndex(toPage(dest));\n          } else {\n            if (isLoop) {\n              dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n            } else if (options.rewind) {\n              dest = dest < 0 ? end : 0;\n            } else {\n              dest = -1;\n            }\n          }\n        } else {\n          if (!incremental && dest !== from) {\n            dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n          }\n        }\n      } else {\n        dest = -1;\n      }\n      return dest;\n    }\n    function getEnd() {\n      let end = slideCount - perPage;\n      if (hasFocus() || isLoop && perMove) {\n        end = slideCount - 1;\n      }\n      return max(end, 0);\n    }\n    function loop(index) {\n      if (isLoop) {\n        return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n      }\n      return index;\n    }\n    function toIndex(page) {\n      return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n    }\n    function toPage(index) {\n      if (!hasFocus()) {\n        index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n        index = floor(index / perPage);\n      }\n      return index;\n    }\n    function toDest(destination) {\n      const closest = Move.toIndex(destination);\n      return isSlide ? clamp(closest, 0, getEnd()) : closest;\n    }\n    function setIndex(index) {\n      if (index !== currIndex) {\n        prevIndex = currIndex;\n        currIndex = index;\n      }\n    }\n    function getIndex(prev) {\n      return prev ? prevIndex : currIndex;\n    }\n    function hasFocus() {\n      return !isUndefined(options.focus) || options.isNavigation;\n    }\n    return {\n      mount,\n      go,\n      scroll,\n      getNext,\n      getPrev,\n      getEnd,\n      setIndex,\n      getIndex,\n      toIndex,\n      toPage,\n      toDest,\n      hasFocus\n    };\n  }\n\n  const XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\n  const PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\n  const SIZE = 40;\n\n  function Arrows(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { classes, i18n } = options;\n    const { Elements, Controller } = Components2;\n    let wrapper = Elements.arrows;\n    let prev = Elements.prev;\n    let next = Elements.next;\n    let created;\n    const arrows = {};\n    function mount() {\n      init();\n      on(EVENT_UPDATED, init);\n    }\n    function init() {\n      if (options.arrows) {\n        if (!prev || !next) {\n          createArrows();\n        }\n      }\n      if (prev && next) {\n        if (!arrows.prev) {\n          const { id } = Elements.track;\n          setAttribute(prev, ARIA_CONTROLS, id);\n          setAttribute(next, ARIA_CONTROLS, id);\n          arrows.prev = prev;\n          arrows.next = next;\n          listen();\n          emit(EVENT_ARROWS_MOUNTED, prev, next);\n        } else {\n          display(wrapper, options.arrows === false ? \"none\" : \"\");\n        }\n      }\n    }\n    function destroy() {\n      if (created) {\n        remove(wrapper);\n      } else {\n        removeAttribute(prev, ALL_ATTRIBUTES);\n        removeAttribute(next, ALL_ATTRIBUTES);\n      }\n    }\n    function listen() {\n      const { go } = Controller;\n      on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n      bind(next, \"click\", () => {\n        go(\">\", true);\n      });\n      bind(prev, \"click\", () => {\n        go(\"<\", true);\n      });\n    }\n    function createArrows() {\n      wrapper = create(\"div\", classes.arrows);\n      prev = createArrow(true);\n      next = createArrow(false);\n      created = true;\n      append(wrapper, [prev, next]);\n      before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n    }\n    function createArrow(prev2) {\n      const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n      return parseHtml(arrow);\n    }\n    function update() {\n      const index = Splide2.index;\n      const prevIndex = Controller.getPrev();\n      const nextIndex = Controller.getNext();\n      const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n      prev.disabled = prevIndex < 0;\n      next.disabled = nextIndex < 0;\n      setAttribute(prev, ARIA_LABEL, prevLabel);\n      setAttribute(next, ARIA_LABEL, nextLabel);\n      emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n    }\n    return {\n      arrows,\n      mount,\n      destroy\n    };\n  }\n\n  function Autoplay(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Elements } = Components2;\n    const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n    const { isPaused } = interval;\n    let hovered;\n    let focused;\n    let paused;\n    function mount() {\n      const { autoplay } = options;\n      if (autoplay) {\n        initButton(true);\n        initButton(false);\n        listen();\n        if (autoplay !== \"pause\") {\n          play();\n        }\n      }\n    }\n    function initButton(forPause) {\n      const prop = forPause ? \"pause\" : \"play\";\n      const button = Elements[prop];\n      if (button) {\n        setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n        setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n        bind(button, \"click\", forPause ? pause : play);\n      }\n    }\n    function listen() {\n      const { root } = Elements;\n      if (options.pauseOnHover) {\n        bind(root, \"mouseenter mouseleave\", (e) => {\n          hovered = e.type === \"mouseenter\";\n          autoToggle();\n        });\n      }\n      if (options.pauseOnFocus) {\n        bind(root, \"focusin focusout\", (e) => {\n          focused = e.type === \"focusin\";\n          autoToggle();\n        });\n      }\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    }\n    function play() {\n      if (isPaused() && Components2.Slides.isEnough()) {\n        interval.start(!options.resetProgress);\n        focused = hovered = paused = false;\n        emit(EVENT_AUTOPLAY_PLAY);\n      }\n    }\n    function pause(manual = true) {\n      if (!isPaused()) {\n        interval.pause();\n        emit(EVENT_AUTOPLAY_PAUSE);\n      }\n      paused = manual;\n    }\n    function autoToggle() {\n      if (!paused) {\n        if (!hovered && !focused) {\n          play();\n        } else {\n          pause(false);\n        }\n      }\n    }\n    function update(rate) {\n      const { bar } = Elements;\n      if (bar) {\n        style(bar, \"width\", `${rate * 100}%`);\n      }\n      emit(EVENT_AUTOPLAY_PLAYING, rate);\n    }\n    return {\n      mount,\n      destroy: interval.cancel,\n      play,\n      pause,\n      isPaused\n    };\n  }\n\n  function Cover(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      if (options.cover) {\n        on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n          toggle(true, img, Slide);\n        });\n        on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n      }\n    }\n    function destroy() {\n      apply(false);\n    }\n    function apply(cover) {\n      Components2.Slides.forEach((Slide) => {\n        const img = child(Slide.container || Slide.slide, \"img\");\n        if (img && img.src) {\n          toggle(cover, img, Slide);\n        }\n      });\n    }\n    function toggle(cover, img, Slide) {\n      Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n      display(img, cover ? \"none\" : \"\");\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const BOUNCE_DIFF_THRESHOLD = 10;\n  const BOUNCE_DURATION = 600;\n  const FRICTION_FACTOR = 0.6;\n  const BASE_VELOCITY = 1.5;\n  const MIN_DURATION = 800;\n\n  function Scroll(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit, exceededLimit } = Move;\n    let interval;\n    let scrollCallback;\n    function mount() {\n      on(EVENT_MOVE, clear);\n      on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n    }\n    function scroll(destination, duration, callback, suppressConstraint) {\n      const start = getPosition();\n      let friction = 1;\n      duration = duration || computeDuration(abs(destination - start));\n      scrollCallback = callback;\n      clear();\n      interval = RequestInterval(duration, onScrolled, (rate) => {\n        const position = getPosition();\n        const target = start + (destination - start) * easing(rate);\n        const diff = (target - getPosition()) * friction;\n        Move.translate(position + diff);\n        if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n          friction *= FRICTION_FACTOR;\n          if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n            bounce(exceededLimit(false));\n          }\n        }\n      }, 1);\n      emit(EVENT_SCROLL);\n      interval.start();\n    }\n    function bounce(backwards) {\n      scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n    }\n    function onScrolled() {\n      const position = getPosition();\n      const index = Move.toIndex(position);\n      if (!between(index, 0, Splide2.length - 1)) {\n        Move.translate(Move.shift(position, index > 0), true);\n      }\n      scrollCallback && scrollCallback();\n      emit(EVENT_SCROLLED);\n    }\n    function computeDuration(distance) {\n      return max(distance / BASE_VELOCITY, MIN_DURATION);\n    }\n    function clear() {\n      if (interval) {\n        interval.cancel();\n      }\n    }\n    function cancel() {\n      if (interval && !interval.isPaused()) {\n        clear();\n        onScrolled();\n      }\n    }\n    function easing(t) {\n      const { easingFunc } = options;\n      return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n    }\n    return {\n      mount,\n      destroy: clear,\n      scroll,\n      cancel\n    };\n  }\n\n  const FRICTION = 5;\n  const LOG_INTERVAL = 200;\n  const POINTER_DOWN_EVENTS = \"touchstart mousedown\";\n  const POINTER_MOVE_EVENTS = \"touchmove mousemove\";\n  const POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\n  function Drag(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Move, Scroll, Controller } = Components2;\n    const { track } = Components2.Elements;\n    const { resolve, orient } = Components2.Direction;\n    const { getPosition, exceededLimit } = Move;\n    const listenerOptions = { passive: false, capture: true };\n    let basePosition;\n    let baseEvent;\n    let prevBaseEvent;\n    let lastEvent;\n    let isFree;\n    let dragging;\n    let hasExceeded = false;\n    let clickPrevented;\n    let disabled;\n    let target;\n    function mount() {\n      bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n      bind(track, \"click\", onClick, { capture: true });\n      bind(track, \"dragstart\", prevent);\n      on([EVENT_MOUNTED, EVENT_UPDATED], init);\n    }\n    function init() {\n      const { drag } = options;\n      disable(!drag);\n      isFree = drag === \"free\";\n    }\n    function onPointerDown(e) {\n      if (!disabled) {\n        const { noDrag } = options;\n        const isTouch = isTouchEvent(e);\n        const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n        if (isDraggable && (isTouch || !e.button)) {\n          if (!Move.isBusy()) {\n            target = isTouch ? track : window;\n            prevBaseEvent = null;\n            lastEvent = null;\n            clickPrevented = false;\n            bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n            bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n            Move.cancel();\n            Scroll.cancel();\n            save(e);\n          } else {\n            prevent(e, true);\n          }\n        }\n      }\n    }\n    function onPointerMove(e) {\n      if (!lastEvent) {\n        emit(EVENT_DRAG);\n      }\n      lastEvent = e;\n      if (e.cancelable) {\n        const diff = coordOf(e) - coordOf(baseEvent);\n        if (dragging) {\n          Move.translate(basePosition + constrain(diff));\n          const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n          const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n          if (expired || exceeded) {\n            save(e);\n          }\n          emit(EVENT_DRAGGING);\n          clickPrevented = true;\n          prevent(e);\n        } else {\n          let { dragMinThreshold: thresholds } = options;\n          thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n          dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n          if (isSliderDirection()) {\n            prevent(e);\n          }\n        }\n      }\n    }\n    function onPointerUp(e) {\n      unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n      unbind(target, POINTER_UP_EVENTS, onPointerUp);\n      if (lastEvent) {\n        if (dragging || e.cancelable && isSliderDirection()) {\n          const velocity = computeVelocity(e);\n          const destination = computeDestination(velocity);\n          if (isFree) {\n            Controller.scroll(destination);\n          } else if (Splide2.is(FADE)) {\n            Controller.go(Splide2.index + orient(sign(velocity)));\n          } else {\n            Controller.go(Controller.toDest(destination), true);\n          }\n          prevent(e);\n        }\n        emit(EVENT_DRAGGED);\n      }\n      dragging = false;\n    }\n    function save(e) {\n      prevBaseEvent = baseEvent;\n      baseEvent = e;\n      basePosition = getPosition();\n    }\n    function onClick(e) {\n      if (!disabled && clickPrevented) {\n        prevent(e, true);\n      }\n    }\n    function isSliderDirection() {\n      const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n      const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n      return diffX > diffY;\n    }\n    function computeVelocity(e) {\n      if (Splide2.is(LOOP) || !hasExceeded) {\n        const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n        const diffCoord = coordOf(lastEvent) - coordOf(base);\n        const diffTime = timeOf(e) - timeOf(base);\n        const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n        if (diffTime && isFlick) {\n          return diffCoord / diffTime;\n        }\n      }\n      return 0;\n    }\n    function computeDestination(velocity) {\n      return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n    }\n    function coordOf(e, orthogonal) {\n      return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n    }\n    function timeOf(e) {\n      return e.timeStamp;\n    }\n    function constrain(diff) {\n      return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n    }\n    function isTouchEvent(e) {\n      return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n    }\n    function isDragging() {\n      return dragging;\n    }\n    function disable(value) {\n      disabled = value;\n    }\n    return {\n      mount,\n      disable,\n      isDragging\n    };\n  }\n\n  const IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\n  function Keyboard(Splide2, Components2, options) {\n    const { on, bind, unbind } = EventInterface(Splide2);\n    const { root } = Components2.Elements;\n    const { resolve } = Components2.Direction;\n    let target;\n    function mount() {\n      init();\n      on(EVENT_UPDATED, () => {\n        destroy();\n        init();\n      });\n    }\n    function init() {\n      const { keyboard = \"global\" } = options;\n      if (keyboard) {\n        if (keyboard === \"focused\") {\n          target = root;\n          setAttribute(root, TAB_INDEX, 0);\n        } else {\n          target = window;\n        }\n        bind(target, \"keydown\", onKeydown);\n      }\n    }\n    function destroy() {\n      unbind(target, \"keydown\");\n      if (isHTMLElement(target)) {\n        removeAttribute(target, TAB_INDEX);\n      }\n    }\n    function onKeydown(e) {\n      const { key } = e;\n      const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n      if (normalizedKey === resolve(\"ArrowLeft\")) {\n        Splide2.go(\"<\");\n      } else if (normalizedKey === resolve(\"ArrowRight\")) {\n        Splide2.go(\">\");\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\n  const SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\n  const IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\n  function LazyLoad(Splide2, Components2, options) {\n    const { on, off, bind, emit } = EventInterface(Splide2);\n    const isSequential = options.lazyLoad === \"sequential\";\n    let images = [];\n    let index = 0;\n    function mount() {\n      if (options.lazyLoad) {\n        on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n          destroy();\n          init();\n        });\n        if (!isSequential) {\n          on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n        }\n      }\n    }\n    function init() {\n      Components2.Slides.forEach((_Slide) => {\n        queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n          const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n          const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n          if (src !== _img.src || srcset !== _img.srcset) {\n            const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n            setAttribute(_spinner, ROLE, \"presentation\");\n            images.push({ _img, _Slide, src, srcset, _spinner });\n            !_img.src && display(_img, \"none\");\n          }\n        });\n      });\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function destroy() {\n      index = 0;\n      images = [];\n    }\n    function observe() {\n      images = images.filter((data) => {\n        const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n        if (data._Slide.isWithin(Splide2.index, distance)) {\n          return load(data);\n        }\n        return true;\n      });\n      if (!images.length) {\n        off(EVENT_MOVED);\n      }\n    }\n    function load(data) {\n      const { _img } = data;\n      addClass(data._Slide.slide, CLASS_LOADING);\n      bind(_img, \"load error\", (e) => {\n        onLoad(data, e.type === \"error\");\n      });\n      [\"src\", \"srcset\"].forEach((name) => {\n        if (data[name]) {\n          setAttribute(_img, name, data[name]);\n          removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n        }\n      });\n    }\n    function onLoad(data, error) {\n      const { _Slide } = data;\n      removeClass(_Slide.slide, CLASS_LOADING);\n      if (!error) {\n        remove(data._spinner);\n        display(data._img, \"\");\n        emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n        emit(EVENT_RESIZE);\n      }\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function loadNext() {\n      if (index < images.length) {\n        load(images[index++]);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Pagination(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Slides, Elements, Controller } = Components2;\n    const { hasFocus, getIndex } = Controller;\n    const items = [];\n    let list;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on([EVENT_MOVE, EVENT_SCROLLED], update);\n    }\n    function init() {\n      destroy();\n      if (options.pagination && Slides.isEnough()) {\n        createPagination();\n        emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n        update();\n      }\n    }\n    function destroy() {\n      if (list) {\n        remove(list);\n        items.forEach((item) => {\n          unbind(item.button, \"click\");\n        });\n        empty(items);\n        list = null;\n      }\n    }\n    function createPagination() {\n      const { length } = Splide2;\n      const { classes, i18n, perPage } = options;\n      const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n      const max = hasFocus() ? length : ceil(length / perPage);\n      list = create(\"ul\", classes.pagination, parent);\n      for (let i = 0; i < max; i++) {\n        const li = create(\"li\", null, list);\n        const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n        const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n        const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n        bind(button, \"click\", onClick.bind(null, i));\n        setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n        setAttribute(button, ARIA_LABEL, format(text, i + 1));\n        items.push({ li, button, page: i });\n      }\n    }\n    function onClick(page) {\n      Controller.go(`>${page}`, true, () => {\n        const Slide = Slides.getAt(Controller.toIndex(page));\n        Slide && focus(Slide.slide);\n      });\n    }\n    function getAt(index) {\n      return items[Controller.toPage(index)];\n    }\n    function update() {\n      const prev = getAt(getIndex(true));\n      const curr = getAt(getIndex());\n      if (prev) {\n        removeClass(prev.button, CLASS_ACTIVE);\n        removeAttribute(prev.button, ARIA_CURRENT);\n      }\n      if (curr) {\n        addClass(curr.button, CLASS_ACTIVE);\n        setAttribute(curr.button, ARIA_CURRENT, true);\n      }\n      emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n    }\n    return {\n      items,\n      mount,\n      destroy,\n      getAt\n    };\n  }\n\n  const TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\n  function Sync(Splide2, Components2, options) {\n    const { splides } = Splide2;\n    const { list } = Components2.Elements;\n    function mount() {\n      if (options.isNavigation) {\n        navigate();\n      } else {\n        sync();\n      }\n    }\n    function destroy() {\n      removeAttribute(list, ALL_ATTRIBUTES);\n    }\n    function sync() {\n      const processed = [];\n      splides.concat(Splide2).forEach((splide, index, instances) => {\n        EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n          instances.forEach((instance) => {\n            if (instance !== splide && !includes(processed, splide)) {\n              processed.push(instance);\n              instance.go(instance.is(LOOP) ? dest : index2);\n            }\n          });\n          empty(processed);\n        });\n      });\n    }\n    function navigate() {\n      const { on, emit } = EventInterface(Splide2);\n      on(EVENT_CLICK, onClick);\n      on(EVENT_SLIDE_KEYDOWN, onKeydown);\n      on([EVENT_MOUNTED, EVENT_UPDATED], update);\n      setAttribute(list, ROLE, \"menu\");\n      emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n    }\n    function update() {\n      setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n    }\n    function onClick(Slide) {\n      Splide2.go(Slide.index);\n    }\n    function onKeydown(Slide, e) {\n      if (includes(TRIGGER_KEYS, e.key)) {\n        onClick(Slide);\n        prevent(e);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Wheel(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    function mount() {\n      if (options.wheel) {\n        bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n      }\n    }\n    function onWheel(e) {\n      const { deltaY } = e;\n      if (deltaY) {\n        Splide2.go(deltaY < 0 ? \"<\" : \">\");\n        prevent(e);\n      }\n    }\n    return {\n      mount\n    };\n  }\n\n  var ComponentConstructors = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Options: Options,\n    Direction: Direction,\n    Elements: Elements,\n    Slides: Slides,\n    Layout: Layout,\n    Clones: Clones,\n    Move: Move,\n    Controller: Controller,\n    Arrows: Arrows,\n    Autoplay: Autoplay,\n    Cover: Cover,\n    Scroll: Scroll,\n    Drag: Drag,\n    Keyboard: Keyboard,\n    LazyLoad: LazyLoad,\n    Pagination: Pagination,\n    Sync: Sync,\n    Wheel: Wheel\n  });\n\n  const I18N = {\n    prev: \"Previous slide\",\n    next: \"Next slide\",\n    first: \"Go to first slide\",\n    last: \"Go to last slide\",\n    slideX: \"Go to slide %s\",\n    pageX: \"Go to page %s\",\n    play: \"Start autoplay\",\n    pause: \"Pause autoplay\"\n  };\n\n  const DEFAULTS = {\n    type: \"slide\",\n    speed: 400,\n    waitForTransition: true,\n    perPage: 1,\n    arrows: true,\n    pagination: true,\n    interval: 5e3,\n    pauseOnHover: true,\n    pauseOnFocus: true,\n    resetProgress: true,\n    easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n    drag: true,\n    direction: \"ltr\",\n    slideFocus: true,\n    trimSpace: true,\n    focusableNodes: \"a, button, textarea, input, select, iframe\",\n    classes: CLASSES,\n    i18n: I18N\n  };\n\n  function Fade(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        nextTick(() => {\n          Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n        });\n      });\n    }\n    function start(index, done) {\n      const { track } = Components2.Elements;\n      style(track, \"height\", unit(rect(track).height));\n      nextTick(() => {\n        done();\n        style(track, \"height\", \"\");\n      });\n    }\n    return {\n      mount,\n      start,\n      cancel: noop\n    };\n  }\n\n  function Slide(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    const { Move, Controller } = Components2;\n    const { list } = Components2.Elements;\n    let endCallback;\n    function mount() {\n      bind(list, \"transitionend\", (e) => {\n        if (e.target === list && endCallback) {\n          cancel();\n          endCallback();\n        }\n      });\n    }\n    function start(index, done) {\n      const destination = Move.toPosition(index, true);\n      const position = Move.getPosition();\n      const speed = getSpeed(index);\n      if (abs(destination - position) >= 1 && speed >= 1) {\n        apply(`transform ${speed}ms ${options.easing}`);\n        Move.translate(destination, true);\n        endCallback = done;\n      } else {\n        Move.jump(index);\n        done();\n      }\n    }\n    function cancel() {\n      apply(\"\");\n    }\n    function getSpeed(index) {\n      const { rewindSpeed } = options;\n      if (Splide2.is(SLIDE) && rewindSpeed) {\n        const prev = Controller.getIndex(true);\n        const end = Controller.getEnd();\n        if (prev === 0 && index >= end || prev >= end && index === 0) {\n          return rewindSpeed;\n        }\n      }\n      return options.speed;\n    }\n    function apply(transition) {\n      style(list, \"transition\", transition);\n    }\n    return {\n      mount,\n      start,\n      cancel\n    };\n  }\n\n  const _Splide = class {\n    constructor(target, options) {\n      this.event = EventBus();\n      this.Components = {};\n      this.state = State(CREATED);\n      this.splides = [];\n      this._options = {};\n      this._Extensions = {};\n      const root = isString(target) ? query(document, target) : target;\n      assert(root, `${root} is invalid.`);\n      this.root = root;\n      merge(DEFAULTS, _Splide.defaults);\n      merge(merge(this._options, DEFAULTS), options || {});\n    }\n    mount(Extensions, Transition) {\n      const { state, Components: Components2 } = this;\n      assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n      state.set(CREATED);\n      this._Components = Components2;\n      this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n      this._Extensions = Extensions || this._Extensions;\n      const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n      forOwn(Constructors, (Component, key) => {\n        const component = Component(this, Components2, this._options);\n        Components2[key] = component;\n        component.setup && component.setup();\n      });\n      forOwn(Components2, (component) => {\n        component.mount && component.mount();\n      });\n      this.emit(EVENT_MOUNTED);\n      addClass(this.root, CLASS_INITIALIZED);\n      state.set(IDLE);\n      this.emit(EVENT_READY);\n      return this;\n    }\n    sync(splide) {\n      this.splides.push(splide);\n      splide.splides.push(this);\n      return this;\n    }\n    go(control) {\n      this._Components.Controller.go(control);\n      return this;\n    }\n    on(events, callback) {\n      this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n      return this;\n    }\n    off(events) {\n      this.event.off(events);\n      return this;\n    }\n    emit(event) {\n      this.event.emit(event, ...slice(arguments, 1));\n      return this;\n    }\n    add(slides, index) {\n      this._Components.Slides.add(slides, index);\n      return this;\n    }\n    remove(matcher) {\n      this._Components.Slides.remove(matcher);\n      return this;\n    }\n    is(type) {\n      return this._options.type === type;\n    }\n    refresh() {\n      this.emit(EVENT_REFRESH);\n      return this;\n    }\n    destroy(completely = true) {\n      const { event, state } = this;\n      if (state.is(CREATED)) {\n        event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n      } else {\n        forOwn(this._Components, (component) => {\n          component.destroy && component.destroy(completely);\n        }, true);\n        event.emit(EVENT_DESTROY);\n        event.destroy();\n        completely && empty(this.splides);\n        state.set(DESTROYED);\n      }\n      return this;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      const { _options } = this;\n      merge(_options, options);\n      if (!this.state.is(CREATED)) {\n        this.emit(EVENT_UPDATED, _options);\n      }\n    }\n    get length() {\n      return this._Components.Slides.getLength(true);\n    }\n    get index() {\n      return this._Components.Controller.getIndex();\n    }\n  };\n  let Splide = _Splide;\n  Splide.defaults = {};\n  Splide.STATES = STATES;\n\n  if (document.querySelector('#carousel')) {\n    new Splide('#carousel', {\n      pagination: false,\n      type: 'slide',\n      perPage: 4,\n      perMove: 1,\n      gap: 32,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10,\n          padding: {\n            right: 30,\n            left: 30\n          }\n        },\n        767: {\n          perPage: 1,\n          gap: 10,\n          padding: {\n            right: 30,\n            left: 30\n          }\n        },\n        1024: {\n          perPage: 2,\n          gap: 16,\n          padding: {\n            right: 0,\n            left: 0\n          }\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  if (document.querySelector('#testimonials')) {\n    new Splide('#testimonials', {\n      pagination: false,\n      type: 'slide',\n      perPage: 3,\n      perMove: 1,\n      gap: 28,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10\n        },\n        767: {\n          perPage: 2,\n          gap: 10\n        },\n        1024: {\n          perPage: 2,\n          gap: 16\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  if (document.querySelector('#logos')) {\n    new Splide('#logos', {\n      pagination: true,\n      type: 'slide',\n      perPage: 10,\n      destroy: true,\n      mediaQuery: 'min',\n      perMove: 1,\n      breakpoints: {\n        320: {\n          perPage: 2,\n          gap: 10,\n          perMove: 1,\n          destroy: false,\n          padding: {\n            right: 30,\n            left: 30\n          }\n        },\n        500: {\n          perPage: 3,\n          gap: 10,\n          perMove: 1,\n          destroy: false,\n          padding: {\n            right: 30,\n            left: 30\n          }\n        },\n        767: {\n          destroy: true\n        }\n      }\n    }).mount();\n  }\n\n  /**\r\n   * Toggle Nav\r\n   * ======================================\r\n   * - toggle class on body\r\n   */\n  var ELEMENTS = '.togglenav__button';\n  var TOGGLE_CLASS = 'nav-is-open';\n\n  var ToggleNav = /*#__PURE__*/function () {\n    function ToggleNav() {\n      var _this = this;\n\n      _classCallCheck(this, ToggleNav);\n\n      this.elements = document.querySelectorAll(ELEMENTS);\n\n      if (!this.elements) {\n        return false;\n      }\n\n      this.elements.forEach(function (el) {\n        el.addEventListener('click', _this.toggleNav, false);\n      });\n    }\n\n    _createClass(ToggleNav, [{\n      key: \"toggleNav\",\n      value: function toggleNav(e) {\n        document.body.classList.toggle(TOGGLE_CLASS);\n        document.body.classList.toggle('lock');\n        e.preventDefault();\n      }\n    }]);\n\n    return ToggleNav;\n  }();\n\n  new ToggleNav();\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  function getCjsExportFromNamespace (n) {\n  \treturn n && n['default'] || n;\n  }\n\n  var simpleLightbox_modules = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports[\"default\"] = void 0;\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var SimpleLightbox = /*#__PURE__*/function () {\n    function SimpleLightbox(elements, options) {\n      var _this = this;\n\n      _classCallCheck(this, SimpleLightbox);\n\n      _defineProperty(this, \"defaultOptions\", {\n        sourceAttr: 'href',\n        overlay: true,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n      });\n\n      _defineProperty(this, \"transitionPrefix\", void 0);\n\n      _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n      _defineProperty(this, \"transitionCapable\", false);\n\n      _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n      _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n      _defineProperty(this, \"initialLocationHash\", void 0);\n\n      _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n      _defineProperty(this, \"isOpen\", false);\n\n      _defineProperty(this, \"isAnimating\", false);\n\n      _defineProperty(this, \"isClosing\", false);\n\n      _defineProperty(this, \"isFadeIn\", false);\n\n      _defineProperty(this, \"urlChangedOnce\", false);\n\n      _defineProperty(this, \"hashReseted\", false);\n\n      _defineProperty(this, \"historyHasChanges\", false);\n\n      _defineProperty(this, \"historyUpdateTimeout\", null);\n\n      _defineProperty(this, \"currentImage\", void 0);\n\n      _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n      _defineProperty(this, \"domNodes\", {});\n\n      _defineProperty(this, \"loadedImages\", []);\n\n      _defineProperty(this, \"initialImageIndex\", 0);\n\n      _defineProperty(this, \"currentImageIndex\", 0);\n\n      _defineProperty(this, \"initialSelector\", null);\n\n      _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n      _defineProperty(this, \"controlCoordinates\", {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n      });\n\n      this.options = Object.assign(this.defaultOptions, options);\n      this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n      if (typeof elements === 'string') {\n        this.initialSelector = elements;\n        this.elements = Array.from(document.querySelectorAll(elements));\n      } else {\n        this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n      }\n\n      this.relatedElements = [];\n      this.transitionPrefix = this.calculateTransitionPrefix();\n      this.transitionCapable = this.transitionPrefix !== false;\n      this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n      if (this.options.rel) {\n        this.elements = this.getRelated(this.options.rel);\n      }\n\n      if (this.options.uniqueImages) {\n        var imgArr = [];\n        this.elements = Array.from(this.elements).filter(function (element) {\n          var src = element.getAttribute(_this.options.sourceAttr);\n\n          if (imgArr.indexOf(src) === -1) {\n            imgArr.push(src);\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      this.createDomNodes();\n\n      if (this.options.close) {\n        this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n      }\n\n      if (this.options.nav) {\n        this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n      }\n\n      if (this.options.spinner) {\n        this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n      }\n\n      this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n        if (_this.isValidLink(event.currentTarget)) {\n          event.preventDefault();\n\n          if (_this.isAnimating) {\n            return false;\n          }\n\n          _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n          _this.openImage(event.currentTarget);\n        }\n      }); // close addEventListener click addEventListener doc\n\n      if (this.options.docClose) {\n        this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n          if (_this.isOpen && event.target === event.currentTarget) {\n            _this.close();\n          }\n        });\n      } // disable rightclick\n\n\n      if (this.options.disableRightClick) {\n        this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n          if (event.target.parentElement.classList.contains(\"sl-image\")) {\n            event.preventDefault();\n          }\n        });\n      } // keyboard-control\n\n\n      if (this.options.enableKeyboard) {\n        this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n          _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n          if (_this.isAnimating && event.key === 'Escape') {\n            _this.currentImage.setAttribute('src', '');\n\n            _this.isAnimating = false;\n            return _this.close();\n          }\n\n          if (_this.isOpen) {\n            event.preventDefault();\n\n            if (event.key === 'Escape') {\n              _this.close();\n            }\n\n            if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n              _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n            }\n          }\n        }, this.options.throttleInterval));\n      }\n\n      this.addEvents();\n    }\n\n    _createClass(SimpleLightbox, [{\n      key: \"checkPassiveEventsSupport\",\n      value: function checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          window.addEventListener(\"testPassive\", null, opts);\n          window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n\n        return supportsPassive;\n      }\n    }, {\n      key: \"createDomNodes\",\n      value: function createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = \".7\";\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n        if (this.options.captionClass) {\n          this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex', -1);\n        this.domNodes.wrapper.setAttribute('role', 'dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n        if (this.options.className) {\n          this.domNodes.wrapper.classList.add(this.options.className);\n        }\n\n        if (this.options.rtl) {\n          this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n      }\n    }, {\n      key: \"throttle\",\n      value: function throttle(func, limit) {\n        var inThrottle;\n        return function () {\n          if (!inThrottle) {\n            func.apply(this, arguments);\n            inThrottle = true;\n            setTimeout(function () {\n              return inThrottle = false;\n            }, limit);\n          }\n        };\n      }\n    }, {\n      key: \"isValidLink\",\n      value: function isValidLink(element) {\n        return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"calculateTransitionPrefix\",\n      value: function calculateTransitionPrefix() {\n        var s = (document.body || document.documentElement).style;\n        return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n      }\n    }, {\n      key: \"toggleScrollbar\",\n      value: function toggleScrollbar(type) {\n        var scrollbarWidth = 0;\n        var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n        if (type === 'hide') {\n          var fullWindowWidth = window.innerWidth;\n\n          if (!fullWindowWidth) {\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n\n          if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n            var scrollDiv = document.createElement('div'),\n                paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n            scrollDiv.classList.add('sl-scrollbar-measure');\n            document.body.appendChild(scrollDiv);\n            scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            document.body.dataset.originalPaddingRight = paddingRight;\n\n            if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n              document.body.classList.add('hidden-scroll');\n              document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n              fixedElements.forEach(function (element) {\n                var actualPadding = element.style.paddingRight;\n                var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n                element.dataset.originalPaddingRight = actualPadding;\n                element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n              });\n            }\n          }\n        } else {\n          document.body.classList.remove('hidden-scroll');\n          document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n          fixedElements.forEach(function (element) {\n            var padding = element.dataset.originalPaddingRight;\n\n            if (typeof padding !== 'undefined') {\n              element.style.paddingRight = padding;\n            }\n          });\n        }\n\n        return scrollbarWidth;\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        var _this2 = this;\n\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n          return false;\n        }\n\n        this.isClosing = true;\n        var element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n          this.historyHasChanges = false;\n\n          if (!this.hashReseted) {\n            this.resetHash();\n          }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n          if (_this2.options.disableScroll) {\n            _this2.toggleScrollbar('show');\n          }\n\n          if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n            document.querySelector('html').classList.remove(_this2.options.htmlClass);\n          }\n\n          document.body.removeChild(_this2.domNodes.wrapper);\n          document.body.removeChild(_this2.domNodes.overlay);\n          _this2.domNodes.additionalHtml = null;\n          element.dispatchEvent(new Event('closed.simplelightbox'));\n          _this2.isClosing = false;\n        });\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false; // reset touchcontrol coordinates\n\n        for (var key in this.controlCoordinates) {\n          this.controlCoordinates[key] = 0;\n        }\n\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        return window.location.hash.substring(1);\n      }\n    }, {\n      key: \"preload\",\n      value: function preload() {\n        var _this3 = this;\n\n        var index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n            prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n        nextImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            //is this condition even required... setting multiple times will not change usage...\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n        prevImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"loadImage\",\n      value: function loadImage(direction) {\n        var _this4 = this;\n\n        var slideDirection = direction;\n\n        if (this.options.rtl) {\n          direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n        var newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n          return false;\n        }\n\n        this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n        if (this.options.animationSlide) {\n          this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n        }\n\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n          _this4.isAnimating = true;\n\n          if (!_this4.isClosing) {\n            setTimeout(function () {\n              var element = _this4.relatedElements[_this4.currentImageIndex];\n\n              _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n              if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n                _this4.show(_this4.domNodes.spinner);\n              }\n\n              if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n                _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n              }\n\n              _this4.adjustImage(slideDirection);\n\n              if (_this4.options.preloading) _this4.preload();\n            }, 100);\n          } else {\n            _this4.isAnimating = false;\n          }\n        });\n      }\n    }, {\n      key: \"adjustImage\",\n      value: function adjustImage(direction) {\n        var _this5 = this;\n\n        if (!this.currentImage) {\n          return false;\n        }\n\n        var tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n        tmpImage.addEventListener('error', function (event) {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n          _this5.isAnimating = false;\n          _this5.isOpen = true;\n          _this5.domNodes.spinner.style.display = 'none';\n          var dirIsDefined = direction === 1 || direction === -1;\n\n          if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n            return _this5.close();\n          }\n\n          if (_this5.options.alertError) {\n            alert(_this5.options.alertErrorMessage);\n          }\n\n          _this5.loadImage(dirIsDefined ? direction : 1);\n        });\n        tmpImage.addEventListener('load', function (event) {\n          if (typeof direction !== 'undefined') {\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n          } // history\n\n\n          if (_this5.options.history) {\n            _this5.updateURL();\n          }\n\n          if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n            _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n          }\n\n          var imageWidth = event.target.width,\n              imageHeight = event.target.height;\n\n          if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n            var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n            imageWidth /= ratio;\n            imageHeight /= ratio;\n          }\n\n          _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n          _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n          _this5.domNodes.image.style.width = imageWidth + 'px';\n          _this5.domNodes.image.style.height = imageHeight + 'px';\n          _this5.domNodes.spinner.style.display = 'none';\n\n          if (_this5.options.focus) {\n            _this5.forceFocus();\n          }\n\n          _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n            if (_this5.options.focus) {\n              _this5.domNodes.wrapper.focus();\n            }\n          });\n\n          _this5.isOpen = true;\n          var captionContainer, captionText;\n\n          if (typeof _this5.options.captionSelector === 'string') {\n            captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n          } else if (typeof _this5.options.captionSelector === 'function') {\n            captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n          }\n\n          if (_this5.options.captions && captionContainer) {\n            if (_this5.options.captionType === 'data') {\n              captionText = captionContainer.dataset[_this5.options.captionsData];\n            } else if (_this5.options.captionType === 'text') {\n              captionText = captionContainer.innerHTML;\n            } else {\n              captionText = captionContainer.getAttribute(_this5.options.captionsData);\n            }\n          }\n\n          if (!_this5.options.loop) {\n            if (_this5.currentImageIndex === 0) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n\n            if (_this5.currentImageIndex > 0) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n          } else {\n            if (_this5.relatedElements.length === 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            } else {\n              _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            }\n          }\n\n          if (direction === 1 || direction === -1) {\n            if (_this5.options.animationSlide) {\n              _this5.slide(0, 100 * direction + 'px');\n\n              setTimeout(function () {\n                _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n              }, 50);\n            }\n\n            _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n              _this5.isAnimating = false;\n\n              _this5.setCaption(captionText, imageWidth);\n            });\n          } else {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          }\n\n          if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n            _this5.domNodes.additionalHtml = document.createElement('div');\n\n            _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n            _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n            _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n          }\n        });\n      }\n    }, {\n      key: \"zoomPanElement\",\n      value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n      }\n    }, {\n      key: \"minMax\",\n      value: function minMax(value, min, max) {\n        return value < min ? min : value > max ? max : value;\n      }\n    }, {\n      key: \"setZoomData\",\n      value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n      }\n    }, {\n      key: \"hashchangeHandler\",\n      value: function hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n          this.hashReseted = true;\n          this.close();\n        }\n      }\n    }, {\n      key: \"addEvents\",\n      value: function addEvents() {\n        var _this6 = this;\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n          //this.adjustImage.bind(this)\n          if (_this6.isOpen) {\n            _this6.adjustImage();\n          }\n        });\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n          setTimeout(function () {\n            _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n              if (_this6.isOpen) {\n                _this6.hashchangeHandler();\n              }\n            });\n          }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n          if (!event.currentTarget.tagName.match(/button/i)) {\n            return true;\n          }\n\n          event.preventDefault();\n          _this6.controlCoordinates.swipeDiff = 0;\n\n          _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n          var scale = 1;\n          this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n            if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n              return true;\n            }\n\n            if (_this6.controlCoordinates.containerHeight == 0) {\n              _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n              _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n              _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n              _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n              _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n              _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            }\n\n            event.preventDefault();\n            var delta = event.delta || event.wheelDelta;\n\n            if (delta === undefined) {\n              //we are on firefox\n              delta = event.detail;\n            }\n\n            delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n            // apply zoom\n\n            scale += delta * _this6.options.scrollZoomFactor * scale;\n            scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n            _this6.controlCoordinates.targetScale = scale;\n            _this6.controlCoordinates.pinchOffsetX = event.pageX;\n            _this6.controlCoordinates.pinchOffsetY = event.pageY;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n            if (_this6.controlCoordinates.targetScale > 1) {\n              _this6.controlCoordinates.zoomed = true;\n\n              if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            } else {\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n            _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n            _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n          if (event.target.tagName === 'A' && event.type === 'touchstart') {\n            return true;\n          }\n\n          if (event.type === 'mousedown') {\n            event.preventDefault();\n            _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            _this6.controlCoordinates.capture = true;\n          } else {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n            if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                if (!_this6.controlCoordinates.doubleTapped) {\n                  _this6.controlCoordinates.doubleTapped = true;\n                  setTimeout(function () {\n                    _this6.controlCoordinates.doubleTapped = false;\n                  }, 300);\n                } else {\n                  _this6.currentImage.classList.add('sl-transition');\n\n                  if (!_this6.controlCoordinates.zoomed) {\n                    _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n\n                    _this6.controlCoordinates.zoomed = true;\n                  } else {\n                    _this6.controlCoordinates.initialScale = 1;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    _this6.controlCoordinates.zoomed = false;\n                  }\n\n                  setTimeout(function () {\n                    if (_this6.currentImage) {\n                      _this6.currentImage.classList.remove('sl-transition');\n                    }\n                  }, 200);\n                  return false;\n                }\n\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              } else if (_this6.controlCoordinates.touchCount === 2)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n                _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n                _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n                _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n              }\n\n            _this6.controlCoordinates.capture = true;\n          }\n\n          if (_this6.controlCoordinates.mousedown) return true;\n\n          if (_this6.transitionCapable) {\n            _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n          }\n\n          _this6.controlCoordinates.mousedown = true;\n          _this6.controlCoordinates.swipeDiff = 0;\n          _this6.controlCoordinates.swipeYDiff = 0;\n          _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n          return false;\n        });\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n          if (!_this6.controlCoordinates.mousedown) {\n            return true;\n          }\n\n          if (event.type === 'touchmove') {\n            if (_this6.controlCoordinates.capture === false) {\n              return false;\n            }\n\n            _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.touchmoveCount++;\n\n            if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n                if (_this6.controlCoordinates.initialPinchDistance === null) {\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                }\n\n                if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                  /* Initialize helpers */\n                  _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                  _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                  _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                  _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                  _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                  _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                  _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                  if (_this6.controlCoordinates.targetScale > 1) {\n                    _this6.controlCoordinates.zoomed = true;\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n                  }\n\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                  _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                  _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                  _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                }\n              } else {\n              _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n              _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n              _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n              _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n              _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n              }\n\n              _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n              _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n            }\n          }\n          /* Mouse Move implementation */\n\n\n          if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n            if (event.type == 'touchmove') return true;\n            event.preventDefault();\n            if (_this6.controlCoordinates.capture === false) return false;\n            _this6.controlCoordinates.pointerOffsetX = event.clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.clientY;\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n            _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n            _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n            _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n            if (_this6.options.animationSlide) {\n              _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n          if (_this6.isTouchDevice && event.type === 'touchend') {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n\n            if (_this6.controlCoordinates.touchCount === 0)\n              /* No touch */\n              {\n                /* Set attributes */\n                if (_this6.currentImage) {\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n                }\n\n                if (_this6.controlCoordinates.initialScale === 1) {\n                  _this6.controlCoordinates.zoomed = false;\n\n                  if (_this6.domNodes.caption.style.display === 'none') {\n                    _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = null;\n                _this6.controlCoordinates.capture = false;\n              } else if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n              } else if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPinchDistance = null;\n              }\n          }\n\n          if (_this6.controlCoordinates.mousedown) {\n            _this6.controlCoordinates.mousedown = false;\n            var possibleDir = true;\n\n            if (!_this6.options.loop) {\n              if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n                possibleDir = false;\n              }\n\n              if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n                possibleDir = false;\n              }\n            }\n\n            if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n              _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n            } else if (_this6.options.animationSlide) {\n              _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n            }\n\n            if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n              _this6.close();\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n          if (_this6.isTouchDevice) return;\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          _this6.currentImage.classList.add('sl-transition');\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n\n            _this6.controlCoordinates.zoomed = true;\n          } else {\n            _this6.controlCoordinates.initialScale = 1;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            _this6.controlCoordinates.zoomed = false;\n\n            if (_this6.domNodes.caption.style.display === 'none') {\n              _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          }\n\n          setTimeout(function () {\n            if (_this6.currentImage) {\n              _this6.currentImage.classList.remove('sl-transition');\n\n              _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n            }\n          }, 200);\n          _this6.controlCoordinates.capture = true;\n          return false;\n        });\n      }\n    }, {\n      key: \"getDimensions\",\n      value: function getDimensions(element) {\n        var styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n          height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n          width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n      }\n    }, {\n      key: \"updateHash\",\n      value: function updateHash() {\n        var newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n          window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n          // what is the browser target of this?\n          if (this.historyHasChanges) {\n            window.location.replace(newURL);\n          } else {\n            window.location.hash = newHash;\n          }\n        }\n\n        if (!this.historyHasChanges) {\n          this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n      }\n    }, {\n      key: \"resetHash\",\n      value: function resetHash() {\n        this.hashReseted = true;\n\n        if (this.urlChangedOnce) {\n          history.back();\n        } else {\n          if (this.pushStateSupport) {\n            history.pushState('', document.title, window.location.pathname + window.location.search);\n          } else {\n            window.location.hash = '';\n          }\n        } //\n        //in case an history operation is still pending\n\n\n        clearTimeout(this.historyUpdateTimeout);\n      }\n    }, {\n      key: \"updateURL\",\n      value: function updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n\n        if (!this.historyHasChanges) {\n          this.updateHash(); // first time\n        } else {\n          this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n      }\n    }, {\n      key: \"setCaption\",\n      value: function setCaption(captionText, imageWidth) {\n        var _this7 = this;\n\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n          this.hide(this.domNodes.caption);\n          this.domNodes.caption.style.width = imageWidth + 'px';\n          this.domNodes.caption.innerHTML = captionText;\n          this.domNodes.image.appendChild(this.domNodes.caption);\n          setTimeout(function () {\n            _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n          }, this.options.captionDelay);\n        }\n      }\n    }, {\n      key: \"slide\",\n      value: function slide(speed, pos) {\n        if (!this.transitionCapable) {\n          return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n      }\n    }, {\n      key: \"getRelated\",\n      value: function getRelated(rel) {\n        var elems;\n\n        if (rel && rel !== false && rel !== 'nofollow') {\n          elems = Array.from(this.elements).filter(function (element) {\n            return element.getAttribute('rel') === rel;\n          });\n        } else {\n          elems = this.elements;\n        }\n\n        return elems;\n      }\n    }, {\n      key: \"openImage\",\n      value: function openImage(element) {\n        var _this8 = this;\n\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n          this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n          document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n        if (this.options.overlay) {\n          document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n          if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.removeChild(this.domNodes.counter);\n          } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.appendChild(this.domNodes.counter);\n          }\n        }\n\n        this.isAnimating = true;\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n        var targetURL = element.getAttribute(this.options.sourceAttr);\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n          this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n        this.domNodes.image.appendChild(this.currentImage);\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n        this.adjustImage();\n\n        if (this.options.preloading) {\n          this.preload();\n        }\n\n        setTimeout(function () {\n          element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n        }, this.options.animationSpeed);\n      }\n    }, {\n      key: \"forceFocus\",\n      value: function forceFocus() {\n        var _this9 = this;\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n          if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n            _this9.domNodes.wrapper.focus();\n          }\n        });\n      } // utility\n\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator = _createForOfIteratorHelper(elements),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var element = _step.value;\n\n            if (!element.namespaces) {\n              element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n\n            var _iterator2 = _createForOfIteratorHelper(events),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var event = _step2.value;\n                var options = opts || false;\n                var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                  if (_typeof(options) === 'object') {\n                    options.passive = true;\n                  } else {\n                    options = {\n                      passive: true\n                    };\n                  }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator3 = _createForOfIteratorHelper(elements),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var element = _step3.value;\n\n            var _iterator4 = _createForOfIteratorHelper(events),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var event = _step4.value;\n\n                if (element.namespaces && element.namespaces[event]) {\n                  element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                  delete element.namespaces[event];\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }, {\n      key: \"fadeOut\",\n      value: function fadeOut(elements, duration, callback) {\n        var _this10 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator5 = _createForOfIteratorHelper(elements),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var element = _step5.value;\n            element.style.opacity = 1;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        this.isFadeIn = false;\n\n        var step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if ((currentOpacity -= step) < 0) {\n            var _iterator6 = _createForOfIteratorHelper(elements),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var element = _step6.value;\n                element.style.display = \"none\"; // element.style.opacity = '';\n\n                element.style.opacity = 1;\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            callback && callback.call(_this10, elements);\n          } else {\n            var _iterator7 = _createForOfIteratorHelper(elements),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _element = _step7.value;\n                _element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n\n            requestAnimationFrame(fade);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"fadeIn\",\n      value: function fadeIn(elements, duration, callback, display) {\n        var _this11 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator8 = _createForOfIteratorHelper(elements),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var element = _step8.value;\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        this.isFadeIn = true;\n\n        var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if (!((currentOpacity += step) > opacityTarget)) {\n            var _iterator9 = _createForOfIteratorHelper(elements),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var element = _step9.value;\n                element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n\n            if (!_this11.isFadeIn) return;\n            requestAnimationFrame(fade);\n          } else {\n            var _iterator10 = _createForOfIteratorHelper(elements),\n                _step10;\n\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var _element2 = _step10.value;\n                _element2.style.opacity = '';\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n\n            callback && callback.call(_this11, elements);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"hide\",\n      value: function hide(elements) {\n        elements = this.wrap(elements);\n\n        var _iterator11 = _createForOfIteratorHelper(elements),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var element = _step11.value;\n\n            if (element.style.display != 'none') {\n              element.dataset.initialDisplay = element.style.display;\n            }\n\n            element.style.display = 'none';\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n    }, {\n      key: \"show\",\n      value: function show(elements, display) {\n        elements = this.wrap(elements);\n\n        var _iterator12 = _createForOfIteratorHelper(elements),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var element = _step12.value;\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      }\n    }, {\n      key: \"wrap\",\n      value: function wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n      }\n    }, {\n      key: \"on\",\n      value: function on(events, callback) {\n        events = this.wrap(events);\n\n        var _iterator13 = _createForOfIteratorHelper(this.elements),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var element = _step13.value;\n\n            if (!element.fullyNamespacedEvents) {\n              element.fullyNamespacedEvents = {};\n            }\n\n            var _iterator14 = _createForOfIteratorHelper(events),\n                _step14;\n\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var event = _step14.value;\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n\n        return this;\n      }\n    }, {\n      key: \"off\",\n      value: function off(events) {\n        events = this.wrap(events);\n\n        var _iterator15 = _createForOfIteratorHelper(this.elements),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var element = _step15.value;\n\n            var _iterator16 = _createForOfIteratorHelper(events),\n                _step16;\n\n            try {\n              for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                var event = _step16.value;\n\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                  element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n              }\n            } catch (err) {\n              _iterator16.e(err);\n            } finally {\n              _iterator16.f();\n            }\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n\n        return this;\n      } // api\n\n    }, {\n      key: \"open\",\n      value: function open(elem) {\n        elem = elem || this.elements[0];\n\n        if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n          elem = elem.get(0);\n        }\n\n        this.initialImageIndex = this.elements.indexOf(elem);\n\n        if (this.initialImageIndex > -1) {\n          this.openImage(elem);\n        }\n      }\n    }, {\n      key: \"next\",\n      value: function next() {\n        this.loadImage(1);\n      }\n    }, {\n      key: \"prev\",\n      value: function prev() {\n        this.loadImage(-1);\n      } // get some useful data\n\n    }, {\n      key: \"getLighboxData\",\n      value: function getLighboxData() {\n        return {\n          currentImageIndex: this.currentImageIndex,\n          currentImage: this.currentImage,\n          globalScrollbarWidth: this.globalScrollbarWidth\n        };\n      } //close is exposed anyways..\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        //remove all custom event listeners from elements\n        this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n        this.close();\n\n        if (this.isOpen) {\n          document.body.removeChild(this.domNodes.wrapper);\n          document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n      }\n    }, {\n      key: \"refresh\",\n      value: function refresh() {\n        if (!this.initialSelector) {\n          throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        var options = this.options,\n            selector = this.initialSelector;\n        this.destroy();\n        this.constructor(selector, options);\n        return this;\n      }\n    }]);\n\n    return SimpleLightbox;\n  }();\n\n  var _default = SimpleLightbox;\n  exports[\"default\"] = _default;\n  commonjsGlobal.SimpleLightbox = SimpleLightbox;\n  });\n\n  var SimpleLightbox = unwrapExports(simpleLightbox_modules);\n\n  new SimpleLightbox('.gallery__fancybox', {\n    /* options */\n  });\n\n  /**\n   * Sticky Sidebar v2 JavaScript Plugin.\n   * @version 1.0.1\n   * @author Øystein Blixhavn <oystein@blixhavn.no>\n   * @license The MIT License (MIT)\n   */\n  const StickySidebar = (() => {\n\n      // ---------------------------------\n      // # Define Constants\n      // ---------------------------------\n      //\n      const EVENT_KEY = '.stickySidebar';\n\n      const DEFAULTS = {\n        /**\n         * Additional top spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        topSpacing: 0,\n\n        /**\n         * Additional bottom spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        bottomSpacing: 0,\n\n        /**\n         * Container sidebar selector to know what the beginning and end of sticky element.\n         * @type {String|False}\n         */\n        containerSelector: false,\n\n        /**\n         * Parent element where the scrolling happens.\n         */\n        scrollContainer: false,\n\n        /**\n         * Inner wrapper selector.\n         * @type {String}\n         */\n        innerWrapperSelector: '.inner-wrapper-sticky',\n\n        /**\n         * The name of CSS class to apply to elements when they have become stuck.\n         * @type {String|False}\n         */\n        stickyClass: 'is-affixed',\n\n        /**\n         * The sidebar returns to its normal position if its width below this value.\n         * @type {Numeric}\n         */\n        minWidth: false\n      };\n\n      // ---------------------------------\n      // # Class Definition\n      // ---------------------------------\n      //\n      /**\n       * Sticky Sidebar Class.\n       * @public\n       */\n      class StickySidebar{\n\n        /**\n         * Sticky Sidebar Constructor.\n         * @constructor\n         * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n         * @param {Object} options - The options of sticky sidebar.\n         */\n        constructor(sidebar, options = {}){\n          this.options = StickySidebar.extend(DEFAULTS, options);\n\n          // Sidebar element query if there's no one, throw error.\n          this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n          if( 'undefined' === typeof this.sidebar )\n            throw new Error(\"There is no specific sidebar element.\");\n\n          this.sidebarInner = false;\n          this.container = this.sidebar.parentElement;\n\n          // Current Affix Type of sidebar element.\n          this.affixedType = 'STATIC';\n          this.direction = 'down';\n          this.support = {\n            transform:   false,\n            transform3d: false\n          };\n\n          this._initialized = false;\n          this._reStyle = false;\n          this._breakpoint = false;\n\n          // Dimensions of sidebar, container and screen viewport.\n          this.dimensions = {\n            translateY: 0,\n            maxTranslateY: 0,\n            topSpacing: 0,\n            lastTopSpacing: 0,\n            bottomSpacing: 0,\n            lastBottomSpacing: 0,\n            sidebarHeight: 0,\n            sidebarWidth: 0,\n            containerTop: 0,\n            containerHeight: 0,\n            viewportHeight: 0,\n            viewportTop: 0,\n            lastViewportTop: 0,\n          };\n\n          // Bind event handlers for referencability.\n          ['handleEvent'].forEach( (method) => {\n            this[method] = this[method].bind(this);\n          });\n\n          // Initialize sticky sidebar for first time.\n          this.initialize();\n        }\n\n        /**\n         * Initializes the sticky sidebar by adding inner wrapper, define its container,\n         * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n         * @private\n         */\n        initialize(){\n          this._setSupportFeatures();\n\n          // Get sticky sidebar inner wrapper, if not found, will create one.\n          if( this.options.innerWrapperSelector ){\n            this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n            if( null === this.sidebarInner )\n              this.sidebarInner = false;\n          }\n\n          if( ! this.sidebarInner ){\n            let wrapper = document.createElement('div');\n            wrapper.setAttribute('class', 'inner-wrapper-sticky');\n            this.sidebar.appendChild(wrapper);\n\n            while( this.sidebar.firstChild != wrapper )\n              wrapper.appendChild(this.sidebar.firstChild);\n\n            this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n          }\n\n          // Container wrapper of the sidebar.\n          if( this.options.containerSelector ){\n            let containers = document.querySelectorAll(this.options.containerSelector);\n            containers = Array.prototype.slice.call(containers);\n\n            containers.forEach((container, item) => {\n              if( ! container.contains(this.sidebar) ) return;\n              this.container = container;\n            });\n\n            if( ! containers.length )\n              throw new Error(\"The container does not contains on the sidebar.\");\n          }\n\n          // Get scroll container, if provided\n          this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n          // If top/bottom spacing is not function parse value to integer.\n          if( 'function' !== typeof this.options.topSpacing )\n            this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n          if( 'function' !== typeof this.options.bottomSpacing )\n            this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n          // Breakdown sticky sidebar if screen width below `options.minWidth`.\n          this._widthBreakpoint();\n\n          // Calculate dimensions of sidebar, container and viewport.\n          this.calcDimensions();\n\n          // Affix sidebar in proper position.\n          this.stickyPosition();\n\n          // Bind all events.\n          this.bindEvents();\n\n          // Inform other properties the sticky sidebar is initialized.\n          this._initialized = true;\n        }\n\n        /**\n         * Bind all events of sticky sidebar plugin.\n         * @protected\n         */\n        bindEvents(){\n          this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n          this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n          this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n          this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n          if( 'undefined' !== typeof ResizeObserver ){\n            const resizeObserver = new ResizeObserver(() => this.handleEvent());\n            resizeObserver.observe(this.sidebarInner);\n            resizeObserver.observe(this.container);\n          }\n        }\n\n        /**\n         * Handles all events of the plugin.\n         * @param {Object} event - Event object passed from listener.\n         */\n        handleEvent(event){\n          this.updateSticky(event);\n        }\n\n        /**\n         * Calculates dimensions of sidebar, container and screen viewpoint\n         * @public\n         */\n        calcDimensions(){\n          if( this._breakpoint ) return;\n          var dims = this.dimensions;\n\n          // Container of sticky sidebar dimensions.\n          dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n          dims.containerHeight = this.container.clientHeight;\n          dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n          // Sidebar dimensions.\n          dims.sidebarHeight = this.sidebarInner.offsetHeight;\n          dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n          // Screen viewport dimensions.\n          dims.viewportHeight = window.innerHeight;\n\n          // Maximum sidebar translate Y.\n          dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n          this._calcDimensionsWithScroll();\n        }\n\n        /**\n         * Some dimensions values need to be up-to-date when scrolling the page.\n         * @private\n         */\n        _calcDimensionsWithScroll(){\n          var dims = this.dimensions;\n\n          dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n          if (this.scrollContainer) {\n            dims.viewportTop = this.scrollContainer.scrollTop;\n            dims.viewportLeft = this.scrollContainer.scrollLeft;\n          } else {\n            dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n            dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n          }\n          dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n          dims.topSpacing    = this.options.topSpacing;\n          dims.bottomSpacing = this.options.bottomSpacing;\n\n          if( 'function' === typeof dims.topSpacing )\n              dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n          if( 'function' === typeof dims.bottomSpacing )\n              dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n          if( 'VIEWPORT-TOP' === this.affixedType ){\n            // Adjust translate Y in the case decrease top spacing value.\n            if( dims.topSpacing < dims.lastTopSpacing ){\n              dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n              this._reStyle = true;\n            }\n          } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n            // Adjust translate Y in the case decrease bottom spacing value.\n            if( dims.bottomSpacing < dims.lastBottomSpacing ){\n              dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n              this._reStyle = true;\n            }\n          }\n\n          dims.lastTopSpacing    = dims.topSpacing;\n          dims.lastBottomSpacing = dims.bottomSpacing;\n        }\n\n        /**\n         * Determine whether the sidebar is bigger than viewport.\n         * @public\n         * @return {Boolean}\n         */\n        isSidebarFitsViewport() {\n          return this.dimensions.viewportHeight >= (\n            this.dimensions.lastBottomSpacing +\n            this.dimensions.lastTopSpacing +\n            this.dimensions.sidebarHeight\n          );\n        }\n\n        /**\n         * Observe browser scrolling direction top and down.\n         */\n        observeScrollDir(){\n          var dims = this.dimensions;\n          if( dims.lastViewportTop === dims.viewportTop ) return;\n\n          var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n          // If the browser is scrolling not in the same direction.\n          if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n            this.direction = 'down' === this.direction ?  'up' : 'down';\n        }\n\n        /**\n         * Gets affix type of sidebar according to current scroll top and scrolling direction.\n         * @public\n         * @return {String|False} - Proper affix type.\n         */\n        getAffixType(){\n          this._calcDimensionsWithScroll();\n          var dims = this.dimensions;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var affixType = this.affixedType;\n\n         if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n            dims.translateY = 0;\n            affixType = 'STATIC';\n          } else {\n            affixType = ( 'up' === this.direction ) ?\n              this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n          }\n\n          // Make sure the translate Y is not bigger than container height.\n          dims.translateY = Math.max(0, dims.translateY);\n          dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n          dims.translateY = Math.round(dims.translateY);\n\n          dims.lastViewportTop = dims.viewportTop;\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling down.\n         * @private\n         * @return {String} - Proper affix type of scrolling down direction.\n         */\n        _getAffixTypeScrollingDown(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( this.isSidebarFitsViewport() ){\n            if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( colliderTop >= dims.containerTop ){\n              dims.translateY = colliderTop - dims.containerTop;\n              affixType = 'VIEWPORT-TOP';\n            }\n          } else {\n            if( dims.containerBottom <= colliderBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n              dims.translateY = colliderBottom - sidebarBottom;\n              affixType = 'VIEWPORT-BOTTOM';\n\n            } else if( dims.containerTop + dims.translateY <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling up.\n         * @private\n         * @return {String} - Proper affix type of scrolling up direction.\n         */\n        _getAffixTypeScrollingUp(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( colliderTop <= dims.translateY + dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n\n          } else if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( ! this.isSidebarFitsViewport() ){\n\n            if( dims.containerTop <= colliderTop &&\n                (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Gets inline style of sticky sidebar wrapper and inner wrapper according\n         * to its affix type.\n         * @private\n         * @param {String} affixType - Affix type of sticky sidebar.\n         * @return {Object}\n         */\n        _getStyle(affixType){\n          if( 'undefined' === typeof affixType ) return;\n\n          var style = {inner: {}, outer: {}};\n          var dims = this.dimensions;\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n              style.inner = {position: 'fixed', top: dims.topSpacing,\n                    left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n              break;\n            case 'VIEWPORT-BOTTOM':\n              style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                    bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n              break;\n            case 'CONTAINER-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n              let translate = this._getTranslate(0, dims.translateY + 'px');\n\n              if( translate )\n                style.inner = {transform: translate};\n              else\n                style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n              break;\n          }\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n            case 'VIEWPORT-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n            case 'CONTAINER-BOTTOM':\n              style.outer = {height: dims.sidebarHeight, position: 'relative'};\n              break;\n          }\n\n          style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n          style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n              bottom: '', width: '',  transform: ''}, style.inner);\n\n          return style;\n        }\n\n        /**\n         * Cause the sidebar to be sticky according to affix type by adding inline\n         * style, adding helper class and trigger events.\n         * @function\n         * @protected\n         * @param {string} force - Update sticky sidebar position by force.\n         */\n        stickyPosition(force){\n          if( this._breakpoint ) return;\n\n          force = this._reStyle || force || false;\n\n          this.options.topSpacing;\n          this.options.bottomSpacing;\n\n          var affixType = this.getAffixType();\n          var style = this._getStyle(affixType);\n\n          if( (this.affixedType != affixType || force) && affixType ){\n            let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n            if( 'STATIC' === affixType )\n              StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            else\n              StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n            for( let key in style.outer ){\n              let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n              this.sidebar.style[key] = style.outer[key] + unit;\n            }\n\n            for( let key in style.inner ){\n              let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n              this.sidebarInner.style[key] = style.inner[key] + unit;\n            }\n\n            let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n          } else {\n            if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n          }\n\n          this.affixedType = affixType;\n        }\n\n        /**\n         * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n         * @protected\n         */\n        _widthBreakpoint(){\n\n          if( window.innerWidth <= this.options.minWidth ){\n            this._breakpoint = true;\n            this.affixedType = 'STATIC';\n\n            this.sidebar.removeAttribute('style');\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            this.sidebarInner.removeAttribute('style');\n          } else {\n            this._breakpoint = false;\n          }\n        }\n\n        /**\n         * Switches between functions stack for each event type, if there's no\n         * event, it will re-initialize sticky sidebar.\n         * @public\n         */\n        updateSticky(event = {}){\n          if( this._running ) return;\n          this._running = true;\n\n          ((eventType) => {\n            requestAnimationFrame(() => {\n              switch( eventType ){\n                // When browser is scrolling and re-calculate just dimensions\n                // within scroll.\n                case 'scroll':\n                  this._calcDimensionsWithScroll();\n                  this.observeScrollDir();\n                  this.stickyPosition();\n                  break;\n\n                // When browser is resizing or there's no event, observe width\n                // breakpoint and re-calculate dimensions.\n                case 'resize':\n                default:\n                  this._widthBreakpoint();\n                  this.calcDimensions();\n                  this.stickyPosition(true);\n                  break;\n              }\n              this._running = false;\n            });\n          })(event.type);\n        }\n\n        /**\n         * Set browser support features to the public property.\n         * @private\n         */\n        _setSupportFeatures(){\n          var support = this.support;\n\n          support.transform = StickySidebar.supportTransform();\n          support.transform3d = StickySidebar.supportTransform(true);\n        }\n\n        /**\n         * Get translate value, if the browser supports transfrom3d, it will adopt it.\n         * and the same with translate. if browser doesn't support both return false.\n         * @param {Number} y - Value of Y-axis.\n         * @param {Number} x - Value of X-axis.\n         * @param {Number} z - Value of Z-axis.\n         * @return {String|False}\n         */\n        _getTranslate(y = 0, x = 0, z = 0){\n          if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n          else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n          else return false;\n        }\n\n        /**\n         * Destroy sticky sidebar plugin.\n         * @public\n         */\n        destroy(){\n          window.removeEventListener('resize', this, {capture: false});\n          window.removeEventListener('scroll', this, {capture: false});\n\n          this.sidebar.classList.remove(this.options.stickyClass);\n          this.sidebar.style.minHeight = '';\n\n          this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n          var styleReset = {inner: {}, outer: {}};\n\n          styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n          styleReset.outer = {height: '', position: ''};\n\n          for( let key in styleReset.outer )\n            this.sidebar.style[key] = styleReset.outer[key];\n\n          for( let key in styleReset.inner )\n            this.sidebarInner.style[key] = styleReset.inner[key];\n\n          if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n            ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n            ResizeSensor.detach(this.container, this.handleEvent);\n          }\n        }\n\n        /**\n         * Determine if the browser supports CSS transform feature.\n         * @function\n         * @static\n         * @param {Boolean} transform3d - Detect transform with translate3d.\n         * @return {String}\n         */\n        static supportTransform(transform3d){\n          var result = false,\n              property = (transform3d) ? 'perspective' : 'transform',\n              upper = property.charAt(0).toUpperCase() + property.slice(1),\n              prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n              support = document.createElement('support'),\n              style = support.style;\n\n          (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n            if (style[property] !== undefined) {\n              result = property;\n              return false;\n            }\n          });\n          return result;\n        }\n\n        /**\n         * Trigger custom event.\n         * @static\n         * @param {DOMObject} element - Target element on the DOM.\n         * @param {String} eventName - Event name.\n         * @param {Object} data -\n         */\n        static eventTrigger(element, eventName, data){\n          try{\n            var event = new CustomEvent(eventName, {detail: data});\n          } catch(e){\n            var event = document.createEvent('CustomEvent');\n            event.initCustomEvent(eventName, true, true, data);\n          }\n          element.dispatchEvent(event);\n        }\n\n        /**\n         * Extend options object with defaults.\n         * @function\n         * @static\n         */\n        static extend(defaults, options){\n          var results = {};\n          for( let key in defaults ){\n            if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n            else results[key] = defaults[key];\n          }\n          return results;\n        }\n\n        /**\n         * Get current coordinates left and top of specific element.\n         * @static\n         */\n        static offsetRelative(element){\n          var result = {left: 0, top: 0};\n\n          do{\n            let offsetTop = element.offsetTop;\n            let offsetLeft = element.offsetLeft;\n\n            if( ! isNaN(offsetTop) )\n              result.top += offsetTop;\n\n            if( ! isNaN(offsetLeft) )\n              result.left += offsetLeft;\n\n            element = ( 'BODY' === element.tagName ) ?\n                        element.parentElement : element.offsetParent;\n          } while(element)\n          return result;\n        }\n\n        /**\n         * Add specific class name to specific element.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static addClass(element, className){\n          if( ! StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.add(className);\n            else\n              element.className += ' ' + className;\n          }\n        }\n\n        /**\n         * Remove specific class name to specific element\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static removeClass(element, className){\n          if( StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.remove(className);\n            else\n              element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n          }\n        }\n\n        /**\n         * Determine weather the element has specific class name.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static hasClass(element, className){\n          if (element.classList)\n            return element.classList.contains(className);\n          else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n\n        /**\n         * Gets default values of configuration options.\n         * @static\n         * @return {Object}\n         */\n        static get defaults(){\n          return DEFAULTS;\n        }\n      }\n\n      return StickySidebar;\n    })();\n\n    // Global\n    // -------------------------\n    window.StickySidebar = StickySidebar;\n\n  if (document.querySelector('.sidebar')) {\n    new StickySidebar('.sidebar', {\n      containerSelector: '.layout',\n      innerWrapperSelector: '.sidebar__inner',\n      topSpacing: 30,\n      bottomSpacing: 20\n    });\n  }\n\n  var objectExtend = extend;\n\n  /*\n    var obj = {a: 3, b: 5};\n    extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 4, b: 5, c: 8}\n\n    var obj = {a: 3, b: 5};\n    extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 3, b: 5}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n    extend({a: 4, b: 5}); // {a: 4, b: 5}\n    extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n    extend({a: 4, b: 5}, true); {a: 4, b: 5}\n    extend('hello', {a: 4, b: 5}); // throws\n    extend(3, {a: 4, b: 5}); // throws\n  */\n\n  function extend(/* [deep], obj1, obj2, [objn] */) {\n    var args = [].slice.call(arguments);\n    var deep = false;\n    if (typeof args[0] == 'boolean') {\n      deep = args.shift();\n    }\n    var result = args[0];\n    if (isUnextendable(result)) {\n      throw new Error('extendee must be an object');\n    }\n    var extenders = args.slice(1);\n    var len = extenders.length;\n    for (var i = 0; i < len; i++) {\n      var extender = extenders[i];\n      for (var key in extender) {\n        if (Object.prototype.hasOwnProperty.call(extender, key)) {\n          var value = extender[key];\n          if (deep && isCloneable(value)) {\n            var base = Array.isArray(value) ? [] : {};\n            result[key] = extend(\n              true,\n              Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n                ? result[key]\n                : base,\n              value\n            );\n          } else {\n            result[key] = value;\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  function isCloneable(obj) {\n    return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n  }\n\n  function isUnextendable(val) {\n    return !val || (typeof val != 'object' && typeof val != 'function');\n  }\n\n  function $parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n  }\n\n  class $4040acfd8584338d$export$2e2bcd8739ae039 {\n      // Add an event listener for given event\n      on(event, fn) {\n          this._callbacks = this._callbacks || {\n          };\n          // Create namespace for this event\n          if (!this._callbacks[event]) this._callbacks[event] = [];\n          this._callbacks[event].push(fn);\n          return this;\n      }\n      emit(event, ...args) {\n          this._callbacks = this._callbacks || {\n          };\n          let callbacks = this._callbacks[event];\n          if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n          // trigger a corresponding DOM event\n          if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n              args: args\n          }));\n          return this;\n      }\n      makeEvent(eventName, detail) {\n          let params = {\n              bubbles: true,\n              cancelable: true,\n              detail: detail\n          };\n          if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n          else {\n              // IE 11 support\n              // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n              var evt = document.createEvent(\"CustomEvent\");\n              evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n              return evt;\n          }\n      }\n      // Remove event listener for given event. If fn is not provided, all event\n      // listeners for that event will be removed. If neither is provided, all\n      // event listeners will be removed.\n      off(event, fn) {\n          if (!this._callbacks || arguments.length === 0) {\n              this._callbacks = {\n              };\n              return this;\n          }\n          // specific event\n          let callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n          // remove all handlers\n          if (arguments.length === 1) {\n              delete this._callbacks[event];\n              return this;\n          }\n          // remove specific handler\n          for(let i = 0; i < callbacks.length; i++){\n              let callback = callbacks[i];\n              if (callback === fn) {\n                  callbacks.splice(i, 1);\n                  break;\n              }\n          }\n          return this;\n      }\n  }\n\n\n\n  var $fd6031f88dce2e32$exports = {};\n  $fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\n  let $4ca367182776f80b$var$defaultOptions = {\n      /**\n     * Has to be specified on elements other than form (or when the form doesn't\n     * have an `action` attribute).\n     *\n     * You can also provide a function that will be called with `files` and\n     * `dataBlocks`  and must return the url as string.\n     */ url: null,\n      /**\n     * Can be changed to `\"put\"` if necessary. You can also provide a function\n     * that will be called with `files` and must return the method (since `v3.12.0`).\n     */ method: \"post\",\n      /**\n     * Will be set on the XHRequest.\n     */ withCredentials: false,\n      /**\n     * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n     * If set to null or 0, no timeout is going to be set.\n     */ timeout: null,\n      /**\n     * How many file uploads to process in parallel (See the\n     * Enqueuing file uploads documentation section for more info)\n     */ parallelUploads: 2,\n      /**\n     * Whether to send multiple files in one request. If\n     * this it set to true, then the fallback file input element will\n     * have the `multiple` attribute as well. This option will\n     * also trigger additional events (like `processingmultiple`). See the events\n     * documentation section for more information.\n     */ uploadMultiple: false,\n      /**\n     * Whether you want files to be uploaded in chunks to your server. This can't be\n     * used in combination with `uploadMultiple`.\n     *\n     * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n     */ chunking: false,\n      /**\n     * If `chunking` is enabled, this defines whether **every** file should be chunked,\n     * even if the file size is below chunkSize. This means, that the additional chunk\n     * form data will be submitted and the `chunksUploaded` callback will be invoked.\n     */ forceChunking: false,\n      /**\n     * If `chunking` is `true`, then this defines the chunk size in bytes.\n     */ chunkSize: 2097152,\n      /**\n     * If `true`, the individual chunks of a file are being uploaded simultaneously.\n     */ parallelChunkUploads: false,\n      /**\n     * Whether a chunk should be retried if it fails.\n     */ retryChunks: false,\n      /**\n     * If `retryChunks` is true, how many times should it be retried.\n     */ retryChunksLimit: 3,\n      /**\n     * The maximum filesize (in MiB) that is allowed to be uploaded.\n     */ maxFilesize: 256,\n      /**\n     * The name of the file param that gets transferred.\n     * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n     * Dropzone will append `[]` to the name.\n     */ paramName: \"file\",\n      /**\n     * Whether thumbnails for images should be generated\n     */ createImageThumbnails: true,\n      /**\n     * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n     */ maxThumbnailFilesize: 10,\n      /**\n     * If `null`, the ratio of the image will be used to calculate it.\n     */ thumbnailWidth: 120,\n      /**\n     * The same as `thumbnailWidth`. If both are null, images will not be resized.\n     */ thumbnailHeight: 120,\n      /**\n     * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ thumbnailMethod: \"crop\",\n      /**\n     * If set, images will be resized to these dimensions before being **uploaded**.\n     * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n     * ratio of the file will be preserved.\n     *\n     * The `options.transformFile` function uses these options, so if the `transformFile` function\n     * is overridden, these options don't do anything.\n     */ resizeWidth: null,\n      /**\n     * See `resizeWidth`.\n     */ resizeHeight: null,\n      /**\n     * The mime type of the resized image (before it gets uploaded to the server).\n     * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n     * See `resizeWidth` for more information.\n     */ resizeMimeType: null,\n      /**\n     * The quality of the resized images. See `resizeWidth`.\n     */ resizeQuality: 0.8,\n      /**\n     * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ resizeMethod: \"contain\",\n      /**\n     * The base that is used to calculate the **displayed** filesize. You can\n     * change this to 1024 if you would rather display kibibytes, mebibytes,\n     * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n     * not `1 kilobyte`. You can change this to `1024` if you don't care about\n     * validity.\n     */ filesizeBase: 1000,\n      /**\n     * If not `null` defines how many files this Dropzone handles. If it exceeds,\n     * the event `maxfilesexceeded` will be called. The dropzone element gets the\n     * class `dz-max-files-reached` accordingly so you can provide visual\n     * feedback.\n     */ maxFiles: null,\n      /**\n     * An optional object to send additional headers to the server. Eg:\n     * `{ \"My-Awesome-Header\": \"header value\" }`\n     */ headers: null,\n      /**\n     * Should the default headers be set or not?\n     * Accept: application/json <- for requesting json response\n     * Cache-Control: no-cache <- Request shouldnt be cached\n     * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n     */ defaultHeaders: true,\n      /**\n     * If `true`, the dropzone element itself will be clickable, if `false`\n     * nothing will be clickable.\n     *\n     * You can also pass an HTML element, a CSS selector (for multiple elements)\n     * or an array of those. In that case, all of those elements will trigger an\n     * upload when clicked.\n     */ clickable: true,\n      /**\n     * Whether hidden files in directories should be ignored.\n     */ ignoreHiddenFiles: true,\n      /**\n     * The default implementation of `accept` checks the file's mime type or\n     * extension against this list. This is a comma separated list of mime\n     * types or file extensions.\n     *\n     * Eg.: `image/*,application/pdf,.psd`\n     *\n     * If the Dropzone is `clickable` this option will also be used as\n     * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n     * parameter on the hidden file input as well.\n     */ acceptedFiles: null,\n      /**\n     * **Deprecated!**\n     * Use acceptedFiles instead.\n     */ acceptedMimeTypes: null,\n      /**\n     * If false, files will be added to the queue but the queue will not be\n     * processed automatically.\n     * This can be useful if you need some additional user input before sending\n     * files (or if you want want all files sent at once).\n     * If you're ready to send the file simply call `myDropzone.processQueue()`.\n     *\n     * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n     * section for more information.\n     */ autoProcessQueue: true,\n      /**\n     * If false, files added to the dropzone will not be queued by default.\n     * You'll have to call `enqueueFile(file)` manually.\n     */ autoQueue: true,\n      /**\n     * If `true`, this will add a link to every file preview to remove or cancel (if\n     * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n     * and `dictRemoveFile` options are used for the wording.\n     */ addRemoveLinks: false,\n      /**\n     * Defines where to display the file previews – if `null` the\n     * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n     * selector. The element should have the `dropzone-previews` class so\n     * the previews are displayed properly.\n     */ previewsContainer: null,\n      /**\n     * Set this to `true` if you don't want previews to be shown.\n     */ disablePreviews: false,\n      /**\n     * This is the element the hidden input field (which is used when clicking on the\n     * dropzone to trigger file selection) will be appended to. This might\n     * be important in case you use frameworks to switch the content of your page.\n     *\n     * Can be a selector string, or an element directly.\n     */ hiddenInputContainer: \"body\",\n      /**\n     * If null, no capture type will be specified\n     * If camera, mobile devices will skip the file selection and choose camera\n     * If microphone, mobile devices will skip the file selection and choose the microphone\n     * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n     * On apple devices multiple must be set to false.  AcceptedFiles may need to\n     * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n     */ capture: null,\n      /**\n     * **Deprecated**. Use `renameFile` instead.\n     */ renameFilename: null,\n      /**\n     * A function that is invoked before the file is uploaded to the server and renames the file.\n     * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n     * file that gets used during the upload can be accessed through `file.upload.filename`.\n     */ renameFile: null,\n      /**\n     * If `true` the fallback will be forced. This is very useful to test your server\n     * implementations first and make sure that everything works as\n     * expected without dropzone if you experience problems, and to test\n     * how your fallbacks will look.\n     */ forceFallback: false,\n      /**\n     * The text used before any files are dropped.\n     */ dictDefaultMessage: \"Drop files here to upload\",\n      /**\n     * The text that replaces the default message text it the browser is not supported.\n     */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      /**\n     * The text that will be added before the fallback form.\n     * If you provide a  fallback element yourself, or if this option is `null` this will\n     * be ignored.\n     */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      /**\n     * If the filesize is too big.\n     * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n     */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      /**\n     * If the file doesn't match the file type.\n     */ dictInvalidFileType: \"You can't upload files of this type.\",\n      /**\n     * If the server response was invalid.\n     * `{{statusCode}}` will be replaced with the servers status code.\n     */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n     */ dictCancelUpload: \"Cancel upload\",\n      /**\n     * The text that is displayed if an upload was manually canceled\n     */ dictUploadCanceled: \"Upload canceled.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n     */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used to remove a file.\n     */ dictRemoveFile: \"Remove file\",\n      /**\n     * If this is not null, then the user will be prompted before removing a file.\n     */ dictRemoveFileConfirmation: null,\n      /**\n     * Displayed if `maxFiles` is st and exceeded.\n     * The string `{{maxFiles}}` will be replaced by the configuration value.\n     */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n      /**\n     * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n     * `b` for bytes.\n     */ dictFileSizeUnits: {\n          tb: \"TB\",\n          gb: \"GB\",\n          mb: \"MB\",\n          kb: \"KB\",\n          b: \"b\"\n      },\n      /**\n     * Called when dropzone initialized\n     * You can add event listeners here\n     */ init () {\n      },\n      /**\n     * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n     * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n     * of a function, this needs to return a map.\n     *\n     * The default implementation does nothing for normal uploads, but adds relevant information for\n     * chunked uploads.\n     *\n     * This is the same as adding hidden input fields in the form element.\n     */ params (files, xhr, chunk) {\n          if (chunk) return {\n              dzuuid: chunk.file.upload.uuid,\n              dzchunkindex: chunk.index,\n              dztotalfilesize: chunk.file.size,\n              dzchunksize: this.options.chunkSize,\n              dztotalchunkcount: chunk.file.upload.totalChunkCount,\n              dzchunkbyteoffset: chunk.index * this.options.chunkSize\n          };\n      },\n      /**\n     * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n     * and a `done` function as parameters.\n     *\n     * If the done function is invoked without arguments, the file is \"accepted\" and will\n     * be processed. If you pass an error message, the file is rejected, and the error\n     * message will be displayed.\n     * This function will not be called if the file is too big or doesn't match the mime types.\n     */ accept (file, done) {\n          return done();\n      },\n      /**\n     * The callback that will be invoked when all chunks have been uploaded for a file.\n     * It gets the file for which the chunks have been uploaded as the first parameter,\n     * and the `done` function as second. `done()` needs to be invoked when everything\n     * needed to finish the upload process is done.\n     */ chunksUploaded: function(file, done) {\n          done();\n      },\n      /**\n     * Sends the file as binary blob in body instead of form data.\n     * If this is set, the `params` option will be ignored.\n     * It's an error to set this to `true` along with `uploadMultiple` since\n     * multiple files cannot be in a single binary body.\n     */ binaryBody: false,\n      /**\n     * Gets called when the browser is not supported.\n     * The default implementation shows the fallback input field and adds\n     * a text.\n     */ fallback () {\n          // This code should pass in IE7... :(\n          let messageElement;\n          this.element.className = `${this.element.className} dz-browser-not-supported`;\n          for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n              messageElement = child;\n              child.className = \"dz-message\"; // Removes the 'dz-default' class\n              break;\n          }\n          if (!messageElement) {\n              messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n              this.element.appendChild(messageElement);\n          }\n          let span = messageElement.getElementsByTagName(\"span\")[0];\n          if (span) {\n              if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n              else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n          }\n          return this.element.appendChild(this.getFallbackForm());\n      },\n      /**\n     * Gets called to calculate the thumbnail dimensions.\n     *\n     * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n     *\n     *  - `srcWidth` & `srcHeight` (required)\n     *  - `trgWidth` & `trgHeight` (required)\n     *  - `srcX` & `srcY` (optional, default `0`)\n     *  - `trgX` & `trgY` (optional, default `0`)\n     *\n     * Those values are going to be used by `ctx.drawImage()`.\n     */ resize (file, width, height, resizeMethod) {\n          let info = {\n              srcX: 0,\n              srcY: 0,\n              srcWidth: file.width,\n              srcHeight: file.height\n          };\n          let srcRatio = file.width / file.height;\n          // Automatically calculate dimensions if not specified\n          if (width == null && height == null) {\n              width = info.srcWidth;\n              height = info.srcHeight;\n          } else if (width == null) width = height * srcRatio;\n          else if (height == null) height = width / srcRatio;\n          // Make sure images aren't upscaled\n          width = Math.min(width, info.srcWidth);\n          height = Math.min(height, info.srcHeight);\n          let trgRatio = width / height;\n          if (info.srcWidth > width || info.srcHeight > height) {\n              // Image is bigger and needs rescaling\n              if (resizeMethod === \"crop\") {\n                  if (srcRatio > trgRatio) {\n                      info.srcHeight = file.height;\n                      info.srcWidth = info.srcHeight * trgRatio;\n                  } else {\n                      info.srcWidth = file.width;\n                      info.srcHeight = info.srcWidth / trgRatio;\n                  }\n              } else if (resizeMethod === \"contain\") {\n                  // Method 'contain'\n                  if (srcRatio > trgRatio) height = width / srcRatio;\n                  else width = height * srcRatio;\n              } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n          }\n          info.srcX = (file.width - info.srcWidth) / 2;\n          info.srcY = (file.height - info.srcHeight) / 2;\n          info.trgWidth = width;\n          info.trgHeight = height;\n          return info;\n      },\n      /**\n     * Can be used to transform the file (for example, resize an image if necessary).\n     *\n     * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n     * images according to those dimensions.\n     *\n     * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n     * to be invoked with the file when the transformation is done.\n     */ transformFile (file, done) {\n          if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n          else return done(file);\n      },\n      /**\n     * A string that contains the template used for each dropped\n     * file. Change it to fulfill your needs but make sure to properly\n     * provide all elements.\n     *\n     * If you want to use an actual HTML element instead of providing a String\n     * as a config option, you could create a div with the id `tpl`,\n     * put the template inside it and provide the element like this:\n     *\n     *     document\n     *       .querySelector('#tpl')\n     *       .innerHTML\n     *\n     */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n      /*\n     Those functions register themselves to the events on init and handle all\n     the user interface specific stuff. Overwriting them won't break the upload\n     but can break the way it's displayed.\n     You can overwrite them if you don't like the default behavior. If you just\n     want to add an additional event handler, register it on the dropzone object\n     and don't overwrite those options.\n     */ // Those are self explanatory and simply concern the DragnDrop.\n      drop (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart (e) {\n      },\n      dragend (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste (e) {\n      },\n      // Called whenever there are no files left in the dropzone anymore, and the\n      // dropzone should be displayed as if in the initial state.\n      reset () {\n          return this.element.classList.remove(\"dz-started\");\n      },\n      // Called when a file is added to the queue\n      // Receives `file`\n      addedfile (file) {\n          if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n          if (this.previewsContainer && !this.options.disablePreviews) {\n              file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n              file.previewTemplate = file.previewElement; // Backwards compatibility\n              this.previewsContainer.appendChild(file.previewElement);\n              for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n              for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n              if (this.options.addRemoveLinks) {\n                  file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                  file.previewElement.appendChild(file._removeLink);\n              }\n              let removeFileEvent = (e)=>{\n                  e.preventDefault();\n                  e.stopPropagation();\n                  if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                  );\n                  else {\n                      if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                      );\n                      else return this.removeFile(file);\n                  }\n              };\n              for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n          }\n      },\n      // Called whenever a file is removed.\n      removedfile (file) {\n          if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n          return this._updateMaxFilesReachedClass();\n      },\n      // Called when a thumbnail has been generated\n      // Receives `file` and `dataUrl`\n      thumbnail (file, dataUrl) {\n          if (file.previewElement) {\n              file.previewElement.classList.remove(\"dz-file-preview\");\n              for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                  thumbnailElement.alt = file.name;\n                  thumbnailElement.src = dataUrl;\n              }\n              return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n              , 1);\n          }\n      },\n      // Called whenever an error occurs\n      // Receives `file` and `message`\n      error (file, message) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-error\");\n              if (typeof message !== \"string\" && message.error) message = message.error;\n              for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n          }\n      },\n      errormultiple () {\n      },\n      // Called when a file gets processed. Since there is a cue, not all added\n      // files are processed immediately.\n      // Receives `file`\n      processing (file) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-processing\");\n              if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n          }\n      },\n      processingmultiple () {\n      },\n      // Called whenever the upload progress gets updated.\n      // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n      // To get the total number of bytes of the file, use `file.size`\n      uploadprogress (file, progress, bytesSent) {\n          if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n      },\n      // Called whenever the total upload progress gets updated.\n      // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n      totaluploadprogress () {\n      },\n      // Called just before the file is sent. Gets the `xhr` object as second\n      // parameter, so you can modify it (for example to add a CSRF token) and a\n      // `formData` object to add additional information.\n      sending () {\n      },\n      sendingmultiple () {\n      },\n      // When the complete upload is finished and successful\n      // Receives `file`\n      success (file) {\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n      },\n      successmultiple () {\n      },\n      // When the upload is canceled.\n      canceled (file) {\n          return this.emit(\"error\", file, this.options.dictUploadCanceled);\n      },\n      canceledmultiple () {\n      },\n      // When the upload is finished, either with success or an error.\n      // Receives `file`\n      complete (file) {\n          if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n      },\n      completemultiple () {\n      },\n      maxfilesexceeded () {\n      },\n      maxfilesreached () {\n      },\n      queuecomplete () {\n      },\n      addedfiles () {\n      }\n  };\n  var $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\n  class $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n      static initClass() {\n          // Exposing the emitter class, mainly for tests\n          this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n          /*\n       This is a list of all available events you can register on a dropzone object.\n\n       You can register an event handler like this:\n\n       dropzone.on(\"dragEnter\", function() { });\n\n       */ this.prototype.events = [\n              \"drop\",\n              \"dragstart\",\n              \"dragend\",\n              \"dragenter\",\n              \"dragover\",\n              \"dragleave\",\n              \"addedfile\",\n              \"addedfiles\",\n              \"removedfile\",\n              \"thumbnail\",\n              \"error\",\n              \"errormultiple\",\n              \"processing\",\n              \"processingmultiple\",\n              \"uploadprogress\",\n              \"totaluploadprogress\",\n              \"sending\",\n              \"sendingmultiple\",\n              \"success\",\n              \"successmultiple\",\n              \"canceled\",\n              \"canceledmultiple\",\n              \"complete\",\n              \"completemultiple\",\n              \"reset\",\n              \"maxfilesexceeded\",\n              \"maxfilesreached\",\n              \"queuecomplete\", \n          ];\n          this.prototype._thumbnailQueue = [];\n          this.prototype._processingThumbnail = false;\n      }\n      // Returns all files that have been accepted\n      getAcceptedFiles() {\n          return this.files.filter((file)=>file.accepted\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that have been rejected\n      // Not sure when that's going to be useful, but added for completeness.\n      getRejectedFiles() {\n          return this.files.filter((file)=>!file.accepted\n          ).map((file)=>file\n          );\n      }\n      getFilesWithStatus(status) {\n          return this.files.filter((file)=>file.status === status\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that are in the queue\n      getQueuedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n      }\n      getUploadingFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n      }\n      getAddedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n      }\n      // Files that are either queued or uploading\n      getActiveFiles() {\n          return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n          ).map((file)=>file\n          );\n      }\n      // The function that gets called when Dropzone is initialized. You\n      // can (and should) setup event listeners inside this function.\n      init() {\n          // In case it isn't set already\n          if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n          if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n          if (this.clickableElements.length) {\n              let setupHiddenFileInput = ()=>{\n                  if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                  this.hiddenFileInput = document.createElement(\"input\");\n                  this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                  if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                  this.hiddenFileInput.className = \"dz-hidden-input\";\n                  if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                  if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                  // Making sure that no one can \"tab\" into this field.\n                  this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                  // Not setting `display=\"none\"` because some browsers don't accept clicks\n                  // on elements that aren't displayed.\n                  this.hiddenFileInput.style.visibility = \"hidden\";\n                  this.hiddenFileInput.style.position = \"absolute\";\n                  this.hiddenFileInput.style.top = \"0\";\n                  this.hiddenFileInput.style.left = \"0\";\n                  this.hiddenFileInput.style.height = \"0\";\n                  this.hiddenFileInput.style.width = \"0\";\n                  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                  this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                      let { files: files  } = this.hiddenFileInput;\n                      if (files.length) for (let file of files)this.addFile(file);\n                      this.emit(\"addedfiles\", files);\n                      setupHiddenFileInput();\n                  });\n              };\n              setupHiddenFileInput();\n          }\n          this.URL = window.URL !== null ? window.URL : window.webkitURL;\n          // Setup all event listeners on the Dropzone object itself.\n          // They're not in @setupEventListeners() because they shouldn't be removed\n          // again when the dropzone gets disabled.\n          for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n          this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n          );\n          // Emit a `queuecomplete` event if all files finished uploading.\n          this.on(\"complete\", (file)=>{\n              if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n              return setTimeout(()=>this.emit(\"queuecomplete\")\n              , 0);\n          });\n          const containsFiles = function(e) {\n              if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n              // IE, we need to iterate like this instead of\n              // using e.dataTransfer.types.some()\n              for(var i = 0; i < e.dataTransfer.types.length; i++){\n                  if (e.dataTransfer.types[i] === \"Files\") return true;\n              }\n              return false;\n          };\n          let noPropagation = function(e) {\n              // If there are no files, we don't want to stop\n              // propagation so we don't interfere with other\n              // drag and drop behaviour.\n              if (!containsFiles(e)) return;\n              e.stopPropagation();\n              if (e.preventDefault) return e.preventDefault();\n              else return e.returnValue = false;\n          };\n          // Create the listeners\n          this.listeners = [\n              {\n                  element: this.element,\n                  events: {\n                      dragstart: (e)=>{\n                          return this.emit(\"dragstart\", e);\n                      },\n                      dragenter: (e)=>{\n                          noPropagation(e);\n                          return this.emit(\"dragenter\", e);\n                      },\n                      dragover: (e)=>{\n                          // Makes it possible to drag files from chrome's download bar\n                          // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                          // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                          let efct;\n                          try {\n                              efct = e.dataTransfer.effectAllowed;\n                          } catch (error) {\n                          }\n                          e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                          noPropagation(e);\n                          return this.emit(\"dragover\", e);\n                      },\n                      dragleave: (e)=>{\n                          return this.emit(\"dragleave\", e);\n                      },\n                      drop: (e)=>{\n                          noPropagation(e);\n                          return this.drop(e);\n                      },\n                      dragend: (e)=>{\n                          return this.emit(\"dragend\", e);\n                      }\n                  }\n              }, \n          ];\n          this.clickableElements.forEach((clickableElement)=>{\n              return this.listeners.push({\n                  element: clickableElement,\n                  events: {\n                      click: (evt)=>{\n                          // Only the actual dropzone or the message element should trigger file selection\n                          if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                          return true;\n                      }\n                  }\n              });\n          });\n          this.enable();\n          return this.options.init.call(this);\n      }\n      // Not fully tested yet\n      destroy() {\n          this.disable();\n          this.removeAllFiles(true);\n          if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n              this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n              this.hiddenFileInput = null;\n          }\n          delete this.element.dropzone;\n          return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n      }\n      updateTotalUploadProgress() {\n          let totalUploadProgress;\n          let totalBytesSent = 0;\n          let totalBytes = 0;\n          let activeFiles = this.getActiveFiles();\n          if (activeFiles.length) {\n              for (let file of this.getActiveFiles()){\n                  totalBytesSent += file.upload.bytesSent;\n                  totalBytes += file.upload.total;\n              }\n              totalUploadProgress = 100 * totalBytesSent / totalBytes;\n          } else totalUploadProgress = 100;\n          return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n      }\n      // @options.paramName can be a function taking one parameter rather than a string.\n      // A parameter name for a file is obtained simply by calling this with an index number.\n      _getParamName(n) {\n          if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n          else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n      }\n      // If @options.renameFile is a function,\n      // the function will be used to rename the file.name before appending it to the formData\n      _renameFile(file) {\n          if (typeof this.options.renameFile !== \"function\") return file.name;\n          return this.options.renameFile(file);\n      }\n      // Returns a form that can be used as fallback if the browser does not support DragnDrop\n      //\n      // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n      // This code has to pass in IE7 :(\n      getFallbackForm() {\n          let existingFallback, form;\n          if (existingFallback = this.getExistingFallback()) return existingFallback;\n          let fieldsString = '<div class=\"dz-fallback\">';\n          if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n          fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n          let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n          if (this.element.tagName !== \"FORM\") {\n              form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n              form.appendChild(fields);\n          } else {\n              // Make sure that the enctype and method attributes are set properly\n              this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n              this.element.setAttribute(\"method\", this.options.method);\n          }\n          return form != null ? form : fields;\n      }\n      // Returns the fallback elements if they exist already\n      //\n      // This code has to pass in IE7 :(\n      getExistingFallback() {\n          let getFallback = function(elements) {\n              for (let el of elements){\n                  if (/(^| )fallback($| )/.test(el.className)) return el;\n              }\n          };\n          for (let tagName of [\n              \"div\",\n              \"form\"\n          ]){\n              var fallback;\n              if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n          }\n      }\n      // Activates all listeners stored in @listeners\n      setupEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.addEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Deactivates all listeners stored in @listeners\n      removeEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.removeEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Removes all event listeners and cancels all files in the queue or being processed.\n      disable() {\n          this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n          );\n          this.removeEventListeners();\n          this.disabled = true;\n          return this.files.map((file)=>this.cancelUpload(file)\n          );\n      }\n      enable() {\n          delete this.disabled;\n          this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n          );\n          return this.setupEventListeners();\n      }\n      // Returns a nicely formatted filesize\n      filesize(size) {\n          let selectedSize = 0;\n          let selectedUnit = \"b\";\n          if (size > 0) {\n              let units = [\n                  \"tb\",\n                  \"gb\",\n                  \"mb\",\n                  \"kb\",\n                  \"b\"\n              ];\n              for(let i = 0; i < units.length; i++){\n                  let unit = units[i];\n                  let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                  if (size >= cutoff) {\n                      selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                      selectedUnit = unit;\n                      break;\n                  }\n              }\n              selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n          }\n          return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n      }\n      // Adds or removes the `dz-max-files-reached` class from the form.\n      _updateMaxFilesReachedClass() {\n          if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n              return this.element.classList.add(\"dz-max-files-reached\");\n          } else return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n      drop(e) {\n          if (!e.dataTransfer) return;\n          this.emit(\"drop\", e);\n          // Convert the FileList to an Array\n          // This is necessary for IE11\n          let files = [];\n          for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n          // Even if it's a folder, files.length will contain the folders.\n          if (files.length) {\n              let { items: items  } = e.dataTransfer;\n              if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n              this._addFilesFromItems(items);\n              else this.handleFiles(files);\n          }\n          this.emit(\"addedfiles\", files);\n      }\n      paste(e) {\n          if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n          ) == null) return;\n          this.emit(\"paste\", e);\n          let { items: items  } = e.clipboardData;\n          if (items.length) return this._addFilesFromItems(items);\n      }\n      handleFiles(files) {\n          for (let file of files)this.addFile(file);\n      }\n      // When a folder is dropped (or files are pasted), items must be handled\n      // instead of files.\n      _addFilesFromItems(items) {\n          return (()=>{\n              let result = [];\n              for (let item of items){\n                  var entry;\n                  if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                      if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                      else if (entry.isDirectory) // Append all files from that directory to files\n                      result.push(this._addFilesFromDirectory(entry, entry.name));\n                      else result.push(undefined);\n                  } else if (item.getAsFile != null) {\n                      if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                      else result.push(undefined);\n                  } else result.push(undefined);\n              }\n              return result;\n          })();\n      }\n      // Goes through the directory, and adds each file it finds recursively\n      _addFilesFromDirectory(directory, path) {\n          let dirReader = directory.createReader();\n          let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n              )\n          ;\n          var readEntries = ()=>{\n              return dirReader.readEntries((entries)=>{\n                  if (entries.length > 0) {\n                      for (let entry of entries){\n                          if (entry.isFile) entry.file((file)=>{\n                              if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                              file.fullPath = `${path}/${file.name}`;\n                              return this.addFile(file);\n                          });\n                          else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                      }\n                      // Recursively call readEntries() again, since browser only handle\n                      // the first 100 entries.\n                      // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                      readEntries();\n                  }\n                  return null;\n              }, errorHandler);\n          };\n          return readEntries();\n      }\n      // If `done()` is called without argument the file is accepted\n      // If you call it with an error message, the file is rejected\n      // (This allows for asynchronous validation)\n      //\n      // This function checks the filesize, and if the file.type passes the\n      // `acceptedFiles` check.\n      accept(file, done) {\n          if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n          else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n          else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n              this.emit(\"maxfilesexceeded\", file);\n          } else this.options.accept.call(this, file, done);\n      }\n      addFile(file) {\n          file.upload = {\n              uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n              progress: 0,\n              // Setting the total upload size to file.size for the beginning\n              // It's actual different than the size to be transmitted.\n              total: file.size,\n              bytesSent: 0,\n              filename: this._renameFile(file)\n          };\n          this.files.push(file);\n          file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n          this.emit(\"addedfile\", file);\n          this._enqueueThumbnail(file);\n          this.accept(file, (error)=>{\n              if (error) {\n                  file.accepted = false;\n                  this._errorProcessing([\n                      file\n                  ], error); // Will set the file.status\n              } else {\n                  file.accepted = true;\n                  if (this.options.autoQueue) this.enqueueFile(file);\n                   // Will set .accepted = true\n              }\n              this._updateMaxFilesReachedClass();\n          });\n      }\n      // Wrapper for enqueueFile\n      enqueueFiles(files) {\n          for (let file of files)this.enqueueFile(file);\n          return null;\n      }\n      enqueueFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n              if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n              , 0); // Deferring the call\n          } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n      _enqueueThumbnail(file) {\n          if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n              this._thumbnailQueue.push(file);\n              return setTimeout(()=>this._processThumbnailQueue()\n              , 0); // Deferring the call\n          }\n      }\n      _processThumbnailQueue() {\n          if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n          this._processingThumbnail = true;\n          let file = this._thumbnailQueue.shift();\n          return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n              this.emit(\"thumbnail\", file, dataUrl);\n              this._processingThumbnail = false;\n              return this._processThumbnailQueue();\n          });\n      }\n      // Can be called by the user to remove a file\n      removeFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n          this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n          this.emit(\"removedfile\", file);\n          if (this.files.length === 0) return this.emit(\"reset\");\n      }\n      // Removes all files that aren't currently processed from the list\n      removeAllFiles(cancelIfNecessary) {\n          // Create a copy of files since removeFile() changes the @files array.\n          if (cancelIfNecessary == null) cancelIfNecessary = false;\n          for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n          return null;\n      }\n      // Resizes an image before it gets sent to the server. This function is the default behavior of\n      // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n      // the resized blob.\n      resizeImage(file, width, height, resizeMethod, callback) {\n          return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n              if (canvas == null) // The image has not been resized\n              return callback(file);\n              else {\n                  let { resizeMimeType: resizeMimeType  } = this.options;\n                  if (resizeMimeType == null) resizeMimeType = file.type;\n                  let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                  if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                  resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                  return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n              }\n          });\n      }\n      createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n          let fileReader = new FileReader();\n          fileReader.onload = ()=>{\n              file.dataURL = fileReader.result;\n              // Don't bother creating a thumbnail for SVG images since they're vector\n              if (file.type === \"image/svg+xml\") {\n                  if (callback != null) callback(fileReader.result);\n                  return;\n              }\n              this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n          };\n          fileReader.readAsDataURL(file);\n      }\n      // `mockFile` needs to have these attributes:\n      //\n      //     { name: 'name', size: 12345, imageUrl: '' }\n      //\n      // `callback` will be invoked when the image has been downloaded and displayed.\n      // `crossOrigin` will be added to the `img` tag when accessing the file.\n      displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n          this.emit(\"addedfile\", mockFile);\n          this.emit(\"complete\", mockFile);\n          if (!resizeThumbnail) {\n              this.emit(\"thumbnail\", mockFile, imageUrl);\n              if (callback) callback();\n          } else {\n              let onDone = (thumbnail)=>{\n                  this.emit(\"thumbnail\", mockFile, thumbnail);\n                  if (callback) callback();\n              };\n              mockFile.dataURL = imageUrl;\n              this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n          }\n      }\n      createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n          // Not using `new Image` here because of a bug in latest Chrome versions.\n          // See https://github.com/enyo/dropzone/pull/226\n          let img = document.createElement(\"img\");\n          if (crossOrigin) img.crossOrigin = crossOrigin;\n          // fixOrientation is not needed anymore with browsers handling imageOrientation\n          fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n          img.onload = ()=>{\n              let loadExif = (callback)=>callback(1)\n              ;\n              if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                      return callback(EXIF.getTag(this, \"Orientation\"));\n                  })\n              ;\n              return loadExif((orientation)=>{\n                  file.width = img.width;\n                  file.height = img.height;\n                  let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                  let canvas = document.createElement(\"canvas\");\n                  let ctx = canvas.getContext(\"2d\");\n                  canvas.width = resizeInfo.trgWidth;\n                  canvas.height = resizeInfo.trgHeight;\n                  if (orientation > 4) {\n                      canvas.width = resizeInfo.trgHeight;\n                      canvas.height = resizeInfo.trgWidth;\n                  }\n                  switch(orientation){\n                      case 2:\n                          // horizontal flip\n                          ctx.translate(canvas.width, 0);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 3:\n                          // 180° rotate left\n                          ctx.translate(canvas.width, canvas.height);\n                          ctx.rotate(Math.PI);\n                          break;\n                      case 4:\n                          // vertical flip\n                          ctx.translate(0, canvas.height);\n                          ctx.scale(1, -1);\n                          break;\n                      case 5:\n                          // vertical flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.scale(1, -1);\n                          break;\n                      case 6:\n                          // 90° rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(0, -canvas.width);\n                          break;\n                      case 7:\n                          // horizontal flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(canvas.height, -canvas.width);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 8:\n                          // 90° rotate left\n                          ctx.rotate(-0.5 * Math.PI);\n                          ctx.translate(-canvas.height, 0);\n                          break;\n                  }\n                  // This is a bugfix for iOS' scaling bug.\n                  $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                  let thumbnail = canvas.toDataURL(\"image/png\");\n                  if (callback != null) return callback(thumbnail, canvas);\n              });\n          };\n          if (callback != null) img.onerror = callback;\n          return img.src = file.dataURL;\n      }\n      // Goes through the queue and processes files if there aren't too many already.\n      processQueue() {\n          let { parallelUploads: parallelUploads  } = this.options;\n          let processingLength = this.getUploadingFiles().length;\n          let i = processingLength;\n          // There are already at least as many files uploading than should be\n          if (processingLength >= parallelUploads) return;\n          let queuedFiles = this.getQueuedFiles();\n          if (!(queuedFiles.length > 0)) return;\n          if (this.options.uploadMultiple) // The files should be uploaded in one request\n          return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n          else while(i < parallelUploads){\n              if (!queuedFiles.length) return;\n               // Nothing left to process\n              this.processFile(queuedFiles.shift());\n              i++;\n          }\n      }\n      // Wrapper for `processFiles`\n      processFile(file) {\n          return this.processFiles([\n              file\n          ]);\n      }\n      // Loads the file, then calls finishedLoading()\n      processFiles(files) {\n          for (let file of files){\n              file.processing = true; // Backwards compatibility\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n              this.emit(\"processing\", file);\n          }\n          if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n          return this.uploadFiles(files);\n      }\n      _getFilesWithXhr(xhr) {\n          return this.files.filter((file)=>file.xhr === xhr\n          ).map((file)=>file\n          );\n      }\n      // Cancels the file upload and sets the status to CANCELED\n      // **if** the file is actually being uploaded.\n      // If it's still in the queue, the file is being removed from it and the status\n      // set to CANCELED.\n      cancelUpload(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n              let groupedFiles = this._getFilesWithXhr(file.xhr);\n              for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n              for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n          } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              this.emit(\"canceled\", file);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                  file\n              ]);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      resolveOption(option, ...args) {\n          if (typeof option === \"function\") return option.apply(this, args);\n          return option;\n      }\n      uploadFile(file) {\n          return this.uploadFiles([\n              file\n          ]);\n      }\n      uploadFiles(files) {\n          this._transformFiles(files, (transformedFiles)=>{\n              if (this.options.chunking) {\n                  // Chunking is not allowed to be used with `uploadMultiple` so we know\n                  // that there is only __one__file.\n                  let transformedFile = transformedFiles[0];\n                  files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                  files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n              }\n              if (files[0].upload.chunked) {\n                  // This file should be sent in chunks!\n                  // If the chunking option is set, we **know** that there can only be **one** file, since\n                  // uploadMultiple is not allowed with this option.\n                  let file = files[0];\n                  let transformedFile = transformedFiles[0];\n                  file.upload.chunks = [];\n                  let handleNextChunk = ()=>{\n                      let chunkIndex = 0;\n                      // Find the next item in file.upload.chunks that is not defined yet.\n                      while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                      // This means, that all chunks have already been started.\n                      if (chunkIndex >= file.upload.totalChunkCount) return;\n                      let start = chunkIndex * this.options.chunkSize;\n                      let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                      let dataBlock = {\n                          name: this._getParamName(0),\n                          data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                          filename: file.upload.filename,\n                          chunkIndex: chunkIndex\n                      };\n                      file.upload.chunks[chunkIndex] = {\n                          file: file,\n                          index: chunkIndex,\n                          dataBlock: dataBlock,\n                          status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                          progress: 0,\n                          retries: 0\n                      };\n                      this._uploadData(files, [\n                          dataBlock\n                      ]);\n                  };\n                  file.upload.finishedChunkUpload = (chunk, response)=>{\n                      let allFinished = true;\n                      chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                      // Clear the data from the chunk\n                      chunk.dataBlock = null;\n                      chunk.response = chunk.xhr.responseText;\n                      chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                      // Leaving this reference to xhr will cause memory leaks.\n                      chunk.xhr = null;\n                      for(let i = 0; i < file.upload.totalChunkCount; i++){\n                          if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                          if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                      }\n                      if (allFinished) this.options.chunksUploaded(file, ()=>{\n                          this._finished(files, response, null);\n                      });\n                  };\n                  if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                  else handleNextChunk();\n              } else {\n                  let dataBlocks = [];\n                  for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                      name: this._getParamName(i),\n                      data: transformedFiles[i],\n                      filename: files[i].upload.filename\n                  };\n                  this._uploadData(files, dataBlocks);\n              }\n          });\n      }\n      /// Returns the right chunk for given file and xhr\n      _getChunk(file, xhr) {\n          for(let i = 0; i < file.upload.totalChunkCount; i++){\n              if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n          }\n      }\n      // This function actually uploads the file(s) to the server.\n      //\n      //  If dataBlocks contains the actual data to upload (meaning, that this could\n      // either be transformed files, or individual chunks for chunked upload) then\n      // they will be used for the actual data to upload.\n      _uploadData(files, dataBlocks) {\n          let xhr = new XMLHttpRequest();\n          // Put the xhr object in the file objects to be able to reference it later.\n          for (let file of files)file.xhr = xhr;\n          if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n          // later, and found with _getChunk.\n          files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n          let method = this.resolveOption(this.options.method, files, dataBlocks);\n          let url = this.resolveOption(this.options.url, files, dataBlocks);\n          xhr.open(method, url, true);\n          // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n          let timeout = this.resolveOption(this.options.timeout, files);\n          if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n          // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n          xhr.withCredentials = !!this.options.withCredentials;\n          xhr.onload = (e)=>{\n              this._finishedUploading(files, xhr, e);\n          };\n          xhr.ontimeout = ()=>{\n              this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n          };\n          xhr.onerror = ()=>{\n              this._handleUploadError(files, xhr);\n          };\n          // Some browsers do not have the .upload property\n          let progressObj = xhr.upload != null ? xhr.upload : xhr;\n          progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n          ;\n          let headers = this.options.defaultHeaders ? {\n              Accept: \"application/json\",\n              \"Cache-Control\": \"no-cache\",\n              \"X-Requested-With\": \"XMLHttpRequest\"\n          } : {\n          };\n          if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n          if (this.options.headers) objectExtend(headers, this.options.headers);\n          for(let headerName in headers){\n              let headerValue = headers[headerName];\n              if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n          }\n          if (this.options.binaryBody) {\n              // Since the file is going to be sent as binary body, it doesn't make\n              // any sense to generate `FormData` for it.\n              for (let file of files)this.emit(\"sending\", file, xhr);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n              this.submitRequest(xhr, null, files);\n          } else {\n              let formData = new FormData();\n              // Adding all @options parameters\n              if (this.options.params) {\n                  let additionalParams = this.options.params;\n                  if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                  for(let key in additionalParams){\n                      let value = additionalParams[key];\n                      if (Array.isArray(value)) // The additional parameter contains an array,\n                      // so lets iterate over it to attach each value\n                      // individually.\n                      for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                      else formData.append(key, value);\n                  }\n              }\n              // Let the user add additional data if necessary\n              for (let file of files)this.emit(\"sending\", file, xhr, formData);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n              this._addFormElementData(formData);\n              // Finally add the files\n              // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n              for(let i = 0; i < dataBlocks.length; i++){\n                  let dataBlock = dataBlocks[i];\n                  formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n              }\n              this.submitRequest(xhr, formData, files);\n          }\n      }\n      // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n      _transformFiles(files, done) {\n          let transformedFiles = [];\n          // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n          let doneCounter = 0;\n          for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n              transformedFiles[i] = transformedFile;\n              if (++doneCounter === files.length) done(transformedFiles);\n          });\n      }\n      // Takes care of adding other input elements of the form to the AJAX request\n      _addFormElementData(formData) {\n          // Take care of other input elements\n          if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n              let inputName = input.getAttribute(\"name\");\n              let inputType = input.getAttribute(\"type\");\n              if (inputType) inputType = inputType.toLowerCase();\n              // If the input doesn't have a name, we can't use it.\n              if (typeof inputName === \"undefined\" || inputName === null) continue;\n              if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                  // Possibly multiple values\n                  for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n              } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n          }\n      }\n      // Invoked when there is new progress information about given files.\n      // If e is not provided, it is assumed that the upload is finished.\n      _updateFilesUploadProgress(files, xhr, e) {\n          if (!files[0].upload.chunked) // Handle file uploads without chunking\n          for (let file of files){\n              if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n              if (e) {\n                  file.upload.progress = 100 * e.loaded / e.total;\n                  file.upload.total = e.total;\n                  file.upload.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  file.upload.progress = 100;\n                  file.upload.bytesSent = file.upload.total;\n              }\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n          else {\n              // Handle chunked file uploads\n              // Chunked upload is not compatible with uploading multiple files in one\n              // request, so we know there's only one file.\n              let file = files[0];\n              // Since this is a chunked upload, we need to update the appropriate chunk\n              // progress.\n              let chunk = this._getChunk(file, xhr);\n              if (e) {\n                  chunk.progress = 100 * e.loaded / e.total;\n                  chunk.total = e.total;\n                  chunk.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  chunk.progress = 100;\n                  chunk.bytesSent = chunk.total;\n              }\n              // Now tally the *file* upload progress from its individual chunks\n              file.upload.progress = 0;\n              file.upload.total = 0;\n              file.upload.bytesSent = 0;\n              for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                  file.upload.progress += file.upload.chunks[i].progress;\n                  file.upload.total += file.upload.chunks[i].total;\n                  file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n              }\n              // Since the process is a percentage, we need to divide by the amount of\n              // chunks we've used.\n              file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n      }\n      _finishedUploading(files, xhr, e) {\n          let response;\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (xhr.readyState !== 4) return;\n          if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n              response = xhr.responseText;\n              if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                  response = JSON.parse(response);\n              } catch (error) {\n                  e = error;\n                  response = \"Invalid JSON response from server.\";\n              }\n          }\n          this._updateFilesUploadProgress(files, xhr);\n          if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n          else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n          else this._finished(files, response, e);\n      }\n      _handleUploadError(files, xhr, response) {\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (files[0].upload.chunked && this.options.retryChunks) {\n              let chunk = this._getChunk(files[0], xhr);\n              if ((chunk.retries++) < this.options.retryChunksLimit) {\n                  this._uploadData(files, [\n                      chunk.dataBlock\n                  ]);\n                  return;\n              } else console.warn(\"Retried this chunk too often. Giving up.\");\n          }\n          this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n      }\n      submitRequest(xhr, formData, files) {\n          if (xhr.readyState != 1) {\n              console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n              return;\n          }\n          if (this.options.binaryBody) {\n              if (files[0].upload.chunked) {\n                  const chunk = this._getChunk(files[0], xhr);\n                  xhr.send(chunk.dataBlock.data);\n              } else xhr.send(files[0]);\n          } else xhr.send(formData);\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _finished(files, responseText, e) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n              this.emit(\"success\", file, responseText, e);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"successmultiple\", files, responseText, e);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _errorProcessing(files, message, xhr) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n              this.emit(\"error\", file, message, xhr);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"errormultiple\", files, message, xhr);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      static uuidv4() {\n          return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n              let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n              return v.toString(16);\n          });\n      }\n      constructor(el, options){\n          super();\n          let fallback, left;\n          this.element = el;\n          this.clickableElements = [];\n          this.listeners = [];\n          this.files = []; // All files\n          if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n          // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n          if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n          if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n          // Now add this dropzone to the instances.\n          $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n          // Put the dropzone inside the element itself.\n          this.element.dropzone = this;\n          let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n          };\n          this.options = objectExtend(true, {\n          }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n          });\n          this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n          // If the browser failed, just call the fallback and leave\n          if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n          // @options.url = @element.getAttribute \"action\" unless @options.url?\n          if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n          if (!this.options.url) throw new Error(\"No URL provided.\");\n          if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n          if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n          if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n          // Backwards compatibility\n          if (this.options.acceptedMimeTypes) {\n              this.options.acceptedFiles = this.options.acceptedMimeTypes;\n              delete this.options.acceptedMimeTypes;\n          }\n          // Backwards compatibility\n          if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n          ;\n          if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n          if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n          fallback.parentNode.removeChild(fallback);\n          // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n          if (this.options.previewsContainer !== false) {\n              if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n              else this.previewsContainer = this.element;\n          }\n          if (this.options.clickable) {\n              if (this.options.clickable === true) this.clickableElements = [\n                  this.element\n              ];\n              else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n          }\n          this.init();\n      }\n  }\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n  // This is a map of options for your different dropzones. Add configurations\n  // to this object for your different dropzone elemens.\n  //\n  // Example:\n  //\n  //     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n  //\n  // And in html:\n  //\n  //     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n  };\n  // Returns the options for an element or undefined if none available.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n      // Get the `Dropzone.options.elementId` for this element if it exists\n      if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n      else return undefined;\n  };\n  // Holds a list of all dropzone instances\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n  // Returns the dropzone for given element if any\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n      if (typeof element === \"string\") element = document.querySelector(element);\n      if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n      return element.dropzone;\n  };\n  // Looks for all .dropzone elements and creates a dropzone for them\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n      let dropzones;\n      if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n      else {\n          dropzones = [];\n          // IE :(\n          let checkElements = (elements)=>(()=>{\n                  let result = [];\n                  for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                  else result.push(undefined);\n                  return result;\n              })()\n          ;\n          checkElements(document.getElementsByTagName(\"div\"));\n          checkElements(document.getElementsByTagName(\"form\"));\n      }\n      return (()=>{\n          let result = [];\n          for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n          if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n          else result.push(undefined);\n          return result;\n      })();\n  };\n  // Some browsers support drag and drog functionality, but not correctly.\n  //\n  // So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n  // But what to do when browsers *theoretically* support an API, but crash\n  // when using it.\n  //\n  // This is a list of regular expressions tested against navigator.userAgent\n  //\n  // ** It should only be used on browser that *do* support the API, but\n  // incorrectly **\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n      // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n      /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n  ];\n  // Checks if the browser is supported\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n      let capableBrowser = true;\n      if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n          if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n          else {\n              if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n              // configuration.\n              $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n              // The browser supports the API, but may be blocked.\n              for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                  capableBrowser = false;\n                  continue;\n              }\n          }\n      } else capableBrowser = false;\n      return capableBrowser;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n      // convert base64 to raw binary data held in a string\n      // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n      let byteString = atob(dataURI.split(\",\")[1]);\n      // separate out the mime component\n      let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n      // write the bytes of the string to an ArrayBuffer\n      let ab = new ArrayBuffer(byteString.length);\n      let ia = new Uint8Array(ab);\n      for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n      // write the ArrayBuffer to a blob\n      return new Blob([\n          ab\n      ], {\n          type: mimeString\n      });\n  };\n  // Returns an array without the rejected item\n  const $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n      ).map((item)=>item\n      )\n  ;\n  // abc-def_ghi -> abcDefGhi\n  const $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n      )\n  ;\n  // Creates an element from string\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n      let div = document.createElement(\"div\");\n      div.innerHTML = string;\n      return div.childNodes[0];\n  };\n  // Tests if given element is inside (or simply is) the container\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n      if (element === container) return true;\n       // Coffeescript doesn't support do/while loops\n      while(element = element.parentNode){\n          if (element === container) return true;\n      }\n      return false;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n      let element;\n      if (typeof el === \"string\") element = document.querySelector(el);\n      else if (el.nodeType != null) element = el;\n      if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n      return element;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n      let el, elements;\n      if (els instanceof Array) {\n          elements = [];\n          try {\n              for (el of els)elements.push(this.getElement(el, name));\n          } catch (e) {\n              elements = null;\n          }\n      } else if (typeof els === \"string\") {\n          elements = [];\n          for (el of document.querySelectorAll(els))elements.push(el);\n      } else if (els.nodeType != null) elements = [\n          els\n      ];\n      if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n      return elements;\n  };\n  // Asks the user the question and calls accepted or rejected accordingly\n  //\n  // The default implementation just uses `window.confirm` and then calls the\n  // appropriate callback.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n      if (window.confirm(question)) return accepted();\n      else if (rejected != null) return rejected();\n  };\n  // Validates the mime type like this:\n  //\n  // https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n      if (!acceptedFiles) return true;\n       // If there are no accepted mime types, it's OK\n      acceptedFiles = acceptedFiles.split(\",\");\n      let mimeType = file.type;\n      let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n      for (let validType of acceptedFiles){\n          validType = validType.trim();\n          if (validType.charAt(0) === \".\") {\n              if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n          } else if (/\\/\\*$/.test(validType)) {\n              // This is something like a image/* mime type\n              if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n          } else {\n              if (mimeType === validType) return true;\n          }\n      }\n      return false;\n  };\n  // Augment jQuery\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n          return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n      });\n  };\n  // Dropzone file status codes\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n  // For backwards compatibility. Now, if a file is accepted, it's either queued\n  // or uploading.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n  /*\n\n   Bugfix for iOS 6 and 7\n   Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n   based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n   */ // Detecting vertical squash in loaded image.\n  // Fixes a bug which squash image vertically while drawing into canvas for some images.\n  // This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n  let $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n      img.naturalWidth;\n      let ih = img.naturalHeight;\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = ih;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n      // search image edge pixel position in case it is squashed vertically.\n      let sy = 0;\n      let ey = ih;\n      let py = ih;\n      while(py > sy){\n          let alpha = data[(py - 1) * 4 + 3];\n          if (alpha === 0) ey = py;\n          else sy = py;\n          py = ey + sy >> 1;\n      }\n      let ratio = py / ih;\n      if (ratio === 0) return 1;\n      else return ratio;\n  };\n  // A replacement for context.drawImage\n  // (args are for source and destination).\n  var $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n      return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n  // Based on MinifyJpeg\n  // Source: http://www.perry.cz/files/ExifRestorer.js\n  // http://elicon.blog57.fc2.com/blog-entry-206.html\n  class $3ed269f2f0fb224b$var$ExifRestore {\n      static initClass() {\n          this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      }\n      static encode64(input) {\n          let output = \"\";\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          while(true){\n              chr1 = input[i++];\n              chr2 = input[i++];\n              chr3 = input[i++];\n              enc1 = chr1 >> 2;\n              enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n              enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n              enc4 = chr3 & 63;\n              if (isNaN(chr2)) enc3 = enc4 = 64;\n              else if (isNaN(chr3)) enc4 = 64;\n              output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return output;\n      }\n      static restore(origFileBase64, resizedFileBase64) {\n          if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n          let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n          let segments = this.slice2Segments(rawImage);\n          let image = this.exifManipulation(resizedFileBase64, segments);\n          return `data:image/jpeg;base64,${this.encode64(image)}`;\n      }\n      static exifManipulation(resizedFileBase64, segments) {\n          let exifArray = this.getExifArray(segments);\n          let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n          let aBuffer = new Uint8Array(newImageArray);\n          return aBuffer;\n      }\n      static getExifArray(segments) {\n          let seg = undefined;\n          let x = 0;\n          while(x < segments.length){\n              seg = segments[x];\n              if (seg[0] === 255 & seg[1] === 225) return seg;\n              x++;\n          }\n          return [];\n      }\n      static insertExif(resizedFileBase64, exifArray) {\n          let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n          let buf = this.decode64(imageData);\n          let separatePoint = buf.indexOf(255, 3);\n          let mae = buf.slice(0, separatePoint);\n          let ato = buf.slice(separatePoint);\n          let array = mae;\n          array = array.concat(exifArray);\n          array = array.concat(ato);\n          return array;\n      }\n      static slice2Segments(rawImageArray) {\n          let head = 0;\n          let segments = [];\n          while(true){\n              var length;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n              else {\n                  length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                  let endPoint = head + length + 2;\n                  let seg = rawImageArray.slice(head, endPoint);\n                  segments.push(seg);\n                  head = endPoint;\n              }\n              if (head > rawImageArray.length) break;\n          }\n          return segments;\n      }\n      static decode64(input) {\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          let buf = [];\n          // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n          let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n          if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n          input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n          while(true){\n              enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n              chr1 = enc1 << 2 | enc2 >> 4;\n              chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n              chr3 = (enc3 & 3) << 6 | enc4;\n              buf.push(chr1);\n              if (enc3 !== 64) buf.push(chr2);\n              if (enc4 !== 64) buf.push(chr3);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return buf;\n      }\n  }\n  $3ed269f2f0fb224b$var$ExifRestore.initClass();\n  function $3ed269f2f0fb224b$var$__guard__(value, transform) {\n      return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n  }\n  function $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n      if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n      else return undefined;\n  }\n\n  if (document.querySelector('div.form__dropzone')) {\n    new $3ed269f2f0fb224b$export$2e2bcd8739ae039(\"div.form__dropzone\", {\n      url: \"/file/post\",\n      createImageThumbnails: false,\n      dictDefaultMessage: 'Here'\n    });\n  }\n\n  const HOOKS = [\n      \"onChange\",\n      \"onClose\",\n      \"onDayCreate\",\n      \"onDestroy\",\n      \"onKeyDown\",\n      \"onMonthChange\",\n      \"onOpen\",\n      \"onParseConfig\",\n      \"onReady\",\n      \"onValueUpdate\",\n      \"onYearChange\",\n      \"onPreCalendarPosition\",\n  ];\n  const defaults = {\n      _disable: [],\n      allowInput: false,\n      allowInvalidPreload: false,\n      altFormat: \"F j, Y\",\n      altInput: false,\n      altInputClass: \"form-control input\",\n      animate: typeof window === \"object\" &&\n          window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n      ariaDateFormat: \"F j, Y\",\n      autoFillDefaultTime: true,\n      clickOpens: true,\n      closeOnSelect: true,\n      conjunction: \", \",\n      dateFormat: \"Y-m-d\",\n      defaultHour: 12,\n      defaultMinute: 0,\n      defaultSeconds: 0,\n      disable: [],\n      disableMobile: false,\n      enableSeconds: false,\n      enableTime: false,\n      errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n      getWeek: (givenDate) => {\n          const date = new Date(givenDate.getTime());\n          date.setHours(0, 0, 0, 0);\n          date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n          var week1 = new Date(date.getFullYear(), 0, 4);\n          return (1 +\n              Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                  3 +\n                  ((week1.getDay() + 6) % 7)) /\n                  7));\n      },\n      hourIncrement: 1,\n      ignoredFocusElements: [],\n      inline: false,\n      locale: \"default\",\n      minuteIncrement: 5,\n      mode: \"single\",\n      monthSelectorType: \"dropdown\",\n      nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n      noCalendar: false,\n      now: new Date(),\n      onChange: [],\n      onClose: [],\n      onDayCreate: [],\n      onDestroy: [],\n      onKeyDown: [],\n      onMonthChange: [],\n      onOpen: [],\n      onParseConfig: [],\n      onReady: [],\n      onValueUpdate: [],\n      onYearChange: [],\n      onPreCalendarPosition: [],\n      plugins: [],\n      position: \"auto\",\n      positionElement: undefined,\n      prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n      shorthandCurrentMonth: false,\n      showMonths: 1,\n      static: false,\n      time_24hr: false,\n      weekNumbers: false,\n      wrap: false,\n  };\n\n  const english = {\n      weekdays: {\n          shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n          longhand: [\n              \"Sunday\",\n              \"Monday\",\n              \"Tuesday\",\n              \"Wednesday\",\n              \"Thursday\",\n              \"Friday\",\n              \"Saturday\",\n          ],\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"May\",\n              \"Jun\",\n              \"Jul\",\n              \"Aug\",\n              \"Sep\",\n              \"Oct\",\n              \"Nov\",\n              \"Dec\",\n          ],\n          longhand: [\n              \"January\",\n              \"February\",\n              \"March\",\n              \"April\",\n              \"May\",\n              \"June\",\n              \"July\",\n              \"August\",\n              \"September\",\n              \"October\",\n              \"November\",\n              \"December\",\n          ],\n      },\n      daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n      firstDayOfWeek: 0,\n      ordinal: (nth) => {\n          const s = nth % 100;\n          if (s > 3 && s < 21)\n              return \"th\";\n          switch (s % 10) {\n              case 1:\n                  return \"st\";\n              case 2:\n                  return \"nd\";\n              case 3:\n                  return \"rd\";\n              default:\n                  return \"th\";\n          }\n      },\n      rangeSeparator: \" to \",\n      weekAbbreviation: \"Wk\",\n      scrollTitle: \"Scroll to increment\",\n      toggleTitle: \"Click to toggle\",\n      amPM: [\"AM\", \"PM\"],\n      yearAriaLabel: \"Year\",\n      monthAriaLabel: \"Month\",\n      hourAriaLabel: \"Hour\",\n      minuteAriaLabel: \"Minute\",\n      time_24hr: false,\n  };\n\n  const pad = (number, length = 2) => `000${number}`.slice(length * -1);\n  const int = (bool) => (bool === true ? 1 : 0);\n  function debounce(fn, wait) {\n      let t;\n      return function () {\n          clearTimeout(t);\n          t = setTimeout(() => fn.apply(this, arguments), wait);\n      };\n  }\n  const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n\n  function toggleClass(elem, className, bool) {\n      if (bool === true)\n          return elem.classList.add(className);\n      elem.classList.remove(className);\n  }\n  function createElement(tag, className, content) {\n      const e = window.document.createElement(tag);\n      className = className || \"\";\n      content = content || \"\";\n      e.className = className;\n      if (content !== undefined)\n          e.textContent = content;\n      return e;\n  }\n  function clearNode(node) {\n      while (node.firstChild)\n          node.removeChild(node.firstChild);\n  }\n  function findParent(node, condition) {\n      if (condition(node))\n          return node;\n      else if (node.parentNode)\n          return findParent(node.parentNode, condition);\n      return undefined;\n  }\n  function createNumberInput(inputClassName, opts) {\n      const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n      if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n          numInput.type = \"number\";\n      }\n      else {\n          numInput.type = \"text\";\n          numInput.pattern = \"\\\\d*\";\n      }\n      if (opts !== undefined)\n          for (const key in opts)\n              numInput.setAttribute(key, opts[key]);\n      wrapper.appendChild(numInput);\n      wrapper.appendChild(arrowUp);\n      wrapper.appendChild(arrowDown);\n      return wrapper;\n  }\n  function getEventTarget(event) {\n      try {\n          if (typeof event.composedPath === \"function\") {\n              const path = event.composedPath();\n              return path[0];\n          }\n          return event.target;\n      }\n      catch (error) {\n          return event.target;\n      }\n  }\n\n  const doNothing = () => undefined;\n  const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n  const revFormat = {\n      D: doNothing,\n      F: function (dateObj, monthName, locale) {\n          dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n      },\n      G: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      H: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      J: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      K: (dateObj, amPM, locale) => {\n          dateObj.setHours((dateObj.getHours() % 12) +\n              12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n      },\n      M: function (dateObj, shortMonth, locale) {\n          dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n      },\n      S: (dateObj, seconds) => {\n          dateObj.setSeconds(parseFloat(seconds));\n      },\n      U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n      W: function (dateObj, weekNum, locale) {\n          const weekNumber = parseInt(weekNum);\n          const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n          date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n          return date;\n      },\n      Y: (dateObj, year) => {\n          dateObj.setFullYear(parseFloat(year));\n      },\n      Z: (_, ISODate) => new Date(ISODate),\n      d: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      h: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      i: (dateObj, minutes) => {\n          dateObj.setMinutes(parseFloat(minutes));\n      },\n      j: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      l: doNothing,\n      m: (dateObj, month) => {\n          dateObj.setMonth(parseFloat(month) - 1);\n      },\n      n: (dateObj, month) => {\n          dateObj.setMonth(parseFloat(month) - 1);\n      },\n      s: (dateObj, seconds) => {\n          dateObj.setSeconds(parseFloat(seconds));\n      },\n      u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n      w: doNothing,\n      y: (dateObj, year) => {\n          dateObj.setFullYear(2000 + parseFloat(year));\n      },\n  };\n  const tokenRegex = {\n      D: \"(\\\\w+)\",\n      F: \"(\\\\w+)\",\n      G: \"(\\\\d\\\\d|\\\\d)\",\n      H: \"(\\\\d\\\\d|\\\\d)\",\n      J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n      K: \"\",\n      M: \"(\\\\w+)\",\n      S: \"(\\\\d\\\\d|\\\\d)\",\n      U: \"(.+)\",\n      W: \"(\\\\d\\\\d|\\\\d)\",\n      Y: \"(\\\\d{4})\",\n      Z: \"(.+)\",\n      d: \"(\\\\d\\\\d|\\\\d)\",\n      h: \"(\\\\d\\\\d|\\\\d)\",\n      i: \"(\\\\d\\\\d|\\\\d)\",\n      j: \"(\\\\d\\\\d|\\\\d)\",\n      l: \"(\\\\w+)\",\n      m: \"(\\\\d\\\\d|\\\\d)\",\n      n: \"(\\\\d\\\\d|\\\\d)\",\n      s: \"(\\\\d\\\\d|\\\\d)\",\n      u: \"(.+)\",\n      w: \"(\\\\d\\\\d|\\\\d)\",\n      y: \"(\\\\d{2})\",\n  };\n  const formats = {\n      Z: (date) => date.toISOString(),\n      D: function (date, locale, options) {\n          return locale.weekdays.shorthand[formats.w(date, locale, options)];\n      },\n      F: function (date, locale, options) {\n          return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n      },\n      G: function (date, locale, options) {\n          return pad(formats.h(date, locale, options));\n      },\n      H: (date) => pad(date.getHours()),\n      J: function (date, locale) {\n          return locale.ordinal !== undefined\n              ? date.getDate() + locale.ordinal(date.getDate())\n              : date.getDate();\n      },\n      K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n      M: function (date, locale) {\n          return monthToStr(date.getMonth(), true, locale);\n      },\n      S: (date) => pad(date.getSeconds()),\n      U: (date) => date.getTime() / 1000,\n      W: function (date, _, options) {\n          return options.getWeek(date);\n      },\n      Y: (date) => pad(date.getFullYear(), 4),\n      d: (date) => pad(date.getDate()),\n      h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n      i: (date) => pad(date.getMinutes()),\n      j: (date) => date.getDate(),\n      l: function (date, locale) {\n          return locale.weekdays.longhand[date.getDay()];\n      },\n      m: (date) => pad(date.getMonth() + 1),\n      n: (date) => date.getMonth() + 1,\n      s: (date) => date.getSeconds(),\n      u: (date) => date.getTime(),\n      w: (date) => date.getDay(),\n      y: (date) => String(date.getFullYear()).substring(2),\n  };\n\n  const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n      const locale = overrideLocale || l10n;\n      if (config.formatDate !== undefined && !isMobile) {\n          return config.formatDate(dateObj, frmt, locale);\n      }\n      return frmt\n          .split(\"\")\n          .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n          ? formats[c](dateObj, locale, config)\n          : c !== \"\\\\\"\n              ? c\n              : \"\")\n          .join(\"\");\n  };\n  const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n      if (date !== 0 && !date)\n          return undefined;\n      const locale = customLocale || l10n;\n      let parsedDate;\n      const dateOrig = date;\n      if (date instanceof Date)\n          parsedDate = new Date(date.getTime());\n      else if (typeof date !== \"string\" &&\n          date.toFixed !== undefined)\n          parsedDate = new Date(date);\n      else if (typeof date === \"string\") {\n          const format = givenFormat || (config || defaults).dateFormat;\n          const datestr = String(date).trim();\n          if (datestr === \"today\") {\n              parsedDate = new Date();\n              timeless = true;\n          }\n          else if (/Z$/.test(datestr) ||\n              /GMT$/.test(datestr))\n              parsedDate = new Date(date);\n          else if (config && config.parseDate)\n              parsedDate = config.parseDate(date, format);\n          else {\n              parsedDate =\n                  !config || !config.noCalendar\n                      ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                      : new Date(new Date().setHours(0, 0, 0, 0));\n              let matched, ops = [];\n              for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                  const token = format[i];\n                  const isBackSlash = token === \"\\\\\";\n                  const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                  if (tokenRegex[token] && !escaped) {\n                      regexStr += tokenRegex[token];\n                      const match = new RegExp(regexStr).exec(date);\n                      if (match && (matched = true)) {\n                          ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                              fn: revFormat[token],\n                              val: match[++matchIndex],\n                          });\n                      }\n                  }\n                  else if (!isBackSlash)\n                      regexStr += \".\";\n                  ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n              }\n              parsedDate = matched ? parsedDate : undefined;\n          }\n      }\n      if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n          config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n          return undefined;\n      }\n      if (timeless === true)\n          parsedDate.setHours(0, 0, 0, 0);\n      return parsedDate;\n  };\n  function compareDates(date1, date2, timeless = true) {\n      if (timeless !== false) {\n          return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n              new Date(date2.getTime()).setHours(0, 0, 0, 0));\n      }\n      return date1.getTime() - date2.getTime();\n  }\n  const isBetween = (ts, ts1, ts2) => {\n      return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n  };\n  const duration = {\n      DAY: 86400000,\n  };\n  function getDefaultHours(config) {\n      let hours = config.defaultHour;\n      let minutes = config.defaultMinute;\n      let seconds = config.defaultSeconds;\n      if (config.minDate !== undefined) {\n          const minHour = config.minDate.getHours();\n          const minMinutes = config.minDate.getMinutes();\n          const minSeconds = config.minDate.getSeconds();\n          if (hours < minHour) {\n              hours = minHour;\n          }\n          if (hours === minHour && minutes < minMinutes) {\n              minutes = minMinutes;\n          }\n          if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n              seconds = config.minDate.getSeconds();\n      }\n      if (config.maxDate !== undefined) {\n          const maxHr = config.maxDate.getHours();\n          const maxMinutes = config.maxDate.getMinutes();\n          hours = Math.min(hours, maxHr);\n          if (hours === maxHr)\n              minutes = Math.min(maxMinutes, minutes);\n          if (hours === maxHr && minutes === maxMinutes)\n              seconds = config.maxDate.getSeconds();\n      }\n      return { hours, minutes, seconds };\n  }\n\n  if (typeof Object.assign !== \"function\") {\n      Object.assign = function (target, ...args) {\n          if (!target) {\n              throw TypeError(\"Cannot convert undefined or null to object\");\n          }\n          for (const source of args) {\n              if (source) {\n                  Object.keys(source).forEach((key) => (target[key] = source[key]));\n              }\n          }\n          return target;\n      };\n  }\n\n  const DEBOUNCED_CHANGE_MS = 300;\n  function FlatpickrInstance(element, instanceConfig) {\n      const self = {\n          config: Object.assign(Object.assign({}, defaults), flatpickr.defaultConfig),\n          l10n: english,\n      };\n      self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n      self._handlers = [];\n      self.pluginElements = [];\n      self.loadedPlugins = [];\n      self._bind = bind;\n      self._setHoursFromDate = setHoursFromDate;\n      self._positionCalendar = positionCalendar;\n      self.changeMonth = changeMonth;\n      self.changeYear = changeYear;\n      self.clear = clear;\n      self.close = close;\n      self._createElement = createElement;\n      self.destroy = destroy;\n      self.isEnabled = isEnabled;\n      self.jumpToDate = jumpToDate;\n      self.open = open;\n      self.redraw = redraw;\n      self.set = set;\n      self.setDate = setDate;\n      self.toggle = toggle;\n      function setupHelperFunctions() {\n          self.utils = {\n              getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                  if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                      return 29;\n                  return self.l10n.daysInMonth[month];\n              },\n          };\n      }\n      function init() {\n          self.element = self.input = element;\n          self.isOpen = false;\n          parseConfig();\n          setupLocale();\n          setupInputs();\n          setupDates();\n          setupHelperFunctions();\n          if (!self.isMobile)\n              build();\n          bindEvents();\n          if (self.selectedDates.length || self.config.noCalendar) {\n              if (self.config.enableTime) {\n                  setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n              }\n              updateValue(false);\n          }\n          setCalendarWidth();\n          const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n          if (!self.isMobile && isSafari) {\n              positionCalendar();\n          }\n          triggerEvent(\"onReady\");\n      }\n      function bindToInstance(fn) {\n          return fn.bind(self);\n      }\n      function setCalendarWidth() {\n          const config = self.config;\n          if (config.weekNumbers === false && config.showMonths === 1) {\n              return;\n          }\n          else if (config.noCalendar !== true) {\n              window.requestAnimationFrame(function () {\n                  if (self.calendarContainer !== undefined) {\n                      self.calendarContainer.style.visibility = \"hidden\";\n                      self.calendarContainer.style.display = \"block\";\n                  }\n                  if (self.daysContainer !== undefined) {\n                      const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                      self.daysContainer.style.width = daysWidth + \"px\";\n                      self.calendarContainer.style.width =\n                          daysWidth +\n                              (self.weekWrapper !== undefined\n                                  ? self.weekWrapper.offsetWidth\n                                  : 0) +\n                              \"px\";\n                      self.calendarContainer.style.removeProperty(\"visibility\");\n                      self.calendarContainer.style.removeProperty(\"display\");\n                  }\n              });\n          }\n      }\n      function updateTime(e) {\n          if (self.selectedDates.length === 0) {\n              const defaultDate = self.config.minDate === undefined ||\n                  compareDates(new Date(), self.config.minDate) >= 0\n                  ? new Date()\n                  : new Date(self.config.minDate.getTime());\n              const defaults = getDefaultHours(self.config);\n              defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n              self.selectedDates = [defaultDate];\n              self.latestSelectedDateObj = defaultDate;\n          }\n          if (e !== undefined && e.type !== \"blur\") {\n              timeWrapper(e);\n          }\n          const prevValue = self._input.value;\n          setHoursFromInputs();\n          updateValue();\n          if (self._input.value !== prevValue) {\n              self._debouncedChange();\n          }\n      }\n      function ampm2military(hour, amPM) {\n          return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n      }\n      function military2ampm(hour) {\n          switch (hour % 24) {\n              case 0:\n              case 12:\n                  return 12;\n              default:\n                  return hour % 12;\n          }\n      }\n      function setHoursFromInputs() {\n          if (self.hourElement === undefined || self.minuteElement === undefined)\n              return;\n          let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n              ? (parseInt(self.secondElement.value, 10) || 0) % 60\n              : 0;\n          if (self.amPM !== undefined) {\n              hours = ampm2military(hours, self.amPM.textContent);\n          }\n          const limitMinHours = self.config.minTime !== undefined ||\n              (self.config.minDate &&\n                  self.minDateHasTime &&\n                  self.latestSelectedDateObj &&\n                  compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                      0);\n          const limitMaxHours = self.config.maxTime !== undefined ||\n              (self.config.maxDate &&\n                  self.maxDateHasTime &&\n                  self.latestSelectedDateObj &&\n                  compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                      0);\n          if (limitMaxHours) {\n              const maxTime = self.config.maxTime !== undefined\n                  ? self.config.maxTime\n                  : self.config.maxDate;\n              hours = Math.min(hours, maxTime.getHours());\n              if (hours === maxTime.getHours())\n                  minutes = Math.min(minutes, maxTime.getMinutes());\n              if (minutes === maxTime.getMinutes())\n                  seconds = Math.min(seconds, maxTime.getSeconds());\n          }\n          if (limitMinHours) {\n              const minTime = self.config.minTime !== undefined\n                  ? self.config.minTime\n                  : self.config.minDate;\n              hours = Math.max(hours, minTime.getHours());\n              if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                  minutes = minTime.getMinutes();\n              if (minutes === minTime.getMinutes())\n                  seconds = Math.max(seconds, minTime.getSeconds());\n          }\n          setHours(hours, minutes, seconds);\n      }\n      function setHoursFromDate(dateObj) {\n          const date = dateObj || self.latestSelectedDateObj;\n          if (date) {\n              setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n          }\n      }\n      function setHours(hours, minutes, seconds) {\n          if (self.latestSelectedDateObj !== undefined) {\n              self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n          }\n          if (!self.hourElement || !self.minuteElement || self.isMobile)\n              return;\n          self.hourElement.value = pad(!self.config.time_24hr\n              ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n              : hours);\n          self.minuteElement.value = pad(minutes);\n          if (self.amPM !== undefined)\n              self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n          if (self.secondElement !== undefined)\n              self.secondElement.value = pad(seconds);\n      }\n      function onYearInput(event) {\n          const eventTarget = getEventTarget(event);\n          const year = parseInt(eventTarget.value) + (event.delta || 0);\n          if (year / 1000 > 1 ||\n              (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n              changeYear(year);\n          }\n      }\n      function bind(element, event, handler, options) {\n          if (event instanceof Array)\n              return event.forEach((ev) => bind(element, ev, handler, options));\n          if (element instanceof Array)\n              return element.forEach((el) => bind(el, event, handler, options));\n          element.addEventListener(event, handler, options);\n          self._handlers.push({\n              remove: () => element.removeEventListener(event, handler),\n          });\n      }\n      function triggerChange() {\n          triggerEvent(\"onChange\");\n      }\n      function bindEvents() {\n          if (self.config.wrap) {\n              [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                  Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n              });\n          }\n          if (self.isMobile) {\n              setupMobile();\n              return;\n          }\n          const debouncedResize = debounce(onResize, 50);\n          self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n          if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n              bind(self.daysContainer, \"mouseover\", (e) => {\n                  if (self.config.mode === \"range\")\n                      onMouseOver(getEventTarget(e));\n              });\n          bind(window.document.body, \"keydown\", onKeyDown);\n          if (!self.config.inline && !self.config.static)\n              bind(window, \"resize\", debouncedResize);\n          if (window.ontouchstart !== undefined)\n              bind(window.document, \"touchstart\", documentClick);\n          else\n              bind(window.document, \"mousedown\", documentClick);\n          bind(window.document, \"focus\", documentClick, { capture: true });\n          if (self.config.clickOpens === true) {\n              bind(self._input, \"focus\", self.open);\n              bind(self._input, \"click\", self.open);\n          }\n          if (self.daysContainer !== undefined) {\n              bind(self.monthNav, \"click\", onMonthNavClick);\n              bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n              bind(self.daysContainer, \"click\", selectDate);\n          }\n          if (self.timeContainer !== undefined &&\n              self.minuteElement !== undefined &&\n              self.hourElement !== undefined) {\n              const selText = (e) => getEventTarget(e).select();\n              bind(self.timeContainer, [\"increment\"], updateTime);\n              bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n              bind(self.timeContainer, \"click\", timeIncrement);\n              bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n              if (self.secondElement !== undefined)\n                  bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n              if (self.amPM !== undefined) {\n                  bind(self.amPM, \"click\", (e) => {\n                      updateTime(e);\n                      triggerChange();\n                  });\n              }\n          }\n          if (self.config.allowInput) {\n              bind(self._input, \"blur\", onBlur);\n          }\n      }\n      function jumpToDate(jumpDate, triggerChange) {\n          const jumpTo = jumpDate !== undefined\n              ? self.parseDate(jumpDate)\n              : self.latestSelectedDateObj ||\n                  (self.config.minDate && self.config.minDate > self.now\n                      ? self.config.minDate\n                      : self.config.maxDate && self.config.maxDate < self.now\n                          ? self.config.maxDate\n                          : self.now);\n          const oldYear = self.currentYear;\n          const oldMonth = self.currentMonth;\n          try {\n              if (jumpTo !== undefined) {\n                  self.currentYear = jumpTo.getFullYear();\n                  self.currentMonth = jumpTo.getMonth();\n              }\n          }\n          catch (e) {\n              e.message = \"Invalid date supplied: \" + jumpTo;\n              self.config.errorHandler(e);\n          }\n          if (triggerChange && self.currentYear !== oldYear) {\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n          if (triggerChange &&\n              (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n              triggerEvent(\"onMonthChange\");\n          }\n          self.redraw();\n      }\n      function timeIncrement(e) {\n          const eventTarget = getEventTarget(e);\n          if (~eventTarget.className.indexOf(\"arrow\"))\n              incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n      }\n      function incrementNumInput(e, delta, inputElem) {\n          const target = e && getEventTarget(e);\n          const input = inputElem ||\n              (target && target.parentNode && target.parentNode.firstChild);\n          const event = createEvent(\"increment\");\n          event.delta = delta;\n          input && input.dispatchEvent(event);\n      }\n      function build() {\n          const fragment = window.document.createDocumentFragment();\n          self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n          self.calendarContainer.tabIndex = -1;\n          if (!self.config.noCalendar) {\n              fragment.appendChild(buildMonthNav());\n              self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n              if (self.config.weekNumbers) {\n                  const { weekWrapper, weekNumbers } = buildWeeks();\n                  self.innerContainer.appendChild(weekWrapper);\n                  self.weekNumbers = weekNumbers;\n                  self.weekWrapper = weekWrapper;\n              }\n              self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n              self.rContainer.appendChild(buildWeekdays());\n              if (!self.daysContainer) {\n                  self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                  self.daysContainer.tabIndex = -1;\n              }\n              buildDays();\n              self.rContainer.appendChild(self.daysContainer);\n              self.innerContainer.appendChild(self.rContainer);\n              fragment.appendChild(self.innerContainer);\n          }\n          if (self.config.enableTime) {\n              fragment.appendChild(buildTime());\n          }\n          toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n          toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n          toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n          self.calendarContainer.appendChild(fragment);\n          const customAppend = self.config.appendTo !== undefined &&\n              self.config.appendTo.nodeType !== undefined;\n          if (self.config.inline || self.config.static) {\n              self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n              if (self.config.inline) {\n                  if (!customAppend && self.element.parentNode)\n                      self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                  else if (self.config.appendTo !== undefined)\n                      self.config.appendTo.appendChild(self.calendarContainer);\n              }\n              if (self.config.static) {\n                  const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                  if (self.element.parentNode)\n                      self.element.parentNode.insertBefore(wrapper, self.element);\n                  wrapper.appendChild(self.element);\n                  if (self.altInput)\n                      wrapper.appendChild(self.altInput);\n                  wrapper.appendChild(self.calendarContainer);\n              }\n          }\n          if (!self.config.static && !self.config.inline)\n              (self.config.appendTo !== undefined\n                  ? self.config.appendTo\n                  : window.document.body).appendChild(self.calendarContainer);\n      }\n      function createDay(className, date, dayNumber, i) {\n          const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n          dayElement.dateObj = date;\n          dayElement.$i = i;\n          dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n          if (className.indexOf(\"hidden\") === -1 &&\n              compareDates(date, self.now) === 0) {\n              self.todayDateElem = dayElement;\n              dayElement.classList.add(\"today\");\n              dayElement.setAttribute(\"aria-current\", \"date\");\n          }\n          if (dateIsEnabled) {\n              dayElement.tabIndex = -1;\n              if (isDateSelected(date)) {\n                  dayElement.classList.add(\"selected\");\n                  self.selectedDateElem = dayElement;\n                  if (self.config.mode === \"range\") {\n                      toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                          compareDates(date, self.selectedDates[0], true) === 0);\n                      toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                          compareDates(date, self.selectedDates[1], true) === 0);\n                      if (className === \"nextMonthDay\")\n                          dayElement.classList.add(\"inRange\");\n                  }\n              }\n          }\n          else {\n              dayElement.classList.add(\"flatpickr-disabled\");\n          }\n          if (self.config.mode === \"range\") {\n              if (isDateInRange(date) && !isDateSelected(date))\n                  dayElement.classList.add(\"inRange\");\n          }\n          if (self.weekNumbers &&\n              self.config.showMonths === 1 &&\n              className !== \"prevMonthDay\" &&\n              dayNumber % 7 === 1) {\n              self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n          }\n          triggerEvent(\"onDayCreate\", dayElement);\n          return dayElement;\n      }\n      function focusOnDayElem(targetNode) {\n          targetNode.focus();\n          if (self.config.mode === \"range\")\n              onMouseOver(targetNode);\n      }\n      function getFirstAvailableDay(delta) {\n          const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n          const endMonth = delta > 0 ? self.config.showMonths : -1;\n          for (let m = startMonth; m != endMonth; m += delta) {\n              const month = self.daysContainer.children[m];\n              const startIndex = delta > 0 ? 0 : month.children.length - 1;\n              const endIndex = delta > 0 ? month.children.length : -1;\n              for (let i = startIndex; i != endIndex; i += delta) {\n                  const c = month.children[i];\n                  if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                      return c;\n              }\n          }\n          return undefined;\n      }\n      function getNextAvailableDay(current, delta) {\n          const givenMonth = current.className.indexOf(\"Month\") === -1\n              ? current.dateObj.getMonth()\n              : self.currentMonth;\n          const endMonth = delta > 0 ? self.config.showMonths : -1;\n          const loopDelta = delta > 0 ? 1 : -1;\n          for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n              const month = self.daysContainer.children[m];\n              const startIndex = givenMonth - self.currentMonth === m\n                  ? current.$i + delta\n                  : delta < 0\n                      ? month.children.length - 1\n                      : 0;\n              const numMonthDays = month.children.length;\n              for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                  const c = month.children[i];\n                  if (c.className.indexOf(\"hidden\") === -1 &&\n                      isEnabled(c.dateObj) &&\n                      Math.abs(current.$i - i) >= Math.abs(delta))\n                      return focusOnDayElem(c);\n              }\n          }\n          self.changeMonth(loopDelta);\n          focusOnDay(getFirstAvailableDay(loopDelta), 0);\n          return undefined;\n      }\n      function focusOnDay(current, offset) {\n          const dayFocused = isInView(document.activeElement || document.body);\n          const startElem = current !== undefined\n              ? current\n              : dayFocused\n                  ? document.activeElement\n                  : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                      ? self.selectedDateElem\n                      : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                          ? self.todayDateElem\n                          : getFirstAvailableDay(offset > 0 ? 1 : -1);\n          if (startElem === undefined) {\n              self._input.focus();\n          }\n          else if (!dayFocused) {\n              focusOnDayElem(startElem);\n          }\n          else {\n              getNextAvailableDay(startElem, offset);\n          }\n      }\n      function buildMonthDays(year, month) {\n          const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n          const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n          const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n          let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n          for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n              days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n          }\n          for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n              days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n          }\n          for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n              (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n              days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n          }\n          const dayContainer = createElement(\"div\", \"dayContainer\");\n          dayContainer.appendChild(days);\n          return dayContainer;\n      }\n      function buildDays() {\n          if (self.daysContainer === undefined) {\n              return;\n          }\n          clearNode(self.daysContainer);\n          if (self.weekNumbers)\n              clearNode(self.weekNumbers);\n          const frag = document.createDocumentFragment();\n          for (let i = 0; i < self.config.showMonths; i++) {\n              const d = new Date(self.currentYear, self.currentMonth, 1);\n              d.setMonth(self.currentMonth + i);\n              frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n          }\n          self.daysContainer.appendChild(frag);\n          self.days = self.daysContainer.firstChild;\n          if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n              onMouseOver();\n          }\n      }\n      function buildMonthSwitch() {\n          if (self.config.showMonths > 1 ||\n              self.config.monthSelectorType !== \"dropdown\")\n              return;\n          const shouldBuildMonth = function (month) {\n              if (self.config.minDate !== undefined &&\n                  self.currentYear === self.config.minDate.getFullYear() &&\n                  month < self.config.minDate.getMonth()) {\n                  return false;\n              }\n              return !(self.config.maxDate !== undefined &&\n                  self.currentYear === self.config.maxDate.getFullYear() &&\n                  month > self.config.maxDate.getMonth());\n          };\n          self.monthsDropdownContainer.tabIndex = -1;\n          self.monthsDropdownContainer.innerHTML = \"\";\n          for (let i = 0; i < 12; i++) {\n              if (!shouldBuildMonth(i))\n                  continue;\n              const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n              month.value = new Date(self.currentYear, i).getMonth().toString();\n              month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n              month.tabIndex = -1;\n              if (self.currentMonth === i) {\n                  month.selected = true;\n              }\n              self.monthsDropdownContainer.appendChild(month);\n          }\n      }\n      function buildMonth() {\n          const container = createElement(\"div\", \"flatpickr-month\");\n          const monthNavFragment = window.document.createDocumentFragment();\n          let monthElement;\n          if (self.config.showMonths > 1 ||\n              self.config.monthSelectorType === \"static\") {\n              monthElement = createElement(\"span\", \"cur-month\");\n          }\n          else {\n              self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n              self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n              bind(self.monthsDropdownContainer, \"change\", (e) => {\n                  const target = getEventTarget(e);\n                  const selectedMonth = parseInt(target.value, 10);\n                  self.changeMonth(selectedMonth - self.currentMonth);\n                  triggerEvent(\"onMonthChange\");\n              });\n              buildMonthSwitch();\n              monthElement = self.monthsDropdownContainer;\n          }\n          const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n          const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n          yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n          if (self.config.minDate) {\n              yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n          }\n          if (self.config.maxDate) {\n              yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n              yearElement.disabled =\n                  !!self.config.minDate &&\n                      self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n          }\n          const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n          currentMonth.appendChild(monthElement);\n          currentMonth.appendChild(yearInput);\n          monthNavFragment.appendChild(currentMonth);\n          container.appendChild(monthNavFragment);\n          return {\n              container,\n              yearElement,\n              monthElement,\n          };\n      }\n      function buildMonths() {\n          clearNode(self.monthNav);\n          self.monthNav.appendChild(self.prevMonthNav);\n          if (self.config.showMonths) {\n              self.yearElements = [];\n              self.monthElements = [];\n          }\n          for (let m = self.config.showMonths; m--;) {\n              const month = buildMonth();\n              self.yearElements.push(month.yearElement);\n              self.monthElements.push(month.monthElement);\n              self.monthNav.appendChild(month.container);\n          }\n          self.monthNav.appendChild(self.nextMonthNav);\n      }\n      function buildMonthNav() {\n          self.monthNav = createElement(\"div\", \"flatpickr-months\");\n          self.yearElements = [];\n          self.monthElements = [];\n          self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n          self.prevMonthNav.innerHTML = self.config.prevArrow;\n          self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n          self.nextMonthNav.innerHTML = self.config.nextArrow;\n          buildMonths();\n          Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n              get: () => self.__hidePrevMonthArrow,\n              set(bool) {\n                  if (self.__hidePrevMonthArrow !== bool) {\n                      toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                      self.__hidePrevMonthArrow = bool;\n                  }\n              },\n          });\n          Object.defineProperty(self, \"_hideNextMonthArrow\", {\n              get: () => self.__hideNextMonthArrow,\n              set(bool) {\n                  if (self.__hideNextMonthArrow !== bool) {\n                      toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                      self.__hideNextMonthArrow = bool;\n                  }\n              },\n          });\n          self.currentYearElement = self.yearElements[0];\n          updateNavigationCurrentMonth();\n          return self.monthNav;\n      }\n      function buildTime() {\n          self.calendarContainer.classList.add(\"hasTime\");\n          if (self.config.noCalendar)\n              self.calendarContainer.classList.add(\"noCalendar\");\n          const defaults = getDefaultHours(self.config);\n          self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n          self.timeContainer.tabIndex = -1;\n          const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n          const hourInput = createNumberInput(\"flatpickr-hour\", {\n              \"aria-label\": self.l10n.hourAriaLabel,\n          });\n          self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n          const minuteInput = createNumberInput(\"flatpickr-minute\", {\n              \"aria-label\": self.l10n.minuteAriaLabel,\n          });\n          self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n          self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n          self.hourElement.value = pad(self.latestSelectedDateObj\n              ? self.latestSelectedDateObj.getHours()\n              : self.config.time_24hr\n                  ? defaults.hours\n                  : military2ampm(defaults.hours));\n          self.minuteElement.value = pad(self.latestSelectedDateObj\n              ? self.latestSelectedDateObj.getMinutes()\n              : defaults.minutes);\n          self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n          self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n          self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n          self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n          self.hourElement.setAttribute(\"maxlength\", \"2\");\n          self.minuteElement.setAttribute(\"min\", \"0\");\n          self.minuteElement.setAttribute(\"max\", \"59\");\n          self.minuteElement.setAttribute(\"maxlength\", \"2\");\n          self.timeContainer.appendChild(hourInput);\n          self.timeContainer.appendChild(separator);\n          self.timeContainer.appendChild(minuteInput);\n          if (self.config.time_24hr)\n              self.timeContainer.classList.add(\"time24hr\");\n          if (self.config.enableSeconds) {\n              self.timeContainer.classList.add(\"hasSeconds\");\n              const secondInput = createNumberInput(\"flatpickr-second\");\n              self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n              self.secondElement.value = pad(self.latestSelectedDateObj\n                  ? self.latestSelectedDateObj.getSeconds()\n                  : defaults.seconds);\n              self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n              self.secondElement.setAttribute(\"min\", \"0\");\n              self.secondElement.setAttribute(\"max\", \"59\");\n              self.secondElement.setAttribute(\"maxlength\", \"2\");\n              self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n              self.timeContainer.appendChild(secondInput);\n          }\n          if (!self.config.time_24hr) {\n              self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                  ? self.hourElement.value\n                  : self.config.defaultHour) > 11)]);\n              self.amPM.title = self.l10n.toggleTitle;\n              self.amPM.tabIndex = -1;\n              self.timeContainer.appendChild(self.amPM);\n          }\n          return self.timeContainer;\n      }\n      function buildWeekdays() {\n          if (!self.weekdayContainer)\n              self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n          else\n              clearNode(self.weekdayContainer);\n          for (let i = self.config.showMonths; i--;) {\n              const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n              self.weekdayContainer.appendChild(container);\n          }\n          updateWeekdays();\n          return self.weekdayContainer;\n      }\n      function updateWeekdays() {\n          if (!self.weekdayContainer) {\n              return;\n          }\n          const firstDayOfWeek = self.l10n.firstDayOfWeek;\n          let weekdays = [...self.l10n.weekdays.shorthand];\n          if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n              weekdays = [\n                  ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                  ...weekdays.splice(0, firstDayOfWeek),\n              ];\n          }\n          for (let i = self.config.showMonths; i--;) {\n              self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n          }\n      }\n      function buildWeeks() {\n          self.calendarContainer.classList.add(\"hasWeeks\");\n          const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n          weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n          const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n          weekWrapper.appendChild(weekNumbers);\n          return {\n              weekWrapper,\n              weekNumbers,\n          };\n      }\n      function changeMonth(value, isOffset = true) {\n          const delta = isOffset ? value : value - self.currentMonth;\n          if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n              (delta > 0 && self._hideNextMonthArrow === true))\n              return;\n          self.currentMonth += delta;\n          if (self.currentMonth < 0 || self.currentMonth > 11) {\n              self.currentYear += self.currentMonth > 11 ? 1 : -1;\n              self.currentMonth = (self.currentMonth + 12) % 12;\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n          buildDays();\n          triggerEvent(\"onMonthChange\");\n          updateNavigationCurrentMonth();\n      }\n      function clear(triggerChangeEvent = true, toInitial = true) {\n          self.input.value = \"\";\n          if (self.altInput !== undefined)\n              self.altInput.value = \"\";\n          if (self.mobileInput !== undefined)\n              self.mobileInput.value = \"\";\n          self.selectedDates = [];\n          self.latestSelectedDateObj = undefined;\n          if (toInitial === true) {\n              self.currentYear = self._initialDate.getFullYear();\n              self.currentMonth = self._initialDate.getMonth();\n          }\n          if (self.config.enableTime === true) {\n              const { hours, minutes, seconds } = getDefaultHours(self.config);\n              setHours(hours, minutes, seconds);\n          }\n          self.redraw();\n          if (triggerChangeEvent)\n              triggerEvent(\"onChange\");\n      }\n      function close() {\n          self.isOpen = false;\n          if (!self.isMobile) {\n              if (self.calendarContainer !== undefined) {\n                  self.calendarContainer.classList.remove(\"open\");\n              }\n              if (self._input !== undefined) {\n                  self._input.classList.remove(\"active\");\n              }\n          }\n          triggerEvent(\"onClose\");\n      }\n      function destroy() {\n          if (self.config !== undefined)\n              triggerEvent(\"onDestroy\");\n          for (let i = self._handlers.length; i--;) {\n              self._handlers[i].remove();\n          }\n          self._handlers = [];\n          if (self.mobileInput) {\n              if (self.mobileInput.parentNode)\n                  self.mobileInput.parentNode.removeChild(self.mobileInput);\n              self.mobileInput = undefined;\n          }\n          else if (self.calendarContainer && self.calendarContainer.parentNode) {\n              if (self.config.static && self.calendarContainer.parentNode) {\n                  const wrapper = self.calendarContainer.parentNode;\n                  wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                  if (wrapper.parentNode) {\n                      while (wrapper.firstChild)\n                          wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                      wrapper.parentNode.removeChild(wrapper);\n                  }\n              }\n              else\n                  self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n          }\n          if (self.altInput) {\n              self.input.type = \"text\";\n              if (self.altInput.parentNode)\n                  self.altInput.parentNode.removeChild(self.altInput);\n              delete self.altInput;\n          }\n          if (self.input) {\n              self.input.type = self.input._type;\n              self.input.classList.remove(\"flatpickr-input\");\n              self.input.removeAttribute(\"readonly\");\n          }\n          [\n              \"_showTimeInput\",\n              \"latestSelectedDateObj\",\n              \"_hideNextMonthArrow\",\n              \"_hidePrevMonthArrow\",\n              \"__hideNextMonthArrow\",\n              \"__hidePrevMonthArrow\",\n              \"isMobile\",\n              \"isOpen\",\n              \"selectedDateElem\",\n              \"minDateHasTime\",\n              \"maxDateHasTime\",\n              \"days\",\n              \"daysContainer\",\n              \"_input\",\n              \"_positionElement\",\n              \"innerContainer\",\n              \"rContainer\",\n              \"monthNav\",\n              \"todayDateElem\",\n              \"calendarContainer\",\n              \"weekdayContainer\",\n              \"prevMonthNav\",\n              \"nextMonthNav\",\n              \"monthsDropdownContainer\",\n              \"currentMonthElement\",\n              \"currentYearElement\",\n              \"navigationCurrentMonth\",\n              \"selectedDateElem\",\n              \"config\",\n          ].forEach((k) => {\n              try {\n                  delete self[k];\n              }\n              catch (_) { }\n          });\n      }\n      function isCalendarElem(elem) {\n          if (self.config.appendTo && self.config.appendTo.contains(elem))\n              return true;\n          return self.calendarContainer.contains(elem);\n      }\n      function documentClick(e) {\n          if (self.isOpen && !self.config.inline) {\n              const eventTarget = getEventTarget(e);\n              const isCalendarElement = isCalendarElem(eventTarget);\n              const isInput = eventTarget === self.input ||\n                  eventTarget === self.altInput ||\n                  self.element.contains(eventTarget) ||\n                  (e.path &&\n                      e.path.indexOf &&\n                      (~e.path.indexOf(self.input) ||\n                          ~e.path.indexOf(self.altInput)));\n              const lostFocus = e.type === \"blur\"\n                  ? isInput &&\n                      e.relatedTarget &&\n                      !isCalendarElem(e.relatedTarget)\n                  : !isInput &&\n                      !isCalendarElement &&\n                      !isCalendarElem(e.relatedTarget);\n              const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n              if (lostFocus && isIgnored) {\n                  if (self.timeContainer !== undefined &&\n                      self.minuteElement !== undefined &&\n                      self.hourElement !== undefined &&\n                      self.input.value !== \"\" &&\n                      self.input.value !== undefined) {\n                      updateTime();\n                  }\n                  self.close();\n                  if (self.config &&\n                      self.config.mode === \"range\" &&\n                      self.selectedDates.length === 1) {\n                      self.clear(false);\n                      self.redraw();\n                  }\n              }\n          }\n      }\n      function changeYear(newYear) {\n          if (!newYear ||\n              (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n              (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n              return;\n          const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n          self.currentYear = newYearNum || self.currentYear;\n          if (self.config.maxDate &&\n              self.currentYear === self.config.maxDate.getFullYear()) {\n              self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n          }\n          else if (self.config.minDate &&\n              self.currentYear === self.config.minDate.getFullYear()) {\n              self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n          }\n          if (isNewYear) {\n              self.redraw();\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n      }\n      function isEnabled(date, timeless = true) {\n          var _a;\n          const dateToCheck = self.parseDate(date, undefined, timeless);\n          if ((self.config.minDate &&\n              dateToCheck &&\n              compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n              (self.config.maxDate &&\n                  dateToCheck &&\n                  compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n              return false;\n          if (!self.config.enable && self.config.disable.length === 0)\n              return true;\n          if (dateToCheck === undefined)\n              return false;\n          const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n          for (let i = 0, d; i < array.length; i++) {\n              d = array[i];\n              if (typeof d === \"function\" &&\n                  d(dateToCheck))\n                  return bool;\n              else if (d instanceof Date &&\n                  dateToCheck !== undefined &&\n                  d.getTime() === dateToCheck.getTime())\n                  return bool;\n              else if (typeof d === \"string\") {\n                  const parsed = self.parseDate(d, undefined, true);\n                  return parsed && parsed.getTime() === dateToCheck.getTime()\n                      ? bool\n                      : !bool;\n              }\n              else if (typeof d === \"object\" &&\n                  dateToCheck !== undefined &&\n                  d.from &&\n                  d.to &&\n                  dateToCheck.getTime() >= d.from.getTime() &&\n                  dateToCheck.getTime() <= d.to.getTime())\n                  return bool;\n          }\n          return !bool;\n      }\n      function isInView(elem) {\n          if (self.daysContainer !== undefined)\n              return (elem.className.indexOf(\"hidden\") === -1 &&\n                  elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                  self.daysContainer.contains(elem));\n          return false;\n      }\n      function onBlur(e) {\n          const isInput = e.target === self._input;\n          if (isInput &&\n              (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n              !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n              self.setDate(self._input.value, true, e.target === self.altInput\n                  ? self.config.altFormat\n                  : self.config.dateFormat);\n          }\n      }\n      function onKeyDown(e) {\n          const eventTarget = getEventTarget(e);\n          const isInput = self.config.wrap\n              ? element.contains(eventTarget)\n              : eventTarget === self._input;\n          const allowInput = self.config.allowInput;\n          const allowKeydown = self.isOpen && (!allowInput || !isInput);\n          const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n          if (e.keyCode === 13 && isInput) {\n              if (allowInput) {\n                  self.setDate(self._input.value, true, eventTarget === self.altInput\n                      ? self.config.altFormat\n                      : self.config.dateFormat);\n                  return eventTarget.blur();\n              }\n              else {\n                  self.open();\n              }\n          }\n          else if (isCalendarElem(eventTarget) ||\n              allowKeydown ||\n              allowInlineKeydown) {\n              const isTimeObj = !!self.timeContainer &&\n                  self.timeContainer.contains(eventTarget);\n              switch (e.keyCode) {\n                  case 13:\n                      if (isTimeObj) {\n                          e.preventDefault();\n                          updateTime();\n                          focusAndClose();\n                      }\n                      else\n                          selectDate(e);\n                      break;\n                  case 27:\n                      e.preventDefault();\n                      focusAndClose();\n                      break;\n                  case 8:\n                  case 46:\n                      if (isInput && !self.config.allowInput) {\n                          e.preventDefault();\n                          self.clear();\n                      }\n                      break;\n                  case 37:\n                  case 39:\n                      if (!isTimeObj && !isInput) {\n                          e.preventDefault();\n                          if (self.daysContainer !== undefined &&\n                              (allowInput === false ||\n                                  (document.activeElement && isInView(document.activeElement)))) {\n                              const delta = e.keyCode === 39 ? 1 : -1;\n                              if (!e.ctrlKey)\n                                  focusOnDay(undefined, delta);\n                              else {\n                                  e.stopPropagation();\n                                  changeMonth(delta);\n                                  focusOnDay(getFirstAvailableDay(1), 0);\n                              }\n                          }\n                      }\n                      else if (self.hourElement)\n                          self.hourElement.focus();\n                      break;\n                  case 38:\n                  case 40:\n                      e.preventDefault();\n                      const delta = e.keyCode === 40 ? 1 : -1;\n                      if ((self.daysContainer &&\n                          eventTarget.$i !== undefined) ||\n                          eventTarget === self.input ||\n                          eventTarget === self.altInput) {\n                          if (e.ctrlKey) {\n                              e.stopPropagation();\n                              changeYear(self.currentYear - delta);\n                              focusOnDay(getFirstAvailableDay(1), 0);\n                          }\n                          else if (!isTimeObj)\n                              focusOnDay(undefined, delta * 7);\n                      }\n                      else if (eventTarget === self.currentYearElement) {\n                          changeYear(self.currentYear - delta);\n                      }\n                      else if (self.config.enableTime) {\n                          if (!isTimeObj && self.hourElement)\n                              self.hourElement.focus();\n                          updateTime(e);\n                          self._debouncedChange();\n                      }\n                      break;\n                  case 9:\n                      if (isTimeObj) {\n                          const elems = [\n                              self.hourElement,\n                              self.minuteElement,\n                              self.secondElement,\n                              self.amPM,\n                          ]\n                              .concat(self.pluginElements)\n                              .filter((x) => x);\n                          const i = elems.indexOf(eventTarget);\n                          if (i !== -1) {\n                              const target = elems[i + (e.shiftKey ? -1 : 1)];\n                              e.preventDefault();\n                              (target || self._input).focus();\n                          }\n                      }\n                      else if (!self.config.noCalendar &&\n                          self.daysContainer &&\n                          self.daysContainer.contains(eventTarget) &&\n                          e.shiftKey) {\n                          e.preventDefault();\n                          self._input.focus();\n                      }\n                      break;\n              }\n          }\n          if (self.amPM !== undefined && eventTarget === self.amPM) {\n              switch (e.key) {\n                  case self.l10n.amPM[0].charAt(0):\n                  case self.l10n.amPM[0].charAt(0).toLowerCase():\n                      self.amPM.textContent = self.l10n.amPM[0];\n                      setHoursFromInputs();\n                      updateValue();\n                      break;\n                  case self.l10n.amPM[1].charAt(0):\n                  case self.l10n.amPM[1].charAt(0).toLowerCase():\n                      self.amPM.textContent = self.l10n.amPM[1];\n                      setHoursFromInputs();\n                      updateValue();\n                      break;\n              }\n          }\n          if (isInput || isCalendarElem(eventTarget)) {\n              triggerEvent(\"onKeyDown\", e);\n          }\n      }\n      function onMouseOver(elem) {\n          if (self.selectedDates.length !== 1 ||\n              (elem &&\n                  (!elem.classList.contains(\"flatpickr-day\") ||\n                      elem.classList.contains(\"flatpickr-disabled\"))))\n              return;\n          const hoverDate = elem\n              ? elem.dateObj.getTime()\n              : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n          let containsDisabled = false;\n          let minRange = 0, maxRange = 0;\n          for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n              if (!isEnabled(new Date(t), true)) {\n                  containsDisabled =\n                      containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                  if (t < initialDate && (!minRange || t > minRange))\n                      minRange = t;\n                  else if (t > initialDate && (!maxRange || t < maxRange))\n                      maxRange = t;\n              }\n          }\n          for (let m = 0; m < self.config.showMonths; m++) {\n              const month = self.daysContainer.children[m];\n              for (let i = 0, l = month.children.length; i < l; i++) {\n                  const dayElem = month.children[i], date = dayElem.dateObj;\n                  const timestamp = date.getTime();\n                  const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                      (maxRange > 0 && timestamp > maxRange);\n                  if (outOfRange) {\n                      dayElem.classList.add(\"notAllowed\");\n                      [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                          dayElem.classList.remove(c);\n                      });\n                      continue;\n                  }\n                  else if (containsDisabled && !outOfRange)\n                      continue;\n                  [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                      dayElem.classList.remove(c);\n                  });\n                  if (elem !== undefined) {\n                      elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                          ? \"startRange\"\n                          : \"endRange\");\n                      if (initialDate < hoverDate && timestamp === initialDate)\n                          dayElem.classList.add(\"startRange\");\n                      else if (initialDate > hoverDate && timestamp === initialDate)\n                          dayElem.classList.add(\"endRange\");\n                      if (timestamp >= minRange &&\n                          (maxRange === 0 || timestamp <= maxRange) &&\n                          isBetween(timestamp, initialDate, hoverDate))\n                          dayElem.classList.add(\"inRange\");\n                  }\n              }\n          }\n      }\n      function onResize() {\n          if (self.isOpen && !self.config.static && !self.config.inline)\n              positionCalendar();\n      }\n      function open(e, positionElement = self._positionElement) {\n          if (self.isMobile === true) {\n              if (e) {\n                  e.preventDefault();\n                  const eventTarget = getEventTarget(e);\n                  if (eventTarget) {\n                      eventTarget.blur();\n                  }\n              }\n              if (self.mobileInput !== undefined) {\n                  self.mobileInput.focus();\n                  self.mobileInput.click();\n              }\n              triggerEvent(\"onOpen\");\n              return;\n          }\n          else if (self._input.disabled || self.config.inline) {\n              return;\n          }\n          const wasOpen = self.isOpen;\n          self.isOpen = true;\n          if (!wasOpen) {\n              self.calendarContainer.classList.add(\"open\");\n              self._input.classList.add(\"active\");\n              triggerEvent(\"onOpen\");\n              positionCalendar(positionElement);\n          }\n          if (self.config.enableTime === true && self.config.noCalendar === true) {\n              if (self.config.allowInput === false &&\n                  (e === undefined ||\n                      !self.timeContainer.contains(e.relatedTarget))) {\n                  setTimeout(() => self.hourElement.select(), 50);\n              }\n          }\n      }\n      function minMaxDateSetter(type) {\n          return (date) => {\n              const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n              const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n              if (dateObj !== undefined) {\n                  self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                      dateObj.getHours() > 0 ||\n                          dateObj.getMinutes() > 0 ||\n                          dateObj.getSeconds() > 0;\n              }\n              if (self.selectedDates) {\n                  self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                  if (!self.selectedDates.length && type === \"min\")\n                      setHoursFromDate(dateObj);\n                  updateValue();\n              }\n              if (self.daysContainer) {\n                  redraw();\n                  if (dateObj !== undefined)\n                      self.currentYearElement[type] = dateObj.getFullYear().toString();\n                  else\n                      self.currentYearElement.removeAttribute(type);\n                  self.currentYearElement.disabled =\n                      !!inverseDateObj &&\n                          dateObj !== undefined &&\n                          inverseDateObj.getFullYear() === dateObj.getFullYear();\n              }\n          };\n      }\n      function parseConfig() {\n          const boolOpts = [\n              \"wrap\",\n              \"weekNumbers\",\n              \"allowInput\",\n              \"allowInvalidPreload\",\n              \"clickOpens\",\n              \"time_24hr\",\n              \"enableTime\",\n              \"noCalendar\",\n              \"altInput\",\n              \"shorthandCurrentMonth\",\n              \"inline\",\n              \"static\",\n              \"enableSeconds\",\n              \"disableMobile\",\n          ];\n          const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n          const formats = {};\n          self.config.parseDate = userConfig.parseDate;\n          self.config.formatDate = userConfig.formatDate;\n          Object.defineProperty(self.config, \"enable\", {\n              get: () => self.config._enable,\n              set: (dates) => {\n                  self.config._enable = parseDateRules(dates);\n              },\n          });\n          Object.defineProperty(self.config, \"disable\", {\n              get: () => self.config._disable,\n              set: (dates) => {\n                  self.config._disable = parseDateRules(dates);\n              },\n          });\n          const timeMode = userConfig.mode === \"time\";\n          if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n              const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;\n              formats.dateFormat =\n                  userConfig.noCalendar || timeMode\n                      ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                      : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n          }\n          if (userConfig.altInput &&\n              (userConfig.enableTime || timeMode) &&\n              !userConfig.altFormat) {\n              const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;\n              formats.altFormat =\n                  userConfig.noCalendar || timeMode\n                      ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                      : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n          }\n          Object.defineProperty(self.config, \"minDate\", {\n              get: () => self.config._minDate,\n              set: minMaxDateSetter(\"min\"),\n          });\n          Object.defineProperty(self.config, \"maxDate\", {\n              get: () => self.config._maxDate,\n              set: minMaxDateSetter(\"max\"),\n          });\n          const minMaxTimeSetter = (type) => (val) => {\n              self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n          };\n          Object.defineProperty(self.config, \"minTime\", {\n              get: () => self.config._minTime,\n              set: minMaxTimeSetter(\"min\"),\n          });\n          Object.defineProperty(self.config, \"maxTime\", {\n              get: () => self.config._maxTime,\n              set: minMaxTimeSetter(\"max\"),\n          });\n          if (userConfig.mode === \"time\") {\n              self.config.noCalendar = true;\n              self.config.enableTime = true;\n          }\n          Object.assign(self.config, formats, userConfig);\n          for (let i = 0; i < boolOpts.length; i++)\n              self.config[boolOpts[i]] =\n                  self.config[boolOpts[i]] === true ||\n                      self.config[boolOpts[i]] === \"true\";\n          HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n              self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n          });\n          self.isMobile =\n              !self.config.disableMobile &&\n                  !self.config.inline &&\n                  self.config.mode === \"single\" &&\n                  !self.config.disable.length &&\n                  !self.config.enable &&\n                  !self.config.weekNumbers &&\n                  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n          for (let i = 0; i < self.config.plugins.length; i++) {\n              const pluginConf = self.config.plugins[i](self) || {};\n              for (const key in pluginConf) {\n                  if (HOOKS.indexOf(key) > -1) {\n                      self.config[key] = arrayify(pluginConf[key])\n                          .map(bindToInstance)\n                          .concat(self.config[key]);\n                  }\n                  else if (typeof userConfig[key] === \"undefined\")\n                      self.config[key] = pluginConf[key];\n              }\n          }\n          if (!userConfig.altInputClass) {\n              self.config.altInputClass =\n                  getInputElem().className + \" \" + self.config.altInputClass;\n          }\n          triggerEvent(\"onParseConfig\");\n      }\n      function getInputElem() {\n          return self.config.wrap\n              ? element.querySelector(\"[data-input]\")\n              : element;\n      }\n      function setupLocale() {\n          if (typeof self.config.locale !== \"object\" &&\n              typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n              self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n          self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n              ? self.config.locale\n              : self.config.locale !== \"default\"\n                  ? flatpickr.l10ns[self.config.locale]\n                  : undefined));\n          tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n          const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n          if (userConfig.time_24hr === undefined &&\n              flatpickr.defaultConfig.time_24hr === undefined) {\n              self.config.time_24hr = self.l10n.time_24hr;\n          }\n          self.formatDate = createDateFormatter(self);\n          self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n      }\n      function positionCalendar(customPositionElement) {\n          if (typeof self.config.position === \"function\") {\n              return void self.config.position(self, customPositionElement);\n          }\n          if (self.calendarContainer === undefined)\n              return;\n          triggerEvent(\"onPreCalendarPosition\");\n          const positionElement = customPositionElement || self._positionElement;\n          const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n              (configPosVertical !== \"below\" &&\n                  distanceFromBottom < calendarHeight &&\n                  inputBounds.top > calendarHeight);\n          const top = window.pageYOffset +\n              inputBounds.top +\n              (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n          toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n          toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n          if (self.config.inline)\n              return;\n          let left = window.pageXOffset + inputBounds.left;\n          let isCenter = false;\n          let isRight = false;\n          if (configPosHorizontal === \"center\") {\n              left -= (calendarWidth - inputBounds.width) / 2;\n              isCenter = true;\n          }\n          else if (configPosHorizontal === \"right\") {\n              left -= calendarWidth - inputBounds.width;\n              isRight = true;\n          }\n          toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n          toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n          toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n          const right = window.document.body.offsetWidth -\n              (window.pageXOffset + inputBounds.right);\n          const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n          const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n          toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n          if (self.config.static)\n              return;\n          self.calendarContainer.style.top = `${top}px`;\n          if (!rightMost) {\n              self.calendarContainer.style.left = `${left}px`;\n              self.calendarContainer.style.right = \"auto\";\n          }\n          else if (!centerMost) {\n              self.calendarContainer.style.left = \"auto\";\n              self.calendarContainer.style.right = `${right}px`;\n          }\n          else {\n              const doc = getDocumentStyleSheet();\n              if (doc === undefined)\n                  return;\n              const bodyWidth = window.document.body.offsetWidth;\n              const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n              const centerBefore = \".flatpickr-calendar.centerMost:before\";\n              const centerAfter = \".flatpickr-calendar.centerMost:after\";\n              const centerIndex = doc.cssRules.length;\n              const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n              toggleClass(self.calendarContainer, \"rightMost\", false);\n              toggleClass(self.calendarContainer, \"centerMost\", true);\n              doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n              self.calendarContainer.style.left = `${centerLeft}px`;\n              self.calendarContainer.style.right = \"auto\";\n          }\n      }\n      function getDocumentStyleSheet() {\n          let editableSheet = null;\n          for (let i = 0; i < document.styleSheets.length; i++) {\n              const sheet = document.styleSheets[i];\n              try {\n                  sheet.cssRules;\n              }\n              catch (err) {\n                  continue;\n              }\n              editableSheet = sheet;\n              break;\n          }\n          return editableSheet != null ? editableSheet : createStyleSheet();\n      }\n      function createStyleSheet() {\n          const style = document.createElement(\"style\");\n          document.head.appendChild(style);\n          return style.sheet;\n      }\n      function redraw() {\n          if (self.config.noCalendar || self.isMobile)\n              return;\n          buildMonthSwitch();\n          updateNavigationCurrentMonth();\n          buildDays();\n      }\n      function focusAndClose() {\n          self._input.focus();\n          if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n              navigator.msMaxTouchPoints !== undefined) {\n              setTimeout(self.close, 0);\n          }\n          else {\n              self.close();\n          }\n      }\n      function selectDate(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          const isSelectable = (day) => day.classList &&\n              day.classList.contains(\"flatpickr-day\") &&\n              !day.classList.contains(\"flatpickr-disabled\") &&\n              !day.classList.contains(\"notAllowed\");\n          const t = findParent(getEventTarget(e), isSelectable);\n          if (t === undefined)\n              return;\n          const target = t;\n          const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n          const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n              selectedDate.getMonth() >\n                  self.currentMonth + self.config.showMonths - 1) &&\n              self.config.mode !== \"range\";\n          self.selectedDateElem = target;\n          if (self.config.mode === \"single\")\n              self.selectedDates = [selectedDate];\n          else if (self.config.mode === \"multiple\") {\n              const selectedIndex = isDateSelected(selectedDate);\n              if (selectedIndex)\n                  self.selectedDates.splice(parseInt(selectedIndex), 1);\n              else\n                  self.selectedDates.push(selectedDate);\n          }\n          else if (self.config.mode === \"range\") {\n              if (self.selectedDates.length === 2) {\n                  self.clear(false, false);\n              }\n              self.latestSelectedDateObj = selectedDate;\n              self.selectedDates.push(selectedDate);\n              if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                  self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n          }\n          setHoursFromInputs();\n          if (shouldChangeMonth) {\n              const isNewYear = self.currentYear !== selectedDate.getFullYear();\n              self.currentYear = selectedDate.getFullYear();\n              self.currentMonth = selectedDate.getMonth();\n              if (isNewYear) {\n                  triggerEvent(\"onYearChange\");\n                  buildMonthSwitch();\n              }\n              triggerEvent(\"onMonthChange\");\n          }\n          updateNavigationCurrentMonth();\n          buildDays();\n          updateValue();\n          if (!shouldChangeMonth &&\n              self.config.mode !== \"range\" &&\n              self.config.showMonths === 1)\n              focusOnDayElem(target);\n          else if (self.selectedDateElem !== undefined &&\n              self.hourElement === undefined) {\n              self.selectedDateElem && self.selectedDateElem.focus();\n          }\n          if (self.hourElement !== undefined)\n              self.hourElement !== undefined && self.hourElement.focus();\n          if (self.config.closeOnSelect) {\n              const single = self.config.mode === \"single\" && !self.config.enableTime;\n              const range = self.config.mode === \"range\" &&\n                  self.selectedDates.length === 2 &&\n                  !self.config.enableTime;\n              if (single || range) {\n                  focusAndClose();\n              }\n          }\n          triggerChange();\n      }\n      const CALLBACKS = {\n          locale: [setupLocale, updateWeekdays],\n          showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n          minDate: [jumpToDate],\n          maxDate: [jumpToDate],\n          clickOpens: [\n              () => {\n                  if (self.config.clickOpens === true) {\n                      bind(self._input, \"focus\", self.open);\n                      bind(self._input, \"click\", self.open);\n                  }\n                  else {\n                      self._input.removeEventListener(\"focus\", self.open);\n                      self._input.removeEventListener(\"click\", self.open);\n                  }\n              },\n          ],\n      };\n      function set(option, value) {\n          if (option !== null && typeof option === \"object\") {\n              Object.assign(self.config, option);\n              for (const key in option) {\n                  if (CALLBACKS[key] !== undefined)\n                      CALLBACKS[key].forEach((x) => x());\n              }\n          }\n          else {\n              self.config[option] = value;\n              if (CALLBACKS[option] !== undefined)\n                  CALLBACKS[option].forEach((x) => x());\n              else if (HOOKS.indexOf(option) > -1)\n                  self.config[option] = arrayify(value);\n          }\n          self.redraw();\n          updateValue(true);\n      }\n      function setSelectedDate(inputDate, format) {\n          let dates = [];\n          if (inputDate instanceof Array)\n              dates = inputDate.map((d) => self.parseDate(d, format));\n          else if (inputDate instanceof Date || typeof inputDate === \"number\")\n              dates = [self.parseDate(inputDate, format)];\n          else if (typeof inputDate === \"string\") {\n              switch (self.config.mode) {\n                  case \"single\":\n                  case \"time\":\n                      dates = [self.parseDate(inputDate, format)];\n                      break;\n                  case \"multiple\":\n                      dates = inputDate\n                          .split(self.config.conjunction)\n                          .map((date) => self.parseDate(date, format));\n                      break;\n                  case \"range\":\n                      dates = inputDate\n                          .split(self.l10n.rangeSeparator)\n                          .map((date) => self.parseDate(date, format));\n                      break;\n              }\n          }\n          else\n              self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n          self.selectedDates = (self.config.allowInvalidPreload\n              ? dates\n              : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n          if (self.config.mode === \"range\")\n              self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n      }\n      function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n          if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n              return self.clear(triggerChange);\n          setSelectedDate(date, format);\n          self.latestSelectedDateObj =\n              self.selectedDates[self.selectedDates.length - 1];\n          self.redraw();\n          jumpToDate(undefined, triggerChange);\n          setHoursFromDate();\n          if (self.selectedDates.length === 0) {\n              self.clear(false);\n          }\n          updateValue(triggerChange);\n          if (triggerChange)\n              triggerEvent(\"onChange\");\n      }\n      function parseDateRules(arr) {\n          return arr\n              .slice()\n              .map((rule) => {\n              if (typeof rule === \"string\" ||\n                  typeof rule === \"number\" ||\n                  rule instanceof Date) {\n                  return self.parseDate(rule, undefined, true);\n              }\n              else if (rule &&\n                  typeof rule === \"object\" &&\n                  rule.from &&\n                  rule.to)\n                  return {\n                      from: self.parseDate(rule.from, undefined),\n                      to: self.parseDate(rule.to, undefined),\n                  };\n              return rule;\n          })\n              .filter((x) => x);\n      }\n      function setupDates() {\n          self.selectedDates = [];\n          self.now = self.parseDate(self.config.now) || new Date();\n          const preloadedDate = self.config.defaultDate ||\n              ((self.input.nodeName === \"INPUT\" ||\n                  self.input.nodeName === \"TEXTAREA\") &&\n                  self.input.placeholder &&\n                  self.input.value === self.input.placeholder\n                  ? null\n                  : self.input.value);\n          if (preloadedDate)\n              setSelectedDate(preloadedDate, self.config.dateFormat);\n          self._initialDate =\n              self.selectedDates.length > 0\n                  ? self.selectedDates[0]\n                  : self.config.minDate &&\n                      self.config.minDate.getTime() > self.now.getTime()\n                      ? self.config.minDate\n                      : self.config.maxDate &&\n                          self.config.maxDate.getTime() < self.now.getTime()\n                          ? self.config.maxDate\n                          : self.now;\n          self.currentYear = self._initialDate.getFullYear();\n          self.currentMonth = self._initialDate.getMonth();\n          if (self.selectedDates.length > 0)\n              self.latestSelectedDateObj = self.selectedDates[0];\n          if (self.config.minTime !== undefined)\n              self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n          if (self.config.maxTime !== undefined)\n              self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n          self.minDateHasTime =\n              !!self.config.minDate &&\n                  (self.config.minDate.getHours() > 0 ||\n                      self.config.minDate.getMinutes() > 0 ||\n                      self.config.minDate.getSeconds() > 0);\n          self.maxDateHasTime =\n              !!self.config.maxDate &&\n                  (self.config.maxDate.getHours() > 0 ||\n                      self.config.maxDate.getMinutes() > 0 ||\n                      self.config.maxDate.getSeconds() > 0);\n      }\n      function setupInputs() {\n          self.input = getInputElem();\n          if (!self.input) {\n              self.config.errorHandler(new Error(\"Invalid input element specified\"));\n              return;\n          }\n          self.input._type = self.input.type;\n          self.input.type = \"text\";\n          self.input.classList.add(\"flatpickr-input\");\n          self._input = self.input;\n          if (self.config.altInput) {\n              self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n              self._input = self.altInput;\n              self.altInput.placeholder = self.input.placeholder;\n              self.altInput.disabled = self.input.disabled;\n              self.altInput.required = self.input.required;\n              self.altInput.tabIndex = self.input.tabIndex;\n              self.altInput.type = \"text\";\n              self.input.setAttribute(\"type\", \"hidden\");\n              if (!self.config.static && self.input.parentNode)\n                  self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n          }\n          if (!self.config.allowInput)\n              self._input.setAttribute(\"readonly\", \"readonly\");\n          self._positionElement = self.config.positionElement || self._input;\n      }\n      function setupMobile() {\n          const inputType = self.config.enableTime\n              ? self.config.noCalendar\n                  ? \"time\"\n                  : \"datetime-local\"\n              : \"date\";\n          self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n          self.mobileInput.tabIndex = 1;\n          self.mobileInput.type = inputType;\n          self.mobileInput.disabled = self.input.disabled;\n          self.mobileInput.required = self.input.required;\n          self.mobileInput.placeholder = self.input.placeholder;\n          self.mobileFormatStr =\n              inputType === \"datetime-local\"\n                  ? \"Y-m-d\\\\TH:i:S\"\n                  : inputType === \"date\"\n                      ? \"Y-m-d\"\n                      : \"H:i:S\";\n          if (self.selectedDates.length > 0) {\n              self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n          }\n          if (self.config.minDate)\n              self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n          if (self.config.maxDate)\n              self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n          if (self.input.getAttribute(\"step\"))\n              self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n          self.input.type = \"hidden\";\n          if (self.altInput !== undefined)\n              self.altInput.type = \"hidden\";\n          try {\n              if (self.input.parentNode)\n                  self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n          }\n          catch (_a) { }\n          bind(self.mobileInput, \"change\", (e) => {\n              self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n              triggerEvent(\"onChange\");\n              triggerEvent(\"onClose\");\n          });\n      }\n      function toggle(e) {\n          if (self.isOpen === true)\n              return self.close();\n          self.open(e);\n      }\n      function triggerEvent(event, data) {\n          if (self.config === undefined)\n              return;\n          const hooks = self.config[event];\n          if (hooks !== undefined && hooks.length > 0) {\n              for (let i = 0; hooks[i] && i < hooks.length; i++)\n                  hooks[i](self.selectedDates, self.input.value, self, data);\n          }\n          if (event === \"onChange\") {\n              self.input.dispatchEvent(createEvent(\"change\"));\n              self.input.dispatchEvent(createEvent(\"input\"));\n          }\n      }\n      function createEvent(name) {\n          const e = document.createEvent(\"Event\");\n          e.initEvent(name, true, true);\n          return e;\n      }\n      function isDateSelected(date) {\n          for (let i = 0; i < self.selectedDates.length; i++) {\n              if (compareDates(self.selectedDates[i], date) === 0)\n                  return \"\" + i;\n          }\n          return false;\n      }\n      function isDateInRange(date) {\n          if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n              return false;\n          return (compareDates(date, self.selectedDates[0]) >= 0 &&\n              compareDates(date, self.selectedDates[1]) <= 0);\n      }\n      function updateNavigationCurrentMonth() {\n          if (self.config.noCalendar || self.isMobile || !self.monthNav)\n              return;\n          self.yearElements.forEach((yearElement, i) => {\n              const d = new Date(self.currentYear, self.currentMonth, 1);\n              d.setMonth(self.currentMonth + i);\n              if (self.config.showMonths > 1 ||\n                  self.config.monthSelectorType === \"static\") {\n                  self.monthElements[i].textContent =\n                      monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n              }\n              else {\n                  self.monthsDropdownContainer.value = d.getMonth().toString();\n              }\n              yearElement.value = d.getFullYear().toString();\n          });\n          self._hidePrevMonthArrow =\n              self.config.minDate !== undefined &&\n                  (self.currentYear === self.config.minDate.getFullYear()\n                      ? self.currentMonth <= self.config.minDate.getMonth()\n                      : self.currentYear < self.config.minDate.getFullYear());\n          self._hideNextMonthArrow =\n              self.config.maxDate !== undefined &&\n                  (self.currentYear === self.config.maxDate.getFullYear()\n                      ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                      : self.currentYear > self.config.maxDate.getFullYear());\n      }\n      function getDateStr(format) {\n          return self.selectedDates\n              .map((dObj) => self.formatDate(dObj, format))\n              .filter((d, i, arr) => self.config.mode !== \"range\" ||\n              self.config.enableTime ||\n              arr.indexOf(d) === i)\n              .join(self.config.mode !== \"range\"\n              ? self.config.conjunction\n              : self.l10n.rangeSeparator);\n      }\n      function updateValue(triggerChange = true) {\n          if (self.mobileInput !== undefined && self.mobileFormatStr) {\n              self.mobileInput.value =\n                  self.latestSelectedDateObj !== undefined\n                      ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                      : \"\";\n          }\n          self.input.value = getDateStr(self.config.dateFormat);\n          if (self.altInput !== undefined) {\n              self.altInput.value = getDateStr(self.config.altFormat);\n          }\n          if (triggerChange !== false)\n              triggerEvent(\"onValueUpdate\");\n      }\n      function onMonthNavClick(e) {\n          const eventTarget = getEventTarget(e);\n          const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n          const isNextMonth = self.nextMonthNav.contains(eventTarget);\n          if (isPrevMonth || isNextMonth) {\n              changeMonth(isPrevMonth ? -1 : 1);\n          }\n          else if (self.yearElements.indexOf(eventTarget) >= 0) {\n              eventTarget.select();\n          }\n          else if (eventTarget.classList.contains(\"arrowUp\")) {\n              self.changeYear(self.currentYear + 1);\n          }\n          else if (eventTarget.classList.contains(\"arrowDown\")) {\n              self.changeYear(self.currentYear - 1);\n          }\n      }\n      function timeWrapper(e) {\n          e.preventDefault();\n          const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n          if (self.amPM !== undefined && eventTarget === self.amPM) {\n              self.amPM.textContent =\n                  self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n          }\n          const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n              (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n          let newValue = curValue + step * delta;\n          if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n              const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n              if (newValue < min) {\n                  newValue =\n                      max +\n                          newValue +\n                          int(!isHourElem) +\n                          (int(isHourElem) && int(!self.amPM));\n                  if (isMinuteElem)\n                      incrementNumInput(undefined, -1, self.hourElement);\n              }\n              else if (newValue > max) {\n                  newValue =\n                      input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                  if (isMinuteElem)\n                      incrementNumInput(undefined, 1, self.hourElement);\n              }\n              if (self.amPM &&\n                  isHourElem &&\n                  (step === 1\n                      ? newValue + curValue === 23\n                      : Math.abs(newValue - curValue) > step)) {\n                  self.amPM.textContent =\n                      self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n              }\n              input.value = pad(newValue);\n          }\n      }\n      init();\n      return self;\n  }\n  function _flatpickr(nodeList, config) {\n      const nodes = Array.prototype.slice\n          .call(nodeList)\n          .filter((x) => x instanceof HTMLElement);\n      const instances = [];\n      for (let i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n          try {\n              if (node.getAttribute(\"data-fp-omit\") !== null)\n                  continue;\n              if (node._flatpickr !== undefined) {\n                  node._flatpickr.destroy();\n                  node._flatpickr = undefined;\n              }\n              node._flatpickr = FlatpickrInstance(node, config || {});\n              instances.push(node._flatpickr);\n          }\n          catch (e) {\n              console.error(e);\n          }\n      }\n      return instances.length === 1 ? instances[0] : instances;\n  }\n  if (typeof HTMLElement !== \"undefined\" &&\n      typeof HTMLCollection !== \"undefined\" &&\n      typeof NodeList !== \"undefined\") {\n      HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n          return _flatpickr(this, config);\n      };\n      HTMLElement.prototype.flatpickr = function (config) {\n          return _flatpickr([this], config);\n      };\n  }\n  var flatpickr = function (selector, config) {\n      if (typeof selector === \"string\") {\n          return _flatpickr(window.document.querySelectorAll(selector), config);\n      }\n      else if (selector instanceof Node) {\n          return _flatpickr([selector], config);\n      }\n      else {\n          return _flatpickr(selector, config);\n      }\n  };\n  flatpickr.defaultConfig = {};\n  flatpickr.l10ns = {\n      en: Object.assign({}, english),\n      default: Object.assign({}, english),\n  };\n  flatpickr.localize = (l10n) => {\n      flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n  };\n  flatpickr.setDefaults = (config) => {\n      flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n  };\n  flatpickr.parseDate = createDateParser({});\n  flatpickr.formatDate = createDateFormatter({});\n  flatpickr.compareDates = compareDates;\n  if (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n      jQuery.fn.flatpickr = function (config) {\n          return _flatpickr(this, config);\n      };\n  }\n  Date.prototype.fp_incr = function (days) {\n      return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n  };\n  if (typeof window !== \"undefined\") {\n      window.flatpickr = flatpickr;\n  }\n\n  flatpickr(\".form__date\", {\n    dateFormat: \"d-m-Y\",\n    disableMobile: \"true\"\n  });\n  flatpickr(\".form__time\", {\n    enableTime: true,\n    noCalendar: true,\n    dateFormat: \"H-i\",\n    disableMobile: \"true\"\n  });\n\n  // Polyfill for creating CustomEvents on IE9/10/11\n\n  // code pulled from:\n  // https://github.com/d4tocchini/customevent-polyfill\n  // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n  try {\n      var ce = new window.CustomEvent('test');\n      ce.preventDefault();\n      if (ce.defaultPrevented !== true) {\n          // IE has problems with .preventDefault() on custom events\n          // http://stackoverflow.com/questions/23349191\n          throw new Error('Could not prevent default');\n      }\n  } catch(e) {\n    var CustomEvent$1 = function(event, params) {\n      var evt, origPrevent;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      evt = document.createEvent(\"CustomEvent\");\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function () {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function () {\n              return true;\n            }\n          });\n        } catch(e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent$1.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent$1; // expose definition to window\n  }\n\n  var customEventPolyfill = /*#__PURE__*/Object.freeze({\n    __proto__: null\n  });\n\n  getCjsExportFromNamespace(customEventPolyfill);\n\n  var build = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n  var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\ncustom-select\nlightweight JS script for custom select creation.\needs no dependencies.\nnv0.0.1\nhttps://github.com/custom-select/custom-select)\nnopyright (c) 2016 Gionatan Lombardi & Marco Nucara\nicense\nn\n  exports.default = customSelect;\n\n\n\n  var defaultParams = {\n    containerClass: 'custom-select-container',\n    openerClass: 'custom-select-opener',\n    panelClass: 'custom-select-panel',\n    optionClass: 'custom-select-option',\n    optgroupClass: 'custom-select-optgroup',\n    isSelectedClass: 'is-selected',\n    hasFocusClass: 'has-focus',\n    isDisabledClass: 'is-disabled',\n    isOpenClass: 'is-open'\n  };\n\n  function builder(el, builderParams) {\n    var containerClass = 'customSelect';\n    var isOpen = false;\n    var uId = '';\n    var select = el;\n    var container = void 0;\n    var opener = void 0;\n    var focusedElement = void 0;\n    var selectedElement = void 0;\n    var panel = void 0;\n    var currLabel = void 0;\n\n    var resetSearchTimeout = void 0;\n    var searchKey = '';\n\n    //\n    // Inner Functions\n    //\n\n    // Sets the focused element with the neccessary classes substitutions\n    function setFocusedElement(cstOption) {\n      if (focusedElement) {\n        focusedElement.classList.remove(builderParams.hasFocusClass);\n      }\n      if (typeof cstOption !== 'undefined') {\n        focusedElement = cstOption;\n        focusedElement.classList.add(builderParams.hasFocusClass);\n        // Offset update: checks if the focused element is in the visible part of the panelClass\n        // if not dispatches a custom event\n        if (isOpen) {\n          if (cstOption.offsetTop < cstOption.offsetParent.scrollTop || cstOption.offsetTop > cstOption.offsetParent.scrollTop + cstOption.offsetParent.clientHeight - cstOption.clientHeight) {\n            cstOption.dispatchEvent(new CustomEvent('custom-select:focus-outside-panel', { bubbles: true }));\n          }\n        }\n      } else {\n        focusedElement = undefined;\n      }\n    }\n\n    // Reassigns the focused and selected custom option\n    // Updates the opener text\n    // IMPORTANT: the setSelectedElement function doesn't change the select value!\n    function setSelectedElement(cstOption) {\n      if (selectedElement) {\n        selectedElement.classList.remove(builderParams.isSelectedClass);\n        selectedElement.removeAttribute('id');\n        opener.removeAttribute('aria-activedescendant');\n      }\n      if (typeof cstOption !== 'undefined') {\n        cstOption.classList.add(builderParams.isSelectedClass);\n        cstOption.setAttribute('id', containerClass + '-' + uId + '-selectedOption');\n        opener.setAttribute('aria-activedescendant', containerClass + '-' + uId + '-selectedOption');\n        selectedElement = cstOption;\n        opener.children[0].textContent = selectedElement.customSelectOriginalOption.text;\n      } else {\n        selectedElement = undefined;\n        opener.children[0].textContent = '';\n      }\n      setFocusedElement(cstOption);\n    }\n\n    function setValue(value) {\n      // Gets the option with the provided value\n      var toSelect = select.querySelector('option[value=\\'' + value + '\\']');\n      // If no option has the provided value get the first\n      if (!toSelect) {\n        var _select$options = _slicedToArray(select.options, 1);\n\n        toSelect = _select$options[0];\n      }\n      // The option with the provided value becomes the selected one\n      // And changes the select current value\n      toSelect.selected = true;\n\n      setSelectedElement(select.options[select.selectedIndex].customSelectCstOption);\n    }\n\n    function moveFocuesedElement(direction) {\n      // Get all the .custom-select-options\n      // Get the index of the current focused one\n      var currentFocusedIndex = [].indexOf.call(select.options, focusedElement.customSelectOriginalOption);\n      // If the next or prev custom option exist\n      // Sets it as the new focused one\n      if (select.options[currentFocusedIndex + direction]) {\n        setFocusedElement(select.options[currentFocusedIndex + direction].customSelectCstOption);\n      }\n    }\n\n    // Open/Close function (toggle)\n    function open(bool) {\n      // Open\n      if (bool || typeof bool === 'undefined') {\n        // If present closes an opened instance of the plugin\n        // Only one at time can be open\n        var openedCustomSelect = document.querySelector('.' + containerClass + '.' + builderParams.isOpenClass);\n        if (openedCustomSelect) {\n          openedCustomSelect.customSelect.open = false;\n        }\n\n        // Opens only the clicked one\n        container.classList.add(builderParams.isOpenClass);\n\n        // aria-expanded update\n        container.classList.add(builderParams.isOpenClass);\n        opener.setAttribute('aria-expanded', 'true');\n\n        // Updates the scrollTop position of the panel in relation with the focused option\n        if (selectedElement) {\n          panel.scrollTop = selectedElement.offsetTop;\n        }\n\n        // Dispatches the custom event open\n        container.dispatchEvent(new CustomEvent('custom-select:open'));\n\n        // Sets the global state\n        isOpen = true;\n\n        // Close\n      } else {\n        // Removes the css classes\n        container.classList.remove(builderParams.isOpenClass);\n\n        // aria-expanded update\n        opener.setAttribute('aria-expanded', 'false');\n\n        // Sets the global state\n        isOpen = false;\n\n        // When closing the panel the focused custom option must be the selected one\n        setFocusedElement(selectedElement);\n\n        // Dispatches the custom event close\n        container.dispatchEvent(new CustomEvent('custom-select:close'));\n      }\n      return isOpen;\n    }\n\n    function clickEvent(e) {\n      // Opener click\n      if (e.target === opener || opener.contains(e.target)) {\n        if (isOpen) {\n          open(false);\n        } else {\n          open();\n        }\n        // Custom Option click\n      } else if (e.target.classList && e.target.classList.contains(builderParams.optionClass) && panel.contains(e.target)) {\n        setSelectedElement(e.target);\n        // Sets the corrisponding select's option to selected updating the select's value too\n        selectedElement.customSelectOriginalOption.selected = true;\n        open(false);\n        // Triggers the native change event of the select\n        select.dispatchEvent(new CustomEvent('change'));\n        // click on label or select (click on label corrispond to select click)\n      } else if (e.target === select) {\n        // if the original select is focusable (for any external reason) let the focus\n        // else trigger the focus on opener\n        if (opener !== document.activeElement && select !== document.activeElement) {\n          opener.focus();\n        }\n        // Click outside the container closes the panel\n      } else if (isOpen && !container.contains(e.target)) {\n        open(false);\n      }\n    }\n\n    function mouseoverEvent(e) {\n      // On mouse move over and options it bacames the focused one\n      if (e.target.classList && e.target.classList.contains(builderParams.optionClass)) {\n        setFocusedElement(e.target);\n      }\n    }\n\n    function keydownEvent(e) {\n      if (!isOpen) {\n        // On \"Arrow down\", \"Arrow up\" and \"Space\" keys opens the panel\n        if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32) {\n          open();\n        }\n      } else {\n        switch (e.keyCode) {\n          case 13:\n          case 32:\n            // On \"Enter\" or \"Space\" selects the focused element as the selected one\n            setSelectedElement(focusedElement);\n            // Sets the corrisponding select's option to selected updating the select's value too\n            selectedElement.customSelectOriginalOption.selected = true;\n            // Triggers the native change event of the select\n            select.dispatchEvent(new CustomEvent('change'));\n            open(false);\n            break;\n          case 27:\n            // On \"Escape\" closes the panel\n            open(false);\n            break;\n\n          case 38:\n            // On \"Arrow up\" set focus to the prev option if present\n            moveFocuesedElement(-1);\n            break;\n          case 40:\n            // On \"Arrow down\" set focus to the next option if present\n            moveFocuesedElement(+1);\n            break;\n          default:\n            // search in panel (autocomplete)\n            if (e.keyCode >= 48 && e.keyCode <= 90) {\n              // clear existing reset timeout\n              if (resetSearchTimeout) {\n                clearTimeout(resetSearchTimeout);\n              }\n\n              // reset timeout for empty search key\n              resetSearchTimeout = setTimeout(function () {\n                searchKey = '';\n              }, 1500);\n\n              // update search keyword appending the current key\n              searchKey += String.fromCharCode(e.keyCode);\n\n              // search the element\n              for (var i = 0, l = select.options.length; i < l; i++) {\n                // removed cause not supported by IE:\n                // if (options[i].text.startsWith(searchKey))\n                if (select.options[i].text.toUpperCase().substr(0, searchKey.length) === searchKey) {\n                  setFocusedElement(select.options[i].customSelectCstOption);\n                  break;\n                }\n              }\n            }\n            break;\n        }\n      }\n    }\n\n    function changeEvent() {\n      var index = select.selectedIndex;\n      var element = index === -1 ? undefined : select.options[index].customSelectCstOption;\n\n      setSelectedElement(element);\n    }\n\n    // When the option is outside the visible part of the opened panel, updates the scrollTop position\n    // This is the default behaviour\n    // To block it the plugin user must\n    // add a \"custom-select:focus-outside-panel\" eventListener on the panel\n    // with useCapture set to true\n    // and stopPropagation\n    function scrollToFocused(e) {\n      var currPanel = e.currentTarget;\n      var currOption = e.target;\n      // Up\n      if (currOption.offsetTop < currPanel.scrollTop) {\n        currPanel.scrollTop = currOption.offsetTop;\n        // Down\n      } else {\n        currPanel.scrollTop = currOption.offsetTop + currOption.clientHeight - currPanel.clientHeight;\n      }\n    }\n\n    function addEvents() {\n      document.addEventListener('click', clickEvent);\n      panel.addEventListener('mouseover', mouseoverEvent);\n      panel.addEventListener('custom-select:focus-outside-panel', scrollToFocused);\n      select.addEventListener('change', changeEvent);\n      container.addEventListener('keydown', keydownEvent);\n    }\n\n    function removeEvents() {\n      document.removeEventListener('click', clickEvent);\n      panel.removeEventListener('mouseover', mouseoverEvent);\n      panel.removeEventListener('custom-select:focus-outside-panel', scrollToFocused);\n      select.removeEventListener('change', changeEvent);\n      container.removeEventListener('keydown', keydownEvent);\n    }\n\n    function disabled(bool) {\n      if (bool && !select.disabled) {\n        container.classList.add(builderParams.isDisabledClass);\n        select.disabled = true;\n        opener.removeAttribute('tabindex');\n        container.dispatchEvent(new CustomEvent('custom-select:disabled'));\n        removeEvents();\n      } else if (!bool && select.disabled) {\n        container.classList.remove(builderParams.isDisabledClass);\n        select.disabled = false;\n        opener.setAttribute('tabindex', '0');\n        container.dispatchEvent(new CustomEvent('custom-select:enabled'));\n        addEvents();\n      }\n    }\n\n    // Form a given select children DOM tree (options and optgroup),\n    // Creates the corresponding custom HTMLElements list (divs with different classes and attributes)\n    function parseMarkup(children) {\n      var nodeList = children;\n      var cstList = [];\n\n      if (typeof nodeList.length === 'undefined') {\n        throw new TypeError('Invalid Argument');\n      }\n\n      for (var i = 0, li = nodeList.length; i < li; i++) {\n        if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTGROUP') {\n          var cstOptgroup = document.createElement('div');\n          cstOptgroup.classList.add(builderParams.optgroupClass);\n          cstOptgroup.setAttribute('data-label', nodeList[i].label);\n\n          // IMPORTANT: Stores in a property of the created custom option group\n          // a hook to the the corrisponding select's option group\n          cstOptgroup.customSelectOriginalOptgroup = nodeList[i];\n\n          // IMPORTANT: Stores in a property of select's option group\n          // a hook to the created custom option group\n          nodeList[i].customSelectCstOptgroup = cstOptgroup;\n\n          var subNodes = parseMarkup(nodeList[i].children);\n          for (var j = 0, lj = subNodes.length; j < lj; j++) {\n            cstOptgroup.appendChild(subNodes[j]);\n          }\n\n          cstList.push(cstOptgroup);\n        } else if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTION') {\n          var cstOption = document.createElement('div');\n          cstOption.classList.add(builderParams.optionClass);\n          cstOption.textContent = nodeList[i].text;\n          cstOption.setAttribute('data-value', nodeList[i].value);\n          cstOption.setAttribute('role', 'option');\n\n          // IMPORTANT: Stores in a property of the created custom option\n          // a hook to the the corrisponding select's option\n          cstOption.customSelectOriginalOption = nodeList[i];\n\n          // IMPORTANT: Stores in a property of select's option\n          // a hook to the created custom option\n          nodeList[i].customSelectCstOption = cstOption;\n\n          // If the select's option is selected\n          if (nodeList[i].selected) {\n            setSelectedElement(cstOption);\n          }\n          cstList.push(cstOption);\n        } else {\n          throw new TypeError('Invalid Argument');\n        }\n      }\n      return cstList;\n    }\n\n    function _append(nodePar, appendIntoOriginal, targetPar) {\n      var target = void 0;\n      if (typeof targetPar === 'undefined' || targetPar === select) {\n        target = panel;\n      } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n        target = targetPar.customSelectCstOptgroup;\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n\n      // If the node provided is a single HTMLElement it is stored in an array\n      var node = nodePar instanceof HTMLElement ? [nodePar] : nodePar;\n\n      // Injects the options|optgroup in the select\n      if (appendIntoOriginal) {\n        for (var i = 0, l = node.length; i < l; i++) {\n          if (target === panel) {\n            select.appendChild(node[i]);\n          } else {\n            target.customSelectOriginalOptgroup.appendChild(node[i]);\n          }\n        }\n      }\n\n      // The custom markup to append\n      var markupToInsert = parseMarkup(node);\n\n      // Injects the created DOM content in the panel\n      for (var _i = 0, _l = markupToInsert.length; _i < _l; _i++) {\n        target.appendChild(markupToInsert[_i]);\n      }\n\n      return node;\n    }\n\n    function _insertBefore(node, targetPar) {\n      var target = void 0;\n      if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTION' && select.contains(targetPar)) {\n        target = targetPar.customSelectCstOption;\n      } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n        target = targetPar.customSelectCstOptgroup;\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n\n      // The custom markup to append\n      var markupToInsert = parseMarkup(node.length ? node : [node]);\n\n      target.parentNode.insertBefore(markupToInsert[0], target);\n\n      // Injects the option or optgroup node in the original select and returns the injected node\n      return targetPar.parentNode.insertBefore(node.length ? node[0] : node, targetPar);\n    }\n\n    function remove(node) {\n      var cstNode = void 0;\n      if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTION' && select.contains(node)) {\n        cstNode = node.customSelectCstOption;\n      } else if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTGROUP' && select.contains(node)) {\n        cstNode = node.customSelectCstOptgroup;\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n      cstNode.parentNode.removeChild(cstNode);\n      var removedNode = node.parentNode.removeChild(node);\n      changeEvent();\n      return removedNode;\n    }\n\n    function empty() {\n      var removed = [];\n      while (select.children.length) {\n        panel.removeChild(panel.children[0]);\n        removed.push(select.removeChild(select.children[0]));\n      }\n      setSelectedElement();\n      return removed;\n    }\n\n    function destroy() {\n      for (var i = 0, l = select.options.length; i < l; i++) {\n        delete select.options[i].customSelectCstOption;\n      }\n      var optGroup = select.getElementsByTagName('optgroup');\n      for (var _i2 = 0, _l2 = optGroup.length; _i2 < _l2; _i2++) {\n        delete optGroup.customSelectCstOptgroup;\n      }\n\n      removeEvents();\n\n      return container.parentNode.replaceChild(select, container);\n    }\n    //\n    // Custom Select DOM tree creation\n    //\n\n    // Creates the container/wrapper\n    container = document.createElement('div');\n    container.classList.add(builderParams.containerClass, containerClass);\n\n    // Creates the opener\n    opener = document.createElement('span');\n    opener.className = builderParams.openerClass;\n    opener.setAttribute('role', 'combobox');\n    opener.setAttribute('aria-autocomplete', 'list');\n    opener.setAttribute('aria-expanded', 'false');\n    opener.innerHTML = '<span>\\n   ' + (select.selectedIndex !== -1 ? select.options[select.selectedIndex].text : '') + '\\n   </span>';\n\n    // Creates the panel\n    // and injects the markup of the select inside\n    // with some tag and attributes replacement\n    panel = document.createElement('div');\n    // Create random id\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < 5; i++) {\n      uId += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    panel.id = containerClass + '-' + uId + '-panel';\n    panel.className = builderParams.panelClass;\n    panel.setAttribute('role', 'listbox');\n    opener.setAttribute('aria-owns', panel.id);\n\n    _append(select.children, false);\n\n    // Injects the container in the original DOM position of the select\n    container.appendChild(opener);\n    select.parentNode.replaceChild(container, select);\n    container.appendChild(select);\n    container.appendChild(panel);\n\n    // ARIA labelledby - label\n    if (document.querySelector('label[for=\"' + select.id + '\"]')) {\n      currLabel = document.querySelector('label[for=\"' + select.id + '\"]');\n    } else if (container.parentNode.tagName.toUpperCase() === 'LABEL') {\n      currLabel = container.parentNode;\n    }\n    if (typeof currLabel !== 'undefined') {\n      currLabel.setAttribute('id', containerClass + '-' + uId + '-label');\n      opener.setAttribute('aria-labelledby', containerClass + '-' + uId + '-label');\n    }\n\n    // Event Init\n    if (select.disabled) {\n      container.classList.add(builderParams.isDisabledClass);\n    } else {\n      opener.setAttribute('tabindex', '0');\n      select.setAttribute('tabindex', '-1');\n      addEvents();\n    }\n\n    // Stores the plugin public exposed methods and properties, directly in the container HTMLElement\n    container.customSelect = {\n      get pluginOptions() {\n        return builderParams;\n      },\n      get open() {\n        return isOpen;\n      },\n      set open(bool) {\n        open(bool);\n      },\n      get disabled() {\n        return select.disabled;\n      },\n      set disabled(bool) {\n        disabled(bool);\n      },\n      get value() {\n        return select.value;\n      },\n      set value(val) {\n        setValue(val);\n      },\n      append: function append(node, target) {\n        return _append(node, true, target);\n      },\n      insertBefore: function insertBefore(node, target) {\n        return _insertBefore(node, target);\n      },\n      remove: remove,\n      empty: empty,\n      destroy: destroy,\n      opener: opener,\n      select: select,\n      panel: panel,\n      container: container\n    };\n\n    // Stores the plugin directly in the original select\n    select.customSelect = container.customSelect;\n\n    // Returns the plugin instance, with the public exposed methods and properties\n    return container.customSelect;\n  }\n\n  function customSelect(element, customParams) {\n    // Overrides the default options with the ones provided by the user\n    var nodeList = [];\n    var selects = [];\n\n    return function init() {\n      // The plugin is called on a single HTMLElement\n      if (element && element instanceof HTMLElement && element.tagName.toUpperCase() === 'SELECT') {\n        nodeList.push(element);\n        // The plugin is called on a selector\n      } else if (element && typeof element === 'string') {\n        var elementsList = document.querySelectorAll(element);\n        for (var i = 0, l = elementsList.length; i < l; ++i) {\n          if (elementsList[i] instanceof HTMLElement && elementsList[i].tagName.toUpperCase() === 'SELECT') {\n            nodeList.push(elementsList[i]);\n          }\n        }\n        // The plugin is called on any HTMLElements list (NodeList, HTMLCollection, Array, etc.)\n      } else if (element && element.length) {\n        for (var _i3 = 0, _l3 = element.length; _i3 < _l3; ++_i3) {\n          if (element[_i3] instanceof HTMLElement && element[_i3].tagName.toUpperCase() === 'SELECT') {\n            nodeList.push(element[_i3]);\n          }\n        }\n      }\n\n      // Launches the plugin over every HTMLElement\n      // And stores every plugin instance\n      for (var _i4 = 0, _l4 = nodeList.length; _i4 < _l4; ++_i4) {\n        selects.push(builder(nodeList[_i4], _extends({}, defaultParams, customParams)));\n      }\n\n      // Returns all plugin instances\n      return selects;\n    }();\n  }\n\n\n  });\n\n  var customSelect = unwrapExports(build);\n\n  customSelect('select');\n\n  /*\r\n    @ Add body class if:\r\n    - scroll started\r\n    - scrolled to bottom\r\n  */\n  var START_OFFSET = 34;\n  var START_CLASS = \"is-scrolled\";\n  var BOTTOM_OFFSET = 10;\n  var BOTTOM_CLASS = \"is-scrolled-bottom\";\n\n  var ScrollClass = function ScrollClass() {\n    var _this = this;\n\n    _classCallCheck(this, ScrollClass);\n\n    _defineProperty(this, \"scrollHandler\", function () {\n      var top = document.documentElement.scrollTop;\n      document.body.classList.toggle(START_CLASS, top >= START_OFFSET);\n      document.body.classList.toggle(BOTTOM_CLASS, window.innerHeight + top >= document.body.offsetHeight - BOTTOM_OFFSET);\n\n      _this.oldScroll = top;\n    });\n\n    document.addEventListener(\"scroll\", this.scrollHandler, {\n      passive: true\n    });\n  };\n\n  new ScrollClass();\n\n}());\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0cy5qcyIsInNvdXJjZXMiOlsic3JjL3NjcmlwdHMvbW9kdWxlcy9BbmltYXRlLmpzIiwibm9kZV9tb2R1bGVzL0BzcGxpZGVqcy9zcGxpZGUvZGlzdC9qcy9zcGxpZGUuZXNtLmpzIiwic3JjL3NjcmlwdHMvbW9kdWxlcy9DYXJvdXNlbC5qcyIsInNyYy9zY3JpcHRzL21vZHVsZXMvVG9nZ2xlTmF2LmpzIiwibm9kZV9tb2R1bGVzL3NpbXBsZWxpZ2h0Ym94L2Rpc3Qvc2ltcGxlLWxpZ2h0Ym94Lm1vZHVsZXMuanMiLCJzcmMvc2NyaXB0cy9tb2R1bGVzL0xpZ2h0Ym94LmpzIiwibm9kZV9tb2R1bGVzL3N0aWNreS1zaWRlYmFyLXYyL3NyYy9zdGlja3ktc2lkZWJhci5qcyIsInNyYy9zY3JpcHRzL21vZHVsZXMvU3RpY2t5LmpzIiwibm9kZV9tb2R1bGVzL2p1c3QtZXh0ZW5kL2luZGV4LmVzbS5qcyIsIm5vZGVfbW9kdWxlcy9kcm9wem9uZS9kaXN0L2Ryb3B6b25lLm1qcyIsInNyYy9zY3JpcHRzL21vZHVsZXMvRHJvcHpvbmUuanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3R5cGVzL29wdGlvbnMuanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL2wxMG4vZGVmYXVsdC5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvaW5kZXguanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL2RvbS5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvZm9ybWF0dGluZy5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvZGF0ZXMuanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL3BvbHlmaWxscy5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vaW5kZXguanMiLCJzcmMvc2NyaXB0cy9tb2R1bGVzL0ZsYXRwaWNrZXIuanMiLCJub2RlX21vZHVsZXMvY3VzdG9tLWV2ZW50LXBvbHlmaWxsL2N1c3RvbS1ldmVudC1wb2x5ZmlsbC5qcyIsIm5vZGVfbW9kdWxlcy9jdXN0b20tc2VsZWN0L2J1aWxkL2luZGV4LmpzIiwic3JjL3NjcmlwdHMvbW9kdWxlcy9DdXN0b21TZWxlY3QuanMiLCJzcmMvc2NyaXB0cy9tb2R1bGVzL1Njcm9sbENsYXNzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBBbmltYXRlXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIC0gYWRkIGNsYXNzIHRvIGVsZW1lbnQgaW4gdmlld3BvcnRcclxuICogLSBpZiB5b3Ugd2FudCBkaXNhYmxlIGFuaW1hdGUgZGVsYXkgb24gbW9iaWxlIHVzZSBbYW5pbWF0ZS1kZWxheS1kZXNrdG9wXVxyXG4gKiAtIHNldCBhbmltYXRpb24gZGVsYXkgdmlhIFthbmltYXRlLWRlbGF5XSBodG1sIGF0dHJpYnV0ZVxyXG4gKiAtIHNldCB2aXNpYmxlIHRocmVzaG9sZCB2aWEgW2FuaW1hdGUtdGhyZXNob2xkXSBodG1sIGF0dHJpYnV0ZVxyXG4gKi9cclxuXHJcbiBjb25zdCBJU01PQklMRSA9IHdpbmRvdy5tYXRjaE1lZGlhKFwib25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KVwiKS5tYXRjaGVzXHJcbiBjb25zdCBUSFJFU0hPTEQgPSAnMC43NSdcclxuIGNvbnN0IExPQURfVEhSRVNIT0xEID0gJzAuMidcclxuIGNvbnN0IEVMRU1FTlRTID0gJy5hbmltYXRlJ1xyXG4gY29uc3QgVklTSUJMRV9DTEFTUyA9ICdhbmltYXRlLS12aXNpYmxlJ1xyXG5cclxuIGNsYXNzIEFuaW1hdGUge1xyXG4gICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuc2VjdGlvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEVMRU1FTlRTKVxyXG4gICAgdGhpcy5USFJFU0hPTEQgPSBUSFJFU0hPTERcclxuICAgIHRoaXMuTE9BRF9USFJFU0hPTEQgPSBMT0FEX1RIUkVTSE9MRFxyXG5cclxuICAgICAgaWYoJ0ludGVyc2VjdGlvbk9ic2VydmVyJyBpbiB3aW5kb3cpIHtcclxuICAgICAgICB0aGlzLnNlY3Rpb25zLmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgICAgIGNvbnN0IEJvdW5kaW5nQ2xpZW50UmVjdCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXHJcbiAgICAgICAgIGNvbnN0IHZpc2libGVSYXRpbyA9ICBCb3VuZGluZ0NsaWVudFJlY3QuaGVpZ2h0IC8gd2luZG93LmlubmVySGVpZ2h0XHJcblxyXG4gICAgICAgICBpZih2aXNpYmxlUmF0aW8gPiAwLjk1KXtcclxuICAgICAgICAgICB0aGlzLlRIUkVTSE9MRCA9ICB3aW5kb3cuaW5uZXJIZWlnaHQgLyBCb3VuZGluZ0NsaWVudFJlY3QuaGVpZ2h0IC8gMTAwICogMzBcclxuICAgICAgICAgICB0aGlzLkxPQURfVEhSRVNIT0xEID0gd2luZG93LmlubmVySGVpZ2h0IC8gQm91bmRpbmdDbGllbnRSZWN0LmhlaWdodCAvIDEwMCAqIDIwXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAvLyBvYnNlcnZlIG9uIHBhZ2UgbG9hZFxyXG4gICAgICAgICAgY29uc3QgbG9hZE9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKHRoaXMub2JzZXJ2ZUNhbGxiYWNrLCB7XHJcbiAgICAgICAgICAgIHRocmVzaG9sZDogdGhpcy5MT0FEX1RIUkVTSE9MRFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBsb2FkT2JzZXJ2ZXIub2JzZXJ2ZShlbCk7XHJcblxyXG5cclxuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICBsb2FkT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xyXG4gICAgICAgICAgfSwgMTAwKTtcclxuXHJcbiAgICAgICAgICAvLyBvYnNlcnZlXHJcbiAgICAgICAgICBjb25zdCBvYnNlcnZlclRocmVzaG9sZCA9IGVsLmdldEF0dHJpYnV0ZSgnYW5pbWF0ZS10aHJlc2hvbGQnKSA/IGVsLmdldEF0dHJpYnV0ZSgnYW5pbWF0ZS10aHJlc2hvbGQnKSA6IHRoaXMuVEhSRVNIT0xEXHJcbiAgICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcih0aGlzLm9ic2VydmVDYWxsYmFjaywge1xyXG4gICAgICAgICAgICB0aHJlc2hvbGQ6IG9ic2VydmVyVGhyZXNob2xkXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUoZWwpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5zZWN0aW9ucy5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZChWSVNJQkxFX0NMQVNTKVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgIG9ic2VydmVDYWxsYmFjayA9IChlbnRyaWVzKSA9PiB7XHJcbiAgICAgIGVudHJpZXMubWFwKChlbnRyeSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNlY3Rpb24gPSBlbnRyeS50YXJnZXQ7XHJcbiAgICAgICAgY29uc3QgZGVsYXkgPSB0aGlzLmdldERlbGF5KHNlY3Rpb24pXHJcbiAgICAgICAgY29uc3Qgc2VjdGlvbkJvZHlDbGFzcyA9IHNlY3Rpb24uZ2V0QXR0cmlidXRlKCdhbmltYXRlLWJvZHktY2xhc3MnKVxyXG5cclxuICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcclxuICAgICAgICAgIGlmKElTTU9CSUxFICYmIHNlY3Rpb24uZ2V0QXR0cmlidXRlKCdhbmltYXRlLWRlbGF5LWRlc2t0b3AnKSl7XHJcbiAgICAgICAgICAgIHNlY3Rpb24uY2xhc3NMaXN0LmFkZChWSVNJQkxFX0NMQVNTKVxyXG5cclxuICAgICAgICAgICAgdGhpcy5ib2R5Q2xhc3Moc2VjdGlvbkJvZHlDbGFzcywgJ2FkZCcpXHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICBzZWN0aW9uLmNsYXNzTGlzdC5hZGQoVklTSUJMRV9DTEFTUylcclxuICAgICAgICAgICAgICB0aGlzLmJvZHlDbGFzcyhzZWN0aW9uQm9keUNsYXNzLCAnYWRkJylcclxuICAgICAgICAgICAgfSwgZGVsYXkpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuYm9keUNsYXNzKHNlY3Rpb25Cb2R5Q2xhc3MsICdyZW1vdmUnKVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICBnZXREZWxheSA9IChzZWN0aW9uKSA9PiB7XHJcbiAgIHZhciBkZWxheSA9IHNlY3Rpb24uZ2V0QXR0cmlidXRlKCdhbmltYXRlLWRlbGF5JylcclxuXHJcbiAgIGlmKCFJU01PQklMRSAmJiBzZWN0aW9uLmdldEF0dHJpYnV0ZSgnYW5pbWF0ZS1kZWxheS1kZXNrdG9wJykpe1xyXG4gICAgIHZhciBkZWxheSA9IHNlY3Rpb24uZ2V0QXR0cmlidXRlKCdhbmltYXRlLWRlbGF5LWRlc2t0b3AnKVxyXG4gICB9XHJcblxyXG4gICBpZiAoZGVsYXkgPT09IG51bGwpIHtcclxuICAgICByZXR1cm4gMFxyXG4gICB9IGVsc2UgaWYgKGRlbGF5LmluY2x1ZGVzKCcuJykpIHtcclxuICAgICByZXR1cm4gcGFyc2VJbnQoZGVsYXkgKiAxMDAwKVxyXG4gICB9IGVsc2Uge1xyXG4gICAgIHJldHVybiBwYXJzZUludChkZWxheSlcclxuICAgfVxyXG4gICB9XHJcblxyXG4gICBib2R5Q2xhc3MgPSAoaHRtbGNsYXNzLCB0eXBlKSA9PiB7XHJcbiAgICAgaWYoIWh0bWxjbGFzcyl7XHJcbiAgICAgICByZXR1cm5cclxuICAgICB9XHJcblxyXG4gICAgICBpZih0eXBlID09ICdhZGQnKXtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoaHRtbGNsYXNzKVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShodG1sY2xhc3MpXHJcbiAgICAgIH1cclxuICAgIH1cclxuIH1cclxuXHJcbiBuZXcgQW5pbWF0ZSgpXHJcbiIsIi8qIVxuICogU3BsaWRlLmpzXG4gKiBWZXJzaW9uICA6IDMuMi41XG4gKiBMaWNlbnNlICA6IE1JVFxuICogQ29weXJpZ2h0OiAyMDIxIE5hb3Rvc2hpIEZ1aml0YVxuICovXG5jb25zdCBQUk9KRUNUX0NPREUgPSBcInNwbGlkZVwiO1xuY29uc3QgREFUQV9BVFRSSUJVVEUgPSBgZGF0YS0ke1BST0pFQ1RfQ09ERX1gO1xuXG5jb25zdCBDUkVBVEVEID0gMTtcbmNvbnN0IE1PVU5URUQgPSAyO1xuY29uc3QgSURMRSA9IDM7XG5jb25zdCBNT1ZJTkcgPSA0O1xuY29uc3QgREVTVFJPWUVEID0gNTtcbmNvbnN0IFNUQVRFUyA9IHtcbiAgQ1JFQVRFRCxcbiAgTU9VTlRFRCxcbiAgSURMRSxcbiAgTU9WSU5HLFxuICBERVNUUk9ZRURcbn07XG5cbmNvbnN0IERFRkFVTFRfRVZFTlRfUFJJT1JJVFkgPSAxMDtcbmNvbnN0IERFRkFVTFRfVVNFUl9FVkVOVF9QUklPUklUWSA9IDIwO1xuXG5mdW5jdGlvbiBlbXB0eShhcnJheSkge1xuICBhcnJheS5sZW5ndGggPSAwO1xufVxuXG5mdW5jdGlvbiBpc09iamVjdChzdWJqZWN0KSB7XG4gIHJldHVybiAhaXNOdWxsKHN1YmplY3QpICYmIHR5cGVvZiBzdWJqZWN0ID09PSBcIm9iamVjdFwiO1xufVxuZnVuY3Rpb24gaXNBcnJheShzdWJqZWN0KSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KHN1YmplY3QpO1xufVxuZnVuY3Rpb24gaXNGdW5jdGlvbihzdWJqZWN0KSB7XG4gIHJldHVybiB0eXBlb2Ygc3ViamVjdCA9PT0gXCJmdW5jdGlvblwiO1xufVxuZnVuY3Rpb24gaXNTdHJpbmcoc3ViamVjdCkge1xuICByZXR1cm4gdHlwZW9mIHN1YmplY3QgPT09IFwic3RyaW5nXCI7XG59XG5mdW5jdGlvbiBpc1VuZGVmaW5lZChzdWJqZWN0KSB7XG4gIHJldHVybiB0eXBlb2Ygc3ViamVjdCA9PT0gXCJ1bmRlZmluZWRcIjtcbn1cbmZ1bmN0aW9uIGlzTnVsbChzdWJqZWN0KSB7XG4gIHJldHVybiBzdWJqZWN0ID09PSBudWxsO1xufVxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudChzdWJqZWN0KSB7XG4gIHJldHVybiBzdWJqZWN0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIHRvQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIGlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbdmFsdWVdO1xufVxuXG5mdW5jdGlvbiBmb3JFYWNoKHZhbHVlcywgaXRlcmF0ZWUpIHtcbiAgdG9BcnJheSh2YWx1ZXMpLmZvckVhY2goaXRlcmF0ZWUpO1xufVxuXG5mdW5jdGlvbiBpbmNsdWRlcyhhcnJheSwgdmFsdWUpIHtcbiAgcmV0dXJuIGFycmF5LmluZGV4T2YodmFsdWUpID4gLTE7XG59XG5cbmZ1bmN0aW9uIHB1c2goYXJyYXksIGl0ZW1zKSB7XG4gIGFycmF5LnB1c2goLi4udG9BcnJheShpdGVtcykpO1xuICByZXR1cm4gYXJyYXk7XG59XG5cbmNvbnN0IGFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbmZ1bmN0aW9uIHNsaWNlKGFycmF5TGlrZSwgc3RhcnQsIGVuZCkge1xuICByZXR1cm4gYXJyYXlQcm90by5zbGljZS5jYWxsKGFycmF5TGlrZSwgc3RhcnQsIGVuZCk7XG59XG5cbmZ1bmN0aW9uIGZpbmQoYXJyYXlMaWtlLCBwcmVkaWNhdGUpIHtcbiAgcmV0dXJuIHNsaWNlKGFycmF5TGlrZSkuZmlsdGVyKHByZWRpY2F0ZSlbMF07XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUNsYXNzKGVsbSwgY2xhc3NlcywgYWRkKSB7XG4gIGlmIChlbG0pIHtcbiAgICBmb3JFYWNoKGNsYXNzZXMsIChuYW1lKSA9PiB7XG4gICAgICBpZiAobmFtZSkge1xuICAgICAgICBlbG0uY2xhc3NMaXN0W2FkZCA/IFwiYWRkXCIgOiBcInJlbW92ZVwiXShuYW1lKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRDbGFzcyhlbG0sIGNsYXNzZXMpIHtcbiAgdG9nZ2xlQ2xhc3MoZWxtLCBpc1N0cmluZyhjbGFzc2VzKSA/IGNsYXNzZXMuc3BsaXQoXCIgXCIpIDogY2xhc3NlcywgdHJ1ZSk7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZChwYXJlbnQsIGNoaWxkcmVuKSB7XG4gIGZvckVhY2goY2hpbGRyZW4sIHBhcmVudC5hcHBlbmRDaGlsZC5iaW5kKHBhcmVudCkpO1xufVxuXG5mdW5jdGlvbiBiZWZvcmUobm9kZXMsIHJlZikge1xuICBmb3JFYWNoKG5vZGVzLCAobm9kZSkgPT4ge1xuICAgIGNvbnN0IHBhcmVudCA9IHJlZi5wYXJlbnROb2RlO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIHBhcmVudC5pbnNlcnRCZWZvcmUobm9kZSwgcmVmKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVzKGVsbSwgc2VsZWN0b3IpIHtcbiAgcmV0dXJuIChlbG1bXCJtc01hdGNoZXNTZWxlY3RvclwiXSB8fCBlbG0ubWF0Y2hlcykuY2FsbChlbG0sIHNlbGVjdG9yKTtcbn1cblxuZnVuY3Rpb24gY2hpbGRyZW4ocGFyZW50LCBzZWxlY3Rvcikge1xuICByZXR1cm4gcGFyZW50ID8gc2xpY2UocGFyZW50LmNoaWxkcmVuKS5maWx0ZXIoKGNoaWxkKSA9PiBtYXRjaGVzKGNoaWxkLCBzZWxlY3RvcikpIDogW107XG59XG5cbmZ1bmN0aW9uIGNoaWxkKHBhcmVudCwgc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHNlbGVjdG9yID8gY2hpbGRyZW4ocGFyZW50LCBzZWxlY3RvcilbMF0gOiBwYXJlbnQuZmlyc3RFbGVtZW50Q2hpbGQ7XG59XG5cbmZ1bmN0aW9uIGZvck93bihvYmplY3QsIGl0ZXJhdGVlLCByaWdodCkge1xuICBpZiAob2JqZWN0KSB7XG4gICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuICAgIGtleXMgPSByaWdodCA/IGtleXMucmV2ZXJzZSgpIDoga2V5cztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XG4gICAgICBpZiAoa2V5ICE9PSBcIl9fcHJvdG9fX1wiKSB7XG4gICAgICAgIGlmIChpdGVyYXRlZShvYmplY3Rba2V5XSwga2V5KSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqZWN0O1xufVxuXG5mdW5jdGlvbiBhc3NpZ24ob2JqZWN0KSB7XG4gIHNsaWNlKGFyZ3VtZW50cywgMSkuZm9yRWFjaCgoc291cmNlKSA9PiB7XG4gICAgZm9yT3duKHNvdXJjZSwgKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgIG9iamVjdFtrZXldID0gc291cmNlW2tleV07XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gb2JqZWN0O1xufVxuXG5mdW5jdGlvbiBtZXJnZShvYmplY3QsIHNvdXJjZSkge1xuICBmb3JPd24oc291cmNlLCAodmFsdWUsIGtleSkgPT4ge1xuICAgIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgICAgb2JqZWN0W2tleV0gPSB2YWx1ZS5zbGljZSgpO1xuICAgIH0gZWxzZSBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICBvYmplY3Rba2V5XSA9IG1lcmdlKGlzT2JqZWN0KG9iamVjdFtrZXldKSA/IG9iamVjdFtrZXldIDoge30sIHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gb2JqZWN0O1xufVxuXG5mdW5jdGlvbiByZW1vdmVBdHRyaWJ1dGUoZWxtLCBhdHRycykge1xuICBpZiAoZWxtKSB7XG4gICAgZm9yRWFjaChhdHRycywgKGF0dHIpID0+IHtcbiAgICAgIGVsbS5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0QXR0cmlidXRlKGVsbSwgYXR0cnMsIHZhbHVlKSB7XG4gIGlmIChpc09iamVjdChhdHRycykpIHtcbiAgICBmb3JPd24oYXR0cnMsICh2YWx1ZTIsIG5hbWUpID0+IHtcbiAgICAgIHNldEF0dHJpYnV0ZShlbG0sIG5hbWUsIHZhbHVlMik7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgaXNOdWxsKHZhbHVlKSA/IHJlbW92ZUF0dHJpYnV0ZShlbG0sIGF0dHJzKSA6IGVsbS5zZXRBdHRyaWJ1dGUoYXR0cnMsIFN0cmluZyh2YWx1ZSkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZSh0YWcsIGF0dHJzLCBwYXJlbnQpIHtcbiAgY29uc3QgZWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICBpZiAoYXR0cnMpIHtcbiAgICBpc1N0cmluZyhhdHRycykgPyBhZGRDbGFzcyhlbG0sIGF0dHJzKSA6IHNldEF0dHJpYnV0ZShlbG0sIGF0dHJzKTtcbiAgfVxuICBwYXJlbnQgJiYgYXBwZW5kKHBhcmVudCwgZWxtKTtcbiAgcmV0dXJuIGVsbTtcbn1cblxuZnVuY3Rpb24gc3R5bGUoZWxtLCBwcm9wLCB2YWx1ZSkge1xuICBpZiAoaXNVbmRlZmluZWQodmFsdWUpKSB7XG4gICAgcmV0dXJuIGdldENvbXB1dGVkU3R5bGUoZWxtKVtwcm9wXTtcbiAgfVxuICBpZiAoIWlzTnVsbCh2YWx1ZSkpIHtcbiAgICBjb25zdCB7IHN0eWxlOiBzdHlsZTIgfSA9IGVsbTtcbiAgICB2YWx1ZSA9IGAke3ZhbHVlfWA7XG4gICAgaWYgKHN0eWxlMltwcm9wXSAhPT0gdmFsdWUpIHtcbiAgICAgIHN0eWxlMltwcm9wXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkaXNwbGF5KGVsbSwgZGlzcGxheTIpIHtcbiAgc3R5bGUoZWxtLCBcImRpc3BsYXlcIiwgZGlzcGxheTIpO1xufVxuXG5mdW5jdGlvbiBmb2N1cyhlbG0pIHtcbiAgZWxtW1wic2V0QWN0aXZlXCJdICYmIGVsbVtcInNldEFjdGl2ZVwiXSgpIHx8IGVsbS5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG59XG5cbmZ1bmN0aW9uIGdldEF0dHJpYnV0ZShlbG0sIGF0dHIpIHtcbiAgcmV0dXJuIGVsbS5nZXRBdHRyaWJ1dGUoYXR0cik7XG59XG5cbmZ1bmN0aW9uIGhhc0NsYXNzKGVsbSwgY2xhc3NOYW1lKSB7XG4gIHJldHVybiBlbG0gJiYgZWxtLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiByZWN0KHRhcmdldCkge1xuICByZXR1cm4gdGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xufVxuXG5mdW5jdGlvbiByZW1vdmUobm9kZXMpIHtcbiAgZm9yRWFjaChub2RlcywgKG5vZGUpID0+IHtcbiAgICBpZiAobm9kZSAmJiBub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBtZWFzdXJlKHBhcmVudCwgdmFsdWUpIHtcbiAgaWYgKGlzU3RyaW5nKHZhbHVlKSkge1xuICAgIGNvbnN0IGRpdiA9IGNyZWF0ZShcImRpdlwiLCB7IHN0eWxlOiBgd2lkdGg6ICR7dmFsdWV9OyBwb3NpdGlvbjogYWJzb2x1dGU7YCB9LCBwYXJlbnQpO1xuICAgIHZhbHVlID0gcmVjdChkaXYpLndpZHRoO1xuICAgIHJlbW92ZShkaXYpO1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gcGFyc2VIdG1sKGh0bWwpIHtcbiAgcmV0dXJuIGNoaWxkKG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoaHRtbCwgXCJ0ZXh0L2h0bWxcIikuYm9keSk7XG59XG5cbmZ1bmN0aW9uIHByZXZlbnQoZSwgc3RvcFByb3BhZ2F0aW9uKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgaWYgKHN0b3BQcm9wYWdhdGlvbikge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBxdWVyeShwYXJlbnQsIHNlbGVjdG9yKSB7XG4gIHJldHVybiBwYXJlbnQgJiYgcGFyZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xufVxuXG5mdW5jdGlvbiBxdWVyeUFsbChwYXJlbnQsIHNlbGVjdG9yKSB7XG4gIHJldHVybiBzbGljZShwYXJlbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVDbGFzcyhlbG0sIGNsYXNzZXMpIHtcbiAgdG9nZ2xlQ2xhc3MoZWxtLCBjbGFzc2VzLCBmYWxzZSk7XG59XG5cbmZ1bmN0aW9uIHVuaXQodmFsdWUpIHtcbiAgcmV0dXJuIGlzU3RyaW5nKHZhbHVlKSA/IHZhbHVlIDogdmFsdWUgPyBgJHt2YWx1ZX1weGAgOiBcIlwiO1xufVxuXG5mdW5jdGlvbiBhc3NlcnQoY29uZGl0aW9uLCBtZXNzYWdlID0gXCJcIikge1xuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihgWyR7UFJPSkVDVF9DT0RFfV0gJHttZXNzYWdlfWApO1xuICB9XG59XG5cbmZ1bmN0aW9uIG5leHRUaWNrKGNhbGxiYWNrKSB7XG4gIHNldFRpbWVvdXQoY2FsbGJhY2spO1xufVxuXG5jb25zdCBub29wID0gKCkgPT4ge1xufTtcblxuZnVuY3Rpb24gcmFmKGZ1bmMpIHtcbiAgcmV0dXJuIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jKTtcbn1cblxuY29uc3QgeyBtaW4sIG1heCwgZmxvb3IsIGNlaWwsIGFicyB9ID0gTWF0aDtcblxuZnVuY3Rpb24gYXBwcm94aW1hdGVseUVxdWFsKHgsIHksIGVwc2lsb24pIHtcbiAgcmV0dXJuIGFicyh4IC0geSkgPCBlcHNpbG9uO1xufVxuXG5mdW5jdGlvbiBiZXR3ZWVuKG51bWJlciwgbWluT3JNYXgsIG1heE9yTWluLCBleGNsdXNpdmUpIHtcbiAgY29uc3QgbWluaW11bSA9IG1pbihtaW5Pck1heCwgbWF4T3JNaW4pO1xuICBjb25zdCBtYXhpbXVtID0gbWF4KG1pbk9yTWF4LCBtYXhPck1pbik7XG4gIHJldHVybiBleGNsdXNpdmUgPyBtaW5pbXVtIDwgbnVtYmVyICYmIG51bWJlciA8IG1heGltdW0gOiBtaW5pbXVtIDw9IG51bWJlciAmJiBudW1iZXIgPD0gbWF4aW11bTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobnVtYmVyLCB4LCB5KSB7XG4gIGNvbnN0IG1pbmltdW0gPSBtaW4oeCwgeSk7XG4gIGNvbnN0IG1heGltdW0gPSBtYXgoeCwgeSk7XG4gIHJldHVybiBtaW4obWF4KG1pbmltdW0sIG51bWJlciksIG1heGltdW0pO1xufVxuXG5mdW5jdGlvbiBzaWduKHgpIHtcbiAgcmV0dXJuICsoeCA+IDApIC0gKyh4IDwgMCk7XG59XG5cbmZ1bmN0aW9uIGNhbWVsVG9LZWJhYihzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC8oW2EtejAtOV0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpLnRvTG93ZXJDYXNlKCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdChzdHJpbmcsIHJlcGxhY2VtZW50cykge1xuICBmb3JFYWNoKHJlcGxhY2VtZW50cywgKHJlcGxhY2VtZW50KSA9PiB7XG4gICAgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UoXCIlc1wiLCBgJHtyZXBsYWNlbWVudH1gKTtcbiAgfSk7XG4gIHJldHVybiBzdHJpbmc7XG59XG5cbmZ1bmN0aW9uIHBhZChudW1iZXIpIHtcbiAgcmV0dXJuIG51bWJlciA8IDEwID8gYDAke251bWJlcn1gIDogYCR7bnVtYmVyfWA7XG59XG5cbmNvbnN0IGlkcyA9IHt9O1xuZnVuY3Rpb24gdW5pcXVlSWQocHJlZml4KSB7XG4gIHJldHVybiBgJHtwcmVmaXh9JHtwYWQoaWRzW3ByZWZpeF0gPSAoaWRzW3ByZWZpeF0gfHwgMCkgKyAxKX1gO1xufVxuXG5mdW5jdGlvbiBFdmVudEJ1cygpIHtcbiAgbGV0IGhhbmRsZXJzID0ge307XG4gIGZ1bmN0aW9uIG9uKGV2ZW50cywgY2FsbGJhY2ssIGtleSwgcHJpb3JpdHkgPSBERUZBVUxUX0VWRU5UX1BSSU9SSVRZKSB7XG4gICAgZm9yRWFjaEV2ZW50KGV2ZW50cywgKGV2ZW50LCBuYW1lc3BhY2UpID0+IHtcbiAgICAgIGhhbmRsZXJzW2V2ZW50XSA9IGhhbmRsZXJzW2V2ZW50XSB8fCBbXTtcbiAgICAgIHB1c2goaGFuZGxlcnNbZXZlbnRdLCB7XG4gICAgICAgIF9ldmVudDogZXZlbnQsXG4gICAgICAgIF9jYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICAgIF9uYW1lc3BhY2U6IG5hbWVzcGFjZSxcbiAgICAgICAgX3ByaW9yaXR5OiBwcmlvcml0eSxcbiAgICAgICAgX2tleToga2V5XG4gICAgICB9KS5zb3J0KChoYW5kbGVyMSwgaGFuZGxlcjIpID0+IGhhbmRsZXIxLl9wcmlvcml0eSAtIGhhbmRsZXIyLl9wcmlvcml0eSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gb2ZmKGV2ZW50cywga2V5KSB7XG4gICAgZm9yRWFjaEV2ZW50KGV2ZW50cywgKGV2ZW50LCBuYW1lc3BhY2UpID0+IHtcbiAgICAgIGNvbnN0IGV2ZW50SGFuZGxlcnMgPSBoYW5kbGVyc1tldmVudF07XG4gICAgICBoYW5kbGVyc1tldmVudF0gPSBldmVudEhhbmRsZXJzICYmIGV2ZW50SGFuZGxlcnMuZmlsdGVyKChoYW5kbGVyKSA9PiB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyLl9rZXkgPyBoYW5kbGVyLl9rZXkgIT09IGtleSA6IGtleSB8fCBoYW5kbGVyLl9uYW1lc3BhY2UgIT09IG5hbWVzcGFjZTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIG9mZkJ5KGtleSkge1xuICAgIGZvck93bihoYW5kbGVycywgKGV2ZW50SGFuZGxlcnMsIGV2ZW50KSA9PiB7XG4gICAgICBvZmYoZXZlbnQsIGtleSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZW1pdChldmVudCkge1xuICAgIChoYW5kbGVyc1tldmVudF0gfHwgW10pLmZvckVhY2goKGhhbmRsZXIpID0+IHtcbiAgICAgIGhhbmRsZXIuX2NhbGxiYWNrLmFwcGx5KGhhbmRsZXIsIHNsaWNlKGFyZ3VtZW50cywgMSkpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgaGFuZGxlcnMgPSB7fTtcbiAgfVxuICBmdW5jdGlvbiBmb3JFYWNoRXZlbnQoZXZlbnRzLCBpdGVyYXRlZSkge1xuICAgIHRvQXJyYXkoZXZlbnRzKS5qb2luKFwiIFwiKS5zcGxpdChcIiBcIikuZm9yRWFjaCgoZXZlbnROUykgPT4ge1xuICAgICAgY29uc3QgZnJhZ21lbnRzID0gZXZlbnROUy5zcGxpdChcIi5cIik7XG4gICAgICBpdGVyYXRlZShmcmFnbWVudHNbMF0sIGZyYWdtZW50c1sxXSk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBvbixcbiAgICBvZmYsXG4gICAgb2ZmQnksXG4gICAgZW1pdCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmNvbnN0IEVWRU5UX01PVU5URUQgPSBcIm1vdW50ZWRcIjtcbmNvbnN0IEVWRU5UX1JFQURZID0gXCJyZWFkeVwiO1xuY29uc3QgRVZFTlRfTU9WRSA9IFwibW92ZVwiO1xuY29uc3QgRVZFTlRfTU9WRUQgPSBcIm1vdmVkXCI7XG5jb25zdCBFVkVOVF9DTElDSyA9IFwiY2xpY2tcIjtcbmNvbnN0IEVWRU5UX0FDVElWRSA9IFwiYWN0aXZlXCI7XG5jb25zdCBFVkVOVF9JTkFDVElWRSA9IFwiaW5hY3RpdmVcIjtcbmNvbnN0IEVWRU5UX1ZJU0lCTEUgPSBcInZpc2libGVcIjtcbmNvbnN0IEVWRU5UX0hJRERFTiA9IFwiaGlkZGVuXCI7XG5jb25zdCBFVkVOVF9TTElERV9LRVlET1dOID0gXCJzbGlkZTprZXlkb3duXCI7XG5jb25zdCBFVkVOVF9SRUZSRVNIID0gXCJyZWZyZXNoXCI7XG5jb25zdCBFVkVOVF9VUERBVEVEID0gXCJ1cGRhdGVkXCI7XG5jb25zdCBFVkVOVF9SRVNJWkUgPSBcInJlc2l6ZVwiO1xuY29uc3QgRVZFTlRfUkVTSVpFRCA9IFwicmVzaXplZFwiO1xuY29uc3QgRVZFTlRfUkVQT1NJVElPTkVEID0gXCJyZXBvc2l0aW9uZWRcIjtcbmNvbnN0IEVWRU5UX0RSQUcgPSBcImRyYWdcIjtcbmNvbnN0IEVWRU5UX0RSQUdHSU5HID0gXCJkcmFnZ2luZ1wiO1xuY29uc3QgRVZFTlRfRFJBR0dFRCA9IFwiZHJhZ2dlZFwiO1xuY29uc3QgRVZFTlRfU0NST0xMID0gXCJzY3JvbGxcIjtcbmNvbnN0IEVWRU5UX1NDUk9MTEVEID0gXCJzY3JvbGxlZFwiO1xuY29uc3QgRVZFTlRfREVTVFJPWSA9IFwiZGVzdHJveVwiO1xuY29uc3QgRVZFTlRfQVJST1dTX01PVU5URUQgPSBcImFycm93czptb3VudGVkXCI7XG5jb25zdCBFVkVOVF9BUlJPV1NfVVBEQVRFRCA9IFwiYXJyb3dzOnVwZGF0ZWRcIjtcbmNvbnN0IEVWRU5UX1BBR0lOQVRJT05fTU9VTlRFRCA9IFwicGFnaW5hdGlvbjptb3VudGVkXCI7XG5jb25zdCBFVkVOVF9QQUdJTkFUSU9OX1VQREFURUQgPSBcInBhZ2luYXRpb246dXBkYXRlZFwiO1xuY29uc3QgRVZFTlRfTkFWSUdBVElPTl9NT1VOVEVEID0gXCJuYXZpZ2F0aW9uOm1vdW50ZWRcIjtcbmNvbnN0IEVWRU5UX0FVVE9QTEFZX1BMQVkgPSBcImF1dG9wbGF5OnBsYXlcIjtcbmNvbnN0IEVWRU5UX0FVVE9QTEFZX1BMQVlJTkcgPSBcImF1dG9wbGF5OnBsYXlpbmdcIjtcbmNvbnN0IEVWRU5UX0FVVE9QTEFZX1BBVVNFID0gXCJhdXRvcGxheTpwYXVzZVwiO1xuY29uc3QgRVZFTlRfTEFaWUxPQURfTE9BREVEID0gXCJsYXp5bG9hZDpsb2FkZWRcIjtcblxuZnVuY3Rpb24gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMikge1xuICBjb25zdCB7IGV2ZW50IH0gPSBTcGxpZGUyO1xuICBjb25zdCBrZXkgPSB7fTtcbiAgbGV0IGxpc3RlbmVycyA9IFtdO1xuICBmdW5jdGlvbiBvbihldmVudHMsIGNhbGxiYWNrLCBwcmlvcml0eSkge1xuICAgIGV2ZW50Lm9uKGV2ZW50cywgY2FsbGJhY2ssIGtleSwgcHJpb3JpdHkpO1xuICB9XG4gIGZ1bmN0aW9uIG9mZihldmVudHMpIHtcbiAgICBldmVudC5vZmYoZXZlbnRzLCBrZXkpO1xuICB9XG4gIGZ1bmN0aW9uIGJpbmQodGFyZ2V0cywgZXZlbnRzLCBjYWxsYmFjaywgb3B0aW9ucykge1xuICAgIGZvckVhY2hFdmVudCh0YXJnZXRzLCBldmVudHMsICh0YXJnZXQsIGV2ZW50MikgPT4ge1xuICAgICAgbGlzdGVuZXJzLnB1c2goW3RhcmdldCwgZXZlbnQyLCBjYWxsYmFjaywgb3B0aW9uc10pO1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQyLCBjYWxsYmFjaywgb3B0aW9ucyk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gdW5iaW5kKHRhcmdldHMsIGV2ZW50cywgY2FsbGJhY2spIHtcbiAgICBmb3JFYWNoRXZlbnQodGFyZ2V0cywgZXZlbnRzLCAodGFyZ2V0LCBldmVudDIpID0+IHtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgIGlmIChsaXN0ZW5lclswXSA9PT0gdGFyZ2V0ICYmIGxpc3RlbmVyWzFdID09PSBldmVudDIgJiYgKCFjYWxsYmFjayB8fCBsaXN0ZW5lclsyXSA9PT0gY2FsbGJhY2spKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQyLCBsaXN0ZW5lclsyXSwgbGlzdGVuZXJbM10pO1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGZvckVhY2hFdmVudCh0YXJnZXRzLCBldmVudHMsIGl0ZXJhdGVlKSB7XG4gICAgZm9yRWFjaCh0YXJnZXRzLCAodGFyZ2V0KSA9PiB7XG4gICAgICBpZiAodGFyZ2V0KSB7XG4gICAgICAgIGV2ZW50cy5zcGxpdChcIiBcIikuZm9yRWFjaChpdGVyYXRlZS5iaW5kKG51bGwsIHRhcmdldCkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcigoZGF0YSkgPT4gdW5iaW5kKGRhdGFbMF0sIGRhdGFbMV0pKTtcbiAgICBldmVudC5vZmZCeShrZXkpO1xuICB9XG4gIGV2ZW50Lm9uKEVWRU5UX0RFU1RST1ksIGRlc3Ryb3ksIGtleSk7XG4gIHJldHVybiB7XG4gICAgb24sXG4gICAgb2ZmLFxuICAgIGVtaXQ6IGV2ZW50LmVtaXQsXG4gICAgYmluZCxcbiAgICB1bmJpbmQsXG4gICAgZGVzdHJveVxuICB9O1xufVxuXG5mdW5jdGlvbiBSZXF1ZXN0SW50ZXJ2YWwoaW50ZXJ2YWwsIG9uSW50ZXJ2YWwsIG9uVXBkYXRlLCBsaW1pdCkge1xuICBjb25zdCB7IG5vdyB9ID0gRGF0ZTtcbiAgbGV0IHN0YXJ0VGltZTtcbiAgbGV0IHJhdGUgPSAwO1xuICBsZXQgaWQ7XG4gIGxldCBwYXVzZWQgPSB0cnVlO1xuICBsZXQgY291bnQgPSAwO1xuICBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgaWYgKCFwYXVzZWQpIHtcbiAgICAgIGNvbnN0IGVsYXBzZWQgPSBub3coKSAtIHN0YXJ0VGltZTtcbiAgICAgIGlmIChlbGFwc2VkID49IGludGVydmFsKSB7XG4gICAgICAgIHJhdGUgPSAxO1xuICAgICAgICBzdGFydFRpbWUgPSBub3coKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJhdGUgPSBlbGFwc2VkIC8gaW50ZXJ2YWw7XG4gICAgICB9XG4gICAgICBpZiAob25VcGRhdGUpIHtcbiAgICAgICAgb25VcGRhdGUocmF0ZSk7XG4gICAgICB9XG4gICAgICBpZiAocmF0ZSA9PT0gMSkge1xuICAgICAgICBvbkludGVydmFsKCk7XG4gICAgICAgIGlmIChsaW1pdCAmJiArK2NvdW50ID49IGxpbWl0KSB7XG4gICAgICAgICAgcmV0dXJuIHBhdXNlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJhZih1cGRhdGUpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBzdGFydChyZXN1bWUpIHtcbiAgICAhcmVzdW1lICYmIGNhbmNlbCgpO1xuICAgIHN0YXJ0VGltZSA9IG5vdygpIC0gKHJlc3VtZSA/IHJhdGUgKiBpbnRlcnZhbCA6IDApO1xuICAgIHBhdXNlZCA9IGZhbHNlO1xuICAgIHJhZih1cGRhdGUpO1xuICB9XG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIHBhdXNlZCA9IHRydWU7XG4gIH1cbiAgZnVuY3Rpb24gcmV3aW5kKCkge1xuICAgIHN0YXJ0VGltZSA9IG5vdygpO1xuICAgIHJhdGUgPSAwO1xuICAgIGlmIChvblVwZGF0ZSkge1xuICAgICAgb25VcGRhdGUocmF0ZSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGNhbmNlbCgpIHtcbiAgICBjYW5jZWxBbmltYXRpb25GcmFtZShpZCk7XG4gICAgcmF0ZSA9IDA7XG4gICAgaWQgPSAwO1xuICAgIHBhdXNlZCA9IHRydWU7XG4gIH1cbiAgZnVuY3Rpb24gaXNQYXVzZWQoKSB7XG4gICAgcmV0dXJuIHBhdXNlZDtcbiAgfVxuICByZXR1cm4ge1xuICAgIHN0YXJ0LFxuICAgIHJld2luZCxcbiAgICBwYXVzZSxcbiAgICBjYW5jZWwsXG4gICAgaXNQYXVzZWRcbiAgfTtcbn1cblxuZnVuY3Rpb24gU3RhdGUoaW5pdGlhbFN0YXRlKSB7XG4gIGxldCBzdGF0ZSA9IGluaXRpYWxTdGF0ZTtcbiAgZnVuY3Rpb24gc2V0KHZhbHVlKSB7XG4gICAgc3RhdGUgPSB2YWx1ZTtcbiAgfVxuICBmdW5jdGlvbiBpcyhzdGF0ZXMpIHtcbiAgICByZXR1cm4gaW5jbHVkZXModG9BcnJheShzdGF0ZXMpLCBzdGF0ZSk7XG4gIH1cbiAgcmV0dXJuIHsgc2V0LCBpcyB9O1xufVxuXG5mdW5jdGlvbiBUaHJvdHRsZShmdW5jLCBkdXJhdGlvbikge1xuICBsZXQgaW50ZXJ2YWw7XG4gIGZ1bmN0aW9uIHRocm90dGxlZCgpIHtcbiAgICBpZiAoIWludGVydmFsKSB7XG4gICAgICBpbnRlcnZhbCA9IFJlcXVlc3RJbnRlcnZhbChkdXJhdGlvbiB8fCAwLCAoKSA9PiB7XG4gICAgICAgIGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgaW50ZXJ2YWwgPSBudWxsO1xuICAgICAgfSwgbnVsbCwgMSk7XG4gICAgICBpbnRlcnZhbC5zdGFydCgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhyb3R0bGVkO1xufVxuXG5mdW5jdGlvbiBPcHRpb25zKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHRocm90dGxlZE9ic2VydmUgPSBUaHJvdHRsZShvYnNlcnZlKTtcbiAgbGV0IGluaXRpYWxPcHRpb25zO1xuICBsZXQgcG9pbnRzO1xuICBsZXQgY3VyclBvaW50O1xuICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICB0cnkge1xuICAgICAgbWVyZ2Uob3B0aW9ucywgSlNPTi5wYXJzZShnZXRBdHRyaWJ1dGUoU3BsaWRlMi5yb290LCBEQVRBX0FUVFJJQlVURSkpKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBhc3NlcnQoZmFsc2UsIGUubWVzc2FnZSk7XG4gICAgfVxuICAgIGluaXRpYWxPcHRpb25zID0gbWVyZ2Uoe30sIG9wdGlvbnMpO1xuICAgIGNvbnN0IHsgYnJlYWtwb2ludHMgfSA9IG9wdGlvbnM7XG4gICAgaWYgKGJyZWFrcG9pbnRzKSB7XG4gICAgICBjb25zdCBpc01pbiA9IG9wdGlvbnMubWVkaWFRdWVyeSA9PT0gXCJtaW5cIjtcbiAgICAgIHBvaW50cyA9IE9iamVjdC5rZXlzKGJyZWFrcG9pbnRzKS5zb3J0KChuLCBtKSA9PiBpc01pbiA/ICttIC0gK24gOiArbiAtICttKS5tYXAoKHBvaW50KSA9PiBbXG4gICAgICAgIHBvaW50LFxuICAgICAgICBtYXRjaE1lZGlhKGAoJHtpc01pbiA/IFwibWluXCIgOiBcIm1heFwifS13aWR0aDoke3BvaW50fXB4KWApXG4gICAgICBdKTtcbiAgICAgIG9ic2VydmUoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaWYgKHBvaW50cykge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aHJvdHRsZWRPYnNlcnZlKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveShjb21wbGV0ZWx5KSB7XG4gICAgaWYgKGNvbXBsZXRlbHkpIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdGhyb3R0bGVkT2JzZXJ2ZSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIG9ic2VydmUoKSB7XG4gICAgY29uc3QgaXRlbSA9IGZpbmQocG9pbnRzLCAoaXRlbTIpID0+IGl0ZW0yWzFdLm1hdGNoZXMpIHx8IFtdO1xuICAgIGlmIChpdGVtWzBdICE9PSBjdXJyUG9pbnQpIHtcbiAgICAgIG9uTWF0Y2goY3VyclBvaW50ID0gaXRlbVswXSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIG9uTWF0Y2gocG9pbnQpIHtcbiAgICBjb25zdCBuZXdPcHRpb25zID0gb3B0aW9ucy5icmVha3BvaW50c1twb2ludF0gfHwgaW5pdGlhbE9wdGlvbnM7XG4gICAgaWYgKG5ld09wdGlvbnMuZGVzdHJveSkge1xuICAgICAgU3BsaWRlMi5vcHRpb25zID0gaW5pdGlhbE9wdGlvbnM7XG4gICAgICBTcGxpZGUyLmRlc3Ryb3kobmV3T3B0aW9ucy5kZXN0cm95ID09PSBcImNvbXBsZXRlbHlcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChTcGxpZGUyLnN0YXRlLmlzKERFU1RST1lFRCkpIHtcbiAgICAgICAgZGVzdHJveSh0cnVlKTtcbiAgICAgICAgU3BsaWRlMi5tb3VudCgpO1xuICAgICAgfVxuICAgICAgU3BsaWRlMi5vcHRpb25zID0gbmV3T3B0aW9ucztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBzZXR1cCxcbiAgICBtb3VudCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmNvbnN0IFJUTCA9IFwicnRsXCI7XG5jb25zdCBUVEIgPSBcInR0YlwiO1xuXG5jb25zdCBPUklFTlRBVElPTl9NQVAgPSB7XG4gIG1hcmdpblJpZ2h0OiBbXCJtYXJnaW5Cb3R0b21cIiwgXCJtYXJnaW5MZWZ0XCJdLFxuICBhdXRvV2lkdGg6IFtcImF1dG9IZWlnaHRcIl0sXG4gIGZpeGVkV2lkdGg6IFtcImZpeGVkSGVpZ2h0XCJdLFxuICBwYWRkaW5nTGVmdDogW1wicGFkZGluZ1RvcFwiLCBcInBhZGRpbmdSaWdodFwiXSxcbiAgcGFkZGluZ1JpZ2h0OiBbXCJwYWRkaW5nQm90dG9tXCIsIFwicGFkZGluZ0xlZnRcIl0sXG4gIHdpZHRoOiBbXCJoZWlnaHRcIl0sXG4gIGxlZnQ6IFtcInRvcFwiLCBcInJpZ2h0XCJdLFxuICByaWdodDogW1wiYm90dG9tXCIsIFwibGVmdFwiXSxcbiAgeDogW1wieVwiXSxcbiAgWDogW1wiWVwiXSxcbiAgWTogW1wiWFwiXSxcbiAgQXJyb3dMZWZ0OiBbXCJBcnJvd1VwXCIsIFwiQXJyb3dSaWdodFwiXSxcbiAgQXJyb3dSaWdodDogW1wiQXJyb3dEb3duXCIsIFwiQXJyb3dMZWZ0XCJdXG59O1xuZnVuY3Rpb24gRGlyZWN0aW9uKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGZ1bmN0aW9uIHJlc29sdmUocHJvcCwgYXhpc09ubHkpIHtcbiAgICBjb25zdCB7IGRpcmVjdGlvbiB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBpbmRleCA9IGRpcmVjdGlvbiA9PT0gUlRMICYmICFheGlzT25seSA/IDEgOiBkaXJlY3Rpb24gPT09IFRUQiA/IDAgOiAtMTtcbiAgICByZXR1cm4gT1JJRU5UQVRJT05fTUFQW3Byb3BdW2luZGV4XSB8fCBwcm9wO1xuICB9XG4gIGZ1bmN0aW9uIG9yaWVudCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAqIChvcHRpb25zLmRpcmVjdGlvbiA9PT0gUlRMID8gMSA6IC0xKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHJlc29sdmUsXG4gICAgb3JpZW50XG4gIH07XG59XG5cbmNvbnN0IENMQVNTX1JPT1QgPSBQUk9KRUNUX0NPREU7XG5jb25zdCBDTEFTU19TTElERVIgPSBgJHtQUk9KRUNUX0NPREV9X19zbGlkZXJgO1xuY29uc3QgQ0xBU1NfVFJBQ0sgPSBgJHtQUk9KRUNUX0NPREV9X190cmFja2A7XG5jb25zdCBDTEFTU19MSVNUID0gYCR7UFJPSkVDVF9DT0RFfV9fbGlzdGA7XG5jb25zdCBDTEFTU19TTElERSA9IGAke1BST0pFQ1RfQ09ERX1fX3NsaWRlYDtcbmNvbnN0IENMQVNTX0NMT05FID0gYCR7Q0xBU1NfU0xJREV9LS1jbG9uZWA7XG5jb25zdCBDTEFTU19DT05UQUlORVIgPSBgJHtDTEFTU19TTElERX1fX2NvbnRhaW5lcmA7XG5jb25zdCBDTEFTU19BUlJPV1MgPSBgJHtQUk9KRUNUX0NPREV9X19hcnJvd3NgO1xuY29uc3QgQ0xBU1NfQVJST1cgPSBgJHtQUk9KRUNUX0NPREV9X19hcnJvd2A7XG5jb25zdCBDTEFTU19BUlJPV19QUkVWID0gYCR7Q0xBU1NfQVJST1d9LS1wcmV2YDtcbmNvbnN0IENMQVNTX0FSUk9XX05FWFQgPSBgJHtDTEFTU19BUlJPV30tLW5leHRgO1xuY29uc3QgQ0xBU1NfUEFHSU5BVElPTiA9IGAke1BST0pFQ1RfQ09ERX1fX3BhZ2luYXRpb25gO1xuY29uc3QgQ0xBU1NfUEFHSU5BVElPTl9QQUdFID0gYCR7Q0xBU1NfUEFHSU5BVElPTn1fX3BhZ2VgO1xuY29uc3QgQ0xBU1NfUFJPR1JFU1MgPSBgJHtQUk9KRUNUX0NPREV9X19wcm9ncmVzc2A7XG5jb25zdCBDTEFTU19QUk9HUkVTU19CQVIgPSBgJHtDTEFTU19QUk9HUkVTU31fX2JhcmA7XG5jb25zdCBDTEFTU19BVVRPUExBWSA9IGAke1BST0pFQ1RfQ09ERX1fX2F1dG9wbGF5YDtcbmNvbnN0IENMQVNTX1BMQVkgPSBgJHtQUk9KRUNUX0NPREV9X19wbGF5YDtcbmNvbnN0IENMQVNTX1BBVVNFID0gYCR7UFJPSkVDVF9DT0RFfV9fcGF1c2VgO1xuY29uc3QgQ0xBU1NfU1BJTk5FUiA9IGAke1BST0pFQ1RfQ09ERX1fX3NwaW5uZXJgO1xuY29uc3QgQ0xBU1NfSU5JVElBTElaRUQgPSBcImlzLWluaXRpYWxpemVkXCI7XG5jb25zdCBDTEFTU19BQ1RJVkUgPSBcImlzLWFjdGl2ZVwiO1xuY29uc3QgQ0xBU1NfUFJFViA9IFwiaXMtcHJldlwiO1xuY29uc3QgQ0xBU1NfTkVYVCA9IFwiaXMtbmV4dFwiO1xuY29uc3QgQ0xBU1NfVklTSUJMRSA9IFwiaXMtdmlzaWJsZVwiO1xuY29uc3QgQ0xBU1NfTE9BRElORyA9IFwiaXMtbG9hZGluZ1wiO1xuY29uc3QgU1RBVFVTX0NMQVNTRVMgPSBbQ0xBU1NfQUNUSVZFLCBDTEFTU19WSVNJQkxFLCBDTEFTU19QUkVWLCBDTEFTU19ORVhULCBDTEFTU19MT0FESU5HXTtcbmNvbnN0IENMQVNTRVMgPSB7XG4gIHNsaWRlOiBDTEFTU19TTElERSxcbiAgY2xvbmU6IENMQVNTX0NMT05FLFxuICBhcnJvd3M6IENMQVNTX0FSUk9XUyxcbiAgYXJyb3c6IENMQVNTX0FSUk9XLFxuICBwcmV2OiBDTEFTU19BUlJPV19QUkVWLFxuICBuZXh0OiBDTEFTU19BUlJPV19ORVhULFxuICBwYWdpbmF0aW9uOiBDTEFTU19QQUdJTkFUSU9OLFxuICBwYWdlOiBDTEFTU19QQUdJTkFUSU9OX1BBR0UsXG4gIHNwaW5uZXI6IENMQVNTX1NQSU5ORVJcbn07XG5cbmZ1bmN0aW9uIEVsZW1lbnRzKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24gfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IHJvb3QgfSA9IFNwbGlkZTI7XG4gIGNvbnN0IGVsZW1lbnRzID0ge307XG4gIGNvbnN0IHNsaWRlcyA9IFtdO1xuICBsZXQgY2xhc3NlcztcbiAgbGV0IHNsaWRlcjtcbiAgbGV0IHRyYWNrO1xuICBsZXQgbGlzdDtcbiAgZnVuY3Rpb24gc2V0dXAoKSB7XG4gICAgY29sbGVjdCgpO1xuICAgIGlkZW50aWZ5KCk7XG4gICAgYWRkQ2xhc3Mocm9vdCwgY2xhc3NlcyA9IGdldENsYXNzZXMoKSk7XG4gIH1cbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgb24oRVZFTlRfUkVGUkVTSCwgcmVmcmVzaCwgREVGQVVMVF9FVkVOVF9QUklPUklUWSAtIDIpO1xuICAgIG9uKEVWRU5UX1VQREFURUQsIHVwZGF0ZSk7XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBbcm9vdCwgdHJhY2ssIGxpc3RdLmZvckVhY2goKGVsbSkgPT4ge1xuICAgICAgcmVtb3ZlQXR0cmlidXRlKGVsbSwgXCJzdHlsZVwiKTtcbiAgICB9KTtcbiAgICBlbXB0eShzbGlkZXMpO1xuICAgIHJlbW92ZUNsYXNzKHJvb3QsIGNsYXNzZXMpO1xuICB9XG4gIGZ1bmN0aW9uIHJlZnJlc2goKSB7XG4gICAgZGVzdHJveSgpO1xuICAgIHNldHVwKCk7XG4gIH1cbiAgZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgIHJlbW92ZUNsYXNzKHJvb3QsIGNsYXNzZXMpO1xuICAgIGFkZENsYXNzKHJvb3QsIGNsYXNzZXMgPSBnZXRDbGFzc2VzKCkpO1xuICB9XG4gIGZ1bmN0aW9uIGNvbGxlY3QoKSB7XG4gICAgc2xpZGVyID0gY2hpbGQocm9vdCwgYC4ke0NMQVNTX1NMSURFUn1gKTtcbiAgICB0cmFjayA9IHF1ZXJ5KHJvb3QsIGAuJHtDTEFTU19UUkFDS31gKTtcbiAgICBsaXN0ID0gY2hpbGQodHJhY2ssIGAuJHtDTEFTU19MSVNUfWApO1xuICAgIGFzc2VydCh0cmFjayAmJiBsaXN0LCBcIkEgdHJhY2svbGlzdCBlbGVtZW50IGlzIG1pc3NpbmcuXCIpO1xuICAgIHB1c2goc2xpZGVzLCBjaGlsZHJlbihsaXN0LCBgLiR7Q0xBU1NfU0xJREV9Om5vdCguJHtDTEFTU19DTE9ORX0pYCkpO1xuICAgIGNvbnN0IGF1dG9wbGF5ID0gZmluZChgLiR7Q0xBU1NfQVVUT1BMQVl9YCk7XG4gICAgY29uc3QgYXJyb3dzID0gZmluZChgLiR7Q0xBU1NfQVJST1dTfWApO1xuICAgIGFzc2lnbihlbGVtZW50cywge1xuICAgICAgcm9vdCxcbiAgICAgIHNsaWRlcixcbiAgICAgIHRyYWNrLFxuICAgICAgbGlzdCxcbiAgICAgIHNsaWRlcyxcbiAgICAgIGFycm93cyxcbiAgICAgIGF1dG9wbGF5LFxuICAgICAgcHJldjogcXVlcnkoYXJyb3dzLCBgLiR7Q0xBU1NfQVJST1dfUFJFVn1gKSxcbiAgICAgIG5leHQ6IHF1ZXJ5KGFycm93cywgYC4ke0NMQVNTX0FSUk9XX05FWFR9YCksXG4gICAgICBiYXI6IHF1ZXJ5KGZpbmQoYC4ke0NMQVNTX1BST0dSRVNTfWApLCBgLiR7Q0xBU1NfUFJPR1JFU1NfQkFSfWApLFxuICAgICAgcGxheTogcXVlcnkoYXV0b3BsYXksIGAuJHtDTEFTU19QTEFZfWApLFxuICAgICAgcGF1c2U6IHF1ZXJ5KGF1dG9wbGF5LCBgLiR7Q0xBU1NfUEFVU0V9YClcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBpZGVudGlmeSgpIHtcbiAgICBjb25zdCBpZCA9IHJvb3QuaWQgfHwgdW5pcXVlSWQoUFJPSkVDVF9DT0RFKTtcbiAgICByb290LmlkID0gaWQ7XG4gICAgdHJhY2suaWQgPSB0cmFjay5pZCB8fCBgJHtpZH0tdHJhY2tgO1xuICAgIGxpc3QuaWQgPSBsaXN0LmlkIHx8IGAke2lkfS1saXN0YDtcbiAgfVxuICBmdW5jdGlvbiBmaW5kKHNlbGVjdG9yKSB7XG4gICAgcmV0dXJuIGNoaWxkKHJvb3QsIHNlbGVjdG9yKSB8fCBjaGlsZChzbGlkZXIsIHNlbGVjdG9yKTtcbiAgfVxuICBmdW5jdGlvbiBnZXRDbGFzc2VzKCkge1xuICAgIHJldHVybiBbXG4gICAgICBgJHtDTEFTU19ST09UfS0tJHtvcHRpb25zLnR5cGV9YCxcbiAgICAgIGAke0NMQVNTX1JPT1R9LS0ke29wdGlvbnMuZGlyZWN0aW9ufWAsXG4gICAgICBvcHRpb25zLmRyYWcgJiYgYCR7Q0xBU1NfUk9PVH0tLWRyYWdnYWJsZWAsXG4gICAgICBvcHRpb25zLmlzTmF2aWdhdGlvbiAmJiBgJHtDTEFTU19ST09UfS0tbmF2YCxcbiAgICAgIENMQVNTX0FDVElWRVxuICAgIF07XG4gIH1cbiAgcmV0dXJuIGFzc2lnbihlbGVtZW50cywge1xuICAgIHNldHVwLFxuICAgIG1vdW50LFxuICAgIGRlc3Ryb3lcbiAgfSk7XG59XG5cbmNvbnN0IFJPTEUgPSBcInJvbGVcIjtcbmNvbnN0IEFSSUFfQ09OVFJPTFMgPSBcImFyaWEtY29udHJvbHNcIjtcbmNvbnN0IEFSSUFfQ1VSUkVOVCA9IFwiYXJpYS1jdXJyZW50XCI7XG5jb25zdCBBUklBX0xBQkVMID0gXCJhcmlhLWxhYmVsXCI7XG5jb25zdCBBUklBX0hJRERFTiA9IFwiYXJpYS1oaWRkZW5cIjtcbmNvbnN0IFRBQl9JTkRFWCA9IFwidGFiaW5kZXhcIjtcbmNvbnN0IERJU0FCTEVEID0gXCJkaXNhYmxlZFwiO1xuY29uc3QgQVJJQV9PUklFTlRBVElPTiA9IFwiYXJpYS1vcmllbnRhdGlvblwiO1xuY29uc3QgQUxMX0FUVFJJQlVURVMgPSBbXG4gIFJPTEUsXG4gIEFSSUFfQ09OVFJPTFMsXG4gIEFSSUFfQ1VSUkVOVCxcbiAgQVJJQV9MQUJFTCxcbiAgQVJJQV9ISURERU4sXG4gIEFSSUFfT1JJRU5UQVRJT04sXG4gIFRBQl9JTkRFWCxcbiAgRElTQUJMRURcbl07XG5cbmNvbnN0IFNMSURFID0gXCJzbGlkZVwiO1xuY29uc3QgTE9PUCA9IFwibG9vcFwiO1xuY29uc3QgRkFERSA9IFwiZmFkZVwiO1xuXG5mdW5jdGlvbiBTbGlkZSQxKFNwbGlkZTIsIGluZGV4LCBzbGlkZUluZGV4LCBzbGlkZSkge1xuICBjb25zdCB7IG9uLCBlbWl0LCBiaW5kLCBkZXN0cm95OiBkZXN0cm95RXZlbnRzIH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBDb21wb25lbnRzLCByb290LCBvcHRpb25zIH0gPSBTcGxpZGUyO1xuICBjb25zdCB7IGlzTmF2aWdhdGlvbiwgdXBkYXRlT25Nb3ZlIH0gPSBvcHRpb25zO1xuICBjb25zdCB7IHJlc29sdmUgfSA9IENvbXBvbmVudHMuRGlyZWN0aW9uO1xuICBjb25zdCBzdHlsZXMgPSBnZXRBdHRyaWJ1dGUoc2xpZGUsIFwic3R5bGVcIik7XG4gIGNvbnN0IGlzQ2xvbmUgPSBzbGlkZUluZGV4ID4gLTE7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGNoaWxkKHNsaWRlLCBgLiR7Q0xBU1NfQ09OVEFJTkVSfWApO1xuICBjb25zdCBmb2N1c2FibGVOb2RlcyA9IG9wdGlvbnMuZm9jdXNhYmxlTm9kZXMgJiYgcXVlcnlBbGwoc2xpZGUsIG9wdGlvbnMuZm9jdXNhYmxlTm9kZXMpO1xuICBsZXQgZGVzdHJveWVkO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpbml0KCk7XG4gICAgYmluZChzbGlkZSwgXCJjbGljayBrZXlkb3duXCIsIChlKSA9PiB7XG4gICAgICBlbWl0KGUudHlwZSA9PT0gXCJjbGlja1wiID8gRVZFTlRfQ0xJQ0sgOiBFVkVOVF9TTElERV9LRVlET1dOLCB0aGlzLCBlKTtcbiAgICB9KTtcbiAgICBvbihbRVZFTlRfUkVGUkVTSCwgRVZFTlRfUkVQT1NJVElPTkVELCBFVkVOVF9NT1ZFRCwgRVZFTlRfU0NST0xMRURdLCB1cGRhdGUuYmluZCh0aGlzKSk7XG4gICAgaWYgKHVwZGF0ZU9uTW92ZSkge1xuICAgICAgb24oRVZFTlRfTU9WRSwgb25Nb3ZlLmJpbmQodGhpcykpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIGlmICghaXNDbG9uZSkge1xuICAgICAgc2xpZGUuaWQgPSBgJHtyb290LmlkfS1zbGlkZSR7cGFkKGluZGV4ICsgMSl9YDtcbiAgICB9XG4gICAgaWYgKGlzTmF2aWdhdGlvbikge1xuICAgICAgY29uc3QgaWR4ID0gaXNDbG9uZSA/IHNsaWRlSW5kZXggOiBpbmRleDtcbiAgICAgIGNvbnN0IGxhYmVsID0gZm9ybWF0KG9wdGlvbnMuaTE4bi5zbGlkZVgsIGlkeCArIDEpO1xuICAgICAgY29uc3QgY29udHJvbHMgPSBTcGxpZGUyLnNwbGlkZXMubWFwKChzcGxpZGUpID0+IHNwbGlkZS5yb290LmlkKS5qb2luKFwiIFwiKTtcbiAgICAgIHNldEF0dHJpYnV0ZShzbGlkZSwgQVJJQV9MQUJFTCwgbGFiZWwpO1xuICAgICAgc2V0QXR0cmlidXRlKHNsaWRlLCBBUklBX0NPTlRST0xTLCBjb250cm9scyk7XG4gICAgICBzZXRBdHRyaWJ1dGUoc2xpZGUsIFJPTEUsIFwibWVudWl0ZW1cIik7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgZGVzdHJveWVkID0gdHJ1ZTtcbiAgICBkZXN0cm95RXZlbnRzKCk7XG4gICAgcmVtb3ZlQ2xhc3Moc2xpZGUsIFNUQVRVU19DTEFTU0VTKTtcbiAgICByZW1vdmVBdHRyaWJ1dGUoc2xpZGUsIEFMTF9BVFRSSUJVVEVTKTtcbiAgICBzZXRBdHRyaWJ1dGUoc2xpZGUsIFwic3R5bGVcIiwgc3R5bGVzKTtcbiAgfVxuICBmdW5jdGlvbiBvbk1vdmUobmV4dCwgcHJldiwgZGVzdCkge1xuICAgIGlmICghZGVzdHJveWVkKSB7XG4gICAgICB1cGRhdGUuY2FsbCh0aGlzKTtcbiAgICAgIGlmIChkZXN0ID09PSBpbmRleCkge1xuICAgICAgICB1cGRhdGVBY3Rpdml0eS5jYWxsKHRoaXMsIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgaWYgKCFkZXN0cm95ZWQpIHtcbiAgICAgIGNvbnN0IHsgaW5kZXg6IGN1cnJJbmRleCB9ID0gU3BsaWRlMjtcbiAgICAgIHVwZGF0ZUFjdGl2aXR5LmNhbGwodGhpcywgaXNBY3RpdmUoKSk7XG4gICAgICB1cGRhdGVWaXNpYmlsaXR5LmNhbGwodGhpcywgaXNWaXNpYmxlKCkpO1xuICAgICAgdG9nZ2xlQ2xhc3Moc2xpZGUsIENMQVNTX1BSRVYsIGluZGV4ID09PSBjdXJySW5kZXggLSAxKTtcbiAgICAgIHRvZ2dsZUNsYXNzKHNsaWRlLCBDTEFTU19ORVhULCBpbmRleCA9PT0gY3VyckluZGV4ICsgMSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHVwZGF0ZUFjdGl2aXR5KGFjdGl2ZSkge1xuICAgIGlmIChhY3RpdmUgIT09IGhhc0NsYXNzKHNsaWRlLCBDTEFTU19BQ1RJVkUpKSB7XG4gICAgICB0b2dnbGVDbGFzcyhzbGlkZSwgQ0xBU1NfQUNUSVZFLCBhY3RpdmUpO1xuICAgICAgaWYgKGlzTmF2aWdhdGlvbikge1xuICAgICAgICBzZXRBdHRyaWJ1dGUoc2xpZGUsIEFSSUFfQ1VSUkVOVCwgYWN0aXZlIHx8IG51bGwpO1xuICAgICAgfVxuICAgICAgZW1pdChhY3RpdmUgPyBFVkVOVF9BQ1RJVkUgOiBFVkVOVF9JTkFDVElWRSwgdGhpcyk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHVwZGF0ZVZpc2liaWxpdHkodmlzaWJsZSkge1xuICAgIGNvbnN0IGFyaWFIaWRkZW4gPSAhdmlzaWJsZSAmJiAhaXNBY3RpdmUoKTtcbiAgICBzZXRBdHRyaWJ1dGUoc2xpZGUsIEFSSUFfSElEREVOLCBhcmlhSGlkZGVuIHx8IG51bGwpO1xuICAgIHNldEF0dHJpYnV0ZShzbGlkZSwgVEFCX0lOREVYLCAhYXJpYUhpZGRlbiAmJiBvcHRpb25zLnNsaWRlRm9jdXMgPyAwIDogbnVsbCk7XG4gICAgaWYgKGZvY3VzYWJsZU5vZGVzKSB7XG4gICAgICBmb2N1c2FibGVOb2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgICAgIHNldEF0dHJpYnV0ZShub2RlLCBUQUJfSU5ERVgsIGFyaWFIaWRkZW4gPyAtMSA6IG51bGwpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGlmICh2aXNpYmxlICE9PSBoYXNDbGFzcyhzbGlkZSwgQ0xBU1NfVklTSUJMRSkpIHtcbiAgICAgIHRvZ2dsZUNsYXNzKHNsaWRlLCBDTEFTU19WSVNJQkxFLCB2aXNpYmxlKTtcbiAgICAgIGVtaXQodmlzaWJsZSA/IEVWRU5UX1ZJU0lCTEUgOiBFVkVOVF9ISURERU4sIHRoaXMpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBzdHlsZSQxKHByb3AsIHZhbHVlLCB1c2VDb250YWluZXIpIHtcbiAgICBzdHlsZSh1c2VDb250YWluZXIgJiYgY29udGFpbmVyIHx8IHNsaWRlLCBwcm9wLCB2YWx1ZSk7XG4gIH1cbiAgZnVuY3Rpb24gaXNBY3RpdmUoKSB7XG4gICAgcmV0dXJuIFNwbGlkZTIuaW5kZXggPT09IGluZGV4O1xuICB9XG4gIGZ1bmN0aW9uIGlzVmlzaWJsZSgpIHtcbiAgICBpZiAoU3BsaWRlMi5pcyhGQURFKSkge1xuICAgICAgcmV0dXJuIGlzQWN0aXZlKCk7XG4gICAgfVxuICAgIGNvbnN0IHRyYWNrUmVjdCA9IHJlY3QoQ29tcG9uZW50cy5FbGVtZW50cy50cmFjayk7XG4gICAgY29uc3Qgc2xpZGVSZWN0ID0gcmVjdChzbGlkZSk7XG4gICAgY29uc3QgbGVmdCA9IHJlc29sdmUoXCJsZWZ0XCIpO1xuICAgIGNvbnN0IHJpZ2h0ID0gcmVzb2x2ZShcInJpZ2h0XCIpO1xuICAgIHJldHVybiBmbG9vcih0cmFja1JlY3RbbGVmdF0pIDw9IGNlaWwoc2xpZGVSZWN0W2xlZnRdKSAmJiBmbG9vcihzbGlkZVJlY3RbcmlnaHRdKSA8PSBjZWlsKHRyYWNrUmVjdFtyaWdodF0pO1xuICB9XG4gIGZ1bmN0aW9uIGlzV2l0aGluKGZyb20sIGRpc3RhbmNlKSB7XG4gICAgbGV0IGRpZmYgPSBhYnMoZnJvbSAtIGluZGV4KTtcbiAgICBpZiAoIWlzQ2xvbmUgJiYgKG9wdGlvbnMucmV3aW5kIHx8IFNwbGlkZTIuaXMoTE9PUCkpKSB7XG4gICAgICBkaWZmID0gbWluKGRpZmYsIFNwbGlkZTIubGVuZ3RoIC0gZGlmZik7XG4gICAgfVxuICAgIHJldHVybiBkaWZmIDw9IGRpc3RhbmNlO1xuICB9XG4gIHJldHVybiB7XG4gICAgaW5kZXgsXG4gICAgc2xpZGVJbmRleCxcbiAgICBzbGlkZSxcbiAgICBjb250YWluZXIsXG4gICAgaXNDbG9uZSxcbiAgICBtb3VudCxcbiAgICBkZXN0cm95LFxuICAgIHN0eWxlOiBzdHlsZSQxLFxuICAgIGlzV2l0aGluXG4gIH07XG59XG5cbmZ1bmN0aW9uIFNsaWRlcyhTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uLCBlbWl0LCBiaW5kIH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBzbGlkZXMsIGxpc3QgfSA9IENvbXBvbmVudHMyLkVsZW1lbnRzO1xuICBjb25zdCBTbGlkZXMyID0gW107XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGluaXQoKTtcbiAgICBvbihFVkVOVF9SRUZSRVNILCByZWZyZXNoKTtcbiAgICBvbihbRVZFTlRfTU9VTlRFRCwgRVZFTlRfUkVGUkVTSF0sICgpID0+IHtcbiAgICAgIFNsaWRlczIuc29ydCgoU2xpZGUxLCBTbGlkZTIpID0+IFNsaWRlMS5pbmRleCAtIFNsaWRlMi5pbmRleCk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBzbGlkZXMuZm9yRWFjaCgoc2xpZGUsIGluZGV4KSA9PiB7XG4gICAgICByZWdpc3RlcihzbGlkZSwgaW5kZXgsIC0xKTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIGZvckVhY2gkMSgoU2xpZGUyKSA9PiB7XG4gICAgICBTbGlkZTIuZGVzdHJveSgpO1xuICAgIH0pO1xuICAgIGVtcHR5KFNsaWRlczIpO1xuICB9XG4gIGZ1bmN0aW9uIHJlZnJlc2goKSB7XG4gICAgZGVzdHJveSgpO1xuICAgIGluaXQoKTtcbiAgfVxuICBmdW5jdGlvbiByZWdpc3RlcihzbGlkZSwgaW5kZXgsIHNsaWRlSW5kZXgpIHtcbiAgICBjb25zdCBvYmplY3QgPSBTbGlkZSQxKFNwbGlkZTIsIGluZGV4LCBzbGlkZUluZGV4LCBzbGlkZSk7XG4gICAgb2JqZWN0Lm1vdW50KCk7XG4gICAgU2xpZGVzMi5wdXNoKG9iamVjdCk7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0KGV4Y2x1ZGVDbG9uZXMpIHtcbiAgICByZXR1cm4gZXhjbHVkZUNsb25lcyA/IGZpbHRlcigoU2xpZGUyKSA9PiAhU2xpZGUyLmlzQ2xvbmUpIDogU2xpZGVzMjtcbiAgfVxuICBmdW5jdGlvbiBnZXRJbihwYWdlKSB7XG4gICAgY29uc3QgeyBDb250cm9sbGVyIH0gPSBDb21wb25lbnRzMjtcbiAgICBjb25zdCBpbmRleCA9IENvbnRyb2xsZXIudG9JbmRleChwYWdlKTtcbiAgICBjb25zdCBtYXggPSBDb250cm9sbGVyLmhhc0ZvY3VzKCkgPyAxIDogb3B0aW9ucy5wZXJQYWdlO1xuICAgIHJldHVybiBmaWx0ZXIoKFNsaWRlMikgPT4gYmV0d2VlbihTbGlkZTIuaW5kZXgsIGluZGV4LCBpbmRleCArIG1heCAtIDEpKTtcbiAgfVxuICBmdW5jdGlvbiBnZXRBdChpbmRleCkge1xuICAgIHJldHVybiBmaWx0ZXIoaW5kZXgpWzBdO1xuICB9XG4gIGZ1bmN0aW9uIGFkZChpdGVtcywgaW5kZXgpIHtcbiAgICBmb3JFYWNoKGl0ZW1zLCAoc2xpZGUpID0+IHtcbiAgICAgIGlmIChpc1N0cmluZyhzbGlkZSkpIHtcbiAgICAgICAgc2xpZGUgPSBwYXJzZUh0bWwoc2xpZGUpO1xuICAgICAgfVxuICAgICAgaWYgKGlzSFRNTEVsZW1lbnQoc2xpZGUpKSB7XG4gICAgICAgIGNvbnN0IHJlZiA9IHNsaWRlc1tpbmRleF07XG4gICAgICAgIHJlZiA/IGJlZm9yZShzbGlkZSwgcmVmKSA6IGFwcGVuZChsaXN0LCBzbGlkZSk7XG4gICAgICAgIGFkZENsYXNzKHNsaWRlLCBvcHRpb25zLmNsYXNzZXMuc2xpZGUpO1xuICAgICAgICBvYnNlcnZlSW1hZ2VzKHNsaWRlLCBlbWl0LmJpbmQobnVsbCwgRVZFTlRfUkVTSVpFKSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgZW1pdChFVkVOVF9SRUZSRVNIKTtcbiAgfVxuICBmdW5jdGlvbiByZW1vdmUkMShtYXRjaGVyKSB7XG4gICAgcmVtb3ZlKGZpbHRlcihtYXRjaGVyKS5tYXAoKFNsaWRlMikgPT4gU2xpZGUyLnNsaWRlKSk7XG4gICAgZW1pdChFVkVOVF9SRUZSRVNIKTtcbiAgfVxuICBmdW5jdGlvbiBmb3JFYWNoJDEoaXRlcmF0ZWUsIGV4Y2x1ZGVDbG9uZXMpIHtcbiAgICBnZXQoZXhjbHVkZUNsb25lcykuZm9yRWFjaChpdGVyYXRlZSk7XG4gIH1cbiAgZnVuY3Rpb24gZmlsdGVyKG1hdGNoZXIpIHtcbiAgICByZXR1cm4gU2xpZGVzMi5maWx0ZXIoaXNGdW5jdGlvbihtYXRjaGVyKSA/IG1hdGNoZXIgOiAoU2xpZGUyKSA9PiBpc1N0cmluZyhtYXRjaGVyKSA/IG1hdGNoZXMoU2xpZGUyLnNsaWRlLCBtYXRjaGVyKSA6IGluY2x1ZGVzKHRvQXJyYXkobWF0Y2hlciksIFNsaWRlMi5pbmRleCkpO1xuICB9XG4gIGZ1bmN0aW9uIHN0eWxlKHByb3AsIHZhbHVlLCB1c2VDb250YWluZXIpIHtcbiAgICBmb3JFYWNoJDEoKFNsaWRlMikgPT4ge1xuICAgICAgU2xpZGUyLnN0eWxlKHByb3AsIHZhbHVlLCB1c2VDb250YWluZXIpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIG9ic2VydmVJbWFnZXMoZWxtLCBjYWxsYmFjaykge1xuICAgIGNvbnN0IGltYWdlcyA9IHF1ZXJ5QWxsKGVsbSwgXCJpbWdcIik7XG4gICAgbGV0IHsgbGVuZ3RoIH0gPSBpbWFnZXM7XG4gICAgaWYgKGxlbmd0aCkge1xuICAgICAgaW1hZ2VzLmZvckVhY2goKGltZykgPT4ge1xuICAgICAgICBiaW5kKGltZywgXCJsb2FkIGVycm9yXCIsICgpID0+IHtcbiAgICAgICAgICBpZiAoIS0tbGVuZ3RoKSB7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZ2V0TGVuZ3RoKGV4Y2x1ZGVDbG9uZXMpIHtcbiAgICByZXR1cm4gZXhjbHVkZUNsb25lcyA/IHNsaWRlcy5sZW5ndGggOiBTbGlkZXMyLmxlbmd0aDtcbiAgfVxuICBmdW5jdGlvbiBpc0Vub3VnaCgpIHtcbiAgICByZXR1cm4gU2xpZGVzMi5sZW5ndGggPiBvcHRpb25zLnBlclBhZ2U7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBkZXN0cm95LFxuICAgIHJlZ2lzdGVyLFxuICAgIGdldCxcbiAgICBnZXRJbixcbiAgICBnZXRBdCxcbiAgICBhZGQsXG4gICAgcmVtb3ZlOiByZW1vdmUkMSxcbiAgICBmb3JFYWNoOiBmb3JFYWNoJDEsXG4gICAgZmlsdGVyLFxuICAgIHN0eWxlLFxuICAgIGdldExlbmd0aCxcbiAgICBpc0Vub3VnaFxuICB9O1xufVxuXG5mdW5jdGlvbiBMYXlvdXQoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgYmluZCwgZW1pdCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgU2xpZGVzIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgeyByZXNvbHZlIH0gPSBDb21wb25lbnRzMi5EaXJlY3Rpb247XG4gIGNvbnN0IHsgcm9vdCwgdHJhY2ssIGxpc3QgfSA9IENvbXBvbmVudHMyLkVsZW1lbnRzO1xuICBjb25zdCB7IGdldEF0IH0gPSBTbGlkZXM7XG4gIGxldCB2ZXJ0aWNhbDtcbiAgbGV0IHJvb3RSZWN0O1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpbml0KCk7XG4gICAgYmluZCh3aW5kb3csIFwicmVzaXplIGxvYWRcIiwgVGhyb3R0bGUoZW1pdC5iaW5kKHRoaXMsIEVWRU5UX1JFU0laRSkpKTtcbiAgICBvbihbRVZFTlRfVVBEQVRFRCwgRVZFTlRfUkVGUkVTSF0sIGluaXQpO1xuICAgIG9uKEVWRU5UX1JFU0laRSwgcmVzaXplKTtcbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHJvb3RSZWN0ID0gbnVsbDtcbiAgICB2ZXJ0aWNhbCA9IG9wdGlvbnMuZGlyZWN0aW9uID09PSBUVEI7XG4gICAgc3R5bGUocm9vdCwgXCJtYXhXaWR0aFwiLCB1bml0KG9wdGlvbnMud2lkdGgpKTtcbiAgICBzdHlsZSh0cmFjaywgcmVzb2x2ZShcInBhZGRpbmdMZWZ0XCIpLCBjc3NQYWRkaW5nKGZhbHNlKSk7XG4gICAgc3R5bGUodHJhY2ssIHJlc29sdmUoXCJwYWRkaW5nUmlnaHRcIiksIGNzc1BhZGRpbmcodHJ1ZSkpO1xuICAgIHJlc2l6ZSgpO1xuICB9XG4gIGZ1bmN0aW9uIHJlc2l6ZSgpIHtcbiAgICBjb25zdCBuZXdSZWN0ID0gcmVjdChyb290KTtcbiAgICBpZiAoIXJvb3RSZWN0IHx8IHJvb3RSZWN0LndpZHRoICE9PSBuZXdSZWN0LndpZHRoIHx8IHJvb3RSZWN0LmhlaWdodCAhPT0gbmV3UmVjdC5oZWlnaHQpIHtcbiAgICAgIHN0eWxlKHRyYWNrLCBcImhlaWdodFwiLCBjc3NUcmFja0hlaWdodCgpKTtcbiAgICAgIFNsaWRlcy5zdHlsZShyZXNvbHZlKFwibWFyZ2luUmlnaHRcIiksIHVuaXQob3B0aW9ucy5nYXApKTtcbiAgICAgIFNsaWRlcy5zdHlsZShcIndpZHRoXCIsIGNzc1NsaWRlV2lkdGgoKSB8fCBudWxsKTtcbiAgICAgIHNldFNsaWRlc0hlaWdodCgpO1xuICAgICAgcm9vdFJlY3QgPSBuZXdSZWN0O1xuICAgICAgZW1pdChFVkVOVF9SRVNJWkVEKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gc2V0U2xpZGVzSGVpZ2h0KCkge1xuICAgIFNsaWRlcy5zdHlsZShcImhlaWdodFwiLCBjc3NTbGlkZUhlaWdodCgpIHx8IG51bGwsIHRydWUpO1xuICB9XG4gIGZ1bmN0aW9uIGNzc1BhZGRpbmcocmlnaHQpIHtcbiAgICBjb25zdCB7IHBhZGRpbmcgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgcHJvcCA9IHJlc29sdmUocmlnaHQgPyBcInJpZ2h0XCIgOiBcImxlZnRcIik7XG4gICAgcmV0dXJuIHBhZGRpbmcgJiYgdW5pdChwYWRkaW5nW3Byb3BdIHx8IChpc09iamVjdChwYWRkaW5nKSA/IDAgOiBwYWRkaW5nKSkgfHwgXCIwcHhcIjtcbiAgfVxuICBmdW5jdGlvbiBjc3NUcmFja0hlaWdodCgpIHtcbiAgICBsZXQgaGVpZ2h0ID0gXCJcIjtcbiAgICBpZiAodmVydGljYWwpIHtcbiAgICAgIGhlaWdodCA9IGNzc0hlaWdodCgpO1xuICAgICAgYXNzZXJ0KGhlaWdodCwgXCJoZWlnaHQgb3IgaGVpZ2h0UmF0aW8gaXMgbWlzc2luZy5cIik7XG4gICAgICBoZWlnaHQgPSBgY2FsYygke2hlaWdodH0gLSAke2Nzc1BhZGRpbmcoZmFsc2UpfSAtICR7Y3NzUGFkZGluZyh0cnVlKX0pYDtcbiAgICB9XG4gICAgcmV0dXJuIGhlaWdodDtcbiAgfVxuICBmdW5jdGlvbiBjc3NIZWlnaHQoKSB7XG4gICAgcmV0dXJuIHVuaXQob3B0aW9ucy5oZWlnaHQgfHwgcmVjdChsaXN0KS53aWR0aCAqIG9wdGlvbnMuaGVpZ2h0UmF0aW8pO1xuICB9XG4gIGZ1bmN0aW9uIGNzc1NsaWRlV2lkdGgoKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMuYXV0b1dpZHRoID8gXCJcIiA6IHVuaXQob3B0aW9ucy5maXhlZFdpZHRoKSB8fCAodmVydGljYWwgPyBcIlwiIDogY3NzU2xpZGVTaXplKCkpO1xuICB9XG4gIGZ1bmN0aW9uIGNzc1NsaWRlSGVpZ2h0KCkge1xuICAgIHJldHVybiB1bml0KG9wdGlvbnMuZml4ZWRIZWlnaHQpIHx8ICh2ZXJ0aWNhbCA/IG9wdGlvbnMuYXV0b0hlaWdodCA/IFwiXCIgOiBjc3NTbGlkZVNpemUoKSA6IGNzc0hlaWdodCgpKTtcbiAgfVxuICBmdW5jdGlvbiBjc3NTbGlkZVNpemUoKSB7XG4gICAgY29uc3QgZ2FwID0gdW5pdChvcHRpb25zLmdhcCk7XG4gICAgcmV0dXJuIGBjYWxjKCgxMDAlJHtnYXAgJiYgYCArICR7Z2FwfWB9KS8ke29wdGlvbnMucGVyUGFnZSB8fCAxfSR7Z2FwICYmIGAgLSAke2dhcH1gfSlgO1xuICB9XG4gIGZ1bmN0aW9uIGxpc3RTaXplKCkge1xuICAgIHJldHVybiByZWN0KGxpc3QpW3Jlc29sdmUoXCJ3aWR0aFwiKV07XG4gIH1cbiAgZnVuY3Rpb24gc2xpZGVTaXplKGluZGV4LCB3aXRob3V0R2FwKSB7XG4gICAgY29uc3QgU2xpZGUgPSBnZXRBdChpbmRleCB8fCAwKTtcbiAgICByZXR1cm4gU2xpZGUgPyByZWN0KFNsaWRlLnNsaWRlKVtyZXNvbHZlKFwid2lkdGhcIildICsgKHdpdGhvdXRHYXAgPyAwIDogZ2V0R2FwKCkpIDogMDtcbiAgfVxuICBmdW5jdGlvbiB0b3RhbFNpemUoaW5kZXgsIHdpdGhvdXRHYXApIHtcbiAgICBjb25zdCBTbGlkZSA9IGdldEF0KGluZGV4KTtcbiAgICBpZiAoU2xpZGUpIHtcbiAgICAgIGNvbnN0IHJpZ2h0ID0gcmVjdChTbGlkZS5zbGlkZSlbcmVzb2x2ZShcInJpZ2h0XCIpXTtcbiAgICAgIGNvbnN0IGxlZnQgPSByZWN0KGxpc3QpW3Jlc29sdmUoXCJsZWZ0XCIpXTtcbiAgICAgIHJldHVybiBhYnMocmlnaHQgLSBsZWZ0KSArICh3aXRob3V0R2FwID8gMCA6IGdldEdhcCgpKTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgZnVuY3Rpb24gc2xpZGVyU2l6ZSgpIHtcbiAgICByZXR1cm4gdG90YWxTaXplKFNwbGlkZTIubGVuZ3RoIC0gMSwgdHJ1ZSkgLSB0b3RhbFNpemUoLTEsIHRydWUpO1xuICB9XG4gIGZ1bmN0aW9uIGdldEdhcCgpIHtcbiAgICBjb25zdCBTbGlkZSA9IGdldEF0KDApO1xuICAgIHJldHVybiBTbGlkZSAmJiBwYXJzZUZsb2F0KHN0eWxlKFNsaWRlLnNsaWRlLCByZXNvbHZlKFwibWFyZ2luUmlnaHRcIikpKSB8fCAwO1xuICB9XG4gIGZ1bmN0aW9uIGdldFBhZGRpbmcocmlnaHQpIHtcbiAgICByZXR1cm4gcGFyc2VGbG9hdChzdHlsZSh0cmFjaywgcmVzb2x2ZShgcGFkZGluZyR7cmlnaHQgPyBcIlJpZ2h0XCIgOiBcIkxlZnRcIn1gKSkpIHx8IDA7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBsaXN0U2l6ZSxcbiAgICBzbGlkZVNpemUsXG4gICAgc2xpZGVyU2l6ZSxcbiAgICB0b3RhbFNpemUsXG4gICAgZ2V0UGFkZGluZ1xuICB9O1xufVxuXG5mdW5jdGlvbiBDbG9uZXMoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgZW1pdCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgRWxlbWVudHMsIFNsaWRlcyB9ID0gQ29tcG9uZW50czI7XG4gIGNvbnN0IHsgcmVzb2x2ZSB9ID0gQ29tcG9uZW50czIuRGlyZWN0aW9uO1xuICBjb25zdCBjbG9uZXMgPSBbXTtcbiAgbGV0IGNsb25lQ291bnQ7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGluaXQoKTtcbiAgICBvbihFVkVOVF9SRUZSRVNILCByZWZyZXNoKTtcbiAgICBvbihbRVZFTlRfVVBEQVRFRCwgRVZFTlRfUkVTSVpFXSwgb2JzZXJ2ZSk7XG4gIH1cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBpZiAoY2xvbmVDb3VudCA9IGNvbXB1dGVDbG9uZUNvdW50KCkpIHtcbiAgICAgIGdlbmVyYXRlKGNsb25lQ291bnQpO1xuICAgICAgZW1pdChFVkVOVF9SRVNJWkUpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIHJlbW92ZShjbG9uZXMpO1xuICAgIGVtcHR5KGNsb25lcyk7XG4gIH1cbiAgZnVuY3Rpb24gcmVmcmVzaCgpIHtcbiAgICBkZXN0cm95KCk7XG4gICAgaW5pdCgpO1xuICB9XG4gIGZ1bmN0aW9uIG9ic2VydmUoKSB7XG4gICAgaWYgKGNsb25lQ291bnQgPCBjb21wdXRlQ2xvbmVDb3VudCgpKSB7XG4gICAgICBlbWl0KEVWRU5UX1JFRlJFU0gpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBnZW5lcmF0ZShjb3VudCkge1xuICAgIGNvbnN0IHNsaWRlcyA9IFNsaWRlcy5nZXQoKS5zbGljZSgpO1xuICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSBzbGlkZXM7XG4gICAgaWYgKGxlbmd0aCkge1xuICAgICAgd2hpbGUgKHNsaWRlcy5sZW5ndGggPCBjb3VudCkge1xuICAgICAgICBwdXNoKHNsaWRlcywgc2xpZGVzKTtcbiAgICAgIH1cbiAgICAgIHB1c2goc2xpZGVzLnNsaWNlKC1jb3VudCksIHNsaWRlcy5zbGljZSgwLCBjb3VudCkpLmZvckVhY2goKFNsaWRlLCBpbmRleCkgPT4ge1xuICAgICAgICBjb25zdCBpc0hlYWQgPSBpbmRleCA8IGNvdW50O1xuICAgICAgICBjb25zdCBjbG9uZSA9IGNsb25lRGVlcChTbGlkZS5zbGlkZSwgaW5kZXgpO1xuICAgICAgICBpc0hlYWQgPyBiZWZvcmUoY2xvbmUsIHNsaWRlc1swXS5zbGlkZSkgOiBhcHBlbmQoRWxlbWVudHMubGlzdCwgY2xvbmUpO1xuICAgICAgICBwdXNoKGNsb25lcywgY2xvbmUpO1xuICAgICAgICBTbGlkZXMucmVnaXN0ZXIoY2xvbmUsIGluZGV4IC0gY291bnQgKyAoaXNIZWFkID8gMCA6IGxlbmd0aCksIFNsaWRlLmluZGV4KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBjbG9uZURlZXAoZWxtLCBpbmRleCkge1xuICAgIGNvbnN0IGNsb25lID0gZWxtLmNsb25lTm9kZSh0cnVlKTtcbiAgICBhZGRDbGFzcyhjbG9uZSwgb3B0aW9ucy5jbGFzc2VzLmNsb25lKTtcbiAgICBjbG9uZS5pZCA9IGAke1NwbGlkZTIucm9vdC5pZH0tY2xvbmUke3BhZChpbmRleCArIDEpfWA7XG4gICAgcmV0dXJuIGNsb25lO1xuICB9XG4gIGZ1bmN0aW9uIGNvbXB1dGVDbG9uZUNvdW50KCkge1xuICAgIGxldCB7IGNsb25lczogY2xvbmVzMiB9ID0gb3B0aW9ucztcbiAgICBpZiAoIVNwbGlkZTIuaXMoTE9PUCkpIHtcbiAgICAgIGNsb25lczIgPSAwO1xuICAgIH0gZWxzZSBpZiAoIWNsb25lczIpIHtcbiAgICAgIGNvbnN0IGZpeGVkU2l6ZSA9IG1lYXN1cmUoRWxlbWVudHMubGlzdCwgb3B0aW9uc1tyZXNvbHZlKFwiZml4ZWRXaWR0aFwiKV0pO1xuICAgICAgY29uc3QgZml4ZWRDb3VudCA9IGZpeGVkU2l6ZSAmJiBjZWlsKHJlY3QoRWxlbWVudHMudHJhY2spW3Jlc29sdmUoXCJ3aWR0aFwiKV0gLyBmaXhlZFNpemUpO1xuICAgICAgY29uc3QgYmFzZUNvdW50ID0gZml4ZWRDb3VudCB8fCBvcHRpb25zW3Jlc29sdmUoXCJhdXRvV2lkdGhcIildICYmIFNwbGlkZTIubGVuZ3RoIHx8IG9wdGlvbnMucGVyUGFnZTtcbiAgICAgIGNsb25lczIgPSBiYXNlQ291bnQgKiAob3B0aW9ucy5kcmFnID8gKG9wdGlvbnMuZmxpY2tNYXhQYWdlcyB8fCAxKSArIDEgOiAyKTtcbiAgICB9XG4gICAgcmV0dXJuIGNsb25lczI7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmZ1bmN0aW9uIE1vdmUoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgZW1pdCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgc2xpZGVTaXplLCBnZXRQYWRkaW5nLCB0b3RhbFNpemUsIGxpc3RTaXplLCBzbGlkZXJTaXplIH0gPSBDb21wb25lbnRzMi5MYXlvdXQ7XG4gIGNvbnN0IHsgcmVzb2x2ZSwgb3JpZW50IH0gPSBDb21wb25lbnRzMi5EaXJlY3Rpb247XG4gIGNvbnN0IHsgbGlzdCwgdHJhY2sgfSA9IENvbXBvbmVudHMyLkVsZW1lbnRzO1xuICBsZXQgd2FpdGluZztcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgb24oW0VWRU5UX01PVU5URUQsIEVWRU5UX1JFU0laRUQsIEVWRU5UX1VQREFURUQsIEVWRU5UX1JFRlJFU0hdLCByZXBvc2l0aW9uKTtcbiAgfVxuICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIHJlbW92ZUF0dHJpYnV0ZShsaXN0LCBcInN0eWxlXCIpO1xuICB9XG4gIGZ1bmN0aW9uIHJlcG9zaXRpb24oKSB7XG4gICAgaWYgKCFpc0J1c3koKSkge1xuICAgICAgQ29tcG9uZW50czIuU2Nyb2xsLmNhbmNlbCgpO1xuICAgICAganVtcChTcGxpZGUyLmluZGV4KTtcbiAgICAgIGVtaXQoRVZFTlRfUkVQT1NJVElPTkVEKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gbW92ZShkZXN0LCBpbmRleCwgcHJldiwgY2FsbGJhY2spIHtcbiAgICBpZiAoIWlzQnVzeSgpKSB7XG4gICAgICBjb25zdCB7IHNldCB9ID0gU3BsaWRlMi5zdGF0ZTtcbiAgICAgIGNvbnN0IHBvc2l0aW9uID0gZ2V0UG9zaXRpb24oKTtcbiAgICAgIGNvbnN0IGxvb3BpbmcgPSBkZXN0ICE9PSBpbmRleDtcbiAgICAgIHdhaXRpbmcgPSBsb29waW5nIHx8IG9wdGlvbnMud2FpdEZvclRyYW5zaXRpb247XG4gICAgICBzZXQoTU9WSU5HKTtcbiAgICAgIGVtaXQoRVZFTlRfTU9WRSwgaW5kZXgsIHByZXYsIGRlc3QpO1xuICAgICAgQ29tcG9uZW50czIuVHJhbnNpdGlvbi5zdGFydChkZXN0LCAoKSA9PiB7XG4gICAgICAgIGxvb3BpbmcgJiYganVtcChpbmRleCk7XG4gICAgICAgIHdhaXRpbmcgPSBmYWxzZTtcbiAgICAgICAgc2V0KElETEUpO1xuICAgICAgICBlbWl0KEVWRU5UX01PVkVELCBpbmRleCwgcHJldiwgZGVzdCk7XG4gICAgICAgIGlmIChvcHRpb25zLnRyaW1TcGFjZSA9PT0gXCJtb3ZlXCIgJiYgZGVzdCAhPT0gcHJldiAmJiBwb3NpdGlvbiA9PT0gZ2V0UG9zaXRpb24oKSkge1xuICAgICAgICAgIENvbXBvbmVudHMyLkNvbnRyb2xsZXIuZ28oZGVzdCA+IHByZXYgPyBcIj5cIiA6IFwiPFwiLCBmYWxzZSwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBqdW1wKGluZGV4KSB7XG4gICAgdHJhbnNsYXRlKHRvUG9zaXRpb24oaW5kZXgsIHRydWUpKTtcbiAgfVxuICBmdW5jdGlvbiB0cmFuc2xhdGUocG9zaXRpb24sIHByZXZlbnRMb29wKSB7XG4gICAgaWYgKCFTcGxpZGUyLmlzKEZBREUpKSB7XG4gICAgICBsaXN0LnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUke3Jlc29sdmUoXCJYXCIpfSgke3ByZXZlbnRMb29wID8gcG9zaXRpb24gOiBsb29wKHBvc2l0aW9uKX1weClgO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBsb29wKHBvc2l0aW9uKSB7XG4gICAgaWYgKCF3YWl0aW5nICYmIFNwbGlkZTIuaXMoTE9PUCkpIHtcbiAgICAgIGNvbnN0IGRpZmYgPSBvcmllbnQocG9zaXRpb24gLSBnZXRQb3NpdGlvbigpKTtcbiAgICAgIGNvbnN0IGV4Y2VlZGVkTWluID0gZXhjZWVkZWRMaW1pdChmYWxzZSwgcG9zaXRpb24pICYmIGRpZmYgPCAwO1xuICAgICAgY29uc3QgZXhjZWVkZWRNYXggPSBleGNlZWRlZExpbWl0KHRydWUsIHBvc2l0aW9uKSAmJiBkaWZmID4gMDtcbiAgICAgIGlmIChleGNlZWRlZE1pbiB8fCBleGNlZWRlZE1heCkge1xuICAgICAgICBwb3NpdGlvbiA9IHNoaWZ0KHBvc2l0aW9uLCBleGNlZWRlZE1heCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwb3NpdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBzaGlmdChwb3NpdGlvbiwgYmFja3dhcmRzKSB7XG4gICAgY29uc3QgZXhjZXNzID0gcG9zaXRpb24gLSBnZXRMaW1pdChiYWNrd2FyZHMpO1xuICAgIGNvbnN0IHNpemUgPSBzbGlkZXJTaXplKCk7XG4gICAgcG9zaXRpb24gLT0gc2lnbihleGNlc3MpICogc2l6ZSAqIGNlaWwoYWJzKGV4Y2VzcykgLyBzaXplKTtcbiAgICByZXR1cm4gcG9zaXRpb247XG4gIH1cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIHdhaXRpbmcgPSBmYWxzZTtcbiAgICB0cmFuc2xhdGUoZ2V0UG9zaXRpb24oKSk7XG4gICAgQ29tcG9uZW50czIuVHJhbnNpdGlvbi5jYW5jZWwoKTtcbiAgfVxuICBmdW5jdGlvbiB0b0luZGV4KHBvc2l0aW9uKSB7XG4gICAgY29uc3QgU2xpZGVzID0gQ29tcG9uZW50czIuU2xpZGVzLmdldCgpO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgbGV0IG1pbkRpc3RhbmNlID0gSW5maW5pdHk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBTbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHNsaWRlSW5kZXggPSBTbGlkZXNbaV0uaW5kZXg7XG4gICAgICBjb25zdCBkaXN0YW5jZSA9IGFicyh0b1Bvc2l0aW9uKHNsaWRlSW5kZXgsIHRydWUpIC0gcG9zaXRpb24pO1xuICAgICAgaWYgKGRpc3RhbmNlIDw9IG1pbkRpc3RhbmNlKSB7XG4gICAgICAgIG1pbkRpc3RhbmNlID0gZGlzdGFuY2U7XG4gICAgICAgIGluZGV4ID0gc2xpZGVJbmRleDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cbiAgZnVuY3Rpb24gdG9Qb3NpdGlvbihpbmRleCwgdHJpbW1pbmcpIHtcbiAgICBjb25zdCBwb3NpdGlvbiA9IG9yaWVudCh0b3RhbFNpemUoaW5kZXggLSAxKSAtIG9mZnNldChpbmRleCkpO1xuICAgIHJldHVybiB0cmltbWluZyA/IHRyaW0ocG9zaXRpb24pIDogcG9zaXRpb247XG4gIH1cbiAgZnVuY3Rpb24gZ2V0UG9zaXRpb24oKSB7XG4gICAgY29uc3QgbGVmdCA9IHJlc29sdmUoXCJsZWZ0XCIpO1xuICAgIHJldHVybiByZWN0KGxpc3QpW2xlZnRdIC0gcmVjdCh0cmFjaylbbGVmdF0gKyBvcmllbnQoZ2V0UGFkZGluZyhmYWxzZSkpO1xuICB9XG4gIGZ1bmN0aW9uIHRyaW0ocG9zaXRpb24pIHtcbiAgICBpZiAob3B0aW9ucy50cmltU3BhY2UgJiYgU3BsaWRlMi5pcyhTTElERSkpIHtcbiAgICAgIHBvc2l0aW9uID0gY2xhbXAocG9zaXRpb24sIDAsIG9yaWVudChzbGlkZXJTaXplKCkgLSBsaXN0U2l6ZSgpKSk7XG4gICAgfVxuICAgIHJldHVybiBwb3NpdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBvZmZzZXQoaW5kZXgpIHtcbiAgICBjb25zdCB7IGZvY3VzIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBmb2N1cyA9PT0gXCJjZW50ZXJcIiA/IChsaXN0U2l6ZSgpIC0gc2xpZGVTaXplKGluZGV4LCB0cnVlKSkgLyAyIDogK2ZvY3VzICogc2xpZGVTaXplKGluZGV4KSB8fCAwO1xuICB9XG4gIGZ1bmN0aW9uIGdldExpbWl0KG1heCkge1xuICAgIHJldHVybiB0b1Bvc2l0aW9uKG1heCA/IENvbXBvbmVudHMyLkNvbnRyb2xsZXIuZ2V0RW5kKCkgOiAwLCAhIW9wdGlvbnMudHJpbVNwYWNlKTtcbiAgfVxuICBmdW5jdGlvbiBpc0J1c3koKSB7XG4gICAgcmV0dXJuICEhd2FpdGluZztcbiAgfVxuICBmdW5jdGlvbiBleGNlZWRlZExpbWl0KG1heCwgcG9zaXRpb24pIHtcbiAgICBwb3NpdGlvbiA9IGlzVW5kZWZpbmVkKHBvc2l0aW9uKSA/IGdldFBvc2l0aW9uKCkgOiBwb3NpdGlvbjtcbiAgICBjb25zdCBleGNlZWRlZE1pbiA9IG1heCAhPT0gdHJ1ZSAmJiBvcmllbnQocG9zaXRpb24pIDwgb3JpZW50KGdldExpbWl0KGZhbHNlKSk7XG4gICAgY29uc3QgZXhjZWVkZWRNYXggPSBtYXggIT09IGZhbHNlICYmIG9yaWVudChwb3NpdGlvbikgPiBvcmllbnQoZ2V0TGltaXQodHJ1ZSkpO1xuICAgIHJldHVybiBleGNlZWRlZE1pbiB8fCBleGNlZWRlZE1heDtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGRlc3Ryb3ksXG4gICAgbW92ZSxcbiAgICBqdW1wLFxuICAgIHRyYW5zbGF0ZSxcbiAgICBzaGlmdCxcbiAgICBjYW5jZWwsXG4gICAgdG9JbmRleCxcbiAgICB0b1Bvc2l0aW9uLFxuICAgIGdldFBvc2l0aW9uLFxuICAgIGdldExpbWl0LFxuICAgIGlzQnVzeSxcbiAgICBleGNlZWRlZExpbWl0XG4gIH07XG59XG5cbmZ1bmN0aW9uIENvbnRyb2xsZXIoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgTW92ZSB9ID0gQ29tcG9uZW50czI7XG4gIGNvbnN0IHsgZ2V0UG9zaXRpb24sIGdldExpbWl0IH0gPSBNb3ZlO1xuICBjb25zdCB7IGlzRW5vdWdoLCBnZXRMZW5ndGggfSA9IENvbXBvbmVudHMyLlNsaWRlcztcbiAgY29uc3QgaXNMb29wID0gU3BsaWRlMi5pcyhMT09QKTtcbiAgY29uc3QgaXNTbGlkZSA9IFNwbGlkZTIuaXMoU0xJREUpO1xuICBsZXQgY3VyckluZGV4ID0gb3B0aW9ucy5zdGFydCB8fCAwO1xuICBsZXQgcHJldkluZGV4ID0gY3VyckluZGV4O1xuICBsZXQgc2xpZGVDb3VudDtcbiAgbGV0IHBlck1vdmU7XG4gIGxldCBwZXJQYWdlO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpbml0KCk7XG4gICAgb24oW0VWRU5UX1VQREFURUQsIEVWRU5UX1JFRlJFU0hdLCBpbml0LCBERUZBVUxUX0VWRU5UX1BSSU9SSVRZIC0gMSk7XG4gIH1cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBzbGlkZUNvdW50ID0gZ2V0TGVuZ3RoKHRydWUpO1xuICAgIHBlck1vdmUgPSBvcHRpb25zLnBlck1vdmU7XG4gICAgcGVyUGFnZSA9IG9wdGlvbnMucGVyUGFnZTtcbiAgICBjdXJySW5kZXggPSBjbGFtcChjdXJySW5kZXgsIDAsIHNsaWRlQ291bnQgLSAxKTtcbiAgfVxuICBmdW5jdGlvbiBnbyhjb250cm9sLCBhbGxvd1NhbWVJbmRleCwgY2FsbGJhY2spIHtcbiAgICBjb25zdCBkZXN0ID0gcGFyc2UoY29udHJvbCk7XG4gICAgaWYgKG9wdGlvbnMudXNlU2Nyb2xsKSB7XG4gICAgICBzY3JvbGwoZGVzdCwgdHJ1ZSwgdHJ1ZSwgb3B0aW9ucy5zcGVlZCwgY2FsbGJhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBpbmRleCA9IGxvb3AoZGVzdCk7XG4gICAgICBpZiAoaW5kZXggPiAtMSAmJiAhTW92ZS5pc0J1c3koKSAmJiAoYWxsb3dTYW1lSW5kZXggfHwgaW5kZXggIT09IGN1cnJJbmRleCkpIHtcbiAgICAgICAgc2V0SW5kZXgoaW5kZXgpO1xuICAgICAgICBNb3ZlLm1vdmUoZGVzdCwgaW5kZXgsIHByZXZJbmRleCwgY2FsbGJhY2spO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBzY3JvbGwoZGVzdGluYXRpb24sIHVzZUluZGV4LCBzbmFwLCBkdXJhdGlvbiwgY2FsbGJhY2spIHtcbiAgICBjb25zdCBkZXN0ID0gdXNlSW5kZXggPyBkZXN0aW5hdGlvbiA6IHRvRGVzdChkZXN0aW5hdGlvbik7XG4gICAgQ29tcG9uZW50czIuU2Nyb2xsLnNjcm9sbCh1c2VJbmRleCB8fCBzbmFwID8gTW92ZS50b1Bvc2l0aW9uKGRlc3QsIHRydWUpIDogZGVzdGluYXRpb24sIGR1cmF0aW9uLCAoKSA9PiB7XG4gICAgICBzZXRJbmRleChNb3ZlLnRvSW5kZXgoTW92ZS5nZXRQb3NpdGlvbigpKSk7XG4gICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHBhcnNlKGNvbnRyb2wpIHtcbiAgICBsZXQgaW5kZXggPSBjdXJySW5kZXg7XG4gICAgaWYgKGlzU3RyaW5nKGNvbnRyb2wpKSB7XG4gICAgICBjb25zdCBbLCBpbmRpY2F0b3IsIG51bWJlcl0gPSBjb250cm9sLm1hdGNoKC8oWytcXC08Pl0pKFxcZCspPy8pIHx8IFtdO1xuICAgICAgaWYgKGluZGljYXRvciA9PT0gXCIrXCIgfHwgaW5kaWNhdG9yID09PSBcIi1cIikge1xuICAgICAgICBpbmRleCA9IGNvbXB1dGVEZXN0SW5kZXgoY3VyckluZGV4ICsgK2Ake2luZGljYXRvcn0keytudW1iZXIgfHwgMX1gLCBjdXJySW5kZXgsIHRydWUpO1xuICAgICAgfSBlbHNlIGlmIChpbmRpY2F0b3IgPT09IFwiPlwiKSB7XG4gICAgICAgIGluZGV4ID0gbnVtYmVyID8gdG9JbmRleCgrbnVtYmVyKSA6IGdldE5leHQodHJ1ZSk7XG4gICAgICB9IGVsc2UgaWYgKGluZGljYXRvciA9PT0gXCI8XCIpIHtcbiAgICAgICAgaW5kZXggPSBnZXRQcmV2KHRydWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaXNMb29wKSB7XG4gICAgICAgIGluZGV4ID0gY2xhbXAoY29udHJvbCwgLXBlclBhZ2UsIHNsaWRlQ291bnQgKyBwZXJQYWdlIC0gMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbmRleCA9IGNsYW1wKGNvbnRyb2wsIDAsIGdldEVuZCgpKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG4gIGZ1bmN0aW9uIGdldE5leHQoZGVzdGluYXRpb24pIHtcbiAgICByZXR1cm4gZ2V0QWRqYWNlbnQoZmFsc2UsIGRlc3RpbmF0aW9uKTtcbiAgfVxuICBmdW5jdGlvbiBnZXRQcmV2KGRlc3RpbmF0aW9uKSB7XG4gICAgcmV0dXJuIGdldEFkamFjZW50KHRydWUsIGRlc3RpbmF0aW9uKTtcbiAgfVxuICBmdW5jdGlvbiBnZXRBZGphY2VudChwcmV2LCBkZXN0aW5hdGlvbikge1xuICAgIGNvbnN0IG51bWJlciA9IHBlck1vdmUgfHwgKGhhc0ZvY3VzKCkgPyAxIDogcGVyUGFnZSk7XG4gICAgY29uc3QgZGVzdCA9IGNvbXB1dGVEZXN0SW5kZXgoY3VyckluZGV4ICsgbnVtYmVyICogKHByZXYgPyAtMSA6IDEpLCBjdXJySW5kZXgpO1xuICAgIGlmIChkZXN0ID09PSAtMSAmJiBpc1NsaWRlKSB7XG4gICAgICBpZiAoIWFwcHJveGltYXRlbHlFcXVhbChnZXRQb3NpdGlvbigpLCBnZXRMaW1pdCghcHJldiksIDEpKSB7XG4gICAgICAgIHJldHVybiBwcmV2ID8gMCA6IGdldEVuZCgpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGVzdGluYXRpb24gPyBkZXN0IDogbG9vcChkZXN0KTtcbiAgfVxuICBmdW5jdGlvbiBjb21wdXRlRGVzdEluZGV4KGRlc3QsIGZyb20sIGluY3JlbWVudGFsKSB7XG4gICAgaWYgKGlzRW5vdWdoKCkpIHtcbiAgICAgIGNvbnN0IGVuZCA9IGdldEVuZCgpO1xuICAgICAgaWYgKGRlc3QgPCAwIHx8IGRlc3QgPiBlbmQpIHtcbiAgICAgICAgaWYgKGJldHdlZW4oMCwgZGVzdCwgZnJvbSwgdHJ1ZSkgfHwgYmV0d2VlbihlbmQsIGZyb20sIGRlc3QsIHRydWUpKSB7XG4gICAgICAgICAgZGVzdCA9IHRvSW5kZXgodG9QYWdlKGRlc3QpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoaXNMb29wKSB7XG4gICAgICAgICAgICBkZXN0ID0gcGVyTW92ZSA/IGRlc3QgOiBkZXN0IDwgMCA/IC0oc2xpZGVDb3VudCAlIHBlclBhZ2UgfHwgcGVyUGFnZSkgOiBzbGlkZUNvdW50O1xuICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5yZXdpbmQpIHtcbiAgICAgICAgICAgIGRlc3QgPSBkZXN0IDwgMCA/IGVuZCA6IDA7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRlc3QgPSAtMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghaW5jcmVtZW50YWwgJiYgZGVzdCAhPT0gZnJvbSkge1xuICAgICAgICAgIGRlc3QgPSBwZXJNb3ZlID8gZGVzdCA6IHRvSW5kZXgodG9QYWdlKGZyb20pICsgKGRlc3QgPCBmcm9tID8gLTEgOiAxKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZGVzdCA9IC0xO1xuICAgIH1cbiAgICByZXR1cm4gZGVzdDtcbiAgfVxuICBmdW5jdGlvbiBnZXRFbmQoKSB7XG4gICAgbGV0IGVuZCA9IHNsaWRlQ291bnQgLSBwZXJQYWdlO1xuICAgIGlmIChoYXNGb2N1cygpIHx8IGlzTG9vcCAmJiBwZXJNb3ZlKSB7XG4gICAgICBlbmQgPSBzbGlkZUNvdW50IC0gMTtcbiAgICB9XG4gICAgcmV0dXJuIG1heChlbmQsIDApO1xuICB9XG4gIGZ1bmN0aW9uIGxvb3AoaW5kZXgpIHtcbiAgICBpZiAoaXNMb29wKSB7XG4gICAgICByZXR1cm4gaXNFbm91Z2goKSA/IGluZGV4ICUgc2xpZGVDb3VudCArIChpbmRleCA8IDAgPyBzbGlkZUNvdW50IDogMCkgOiAtMTtcbiAgICB9XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG4gIGZ1bmN0aW9uIHRvSW5kZXgocGFnZSkge1xuICAgIHJldHVybiBjbGFtcChoYXNGb2N1cygpID8gcGFnZSA6IHBlclBhZ2UgKiBwYWdlLCAwLCBnZXRFbmQoKSk7XG4gIH1cbiAgZnVuY3Rpb24gdG9QYWdlKGluZGV4KSB7XG4gICAgaWYgKCFoYXNGb2N1cygpKSB7XG4gICAgICBpbmRleCA9IGJldHdlZW4oaW5kZXgsIHNsaWRlQ291bnQgLSBwZXJQYWdlLCBzbGlkZUNvdW50IC0gMSkgPyBzbGlkZUNvdW50IC0gMSA6IGluZGV4O1xuICAgICAgaW5kZXggPSBmbG9vcihpbmRleCAvIHBlclBhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cbiAgZnVuY3Rpb24gdG9EZXN0KGRlc3RpbmF0aW9uKSB7XG4gICAgY29uc3QgY2xvc2VzdCA9IE1vdmUudG9JbmRleChkZXN0aW5hdGlvbik7XG4gICAgcmV0dXJuIGlzU2xpZGUgPyBjbGFtcChjbG9zZXN0LCAwLCBnZXRFbmQoKSkgOiBjbG9zZXN0O1xuICB9XG4gIGZ1bmN0aW9uIHNldEluZGV4KGluZGV4KSB7XG4gICAgaWYgKGluZGV4ICE9PSBjdXJySW5kZXgpIHtcbiAgICAgIHByZXZJbmRleCA9IGN1cnJJbmRleDtcbiAgICAgIGN1cnJJbmRleCA9IGluZGV4O1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBnZXRJbmRleChwcmV2KSB7XG4gICAgcmV0dXJuIHByZXYgPyBwcmV2SW5kZXggOiBjdXJySW5kZXg7XG4gIH1cbiAgZnVuY3Rpb24gaGFzRm9jdXMoKSB7XG4gICAgcmV0dXJuICFpc1VuZGVmaW5lZChvcHRpb25zLmZvY3VzKSB8fCBvcHRpb25zLmlzTmF2aWdhdGlvbjtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGdvLFxuICAgIHNjcm9sbCxcbiAgICBnZXROZXh0LFxuICAgIGdldFByZXYsXG4gICAgZ2V0RW5kLFxuICAgIHNldEluZGV4LFxuICAgIGdldEluZGV4LFxuICAgIHRvSW5kZXgsXG4gICAgdG9QYWdlLFxuICAgIHRvRGVzdCxcbiAgICBoYXNGb2N1c1xuICB9O1xufVxuXG5jb25zdCBYTUxfTkFNRV9TUEFDRSA9IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtcbmNvbnN0IFBBVEggPSBcIm0xNS41IDAuOTMyLTQuMyA0LjM4IDE0LjUgMTQuNi0xNC41IDE0LjUgNC4zIDQuNCAxNC42LTE0LjYgNC40LTQuMy00LjQtNC40LTE0LjYtMTQuNnpcIjtcbmNvbnN0IFNJWkUgPSA0MDtcblxuZnVuY3Rpb24gQXJyb3dzKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24sIGJpbmQsIGVtaXQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IGNsYXNzZXMsIGkxOG4gfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHsgRWxlbWVudHMsIENvbnRyb2xsZXIgfSA9IENvbXBvbmVudHMyO1xuICBsZXQgd3JhcHBlciA9IEVsZW1lbnRzLmFycm93cztcbiAgbGV0IHByZXYgPSBFbGVtZW50cy5wcmV2O1xuICBsZXQgbmV4dCA9IEVsZW1lbnRzLm5leHQ7XG4gIGxldCBjcmVhdGVkO1xuICBjb25zdCBhcnJvd3MgPSB7fTtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaW5pdCgpO1xuICAgIG9uKEVWRU5UX1VQREFURUQsIGluaXQpO1xuICB9XG4gIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgaWYgKG9wdGlvbnMuYXJyb3dzKSB7XG4gICAgICBpZiAoIXByZXYgfHwgIW5leHQpIHtcbiAgICAgICAgY3JlYXRlQXJyb3dzKCk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChwcmV2ICYmIG5leHQpIHtcbiAgICAgIGlmICghYXJyb3dzLnByZXYpIHtcbiAgICAgICAgY29uc3QgeyBpZCB9ID0gRWxlbWVudHMudHJhY2s7XG4gICAgICAgIHNldEF0dHJpYnV0ZShwcmV2LCBBUklBX0NPTlRST0xTLCBpZCk7XG4gICAgICAgIHNldEF0dHJpYnV0ZShuZXh0LCBBUklBX0NPTlRST0xTLCBpZCk7XG4gICAgICAgIGFycm93cy5wcmV2ID0gcHJldjtcbiAgICAgICAgYXJyb3dzLm5leHQgPSBuZXh0O1xuICAgICAgICBsaXN0ZW4oKTtcbiAgICAgICAgZW1pdChFVkVOVF9BUlJPV1NfTU9VTlRFRCwgcHJldiwgbmV4dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkaXNwbGF5KHdyYXBwZXIsIG9wdGlvbnMuYXJyb3dzID09PSBmYWxzZSA/IFwibm9uZVwiIDogXCJcIik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgaWYgKGNyZWF0ZWQpIHtcbiAgICAgIHJlbW92ZSh3cmFwcGVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlQXR0cmlidXRlKHByZXYsIEFMTF9BVFRSSUJVVEVTKTtcbiAgICAgIHJlbW92ZUF0dHJpYnV0ZShuZXh0LCBBTExfQVRUUklCVVRFUyk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGxpc3RlbigpIHtcbiAgICBjb25zdCB7IGdvIH0gPSBDb250cm9sbGVyO1xuICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9NT1ZFRCwgRVZFTlRfVVBEQVRFRCwgRVZFTlRfUkVGUkVTSCwgRVZFTlRfU0NST0xMRURdLCB1cGRhdGUpO1xuICAgIGJpbmQobmV4dCwgXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBnbyhcIj5cIiwgdHJ1ZSk7XG4gICAgfSk7XG4gICAgYmluZChwcmV2LCBcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGdvKFwiPFwiLCB0cnVlKTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVBcnJvd3MoKSB7XG4gICAgd3JhcHBlciA9IGNyZWF0ZShcImRpdlwiLCBjbGFzc2VzLmFycm93cyk7XG4gICAgcHJldiA9IGNyZWF0ZUFycm93KHRydWUpO1xuICAgIG5leHQgPSBjcmVhdGVBcnJvdyhmYWxzZSk7XG4gICAgY3JlYXRlZCA9IHRydWU7XG4gICAgYXBwZW5kKHdyYXBwZXIsIFtwcmV2LCBuZXh0XSk7XG4gICAgYmVmb3JlKHdyYXBwZXIsIGNoaWxkKG9wdGlvbnMuYXJyb3dzID09PSBcInNsaWRlclwiICYmIEVsZW1lbnRzLnNsaWRlciB8fCBTcGxpZGUyLnJvb3QpKTtcbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVBcnJvdyhwcmV2Mikge1xuICAgIGNvbnN0IGFycm93ID0gYDxidXR0b24gY2xhc3M9XCIke2NsYXNzZXMuYXJyb3d9ICR7cHJldjIgPyBjbGFzc2VzLnByZXYgOiBjbGFzc2VzLm5leHR9XCIgdHlwZT1cImJ1dHRvblwiPjxzdmcgeG1sbnM9XCIke1hNTF9OQU1FX1NQQUNFfVwiIHZpZXdCb3g9XCIwIDAgJHtTSVpFfSAke1NJWkV9XCIgd2lkdGg9XCIke1NJWkV9XCIgaGVpZ2h0PVwiJHtTSVpFfVwiPjxwYXRoIGQ9XCIke29wdGlvbnMuYXJyb3dQYXRoIHx8IFBBVEh9XCIgLz5gO1xuICAgIHJldHVybiBwYXJzZUh0bWwoYXJyb3cpO1xuICB9XG4gIGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICBjb25zdCBpbmRleCA9IFNwbGlkZTIuaW5kZXg7XG4gICAgY29uc3QgcHJldkluZGV4ID0gQ29udHJvbGxlci5nZXRQcmV2KCk7XG4gICAgY29uc3QgbmV4dEluZGV4ID0gQ29udHJvbGxlci5nZXROZXh0KCk7XG4gICAgY29uc3QgcHJldkxhYmVsID0gcHJldkluZGV4ID4gLTEgJiYgaW5kZXggPCBwcmV2SW5kZXggPyBpMThuLmxhc3QgOiBpMThuLnByZXY7XG4gICAgY29uc3QgbmV4dExhYmVsID0gbmV4dEluZGV4ID4gLTEgJiYgaW5kZXggPiBuZXh0SW5kZXggPyBpMThuLmZpcnN0IDogaTE4bi5uZXh0O1xuICAgIHByZXYuZGlzYWJsZWQgPSBwcmV2SW5kZXggPCAwO1xuICAgIG5leHQuZGlzYWJsZWQgPSBuZXh0SW5kZXggPCAwO1xuICAgIHNldEF0dHJpYnV0ZShwcmV2LCBBUklBX0xBQkVMLCBwcmV2TGFiZWwpO1xuICAgIHNldEF0dHJpYnV0ZShuZXh0LCBBUklBX0xBQkVMLCBuZXh0TGFiZWwpO1xuICAgIGVtaXQoRVZFTlRfQVJST1dTX1VQREFURUQsIHByZXYsIG5leHQsIHByZXZJbmRleCwgbmV4dEluZGV4KTtcbiAgfVxuICByZXR1cm4ge1xuICAgIGFycm93cyxcbiAgICBtb3VudCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmZ1bmN0aW9uIEF1dG9wbGF5KFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24sIGJpbmQsIGVtaXQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IEVsZW1lbnRzIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgaW50ZXJ2YWwgPSBSZXF1ZXN0SW50ZXJ2YWwob3B0aW9ucy5pbnRlcnZhbCwgU3BsaWRlMi5nby5iaW5kKFNwbGlkZTIsIFwiPlwiKSwgdXBkYXRlKTtcbiAgY29uc3QgeyBpc1BhdXNlZCB9ID0gaW50ZXJ2YWw7XG4gIGxldCBob3ZlcmVkO1xuICBsZXQgZm9jdXNlZDtcbiAgbGV0IHBhdXNlZDtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgY29uc3QgeyBhdXRvcGxheSB9ID0gb3B0aW9ucztcbiAgICBpZiAoYXV0b3BsYXkpIHtcbiAgICAgIGluaXRCdXR0b24odHJ1ZSk7XG4gICAgICBpbml0QnV0dG9uKGZhbHNlKTtcbiAgICAgIGxpc3RlbigpO1xuICAgICAgaWYgKGF1dG9wbGF5ICE9PSBcInBhdXNlXCIpIHtcbiAgICAgICAgcGxheSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBpbml0QnV0dG9uKGZvclBhdXNlKSB7XG4gICAgY29uc3QgcHJvcCA9IGZvclBhdXNlID8gXCJwYXVzZVwiIDogXCJwbGF5XCI7XG4gICAgY29uc3QgYnV0dG9uID0gRWxlbWVudHNbcHJvcF07XG4gICAgaWYgKGJ1dHRvbikge1xuICAgICAgc2V0QXR0cmlidXRlKGJ1dHRvbiwgQVJJQV9DT05UUk9MUywgRWxlbWVudHMudHJhY2suaWQpO1xuICAgICAgc2V0QXR0cmlidXRlKGJ1dHRvbiwgQVJJQV9MQUJFTCwgb3B0aW9ucy5pMThuW3Byb3BdKTtcbiAgICAgIGJpbmQoYnV0dG9uLCBcImNsaWNrXCIsIGZvclBhdXNlID8gcGF1c2UgOiBwbGF5KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gbGlzdGVuKCkge1xuICAgIGNvbnN0IHsgcm9vdCB9ID0gRWxlbWVudHM7XG4gICAgaWYgKG9wdGlvbnMucGF1c2VPbkhvdmVyKSB7XG4gICAgICBiaW5kKHJvb3QsIFwibW91c2VlbnRlciBtb3VzZWxlYXZlXCIsIChlKSA9PiB7XG4gICAgICAgIGhvdmVyZWQgPSBlLnR5cGUgPT09IFwibW91c2VlbnRlclwiO1xuICAgICAgICBhdXRvVG9nZ2xlKCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMucGF1c2VPbkZvY3VzKSB7XG4gICAgICBiaW5kKHJvb3QsIFwiZm9jdXNpbiBmb2N1c291dFwiLCAoZSkgPT4ge1xuICAgICAgICBmb2N1c2VkID0gZS50eXBlID09PSBcImZvY3VzaW5cIjtcbiAgICAgICAgYXV0b1RvZ2dsZSgpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIG9uKFtFVkVOVF9NT1ZFLCBFVkVOVF9TQ1JPTEwsIEVWRU5UX1JFRlJFU0hdLCBpbnRlcnZhbC5yZXdpbmQpO1xuICB9XG4gIGZ1bmN0aW9uIHBsYXkoKSB7XG4gICAgaWYgKGlzUGF1c2VkKCkgJiYgQ29tcG9uZW50czIuU2xpZGVzLmlzRW5vdWdoKCkpIHtcbiAgICAgIGludGVydmFsLnN0YXJ0KCFvcHRpb25zLnJlc2V0UHJvZ3Jlc3MpO1xuICAgICAgZm9jdXNlZCA9IGhvdmVyZWQgPSBwYXVzZWQgPSBmYWxzZTtcbiAgICAgIGVtaXQoRVZFTlRfQVVUT1BMQVlfUExBWSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHBhdXNlKG1hbnVhbCA9IHRydWUpIHtcbiAgICBpZiAoIWlzUGF1c2VkKCkpIHtcbiAgICAgIGludGVydmFsLnBhdXNlKCk7XG4gICAgICBlbWl0KEVWRU5UX0FVVE9QTEFZX1BBVVNFKTtcbiAgICB9XG4gICAgcGF1c2VkID0gbWFudWFsO1xuICB9XG4gIGZ1bmN0aW9uIGF1dG9Ub2dnbGUoKSB7XG4gICAgaWYgKCFwYXVzZWQpIHtcbiAgICAgIGlmICghaG92ZXJlZCAmJiAhZm9jdXNlZCkge1xuICAgICAgICBwbGF5KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXVzZShmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHVwZGF0ZShyYXRlKSB7XG4gICAgY29uc3QgeyBiYXIgfSA9IEVsZW1lbnRzO1xuICAgIGlmIChiYXIpIHtcbiAgICAgIHN0eWxlKGJhciwgXCJ3aWR0aFwiLCBgJHtyYXRlICogMTAwfSVgKTtcbiAgICB9XG4gICAgZW1pdChFVkVOVF9BVVRPUExBWV9QTEFZSU5HLCByYXRlKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGRlc3Ryb3k6IGludGVydmFsLmNhbmNlbCxcbiAgICBwbGF5LFxuICAgIHBhdXNlLFxuICAgIGlzUGF1c2VkXG4gIH07XG59XG5cbmZ1bmN0aW9uIENvdmVyKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24gfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpZiAob3B0aW9ucy5jb3Zlcikge1xuICAgICAgb24oRVZFTlRfTEFaWUxPQURfTE9BREVELCAoaW1nLCBTbGlkZSkgPT4ge1xuICAgICAgICB0b2dnbGUodHJ1ZSwgaW1nLCBTbGlkZSk7XG4gICAgICB9KTtcbiAgICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9VUERBVEVELCBFVkVOVF9SRUZSRVNIXSwgYXBwbHkuYmluZChudWxsLCB0cnVlKSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgYXBwbHkoZmFsc2UpO1xuICB9XG4gIGZ1bmN0aW9uIGFwcGx5KGNvdmVyKSB7XG4gICAgQ29tcG9uZW50czIuU2xpZGVzLmZvckVhY2goKFNsaWRlKSA9PiB7XG4gICAgICBjb25zdCBpbWcgPSBjaGlsZChTbGlkZS5jb250YWluZXIgfHwgU2xpZGUuc2xpZGUsIFwiaW1nXCIpO1xuICAgICAgaWYgKGltZyAmJiBpbWcuc3JjKSB7XG4gICAgICAgIHRvZ2dsZShjb3ZlciwgaW1nLCBTbGlkZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gdG9nZ2xlKGNvdmVyLCBpbWcsIFNsaWRlKSB7XG4gICAgU2xpZGUuc3R5bGUoXCJiYWNrZ3JvdW5kXCIsIGNvdmVyID8gYGNlbnRlci9jb3ZlciBuby1yZXBlYXQgdXJsKFwiJHtpbWcuc3JjfVwiKWAgOiBcIlwiLCB0cnVlKTtcbiAgICBkaXNwbGF5KGltZywgY292ZXIgPyBcIm5vbmVcIiA6IFwiXCIpO1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZGVzdHJveVxuICB9O1xufVxuXG5jb25zdCBCT1VOQ0VfRElGRl9USFJFU0hPTEQgPSAxMDtcbmNvbnN0IEJPVU5DRV9EVVJBVElPTiA9IDYwMDtcbmNvbnN0IEZSSUNUSU9OX0ZBQ1RPUiA9IDAuNjtcbmNvbnN0IEJBU0VfVkVMT0NJVFkgPSAxLjU7XG5jb25zdCBNSU5fRFVSQVRJT04gPSA4MDA7XG5cbmZ1bmN0aW9uIFNjcm9sbChTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uLCBlbWl0IH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBNb3ZlIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgeyBnZXRQb3NpdGlvbiwgZ2V0TGltaXQsIGV4Y2VlZGVkTGltaXQgfSA9IE1vdmU7XG4gIGxldCBpbnRlcnZhbDtcbiAgbGV0IHNjcm9sbENhbGxiYWNrO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBvbihFVkVOVF9NT1ZFLCBjbGVhcik7XG4gICAgb24oW0VWRU5UX1VQREFURUQsIEVWRU5UX1JFRlJFU0hdLCBjYW5jZWwpO1xuICB9XG4gIGZ1bmN0aW9uIHNjcm9sbChkZXN0aW5hdGlvbiwgZHVyYXRpb24sIGNhbGxiYWNrLCBzdXBwcmVzc0NvbnN0cmFpbnQpIHtcbiAgICBjb25zdCBzdGFydCA9IGdldFBvc2l0aW9uKCk7XG4gICAgbGV0IGZyaWN0aW9uID0gMTtcbiAgICBkdXJhdGlvbiA9IGR1cmF0aW9uIHx8IGNvbXB1dGVEdXJhdGlvbihhYnMoZGVzdGluYXRpb24gLSBzdGFydCkpO1xuICAgIHNjcm9sbENhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgY2xlYXIoKTtcbiAgICBpbnRlcnZhbCA9IFJlcXVlc3RJbnRlcnZhbChkdXJhdGlvbiwgb25TY3JvbGxlZCwgKHJhdGUpID0+IHtcbiAgICAgIGNvbnN0IHBvc2l0aW9uID0gZ2V0UG9zaXRpb24oKTtcbiAgICAgIGNvbnN0IHRhcmdldCA9IHN0YXJ0ICsgKGRlc3RpbmF0aW9uIC0gc3RhcnQpICogZWFzaW5nKHJhdGUpO1xuICAgICAgY29uc3QgZGlmZiA9ICh0YXJnZXQgLSBnZXRQb3NpdGlvbigpKSAqIGZyaWN0aW9uO1xuICAgICAgTW92ZS50cmFuc2xhdGUocG9zaXRpb24gKyBkaWZmKTtcbiAgICAgIGlmIChTcGxpZGUyLmlzKFNMSURFKSAmJiAhc3VwcHJlc3NDb25zdHJhaW50ICYmIGV4Y2VlZGVkTGltaXQoKSkge1xuICAgICAgICBmcmljdGlvbiAqPSBGUklDVElPTl9GQUNUT1I7XG4gICAgICAgIGlmIChhYnMoZGlmZikgPCBCT1VOQ0VfRElGRl9USFJFU0hPTEQpIHtcbiAgICAgICAgICBib3VuY2UoZXhjZWVkZWRMaW1pdChmYWxzZSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgMSk7XG4gICAgZW1pdChFVkVOVF9TQ1JPTEwpO1xuICAgIGludGVydmFsLnN0YXJ0KCk7XG4gIH1cbiAgZnVuY3Rpb24gYm91bmNlKGJhY2t3YXJkcykge1xuICAgIHNjcm9sbChnZXRMaW1pdCghYmFja3dhcmRzKSwgQk9VTkNFX0RVUkFUSU9OLCBudWxsLCB0cnVlKTtcbiAgfVxuICBmdW5jdGlvbiBvblNjcm9sbGVkKCkge1xuICAgIGNvbnN0IHBvc2l0aW9uID0gZ2V0UG9zaXRpb24oKTtcbiAgICBjb25zdCBpbmRleCA9IE1vdmUudG9JbmRleChwb3NpdGlvbik7XG4gICAgaWYgKCFiZXR3ZWVuKGluZGV4LCAwLCBTcGxpZGUyLmxlbmd0aCAtIDEpKSB7XG4gICAgICBNb3ZlLnRyYW5zbGF0ZShNb3ZlLnNoaWZ0KHBvc2l0aW9uLCBpbmRleCA+IDApLCB0cnVlKTtcbiAgICB9XG4gICAgc2Nyb2xsQ2FsbGJhY2sgJiYgc2Nyb2xsQ2FsbGJhY2soKTtcbiAgICBlbWl0KEVWRU5UX1NDUk9MTEVEKTtcbiAgfVxuICBmdW5jdGlvbiBjb21wdXRlRHVyYXRpb24oZGlzdGFuY2UpIHtcbiAgICByZXR1cm4gbWF4KGRpc3RhbmNlIC8gQkFTRV9WRUxPQ0lUWSwgTUlOX0RVUkFUSU9OKTtcbiAgfVxuICBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICBpZiAoaW50ZXJ2YWwpIHtcbiAgICAgIGludGVydmFsLmNhbmNlbCgpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgaWYgKGludGVydmFsICYmICFpbnRlcnZhbC5pc1BhdXNlZCgpKSB7XG4gICAgICBjbGVhcigpO1xuICAgICAgb25TY3JvbGxlZCgpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBlYXNpbmcodCkge1xuICAgIGNvbnN0IHsgZWFzaW5nRnVuYyB9ID0gb3B0aW9ucztcbiAgICByZXR1cm4gZWFzaW5nRnVuYyA/IGVhc2luZ0Z1bmModCkgOiAxIC0gTWF0aC5wb3coMSAtIHQsIDQpO1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZGVzdHJveTogY2xlYXIsXG4gICAgc2Nyb2xsLFxuICAgIGNhbmNlbFxuICB9O1xufVxuXG5jb25zdCBGUklDVElPTiA9IDU7XG5jb25zdCBMT0dfSU5URVJWQUwgPSAyMDA7XG5jb25zdCBQT0lOVEVSX0RPV05fRVZFTlRTID0gXCJ0b3VjaHN0YXJ0IG1vdXNlZG93blwiO1xuY29uc3QgUE9JTlRFUl9NT1ZFX0VWRU5UUyA9IFwidG91Y2htb3ZlIG1vdXNlbW92ZVwiO1xuY29uc3QgUE9JTlRFUl9VUF9FVkVOVFMgPSBcInRvdWNoZW5kIHRvdWNoY2FuY2VsIG1vdXNldXBcIjtcblxuZnVuY3Rpb24gRHJhZyhTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uLCBlbWl0LCBiaW5kLCB1bmJpbmQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IE1vdmUsIFNjcm9sbCwgQ29udHJvbGxlciB9ID0gQ29tcG9uZW50czI7XG4gIGNvbnN0IHsgdHJhY2sgfSA9IENvbXBvbmVudHMyLkVsZW1lbnRzO1xuICBjb25zdCB7IHJlc29sdmUsIG9yaWVudCB9ID0gQ29tcG9uZW50czIuRGlyZWN0aW9uO1xuICBjb25zdCB7IGdldFBvc2l0aW9uLCBleGNlZWRlZExpbWl0IH0gPSBNb3ZlO1xuICBjb25zdCBsaXN0ZW5lck9wdGlvbnMgPSB7IHBhc3NpdmU6IGZhbHNlLCBjYXB0dXJlOiB0cnVlIH07XG4gIGxldCBiYXNlUG9zaXRpb247XG4gIGxldCBiYXNlRXZlbnQ7XG4gIGxldCBwcmV2QmFzZUV2ZW50O1xuICBsZXQgbGFzdEV2ZW50O1xuICBsZXQgaXNGcmVlO1xuICBsZXQgZHJhZ2dpbmc7XG4gIGxldCBoYXNFeGNlZWRlZCA9IGZhbHNlO1xuICBsZXQgY2xpY2tQcmV2ZW50ZWQ7XG4gIGxldCBkaXNhYmxlZDtcbiAgbGV0IHRhcmdldDtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgYmluZCh0cmFjaywgUE9JTlRFUl9NT1ZFX0VWRU5UUywgbm9vcCwgbGlzdGVuZXJPcHRpb25zKTtcbiAgICBiaW5kKHRyYWNrLCBQT0lOVEVSX1VQX0VWRU5UUywgbm9vcCwgbGlzdGVuZXJPcHRpb25zKTtcbiAgICBiaW5kKHRyYWNrLCBQT0lOVEVSX0RPV05fRVZFTlRTLCBvblBvaW50ZXJEb3duLCBsaXN0ZW5lck9wdGlvbnMpO1xuICAgIGJpbmQodHJhY2ssIFwiY2xpY2tcIiwgb25DbGljaywgeyBjYXB0dXJlOiB0cnVlIH0pO1xuICAgIGJpbmQodHJhY2ssIFwiZHJhZ3N0YXJ0XCIsIHByZXZlbnQpO1xuICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9VUERBVEVEXSwgaW5pdCk7XG4gIH1cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBjb25zdCB7IGRyYWcgfSA9IG9wdGlvbnM7XG4gICAgZGlzYWJsZSghZHJhZyk7XG4gICAgaXNGcmVlID0gZHJhZyA9PT0gXCJmcmVlXCI7XG4gIH1cbiAgZnVuY3Rpb24gb25Qb2ludGVyRG93bihlKSB7XG4gICAgaWYgKCFkaXNhYmxlZCkge1xuICAgICAgY29uc3QgeyBub0RyYWcgfSA9IG9wdGlvbnM7XG4gICAgICBjb25zdCBpc1RvdWNoID0gaXNUb3VjaEV2ZW50KGUpO1xuICAgICAgY29uc3QgaXNEcmFnZ2FibGUgPSAhbm9EcmFnIHx8IGlzSFRNTEVsZW1lbnQoZS50YXJnZXQpICYmICFtYXRjaGVzKGUudGFyZ2V0LCBub0RyYWcpO1xuICAgICAgaWYgKGlzRHJhZ2dhYmxlICYmIChpc1RvdWNoIHx8ICFlLmJ1dHRvbikpIHtcbiAgICAgICAgaWYgKCFNb3ZlLmlzQnVzeSgpKSB7XG4gICAgICAgICAgdGFyZ2V0ID0gaXNUb3VjaCA/IHRyYWNrIDogd2luZG93O1xuICAgICAgICAgIHByZXZCYXNlRXZlbnQgPSBudWxsO1xuICAgICAgICAgIGxhc3RFdmVudCA9IG51bGw7XG4gICAgICAgICAgY2xpY2tQcmV2ZW50ZWQgPSBmYWxzZTtcbiAgICAgICAgICBiaW5kKHRhcmdldCwgUE9JTlRFUl9NT1ZFX0VWRU5UUywgb25Qb2ludGVyTW92ZSwgbGlzdGVuZXJPcHRpb25zKTtcbiAgICAgICAgICBiaW5kKHRhcmdldCwgUE9JTlRFUl9VUF9FVkVOVFMsIG9uUG9pbnRlclVwLCBsaXN0ZW5lck9wdGlvbnMpO1xuICAgICAgICAgIE1vdmUuY2FuY2VsKCk7XG4gICAgICAgICAgU2Nyb2xsLmNhbmNlbCgpO1xuICAgICAgICAgIHNhdmUoZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJldmVudChlLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBvblBvaW50ZXJNb3ZlKGUpIHtcbiAgICBpZiAoIWxhc3RFdmVudCkge1xuICAgICAgZW1pdChFVkVOVF9EUkFHKTtcbiAgICB9XG4gICAgbGFzdEV2ZW50ID0gZTtcbiAgICBpZiAoZS5jYW5jZWxhYmxlKSB7XG4gICAgICBjb25zdCBkaWZmID0gY29vcmRPZihlKSAtIGNvb3JkT2YoYmFzZUV2ZW50KTtcbiAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICBNb3ZlLnRyYW5zbGF0ZShiYXNlUG9zaXRpb24gKyBjb25zdHJhaW4oZGlmZikpO1xuICAgICAgICBjb25zdCBleHBpcmVkID0gdGltZU9mKGUpIC0gdGltZU9mKGJhc2VFdmVudCkgPiBMT0dfSU5URVJWQUw7XG4gICAgICAgIGNvbnN0IGV4Y2VlZGVkID0gaGFzRXhjZWVkZWQgIT09IChoYXNFeGNlZWRlZCA9IGV4Y2VlZGVkTGltaXQoKSk7XG4gICAgICAgIGlmIChleHBpcmVkIHx8IGV4Y2VlZGVkKSB7XG4gICAgICAgICAgc2F2ZShlKTtcbiAgICAgICAgfVxuICAgICAgICBlbWl0KEVWRU5UX0RSQUdHSU5HKTtcbiAgICAgICAgY2xpY2tQcmV2ZW50ZWQgPSB0cnVlO1xuICAgICAgICBwcmV2ZW50KGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGV0IHsgZHJhZ01pblRocmVzaG9sZDogdGhyZXNob2xkcyB9ID0gb3B0aW9ucztcbiAgICAgICAgdGhyZXNob2xkcyA9IGlzT2JqZWN0KHRocmVzaG9sZHMpID8gdGhyZXNob2xkcyA6IHsgbW91c2U6IDAsIHRvdWNoOiArdGhyZXNob2xkcyB8fCAxMCB9O1xuICAgICAgICBkcmFnZ2luZyA9IGFicyhkaWZmKSA+IChpc1RvdWNoRXZlbnQoZSkgPyB0aHJlc2hvbGRzLnRvdWNoIDogdGhyZXNob2xkcy5tb3VzZSk7XG4gICAgICAgIGlmIChpc1NsaWRlckRpcmVjdGlvbigpKSB7XG4gICAgICAgICAgcHJldmVudChlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBvblBvaW50ZXJVcChlKSB7XG4gICAgdW5iaW5kKHRhcmdldCwgUE9JTlRFUl9NT1ZFX0VWRU5UUywgb25Qb2ludGVyTW92ZSk7XG4gICAgdW5iaW5kKHRhcmdldCwgUE9JTlRFUl9VUF9FVkVOVFMsIG9uUG9pbnRlclVwKTtcbiAgICBpZiAobGFzdEV2ZW50KSB7XG4gICAgICBpZiAoZHJhZ2dpbmcgfHwgZS5jYW5jZWxhYmxlICYmIGlzU2xpZGVyRGlyZWN0aW9uKCkpIHtcbiAgICAgICAgY29uc3QgdmVsb2NpdHkgPSBjb21wdXRlVmVsb2NpdHkoZSk7XG4gICAgICAgIGNvbnN0IGRlc3RpbmF0aW9uID0gY29tcHV0ZURlc3RpbmF0aW9uKHZlbG9jaXR5KTtcbiAgICAgICAgaWYgKGlzRnJlZSkge1xuICAgICAgICAgIENvbnRyb2xsZXIuc2Nyb2xsKGRlc3RpbmF0aW9uKTtcbiAgICAgICAgfSBlbHNlIGlmIChTcGxpZGUyLmlzKEZBREUpKSB7XG4gICAgICAgICAgQ29udHJvbGxlci5nbyhTcGxpZGUyLmluZGV4ICsgb3JpZW50KHNpZ24odmVsb2NpdHkpKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQ29udHJvbGxlci5nbyhDb250cm9sbGVyLnRvRGVzdChkZXN0aW5hdGlvbiksIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIHByZXZlbnQoZSk7XG4gICAgICB9XG4gICAgICBlbWl0KEVWRU5UX0RSQUdHRUQpO1xuICAgIH1cbiAgICBkcmFnZ2luZyA9IGZhbHNlO1xuICB9XG4gIGZ1bmN0aW9uIHNhdmUoZSkge1xuICAgIHByZXZCYXNlRXZlbnQgPSBiYXNlRXZlbnQ7XG4gICAgYmFzZUV2ZW50ID0gZTtcbiAgICBiYXNlUG9zaXRpb24gPSBnZXRQb3NpdGlvbigpO1xuICB9XG4gIGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgIGlmICghZGlzYWJsZWQgJiYgY2xpY2tQcmV2ZW50ZWQpIHtcbiAgICAgIHByZXZlbnQoZSwgdHJ1ZSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGlzU2xpZGVyRGlyZWN0aW9uKCkge1xuICAgIGNvbnN0IGRpZmZYID0gYWJzKGNvb3JkT2YobGFzdEV2ZW50KSAtIGNvb3JkT2YoYmFzZUV2ZW50KSk7XG4gICAgY29uc3QgZGlmZlkgPSBhYnMoY29vcmRPZihsYXN0RXZlbnQsIHRydWUpIC0gY29vcmRPZihiYXNlRXZlbnQsIHRydWUpKTtcbiAgICByZXR1cm4gZGlmZlggPiBkaWZmWTtcbiAgfVxuICBmdW5jdGlvbiBjb21wdXRlVmVsb2NpdHkoZSkge1xuICAgIGlmIChTcGxpZGUyLmlzKExPT1ApIHx8ICFoYXNFeGNlZWRlZCkge1xuICAgICAgY29uc3QgYmFzZSA9IGJhc2VFdmVudCA9PT0gbGFzdEV2ZW50ICYmIHByZXZCYXNlRXZlbnQgfHwgYmFzZUV2ZW50O1xuICAgICAgY29uc3QgZGlmZkNvb3JkID0gY29vcmRPZihsYXN0RXZlbnQpIC0gY29vcmRPZihiYXNlKTtcbiAgICAgIGNvbnN0IGRpZmZUaW1lID0gdGltZU9mKGUpIC0gdGltZU9mKGJhc2UpO1xuICAgICAgY29uc3QgaXNGbGljayA9IHRpbWVPZihlKSAtIHRpbWVPZihsYXN0RXZlbnQpIDwgTE9HX0lOVEVSVkFMO1xuICAgICAgaWYgKGRpZmZUaW1lICYmIGlzRmxpY2spIHtcbiAgICAgICAgcmV0dXJuIGRpZmZDb29yZCAvIGRpZmZUaW1lO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfVxuICBmdW5jdGlvbiBjb21wdXRlRGVzdGluYXRpb24odmVsb2NpdHkpIHtcbiAgICByZXR1cm4gZ2V0UG9zaXRpb24oKSArIHNpZ24odmVsb2NpdHkpICogbWluKGFicyh2ZWxvY2l0eSkgKiAob3B0aW9ucy5mbGlja1Bvd2VyIHx8IDYwMCksIGlzRnJlZSA/IEluZmluaXR5IDogQ29tcG9uZW50czIuTGF5b3V0Lmxpc3RTaXplKCkgKiAob3B0aW9ucy5mbGlja01heFBhZ2VzIHx8IDEpKTtcbiAgfVxuICBmdW5jdGlvbiBjb29yZE9mKGUsIG9ydGhvZ29uYWwpIHtcbiAgICByZXR1cm4gKGlzVG91Y2hFdmVudChlKSA/IGUudG91Y2hlc1swXSA6IGUpW2BwYWdlJHtyZXNvbHZlKG9ydGhvZ29uYWwgPyBcIllcIiA6IFwiWFwiKX1gXTtcbiAgfVxuICBmdW5jdGlvbiB0aW1lT2YoZSkge1xuICAgIHJldHVybiBlLnRpbWVTdGFtcDtcbiAgfVxuICBmdW5jdGlvbiBjb25zdHJhaW4oZGlmZikge1xuICAgIHJldHVybiBkaWZmIC8gKGhhc0V4Y2VlZGVkICYmIFNwbGlkZTIuaXMoU0xJREUpID8gRlJJQ1RJT04gOiAxKTtcbiAgfVxuICBmdW5jdGlvbiBpc1RvdWNoRXZlbnQoZSkge1xuICAgIHJldHVybiB0eXBlb2YgVG91Y2hFdmVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBlIGluc3RhbmNlb2YgVG91Y2hFdmVudDtcbiAgfVxuICBmdW5jdGlvbiBpc0RyYWdnaW5nKCkge1xuICAgIHJldHVybiBkcmFnZ2luZztcbiAgfVxuICBmdW5jdGlvbiBkaXNhYmxlKHZhbHVlKSB7XG4gICAgZGlzYWJsZWQgPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGRpc2FibGUsXG4gICAgaXNEcmFnZ2luZ1xuICB9O1xufVxuXG5jb25zdCBJRV9BUlJPV19LRVlTID0gW1wiTGVmdFwiLCBcIlJpZ2h0XCIsIFwiVXBcIiwgXCJEb3duXCJdO1xuZnVuY3Rpb24gS2V5Ym9hcmQoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgYmluZCwgdW5iaW5kIH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyByb290IH0gPSBDb21wb25lbnRzMi5FbGVtZW50cztcbiAgY29uc3QgeyByZXNvbHZlIH0gPSBDb21wb25lbnRzMi5EaXJlY3Rpb247XG4gIGxldCB0YXJnZXQ7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGluaXQoKTtcbiAgICBvbihFVkVOVF9VUERBVEVELCAoKSA9PiB7XG4gICAgICBkZXN0cm95KCk7XG4gICAgICBpbml0KCk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBjb25zdCB7IGtleWJvYXJkID0gXCJnbG9iYWxcIiB9ID0gb3B0aW9ucztcbiAgICBpZiAoa2V5Ym9hcmQpIHtcbiAgICAgIGlmIChrZXlib2FyZCA9PT0gXCJmb2N1c2VkXCIpIHtcbiAgICAgICAgdGFyZ2V0ID0gcm9vdDtcbiAgICAgICAgc2V0QXR0cmlidXRlKHJvb3QsIFRBQl9JTkRFWCwgMCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0YXJnZXQgPSB3aW5kb3c7XG4gICAgICB9XG4gICAgICBiaW5kKHRhcmdldCwgXCJrZXlkb3duXCIsIG9uS2V5ZG93bik7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgdW5iaW5kKHRhcmdldCwgXCJrZXlkb3duXCIpO1xuICAgIGlmIChpc0hUTUxFbGVtZW50KHRhcmdldCkpIHtcbiAgICAgIHJlbW92ZUF0dHJpYnV0ZSh0YXJnZXQsIFRBQl9JTkRFWCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIG9uS2V5ZG93bihlKSB7XG4gICAgY29uc3QgeyBrZXkgfSA9IGU7XG4gICAgY29uc3Qgbm9ybWFsaXplZEtleSA9IGluY2x1ZGVzKElFX0FSUk9XX0tFWVMsIGtleSkgPyBgQXJyb3cke2tleX1gIDoga2V5O1xuICAgIGlmIChub3JtYWxpemVkS2V5ID09PSByZXNvbHZlKFwiQXJyb3dMZWZ0XCIpKSB7XG4gICAgICBTcGxpZGUyLmdvKFwiPFwiKTtcbiAgICB9IGVsc2UgaWYgKG5vcm1hbGl6ZWRLZXkgPT09IHJlc29sdmUoXCJBcnJvd1JpZ2h0XCIpKSB7XG4gICAgICBTcGxpZGUyLmdvKFwiPlwiKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmNvbnN0IFNSQ19EQVRBX0FUVFJJQlVURSA9IGAke0RBVEFfQVRUUklCVVRFfS1sYXp5YDtcbmNvbnN0IFNSQ1NFVF9EQVRBX0FUVFJJQlVURSA9IGAke1NSQ19EQVRBX0FUVFJJQlVURX0tc3Jjc2V0YDtcbmNvbnN0IElNQUdFX1NFTEVDVE9SID0gYFske1NSQ19EQVRBX0FUVFJJQlVURX1dLCBbJHtTUkNTRVRfREFUQV9BVFRSSUJVVEV9XWA7XG5cbmZ1bmN0aW9uIExhenlMb2FkKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24sIG9mZiwgYmluZCwgZW1pdCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IGlzU2VxdWVudGlhbCA9IG9wdGlvbnMubGF6eUxvYWQgPT09IFwic2VxdWVudGlhbFwiO1xuICBsZXQgaW1hZ2VzID0gW107XG4gIGxldCBpbmRleCA9IDA7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGlmIChvcHRpb25zLmxhenlMb2FkKSB7XG4gICAgICBvbihbRVZFTlRfTU9VTlRFRCwgRVZFTlRfUkVGUkVTSF0sICgpID0+IHtcbiAgICAgICAgZGVzdHJveSgpO1xuICAgICAgICBpbml0KCk7XG4gICAgICB9KTtcbiAgICAgIGlmICghaXNTZXF1ZW50aWFsKSB7XG4gICAgICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9SRUZSRVNILCBFVkVOVF9NT1ZFRF0sIG9ic2VydmUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIENvbXBvbmVudHMyLlNsaWRlcy5mb3JFYWNoKChfU2xpZGUpID0+IHtcbiAgICAgIHF1ZXJ5QWxsKF9TbGlkZS5zbGlkZSwgSU1BR0VfU0VMRUNUT1IpLmZvckVhY2goKF9pbWcpID0+IHtcbiAgICAgICAgY29uc3Qgc3JjID0gZ2V0QXR0cmlidXRlKF9pbWcsIFNSQ19EQVRBX0FUVFJJQlVURSk7XG4gICAgICAgIGNvbnN0IHNyY3NldCA9IGdldEF0dHJpYnV0ZShfaW1nLCBTUkNTRVRfREFUQV9BVFRSSUJVVEUpO1xuICAgICAgICBpZiAoc3JjICE9PSBfaW1nLnNyYyB8fCBzcmNzZXQgIT09IF9pbWcuc3Jjc2V0KSB7XG4gICAgICAgICAgY29uc3QgX3NwaW5uZXIgPSBjcmVhdGUoXCJzcGFuXCIsIG9wdGlvbnMuY2xhc3Nlcy5zcGlubmVyLCBfaW1nLnBhcmVudEVsZW1lbnQpO1xuICAgICAgICAgIHNldEF0dHJpYnV0ZShfc3Bpbm5lciwgUk9MRSwgXCJwcmVzZW50YXRpb25cIik7XG4gICAgICAgICAgaW1hZ2VzLnB1c2goeyBfaW1nLCBfU2xpZGUsIHNyYywgc3Jjc2V0LCBfc3Bpbm5lciB9KTtcbiAgICAgICAgICAhX2ltZy5zcmMgJiYgZGlzcGxheShfaW1nLCBcIm5vbmVcIik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChpc1NlcXVlbnRpYWwpIHtcbiAgICAgIGxvYWROZXh0KCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgaW5kZXggPSAwO1xuICAgIGltYWdlcyA9IFtdO1xuICB9XG4gIGZ1bmN0aW9uIG9ic2VydmUoKSB7XG4gICAgaW1hZ2VzID0gaW1hZ2VzLmZpbHRlcigoZGF0YSkgPT4ge1xuICAgICAgY29uc3QgZGlzdGFuY2UgPSBvcHRpb25zLnBlclBhZ2UgKiAoKG9wdGlvbnMucHJlbG9hZFBhZ2VzIHx8IDEpICsgMSkgLSAxO1xuICAgICAgaWYgKGRhdGEuX1NsaWRlLmlzV2l0aGluKFNwbGlkZTIuaW5kZXgsIGRpc3RhbmNlKSkge1xuICAgICAgICByZXR1cm4gbG9hZChkYXRhKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICAgIGlmICghaW1hZ2VzLmxlbmd0aCkge1xuICAgICAgb2ZmKEVWRU5UX01PVkVEKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gbG9hZChkYXRhKSB7XG4gICAgY29uc3QgeyBfaW1nIH0gPSBkYXRhO1xuICAgIGFkZENsYXNzKGRhdGEuX1NsaWRlLnNsaWRlLCBDTEFTU19MT0FESU5HKTtcbiAgICBiaW5kKF9pbWcsIFwibG9hZCBlcnJvclwiLCAoZSkgPT4ge1xuICAgICAgb25Mb2FkKGRhdGEsIGUudHlwZSA9PT0gXCJlcnJvclwiKTtcbiAgICB9KTtcbiAgICBbXCJzcmNcIiwgXCJzcmNzZXRcIl0uZm9yRWFjaCgobmFtZSkgPT4ge1xuICAgICAgaWYgKGRhdGFbbmFtZV0pIHtcbiAgICAgICAgc2V0QXR0cmlidXRlKF9pbWcsIG5hbWUsIGRhdGFbbmFtZV0pO1xuICAgICAgICByZW1vdmVBdHRyaWJ1dGUoX2ltZywgbmFtZSA9PT0gXCJzcmNcIiA/IFNSQ19EQVRBX0FUVFJJQlVURSA6IFNSQ1NFVF9EQVRBX0FUVFJJQlVURSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gb25Mb2FkKGRhdGEsIGVycm9yKSB7XG4gICAgY29uc3QgeyBfU2xpZGUgfSA9IGRhdGE7XG4gICAgcmVtb3ZlQ2xhc3MoX1NsaWRlLnNsaWRlLCBDTEFTU19MT0FESU5HKTtcbiAgICBpZiAoIWVycm9yKSB7XG4gICAgICByZW1vdmUoZGF0YS5fc3Bpbm5lcik7XG4gICAgICBkaXNwbGF5KGRhdGEuX2ltZywgXCJcIik7XG4gICAgICBlbWl0KEVWRU5UX0xBWllMT0FEX0xPQURFRCwgZGF0YS5faW1nLCBfU2xpZGUpO1xuICAgICAgZW1pdChFVkVOVF9SRVNJWkUpO1xuICAgIH1cbiAgICBpZiAoaXNTZXF1ZW50aWFsKSB7XG4gICAgICBsb2FkTmV4dCgpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBsb2FkTmV4dCgpIHtcbiAgICBpZiAoaW5kZXggPCBpbWFnZXMubGVuZ3RoKSB7XG4gICAgICBsb2FkKGltYWdlc1tpbmRleCsrXSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZGVzdHJveVxuICB9O1xufVxuXG5mdW5jdGlvbiBQYWdpbmF0aW9uKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24sIGVtaXQsIGJpbmQsIHVuYmluZCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgU2xpZGVzLCBFbGVtZW50cywgQ29udHJvbGxlciB9ID0gQ29tcG9uZW50czI7XG4gIGNvbnN0IHsgaGFzRm9jdXMsIGdldEluZGV4IH0gPSBDb250cm9sbGVyO1xuICBjb25zdCBpdGVtcyA9IFtdO1xuICBsZXQgbGlzdDtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaW5pdCgpO1xuICAgIG9uKFtFVkVOVF9VUERBVEVELCBFVkVOVF9SRUZSRVNIXSwgaW5pdCk7XG4gICAgb24oW0VWRU5UX01PVkUsIEVWRU5UX1NDUk9MTEVEXSwgdXBkYXRlKTtcbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIGRlc3Ryb3koKTtcbiAgICBpZiAob3B0aW9ucy5wYWdpbmF0aW9uICYmIFNsaWRlcy5pc0Vub3VnaCgpKSB7XG4gICAgICBjcmVhdGVQYWdpbmF0aW9uKCk7XG4gICAgICBlbWl0KEVWRU5UX1BBR0lOQVRJT05fTU9VTlRFRCwgeyBsaXN0LCBpdGVtcyB9LCBnZXRBdChTcGxpZGUyLmluZGV4KSk7XG4gICAgICB1cGRhdGUoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBpZiAobGlzdCkge1xuICAgICAgcmVtb3ZlKGxpc3QpO1xuICAgICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICB1bmJpbmQoaXRlbS5idXR0b24sIFwiY2xpY2tcIik7XG4gICAgICB9KTtcbiAgICAgIGVtcHR5KGl0ZW1zKTtcbiAgICAgIGxpc3QgPSBudWxsO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBjcmVhdGVQYWdpbmF0aW9uKCkge1xuICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSBTcGxpZGUyO1xuICAgIGNvbnN0IHsgY2xhc3NlcywgaTE4biwgcGVyUGFnZSB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBwYXJlbnQgPSBvcHRpb25zLnBhZ2luYXRpb24gPT09IFwic2xpZGVyXCIgJiYgRWxlbWVudHMuc2xpZGVyIHx8IEVsZW1lbnRzLnJvb3Q7XG4gICAgY29uc3QgbWF4ID0gaGFzRm9jdXMoKSA/IGxlbmd0aCA6IGNlaWwobGVuZ3RoIC8gcGVyUGFnZSk7XG4gICAgbGlzdCA9IGNyZWF0ZShcInVsXCIsIGNsYXNzZXMucGFnaW5hdGlvbiwgcGFyZW50KTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1heDsgaSsrKSB7XG4gICAgICBjb25zdCBsaSA9IGNyZWF0ZShcImxpXCIsIG51bGwsIGxpc3QpO1xuICAgICAgY29uc3QgYnV0dG9uID0gY3JlYXRlKFwiYnV0dG9uXCIsIHsgY2xhc3M6IGNsYXNzZXMucGFnZSwgdHlwZTogXCJidXR0b25cIiB9LCBsaSk7XG4gICAgICBjb25zdCBjb250cm9scyA9IFNsaWRlcy5nZXRJbihpKS5tYXAoKFNsaWRlKSA9PiBTbGlkZS5zbGlkZS5pZCk7XG4gICAgICBjb25zdCB0ZXh0ID0gIWhhc0ZvY3VzKCkgJiYgcGVyUGFnZSA+IDEgPyBpMThuLnBhZ2VYIDogaTE4bi5zbGlkZVg7XG4gICAgICBiaW5kKGJ1dHRvbiwgXCJjbGlja1wiLCBvbkNsaWNrLmJpbmQobnVsbCwgaSkpO1xuICAgICAgc2V0QXR0cmlidXRlKGJ1dHRvbiwgQVJJQV9DT05UUk9MUywgY29udHJvbHMuam9pbihcIiBcIikpO1xuICAgICAgc2V0QXR0cmlidXRlKGJ1dHRvbiwgQVJJQV9MQUJFTCwgZm9ybWF0KHRleHQsIGkgKyAxKSk7XG4gICAgICBpdGVtcy5wdXNoKHsgbGksIGJ1dHRvbiwgcGFnZTogaSB9KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gb25DbGljayhwYWdlKSB7XG4gICAgQ29udHJvbGxlci5nbyhgPiR7cGFnZX1gLCB0cnVlLCAoKSA9PiB7XG4gICAgICBjb25zdCBTbGlkZSA9IFNsaWRlcy5nZXRBdChDb250cm9sbGVyLnRvSW5kZXgocGFnZSkpO1xuICAgICAgU2xpZGUgJiYgZm9jdXMoU2xpZGUuc2xpZGUpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGdldEF0KGluZGV4KSB7XG4gICAgcmV0dXJuIGl0ZW1zW0NvbnRyb2xsZXIudG9QYWdlKGluZGV4KV07XG4gIH1cbiAgZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgIGNvbnN0IHByZXYgPSBnZXRBdChnZXRJbmRleCh0cnVlKSk7XG4gICAgY29uc3QgY3VyciA9IGdldEF0KGdldEluZGV4KCkpO1xuICAgIGlmIChwcmV2KSB7XG4gICAgICByZW1vdmVDbGFzcyhwcmV2LmJ1dHRvbiwgQ0xBU1NfQUNUSVZFKTtcbiAgICAgIHJlbW92ZUF0dHJpYnV0ZShwcmV2LmJ1dHRvbiwgQVJJQV9DVVJSRU5UKTtcbiAgICB9XG4gICAgaWYgKGN1cnIpIHtcbiAgICAgIGFkZENsYXNzKGN1cnIuYnV0dG9uLCBDTEFTU19BQ1RJVkUpO1xuICAgICAgc2V0QXR0cmlidXRlKGN1cnIuYnV0dG9uLCBBUklBX0NVUlJFTlQsIHRydWUpO1xuICAgIH1cbiAgICBlbWl0KEVWRU5UX1BBR0lOQVRJT05fVVBEQVRFRCwgeyBsaXN0LCBpdGVtcyB9LCBwcmV2LCBjdXJyKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIGl0ZW1zLFxuICAgIG1vdW50LFxuICAgIGRlc3Ryb3ksXG4gICAgZ2V0QXRcbiAgfTtcbn1cblxuY29uc3QgVFJJR0dFUl9LRVlTID0gW1wiIFwiLCBcIkVudGVyXCIsIFwiU3BhY2ViYXJcIl07XG5mdW5jdGlvbiBTeW5jKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgc3BsaWRlcyB9ID0gU3BsaWRlMjtcbiAgY29uc3QgeyBsaXN0IH0gPSBDb21wb25lbnRzMi5FbGVtZW50cztcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaWYgKG9wdGlvbnMuaXNOYXZpZ2F0aW9uKSB7XG4gICAgICBuYXZpZ2F0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzeW5jKCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgcmVtb3ZlQXR0cmlidXRlKGxpc3QsIEFMTF9BVFRSSUJVVEVTKTtcbiAgfVxuICBmdW5jdGlvbiBzeW5jKCkge1xuICAgIGNvbnN0IHByb2Nlc3NlZCA9IFtdO1xuICAgIHNwbGlkZXMuY29uY2F0KFNwbGlkZTIpLmZvckVhY2goKHNwbGlkZSwgaW5kZXgsIGluc3RhbmNlcykgPT4ge1xuICAgICAgRXZlbnRJbnRlcmZhY2Uoc3BsaWRlKS5vbihFVkVOVF9NT1ZFLCAoaW5kZXgyLCBwcmV2LCBkZXN0KSA9PiB7XG4gICAgICAgIGluc3RhbmNlcy5mb3JFYWNoKChpbnN0YW5jZSkgPT4ge1xuICAgICAgICAgIGlmIChpbnN0YW5jZSAhPT0gc3BsaWRlICYmICFpbmNsdWRlcyhwcm9jZXNzZWQsIHNwbGlkZSkpIHtcbiAgICAgICAgICAgIHByb2Nlc3NlZC5wdXNoKGluc3RhbmNlKTtcbiAgICAgICAgICAgIGluc3RhbmNlLmdvKGluc3RhbmNlLmlzKExPT1ApID8gZGVzdCA6IGluZGV4Mik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgZW1wdHkocHJvY2Vzc2VkKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgIGNvbnN0IHsgb24sIGVtaXQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICAgIG9uKEVWRU5UX0NMSUNLLCBvbkNsaWNrKTtcbiAgICBvbihFVkVOVF9TTElERV9LRVlET1dOLCBvbktleWRvd24pO1xuICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9VUERBVEVEXSwgdXBkYXRlKTtcbiAgICBzZXRBdHRyaWJ1dGUobGlzdCwgUk9MRSwgXCJtZW51XCIpO1xuICAgIGVtaXQoRVZFTlRfTkFWSUdBVElPTl9NT1VOVEVELCBTcGxpZGUyLnNwbGlkZXMpO1xuICB9XG4gIGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICBzZXRBdHRyaWJ1dGUobGlzdCwgQVJJQV9PUklFTlRBVElPTiwgb3B0aW9ucy5kaXJlY3Rpb24gIT09IFRUQiA/IFwiaG9yaXpvbnRhbFwiIDogbnVsbCk7XG4gIH1cbiAgZnVuY3Rpb24gb25DbGljayhTbGlkZSkge1xuICAgIFNwbGlkZTIuZ28oU2xpZGUuaW5kZXgpO1xuICB9XG4gIGZ1bmN0aW9uIG9uS2V5ZG93bihTbGlkZSwgZSkge1xuICAgIGlmIChpbmNsdWRlcyhUUklHR0VSX0tFWVMsIGUua2V5KSkge1xuICAgICAgb25DbGljayhTbGlkZSk7XG4gICAgICBwcmV2ZW50KGUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGRlc3Ryb3lcbiAgfTtcbn1cblxuZnVuY3Rpb24gV2hlZWwoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBiaW5kIH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaWYgKG9wdGlvbnMud2hlZWwpIHtcbiAgICAgIGJpbmQoQ29tcG9uZW50czIuRWxlbWVudHMudHJhY2ssIFwid2hlZWxcIiwgb25XaGVlbCwgeyBwYXNzaXZlOiBmYWxzZSwgY2FwdHVyZTogdHJ1ZSB9KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gb25XaGVlbChlKSB7XG4gICAgY29uc3QgeyBkZWx0YVkgfSA9IGU7XG4gICAgaWYgKGRlbHRhWSkge1xuICAgICAgU3BsaWRlMi5nbyhkZWx0YVkgPCAwID8gXCI8XCIgOiBcIj5cIik7XG4gICAgICBwcmV2ZW50KGUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50XG4gIH07XG59XG5cbnZhciBDb21wb25lbnRDb25zdHJ1Y3RvcnMgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIF9fcHJvdG9fXzogbnVsbCxcbiAgT3B0aW9uczogT3B0aW9ucyxcbiAgRGlyZWN0aW9uOiBEaXJlY3Rpb24sXG4gIEVsZW1lbnRzOiBFbGVtZW50cyxcbiAgU2xpZGVzOiBTbGlkZXMsXG4gIExheW91dDogTGF5b3V0LFxuICBDbG9uZXM6IENsb25lcyxcbiAgTW92ZTogTW92ZSxcbiAgQ29udHJvbGxlcjogQ29udHJvbGxlcixcbiAgQXJyb3dzOiBBcnJvd3MsXG4gIEF1dG9wbGF5OiBBdXRvcGxheSxcbiAgQ292ZXI6IENvdmVyLFxuICBTY3JvbGw6IFNjcm9sbCxcbiAgRHJhZzogRHJhZyxcbiAgS2V5Ym9hcmQ6IEtleWJvYXJkLFxuICBMYXp5TG9hZDogTGF6eUxvYWQsXG4gIFBhZ2luYXRpb246IFBhZ2luYXRpb24sXG4gIFN5bmM6IFN5bmMsXG4gIFdoZWVsOiBXaGVlbFxufSk7XG5cbmNvbnN0IEkxOE4gPSB7XG4gIHByZXY6IFwiUHJldmlvdXMgc2xpZGVcIixcbiAgbmV4dDogXCJOZXh0IHNsaWRlXCIsXG4gIGZpcnN0OiBcIkdvIHRvIGZpcnN0IHNsaWRlXCIsXG4gIGxhc3Q6IFwiR28gdG8gbGFzdCBzbGlkZVwiLFxuICBzbGlkZVg6IFwiR28gdG8gc2xpZGUgJXNcIixcbiAgcGFnZVg6IFwiR28gdG8gcGFnZSAlc1wiLFxuICBwbGF5OiBcIlN0YXJ0IGF1dG9wbGF5XCIsXG4gIHBhdXNlOiBcIlBhdXNlIGF1dG9wbGF5XCJcbn07XG5cbmNvbnN0IERFRkFVTFRTID0ge1xuICB0eXBlOiBcInNsaWRlXCIsXG4gIHNwZWVkOiA0MDAsXG4gIHdhaXRGb3JUcmFuc2l0aW9uOiB0cnVlLFxuICBwZXJQYWdlOiAxLFxuICBhcnJvd3M6IHRydWUsXG4gIHBhZ2luYXRpb246IHRydWUsXG4gIGludGVydmFsOiA1ZTMsXG4gIHBhdXNlT25Ib3ZlcjogdHJ1ZSxcbiAgcGF1c2VPbkZvY3VzOiB0cnVlLFxuICByZXNldFByb2dyZXNzOiB0cnVlLFxuICBlYXNpbmc6IFwiY3ViaWMtYmV6aWVyKDAuMjUsIDEsIDAuNSwgMSlcIixcbiAgZHJhZzogdHJ1ZSxcbiAgZGlyZWN0aW9uOiBcImx0clwiLFxuICBzbGlkZUZvY3VzOiB0cnVlLFxuICB0cmltU3BhY2U6IHRydWUsXG4gIGZvY3VzYWJsZU5vZGVzOiBcImEsIGJ1dHRvbiwgdGV4dGFyZWEsIGlucHV0LCBzZWxlY3QsIGlmcmFtZVwiLFxuICBjbGFzc2VzOiBDTEFTU0VTLFxuICBpMThuOiBJMThOXG59O1xuXG5mdW5jdGlvbiBGYWRlKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24gfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBvbihbRVZFTlRfTU9VTlRFRCwgRVZFTlRfUkVGUkVTSF0sICgpID0+IHtcbiAgICAgIG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgQ29tcG9uZW50czIuU2xpZGVzLnN0eWxlKFwidHJhbnNpdGlvblwiLCBgb3BhY2l0eSAke29wdGlvbnMuc3BlZWR9bXMgJHtvcHRpb25zLmVhc2luZ31gKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHN0YXJ0KGluZGV4LCBkb25lKSB7XG4gICAgY29uc3QgeyB0cmFjayB9ID0gQ29tcG9uZW50czIuRWxlbWVudHM7XG4gICAgc3R5bGUodHJhY2ssIFwiaGVpZ2h0XCIsIHVuaXQocmVjdCh0cmFjaykuaGVpZ2h0KSk7XG4gICAgbmV4dFRpY2soKCkgPT4ge1xuICAgICAgZG9uZSgpO1xuICAgICAgc3R5bGUodHJhY2ssIFwiaGVpZ2h0XCIsIFwiXCIpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgc3RhcnQsXG4gICAgY2FuY2VsOiBub29wXG4gIH07XG59XG5cbmZ1bmN0aW9uIFNsaWRlKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgYmluZCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgTW92ZSwgQ29udHJvbGxlciB9ID0gQ29tcG9uZW50czI7XG4gIGNvbnN0IHsgbGlzdCB9ID0gQ29tcG9uZW50czIuRWxlbWVudHM7XG4gIGxldCBlbmRDYWxsYmFjaztcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgYmluZChsaXN0LCBcInRyYW5zaXRpb25lbmRcIiwgKGUpID0+IHtcbiAgICAgIGlmIChlLnRhcmdldCA9PT0gbGlzdCAmJiBlbmRDYWxsYmFjaykge1xuICAgICAgICBjYW5jZWwoKTtcbiAgICAgICAgZW5kQ2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBzdGFydChpbmRleCwgZG9uZSkge1xuICAgIGNvbnN0IGRlc3RpbmF0aW9uID0gTW92ZS50b1Bvc2l0aW9uKGluZGV4LCB0cnVlKTtcbiAgICBjb25zdCBwb3NpdGlvbiA9IE1vdmUuZ2V0UG9zaXRpb24oKTtcbiAgICBjb25zdCBzcGVlZCA9IGdldFNwZWVkKGluZGV4KTtcbiAgICBpZiAoYWJzKGRlc3RpbmF0aW9uIC0gcG9zaXRpb24pID49IDEgJiYgc3BlZWQgPj0gMSkge1xuICAgICAgYXBwbHkoYHRyYW5zZm9ybSAke3NwZWVkfW1zICR7b3B0aW9ucy5lYXNpbmd9YCk7XG4gICAgICBNb3ZlLnRyYW5zbGF0ZShkZXN0aW5hdGlvbiwgdHJ1ZSk7XG4gICAgICBlbmRDYWxsYmFjayA9IGRvbmU7XG4gICAgfSBlbHNlIHtcbiAgICAgIE1vdmUuanVtcChpbmRleCk7XG4gICAgICBkb25lKCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGNhbmNlbCgpIHtcbiAgICBhcHBseShcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBnZXRTcGVlZChpbmRleCkge1xuICAgIGNvbnN0IHsgcmV3aW5kU3BlZWQgfSA9IG9wdGlvbnM7XG4gICAgaWYgKFNwbGlkZTIuaXMoU0xJREUpICYmIHJld2luZFNwZWVkKSB7XG4gICAgICBjb25zdCBwcmV2ID0gQ29udHJvbGxlci5nZXRJbmRleCh0cnVlKTtcbiAgICAgIGNvbnN0IGVuZCA9IENvbnRyb2xsZXIuZ2V0RW5kKCk7XG4gICAgICBpZiAocHJldiA9PT0gMCAmJiBpbmRleCA+PSBlbmQgfHwgcHJldiA+PSBlbmQgJiYgaW5kZXggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHJld2luZFNwZWVkO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3B0aW9ucy5zcGVlZDtcbiAgfVxuICBmdW5jdGlvbiBhcHBseSh0cmFuc2l0aW9uKSB7XG4gICAgc3R5bGUobGlzdCwgXCJ0cmFuc2l0aW9uXCIsIHRyYW5zaXRpb24pO1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgc3RhcnQsXG4gICAgY2FuY2VsXG4gIH07XG59XG5cbmNvbnN0IF9TcGxpZGUgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHRhcmdldCwgb3B0aW9ucykge1xuICAgIHRoaXMuZXZlbnQgPSBFdmVudEJ1cygpO1xuICAgIHRoaXMuQ29tcG9uZW50cyA9IHt9O1xuICAgIHRoaXMuc3RhdGUgPSBTdGF0ZShDUkVBVEVEKTtcbiAgICB0aGlzLnNwbGlkZXMgPSBbXTtcbiAgICB0aGlzLl9vcHRpb25zID0ge307XG4gICAgdGhpcy5fRXh0ZW5zaW9ucyA9IHt9O1xuICAgIGNvbnN0IHJvb3QgPSBpc1N0cmluZyh0YXJnZXQpID8gcXVlcnkoZG9jdW1lbnQsIHRhcmdldCkgOiB0YXJnZXQ7XG4gICAgYXNzZXJ0KHJvb3QsIGAke3Jvb3R9IGlzIGludmFsaWQuYCk7XG4gICAgdGhpcy5yb290ID0gcm9vdDtcbiAgICBtZXJnZShERUZBVUxUUywgX1NwbGlkZS5kZWZhdWx0cyk7XG4gICAgbWVyZ2UobWVyZ2UodGhpcy5fb3B0aW9ucywgREVGQVVMVFMpLCBvcHRpb25zIHx8IHt9KTtcbiAgfVxuICBtb3VudChFeHRlbnNpb25zLCBUcmFuc2l0aW9uKSB7XG4gICAgY29uc3QgeyBzdGF0ZSwgQ29tcG9uZW50czogQ29tcG9uZW50czIgfSA9IHRoaXM7XG4gICAgYXNzZXJ0KHN0YXRlLmlzKFtDUkVBVEVELCBERVNUUk9ZRURdKSwgXCJBbHJlYWR5IG1vdW50ZWQhXCIpO1xuICAgIHN0YXRlLnNldChDUkVBVEVEKTtcbiAgICB0aGlzLl9Db21wb25lbnRzID0gQ29tcG9uZW50czI7XG4gICAgdGhpcy5fVHJhbnNpdGlvbiA9IFRyYW5zaXRpb24gfHwgdGhpcy5fVHJhbnNpdGlvbiB8fCAodGhpcy5pcyhGQURFKSA/IEZhZGUgOiBTbGlkZSk7XG4gICAgdGhpcy5fRXh0ZW5zaW9ucyA9IEV4dGVuc2lvbnMgfHwgdGhpcy5fRXh0ZW5zaW9ucztcbiAgICBjb25zdCBDb25zdHJ1Y3RvcnMgPSBhc3NpZ24oe30sIENvbXBvbmVudENvbnN0cnVjdG9ycywgdGhpcy5fRXh0ZW5zaW9ucywgeyBUcmFuc2l0aW9uOiB0aGlzLl9UcmFuc2l0aW9uIH0pO1xuICAgIGZvck93bihDb25zdHJ1Y3RvcnMsIChDb21wb25lbnQsIGtleSkgPT4ge1xuICAgICAgY29uc3QgY29tcG9uZW50ID0gQ29tcG9uZW50KHRoaXMsIENvbXBvbmVudHMyLCB0aGlzLl9vcHRpb25zKTtcbiAgICAgIENvbXBvbmVudHMyW2tleV0gPSBjb21wb25lbnQ7XG4gICAgICBjb21wb25lbnQuc2V0dXAgJiYgY29tcG9uZW50LnNldHVwKCk7XG4gICAgfSk7XG4gICAgZm9yT3duKENvbXBvbmVudHMyLCAoY29tcG9uZW50KSA9PiB7XG4gICAgICBjb21wb25lbnQubW91bnQgJiYgY29tcG9uZW50Lm1vdW50KCk7XG4gICAgfSk7XG4gICAgdGhpcy5lbWl0KEVWRU5UX01PVU5URUQpO1xuICAgIGFkZENsYXNzKHRoaXMucm9vdCwgQ0xBU1NfSU5JVElBTElaRUQpO1xuICAgIHN0YXRlLnNldChJRExFKTtcbiAgICB0aGlzLmVtaXQoRVZFTlRfUkVBRFkpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIHN5bmMoc3BsaWRlKSB7XG4gICAgdGhpcy5zcGxpZGVzLnB1c2goc3BsaWRlKTtcbiAgICBzcGxpZGUuc3BsaWRlcy5wdXNoKHRoaXMpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGdvKGNvbnRyb2wpIHtcbiAgICB0aGlzLl9Db21wb25lbnRzLkNvbnRyb2xsZXIuZ28oY29udHJvbCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgb24oZXZlbnRzLCBjYWxsYmFjaykge1xuICAgIHRoaXMuZXZlbnQub24oZXZlbnRzLCBjYWxsYmFjaywgbnVsbCwgREVGQVVMVF9VU0VSX0VWRU5UX1BSSU9SSVRZKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBvZmYoZXZlbnRzKSB7XG4gICAgdGhpcy5ldmVudC5vZmYoZXZlbnRzKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBlbWl0KGV2ZW50KSB7XG4gICAgdGhpcy5ldmVudC5lbWl0KGV2ZW50LCAuLi5zbGljZShhcmd1bWVudHMsIDEpKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBhZGQoc2xpZGVzLCBpbmRleCkge1xuICAgIHRoaXMuX0NvbXBvbmVudHMuU2xpZGVzLmFkZChzbGlkZXMsIGluZGV4KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICByZW1vdmUobWF0Y2hlcikge1xuICAgIHRoaXMuX0NvbXBvbmVudHMuU2xpZGVzLnJlbW92ZShtYXRjaGVyKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBpcyh0eXBlKSB7XG4gICAgcmV0dXJuIHRoaXMuX29wdGlvbnMudHlwZSA9PT0gdHlwZTtcbiAgfVxuICByZWZyZXNoKCkge1xuICAgIHRoaXMuZW1pdChFVkVOVF9SRUZSRVNIKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBkZXN0cm95KGNvbXBsZXRlbHkgPSB0cnVlKSB7XG4gICAgY29uc3QgeyBldmVudCwgc3RhdGUgfSA9IHRoaXM7XG4gICAgaWYgKHN0YXRlLmlzKENSRUFURUQpKSB7XG4gICAgICBldmVudC5vbihFVkVOVF9SRUFEWSwgdGhpcy5kZXN0cm95LmJpbmQodGhpcywgY29tcGxldGVseSksIHRoaXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3JPd24odGhpcy5fQ29tcG9uZW50cywgKGNvbXBvbmVudCkgPT4ge1xuICAgICAgICBjb21wb25lbnQuZGVzdHJveSAmJiBjb21wb25lbnQuZGVzdHJveShjb21wbGV0ZWx5KTtcbiAgICAgIH0sIHRydWUpO1xuICAgICAgZXZlbnQuZW1pdChFVkVOVF9ERVNUUk9ZKTtcbiAgICAgIGV2ZW50LmRlc3Ryb3koKTtcbiAgICAgIGNvbXBsZXRlbHkgJiYgZW1wdHkodGhpcy5zcGxpZGVzKTtcbiAgICAgIHN0YXRlLnNldChERVNUUk9ZRUQpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBnZXQgb3B0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9ucztcbiAgfVxuICBzZXQgb3B0aW9ucyhvcHRpb25zKSB7XG4gICAgY29uc3QgeyBfb3B0aW9ucyB9ID0gdGhpcztcbiAgICBtZXJnZShfb3B0aW9ucywgb3B0aW9ucyk7XG4gICAgaWYgKCF0aGlzLnN0YXRlLmlzKENSRUFURUQpKSB7XG4gICAgICB0aGlzLmVtaXQoRVZFTlRfVVBEQVRFRCwgX29wdGlvbnMpO1xuICAgIH1cbiAgfVxuICBnZXQgbGVuZ3RoKCkge1xuICAgIHJldHVybiB0aGlzLl9Db21wb25lbnRzLlNsaWRlcy5nZXRMZW5ndGgodHJ1ZSk7XG4gIH1cbiAgZ2V0IGluZGV4KCkge1xuICAgIHJldHVybiB0aGlzLl9Db21wb25lbnRzLkNvbnRyb2xsZXIuZ2V0SW5kZXgoKTtcbiAgfVxufTtcbmxldCBTcGxpZGUgPSBfU3BsaWRlO1xuU3BsaWRlLmRlZmF1bHRzID0ge307XG5TcGxpZGUuU1RBVEVTID0gU1RBVEVTO1xuXG5jb25zdCBDTEFTU19SRU5ERVJFRCA9IFwiaXMtcmVuZGVyZWRcIjtcblxuY29uc3QgUkVOREVSRVJfREVGQVVMVF9DT05GSUcgPSB7XG4gIGxpc3RUYWc6IFwidWxcIixcbiAgc2xpZGVUYWc6IFwibGlcIlxufTtcblxuY2xhc3MgU3R5bGUge1xuICBjb25zdHJ1Y3RvcihpZCwgb3B0aW9ucykge1xuICAgIHRoaXMuc3R5bGVzID0ge307XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cbiAgcnVsZShzZWxlY3RvciwgcHJvcCwgdmFsdWUsIGJyZWFrcG9pbnQpIHtcbiAgICBicmVha3BvaW50ID0gYnJlYWtwb2ludCB8fCBcImRlZmF1bHRcIjtcbiAgICBjb25zdCBzZWxlY3RvcnMgPSB0aGlzLnN0eWxlc1ticmVha3BvaW50XSA9IHRoaXMuc3R5bGVzW2JyZWFrcG9pbnRdIHx8IHt9O1xuICAgIGNvbnN0IHN0eWxlcyA9IHNlbGVjdG9yc1tzZWxlY3Rvcl0gPSBzZWxlY3RvcnNbc2VsZWN0b3JdIHx8IHt9O1xuICAgIHN0eWxlc1twcm9wXSA9IHZhbHVlO1xuICB9XG4gIGJ1aWxkKCkge1xuICAgIGxldCBjc3MgPSBcIlwiO1xuICAgIGlmICh0aGlzLnN0eWxlcy5kZWZhdWx0KSB7XG4gICAgICBjc3MgKz0gdGhpcy5idWlsZFNlbGVjdG9ycyh0aGlzLnN0eWxlcy5kZWZhdWx0KTtcbiAgICB9XG4gICAgT2JqZWN0LmtleXModGhpcy5zdHlsZXMpLnNvcnQoKG4sIG0pID0+IHRoaXMub3B0aW9ucy5tZWRpYVF1ZXJ5ID09PSBcIm1pblwiID8gK24gLSArbSA6ICttIC0gK24pLmZvckVhY2goKGJyZWFrcG9pbnQpID0+IHtcbiAgICAgIGlmIChicmVha3BvaW50ICE9PSBcImRlZmF1bHRcIikge1xuICAgICAgICBjc3MgKz0gYEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICR7YnJlYWtwb2ludH1weCkge2A7XG4gICAgICAgIGNzcyArPSB0aGlzLmJ1aWxkU2VsZWN0b3JzKHRoaXMuc3R5bGVzW2JyZWFrcG9pbnRdKTtcbiAgICAgICAgY3NzICs9IGB9YDtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gY3NzO1xuICB9XG4gIGJ1aWxkU2VsZWN0b3JzKHNlbGVjdG9ycykge1xuICAgIGxldCBjc3MgPSBcIlwiO1xuICAgIGZvck93bihzZWxlY3RvcnMsIChzdHlsZXMsIHNlbGVjdG9yKSA9PiB7XG4gICAgICBjc3MgKz0gYCMke3RoaXMuaWR9ICR7c2VsZWN0b3J9IHtgO1xuICAgICAgZm9yT3duKHN0eWxlcywgKHZhbHVlLCBwcm9wKSA9PiB7XG4gICAgICAgIGlmICh2YWx1ZSB8fCB2YWx1ZSA9PT0gMCkge1xuICAgICAgICAgIGNzcyArPSBgJHtwcm9wfTogJHt2YWx1ZX07YDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBjc3MgKz0gXCJ9XCI7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNzcztcbiAgfVxufVxuXG5jbGFzcyBTcGxpZGVSZW5kZXJlciB7XG4gIGNvbnN0cnVjdG9yKGNvbnRlbnRzLCBvcHRpb25zLCBjb25maWcsIGRlZmF1bHRzKSB7XG4gICAgdGhpcy5zbGlkZXMgPSBbXTtcbiAgICB0aGlzLm9wdGlvbnMgPSB7fTtcbiAgICB0aGlzLmJyZWFrcG9pbnRzID0gW107XG4gICAgbWVyZ2UoREVGQVVMVFMsIGRlZmF1bHRzIHx8IHt9KTtcbiAgICBtZXJnZShtZXJnZSh0aGlzLm9wdGlvbnMsIERFRkFVTFRTKSwgb3B0aW9ucyB8fCB7fSk7XG4gICAgdGhpcy5jb250ZW50cyA9IGNvbnRlbnRzO1xuICAgIHRoaXMuY29uZmlnID0gYXNzaWduKHt9LCBSRU5ERVJFUl9ERUZBVUxUX0NPTkZJRywgY29uZmlnIHx8IHt9KTtcbiAgICB0aGlzLmlkID0gdGhpcy5jb25maWcuaWQgfHwgdW5pcXVlSWQoXCJzcGxpZGVcIik7XG4gICAgdGhpcy5TdHlsZSA9IG5ldyBTdHlsZSh0aGlzLmlkLCB0aGlzLm9wdGlvbnMpO1xuICAgIHRoaXMuRGlyZWN0aW9uID0gRGlyZWN0aW9uKG51bGwsIG51bGwsIHRoaXMub3B0aW9ucyk7XG4gICAgYXNzZXJ0KHRoaXMuY29udGVudHMubGVuZ3RoLCBcIlByb3ZpZGUgYXQgbGVhc3QgMSBjb250ZW50LlwiKTtcbiAgICB0aGlzLmluaXQoKTtcbiAgfVxuICBzdGF0aWMgY2xlYW4oc3BsaWRlKSB7XG4gICAgY29uc3QgeyBvbiB9ID0gRXZlbnRJbnRlcmZhY2Uoc3BsaWRlKTtcbiAgICBjb25zdCB7IHJvb3QgfSA9IHNwbGlkZTtcbiAgICBjb25zdCBjbG9uZXMgPSBxdWVyeUFsbChyb290LCBgLiR7Q0xBU1NfQ0xPTkV9YCk7XG4gICAgb24oRVZFTlRfTU9VTlRFRCwgKCkgPT4ge1xuICAgICAgcmVtb3ZlKGNoaWxkKHJvb3QsIFwic3R5bGVcIikpO1xuICAgIH0pO1xuICAgIHJlbW92ZShjbG9uZXMpO1xuICB9XG4gIGluaXQoKSB7XG4gICAgdGhpcy5wYXJzZUJyZWFrcG9pbnRzKCk7XG4gICAgdGhpcy5pbml0U2xpZGVzKCk7XG4gICAgdGhpcy5yZWdpc3RlclJvb3RTdHlsZXMoKTtcbiAgICB0aGlzLnJlZ2lzdGVyVHJhY2tTdHlsZXMoKTtcbiAgICB0aGlzLnJlZ2lzdGVyU2xpZGVTdHlsZXMoKTtcbiAgICB0aGlzLnJlZ2lzdGVyTGlzdFN0eWxlcygpO1xuICB9XG4gIGluaXRTbGlkZXMoKSB7XG4gICAgcHVzaCh0aGlzLnNsaWRlcywgdGhpcy5jb250ZW50cy5tYXAoKGNvbnRlbnQsIGluZGV4KSA9PiB7XG4gICAgICBjb250ZW50ID0gaXNTdHJpbmcoY29udGVudCkgPyB7IGh0bWw6IGNvbnRlbnQgfSA6IGNvbnRlbnQ7XG4gICAgICBjb250ZW50LnN0eWxlcyA9IGNvbnRlbnQuc3R5bGVzIHx8IHt9O1xuICAgICAgY29udGVudC5hdHRycyA9IGNvbnRlbnQuYXR0cnMgfHwge307XG4gICAgICB0aGlzLmNvdmVyKGNvbnRlbnQpO1xuICAgICAgY29uc3QgY2xhc3NlcyA9IGAke3RoaXMub3B0aW9ucy5jbGFzc2VzLnNsaWRlfSAke2luZGV4ID09PSAwID8gQ0xBU1NfQUNUSVZFIDogXCJcIn1gO1xuICAgICAgYXNzaWduKGNvbnRlbnQuYXR0cnMsIHtcbiAgICAgICAgY2xhc3M6IGAke2NsYXNzZXN9ICR7Y29udGVudC5hdHRycy5jbGFzcyB8fCBcIlwifWAudHJpbSgpLFxuICAgICAgICBzdHlsZTogdGhpcy5idWlsZFN0eWxlcyhjb250ZW50LnN0eWxlcylcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkpO1xuICAgIGlmICh0aGlzLmlzTG9vcCgpKSB7XG4gICAgICB0aGlzLmdlbmVyYXRlQ2xvbmVzKHRoaXMuc2xpZGVzKTtcbiAgICB9XG4gIH1cbiAgcmVnaXN0ZXJSb290U3R5bGVzKCkge1xuICAgIHRoaXMuYnJlYWtwb2ludHMuZm9yRWFjaCgoW3dpZHRoLCBvcHRpb25zXSkgPT4ge1xuICAgICAgdGhpcy5TdHlsZS5ydWxlKFwiIFwiLCBcIm1heC13aWR0aFwiLCB1bml0KG9wdGlvbnMud2lkdGgpLCB3aWR0aCk7XG4gICAgfSk7XG4gIH1cbiAgcmVnaXN0ZXJUcmFja1N0eWxlcygpIHtcbiAgICBjb25zdCB7IFN0eWxlOiBTdHlsZTIgfSA9IHRoaXM7XG4gICAgY29uc3Qgc2VsZWN0b3IgPSBgLiR7Q0xBU1NfVFJBQ0t9YDtcbiAgICB0aGlzLmJyZWFrcG9pbnRzLmZvckVhY2goKFt3aWR0aCwgb3B0aW9uc10pID0+IHtcbiAgICAgIFN0eWxlMi5ydWxlKHNlbGVjdG9yLCB0aGlzLnJlc29sdmUoXCJwYWRkaW5nTGVmdFwiKSwgdGhpcy5jc3NQYWRkaW5nKG9wdGlvbnMsIGZhbHNlKSwgd2lkdGgpO1xuICAgICAgU3R5bGUyLnJ1bGUoc2VsZWN0b3IsIHRoaXMucmVzb2x2ZShcInBhZGRpbmdSaWdodFwiKSwgdGhpcy5jc3NQYWRkaW5nKG9wdGlvbnMsIHRydWUpLCB3aWR0aCk7XG4gICAgICBTdHlsZTIucnVsZShzZWxlY3RvciwgXCJoZWlnaHRcIiwgdGhpcy5jc3NUcmFja0hlaWdodChvcHRpb25zKSwgd2lkdGgpO1xuICAgIH0pO1xuICB9XG4gIHJlZ2lzdGVyTGlzdFN0eWxlcygpIHtcbiAgICBjb25zdCB7IFN0eWxlOiBTdHlsZTIgfSA9IHRoaXM7XG4gICAgY29uc3Qgc2VsZWN0b3IgPSBgLiR7Q0xBU1NfTElTVH1gO1xuICAgIHRoaXMuYnJlYWtwb2ludHMuZm9yRWFjaCgoW3dpZHRoLCBvcHRpb25zXSkgPT4ge1xuICAgICAgU3R5bGUyLnJ1bGUoc2VsZWN0b3IsIFwidHJhbnNmb3JtXCIsIHRoaXMuYnVpbGRUcmFuc2xhdGUob3B0aW9ucyksIHdpZHRoKTtcbiAgICB9KTtcbiAgfVxuICByZWdpc3RlclNsaWRlU3R5bGVzKCkge1xuICAgIGNvbnN0IHsgU3R5bGU6IFN0eWxlMiB9ID0gdGhpcztcbiAgICBjb25zdCBzZWxlY3RvciA9IGAuJHtDTEFTU19TTElERX1gO1xuICAgIHRoaXMuYnJlYWtwb2ludHMuZm9yRWFjaCgoW3dpZHRoLCBvcHRpb25zXSkgPT4ge1xuICAgICAgU3R5bGUyLnJ1bGUoc2VsZWN0b3IsIFwid2lkdGhcIiwgdGhpcy5jc3NTbGlkZVdpZHRoKG9wdGlvbnMpLCB3aWR0aCk7XG4gICAgICBTdHlsZTIucnVsZShzZWxlY3RvciwgdGhpcy5yZXNvbHZlKFwibWFyZ2luUmlnaHRcIiksIHVuaXQob3B0aW9ucy5nYXApIHx8IFwiMHB4XCIsIHdpZHRoKTtcbiAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuY3NzU2xpZGVIZWlnaHQob3B0aW9ucyk7XG4gICAgICBpZiAoaGVpZ2h0KSB7XG4gICAgICAgIFN0eWxlMi5ydWxlKHNlbGVjdG9yLCBcImhlaWdodFwiLCBoZWlnaHQsIHdpZHRoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIFN0eWxlMi5ydWxlKHNlbGVjdG9yLCBcInBhZGRpbmctdG9wXCIsIHRoaXMuY3NzU2xpZGVQYWRkaW5nKG9wdGlvbnMpLCB3aWR0aCk7XG4gICAgICB9XG4gICAgICBTdHlsZTIucnVsZShgJHtzZWxlY3Rvcn0gPiBpbWdgLCBcImRpc3BsYXlcIiwgb3B0aW9ucy5jb3ZlciA/IFwibm9uZVwiIDogXCJpbmxpbmVcIiwgd2lkdGgpO1xuICAgIH0pO1xuICB9XG4gIGJ1aWxkVHJhbnNsYXRlKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHJlc29sdmUsIG9yaWVudCB9ID0gdGhpcy5EaXJlY3Rpb247XG4gICAgY29uc3QgdmFsdWVzID0gW107XG4gICAgdmFsdWVzLnB1c2godGhpcy5jc3NPZmZzZXRDbG9uZXMob3B0aW9ucykpO1xuICAgIHZhbHVlcy5wdXNoKHRoaXMuY3NzT2Zmc2V0R2FwcyhvcHRpb25zKSk7XG4gICAgaWYgKHRoaXMuaXNDZW50ZXIob3B0aW9ucykpIHtcbiAgICAgIHZhbHVlcy5wdXNoKHRoaXMuYnVpbGRDc3NWYWx1ZShvcmllbnQoLTUwKSwgXCIlXCIpKTtcbiAgICAgIHZhbHVlcy5wdXNoKC4uLnRoaXMuY3NzT2Zmc2V0Q2VudGVyKG9wdGlvbnMpKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlcy5maWx0ZXIoQm9vbGVhbikubWFwKCh2YWx1ZSkgPT4gYHRyYW5zbGF0ZSR7cmVzb2x2ZShcIlhcIil9KCR7dmFsdWV9KWApLmpvaW4oXCIgXCIpO1xuICB9XG4gIGNzc09mZnNldENsb25lcyhvcHRpb25zKSB7XG4gICAgY29uc3QgeyByZXNvbHZlLCBvcmllbnQgfSA9IHRoaXMuRGlyZWN0aW9uO1xuICAgIGNvbnN0IGNsb25lQ291bnQgPSB0aGlzLmdldENsb25lQ291bnQoKTtcbiAgICBpZiAodGhpcy5pc0ZpeGVkV2lkdGgob3B0aW9ucykpIHtcbiAgICAgIGNvbnN0IHsgdmFsdWUsIHVuaXQ6IHVuaXQyIH0gPSB0aGlzLnBhcnNlQ3NzVmFsdWUob3B0aW9uc1tyZXNvbHZlKFwiZml4ZWRXaWR0aFwiKV0pO1xuICAgICAgcmV0dXJuIHRoaXMuYnVpbGRDc3NWYWx1ZShvcmllbnQodmFsdWUpICogY2xvbmVDb3VudCwgdW5pdDIpO1xuICAgIH1cbiAgICBjb25zdCBwZXJjZW50ID0gMTAwICogY2xvbmVDb3VudCAvIG9wdGlvbnMucGVyUGFnZTtcbiAgICByZXR1cm4gYCR7b3JpZW50KHBlcmNlbnQpfSVgO1xuICB9XG4gIGNzc09mZnNldENlbnRlcihvcHRpb25zKSB7XG4gICAgY29uc3QgeyByZXNvbHZlLCBvcmllbnQgfSA9IHRoaXMuRGlyZWN0aW9uO1xuICAgIGlmICh0aGlzLmlzRml4ZWRXaWR0aChvcHRpb25zKSkge1xuICAgICAgY29uc3QgeyB2YWx1ZSwgdW5pdDogdW5pdDIgfSA9IHRoaXMucGFyc2VDc3NWYWx1ZShvcHRpb25zW3Jlc29sdmUoXCJmaXhlZFdpZHRoXCIpXSk7XG4gICAgICByZXR1cm4gW3RoaXMuYnVpbGRDc3NWYWx1ZShvcmllbnQodmFsdWUgLyAyKSwgdW5pdDIpXTtcbiAgICB9XG4gICAgY29uc3QgdmFsdWVzID0gW107XG4gICAgY29uc3QgeyBwZXJQYWdlLCBnYXAgfSA9IG9wdGlvbnM7XG4gICAgdmFsdWVzLnB1c2goYCR7b3JpZW50KDUwIC8gcGVyUGFnZSl9JWApO1xuICAgIGlmIChnYXApIHtcbiAgICAgIGNvbnN0IHsgdmFsdWUsIHVuaXQ6IHVuaXQyIH0gPSB0aGlzLnBhcnNlQ3NzVmFsdWUoZ2FwKTtcbiAgICAgIGNvbnN0IGdhcE9mZnNldCA9ICh2YWx1ZSAvIHBlclBhZ2UgLSB2YWx1ZSkgLyAyO1xuICAgICAgdmFsdWVzLnB1c2godGhpcy5idWlsZENzc1ZhbHVlKG9yaWVudChnYXBPZmZzZXQpLCB1bml0MikpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWVzO1xuICB9XG4gIGNzc09mZnNldEdhcHMob3B0aW9ucykge1xuICAgIGNvbnN0IGNsb25lQ291bnQgPSB0aGlzLmdldENsb25lQ291bnQoKTtcbiAgICBpZiAoY2xvbmVDb3VudCAmJiBvcHRpb25zLmdhcCkge1xuICAgICAgY29uc3QgeyBvcmllbnQgfSA9IHRoaXMuRGlyZWN0aW9uO1xuICAgICAgY29uc3QgeyB2YWx1ZSwgdW5pdDogdW5pdDIgfSA9IHRoaXMucGFyc2VDc3NWYWx1ZShvcHRpb25zLmdhcCk7XG4gICAgICBpZiAodGhpcy5pc0ZpeGVkV2lkdGgob3B0aW9ucykpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnVpbGRDc3NWYWx1ZShvcmllbnQodmFsdWUgKiBjbG9uZUNvdW50KSwgdW5pdDIpO1xuICAgICAgfVxuICAgICAgY29uc3QgeyBwZXJQYWdlIH0gPSBvcHRpb25zO1xuICAgICAgY29uc3QgZ2FwcyA9IGNsb25lQ291bnQgLyBwZXJQYWdlO1xuICAgICAgcmV0dXJuIHRoaXMuYnVpbGRDc3NWYWx1ZShvcmllbnQoZ2FwcyAqIHZhbHVlKSwgdW5pdDIpO1xuICAgIH1cbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICByZXNvbHZlKHByb3ApIHtcbiAgICByZXR1cm4gY2FtZWxUb0tlYmFiKHRoaXMuRGlyZWN0aW9uLnJlc29sdmUocHJvcCkpO1xuICB9XG4gIGNzc1BhZGRpbmcob3B0aW9ucywgcmlnaHQpIHtcbiAgICBjb25zdCB7IHBhZGRpbmcgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgcHJvcCA9IHRoaXMuRGlyZWN0aW9uLnJlc29sdmUocmlnaHQgPyBcInJpZ2h0XCIgOiBcImxlZnRcIiwgdHJ1ZSk7XG4gICAgcmV0dXJuIHBhZGRpbmcgJiYgdW5pdChwYWRkaW5nW3Byb3BdIHx8IChpc09iamVjdChwYWRkaW5nKSA/IDAgOiBwYWRkaW5nKSkgfHwgXCIwcHhcIjtcbiAgfVxuICBjc3NUcmFja0hlaWdodChvcHRpb25zKSB7XG4gICAgbGV0IGhlaWdodCA9IFwiXCI7XG4gICAgaWYgKHRoaXMuaXNWZXJ0aWNhbCgpKSB7XG4gICAgICBoZWlnaHQgPSB0aGlzLmNzc0hlaWdodChvcHRpb25zKTtcbiAgICAgIGFzc2VydChoZWlnaHQsICdcImhlaWdodFwiIGlzIG1pc3NpbmcuJyk7XG4gICAgICBoZWlnaHQgPSBgY2FsYygke2hlaWdodH0gLSAke3RoaXMuY3NzUGFkZGluZyhvcHRpb25zLCBmYWxzZSl9IC0gJHt0aGlzLmNzc1BhZGRpbmcob3B0aW9ucywgdHJ1ZSl9KWA7XG4gICAgfVxuICAgIHJldHVybiBoZWlnaHQ7XG4gIH1cbiAgY3NzSGVpZ2h0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdW5pdChvcHRpb25zLmhlaWdodCk7XG4gIH1cbiAgY3NzU2xpZGVXaWR0aChvcHRpb25zKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMuYXV0b1dpZHRoID8gXCJcIiA6IHVuaXQob3B0aW9ucy5maXhlZFdpZHRoKSB8fCAodGhpcy5pc1ZlcnRpY2FsKCkgPyBcIlwiIDogdGhpcy5jc3NTbGlkZVNpemUob3B0aW9ucykpO1xuICB9XG4gIGNzc1NsaWRlSGVpZ2h0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdW5pdChvcHRpb25zLmZpeGVkSGVpZ2h0KSB8fCAodGhpcy5pc1ZlcnRpY2FsKCkgPyBvcHRpb25zLmF1dG9IZWlnaHQgPyBcIlwiIDogdGhpcy5jc3NTbGlkZVNpemUob3B0aW9ucykgOiB0aGlzLmNzc0hlaWdodChvcHRpb25zKSk7XG4gIH1cbiAgY3NzU2xpZGVTaXplKG9wdGlvbnMpIHtcbiAgICBjb25zdCBnYXAgPSB1bml0KG9wdGlvbnMuZ2FwKTtcbiAgICByZXR1cm4gYGNhbGMoKDEwMCUke2dhcCAmJiBgICsgJHtnYXB9YH0pLyR7b3B0aW9ucy5wZXJQYWdlIHx8IDF9JHtnYXAgJiYgYCAtICR7Z2FwfWB9KWA7XG4gIH1cbiAgY3NzU2xpZGVQYWRkaW5nKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGhlaWdodFJhdGlvIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBoZWlnaHRSYXRpbyA/IGAke2hlaWdodFJhdGlvICogMTAwfSVgIDogXCJcIjtcbiAgfVxuICBidWlsZENzc1ZhbHVlKHZhbHVlLCB1bml0Mikge1xuICAgIHJldHVybiBgJHt2YWx1ZX0ke3VuaXQyfWA7XG4gIH1cbiAgcGFyc2VDc3NWYWx1ZSh2YWx1ZSkge1xuICAgIGlmIChpc1N0cmluZyh2YWx1ZSkpIHtcbiAgICAgIGNvbnN0IG51bWJlciA9IHBhcnNlRmxvYXQodmFsdWUpIHx8IDA7XG4gICAgICBjb25zdCB1bml0MiA9IHZhbHVlLnJlcGxhY2UoL1xcZCooXFwuXFxkKik/LywgXCJcIikgfHwgXCJweFwiO1xuICAgICAgcmV0dXJuIHsgdmFsdWU6IG51bWJlciwgdW5pdDogdW5pdDIgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgdmFsdWUsIHVuaXQ6IFwicHhcIiB9O1xuICB9XG4gIHBhcnNlQnJlYWtwb2ludHMoKSB7XG4gICAgY29uc3QgeyBicmVha3BvaW50cyB9ID0gdGhpcy5vcHRpb25zO1xuICAgIHRoaXMuYnJlYWtwb2ludHMucHVzaChbXCJkZWZhdWx0XCIsIHRoaXMub3B0aW9uc10pO1xuICAgIGlmIChicmVha3BvaW50cykge1xuICAgICAgZm9yT3duKGJyZWFrcG9pbnRzLCAob3B0aW9ucywgd2lkdGgpID0+IHtcbiAgICAgICAgdGhpcy5icmVha3BvaW50cy5wdXNoKFt3aWR0aCwgbWVyZ2UobWVyZ2Uoe30sIHRoaXMub3B0aW9ucyksIG9wdGlvbnMpXSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgaXNGaXhlZFdpZHRoKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gISFvcHRpb25zW3RoaXMuRGlyZWN0aW9uLnJlc29sdmUoXCJmaXhlZFdpZHRoXCIpXTtcbiAgfVxuICBpc0xvb3AoKSB7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9ucy50eXBlID09PSBMT09QO1xuICB9XG4gIGlzQ2VudGVyKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5mb2N1cyA9PT0gXCJjZW50ZXJcIikge1xuICAgICAgaWYgKHRoaXMuaXNMb29wKCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnR5cGUgPT09IFNMSURFKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5vcHRpb25zLnRyaW1TcGFjZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlzVmVydGljYWwoKSB7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT09IFRUQjtcbiAgfVxuICBidWlsZENsYXNzZXMoKSB7XG4gICAgY29uc3QgeyBvcHRpb25zIH0gPSB0aGlzO1xuICAgIHJldHVybiBbXG4gICAgICBDTEFTU19ST09ULFxuICAgICAgYCR7Q0xBU1NfUk9PVH0tLSR7b3B0aW9ucy50eXBlfWAsXG4gICAgICBgJHtDTEFTU19ST09UfS0tJHtvcHRpb25zLmRpcmVjdGlvbn1gLFxuICAgICAgb3B0aW9ucy5kcmFnICYmIGAke0NMQVNTX1JPT1R9LS1kcmFnZ2FibGVgLFxuICAgICAgb3B0aW9ucy5pc05hdmlnYXRpb24gJiYgYCR7Q0xBU1NfUk9PVH0tLW5hdmAsXG4gICAgICBDTEFTU19BQ1RJVkUsXG4gICAgICAhdGhpcy5jb25maWcuaGlkZGVuICYmIENMQVNTX1JFTkRFUkVEXG4gICAgXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gIH1cbiAgYnVpbGRBdHRycyhhdHRycykge1xuICAgIGxldCBhdHRyID0gXCJcIjtcbiAgICBmb3JPd24oYXR0cnMsICh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICBhdHRyICs9IHZhbHVlID8gYCAke2NhbWVsVG9LZWJhYihrZXkpfT1cIiR7dmFsdWV9XCJgIDogXCJcIjtcbiAgICB9KTtcbiAgICByZXR1cm4gYXR0ci50cmltKCk7XG4gIH1cbiAgYnVpbGRTdHlsZXMoc3R5bGVzKSB7XG4gICAgbGV0IHN0eWxlID0gXCJcIjtcbiAgICBmb3JPd24oc3R5bGVzLCAodmFsdWUsIGtleSkgPT4ge1xuICAgICAgc3R5bGUgKz0gYCAke2NhbWVsVG9LZWJhYihrZXkpfToke3ZhbHVlfTtgO1xuICAgIH0pO1xuICAgIHJldHVybiBzdHlsZS50cmltKCk7XG4gIH1cbiAgcmVuZGVyU2xpZGVzKCkge1xuICAgIGNvbnN0IHsgc2xpZGVUYWc6IHRhZyB9ID0gdGhpcy5jb25maWc7XG4gICAgcmV0dXJuIHRoaXMuc2xpZGVzLm1hcCgoY29udGVudCkgPT4ge1xuICAgICAgcmV0dXJuIGA8JHt0YWd9ICR7dGhpcy5idWlsZEF0dHJzKGNvbnRlbnQuYXR0cnMpfT4ke2NvbnRlbnQuaHRtbCB8fCBcIlwifTwvJHt0YWd9PmA7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfVxuICBjb3Zlcihjb250ZW50KSB7XG4gICAgY29uc3QgeyBzdHlsZXMsIGh0bWwgPSBcIlwiIH0gPSBjb250ZW50O1xuICAgIGlmICh0aGlzLm9wdGlvbnMuY292ZXIgJiYgIXRoaXMub3B0aW9ucy5sYXp5TG9hZCkge1xuICAgICAgY29uc3Qgc3JjID0gaHRtbC5tYXRjaCgvPGltZy4qP3NyY1xccyo9XFxzKihbJ1wiXSkoLis/KVxcMS4qPz4vKTtcbiAgICAgIGlmIChzcmMgJiYgc3JjWzJdKSB7XG4gICAgICAgIHN0eWxlcy5iYWNrZ3JvdW5kID0gYGNlbnRlci9jb3ZlciBuby1yZXBlYXQgdXJsKCcke3NyY1syXX0nKWA7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGdlbmVyYXRlQ2xvbmVzKGNvbnRlbnRzKSB7XG4gICAgY29uc3QgeyBjbGFzc2VzIH0gPSB0aGlzLm9wdGlvbnM7XG4gICAgY29uc3QgY291bnQgPSB0aGlzLmdldENsb25lQ291bnQoKTtcbiAgICBjb25zdCBzbGlkZXMgPSBjb250ZW50cy5zbGljZSgpO1xuICAgIHdoaWxlIChzbGlkZXMubGVuZ3RoIDwgY291bnQpIHtcbiAgICAgIHB1c2goc2xpZGVzLCBzbGlkZXMpO1xuICAgIH1cbiAgICBwdXNoKHNsaWRlcy5zbGljZSgtY291bnQpLnJldmVyc2UoKSwgc2xpZGVzLnNsaWNlKDAsIGNvdW50KSkuZm9yRWFjaCgoY29udGVudCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IGF0dHJzID0gYXNzaWduKHt9LCBjb250ZW50LmF0dHJzLCB7IGNsYXNzOiBgJHtjb250ZW50LmF0dHJzLmNsYXNzfSAke2NsYXNzZXMuY2xvbmV9YCB9KTtcbiAgICAgIGNvbnN0IGNsb25lID0gYXNzaWduKHt9LCBjb250ZW50LCB7IGF0dHJzIH0pO1xuICAgICAgaW5kZXggPCBjb3VudCA/IGNvbnRlbnRzLnVuc2hpZnQoY2xvbmUpIDogY29udGVudHMucHVzaChjbG9uZSk7XG4gICAgfSk7XG4gIH1cbiAgZ2V0Q2xvbmVDb3VudCgpIHtcbiAgICBpZiAodGhpcy5pc0xvb3AoKSkge1xuICAgICAgY29uc3QgeyBvcHRpb25zIH0gPSB0aGlzO1xuICAgICAgaWYgKG9wdGlvbnMuY2xvbmVzKSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zLmNsb25lcztcbiAgICAgIH1cbiAgICAgIGNvbnN0IHBlclBhZ2UgPSBtYXgoLi4udGhpcy5icmVha3BvaW50cy5tYXAoKFssIG9wdGlvbnMyXSkgPT4gb3B0aW9uczIucGVyUGFnZSkpO1xuICAgICAgcmV0dXJuIHBlclBhZ2UgKiAoKG9wdGlvbnMuZmxpY2tNYXhQYWdlcyB8fCAxKSArIDEpO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfVxuICByZW5kZXJBcnJvd3MoKSB7XG4gICAgbGV0IGh0bWwgPSBcIlwiO1xuICAgIGh0bWwgKz0gYDxkaXYgY2xhc3M9XCIke3RoaXMub3B0aW9ucy5jbGFzc2VzLmFycm93c31cIj5gO1xuICAgIGh0bWwgKz0gdGhpcy5yZW5kZXJBcnJvdyh0cnVlKTtcbiAgICBodG1sICs9IHRoaXMucmVuZGVyQXJyb3coZmFsc2UpO1xuICAgIGh0bWwgKz0gYDwvZGl2PmA7XG4gICAgcmV0dXJuIGh0bWw7XG4gIH1cbiAgcmVuZGVyQXJyb3cocHJldikge1xuICAgIGNvbnN0IHsgY2xhc3NlcywgaTE4biB9ID0gdGhpcy5vcHRpb25zO1xuICAgIGNvbnN0IGF0dHJzID0ge1xuICAgICAgY2xhc3M6IGAke2NsYXNzZXMuYXJyb3d9ICR7cHJldiA/IGNsYXNzZXMucHJldiA6IGNsYXNzZXMubmV4dH1gLFxuICAgICAgdHlwZTogXCJidXR0b25cIixcbiAgICAgIGFyaWFMYWJlbDogcHJldiA/IGkxOG4ucHJldiA6IGkxOG4ubmV4dFxuICAgIH07XG4gICAgcmV0dXJuIGA8YnV0dG9uICR7dGhpcy5idWlsZEF0dHJzKGF0dHJzKX0+PHN2ZyB4bWxucz1cIiR7WE1MX05BTUVfU1BBQ0V9XCIgdmlld0JveD1cIjAgMCAke1NJWkV9ICR7U0laRX1cIiB3aWR0aD1cIiR7U0laRX1cIiBoZWlnaHQ9XCIke1NJWkV9XCI+PHBhdGggZD1cIiR7dGhpcy5vcHRpb25zLmFycm93UGF0aCB8fCBQQVRIfVwiIC8+PC9zdmc+PC9idXR0b24+YDtcbiAgfVxuICBodG1sKCkge1xuICAgIGNvbnN0IHsgcm9vdENsYXNzLCBsaXN0VGFnLCBhcnJvd3MsIGJlZm9yZVRyYWNrLCBhZnRlclRyYWNrLCBzbGlkZXIsIGJlZm9yZVNsaWRlciwgYWZ0ZXJTbGlkZXIgfSA9IHRoaXMuY29uZmlnO1xuICAgIGxldCBodG1sID0gXCJcIjtcbiAgICBodG1sICs9IGA8ZGl2IGlkPVwiJHt0aGlzLmlkfVwiIGNsYXNzPVwiJHt0aGlzLmJ1aWxkQ2xhc3NlcygpfSAke3Jvb3RDbGFzcyB8fCBcIlwifVwiPmA7XG4gICAgaHRtbCArPSBgPHN0eWxlPiR7dGhpcy5TdHlsZS5idWlsZCgpfTwvc3R5bGU+YDtcbiAgICBpZiAoc2xpZGVyKSB7XG4gICAgICBodG1sICs9IGJlZm9yZVNsaWRlciB8fCBcIlwiO1xuICAgICAgaHRtbCArPSBgPGRpdiBjbGFzcz1cInNwbGlkZV9fc2xpZGVyXCI+YDtcbiAgICB9XG4gICAgaHRtbCArPSBiZWZvcmVUcmFjayB8fCBcIlwiO1xuICAgIGlmIChhcnJvd3MpIHtcbiAgICAgIGh0bWwgKz0gdGhpcy5yZW5kZXJBcnJvd3MoKTtcbiAgICB9XG4gICAgaHRtbCArPSBgPGRpdiBjbGFzcz1cInNwbGlkZV9fdHJhY2tcIj5gO1xuICAgIGh0bWwgKz0gYDwke2xpc3RUYWd9IGNsYXNzPVwic3BsaWRlX19saXN0XCI+YDtcbiAgICBodG1sICs9IHRoaXMucmVuZGVyU2xpZGVzKCk7XG4gICAgaHRtbCArPSBgPC8ke2xpc3RUYWd9PmA7XG4gICAgaHRtbCArPSBgPC9kaXY+YDtcbiAgICBodG1sICs9IGFmdGVyVHJhY2sgfHwgXCJcIjtcbiAgICBpZiAoc2xpZGVyKSB7XG4gICAgICBodG1sICs9IGA8L2Rpdj5gO1xuICAgICAgaHRtbCArPSBhZnRlclNsaWRlciB8fCBcIlwiO1xuICAgIH1cbiAgICBodG1sICs9IGA8L2Rpdj5gO1xuICAgIHJldHVybiBodG1sO1xuICB9XG59XG5cbmV4cG9ydCB7IENMQVNTRVMsIENMQVNTX0FDVElWRSwgQ0xBU1NfQVJST1csIENMQVNTX0FSUk9XUywgQ0xBU1NfQVJST1dfTkVYVCwgQ0xBU1NfQVJST1dfUFJFViwgQ0xBU1NfQVVUT1BMQVksIENMQVNTX0NMT05FLCBDTEFTU19DT05UQUlORVIsIENMQVNTX0lOSVRJQUxJWkVELCBDTEFTU19MSVNULCBDTEFTU19MT0FESU5HLCBDTEFTU19ORVhULCBDTEFTU19QQUdJTkFUSU9OLCBDTEFTU19QQUdJTkFUSU9OX1BBR0UsIENMQVNTX1BBVVNFLCBDTEFTU19QTEFZLCBDTEFTU19QUkVWLCBDTEFTU19QUk9HUkVTUywgQ0xBU1NfUFJPR1JFU1NfQkFSLCBDTEFTU19ST09ULCBDTEFTU19TTElERSwgQ0xBU1NfU0xJREVSLCBDTEFTU19TUElOTkVSLCBDTEFTU19UUkFDSywgQ0xBU1NfVklTSUJMRSwgRVZFTlRfQUNUSVZFLCBFVkVOVF9BUlJPV1NfTU9VTlRFRCwgRVZFTlRfQVJST1dTX1VQREFURUQsIEVWRU5UX0FVVE9QTEFZX1BBVVNFLCBFVkVOVF9BVVRPUExBWV9QTEFZLCBFVkVOVF9BVVRPUExBWV9QTEFZSU5HLCBFVkVOVF9DTElDSywgRVZFTlRfREVTVFJPWSwgRVZFTlRfRFJBRywgRVZFTlRfRFJBR0dFRCwgRVZFTlRfRFJBR0dJTkcsIEVWRU5UX0hJRERFTiwgRVZFTlRfSU5BQ1RJVkUsIEVWRU5UX0xBWllMT0FEX0xPQURFRCwgRVZFTlRfTU9VTlRFRCwgRVZFTlRfTU9WRSwgRVZFTlRfTU9WRUQsIEVWRU5UX05BVklHQVRJT05fTU9VTlRFRCwgRVZFTlRfUEFHSU5BVElPTl9NT1VOVEVELCBFVkVOVF9QQUdJTkFUSU9OX1VQREFURUQsIEVWRU5UX1JFQURZLCBFVkVOVF9SRUZSRVNILCBFVkVOVF9SRVBPU0lUSU9ORUQsIEVWRU5UX1JFU0laRSwgRVZFTlRfUkVTSVpFRCwgRVZFTlRfU0NST0xMLCBFVkVOVF9TQ1JPTExFRCwgRVZFTlRfU0xJREVfS0VZRE9XTiwgRVZFTlRfVVBEQVRFRCwgRVZFTlRfVklTSUJMRSwgRXZlbnRCdXMsIEV2ZW50SW50ZXJmYWNlLCBSZXF1ZXN0SW50ZXJ2YWwsIFNUQVRVU19DTEFTU0VTLCBTcGxpZGUsIFNwbGlkZVJlbmRlcmVyLCBTdGF0ZSwgVGhyb3R0bGUsIFNwbGlkZSBhcyBkZWZhdWx0IH07XG4iLCJpbXBvcnQgU3BsaWRlIGZyb20gJ0BzcGxpZGVqcy9zcGxpZGUnO1xyXG5cclxuXHJcbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2Fyb3VzZWwnKSkge1xyXG4gIG5ldyBTcGxpZGUoICcjY2Fyb3VzZWwnLCB7XHJcbiAgICBwYWdpbmF0aW9uOiBmYWxzZSxcclxuICAgIHR5cGU6ICdzbGlkZScsXHJcbiAgICBwZXJQYWdlOiA0LFxyXG4gICAgcGVyTW92ZTogMSxcclxuICAgIGdhcDogMzIsXHJcbiAgICBicmVha3BvaW50czoge1xyXG4gICAgICA1MDA6IHtcclxuICAgICAgICBwZXJQYWdlOiAxLFxyXG4gICAgICAgIGdhcDogMTAsXHJcbiAgICAgICAgcGFkZGluZzogeyByaWdodDogMzAsIGxlZnQ6IDMwIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIDc2Nzoge1xyXG4gICAgICAgIHBlclBhZ2U6IDEsXHJcbiAgICAgICAgZ2FwOiAxMCxcclxuICAgICAgICBwYWRkaW5nOiB7IHJpZ2h0OiAzMCwgbGVmdDogMzAgfSxcclxuICAgICAgfSxcclxuICAgICAgMTAyNDoge1xyXG4gICAgICAgIHBlclBhZ2U6IDIsXHJcbiAgICAgICAgZ2FwOiAxNixcclxuICAgICAgICBwYWRkaW5nOiB7IHJpZ2h0OiAwLCBsZWZ0OiAwIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIDE0MDA6IHtcclxuICAgICAgICBwZXJQYWdlOiAzLFxyXG4gICAgICAgIGdhcDogMzIsXHJcbiAgICAgIH0sXHJcbiAgICB9XHJcbiAgfSApLm1vdW50KCk7XHJcbn1cclxuXHJcbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGVzdGltb25pYWxzJykpIHtcclxuICBuZXcgU3BsaWRlKCAnI3Rlc3RpbW9uaWFscycsIHtcclxuICAgIHBhZ2luYXRpb246IGZhbHNlLFxyXG4gICAgdHlwZTogJ3NsaWRlJyxcclxuICAgIHBlclBhZ2U6IDMsXHJcbiAgICBwZXJNb3ZlOiAxLFxyXG4gICAgZ2FwOiAyOCxcclxuICAgIGJyZWFrcG9pbnRzOiB7XHJcbiAgICAgIDUwMDoge1xyXG4gICAgICAgIHBlclBhZ2U6IDEsXHJcbiAgICAgICAgZ2FwOiAxMCxcclxuICAgICAgfSxcclxuICAgICAgNzY3OiB7XHJcbiAgICAgICAgcGVyUGFnZTogMixcclxuICAgICAgICBnYXA6IDEwLFxyXG4gICAgICB9LFxyXG4gICAgICAxMDI0OiB7XHJcbiAgICAgICAgcGVyUGFnZTogMixcclxuICAgICAgICBnYXA6IDE2LFxyXG4gICAgICB9LFxyXG4gICAgICAxNDAwOiB7XHJcbiAgICAgICAgcGVyUGFnZTogMyxcclxuICAgICAgICBnYXA6IDMyLFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gIH0gKS5tb3VudCgpO1xyXG59XHJcblxyXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2xvZ29zJykpIHtcclxuICBuZXcgU3BsaWRlKCAnI2xvZ29zJywge1xyXG4gICAgcGFnaW5hdGlvbjogdHJ1ZSxcclxuICAgIHR5cGU6ICdzbGlkZScsXHJcbiAgICBwZXJQYWdlOiAxMCxcclxuICAgIGRlc3Ryb3k6IHRydWUsXHJcbiAgICBtZWRpYVF1ZXJ5OiAnbWluJyxcclxuICAgIHBlck1vdmU6IDEsXHJcbiAgICBicmVha3BvaW50czoge1xyXG4gICAgICAzMjA6IHtcclxuICAgICAgICBwZXJQYWdlOiAyLFxyXG4gICAgICAgIGdhcDogMTAsXHJcbiAgICAgICAgcGVyTW92ZTogMSxcclxuICAgICAgICBkZXN0cm95OiBmYWxzZSxcclxuICAgICAgICBwYWRkaW5nOiB7IHJpZ2h0OiAzMCwgbGVmdDogMzAgfSxcclxuICAgICAgfSxcclxuICAgICAgNTAwOiB7XHJcbiAgICAgICAgcGVyUGFnZTogMyxcclxuICAgICAgICBnYXA6IDEwLFxyXG4gICAgICAgIHBlck1vdmU6IDEsXHJcbiAgICAgICAgZGVzdHJveTogZmFsc2UsXHJcbiAgICAgICAgcGFkZGluZzogeyByaWdodDogMzAsIGxlZnQ6IDMwIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIDc2Nzoge1xyXG4gICAgICAgIGRlc3Ryb3k6IHRydWUsXHJcbiAgICAgIH0sXHJcbiAgICB9XHJcbiAgfSApLm1vdW50KCk7XHJcbn1cclxuIiwiLyoqXHJcbiAqIFRvZ2dsZSBOYXZcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogLSB0b2dnbGUgY2xhc3Mgb24gYm9keVxyXG4gKi9cclxuXHJcbmNvbnN0IEVMRU1FTlRTID0gJy50b2dnbGVuYXZfX2J1dHRvbidcclxuY29uc3QgVE9HR0xFX0NMQVNTID0gJ25hdi1pcy1vcGVuJ1xyXG5cclxuY2xhc3MgVG9nZ2xlTmF2IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEVMRU1FTlRTKVxyXG5cclxuICAgIGlmICghdGhpcy5lbGVtZW50cykge1xyXG4gICAgICByZXR1cm4gZmFsc2VcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmVsZW1lbnRzLmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy50b2dnbGVOYXYsIGZhbHNlKVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIHRvZ2dsZU5hdihlKSB7XHJcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoVE9HR0xFX0NMQVNTKVxyXG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKCdsb2NrJylcclxuXHJcbiAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICB9XHJcbn1cclxuXHJcbm5ldyBUb2dnbGVOYXYoKVxyXG4iLCIvKiFcclxuXHRCeSBBbmRyw6kgUmluYXMsIHd3dy5hbmRyZXJpbmFzLmRlXHJcblx0RG9jdW1lbnRhdGlvbiwgd3d3LnNpbXBsZWxpZ2h0Ym94LmRlXHJcblx0QXZhaWxhYmxlIGZvciB1c2UgdW5kZXIgdGhlIE1JVCBMaWNlbnNlXHJcblx0VmVyc2lvbiAyLjEwLjFcclxuKi9cblwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobywgYWxsb3dBcnJheUxpa2UpIHsgdmFyIGl0ID0gdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl0gfHwgb1tcIkBAaXRlcmF0b3JcIl07IGlmICghaXQpIHsgaWYgKEFycmF5LmlzQXJyYXkobykgfHwgKGl0ID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8pKSB8fCBhbGxvd0FycmF5TGlrZSAmJiBvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgeyBpZiAoaXQpIG8gPSBpdDsgdmFyIGkgPSAwOyB2YXIgRiA9IGZ1bmN0aW9uIEYoKSB7fTsgcmV0dXJuIHsgczogRiwgbjogZnVuY3Rpb24gbigpIHsgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTsgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBvW2krK10gfTsgfSwgZTogZnVuY3Rpb24gZShfZSkgeyB0aHJvdyBfZTsgfSwgZjogRiB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfSB2YXIgbm9ybWFsQ29tcGxldGlvbiA9IHRydWUsIGRpZEVyciA9IGZhbHNlLCBlcnI7IHJldHVybiB7IHM6IGZ1bmN0aW9uIHMoKSB7IGl0ID0gaXQuY2FsbChvKTsgfSwgbjogZnVuY3Rpb24gbigpIHsgdmFyIHN0ZXAgPSBpdC5uZXh0KCk7IG5vcm1hbENvbXBsZXRpb24gPSBzdGVwLmRvbmU7IHJldHVybiBzdGVwOyB9LCBlOiBmdW5jdGlvbiBlKF9lMikgeyBkaWRFcnIgPSB0cnVlOyBlcnIgPSBfZTI7IH0sIGY6IGZ1bmN0aW9uIGYoKSB7IHRyeSB7IGlmICghbm9ybWFsQ29tcGxldGlvbiAmJiBpdFtcInJldHVyblwiXSAhPSBudWxsKSBpdFtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoZGlkRXJyKSB0aHJvdyBlcnI7IH0gfSB9OyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgU2ltcGxlTGlnaHRib3ggPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTaW1wbGVMaWdodGJveChlbGVtZW50cywgb3B0aW9ucykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2ltcGxlTGlnaHRib3gpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZGVmYXVsdE9wdGlvbnNcIiwge1xuICAgICAgc291cmNlQXR0cjogJ2hyZWYnLFxuICAgICAgb3ZlcmxheTogdHJ1ZSxcbiAgICAgIHNwaW5uZXI6IHRydWUsXG4gICAgICBuYXY6IHRydWUsXG4gICAgICBuYXZUZXh0OiBbJyZsc2FxdW87JywgJyZyc2FxdW87J10sXG4gICAgICBjYXB0aW9uczogdHJ1ZSxcbiAgICAgIGNhcHRpb25EZWxheTogMCxcbiAgICAgIGNhcHRpb25TZWxlY3RvcjogJ2ltZycsXG4gICAgICBjYXB0aW9uVHlwZTogJ2F0dHInLFxuICAgICAgY2FwdGlvbnNEYXRhOiAndGl0bGUnLFxuICAgICAgY2FwdGlvblBvc2l0aW9uOiAnYm90dG9tJyxcbiAgICAgIGNhcHRpb25DbGFzczogJycsXG4gICAgICBjbG9zZTogdHJ1ZSxcbiAgICAgIGNsb3NlVGV4dDogJyZ0aW1lczsnLFxuICAgICAgc3dpcGVDbG9zZTogdHJ1ZSxcbiAgICAgIHNob3dDb3VudGVyOiB0cnVlLFxuICAgICAgZmlsZUV4dDogJ3BuZ3xqcGd8anBlZ3xnaWZ8d2VicCcsXG4gICAgICBhbmltYXRpb25TbGlkZTogdHJ1ZSxcbiAgICAgIGFuaW1hdGlvblNwZWVkOiAyNTAsXG4gICAgICBwcmVsb2FkaW5nOiB0cnVlLFxuICAgICAgZW5hYmxlS2V5Ym9hcmQ6IHRydWUsXG4gICAgICBsb29wOiB0cnVlLFxuICAgICAgcmVsOiBmYWxzZSxcbiAgICAgIGRvY0Nsb3NlOiB0cnVlLFxuICAgICAgc3dpcGVUb2xlcmFuY2U6IDUwLFxuICAgICAgY2xhc3NOYW1lOiAnc2ltcGxlLWxpZ2h0Ym94JyxcbiAgICAgIHdpZHRoUmF0aW86IDAuOCxcbiAgICAgIGhlaWdodFJhdGlvOiAwLjksXG4gICAgICBzY2FsZUltYWdlVG9SYXRpbzogZmFsc2UsXG4gICAgICBkaXNhYmxlUmlnaHRDbGljazogZmFsc2UsXG4gICAgICBkaXNhYmxlU2Nyb2xsOiB0cnVlLFxuICAgICAgYWxlcnRFcnJvcjogdHJ1ZSxcbiAgICAgIGFsZXJ0RXJyb3JNZXNzYWdlOiAnSW1hZ2Ugbm90IGZvdW5kLCBuZXh0IGltYWdlIHdpbGwgYmUgbG9hZGVkJyxcbiAgICAgIGFkZGl0aW9uYWxIdG1sOiBmYWxzZSxcbiAgICAgIGhpc3Rvcnk6IHRydWUsXG4gICAgICB0aHJvdHRsZUludGVydmFsOiAwLFxuICAgICAgZG91YmxlVGFwWm9vbTogMixcbiAgICAgIG1heFpvb206IDEwLFxuICAgICAgaHRtbENsYXNzOiAnaGFzLWxpZ2h0Ym94JyxcbiAgICAgIHJ0bDogZmFsc2UsXG4gICAgICBmaXhlZENsYXNzOiAnc2wtZml4ZWQnLFxuICAgICAgZmFkZVNwZWVkOiAzMDAsXG4gICAgICB1bmlxdWVJbWFnZXM6IHRydWUsXG4gICAgICBmb2N1czogdHJ1ZSxcbiAgICAgIHNjcm9sbFpvb206IHRydWUsXG4gICAgICBzY3JvbGxab29tRmFjdG9yOiAwLjVcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRyYW5zaXRpb25QcmVmaXhcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlzUGFzc2l2ZUV2ZW50c1N1cHBvcnRlZFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidHJhbnNpdGlvbkNhcGFibGVcIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaXNUb3VjaERldmljZVwiLCAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaXNBcHBsZURldmljZVwiLCAvKE1hY3xpUGhvbmV8aVBvZHxpUGFkKS9pLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbml0aWFsTG9jYXRpb25IYXNoXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJwdXNoU3RhdGVTdXBwb3J0XCIsICdwdXNoU3RhdGUnIGluIGhpc3RvcnkpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaXNPcGVuXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlzQW5pbWF0aW5nXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlzQ2xvc2luZ1wiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpc0ZhZGVJblwiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ1cmxDaGFuZ2VkT25jZVwiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJoYXNoUmVzZXRlZFwiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJoaXN0b3J5SGFzQ2hhbmdlc1wiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJoaXN0b3J5VXBkYXRlVGltZW91dFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImN1cnJlbnRJbWFnZVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZXZlbnROYW1lc3BhY2VcIiwgJ3NpbXBsZWxpZ2h0Ym94Jyk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJkb21Ob2Rlc1wiLCB7fSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJsb2FkZWRJbWFnZXNcIiwgW10pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5pdGlhbEltYWdlSW5kZXhcIiwgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjdXJyZW50SW1hZ2VJbmRleFwiLCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImluaXRpYWxTZWxlY3RvclwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImdsb2JhbFNjcm9sbGJhcldpZHRoXCIsIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiY29udHJvbENvb3JkaW5hdGVzXCIsIHtcbiAgICAgIHN3aXBlRGlmZjogMCxcbiAgICAgIHN3aXBlWURpZmY6IDAsXG4gICAgICBzd2lwZVN0YXJ0OiAwLFxuICAgICAgc3dpcGVFbmQ6IDAsXG4gICAgICBzd2lwZVlTdGFydDogMCxcbiAgICAgIHN3aXBlWUVuZDogMCxcbiAgICAgIG1vdXNlZG93bjogZmFsc2UsXG4gICAgICBpbWFnZUxlZnQ6IDAsXG4gICAgICB6b29tZWQ6IGZhbHNlLFxuICAgICAgY29udGFpbmVySGVpZ2h0OiAwLFxuICAgICAgY29udGFpbmVyV2lkdGg6IDAsXG4gICAgICBjb250YWluZXJPZmZzZXRYOiAwLFxuICAgICAgY29udGFpbmVyT2Zmc2V0WTogMCxcbiAgICAgIGltZ0hlaWdodDogMCxcbiAgICAgIGltZ1dpZHRoOiAwLFxuICAgICAgY2FwdHVyZTogZmFsc2UsXG4gICAgICBpbml0aWFsT2Zmc2V0WDogMCxcbiAgICAgIGluaXRpYWxPZmZzZXRZOiAwLFxuICAgICAgaW5pdGlhbFBvaW50ZXJPZmZzZXRYOiAwLFxuICAgICAgaW5pdGlhbFBvaW50ZXJPZmZzZXRZOiAwLFxuICAgICAgaW5pdGlhbFBvaW50ZXJPZmZzZXRYMjogMCxcbiAgICAgIGluaXRpYWxQb2ludGVyT2Zmc2V0WTI6IDAsXG4gICAgICBpbml0aWFsU2NhbGU6IDEsXG4gICAgICBpbml0aWFsUGluY2hEaXN0YW5jZTogMCxcbiAgICAgIHBvaW50ZXJPZmZzZXRYOiAwLFxuICAgICAgcG9pbnRlck9mZnNldFk6IDAsXG4gICAgICBwb2ludGVyT2Zmc2V0WDI6IDAsXG4gICAgICBwb2ludGVyT2Zmc2V0WTI6IDAsXG4gICAgICB0YXJnZXRPZmZzZXRYOiAwLFxuICAgICAgdGFyZ2V0T2Zmc2V0WTogMCxcbiAgICAgIHRhcmdldFNjYWxlOiAwLFxuICAgICAgcGluY2hPZmZzZXRYOiAwLFxuICAgICAgcGluY2hPZmZzZXRZOiAwLFxuICAgICAgbGltaXRPZmZzZXRYOiAwLFxuICAgICAgbGltaXRPZmZzZXRZOiAwLFxuICAgICAgc2NhbGVEaWZmZXJlbmNlOiAwLFxuICAgICAgdGFyZ2V0UGluY2hEaXN0YW5jZTogMCxcbiAgICAgIHRvdWNoQ291bnQ6IDAsXG4gICAgICBkb3VibGVUYXBwZWQ6IGZhbHNlLFxuICAgICAgdG91Y2htb3ZlQ291bnQ6IDBcbiAgICB9KTtcblxuICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24odGhpcy5kZWZhdWx0T3B0aW9ucywgb3B0aW9ucyk7XG4gICAgdGhpcy5pc1Bhc3NpdmVFdmVudHNTdXBwb3J0ZWQgPSB0aGlzLmNoZWNrUGFzc2l2ZUV2ZW50c1N1cHBvcnQoKTtcblxuICAgIGlmICh0eXBlb2YgZWxlbWVudHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLmluaXRpYWxTZWxlY3RvciA9IGVsZW1lbnRzO1xuICAgICAgdGhpcy5lbGVtZW50cyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbGVtZW50cykpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVsZW1lbnRzID0gdHlwZW9mIGVsZW1lbnRzLmxlbmd0aCAhPT0gJ3VuZGVmaW5lZCcgJiYgZWxlbWVudHMubGVuZ3RoID4gMCA/IEFycmF5LmZyb20oZWxlbWVudHMpIDogW2VsZW1lbnRzXTtcbiAgICB9XG5cbiAgICB0aGlzLnJlbGF0ZWRFbGVtZW50cyA9IFtdO1xuICAgIHRoaXMudHJhbnNpdGlvblByZWZpeCA9IHRoaXMuY2FsY3VsYXRlVHJhbnNpdGlvblByZWZpeCgpO1xuICAgIHRoaXMudHJhbnNpdGlvbkNhcGFibGUgPSB0aGlzLnRyYW5zaXRpb25QcmVmaXggIT09IGZhbHNlO1xuICAgIHRoaXMuaW5pdGlhbExvY2F0aW9uSGFzaCA9IHRoaXMuaGFzaDsgLy8gdGhpcyBzaG91bGQgYmUgaGFuZGxlZCBieSBhdHRyaWJ1dGUgc2VsZWN0b3IgSU1ITyEgPT4gJ2FbcmVsPWJsYV0nLi4uXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnJlbCkge1xuICAgICAgdGhpcy5lbGVtZW50cyA9IHRoaXMuZ2V0UmVsYXRlZCh0aGlzLm9wdGlvbnMucmVsKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnVuaXF1ZUltYWdlcykge1xuICAgICAgdmFyIGltZ0FyciA9IFtdO1xuICAgICAgdGhpcy5lbGVtZW50cyA9IEFycmF5LmZyb20odGhpcy5lbGVtZW50cykuZmlsdGVyKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIHZhciBzcmMgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShfdGhpcy5vcHRpb25zLnNvdXJjZUF0dHIpO1xuXG4gICAgICAgIGlmIChpbWdBcnIuaW5kZXhPZihzcmMpID09PSAtMSkge1xuICAgICAgICAgIGltZ0Fyci5wdXNoKHNyYyk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLmNyZWF0ZURvbU5vZGVzKCk7XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLmNsb3NlKSB7XG4gICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuYXBwZW5kQ2hpbGQodGhpcy5kb21Ob2Rlcy5jbG9zZUJ1dHRvbik7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5uYXYpIHtcbiAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5hcHBlbmRDaGlsZCh0aGlzLmRvbU5vZGVzLm5hdmlnYXRpb24pO1xuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuc3Bpbm5lcikge1xuICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLmFwcGVuZENoaWxkKHRoaXMuZG9tTm9kZXMuc3Bpbm5lcik7XG4gICAgfVxuXG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHRoaXMuZWxlbWVudHMsICdjbGljay4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMuaXNWYWxpZExpbmsoZXZlbnQuY3VycmVudFRhcmdldCkpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICBpZiAoX3RoaXMuaXNBbmltYXRpbmcpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpcy5pbml0aWFsSW1hZ2VJbmRleCA9IF90aGlzLmVsZW1lbnRzLmluZGV4T2YoZXZlbnQuY3VycmVudFRhcmdldCk7XG5cbiAgICAgICAgX3RoaXMub3BlbkltYWdlKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgfVxuICAgIH0pOyAvLyBjbG9zZSBhZGRFdmVudExpc3RlbmVyIGNsaWNrIGFkZEV2ZW50TGlzdGVuZXIgZG9jXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLmRvY0Nsb3NlKSB7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5kb21Ob2Rlcy53cmFwcGVyLCBbJ2NsaWNrLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAndG91Y2hzdGFydC4nICsgdGhpcy5ldmVudE5hbWVzcGFjZV0sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoX3RoaXMuaXNPcGVuICYmIGV2ZW50LnRhcmdldCA9PT0gZXZlbnQuY3VycmVudFRhcmdldCkge1xuICAgICAgICAgIF90aGlzLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gLy8gZGlzYWJsZSByaWdodGNsaWNrXG5cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuZGlzYWJsZVJpZ2h0Q2xpY2spIHtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihkb2N1bWVudC5ib2R5LCAnY29udGV4dG1lbnUuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwic2wtaW1hZ2VcIikpIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IC8vIGtleWJvYXJkLWNvbnRyb2xcblxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5lbmFibGVLZXlib2FyZCkge1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKGRvY3VtZW50LmJvZHksICdrZXl1cC4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgdGhpcy50aHJvdHRsZShmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgX3RoaXMuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZiA9IDA7IC8vIGtleWJvYXJkIGNvbnRyb2wgb25seSBpZiBsaWdodGJveCBpcyBvcGVuXG5cbiAgICAgICAgaWYgKF90aGlzLmlzQW5pbWF0aW5nICYmIGV2ZW50LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgICBfdGhpcy5jdXJyZW50SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCAnJyk7XG5cbiAgICAgICAgICBfdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybiBfdGhpcy5jbG9zZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF90aGlzLmlzT3Blbikge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICAgICAgX3RoaXMuY2xvc2UoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIV90aGlzLmlzQW5pbWF0aW5nICYmIFsnQXJyb3dMZWZ0JywgJ0Fycm93UmlnaHQnXS5pbmRleE9mKGV2ZW50LmtleSkgPiAtMSkge1xuICAgICAgICAgICAgX3RoaXMubG9hZEltYWdlKGV2ZW50LmtleSA9PT0gJ0Fycm93UmlnaHQnID8gMSA6IC0xKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMub3B0aW9ucy50aHJvdHRsZUludGVydmFsKSk7XG4gICAgfVxuXG4gICAgdGhpcy5hZGRFdmVudHMoKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTaW1wbGVMaWdodGJveCwgW3tcbiAgICBrZXk6IFwiY2hlY2tQYXNzaXZlRXZlbnRzU3VwcG9ydFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVja1Bhc3NpdmVFdmVudHNTdXBwb3J0KCkge1xuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL1dJQ0cvRXZlbnRMaXN0ZW5lck9wdGlvbnMvYmxvYi9naC1wYWdlcy9leHBsYWluZXIubWQjZmVhdHVyZS1kZXRlY3Rpb25cbiAgICAgIC8vIFRlc3QgdmlhIGEgZ2V0dGVyIGluIHRoZSBvcHRpb25zIG9iamVjdCB0byBzZWUgaWYgdGhlIHBhc3NpdmUgcHJvcGVydHkgaXMgYWNjZXNzZWRcbiAgICAgIHZhciBzdXBwb3J0c1Bhc3NpdmUgPSBmYWxzZTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG9wdHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdwYXNzaXZlJywge1xuICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgc3VwcG9ydHNQYXNzaXZlID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RQYXNzaXZlXCIsIG51bGwsIG9wdHMpO1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RQYXNzaXZlXCIsIG51bGwsIG9wdHMpO1xuICAgICAgfSBjYXRjaCAoZSkge31cblxuICAgICAgcmV0dXJuIHN1cHBvcnRzUGFzc2l2ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY3JlYXRlRG9tTm9kZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlRG9tTm9kZXMoKSB7XG4gICAgICB0aGlzLmRvbU5vZGVzLm92ZXJsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMub3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdzbC1vdmVybGF5Jyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLm92ZXJsYXkuZGF0YXNldC5vcGFjaXR5VGFyZ2V0ID0gXCIuN1wiO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5jbG9zZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5jbG9zZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdzbC1jbG9zZScpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5jbG9zZUJ1dHRvbi5pbm5lckhUTUwgPSB0aGlzLm9wdGlvbnMuY2xvc2VUZXh0O1xuICAgICAgdGhpcy5kb21Ob2Rlcy5zcGlubmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLnNwaW5uZXIuY2xhc3NMaXN0LmFkZCgnc2wtc3Bpbm5lcicpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5zcGlubmVyLmlubmVySFRNTCA9ICc8ZGl2PjwvZGl2Pic7XG4gICAgICB0aGlzLmRvbU5vZGVzLm5hdmlnYXRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMubmF2aWdhdGlvbi5jbGFzc0xpc3QuYWRkKCdzbC1uYXZpZ2F0aW9uJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLm5hdmlnYXRpb24uaW5uZXJIVE1MID0gXCI8YnV0dG9uIGNsYXNzPVxcXCJzbC1wcmV2XFxcIj5cIi5jb25jYXQodGhpcy5vcHRpb25zLm5hdlRleHRbMF0sIFwiPC9idXR0b24+PGJ1dHRvbiBjbGFzcz1cXFwic2wtbmV4dFxcXCI+XCIpLmNvbmNhdCh0aGlzLm9wdGlvbnMubmF2VGV4dFsxXSwgXCI8L2J1dHRvbj5cIik7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNvdW50ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuY291bnRlci5jbGFzc0xpc3QuYWRkKCdzbC1jb3VudGVyJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNvdW50ZXIuaW5uZXJIVE1MID0gJzxzcGFuIGNsYXNzPVwic2wtY3VycmVudFwiPjwvc3Bhbj4vPHNwYW4gY2xhc3M9XCJzbC10b3RhbFwiPjwvc3Bhbj4nO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5jYXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNhcHRpb24uY2xhc3NMaXN0LmFkZCgnc2wtY2FwdGlvbicsICdwb3MtJyArIHRoaXMub3B0aW9ucy5jYXB0aW9uUG9zaXRpb24pO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmNhcHRpb25DbGFzcykge1xuICAgICAgICB0aGlzLmRvbU5vZGVzLmNhcHRpb24uY2xhc3NMaXN0LmFkZCh0aGlzLm9wdGlvbnMuY2FwdGlvbkNsYXNzKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5kb21Ob2Rlcy5pbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5pbWFnZS5jbGFzc0xpc3QuYWRkKCdzbC1pbWFnZScpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc2wtd3JhcHBlcicpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAtMSk7XG4gICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuc2V0QXR0cmlidXRlKCdyb2xlJywgJ2RpYWxvZycpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCBmYWxzZSk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY2xhc3NOYW1lKSB7XG4gICAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5jbGFzc0xpc3QuYWRkKHRoaXMub3B0aW9ucy5jbGFzc05hbWUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnJ0bCkge1xuICAgICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc2wtZGlyLXJ0bCcpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0aHJvdHRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0aHJvdHRsZShmdW5jLCBsaW1pdCkge1xuICAgICAgdmFyIGluVGhyb3R0bGU7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWluVGhyb3R0bGUpIHtcbiAgICAgICAgICBmdW5jLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgaW5UaHJvdHRsZSA9IHRydWU7XG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5UaHJvdHRsZSA9IGZhbHNlO1xuICAgICAgICAgIH0sIGxpbWl0KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNWYWxpZExpbmtcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNWYWxpZExpbmsoZWxlbWVudCkge1xuICAgICAgcmV0dXJuICF0aGlzLm9wdGlvbnMuZmlsZUV4dCB8fCBlbGVtZW50LmdldEF0dHJpYnV0ZSh0aGlzLm9wdGlvbnMuc291cmNlQXR0cikgJiYgbmV3IFJlZ0V4cCgnKCcgKyB0aGlzLm9wdGlvbnMuZmlsZUV4dCArICcpJCcsICdpJykudGVzdChlbGVtZW50LmdldEF0dHJpYnV0ZSh0aGlzLm9wdGlvbnMuc291cmNlQXR0cikpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjYWxjdWxhdGVUcmFuc2l0aW9uUHJlZml4XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNhbGN1bGF0ZVRyYW5zaXRpb25QcmVmaXgoKSB7XG4gICAgICB2YXIgcyA9IChkb2N1bWVudC5ib2R5IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuc3R5bGU7XG4gICAgICByZXR1cm4gJ3RyYW5zaXRpb24nIGluIHMgPyAnJyA6ICdXZWJraXRUcmFuc2l0aW9uJyBpbiBzID8gJy13ZWJraXQtJyA6ICdNb3pUcmFuc2l0aW9uJyBpbiBzID8gJy1tb3otJyA6ICdPVHJhbnNpdGlvbicgaW4gcyA/ICctbycgOiBmYWxzZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidG9nZ2xlU2Nyb2xsYmFyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvZ2dsZVNjcm9sbGJhcih0eXBlKSB7XG4gICAgICB2YXIgc2Nyb2xsYmFyV2lkdGggPSAwO1xuICAgICAgdmFyIGZpeGVkRWxlbWVudHMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy4nICsgdGhpcy5vcHRpb25zLmZpeGVkQ2xhc3MpKTtcblxuICAgICAgaWYgKHR5cGUgPT09ICdoaWRlJykge1xuICAgICAgICB2YXIgZnVsbFdpbmRvd1dpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG5cbiAgICAgICAgaWYgKCFmdWxsV2luZG93V2lkdGgpIHtcbiAgICAgICAgICB2YXIgZG9jdW1lbnRFbGVtZW50UmVjdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICBmdWxsV2luZG93V2lkdGggPSBkb2N1bWVudEVsZW1lbnRSZWN0LnJpZ2h0IC0gTWF0aC5hYnMoZG9jdW1lbnRFbGVtZW50UmVjdC5sZWZ0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoIDwgZnVsbFdpbmRvd1dpZHRoIHx8IHRoaXMuaXNBcHBsZURldmljZSkge1xuICAgICAgICAgIHZhciBzY3JvbGxEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgICAgICAgICAgICAgcGFkZGluZ1JpZ2h0ID0gcGFyc2VJbnQoZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHQgfHwgMCwgMTApO1xuICAgICAgICAgIHNjcm9sbERpdi5jbGFzc0xpc3QuYWRkKCdzbC1zY3JvbGxiYXItbWVhc3VyZScpO1xuICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2Nyb2xsRGl2KTtcbiAgICAgICAgICBzY3JvbGxiYXJXaWR0aCA9IHNjcm9sbERpdi5vZmZzZXRXaWR0aCAtIHNjcm9sbERpdi5jbGllbnRXaWR0aDtcbiAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHNjcm9sbERpdik7XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5kYXRhc2V0Lm9yaWdpbmFsUGFkZGluZ1JpZ2h0ID0gcGFkZGluZ1JpZ2h0O1xuXG4gICAgICAgICAgaWYgKHNjcm9sbGJhcldpZHRoID4gMCB8fCBzY3JvbGxiYXJXaWR0aCA9PSAwICYmIHRoaXMuaXNBcHBsZURldmljZSkge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdoaWRkZW4tc2Nyb2xsJyk7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IHBhZGRpbmdSaWdodCArIHNjcm9sbGJhcldpZHRoICsgJ3B4JztcbiAgICAgICAgICAgIGZpeGVkRWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICB2YXIgYWN0dWFsUGFkZGluZyA9IGVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0O1xuICAgICAgICAgICAgICB2YXIgY2FsY3VsYXRlZFBhZGRpbmcgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KVsncGFkZGluZy1yaWdodCddO1xuICAgICAgICAgICAgICBlbGVtZW50LmRhdGFzZXQub3JpZ2luYWxQYWRkaW5nUmlnaHQgPSBhY3R1YWxQYWRkaW5nO1xuICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLnBhZGRpbmdSaWdodCA9IFwiXCIuY29uY2F0KHBhcnNlRmxvYXQoY2FsY3VsYXRlZFBhZGRpbmcpICsgc2Nyb2xsYmFyV2lkdGgsIFwicHhcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuLXNjcm9sbCcpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IGRvY3VtZW50LmJvZHkuZGF0YXNldC5vcmlnaW5hbFBhZGRpbmdSaWdodDtcbiAgICAgICAgZml4ZWRFbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgdmFyIHBhZGRpbmcgPSBlbGVtZW50LmRhdGFzZXQub3JpZ2luYWxQYWRkaW5nUmlnaHQ7XG5cbiAgICAgICAgICBpZiAodHlwZW9mIHBhZGRpbmcgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlLnBhZGRpbmdSaWdodCA9IHBhZGRpbmc7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHNjcm9sbGJhcldpZHRoO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9zZSgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAoIXRoaXMuaXNPcGVuIHx8IHRoaXMuaXNBbmltYXRpbmcgfHwgdGhpcy5pc0Nsb3NpbmcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmlzQ2xvc2luZyA9IHRydWU7XG4gICAgICB2YXIgZWxlbWVudCA9IHRoaXMucmVsYXRlZEVsZW1lbnRzW3RoaXMuY3VycmVudEltYWdlSW5kZXhdO1xuICAgICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2xvc2Uuc2ltcGxlbGlnaHRib3gnKSk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaGlzdG9yeSkge1xuICAgICAgICB0aGlzLmhpc3RvcnlIYXNDaGFuZ2VzID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKCF0aGlzLmhhc2hSZXNldGVkKSB7XG4gICAgICAgICAgdGhpcy5yZXNldEhhc2goKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZG9jdW1lbnQsICdmb2N1c2luLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMuZmFkZU91dChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2wtaW1hZ2UgaW1nLCAuc2wtb3ZlcmxheSwgLnNsLWNsb3NlLCAuc2wtbmF2aWdhdGlvbiwgLnNsLWltYWdlIC5zbC1jYXB0aW9uLCAuc2wtY291bnRlcicpLCB0aGlzLm9wdGlvbnMuZmFkZVNwZWVkLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfdGhpczIub3B0aW9ucy5kaXNhYmxlU2Nyb2xsKSB7XG4gICAgICAgICAgX3RoaXMyLnRvZ2dsZVNjcm9sbGJhcignc2hvdycpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF90aGlzMi5vcHRpb25zLmh0bWxDbGFzcyAmJiBfdGhpczIub3B0aW9ucy5odG1sQ2xhc3MgIT09ICcnKSB7XG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaHRtbCcpLmNsYXNzTGlzdC5yZW1vdmUoX3RoaXMyLm9wdGlvbnMuaHRtbENsYXNzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoX3RoaXMyLmRvbU5vZGVzLndyYXBwZXIpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKF90aGlzMi5kb21Ob2Rlcy5vdmVybGF5KTtcbiAgICAgICAgX3RoaXMyLmRvbU5vZGVzLmFkZGl0aW9uYWxIdG1sID0gbnVsbDtcbiAgICAgICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2xvc2VkLnNpbXBsZWxpZ2h0Ym94JykpO1xuICAgICAgICBfdGhpczIuaXNDbG9zaW5nID0gZmFsc2U7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlID0gbnVsbDtcbiAgICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XG4gICAgICB0aGlzLmlzQW5pbWF0aW5nID0gZmFsc2U7IC8vIHJlc2V0IHRvdWNoY29udHJvbCBjb29yZGluYXRlc1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5jb250cm9sQ29vcmRpbmF0ZXMpIHtcbiAgICAgICAgdGhpcy5jb250cm9sQ29vcmRpbmF0ZXNba2V5XSA9IDA7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY29udHJvbENvb3JkaW5hdGVzLm1vdXNlZG93biA9IGZhbHNlO1xuICAgICAgdGhpcy5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gZmFsc2U7XG4gICAgICB0aGlzLmNvbnRyb2xDb29yZGluYXRlcy5jYXB0dXJlID0gZmFsc2U7XG4gICAgICB0aGlzLmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUgPSB0aGlzLm1pbk1heCgxLCAxLCB0aGlzLm9wdGlvbnMubWF4Wm9vbSk7XG4gICAgICB0aGlzLmNvbnRyb2xDb29yZGluYXRlcy5kb3VibGVUYXBwZWQgPSBmYWxzZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFzaFwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cmluZygxKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicHJlbG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBpbmRleCA9IHRoaXMuY3VycmVudEltYWdlSW5kZXgsXG4gICAgICAgICAgbGVuZ3RoID0gdGhpcy5yZWxhdGVkRWxlbWVudHMubGVuZ3RoLFxuICAgICAgICAgIG5leHQgPSBpbmRleCArIDEgPCAwID8gbGVuZ3RoIC0gMSA6IGluZGV4ICsgMSA+PSBsZW5ndGggLSAxID8gMCA6IGluZGV4ICsgMSxcbiAgICAgICAgICBwcmV2ID0gaW5kZXggLSAxIDwgMCA/IGxlbmd0aCAtIDEgOiBpbmRleCAtIDEgPj0gbGVuZ3RoIC0gMSA/IDAgOiBpbmRleCAtIDEsXG4gICAgICAgICAgbmV4dEltYWdlID0gbmV3IEltYWdlKCksXG4gICAgICAgICAgcHJldkltYWdlID0gbmV3IEltYWdlKCk7XG4gICAgICBuZXh0SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgc3JjID0gZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZSgnc3JjJyk7XG5cbiAgICAgICAgaWYgKF90aGlzMy5sb2FkZWRJbWFnZXMuaW5kZXhPZihzcmMpID09PSAtMSkge1xuICAgICAgICAgIC8vaXMgdGhpcyBjb25kaXRpb24gZXZlbiByZXF1aXJlZC4uLiBzZXR0aW5nIG11bHRpcGxlIHRpbWVzIHdpbGwgbm90IGNoYW5nZSB1c2FnZS4uLlxuICAgICAgICAgIF90aGlzMy5sb2FkZWRJbWFnZXMucHVzaChzcmMpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMzLnJlbGF0ZWRFbGVtZW50c1tpbmRleF0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ25leHRJbWFnZUxvYWRlZC4nICsgX3RoaXMzLmV2ZW50TmFtZXNwYWNlKSk7XG4gICAgICB9KTtcbiAgICAgIG5leHRJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHRoaXMucmVsYXRlZEVsZW1lbnRzW25leHRdLmdldEF0dHJpYnV0ZSh0aGlzLm9wdGlvbnMuc291cmNlQXR0cikpO1xuICAgICAgcHJldkltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgdmFyIHNyYyA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3NyYycpO1xuXG4gICAgICAgIGlmIChfdGhpczMubG9hZGVkSW1hZ2VzLmluZGV4T2Yoc3JjKSA9PT0gLTEpIHtcbiAgICAgICAgICBfdGhpczMubG9hZGVkSW1hZ2VzLnB1c2goc3JjKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzMy5yZWxhdGVkRWxlbWVudHNbaW5kZXhdLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdwcmV2SW1hZ2VMb2FkZWQuJyArIF90aGlzMy5ldmVudE5hbWVzcGFjZSkpO1xuICAgICAgfSk7XG4gICAgICBwcmV2SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCB0aGlzLnJlbGF0ZWRFbGVtZW50c1twcmV2XS5nZXRBdHRyaWJ1dGUodGhpcy5vcHRpb25zLnNvdXJjZUF0dHIpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9hZEltYWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWRJbWFnZShkaXJlY3Rpb24pIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB2YXIgc2xpZGVEaXJlY3Rpb24gPSBkaXJlY3Rpb247XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMucnRsKSB7XG4gICAgICAgIGRpcmVjdGlvbiA9IC1kaXJlY3Rpb247XG4gICAgICB9XG5cbiAgICAgIHRoaXMucmVsYXRlZEVsZW1lbnRzW3RoaXMuY3VycmVudEltYWdlSW5kZXhdLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpKTtcbiAgICAgIHRoaXMucmVsYXRlZEVsZW1lbnRzW3RoaXMuY3VycmVudEltYWdlSW5kZXhdLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KChkaXJlY3Rpb24gPT09IDEgPyAnbmV4dCcgOiAncHJldicpICsgJy4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSkpO1xuICAgICAgdmFyIG5ld0luZGV4ID0gdGhpcy5jdXJyZW50SW1hZ2VJbmRleCArIGRpcmVjdGlvbjtcblxuICAgICAgaWYgKHRoaXMuaXNBbmltYXRpbmcgfHwgKG5ld0luZGV4IDwgMCB8fCBuZXdJbmRleCA+PSB0aGlzLnJlbGF0ZWRFbGVtZW50cy5sZW5ndGgpICYmIHRoaXMub3B0aW9ucy5sb29wID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY3VycmVudEltYWdlSW5kZXggPSBuZXdJbmRleCA8IDAgPyB0aGlzLnJlbGF0ZWRFbGVtZW50cy5sZW5ndGggLSAxIDogbmV3SW5kZXggPiB0aGlzLnJlbGF0ZWRFbGVtZW50cy5sZW5ndGggLSAxID8gMCA6IG5ld0luZGV4O1xuICAgICAgdGhpcy5kb21Ob2Rlcy5jb3VudGVyLnF1ZXJ5U2VsZWN0b3IoJy5zbC1jdXJyZW50JykuaW5uZXJIVE1MID0gdGhpcy5jdXJyZW50SW1hZ2VJbmRleCArIDE7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYW5pbWF0aW9uU2xpZGUpIHtcbiAgICAgICAgdGhpcy5zbGlkZSh0aGlzLm9wdGlvbnMuYW5pbWF0aW9uU3BlZWQgLyAxMDAwLCAtMTAwICogc2xpZGVEaXJlY3Rpb24gLSB0aGlzLmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZURpZmYgKyAncHgnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5mYWRlT3V0KHRoaXMuZG9tTm9kZXMuaW1hZ2UsIHRoaXMub3B0aW9ucy5mYWRlU3BlZWQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXM0LmlzQW5pbWF0aW5nID0gdHJ1ZTtcblxuICAgICAgICBpZiAoIV90aGlzNC5pc0Nsb3NpbmcpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBlbGVtZW50ID0gX3RoaXM0LnJlbGF0ZWRFbGVtZW50c1tfdGhpczQuY3VycmVudEltYWdlSW5kZXhdO1xuXG4gICAgICAgICAgICBfdGhpczQuY3VycmVudEltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgZWxlbWVudC5nZXRBdHRyaWJ1dGUoX3RoaXM0Lm9wdGlvbnMuc291cmNlQXR0cikpO1xuXG4gICAgICAgICAgICBpZiAoX3RoaXM0LmxvYWRlZEltYWdlcy5pbmRleE9mKGVsZW1lbnQuZ2V0QXR0cmlidXRlKF90aGlzNC5vcHRpb25zLnNvdXJjZUF0dHIpKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgX3RoaXM0LnNob3coX3RoaXM0LmRvbU5vZGVzLnNwaW5uZXIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoX3RoaXM0LmRvbU5vZGVzLmltYWdlLmNvbnRhaW5zKF90aGlzNC5kb21Ob2Rlcy5jYXB0aW9uKSkge1xuICAgICAgICAgICAgICBfdGhpczQuZG9tTm9kZXMuaW1hZ2UucmVtb3ZlQ2hpbGQoX3RoaXM0LmRvbU5vZGVzLmNhcHRpb24pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfdGhpczQuYWRqdXN0SW1hZ2Uoc2xpZGVEaXJlY3Rpb24pO1xuXG4gICAgICAgICAgICBpZiAoX3RoaXM0Lm9wdGlvbnMucHJlbG9hZGluZykgX3RoaXM0LnByZWxvYWQoKTtcbiAgICAgICAgICB9LCAxMDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzNC5pc0FuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYWRqdXN0SW1hZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRqdXN0SW1hZ2UoZGlyZWN0aW9uKSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLmN1cnJlbnRJbWFnZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHZhciB0bXBJbWFnZSA9IG5ldyBJbWFnZSgpLFxuICAgICAgICAgIHdpbmRvd1dpZHRoID0gd2luZG93LmlubmVyV2lkdGggKiB0aGlzLm9wdGlvbnMud2lkdGhSYXRpbyxcbiAgICAgICAgICB3aW5kb3dIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiB0aGlzLm9wdGlvbnMuaGVpZ2h0UmF0aW87XG4gICAgICB0bXBJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHRoaXMuY3VycmVudEltYWdlLmdldEF0dHJpYnV0ZSgnc3JjJykpO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UuZGF0YXNldC5zY2FsZSA9IDE7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVggPSAwO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVZID0gMDtcbiAgICAgIHRoaXMuem9vbVBhbkVsZW1lbnQoMCwgMCwgMSk7XG4gICAgICB0bXBJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBfdGhpczUucmVsYXRlZEVsZW1lbnRzW190aGlzNS5jdXJyZW50SW1hZ2VJbmRleF0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2Vycm9yLicgKyBfdGhpczUuZXZlbnROYW1lc3BhY2UpKTtcblxuICAgICAgICBfdGhpczUuaXNBbmltYXRpbmcgPSBmYWxzZTtcbiAgICAgICAgX3RoaXM1LmlzT3BlbiA9IHRydWU7XG4gICAgICAgIF90aGlzNS5kb21Ob2Rlcy5zcGlubmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIHZhciBkaXJJc0RlZmluZWQgPSBkaXJlY3Rpb24gPT09IDEgfHwgZGlyZWN0aW9uID09PSAtMTtcblxuICAgICAgICBpZiAoX3RoaXM1LmluaXRpYWxJbWFnZUluZGV4ID09PSBfdGhpczUuY3VycmVudEltYWdlSW5kZXggJiYgZGlySXNEZWZpbmVkKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzNS5jbG9zZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLmFsZXJ0RXJyb3IpIHtcbiAgICAgICAgICBhbGVydChfdGhpczUub3B0aW9ucy5hbGVydEVycm9yTWVzc2FnZSk7XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpczUubG9hZEltYWdlKGRpcklzRGVmaW5lZCA/IGRpcmVjdGlvbiA6IDEpO1xuICAgICAgfSk7XG4gICAgICB0bXBJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmICh0eXBlb2YgZGlyZWN0aW9uICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIF90aGlzNS5yZWxhdGVkRWxlbWVudHNbX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4XS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlZC4nICsgX3RoaXM1LmV2ZW50TmFtZXNwYWNlKSk7XG5cbiAgICAgICAgICBfdGhpczUucmVsYXRlZEVsZW1lbnRzW190aGlzNS5jdXJyZW50SW1hZ2VJbmRleF0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoKGRpcmVjdGlvbiA9PT0gMSA/ICduZXh0RG9uZScgOiAncHJldkRvbmUnKSArICcuJyArIF90aGlzNS5ldmVudE5hbWVzcGFjZSkpO1xuICAgICAgICB9IC8vIGhpc3RvcnlcblxuXG4gICAgICAgIGlmIChfdGhpczUub3B0aW9ucy5oaXN0b3J5KSB7XG4gICAgICAgICAgX3RoaXM1LnVwZGF0ZVVSTCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF90aGlzNS5sb2FkZWRJbWFnZXMuaW5kZXhPZihfdGhpczUuY3VycmVudEltYWdlLmdldEF0dHJpYnV0ZSgnc3JjJykpID09PSAtMSkge1xuICAgICAgICAgIF90aGlzNS5sb2FkZWRJbWFnZXMucHVzaChfdGhpczUuY3VycmVudEltYWdlLmdldEF0dHJpYnV0ZSgnc3JjJykpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGltYWdlV2lkdGggPSBldmVudC50YXJnZXQud2lkdGgsXG4gICAgICAgICAgICBpbWFnZUhlaWdodCA9IGV2ZW50LnRhcmdldC5oZWlnaHQ7XG5cbiAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLnNjYWxlSW1hZ2VUb1JhdGlvIHx8IGltYWdlV2lkdGggPiB3aW5kb3dXaWR0aCB8fCBpbWFnZUhlaWdodCA+IHdpbmRvd0hlaWdodCkge1xuICAgICAgICAgIHZhciByYXRpbyA9IGltYWdlV2lkdGggLyBpbWFnZUhlaWdodCA+IHdpbmRvd1dpZHRoIC8gd2luZG93SGVpZ2h0ID8gaW1hZ2VXaWR0aCAvIHdpbmRvd1dpZHRoIDogaW1hZ2VIZWlnaHQgLyB3aW5kb3dIZWlnaHQ7XG4gICAgICAgICAgaW1hZ2VXaWR0aCAvPSByYXRpbztcbiAgICAgICAgICBpbWFnZUhlaWdodCAvPSByYXRpbztcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzNS5kb21Ob2Rlcy5pbWFnZS5zdHlsZS50b3AgPSAod2luZG93LmlubmVySGVpZ2h0IC0gaW1hZ2VIZWlnaHQpIC8gMiArICdweCc7XG4gICAgICAgIF90aGlzNS5kb21Ob2Rlcy5pbWFnZS5zdHlsZS5sZWZ0ID0gKHdpbmRvdy5pbm5lcldpZHRoIC0gaW1hZ2VXaWR0aCAtIF90aGlzNS5nbG9iYWxTY3JvbGxiYXJXaWR0aCkgLyAyICsgJ3B4JztcbiAgICAgICAgX3RoaXM1LmRvbU5vZGVzLmltYWdlLnN0eWxlLndpZHRoID0gaW1hZ2VXaWR0aCArICdweCc7XG4gICAgICAgIF90aGlzNS5kb21Ob2Rlcy5pbWFnZS5zdHlsZS5oZWlnaHQgPSBpbWFnZUhlaWdodCArICdweCc7XG4gICAgICAgIF90aGlzNS5kb21Ob2Rlcy5zcGlubmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLmZvY3VzKSB7XG4gICAgICAgICAgX3RoaXM1LmZvcmNlRm9jdXMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzNS5mYWRlSW4oX3RoaXM1LmN1cnJlbnRJbWFnZSwgX3RoaXM1Lm9wdGlvbnMuZmFkZVNwZWVkLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLmZvY3VzKSB7XG4gICAgICAgICAgICBfdGhpczUuZG9tTm9kZXMud3JhcHBlci5mb2N1cygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgX3RoaXM1LmlzT3BlbiA9IHRydWU7XG4gICAgICAgIHZhciBjYXB0aW9uQ29udGFpbmVyLCBjYXB0aW9uVGV4dDtcblxuICAgICAgICBpZiAodHlwZW9mIF90aGlzNS5vcHRpb25zLmNhcHRpb25TZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBjYXB0aW9uQ29udGFpbmVyID0gX3RoaXM1Lm9wdGlvbnMuY2FwdGlvblNlbGVjdG9yID09PSAnc2VsZicgPyBfdGhpczUucmVsYXRlZEVsZW1lbnRzW190aGlzNS5jdXJyZW50SW1hZ2VJbmRleF0gOiBfdGhpczUucmVsYXRlZEVsZW1lbnRzW190aGlzNS5jdXJyZW50SW1hZ2VJbmRleF0ucXVlcnlTZWxlY3RvcihfdGhpczUub3B0aW9ucy5jYXB0aW9uU2VsZWN0b3IpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBfdGhpczUub3B0aW9ucy5jYXB0aW9uU2VsZWN0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBjYXB0aW9uQ29udGFpbmVyID0gX3RoaXM1Lm9wdGlvbnMuY2FwdGlvblNlbGVjdG9yKF90aGlzNS5yZWxhdGVkRWxlbWVudHNbX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4XSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX3RoaXM1Lm9wdGlvbnMuY2FwdGlvbnMgJiYgY2FwdGlvbkNvbnRhaW5lcikge1xuICAgICAgICAgIGlmIChfdGhpczUub3B0aW9ucy5jYXB0aW9uVHlwZSA9PT0gJ2RhdGEnKSB7XG4gICAgICAgICAgICBjYXB0aW9uVGV4dCA9IGNhcHRpb25Db250YWluZXIuZGF0YXNldFtfdGhpczUub3B0aW9ucy5jYXB0aW9uc0RhdGFdO1xuICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXM1Lm9wdGlvbnMuY2FwdGlvblR5cGUgPT09ICd0ZXh0Jykge1xuICAgICAgICAgICAgY2FwdGlvblRleHQgPSBjYXB0aW9uQ29udGFpbmVyLmlubmVySFRNTDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FwdGlvblRleHQgPSBjYXB0aW9uQ29udGFpbmVyLmdldEF0dHJpYnV0ZShfdGhpczUub3B0aW9ucy5jYXB0aW9uc0RhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghX3RoaXM1Lm9wdGlvbnMubG9vcCkge1xuICAgICAgICAgIGlmIChfdGhpczUuY3VycmVudEltYWdlSW5kZXggPT09IDApIHtcbiAgICAgICAgICAgIF90aGlzNS5oaWRlKF90aGlzNS5kb21Ob2Rlcy5uYXZpZ2F0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zbC1wcmV2JykpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChfdGhpczUuY3VycmVudEltYWdlSW5kZXggPj0gX3RoaXM1LnJlbGF0ZWRFbGVtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICBfdGhpczUuaGlkZShfdGhpczUuZG9tTm9kZXMubmF2aWdhdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2wtbmV4dCcpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4ID4gMCkge1xuICAgICAgICAgICAgX3RoaXM1LnNob3coX3RoaXM1LmRvbU5vZGVzLm5hdmlnYXRpb24ucXVlcnlTZWxlY3RvcignLnNsLXByZXYnKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKF90aGlzNS5jdXJyZW50SW1hZ2VJbmRleCA8IF90aGlzNS5yZWxhdGVkRWxlbWVudHMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgX3RoaXM1LnNob3coX3RoaXM1LmRvbU5vZGVzLm5hdmlnYXRpb24ucXVlcnlTZWxlY3RvcignLnNsLW5leHQnKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChfdGhpczUucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgX3RoaXM1LmhpZGUoX3RoaXM1LmRvbU5vZGVzLm5hdmlnYXRpb24ucXVlcnlTZWxlY3RvckFsbCgnLnNsLXByZXYsIC5zbC1uZXh0JykpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpczUuc2hvdyhfdGhpczUuZG9tTm9kZXMubmF2aWdhdGlvbi5xdWVyeVNlbGVjdG9yQWxsKCcuc2wtcHJldiwgLnNsLW5leHQnKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gMSB8fCBkaXJlY3Rpb24gPT09IC0xKSB7XG4gICAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLmFuaW1hdGlvblNsaWRlKSB7XG4gICAgICAgICAgICBfdGhpczUuc2xpZGUoMCwgMTAwICogZGlyZWN0aW9uICsgJ3B4Jyk7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBfdGhpczUuc2xpZGUoX3RoaXM1Lm9wdGlvbnMuYW5pbWF0aW9uU3BlZWQgLyAxMDAwLCAwICsgJ3B4Jyk7XG4gICAgICAgICAgICB9LCA1MCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXM1LmZhZGVJbihfdGhpczUuZG9tTm9kZXMuaW1hZ2UsIF90aGlzNS5vcHRpb25zLmZhZGVTcGVlZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXM1LmlzQW5pbWF0aW5nID0gZmFsc2U7XG5cbiAgICAgICAgICAgIF90aGlzNS5zZXRDYXB0aW9uKGNhcHRpb25UZXh0LCBpbWFnZVdpZHRoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczUuaXNBbmltYXRpbmcgPSBmYWxzZTtcblxuICAgICAgICAgIF90aGlzNS5zZXRDYXB0aW9uKGNhcHRpb25UZXh0LCBpbWFnZVdpZHRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfdGhpczUub3B0aW9ucy5hZGRpdGlvbmFsSHRtbCAmJiAhX3RoaXM1LmRvbU5vZGVzLmFkZGl0aW9uYWxIdG1sKSB7XG4gICAgICAgICAgX3RoaXM1LmRvbU5vZGVzLmFkZGl0aW9uYWxIdG1sID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgICAgICBfdGhpczUuZG9tTm9kZXMuYWRkaXRpb25hbEh0bWwuY2xhc3NMaXN0LmFkZCgnc2wtYWRkaXRpb25hbC1odG1sJyk7XG5cbiAgICAgICAgICBfdGhpczUuZG9tTm9kZXMuYWRkaXRpb25hbEh0bWwuaW5uZXJIVE1MID0gX3RoaXM1Lm9wdGlvbnMuYWRkaXRpb25hbEh0bWw7XG5cbiAgICAgICAgICBfdGhpczUuZG9tTm9kZXMuaW1hZ2UuYXBwZW5kQ2hpbGQoX3RoaXM1LmRvbU5vZGVzLmFkZGl0aW9uYWxIdG1sKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInpvb21QYW5FbGVtZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHpvb21QYW5FbGVtZW50KHRhcmdldE9mZnNldFgsIHRhcmdldE9mZnNldFksIHRhcmdldFNjYWxlKSB7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5zdHlsZVt0aGlzLnRyYW5zaXRpb25QcmVmaXggKyAndHJhbnNmb3JtJ10gPSAndHJhbnNsYXRlKCcgKyB0YXJnZXRPZmZzZXRYICsgJywnICsgdGFyZ2V0T2Zmc2V0WSArICcpIHNjYWxlKCcgKyB0YXJnZXRTY2FsZSArICcpJztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibWluTWF4XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1pbk1heCh2YWx1ZSwgbWluLCBtYXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZSA8IG1pbiA/IG1pbiA6IHZhbHVlID4gbWF4ID8gbWF4IDogdmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldFpvb21EYXRhXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFpvb21EYXRhKGluaXRpYWxTY2FsZSwgdGFyZ2V0T2Zmc2V0WCwgdGFyZ2V0T2Zmc2V0WSkge1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UuZGF0YXNldC5zY2FsZSA9IGluaXRpYWxTY2FsZTtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlLmRhdGFzZXQudHJhbnNsYXRlWCA9IHRhcmdldE9mZnNldFg7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVkgPSB0YXJnZXRPZmZzZXRZO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYXNoY2hhbmdlSGFuZGxlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNoY2hhbmdlSGFuZGxlcigpIHtcbiAgICAgIGlmICh0aGlzLmlzT3BlbiAmJiB0aGlzLmhhc2ggPT09IHRoaXMuaW5pdGlhbExvY2F0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLmhhc2hSZXNldGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRFdmVudHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkRXZlbnRzKCkge1xuICAgICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICAgIC8vIHJlc2l6ZS9yZXNwb25zaXZlXG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIod2luZG93LCAncmVzaXplLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgLy90aGlzLmFkanVzdEltYWdlLmJpbmQodGhpcylcbiAgICAgICAgaWYgKF90aGlzNi5pc09wZW4pIHtcbiAgICAgICAgICBfdGhpczYuYWRqdXN0SW1hZ2UoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5kb21Ob2Rlcy5jbG9zZUJ1dHRvbiwgWydjbGljay4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ3RvdWNoc3RhcnQuJyArIHRoaXMuZXZlbnROYW1lc3BhY2VdLCB0aGlzLmNsb3NlLmJpbmQodGhpcykpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmhpc3RvcnkpIHtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXM2LmFkZEV2ZW50TGlzdGVuZXIod2luZG93LCAnaGFzaGNoYW5nZS4nICsgX3RoaXM2LmV2ZW50TmFtZXNwYWNlLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChfdGhpczYuaXNPcGVuKSB7XG4gICAgICAgICAgICAgIF90aGlzNi5oYXNoY2hhbmdlSGFuZGxlcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9LCA0MCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmRvbU5vZGVzLm5hdmlnYXRpb24uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2J1dHRvbicpLCAnY2xpY2suJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoIWV2ZW50LmN1cnJlbnRUYXJnZXQudGFnTmFtZS5tYXRjaCgvYnV0dG9uL2kpKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZiA9IDA7XG5cbiAgICAgICAgX3RoaXM2LmxvYWRJbWFnZShldmVudC5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnc2wtbmV4dCcpID8gMSA6IC0xKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnNjcm9sbFpvb20pIHtcbiAgICAgICAgdmFyIHNjYWxlID0gMTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHRoaXMuZG9tTm9kZXMuaW1hZ2UsIFsnbW91c2V3aGVlbCcsICdET01Nb3VzZVNjcm9sbCddLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5tb3VzZWRvd24gfHwgX3RoaXM2LmlzQW5pbWF0aW5nIHx8IF90aGlzNi5pc0Nsb3NpbmcgfHwgIV90aGlzNi5pc09wZW4pIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCA9PSAwKSB7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5kb21Ob2Rlcy5pbWFnZSkuaGVpZ2h0O1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5kb21Ob2Rlcy5pbWFnZSkud2lkdGg7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLmhlaWdodDtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggPSBfdGhpczYuZ2V0RGltZW5zaW9ucyhfdGhpczYuY3VycmVudEltYWdlKS53aWR0aDtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WCA9IF90aGlzNi5kb21Ob2Rlcy5pbWFnZS5vZmZzZXRMZWZ0O1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRZID0gX3RoaXM2LmRvbU5vZGVzLmltYWdlLm9mZnNldFRvcDtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFggPSBwYXJzZUZsb2F0KF90aGlzNi5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVYKTtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkgPSBwYXJzZUZsb2F0KF90aGlzNi5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVZKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHZhciBkZWx0YSA9IGV2ZW50LmRlbHRhIHx8IGV2ZW50LndoZWVsRGVsdGE7XG5cbiAgICAgICAgICBpZiAoZGVsdGEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy93ZSBhcmUgb24gZmlyZWZveFxuICAgICAgICAgICAgZGVsdGEgPSBldmVudC5kZXRhaWw7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZGVsdGEgPSBNYXRoLm1heCgtMSwgTWF0aC5taW4oMSwgZGVsdGEpKTsgLy8gY2FwIHRoZSBkZWx0YSB0byBbLTEsMV0gZm9yIGNyb3NzIGJyb3dzZXIgY29uc2lzdGVuY3lcbiAgICAgICAgICAvLyBhcHBseSB6b29tXG5cbiAgICAgICAgICBzY2FsZSArPSBkZWx0YSAqIF90aGlzNi5vcHRpb25zLnNjcm9sbFpvb21GYWN0b3IgKiBzY2FsZTtcbiAgICAgICAgICBzY2FsZSA9IE1hdGgubWF4KDEsIE1hdGgubWluKF90aGlzNi5vcHRpb25zLm1heFpvb20sIHNjYWxlKSk7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA9IHNjYWxlO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucGluY2hPZmZzZXRYID0gZXZlbnQucGFnZVg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5waW5jaE9mZnNldFkgPSBldmVudC5wYWdlWTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WCA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ1dpZHRoICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGgpIC8gMjtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCkgLyAyO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIDw9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGggPyAwIDogX3RoaXM2Lm1pbk1heChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYIC0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucGluY2hPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCAvIDIgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYKSAvIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zY2FsZURpZmZlcmVuY2UpICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zY2FsZURpZmZlcmVuY2UsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYICogLTEsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYKTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPD0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgPyAwIDogX3RoaXM2Lm1pbk1heChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZIC0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucGluY2hPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgLyAyIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSkgLyAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlKSAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSAqIC0xLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSk7XG5cbiAgICAgICAgICBfdGhpczYuem9vbVBhbkVsZW1lbnQoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkgKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUpO1xuXG4gICAgICAgICAgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPiAxKSB7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnpvb21lZCA9IHRydWU7XG5cbiAgICAgICAgICAgIGlmICghX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUub3BhY2l0eSAmJiBfdGhpczYuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgX3RoaXM2LmZhZGVPdXQoX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24sIF90aGlzNi5vcHRpb25zLmZhZGVTcGVlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9PT0gMSkge1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnpvb21lZCA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgIGlmIChfdGhpczYuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS5kaXNwbGF5ID09PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICBfdGhpczYuZmFkZUluKF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLCBfdGhpczYub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBpbmNoRGlzdGFuY2UgPSBudWxsO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jYXB0dXJlID0gZmFsc2U7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUGluY2hEaXN0YW5jZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0UGluY2hEaXN0YW5jZTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGU7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZO1xuXG4gICAgICAgICAgX3RoaXM2LnNldFpvb21EYXRhKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZKTtcblxuICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFggKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5kb21Ob2Rlcy5pbWFnZSwgWyd0b3VjaHN0YXJ0LicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnbW91c2Vkb3duLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlXSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC50YXJnZXQudGFnTmFtZSA9PT0gJ0EnICYmIGV2ZW50LnR5cGUgPT09ICd0b3VjaHN0YXJ0Jykge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGV2ZW50LnR5cGUgPT09ICdtb3VzZWRvd24nKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WCA9IGV2ZW50LmNsaWVudFg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkgPSBldmVudC5jbGllbnRZO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0ID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmRvbU5vZGVzLmltYWdlKS5oZWlnaHQ7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5kb21Ob2Rlcy5pbWFnZSkud2lkdGg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdIZWlnaHQgPSBfdGhpczYuZ2V0RGltZW5zaW9ucyhfdGhpczYuY3VycmVudEltYWdlKS5oZWlnaHQ7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLndpZHRoO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WCA9IF90aGlzNi5kb21Ob2Rlcy5pbWFnZS5vZmZzZXRMZWZ0O1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WSA9IF90aGlzNi5kb21Ob2Rlcy5pbWFnZS5vZmZzZXRUb3A7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCA9IHBhcnNlRmxvYXQoX3RoaXM2LmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVgpO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkgPSBwYXJzZUZsb2F0KF90aGlzNi5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVZKTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNhcHR1cmUgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudG91Y2hDb3VudCA9IGV2ZW50LnRvdWNoZXMubGVuZ3RoO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYID0gZXZlbnQudG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZID0gZXZlbnQudG91Y2hlc1swXS5jbGllbnRZO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0ID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmRvbU5vZGVzLmltYWdlKS5oZWlnaHQ7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5kb21Ob2Rlcy5pbWFnZSkud2lkdGg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdIZWlnaHQgPSBfdGhpczYuZ2V0RGltZW5zaW9ucyhfdGhpczYuY3VycmVudEltYWdlKS5oZWlnaHQ7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLndpZHRoO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WCA9IF90aGlzNi5kb21Ob2Rlcy5pbWFnZS5vZmZzZXRMZWZ0O1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WSA9IF90aGlzNi5kb21Ob2Rlcy5pbWFnZS5vZmZzZXRUb3A7XG5cbiAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID09PSAxKVxuICAgICAgICAgICAgLyogU2luZ2xlIHRvdWNoICovXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGlmICghX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5kb3VibGVUYXBwZWQpIHtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmRvdWJsZVRhcHBlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmRvdWJsZVRhcHBlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0sIDMwMCk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmN1cnJlbnRJbWFnZS5jbGFzc0xpc3QuYWRkKCdzbC10cmFuc2l0aW9uJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkKSB7XG4gICAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9IF90aGlzNi5vcHRpb25zLmRvdWJsZVRhcFpvb207XG5cbiAgICAgICAgICAgICAgICAgIF90aGlzNi5zZXRab29tRGF0YShfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSwgMCwgMCk7XG5cbiAgICAgICAgICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudCgwICsgXCJweFwiLCAwICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSk7XG5cbiAgICAgICAgICAgICAgICAgIGlmICghX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUub3BhY2l0eSAmJiBfdGhpczYuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXM2LmZhZGVPdXQoX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24sIF90aGlzNi5vcHRpb25zLmZhZGVTcGVlZCk7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUgPSAxO1xuXG4gICAgICAgICAgICAgICAgICBfdGhpczYuc2V0Wm9vbURhdGEoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUsIDAsIDApO1xuXG4gICAgICAgICAgICAgICAgICBfdGhpczYuem9vbVBhbkVsZW1lbnQoMCArIFwicHhcIiwgMCArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUpO1xuXG4gICAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnpvb21lZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgaWYgKF90aGlzNi5jdXJyZW50SW1hZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXM2LmN1cnJlbnRJbWFnZS5jbGFzc0xpc3QucmVtb3ZlKCdzbC10cmFuc2l0aW9uJyk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYID0gcGFyc2VGbG9hdChfdGhpczYuY3VycmVudEltYWdlLmRhdGFzZXQudHJhbnNsYXRlWCk7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkgPSBwYXJzZUZsb2F0KF90aGlzNi5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVZKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID09PSAyKVxuICAgICAgICAgICAgLyogUGluY2ggKi9cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFgyID0gZXZlbnQudG91Y2hlc1sxXS5jbGllbnRYO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WTIgPSBldmVudC50b3VjaGVzWzFdLmNsaWVudFk7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFggPSBwYXJzZUZsb2F0KF90aGlzNi5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVYKTtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSA9IHBhcnNlRmxvYXQoX3RoaXM2LmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVkpO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBpbmNoT2Zmc2V0WCA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WCArIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYMikgLyAyO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBpbmNoT2Zmc2V0WSA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WSArIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZMikgLyAyO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQaW5jaERpc3RhbmNlID0gTWF0aC5zcXJ0KChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WCAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYMikgKiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFggLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WDIpICsgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkyKSAqIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZMikpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jYXB0dXJlID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLm1vdXNlZG93bikgcmV0dXJuIHRydWU7XG5cbiAgICAgICAgaWYgKF90aGlzNi50cmFuc2l0aW9uQ2FwYWJsZSkge1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1hZ2VMZWZ0ID0gcGFyc2VJbnQoX3RoaXM2LmRvbU5vZGVzLmltYWdlLnN0eWxlLmxlZnQsIDEwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubW91c2Vkb3duID0gdHJ1ZTtcbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZURpZmYgPSAwO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlWURpZmYgPSAwO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlU3RhcnQgPSBldmVudC5wYWdlWCB8fCBldmVudC50b3VjaGVzWzBdLnBhZ2VYO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlWVN0YXJ0ID0gZXZlbnQucGFnZVkgfHwgZXZlbnQudG91Y2hlc1swXS5wYWdlWTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5kb21Ob2Rlcy5pbWFnZSwgWyd0b3VjaG1vdmUuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdtb3VzZW1vdmUuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdNU1BvaW50ZXJNb3ZlJ10sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoIV90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubW91c2Vkb3duKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ3RvdWNobW92ZScpIHtcbiAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jYXB0dXJlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFggPSBldmVudC50b3VjaGVzWzBdLmNsaWVudFg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WSA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRvdWNoQ291bnQgPSBldmVudC50b3VjaGVzLmxlbmd0aDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRvdWNobW92ZUNvdW50Kys7XG5cbiAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID4gMSlcbiAgICAgICAgICAgIC8qIFBpbmNoICovXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFgyID0gZXZlbnQudG91Y2hlc1sxXS5jbGllbnRYO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRZMiA9IGV2ZW50LnRvdWNoZXNbMV0uY2xpZW50WTtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRQaW5jaERpc3RhbmNlID0gTWF0aC5zcXJ0KChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WDIpICogKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFggLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRYMikgKyAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFkyKSAqIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WTIpKTtcblxuICAgICAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUGluY2hEaXN0YW5jZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBpbmNoRGlzdGFuY2UgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFBpbmNoRGlzdGFuY2U7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUGluY2hEaXN0YW5jZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0UGluY2hEaXN0YW5jZSkgPj0gMSkge1xuICAgICAgICAgICAgICAgIC8qIEluaXRpYWxpemUgaGVscGVycyAqL1xuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPSBfdGhpczYubWluTWF4KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0UGluY2hEaXN0YW5jZSAvIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBpbmNoRGlzdGFuY2UgKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSwgMSwgX3RoaXM2Lm9wdGlvbnMubWF4Wm9vbSk7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFggPSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lcldpZHRoKSAvIDI7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkgPSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdIZWlnaHQgKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQpIC8gMjtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnNjYWxlRGlmZmVyZW5jZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZTtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFggPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ1dpZHRoICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA8PSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lcldpZHRoID8gMCA6IF90aGlzNi5taW5NYXgoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCAtIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBpbmNoT2Zmc2V0WCAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WCAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGggLyAyIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCkgLyAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlKSAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WCAqIC0xLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WCk7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdIZWlnaHQgKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIDw9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0ID8gMCA6IF90aGlzNi5taW5NYXgoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSAtIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBpbmNoT2Zmc2V0WSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0IC8gMiAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkpIC8gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnNjYWxlRGlmZmVyZW5jZSkgKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnNjYWxlRGlmZmVyZW5jZSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkgKiAtMSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkpO1xuXG4gICAgICAgICAgICAgICAgX3RoaXM2Lnpvb21QYW5FbGVtZW50KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlKTtcblxuICAgICAgICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlID4gMSkge1xuICAgICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy56b29tZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoIV90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLm9wYWNpdHkgJiYgX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzNi5mYWRlT3V0KF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLCBfdGhpczYub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBpbmNoRGlzdGFuY2UgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFBpbmNoRGlzdGFuY2U7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlO1xuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFggPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFg7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZTtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYID0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCkgLyAyO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkgPSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdIZWlnaHQgKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQpIC8gMjtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIDw9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGggPyAwIDogX3RoaXM2Lm1pbk1heChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRYIC0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCksIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYICogLTEsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYKTtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nSGVpZ2h0ICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA8PSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCA/IDAgOiBfdGhpczYubWluTWF4KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFkgLSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZKSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkgKiAtMSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkpO1xuXG4gICAgICAgICAgICBpZiAoTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYKSA9PT0gTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFgpKSB7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFggPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFg7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSkgPT09IE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZKSkge1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF90aGlzNi5zZXRab29tRGF0YShfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkpO1xuXG4gICAgICAgICAgICBfdGhpczYuem9vbVBhbkVsZW1lbnQoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkgKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvKiBNb3VzZSBNb3ZlIGltcGxlbWVudGF0aW9uICovXG5cblxuICAgICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ21vdXNlbW92ZScgJiYgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5tb3VzZWRvd24pIHtcbiAgICAgICAgICBpZiAoZXZlbnQudHlwZSA9PSAndG91Y2htb3ZlJykgcmV0dXJuIHRydWU7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jYXB0dXJlID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFggPSBldmVudC5jbGllbnRYO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFkgPSBldmVudC5jbGllbnRZO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WCA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ1dpZHRoICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGgpIC8gMjtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCkgLyAyO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIDw9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGggPyAwIDogX3RoaXM2Lm1pbk1heChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRYIC0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCksIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYICogLTEsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYKTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPD0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgPyAwIDogX3RoaXM2Lm1pbk1heChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRZIC0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSksIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZICogLTEsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZKTtcblxuICAgICAgICAgIGlmIChNYXRoLmFicyhfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFgpID09PSBNYXRoLmFicyhfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WCkpIHtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFggPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFg7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFg7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSkgPT09IE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZKSkge1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WTtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpczYuc2V0Wm9vbURhdGEoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZKTtcblxuICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFggKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIV90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkKSB7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZUVuZCA9IGV2ZW50LnBhZ2VYIHx8IGV2ZW50LnRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZVlFbmQgPSBldmVudC5wYWdlWSB8fCBldmVudC50b3VjaGVzWzBdLnBhZ2VZO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVEaWZmID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZVN0YXJ0IC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZUVuZDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlWURpZmYgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlWVN0YXJ0IC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZVlFbmQ7XG5cbiAgICAgICAgICBpZiAoX3RoaXM2Lm9wdGlvbnMuYW5pbWF0aW9uU2xpZGUpIHtcbiAgICAgICAgICAgIF90aGlzNi5zbGlkZSgwLCAtX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZURpZmYgKyAncHgnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHRoaXMuZG9tTm9kZXMuaW1hZ2UsIFsndG91Y2hlbmQuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdtb3VzZXVwLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAndG91Y2hjYW5jZWwuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdtb3VzZWxlYXZlLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAncG9pbnRlcnVwJywgJ3BvaW50ZXJjYW5jZWwnLCAnTVNQb2ludGVyVXAnLCAnTVNQb2ludGVyQ2FuY2VsJ10sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoX3RoaXM2LmlzVG91Y2hEZXZpY2UgJiYgZXZlbnQudHlwZSA9PT0gJ3RvdWNoZW5kJykge1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudG91Y2hDb3VudCA9IGV2ZW50LnRvdWNoZXMubGVuZ3RoO1xuXG4gICAgICAgICAgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudG91Y2hDb3VudCA9PT0gMClcbiAgICAgICAgICAgIC8qIE5vIHRvdWNoICovXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIC8qIFNldCBhdHRyaWJ1dGVzICovXG4gICAgICAgICAgICAgIGlmIChfdGhpczYuY3VycmVudEltYWdlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXM2LnNldFpvb21EYXRhKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFgsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnpvb21lZCA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgaWYgKF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykge1xuICAgICAgICAgICAgICAgICAgX3RoaXM2LmZhZGVJbihfdGhpczYuZG9tTm9kZXMuY2FwdGlvbiwgX3RoaXM2Lm9wdGlvbnMuZmFkZVNwZWVkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQaW5jaERpc3RhbmNlID0gbnVsbDtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jYXB0dXJlID0gZmFsc2U7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudG91Y2hDb3VudCA9PT0gMSlcbiAgICAgICAgICAgIC8qIFNpbmdsZSB0b3VjaCAqL1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WCA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WDtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkgPSBldmVudC50b3VjaGVzWzBdLmNsaWVudFk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudG91Y2hDb3VudCA+IDEpXG4gICAgICAgICAgICAvKiBQaW5jaCAqL1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQaW5jaERpc3RhbmNlID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLm1vdXNlZG93bikge1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubW91c2Vkb3duID0gZmFsc2U7XG4gICAgICAgICAgdmFyIHBvc3NpYmxlRGlyID0gdHJ1ZTtcblxuICAgICAgICAgIGlmICghX3RoaXM2Lm9wdGlvbnMubG9vcCkge1xuICAgICAgICAgICAgaWYgKF90aGlzNi5jdXJyZW50SW1hZ2VJbmRleCA9PT0gMCAmJiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZiA8IDApIHtcbiAgICAgICAgICAgICAgcG9zc2libGVEaXIgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKF90aGlzNi5jdXJyZW50SW1hZ2VJbmRleCA+PSBfdGhpczYucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCAtIDEgJiYgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZURpZmYgPiAwKSB7XG4gICAgICAgICAgICAgIHBvc3NpYmxlRGlyID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVEaWZmKSA+IF90aGlzNi5vcHRpb25zLnN3aXBlVG9sZXJhbmNlICYmIHBvc3NpYmxlRGlyKSB7XG4gICAgICAgICAgICBfdGhpczYubG9hZEltYWdlKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVEaWZmID4gMCA/IDEgOiAtMSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChfdGhpczYub3B0aW9ucy5hbmltYXRpb25TbGlkZSkge1xuICAgICAgICAgICAgX3RoaXM2LnNsaWRlKF90aGlzNi5vcHRpb25zLmFuaW1hdGlvblNwZWVkIC8gMTAwMCwgMCArICdweCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChfdGhpczYub3B0aW9ucy5zd2lwZUNsb3NlICYmIE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVZRGlmZikgPiA1MCAmJiBNYXRoLmFicyhfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZikgPCBfdGhpczYub3B0aW9ucy5zd2lwZVRvbGVyYW5jZSkge1xuICAgICAgICAgICAgX3RoaXM2LmNsb3NlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmRvbU5vZGVzLmltYWdlLCBbJ2RibGNsaWNrJ10sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoX3RoaXM2LmlzVG91Y2hEZXZpY2UpIHJldHVybjtcbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFggPSBldmVudC5jbGllbnRYO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0ID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmRvbU5vZGVzLmltYWdlKS5oZWlnaHQ7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGggPSBfdGhpczYuZ2V0RGltZW5zaW9ucyhfdGhpczYuZG9tTm9kZXMuaW1hZ2UpLndpZHRoO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLmhlaWdodDtcbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLndpZHRoO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lck9mZnNldFggPSBfdGhpczYuZG9tTm9kZXMuaW1hZ2Uub2Zmc2V0TGVmdDtcbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRZID0gX3RoaXM2LmRvbU5vZGVzLmltYWdlLm9mZnNldFRvcDtcblxuICAgICAgICBfdGhpczYuY3VycmVudEltYWdlLmNsYXNzTGlzdC5hZGQoJ3NsLXRyYW5zaXRpb24nKTtcblxuICAgICAgICBpZiAoIV90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkKSB7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUgPSBfdGhpczYub3B0aW9ucy5kb3VibGVUYXBab29tO1xuXG4gICAgICAgICAgX3RoaXM2LnNldFpvb21EYXRhKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlLCAwLCAwKTtcblxuICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudCgwICsgXCJweFwiLCAwICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSk7XG5cbiAgICAgICAgICBpZiAoIV90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLm9wYWNpdHkgJiYgX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnKSB7XG4gICAgICAgICAgICBfdGhpczYuZmFkZU91dChfdGhpczYuZG9tTm9kZXMuY2FwdGlvbiwgX3RoaXM2Lm9wdGlvbnMuZmFkZVNwZWVkKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnpvb21lZCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUgPSAxO1xuXG4gICAgICAgICAgX3RoaXM2LnNldFpvb21EYXRhKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlLCAwLCAwKTtcblxuICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudCgwICsgXCJweFwiLCAwICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSk7XG5cbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnpvb21lZCA9IGZhbHNlO1xuXG4gICAgICAgICAgaWYgKF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykge1xuICAgICAgICAgICAgX3RoaXM2LmZhZGVJbihfdGhpczYuZG9tTm9kZXMuY2FwdGlvbiwgX3RoaXM2Lm9wdGlvbnMuZmFkZVNwZWVkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoX3RoaXM2LmN1cnJlbnRJbWFnZSkge1xuICAgICAgICAgICAgX3RoaXM2LmN1cnJlbnRJbWFnZS5jbGFzc0xpc3QucmVtb3ZlKCdzbC10cmFuc2l0aW9uJyk7XG5cbiAgICAgICAgICAgIF90aGlzNi5jdXJyZW50SW1hZ2Uuc3R5bGVbX3RoaXM2LnRyYW5zaXRpb25QcmVmaXggKyAndHJhbnNmb3JtLW9yaWdpbiddID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDIwMCk7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY2FwdHVyZSA9IHRydWU7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXREaW1lbnNpb25zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldERpbWVuc2lvbnMoZWxlbWVudCkge1xuICAgICAgdmFyIHN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLFxuICAgICAgICAgIGhlaWdodCA9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0LFxuICAgICAgICAgIHdpZHRoID0gZWxlbWVudC5vZmZzZXRXaWR0aCxcbiAgICAgICAgICBib3JkZXJUb3BXaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGVzLmJvcmRlclRvcFdpZHRoKSxcbiAgICAgICAgICBib3JkZXJCb3R0b21XaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGVzLmJvcmRlckJvdHRvbVdpZHRoKSxcbiAgICAgICAgICBwYWRkaW5nVG9wID0gcGFyc2VGbG9hdChzdHlsZXMucGFkZGluZ1RvcCksXG4gICAgICAgICAgcGFkZGluZ0JvdHRvbSA9IHBhcnNlRmxvYXQoc3R5bGVzLnBhZGRpbmdCb3R0b20pLFxuICAgICAgICAgIGJvcmRlckxlZnRXaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGVzLmJvcmRlckxlZnRXaWR0aCksXG4gICAgICAgICAgYm9yZGVyUmlnaHRXaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGVzLmJvcmRlclJpZ2h0V2lkdGgpLFxuICAgICAgICAgIHBhZGRpbmdMZWZ0ID0gcGFyc2VGbG9hdChzdHlsZXMucGFkZGluZ0xlZnQpLFxuICAgICAgICAgIHBhZGRpbmdSaWdodCA9IHBhcnNlRmxvYXQoc3R5bGVzLnBhZGRpbmdSaWdodCk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBoZWlnaHQ6IGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoIC0gYm9yZGVyVG9wV2lkdGggLSBwYWRkaW5nVG9wIC0gcGFkZGluZ0JvdHRvbSxcbiAgICAgICAgd2lkdGg6IHdpZHRoIC0gYm9yZGVyTGVmdFdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCAtIHBhZGRpbmdMZWZ0IC0gcGFkZGluZ1JpZ2h0XG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1cGRhdGVIYXNoXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZUhhc2goKSB7XG4gICAgICB2YXIgbmV3SGFzaCA9ICdwaWQ9JyArICh0aGlzLmN1cnJlbnRJbWFnZUluZGV4ICsgMSksXG4gICAgICAgICAgbmV3VVJMID0gd2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoJyMnKVswXSArICcjJyArIG5ld0hhc2g7XG4gICAgICB0aGlzLmhhc2hSZXNldGVkID0gZmFsc2U7XG5cbiAgICAgIGlmICh0aGlzLnB1c2hTdGF0ZVN1cHBvcnQpIHtcbiAgICAgICAgd2luZG93Lmhpc3RvcnlbdGhpcy5oaXN0b3J5SGFzQ2hhbmdlcyA/ICdyZXBsYWNlU3RhdGUnIDogJ3B1c2hTdGF0ZSddKCcnLCBkb2N1bWVudC50aXRsZSwgbmV3VVJMKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHdoYXQgaXMgdGhlIGJyb3dzZXIgdGFyZ2V0IG9mIHRoaXM/XG4gICAgICAgIGlmICh0aGlzLmhpc3RvcnlIYXNDaGFuZ2VzKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UobmV3VVJMKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IG5ld0hhc2g7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLmhpc3RvcnlIYXNDaGFuZ2VzKSB7XG4gICAgICAgIHRoaXMudXJsQ2hhbmdlZE9uY2UgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmhpc3RvcnlIYXNDaGFuZ2VzID0gdHJ1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVzZXRIYXNoXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc2V0SGFzaCgpIHtcbiAgICAgIHRoaXMuaGFzaFJlc2V0ZWQgPSB0cnVlO1xuXG4gICAgICBpZiAodGhpcy51cmxDaGFuZ2VkT25jZSkge1xuICAgICAgICBoaXN0b3J5LmJhY2soKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0aGlzLnB1c2hTdGF0ZVN1cHBvcnQpIHtcbiAgICAgICAgICBoaXN0b3J5LnB1c2hTdGF0ZSgnJywgZG9jdW1lbnQudGl0bGUsIHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgICAgIH1cbiAgICAgIH0gLy9cbiAgICAgIC8vaW4gY2FzZSBhbiBoaXN0b3J5IG9wZXJhdGlvbiBpcyBzdGlsbCBwZW5kaW5nXG5cblxuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuaGlzdG9yeVVwZGF0ZVRpbWVvdXQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1cGRhdGVVUkxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlVVJMKCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuaGlzdG9yeVVwZGF0ZVRpbWVvdXQpO1xuXG4gICAgICBpZiAoIXRoaXMuaGlzdG9yeUhhc0NoYW5nZXMpIHtcbiAgICAgICAgdGhpcy51cGRhdGVIYXNoKCk7IC8vIGZpcnN0IHRpbWVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaGlzdG9yeVVwZGF0ZVRpbWVvdXQgPSBzZXRUaW1lb3V0KHRoaXMudXBkYXRlSGFzaC5iaW5kKHRoaXMpLCA4MDApO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXRDYXB0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldENhcHRpb24oY2FwdGlvblRleHQsIGltYWdlV2lkdGgpIHtcbiAgICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmNhcHRpb25zICYmIGNhcHRpb25UZXh0ICYmIGNhcHRpb25UZXh0ICE9PSAnJyAmJiB0eXBlb2YgY2FwdGlvblRleHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgdGhpcy5oaWRlKHRoaXMuZG9tTm9kZXMuY2FwdGlvbik7XG4gICAgICAgIHRoaXMuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS53aWR0aCA9IGltYWdlV2lkdGggKyAncHgnO1xuICAgICAgICB0aGlzLmRvbU5vZGVzLmNhcHRpb24uaW5uZXJIVE1MID0gY2FwdGlvblRleHQ7XG4gICAgICAgIHRoaXMuZG9tTm9kZXMuaW1hZ2UuYXBwZW5kQ2hpbGQodGhpcy5kb21Ob2Rlcy5jYXB0aW9uKTtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXM3LmZhZGVJbihfdGhpczcuZG9tTm9kZXMuY2FwdGlvbiwgX3RoaXM3Lm9wdGlvbnMuZmFkZVNwZWVkKTtcbiAgICAgICAgfSwgdGhpcy5vcHRpb25zLmNhcHRpb25EZWxheSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNsaWRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNsaWRlKHNwZWVkLCBwb3MpIHtcbiAgICAgIGlmICghdGhpcy50cmFuc2l0aW9uQ2FwYWJsZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kb21Ob2Rlcy5pbWFnZS5zdHlsZS5sZWZ0ID0gcG9zO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmRvbU5vZGVzLmltYWdlLnN0eWxlW3RoaXMudHJhbnNpdGlvblByZWZpeCArICd0cmFuc2Zvcm0nXSA9ICd0cmFuc2xhdGVYKCcgKyBwb3MgKyAnKSc7XG4gICAgICB0aGlzLmRvbU5vZGVzLmltYWdlLnN0eWxlW3RoaXMudHJhbnNpdGlvblByZWZpeCArICd0cmFuc2l0aW9uJ10gPSB0aGlzLnRyYW5zaXRpb25QcmVmaXggKyAndHJhbnNmb3JtICcgKyBzcGVlZCArICdzIGxpbmVhcic7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFJlbGF0ZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVsYXRlZChyZWwpIHtcbiAgICAgIHZhciBlbGVtcztcblxuICAgICAgaWYgKHJlbCAmJiByZWwgIT09IGZhbHNlICYmIHJlbCAhPT0gJ25vZm9sbG93Jykge1xuICAgICAgICBlbGVtcyA9IEFycmF5LmZyb20odGhpcy5lbGVtZW50cykuZmlsdGVyKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdyZWwnKSA9PT0gcmVsO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1zID0gdGhpcy5lbGVtZW50cztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGVsZW1zO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJvcGVuSW1hZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlbkltYWdlKGVsZW1lbnQpIHtcbiAgICAgIHZhciBfdGhpczggPSB0aGlzO1xuXG4gICAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdzaG93LicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKSk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuZGlzYWJsZVNjcm9sbCkge1xuICAgICAgICB0aGlzLmdsb2JhbFNjcm9sbGJhcldpZHRoID0gdGhpcy50b2dnbGVTY3JvbGxiYXIoJ2hpZGUnKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5odG1sQ2xhc3MgJiYgdGhpcy5vcHRpb25zLmh0bWxDbGFzcyAhPT0gJycpIHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaHRtbCcpLmNsYXNzTGlzdC5hZGQodGhpcy5vcHRpb25zLmh0bWxDbGFzcyk7XG4gICAgICB9XG5cbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5kb21Ob2Rlcy53cmFwcGVyKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5hcHBlbmRDaGlsZCh0aGlzLmRvbU5vZGVzLmltYWdlKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5vdmVybGF5KSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5kb21Ob2Rlcy5vdmVybGF5KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZWxhdGVkRWxlbWVudHMgPSB0aGlzLmdldFJlbGF0ZWQoZWxlbWVudC5yZWwpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnNob3dDb3VudGVyKSB7XG4gICAgICAgIGlmICh0aGlzLnJlbGF0ZWRFbGVtZW50cy5sZW5ndGggPT0gMSAmJiB0aGlzLmRvbU5vZGVzLndyYXBwZXIuY29udGFpbnModGhpcy5kb21Ob2Rlcy5jb3VudGVyKSkge1xuICAgICAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5yZW1vdmVDaGlsZCh0aGlzLmRvbU5vZGVzLmNvdW50ZXIpO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCA+IDEgJiYgIXRoaXMuZG9tTm9kZXMud3JhcHBlci5jb250YWlucyh0aGlzLmRvbU5vZGVzLmNvdW50ZXIpKSB7XG4gICAgICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLmFwcGVuZENoaWxkKHRoaXMuZG9tTm9kZXMuY291bnRlcik7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5pc0FuaW1hdGluZyA9IHRydWU7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZUluZGV4ID0gdGhpcy5yZWxhdGVkRWxlbWVudHMuaW5kZXhPZihlbGVtZW50KTtcbiAgICAgIHZhciB0YXJnZXRVUkwgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSh0aGlzLm9wdGlvbnMuc291cmNlQXR0cik7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIHRoaXMuY3VycmVudEltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgdGFyZ2V0VVJMKTtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlLmRhdGFzZXQuc2NhbGUgPSAxO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVYID0gMDtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlLmRhdGFzZXQudHJhbnNsYXRlWSA9IDA7XG5cbiAgICAgIGlmICh0aGlzLmxvYWRlZEltYWdlcy5pbmRleE9mKHRhcmdldFVSTCkgPT09IC0xKSB7XG4gICAgICAgIHRoaXMubG9hZGVkSW1hZ2VzLnB1c2godGFyZ2V0VVJMKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5kb21Ob2Rlcy5pbWFnZS5pbm5lckhUTUwgPSAnJztcbiAgICAgIHRoaXMuZG9tTm9kZXMuaW1hZ2Uuc2V0QXR0cmlidXRlKCdzdHlsZScsICcnKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuaW1hZ2UuYXBwZW5kQ2hpbGQodGhpcy5jdXJyZW50SW1hZ2UpO1xuICAgICAgdGhpcy5mYWRlSW4odGhpcy5kb21Ob2Rlcy5vdmVybGF5LCB0aGlzLm9wdGlvbnMuZmFkZVNwZWVkKTtcbiAgICAgIHRoaXMuZmFkZUluKFt0aGlzLmRvbU5vZGVzLmNvdW50ZXIsIHRoaXMuZG9tTm9kZXMubmF2aWdhdGlvbiwgdGhpcy5kb21Ob2Rlcy5jbG9zZUJ1dHRvbl0sIHRoaXMub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgdGhpcy5zaG93KHRoaXMuZG9tTm9kZXMuc3Bpbm5lcik7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNvdW50ZXIucXVlcnlTZWxlY3RvcignLnNsLWN1cnJlbnQnKS5pbm5lckhUTUwgPSB0aGlzLmN1cnJlbnRJbWFnZUluZGV4ICsgMTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuY291bnRlci5xdWVyeVNlbGVjdG9yKCcuc2wtdG90YWwnKS5pbm5lckhUTUwgPSB0aGlzLnJlbGF0ZWRFbGVtZW50cy5sZW5ndGg7XG4gICAgICB0aGlzLmFkanVzdEltYWdlKCk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMucHJlbG9hZGluZykge1xuICAgICAgICB0aGlzLnByZWxvYWQoKTtcbiAgICAgIH1cblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3Nob3duLicgKyBfdGhpczguZXZlbnROYW1lc3BhY2UpKTtcbiAgICAgIH0sIHRoaXMub3B0aW9ucy5hbmltYXRpb25TcGVlZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcmNlRm9jdXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yY2VGb2N1cygpIHtcbiAgICAgIHZhciBfdGhpczkgPSB0aGlzO1xuXG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZG9jdW1lbnQsICdmb2N1c2luLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihkb2N1bWVudCwgJ2ZvY3VzaW4uJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoZG9jdW1lbnQgIT09IGV2ZW50LnRhcmdldCAmJiBfdGhpczkuZG9tTm9kZXMud3JhcHBlciAhPT0gZXZlbnQudGFyZ2V0ICYmICFfdGhpczkuZG9tTm9kZXMud3JhcHBlci5jb250YWlucyhldmVudC50YXJnZXQpKSB7XG4gICAgICAgICAgX3RoaXM5LmRvbU5vZGVzLndyYXBwZXIuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSAvLyB1dGlsaXR5XG5cbiAgfSwge1xuICAgIGtleTogXCJhZGRFdmVudExpc3RlbmVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIoZWxlbWVudHMsIGV2ZW50cywgY2FsbGJhY2ssIG9wdHMpIHtcbiAgICAgIGVsZW1lbnRzID0gdGhpcy53cmFwKGVsZW1lbnRzKTtcbiAgICAgIGV2ZW50cyA9IHRoaXMud3JhcChldmVudHMpO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgIF9zdGVwO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0gX3N0ZXAudmFsdWU7XG5cbiAgICAgICAgICBpZiAoIWVsZW1lbnQubmFtZXNwYWNlcykge1xuICAgICAgICAgICAgZWxlbWVudC5uYW1lc3BhY2VzID0ge307XG4gICAgICAgICAgfSAvLyBzYXZlIHRoZSBuYW1lc3BhY2VzIGFkZEV2ZW50TGlzdGVuZXIgdGhlIERPTSBlbGVtZW50IGl0c2VsZlxuXG5cbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGV2ZW50cyksXG4gICAgICAgICAgICAgIF9zdGVwMjtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykge1xuICAgICAgICAgICAgICB2YXIgZXZlbnQgPSBfc3RlcDIudmFsdWU7XG4gICAgICAgICAgICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCBmYWxzZTtcbiAgICAgICAgICAgICAgdmFyIG5lZWRzUGFzc2l2ZUZpeCA9IFsndG91Y2hzdGFydCcsICd0b3VjaG1vdmUnXS5pbmRleE9mKGV2ZW50LnNwbGl0KCcuJylbMF0pID49IDA7XG5cbiAgICAgICAgICAgICAgaWYgKG5lZWRzUGFzc2l2ZUZpeCAmJiB0aGlzLmlzUGFzc2l2ZUV2ZW50c1N1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgIGlmIChfdHlwZW9mKG9wdGlvbnMpID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgb3B0aW9ucy5wYXNzaXZlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgcGFzc2l2ZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBlbGVtZW50Lm5hbWVzcGFjZXNbZXZlbnRdID0gY2FsbGJhY2s7XG4gICAgICAgICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudC5zcGxpdCgnLicpWzBdLCBjYWxsYmFjaywgb3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTtcbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgX2l0ZXJhdG9yMi5mKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIF9pdGVyYXRvci5mKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZUV2ZW50TGlzdGVuZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihlbGVtZW50cywgZXZlbnRzKSB7XG4gICAgICBlbGVtZW50cyA9IHRoaXMud3JhcChlbGVtZW50cyk7XG4gICAgICBldmVudHMgPSB0aGlzLndyYXAoZXZlbnRzKTtcblxuICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlbGVtZW50cyksXG4gICAgICAgICAgX3N0ZXAzO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKF9pdGVyYXRvcjMucygpOyAhKF9zdGVwMyA9IF9pdGVyYXRvcjMubigpKS5kb25lOykge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0gX3N0ZXAzLnZhbHVlO1xuXG4gICAgICAgICAgdmFyIF9pdGVyYXRvcjQgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihldmVudHMpLFxuICAgICAgICAgICAgICBfc3RlcDQ7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yIChfaXRlcmF0b3I0LnMoKTsgIShfc3RlcDQgPSBfaXRlcmF0b3I0Lm4oKSkuZG9uZTspIHtcbiAgICAgICAgICAgICAgdmFyIGV2ZW50ID0gX3N0ZXA0LnZhbHVlO1xuXG4gICAgICAgICAgICAgIGlmIChlbGVtZW50Lm5hbWVzcGFjZXMgJiYgZWxlbWVudC5uYW1lc3BhY2VzW2V2ZW50XSkge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudC5zcGxpdCgnLicpWzBdLCBlbGVtZW50Lm5hbWVzcGFjZXNbZXZlbnRdKTtcbiAgICAgICAgICAgICAgICBkZWxldGUgZWxlbWVudC5uYW1lc3BhY2VzW2V2ZW50XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yNC5lKGVycik7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjQuZigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9pdGVyYXRvcjMuZShlcnIpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgX2l0ZXJhdG9yMy5mKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZhZGVPdXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZmFkZU91dChlbGVtZW50cywgZHVyYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7XG5cbiAgICAgIGVsZW1lbnRzID0gdGhpcy53cmFwKGVsZW1lbnRzKTtcblxuICAgICAgdmFyIF9pdGVyYXRvcjUgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlbGVtZW50cyksXG4gICAgICAgICAgX3N0ZXA1O1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKF9pdGVyYXRvcjUucygpOyAhKF9zdGVwNSA9IF9pdGVyYXRvcjUubigpKS5kb25lOykge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0gX3N0ZXA1LnZhbHVlO1xuICAgICAgICAgIGVsZW1lbnQuc3R5bGUub3BhY2l0eSA9IDE7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfaXRlcmF0b3I1LmUoZXJyKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIF9pdGVyYXRvcjUuZigpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmlzRmFkZUluID0gZmFsc2U7XG5cbiAgICAgIHZhciBzdGVwID0gMTYuNjY2NjYgLyAoZHVyYXRpb24gfHwgdGhpcy5vcHRpb25zLmZhZGVTcGVlZCksXG4gICAgICAgICAgZmFkZSA9IGZ1bmN0aW9uIGZhZGUoKSB7XG4gICAgICAgIHZhciBjdXJyZW50T3BhY2l0eSA9IHBhcnNlRmxvYXQoZWxlbWVudHNbMF0uc3R5bGUub3BhY2l0eSk7XG5cbiAgICAgICAgaWYgKChjdXJyZW50T3BhY2l0eSAtPSBzdGVwKSA8IDApIHtcbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yNiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVsZW1lbnRzKSxcbiAgICAgICAgICAgICAgX3N0ZXA2O1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yNi5zKCk7ICEoX3N0ZXA2ID0gX2l0ZXJhdG9yNi5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gX3N0ZXA2LnZhbHVlO1xuICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjsgLy8gZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gJyc7XG5cbiAgICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjYuZShlcnIpO1xuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBfaXRlcmF0b3I2LmYoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjay5jYWxsKF90aGlzMTAsIGVsZW1lbnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yNyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVsZW1lbnRzKSxcbiAgICAgICAgICAgICAgX3N0ZXA3O1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yNy5zKCk7ICEoX3N0ZXA3ID0gX2l0ZXJhdG9yNy5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgIHZhciBfZWxlbWVudCA9IF9zdGVwNy52YWx1ZTtcbiAgICAgICAgICAgICAgX2VsZW1lbnQuc3R5bGUub3BhY2l0eSA9IGN1cnJlbnRPcGFjaXR5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yNy5lKGVycik7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjcuZigpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmYWRlKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgZmFkZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmYWRlSW5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZmFkZUluKGVsZW1lbnRzLCBkdXJhdGlvbiwgY2FsbGJhY2ssIGRpc3BsYXkpIHtcbiAgICAgIHZhciBfdGhpczExID0gdGhpcztcblxuICAgICAgZWxlbWVudHMgPSB0aGlzLndyYXAoZWxlbWVudHMpO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yOCA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVsZW1lbnRzKSxcbiAgICAgICAgICBfc3RlcDg7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yOC5zKCk7ICEoX3N0ZXA4ID0gX2l0ZXJhdG9yOC5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDgudmFsdWU7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gMDtcbiAgICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBkaXNwbGF5IHx8IFwiYmxvY2tcIjtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9pdGVyYXRvcjguZShlcnIpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgX2l0ZXJhdG9yOC5mKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXNGYWRlSW4gPSB0cnVlO1xuXG4gICAgICB2YXIgb3BhY2l0eVRhcmdldCA9IHBhcnNlRmxvYXQoZWxlbWVudHNbMF0uZGF0YXNldC5vcGFjaXR5VGFyZ2V0IHx8IDEpLFxuICAgICAgICAgIHN0ZXAgPSAxNi42NjY2NiAqIG9wYWNpdHlUYXJnZXQgLyAoZHVyYXRpb24gfHwgdGhpcy5vcHRpb25zLmZhZGVTcGVlZCksXG4gICAgICAgICAgZmFkZSA9IGZ1bmN0aW9uIGZhZGUoKSB7XG4gICAgICAgIHZhciBjdXJyZW50T3BhY2l0eSA9IHBhcnNlRmxvYXQoZWxlbWVudHNbMF0uc3R5bGUub3BhY2l0eSk7XG5cbiAgICAgICAgaWYgKCEoKGN1cnJlbnRPcGFjaXR5ICs9IHN0ZXApID4gb3BhY2l0eVRhcmdldCkpIHtcbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yOSA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVsZW1lbnRzKSxcbiAgICAgICAgICAgICAgX3N0ZXA5O1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yOS5zKCk7ICEoX3N0ZXA5ID0gX2l0ZXJhdG9yOS5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gX3N0ZXA5LnZhbHVlO1xuICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLm9wYWNpdHkgPSBjdXJyZW50T3BhY2l0eTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjkuZShlcnIpO1xuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBfaXRlcmF0b3I5LmYoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIV90aGlzMTEuaXNGYWRlSW4pIHJldHVybjtcbiAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZmFkZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIF9pdGVyYXRvcjEwID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgICAgICBfc3RlcDEwO1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMTAucygpOyAhKF9zdGVwMTAgPSBfaXRlcmF0b3IxMC5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgIHZhciBfZWxlbWVudDIgPSBfc3RlcDEwLnZhbHVlO1xuICAgICAgICAgICAgICBfZWxlbWVudDIuc3R5bGUub3BhY2l0eSA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yMTAuZShlcnIpO1xuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IxMC5mKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2suY2FsbChfdGhpczExLCBlbGVtZW50cyk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGZhZGUoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGlkZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoaWRlKGVsZW1lbnRzKSB7XG4gICAgICBlbGVtZW50cyA9IHRoaXMud3JhcChlbGVtZW50cyk7XG5cbiAgICAgIHZhciBfaXRlcmF0b3IxMSA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVsZW1lbnRzKSxcbiAgICAgICAgICBfc3RlcDExO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKF9pdGVyYXRvcjExLnMoKTsgIShfc3RlcDExID0gX2l0ZXJhdG9yMTEubigpKS5kb25lOykge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0gX3N0ZXAxMS52YWx1ZTtcblxuICAgICAgICAgIGlmIChlbGVtZW50LnN0eWxlLmRpc3BsYXkgIT0gJ25vbmUnKSB7XG4gICAgICAgICAgICBlbGVtZW50LmRhdGFzZXQuaW5pdGlhbERpc3BsYXkgPSBlbGVtZW50LnN0eWxlLmRpc3BsYXk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2l0ZXJhdG9yMTEuZShlcnIpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgX2l0ZXJhdG9yMTEuZigpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzaG93XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNob3coZWxlbWVudHMsIGRpc3BsYXkpIHtcbiAgICAgIGVsZW1lbnRzID0gdGhpcy53cmFwKGVsZW1lbnRzKTtcblxuICAgICAgdmFyIF9pdGVyYXRvcjEyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgIF9zdGVwMTI7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yMTIucygpOyAhKF9zdGVwMTIgPSBfaXRlcmF0b3IxMi5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDEyLnZhbHVlO1xuICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IGVsZW1lbnQuZGF0YXNldC5pbml0aWFsRGlzcGxheSB8fCBkaXNwbGF5IHx8ICdibG9jayc7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfaXRlcmF0b3IxMi5lKGVycik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBfaXRlcmF0b3IxMi5mKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIndyYXBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gd3JhcChpbnB1dCkge1xuICAgICAgcmV0dXJuIHR5cGVvZiBpbnB1dFtTeW1ib2wuaXRlcmF0b3JdID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycgPyBpbnB1dCA6IFtpbnB1dF07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uKGV2ZW50cywgY2FsbGJhY2spIHtcbiAgICAgIGV2ZW50cyA9IHRoaXMud3JhcChldmVudHMpO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yMTMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmVsZW1lbnRzKSxcbiAgICAgICAgICBfc3RlcDEzO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKF9pdGVyYXRvcjEzLnMoKTsgIShfc3RlcDEzID0gX2l0ZXJhdG9yMTMubigpKS5kb25lOykge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0gX3N0ZXAxMy52YWx1ZTtcblxuICAgICAgICAgIGlmICghZWxlbWVudC5mdWxseU5hbWVzcGFjZWRFdmVudHMpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuZnVsbHlOYW1lc3BhY2VkRXZlbnRzID0ge307XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIF9pdGVyYXRvcjE0ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZXZlbnRzKSxcbiAgICAgICAgICAgICAgX3N0ZXAxNDtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjE0LnMoKTsgIShfc3RlcDE0ID0gX2l0ZXJhdG9yMTQubigpKS5kb25lOykge1xuICAgICAgICAgICAgICB2YXIgZXZlbnQgPSBfc3RlcDE0LnZhbHVlO1xuICAgICAgICAgICAgICBlbGVtZW50LmZ1bGx5TmFtZXNwYWNlZEV2ZW50c1tldmVudF0gPSBjYWxsYmFjaztcbiAgICAgICAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IxNC5lKGVycik7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjE0LmYoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfaXRlcmF0b3IxMy5lKGVycik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBfaXRlcmF0b3IxMy5mKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJvZmZcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb2ZmKGV2ZW50cykge1xuICAgICAgZXZlbnRzID0gdGhpcy53cmFwKGV2ZW50cyk7XG5cbiAgICAgIHZhciBfaXRlcmF0b3IxNSA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuZWxlbWVudHMpLFxuICAgICAgICAgIF9zdGVwMTU7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yMTUucygpOyAhKF9zdGVwMTUgPSBfaXRlcmF0b3IxNS5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDE1LnZhbHVlO1xuXG4gICAgICAgICAgdmFyIF9pdGVyYXRvcjE2ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZXZlbnRzKSxcbiAgICAgICAgICAgICAgX3N0ZXAxNjtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjE2LnMoKTsgIShfc3RlcDE2ID0gX2l0ZXJhdG9yMTYubigpKS5kb25lOykge1xuICAgICAgICAgICAgICB2YXIgZXZlbnQgPSBfc3RlcDE2LnZhbHVlO1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgZWxlbWVudC5mdWxseU5hbWVzcGFjZWRFdmVudHMgIT09ICd1bmRlZmluZWQnICYmIGV2ZW50IGluIGVsZW1lbnQuZnVsbHlOYW1lc3BhY2VkRXZlbnRzKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBlbGVtZW50LmZ1bGx5TmFtZXNwYWNlZEV2ZW50c1tldmVudF0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IxNi5lKGVycik7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjE2LmYoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfaXRlcmF0b3IxNS5lKGVycik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBfaXRlcmF0b3IxNS5mKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0gLy8gYXBpXG5cbiAgfSwge1xuICAgIGtleTogXCJvcGVuXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wZW4oZWxlbSkge1xuICAgICAgZWxlbSA9IGVsZW0gfHwgdGhpcy5lbGVtZW50c1swXTtcblxuICAgICAgaWYgKHR5cGVvZiBqUXVlcnkgIT09IFwidW5kZWZpbmVkXCIgJiYgZWxlbSBpbnN0YW5jZW9mIGpRdWVyeSkge1xuICAgICAgICBlbGVtID0gZWxlbS5nZXQoMCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaW5pdGlhbEltYWdlSW5kZXggPSB0aGlzLmVsZW1lbnRzLmluZGV4T2YoZWxlbSk7XG5cbiAgICAgIGlmICh0aGlzLmluaXRpYWxJbWFnZUluZGV4ID4gLTEpIHtcbiAgICAgICAgdGhpcy5vcGVuSW1hZ2UoZWxlbSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm5leHRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgIHRoaXMubG9hZEltYWdlKDEpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJwcmV2XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByZXYoKSB7XG4gICAgICB0aGlzLmxvYWRJbWFnZSgtMSk7XG4gICAgfSAvLyBnZXQgc29tZSB1c2VmdWwgZGF0YVxuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0TGlnaGJveERhdGFcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TGlnaGJveERhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjdXJyZW50SW1hZ2VJbmRleDogdGhpcy5jdXJyZW50SW1hZ2VJbmRleCxcbiAgICAgICAgY3VycmVudEltYWdlOiB0aGlzLmN1cnJlbnRJbWFnZSxcbiAgICAgICAgZ2xvYmFsU2Nyb2xsYmFyV2lkdGg6IHRoaXMuZ2xvYmFsU2Nyb2xsYmFyV2lkdGhcbiAgICAgIH07XG4gICAgfSAvL2Nsb3NlIGlzIGV4cG9zZWQgYW55d2F5cy4uXG5cbiAgfSwge1xuICAgIGtleTogXCJkZXN0cm95XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICAvL3JlbW92ZSBhbGwgY3VzdG9tIGV2ZW50IGxpc3RlbmVycyBmcm9tIGVsZW1lbnRzXG4gICAgICB0aGlzLm9mZihbJ2Nsb3NlLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnY2xvc2VkLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnbmV4dEltYWdlTG9hZGVkLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAncHJldkltYWdlTG9hZGVkLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnY2hhbmdlLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnbmV4dERvbmUuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdwcmV2RG9uZS4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ2Vycm9yLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnY2hhbmdlZC4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ25leHQuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdwcmV2LicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnc2hvdy4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ3Nob3duLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlXSk7XG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIodGhpcy5lbGVtZW50cywgJ2NsaWNrLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihkb2N1bWVudCwgJ2ZvY3VzaW4uJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKGRvY3VtZW50LmJvZHksICdjb250ZXh0bWVudS4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSk7XG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZG9jdW1lbnQuYm9keSwgJ2tleXVwLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih0aGlzLmRvbU5vZGVzLm5hdmlnYXRpb24uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2J1dHRvbicpLCAnY2xpY2suJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHRoaXMuZG9tTm9kZXMuY2xvc2VCdXR0b24sICdjbGljay4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSk7XG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCAncmVzaXplLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csICdoYXNoY2hhbmdlLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcblxuICAgICAgaWYgKHRoaXMuaXNPcGVuKSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGhpcy5kb21Ob2Rlcy53cmFwcGVyKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmRvbU5vZGVzLm92ZXJsYXkpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmVsZW1lbnRzID0gbnVsbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVmcmVzaFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWZyZXNoKCkge1xuICAgICAgaWYgKCF0aGlzLmluaXRpYWxTZWxlY3Rvcikge1xuICAgICAgICB0aHJvdyAncmVmcmVzaGluZyBvbmx5IHdvcmtzIHdoZW4geW91IGluaXRpYWxpemUgdXNpbmcgYSBzZWxlY3RvciEnO1xuICAgICAgfVxuXG4gICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucyxcbiAgICAgICAgICBzZWxlY3RvciA9IHRoaXMuaW5pdGlhbFNlbGVjdG9yO1xuICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICB0aGlzLmNvbnN0cnVjdG9yKHNlbGVjdG9yLCBvcHRpb25zKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTaW1wbGVMaWdodGJveDtcbn0oKTtcblxudmFyIF9kZWZhdWx0ID0gU2ltcGxlTGlnaHRib3g7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0O1xuZ2xvYmFsLlNpbXBsZUxpZ2h0Ym94ID0gU2ltcGxlTGlnaHRib3g7IiwiaW1wb3J0IFNpbXBsZUxpZ2h0Ym94IGZyb20gXCJzaW1wbGVsaWdodGJveFwiO1xyXG5cclxubmV3IFNpbXBsZUxpZ2h0Ym94KCcuZ2FsbGVyeV9fZmFuY3lib3gnLCB7IC8qIG9wdGlvbnMgKi8gfSk7XHJcbiIsIi8qKlxuICogU3RpY2t5IFNpZGViYXIgdjIgSmF2YVNjcmlwdCBQbHVnaW4uXG4gKiBAdmVyc2lvbiAxLjAuMVxuICogQGF1dGhvciDDmHlzdGVpbiBCbGl4aGF2biA8b3lzdGVpbkBibGl4aGF2bi5ubz5cbiAqIEBsaWNlbnNlIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuICovXG5jb25zdCBTdGlja3lTaWRlYmFyID0gKCgpID0+IHtcblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vICMgRGVmaW5lIENvbnN0YW50c1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgY29uc3QgRVZFTlRfS0VZID0gJy5zdGlja3lTaWRlYmFyJztcbiAgICBjb25zdCBWRVJTSU9OICAgPSAnMS4wLjEnO1xuXG4gICAgY29uc3QgREVGQVVMVFMgPSB7XG4gICAgICAvKipcbiAgICAgICAqIEFkZGl0aW9uYWwgdG9wIHNwYWNpbmcgb2YgdGhlIGVsZW1lbnQgd2hlbiBpdCBiZWNvbWVzIHN0aWNreS5cbiAgICAgICAqIEB0eXBlIHtOdW1lcmljfEZ1bmN0aW9ufVxuICAgICAgICovXG4gICAgICB0b3BTcGFjaW5nOiAwLFxuXG4gICAgICAvKipcbiAgICAgICAqIEFkZGl0aW9uYWwgYm90dG9tIHNwYWNpbmcgb2YgdGhlIGVsZW1lbnQgd2hlbiBpdCBiZWNvbWVzIHN0aWNreS5cbiAgICAgICAqIEB0eXBlIHtOdW1lcmljfEZ1bmN0aW9ufVxuICAgICAgICovXG4gICAgICBib3R0b21TcGFjaW5nOiAwLFxuXG4gICAgICAvKipcbiAgICAgICAqIENvbnRhaW5lciBzaWRlYmFyIHNlbGVjdG9yIHRvIGtub3cgd2hhdCB0aGUgYmVnaW5uaW5nIGFuZCBlbmQgb2Ygc3RpY2t5IGVsZW1lbnQuXG4gICAgICAgKiBAdHlwZSB7U3RyaW5nfEZhbHNlfVxuICAgICAgICovXG4gICAgICBjb250YWluZXJTZWxlY3RvcjogZmFsc2UsXG5cbiAgICAgIC8qKlxuICAgICAgICogUGFyZW50IGVsZW1lbnQgd2hlcmUgdGhlIHNjcm9sbGluZyBoYXBwZW5zLlxuICAgICAgICovXG4gICAgICBzY3JvbGxDb250YWluZXI6IGZhbHNlLFxuXG4gICAgICAvKipcbiAgICAgICAqIElubmVyIHdyYXBwZXIgc2VsZWN0b3IuXG4gICAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAgICovXG4gICAgICBpbm5lcldyYXBwZXJTZWxlY3RvcjogJy5pbm5lci13cmFwcGVyLXN0aWNreScsXG5cbiAgICAgIC8qKlxuICAgICAgICogVGhlIG5hbWUgb2YgQ1NTIGNsYXNzIHRvIGFwcGx5IHRvIGVsZW1lbnRzIHdoZW4gdGhleSBoYXZlIGJlY29tZSBzdHVjay5cbiAgICAgICAqIEB0eXBlIHtTdHJpbmd8RmFsc2V9XG4gICAgICAgKi9cbiAgICAgIHN0aWNreUNsYXNzOiAnaXMtYWZmaXhlZCcsXG5cbiAgICAgIC8qKlxuICAgICAgICogVGhlIHNpZGViYXIgcmV0dXJucyB0byBpdHMgbm9ybWFsIHBvc2l0aW9uIGlmIGl0cyB3aWR0aCBiZWxvdyB0aGlzIHZhbHVlLlxuICAgICAgICogQHR5cGUge051bWVyaWN9XG4gICAgICAgKi9cbiAgICAgIG1pbldpZHRoOiBmYWxzZVxuICAgIH07XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyAjIENsYXNzIERlZmluaXRpb25cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvL1xuICAgIC8qKlxuICAgICAqIFN0aWNreSBTaWRlYmFyIENsYXNzLlxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBjbGFzcyBTdGlja3lTaWRlYmFye1xuXG4gICAgICAvKipcbiAgICAgICAqIFN0aWNreSBTaWRlYmFyIENvbnN0cnVjdG9yLlxuICAgICAgICogQGNvbnN0cnVjdG9yXG4gICAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fFN0cmluZ30gc2lkZWJhciAtIFRoZSBzaWRlYmFyIGVsZW1lbnQgb3Igc2lkZWJhciBzZWxlY3Rvci5cbiAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgb2Ygc3RpY2t5IHNpZGViYXIuXG4gICAgICAgKi9cbiAgICAgIGNvbnN0cnVjdG9yKHNpZGViYXIsIG9wdGlvbnMgPSB7fSl7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IFN0aWNreVNpZGViYXIuZXh0ZW5kKERFRkFVTFRTLCBvcHRpb25zKTtcblxuICAgICAgICAvLyBTaWRlYmFyIGVsZW1lbnQgcXVlcnkgaWYgdGhlcmUncyBubyBvbmUsIHRocm93IGVycm9yLlxuICAgICAgICB0aGlzLnNpZGViYXIgPSAoJ3N0cmluZycgPT09IHR5cGVvZiBzaWRlYmFyICkgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNpZGViYXIpIDogc2lkZWJhcjtcbiAgICAgICAgaWYoICd1bmRlZmluZWQnID09PSB0eXBlb2YgdGhpcy5zaWRlYmFyIClcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGVyZSBpcyBubyBzcGVjaWZpYyBzaWRlYmFyIGVsZW1lbnQuXCIpO1xuXG4gICAgICAgIHRoaXMuc2lkZWJhcklubmVyID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gdGhpcy5zaWRlYmFyLnBhcmVudEVsZW1lbnQ7XG5cbiAgICAgICAgLy8gQ3VycmVudCBBZmZpeCBUeXBlIG9mIHNpZGViYXIgZWxlbWVudC5cbiAgICAgICAgdGhpcy5hZmZpeGVkVHlwZSA9ICdTVEFUSUMnO1xuICAgICAgICB0aGlzLmRpcmVjdGlvbiA9ICdkb3duJztcbiAgICAgICAgdGhpcy5zdXBwb3J0ID0ge1xuICAgICAgICAgIHRyYW5zZm9ybTogICBmYWxzZSxcbiAgICAgICAgICB0cmFuc2Zvcm0zZDogZmFsc2VcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yZVN0eWxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2JyZWFrcG9pbnQgPSBmYWxzZTtcblxuICAgICAgICAvLyBEaW1lbnNpb25zIG9mIHNpZGViYXIsIGNvbnRhaW5lciBhbmQgc2NyZWVuIHZpZXdwb3J0LlxuICAgICAgICB0aGlzLmRpbWVuc2lvbnMgPSB7XG4gICAgICAgICAgdHJhbnNsYXRlWTogMCxcbiAgICAgICAgICBtYXhUcmFuc2xhdGVZOiAwLFxuICAgICAgICAgIHRvcFNwYWNpbmc6IDAsXG4gICAgICAgICAgbGFzdFRvcFNwYWNpbmc6IDAsXG4gICAgICAgICAgYm90dG9tU3BhY2luZzogMCxcbiAgICAgICAgICBsYXN0Qm90dG9tU3BhY2luZzogMCxcbiAgICAgICAgICBzaWRlYmFySGVpZ2h0OiAwLFxuICAgICAgICAgIHNpZGViYXJXaWR0aDogMCxcbiAgICAgICAgICBjb250YWluZXJUb3A6IDAsXG4gICAgICAgICAgY29udGFpbmVySGVpZ2h0OiAwLFxuICAgICAgICAgIHZpZXdwb3J0SGVpZ2h0OiAwLFxuICAgICAgICAgIHZpZXdwb3J0VG9wOiAwLFxuICAgICAgICAgIGxhc3RWaWV3cG9ydFRvcDogMCxcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBCaW5kIGV2ZW50IGhhbmRsZXJzIGZvciByZWZlcmVuY2FiaWxpdHkuXG4gICAgICAgIFsnaGFuZGxlRXZlbnQnXS5mb3JFYWNoKCAobWV0aG9kKSA9PiB7XG4gICAgICAgICAgdGhpc1ttZXRob2RdID0gdGhpc1ttZXRob2RdLmJpbmQodGhpcyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEluaXRpYWxpemUgc3RpY2t5IHNpZGViYXIgZm9yIGZpcnN0IHRpbWUuXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZSgpO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEluaXRpYWxpemVzIHRoZSBzdGlja3kgc2lkZWJhciBieSBhZGRpbmcgaW5uZXIgd3JhcHBlciwgZGVmaW5lIGl0cyBjb250YWluZXIsXG4gICAgICAgKiBtaW4td2lkdGggYnJlYWtwb2ludCwgY2FsY3VsYXRpbmcgZGltZW5zaW9ucywgYWRkaW5nIGhlbHBlciBjbGFzc2VzIGFuZCBpbmxpbmUgc3R5bGUuXG4gICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICovXG4gICAgICBpbml0aWFsaXplKCl7XG4gICAgICAgIHRoaXMuX3NldFN1cHBvcnRGZWF0dXJlcygpO1xuXG4gICAgICAgIC8vIEdldCBzdGlja3kgc2lkZWJhciBpbm5lciB3cmFwcGVyLCBpZiBub3QgZm91bmQsIHdpbGwgY3JlYXRlIG9uZS5cbiAgICAgICAgaWYoIHRoaXMub3B0aW9ucy5pbm5lcldyYXBwZXJTZWxlY3RvciApe1xuICAgICAgICAgIHRoaXMuc2lkZWJhcklubmVyID0gdGhpcy5zaWRlYmFyLnF1ZXJ5U2VsZWN0b3IodGhpcy5vcHRpb25zLmlubmVyV3JhcHBlclNlbGVjdG9yKTtcblxuICAgICAgICAgIGlmKCBudWxsID09PSB0aGlzLnNpZGViYXJJbm5lciApXG4gICAgICAgICAgICB0aGlzLnNpZGViYXJJbm5lciA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYoICEgdGhpcy5zaWRlYmFySW5uZXIgKXtcbiAgICAgICAgICBsZXQgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgIHdyYXBwZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsICdpbm5lci13cmFwcGVyLXN0aWNreScpO1xuICAgICAgICAgIHRoaXMuc2lkZWJhci5hcHBlbmRDaGlsZCh3cmFwcGVyKTtcblxuICAgICAgICAgIHdoaWxlKCB0aGlzLnNpZGViYXIuZmlyc3RDaGlsZCAhPSB3cmFwcGVyIClcbiAgICAgICAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQodGhpcy5zaWRlYmFyLmZpcnN0Q2hpbGQpO1xuXG4gICAgICAgICAgdGhpcy5zaWRlYmFySW5uZXIgPSB0aGlzLnNpZGViYXIucXVlcnlTZWxlY3RvcignLmlubmVyLXdyYXBwZXItc3RpY2t5Jyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDb250YWluZXIgd3JhcHBlciBvZiB0aGUgc2lkZWJhci5cbiAgICAgICAgaWYoIHRoaXMub3B0aW9ucy5jb250YWluZXJTZWxlY3RvciApe1xuICAgICAgICAgIGxldCBjb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLm9wdGlvbnMuY29udGFpbmVyU2VsZWN0b3IpO1xuICAgICAgICAgIGNvbnRhaW5lcnMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChjb250YWluZXJzKTtcblxuICAgICAgICAgIGNvbnRhaW5lcnMuZm9yRWFjaCgoY29udGFpbmVyLCBpdGVtKSA9PiB7XG4gICAgICAgICAgICBpZiggISBjb250YWluZXIuY29udGFpbnModGhpcy5zaWRlYmFyKSApIHJldHVybjtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgaWYoICEgY29udGFpbmVycy5sZW5ndGggKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIGNvbnRhaW5lciBkb2VzIG5vdCBjb250YWlucyBvbiB0aGUgc2lkZWJhci5cIik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBHZXQgc2Nyb2xsIGNvbnRhaW5lciwgaWYgcHJvdmlkZWRcbiAgICAgICAgdGhpcy5zY3JvbGxDb250YWluZXIgPSB0aGlzLm9wdGlvbnMuc2Nyb2xsQ29udGFpbmVyID8gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLm9wdGlvbnMuc2Nyb2xsQ29udGFpbmVyKSA6IHVuZGVmaW5lZDtcblxuICAgICAgICAvLyBJZiB0b3AvYm90dG9tIHNwYWNpbmcgaXMgbm90IGZ1bmN0aW9uIHBhcnNlIHZhbHVlIHRvIGludGVnZXIuXG4gICAgICAgIGlmKCAnZnVuY3Rpb24nICE9PSB0eXBlb2YgdGhpcy5vcHRpb25zLnRvcFNwYWNpbmcgKVxuICAgICAgICAgIHRoaXMub3B0aW9ucy50b3BTcGFjaW5nID0gcGFyc2VJbnQodGhpcy5vcHRpb25zLnRvcFNwYWNpbmcpIHx8IDA7XG5cbiAgICAgICAgaWYoICdmdW5jdGlvbicgIT09IHR5cGVvZiB0aGlzLm9wdGlvbnMuYm90dG9tU3BhY2luZyApXG4gICAgICAgICAgdGhpcy5vcHRpb25zLmJvdHRvbVNwYWNpbmcgPSBwYXJzZUludCh0aGlzLm9wdGlvbnMuYm90dG9tU3BhY2luZykgfHwgMDtcblxuICAgICAgICAvLyBCcmVha2Rvd24gc3RpY2t5IHNpZGViYXIgaWYgc2NyZWVuIHdpZHRoIGJlbG93IGBvcHRpb25zLm1pbldpZHRoYC5cbiAgICAgICAgdGhpcy5fd2lkdGhCcmVha3BvaW50KCk7XG5cbiAgICAgICAgLy8gQ2FsY3VsYXRlIGRpbWVuc2lvbnMgb2Ygc2lkZWJhciwgY29udGFpbmVyIGFuZCB2aWV3cG9ydC5cbiAgICAgICAgdGhpcy5jYWxjRGltZW5zaW9ucygpO1xuXG4gICAgICAgIC8vIEFmZml4IHNpZGViYXIgaW4gcHJvcGVyIHBvc2l0aW9uLlxuICAgICAgICB0aGlzLnN0aWNreVBvc2l0aW9uKCk7XG5cbiAgICAgICAgLy8gQmluZCBhbGwgZXZlbnRzLlxuICAgICAgICB0aGlzLmJpbmRFdmVudHMoKTtcblxuICAgICAgICAvLyBJbmZvcm0gb3RoZXIgcHJvcGVydGllcyB0aGUgc3RpY2t5IHNpZGViYXIgaXMgaW5pdGlhbGl6ZWQuXG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBCaW5kIGFsbCBldmVudHMgb2Ygc3RpY2t5IHNpZGViYXIgcGx1Z2luLlxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBiaW5kRXZlbnRzKCl7XG4gICAgICAgIHRoaXMuZXZlbnRUYXJnZXQgPSB0aGlzLnNjcm9sbENvbnRhaW5lciA/IHRoaXMuc2Nyb2xsQ29udGFpbmVyIDogd2luZG93O1xuXG4gICAgICAgIHRoaXMuZXZlbnRUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcywgeyBwYXNzaXZlOiB0cnVlLCBjYXB0dXJlOiBmYWxzZSB9KTtcbiAgICAgICAgdGhpcy5ldmVudFRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLCB7IHBhc3NpdmU6IHRydWUsIGNhcHR1cmU6IGZhbHNlIH0pO1xuXG4gICAgICAgIHRoaXMuc2lkZWJhci5hZGRFdmVudExpc3RlbmVyKCd1cGRhdGUnICsgRVZFTlRfS0VZLCB0aGlzKTtcblxuICAgICAgICBpZiggJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBSZXNpemVPYnNlcnZlciApe1xuICAgICAgICAgIGNvbnN0IHJlc2l6ZU9ic2VydmVyID0gbmV3IFJlc2l6ZU9ic2VydmVyKCgpID0+IHRoaXMuaGFuZGxlRXZlbnQoKSlcbiAgICAgICAgICByZXNpemVPYnNlcnZlci5vYnNlcnZlKHRoaXMuc2lkZWJhcklubmVyKVxuICAgICAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUodGhpcy5jb250YWluZXIpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBIYW5kbGVzIGFsbCBldmVudHMgb2YgdGhlIHBsdWdpbi5cbiAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCAtIEV2ZW50IG9iamVjdCBwYXNzZWQgZnJvbSBsaXN0ZW5lci5cbiAgICAgICAqL1xuICAgICAgaGFuZGxlRXZlbnQoZXZlbnQpe1xuICAgICAgICB0aGlzLnVwZGF0ZVN0aWNreShldmVudCk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogQ2FsY3VsYXRlcyBkaW1lbnNpb25zIG9mIHNpZGViYXIsIGNvbnRhaW5lciBhbmQgc2NyZWVuIHZpZXdwb2ludFxuICAgICAgICogQHB1YmxpY1xuICAgICAgICovXG4gICAgICBjYWxjRGltZW5zaW9ucygpe1xuICAgICAgICBpZiggdGhpcy5fYnJlYWtwb2ludCApIHJldHVybjtcbiAgICAgICAgdmFyIGRpbXMgPSB0aGlzLmRpbWVuc2lvbnM7XG5cbiAgICAgICAgLy8gQ29udGFpbmVyIG9mIHN0aWNreSBzaWRlYmFyIGRpbWVuc2lvbnMuXG4gICAgICAgIGRpbXMuY29udGFpbmVyVG9wICAgID0gU3RpY2t5U2lkZWJhci5vZmZzZXRSZWxhdGl2ZSh0aGlzLmNvbnRhaW5lcikudG9wO1xuICAgICAgICBkaW1zLmNvbnRhaW5lckhlaWdodCA9IHRoaXMuY29udGFpbmVyLmNsaWVudEhlaWdodDtcbiAgICAgICAgZGltcy5jb250YWluZXJCb3R0b20gPSBkaW1zLmNvbnRhaW5lclRvcCArIGRpbXMuY29udGFpbmVySGVpZ2h0O1xuXG4gICAgICAgIC8vIFNpZGViYXIgZGltZW5zaW9ucy5cbiAgICAgICAgZGltcy5zaWRlYmFySGVpZ2h0ID0gdGhpcy5zaWRlYmFySW5uZXIub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBkaW1zLnNpZGViYXJXaWR0aCAgPSB0aGlzLnNpZGViYXJJbm5lci5vZmZzZXRXaWR0aDtcblxuICAgICAgICAvLyBTY3JlZW4gdmlld3BvcnQgZGltZW5zaW9ucy5cbiAgICAgICAgZGltcy52aWV3cG9ydEhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcblxuICAgICAgICAvLyBNYXhpbXVtIHNpZGViYXIgdHJhbnNsYXRlIFkuXG4gICAgICAgIGRpbXMubWF4VHJhbnNsYXRlWSA9IGRpbXMuY29udGFpbmVySGVpZ2h0IC0gZGltcy5zaWRlYmFySGVpZ2h0O1xuXG4gICAgICAgIHRoaXMuX2NhbGNEaW1lbnNpb25zV2l0aFNjcm9sbCgpO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFNvbWUgZGltZW5zaW9ucyB2YWx1ZXMgbmVlZCB0byBiZSB1cC10by1kYXRlIHdoZW4gc2Nyb2xsaW5nIHRoZSBwYWdlLlxuICAgICAgICogQHByaXZhdGVcbiAgICAgICAqL1xuICAgICAgX2NhbGNEaW1lbnNpb25zV2l0aFNjcm9sbCgpe1xuICAgICAgICB2YXIgZGltcyA9IHRoaXMuZGltZW5zaW9ucztcblxuICAgICAgICBkaW1zLnNpZGViYXJMZWZ0ID0gU3RpY2t5U2lkZWJhci5vZmZzZXRSZWxhdGl2ZSh0aGlzLnNpZGViYXIpLmxlZnQ7XG5cbiAgICAgICAgaWYgKHRoaXMuc2Nyb2xsQ29udGFpbmVyKSB7XG4gICAgICAgICAgZGltcy52aWV3cG9ydFRvcCA9IHRoaXMuc2Nyb2xsQ29udGFpbmVyLnNjcm9sbFRvcDtcbiAgICAgICAgICBkaW1zLnZpZXdwb3J0TGVmdCA9IHRoaXMuc2Nyb2xsQ29udGFpbmVyLnNjcm9sbExlZnQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGltcy52aWV3cG9ydFRvcCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3A7XG4gICAgICAgICAgZGltcy52aWV3cG9ydExlZnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgZGltcy52aWV3cG9ydEJvdHRvbSA9IGRpbXMudmlld3BvcnRUb3AgKyBkaW1zLnZpZXdwb3J0SGVpZ2h0O1xuXG4gICAgICAgIGRpbXMudG9wU3BhY2luZyAgICA9IHRoaXMub3B0aW9ucy50b3BTcGFjaW5nO1xuICAgICAgICBkaW1zLmJvdHRvbVNwYWNpbmcgPSB0aGlzLm9wdGlvbnMuYm90dG9tU3BhY2luZztcblxuICAgICAgICBpZiggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGRpbXMudG9wU3BhY2luZyApXG4gICAgICAgICAgICBkaW1zLnRvcFNwYWNpbmcgPSBwYXJzZUludChkaW1zLnRvcFNwYWNpbmcodGhpcy5zaWRlYmFyKSkgfHwgMDtcblxuICAgICAgICBpZiggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGRpbXMuYm90dG9tU3BhY2luZyApXG4gICAgICAgICAgICBkaW1zLmJvdHRvbVNwYWNpbmcgPSBwYXJzZUludChkaW1zLmJvdHRvbVNwYWNpbmcodGhpcy5zaWRlYmFyKSkgfHwgMDtcblxuICAgICAgICBpZiggJ1ZJRVdQT1JULVRPUCcgPT09IHRoaXMuYWZmaXhlZFR5cGUgKXtcbiAgICAgICAgICAvLyBBZGp1c3QgdHJhbnNsYXRlIFkgaW4gdGhlIGNhc2UgZGVjcmVhc2UgdG9wIHNwYWNpbmcgdmFsdWUuXG4gICAgICAgICAgaWYoIGRpbXMudG9wU3BhY2luZyA8IGRpbXMubGFzdFRvcFNwYWNpbmcgKXtcbiAgICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSArPSBkaW1zLmxhc3RUb3BTcGFjaW5nIC0gZGltcy50b3BTcGFjaW5nO1xuICAgICAgICAgICAgdGhpcy5fcmVTdHlsZSA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYoICdWSUVXUE9SVC1CT1RUT00nID09PSB0aGlzLmFmZml4ZWRUeXBlICl7XG4gICAgICAgICAgLy8gQWRqdXN0IHRyYW5zbGF0ZSBZIGluIHRoZSBjYXNlIGRlY3JlYXNlIGJvdHRvbSBzcGFjaW5nIHZhbHVlLlxuICAgICAgICAgIGlmKCBkaW1zLmJvdHRvbVNwYWNpbmcgPCBkaW1zLmxhc3RCb3R0b21TcGFjaW5nICl7XG4gICAgICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgKz0gZGltcy5sYXN0Qm90dG9tU3BhY2luZyAtIGRpbXMuYm90dG9tU3BhY2luZztcbiAgICAgICAgICAgIHRoaXMuX3JlU3R5bGUgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGRpbXMubGFzdFRvcFNwYWNpbmcgICAgPSBkaW1zLnRvcFNwYWNpbmc7XG4gICAgICAgIGRpbXMubGFzdEJvdHRvbVNwYWNpbmcgPSBkaW1zLmJvdHRvbVNwYWNpbmc7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogRGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHNpZGViYXIgaXMgYmlnZ2VyIHRoYW4gdmlld3BvcnQuXG4gICAgICAgKiBAcHVibGljXG4gICAgICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgICAgICovXG4gICAgICBpc1NpZGViYXJGaXRzVmlld3BvcnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRpbWVuc2lvbnMudmlld3BvcnRIZWlnaHQgPj0gKFxuICAgICAgICAgIHRoaXMuZGltZW5zaW9ucy5sYXN0Qm90dG9tU3BhY2luZyArXG4gICAgICAgICAgdGhpcy5kaW1lbnNpb25zLmxhc3RUb3BTcGFjaW5nICtcbiAgICAgICAgICB0aGlzLmRpbWVuc2lvbnMuc2lkZWJhckhlaWdodFxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIE9ic2VydmUgYnJvd3NlciBzY3JvbGxpbmcgZGlyZWN0aW9uIHRvcCBhbmQgZG93bi5cbiAgICAgICAqL1xuICAgICAgb2JzZXJ2ZVNjcm9sbERpcigpe1xuICAgICAgICB2YXIgZGltcyA9IHRoaXMuZGltZW5zaW9ucztcbiAgICAgICAgaWYoIGRpbXMubGFzdFZpZXdwb3J0VG9wID09PSBkaW1zLnZpZXdwb3J0VG9wICkgcmV0dXJuO1xuXG4gICAgICAgIHZhciBmdXJ0aGVzdCA9ICdkb3duJyA9PT0gdGhpcy5kaXJlY3Rpb24gPyBNYXRoLm1pbiA6IE1hdGgubWF4O1xuXG4gICAgICAgIC8vIElmIHRoZSBicm93c2VyIGlzIHNjcm9sbGluZyBub3QgaW4gdGhlIHNhbWUgZGlyZWN0aW9uLlxuICAgICAgICBpZiggZGltcy52aWV3cG9ydFRvcCA9PT0gZnVydGhlc3QoZGltcy52aWV3cG9ydFRvcCwgZGltcy5sYXN0Vmlld3BvcnRUb3ApIClcbiAgICAgICAgICB0aGlzLmRpcmVjdGlvbiA9ICdkb3duJyA9PT0gdGhpcy5kaXJlY3Rpb24gPyAgJ3VwJyA6ICdkb3duJztcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBHZXRzIGFmZml4IHR5cGUgb2Ygc2lkZWJhciBhY2NvcmRpbmcgdG8gY3VycmVudCBzY3JvbGwgdG9wIGFuZCBzY3JvbGxpbmcgZGlyZWN0aW9uLlxuICAgICAgICogQHB1YmxpY1xuICAgICAgICogQHJldHVybiB7U3RyaW5nfEZhbHNlfSAtIFByb3BlciBhZmZpeCB0eXBlLlxuICAgICAgICovXG4gICAgICBnZXRBZmZpeFR5cGUoKXtcbiAgICAgICAgdGhpcy5fY2FsY0RpbWVuc2lvbnNXaXRoU2Nyb2xsKCk7XG4gICAgICAgIHZhciBkaW1zID0gdGhpcy5kaW1lbnNpb25zO1xuICAgICAgICB2YXIgY29sbGlkZXJUb3AgPSBkaW1zLnZpZXdwb3J0VG9wICsgZGltcy50b3BTcGFjaW5nO1xuICAgICAgICB2YXIgYWZmaXhUeXBlID0gdGhpcy5hZmZpeGVkVHlwZTtcblxuICAgICAgIGlmKCBjb2xsaWRlclRvcCA8PSBkaW1zLmNvbnRhaW5lclRvcCB8fCBkaW1zLmNvbnRhaW5lckhlaWdodCA8PSBkaW1zLnNpZGViYXJIZWlnaHQgKXtcbiAgICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgPSAwO1xuICAgICAgICAgIGFmZml4VHlwZSA9ICdTVEFUSUMnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFmZml4VHlwZSA9ICggJ3VwJyA9PT0gdGhpcy5kaXJlY3Rpb24gKSA/XG4gICAgICAgICAgICB0aGlzLl9nZXRBZmZpeFR5cGVTY3JvbGxpbmdVcCgpIDogdGhpcy5fZ2V0QWZmaXhUeXBlU2Nyb2xsaW5nRG93bigpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gTWFrZSBzdXJlIHRoZSB0cmFuc2xhdGUgWSBpcyBub3QgYmlnZ2VyIHRoYW4gY29udGFpbmVyIGhlaWdodC5cbiAgICAgICAgZGltcy50cmFuc2xhdGVZID0gTWF0aC5tYXgoMCwgZGltcy50cmFuc2xhdGVZKTtcbiAgICAgICAgZGltcy50cmFuc2xhdGVZID0gTWF0aC5taW4oZGltcy5jb250YWluZXJIZWlnaHQsIGRpbXMudHJhbnNsYXRlWSk7XG4gICAgICAgIGRpbXMudHJhbnNsYXRlWSA9IE1hdGgucm91bmQoZGltcy50cmFuc2xhdGVZKTtcblxuICAgICAgICBkaW1zLmxhc3RWaWV3cG9ydFRvcCA9IGRpbXMudmlld3BvcnRUb3A7XG4gICAgICAgIHJldHVybiBhZmZpeFR5cGU7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogR2V0IGFmZml4IHR5cGUgd2hpbGUgc2Nyb2xsaW5nIGRvd24uXG4gICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICogQHJldHVybiB7U3RyaW5nfSAtIFByb3BlciBhZmZpeCB0eXBlIG9mIHNjcm9sbGluZyBkb3duIGRpcmVjdGlvbi5cbiAgICAgICAqL1xuICAgICAgX2dldEFmZml4VHlwZVNjcm9sbGluZ0Rvd24oKXtcbiAgICAgICAgdmFyIGRpbXMgPSB0aGlzLmRpbWVuc2lvbnM7XG4gICAgICAgIHZhciBzaWRlYmFyQm90dG9tID0gZGltcy5zaWRlYmFySGVpZ2h0ICsgZGltcy5jb250YWluZXJUb3A7XG4gICAgICAgIHZhciBjb2xsaWRlclRvcCA9IGRpbXMudmlld3BvcnRUb3AgKyBkaW1zLnRvcFNwYWNpbmc7XG4gICAgICAgIHZhciBjb2xsaWRlckJvdHRvbSA9IGRpbXMudmlld3BvcnRCb3R0b20gLSBkaW1zLmJvdHRvbVNwYWNpbmc7XG4gICAgICAgIHZhciBhZmZpeFR5cGUgPSB0aGlzLmFmZml4ZWRUeXBlO1xuXG4gICAgICAgIGlmKCB0aGlzLmlzU2lkZWJhckZpdHNWaWV3cG9ydCgpICl7XG4gICAgICAgICAgaWYoIGRpbXMuc2lkZWJhckhlaWdodCArIGNvbGxpZGVyVG9wID49IGRpbXMuY29udGFpbmVyQm90dG9tICl7XG4gICAgICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgPSBkaW1zLmNvbnRhaW5lckJvdHRvbSAtIHNpZGViYXJCb3R0b207XG4gICAgICAgICAgICBhZmZpeFR5cGUgPSAnQ09OVEFJTkVSLUJPVFRPTSc7XG5cbiAgICAgICAgICB9IGVsc2UgaWYoIGNvbGxpZGVyVG9wID49IGRpbXMuY29udGFpbmVyVG9wICl7XG4gICAgICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgPSBjb2xsaWRlclRvcCAtIGRpbXMuY29udGFpbmVyVG9wO1xuICAgICAgICAgICAgYWZmaXhUeXBlID0gJ1ZJRVdQT1JULVRPUCc7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmKCBkaW1zLmNvbnRhaW5lckJvdHRvbSA8PSBjb2xsaWRlckJvdHRvbSApe1xuICAgICAgICAgICAgZGltcy50cmFuc2xhdGVZID0gZGltcy5jb250YWluZXJCb3R0b20gLSBzaWRlYmFyQm90dG9tO1xuICAgICAgICAgICAgYWZmaXhUeXBlID0gJ0NPTlRBSU5FUi1CT1RUT00nO1xuXG4gICAgICAgICAgfSBlbHNlIGlmKCBzaWRlYmFyQm90dG9tICsgZGltcy50cmFuc2xhdGVZIDw9IGNvbGxpZGVyQm90dG9tICl7XG4gICAgICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgPSBjb2xsaWRlckJvdHRvbSAtIHNpZGViYXJCb3R0b207XG4gICAgICAgICAgICBhZmZpeFR5cGUgPSAnVklFV1BPUlQtQk9UVE9NJztcblxuICAgICAgICAgIH0gZWxzZSBpZiggZGltcy5jb250YWluZXJUb3AgKyBkaW1zLnRyYW5zbGF0ZVkgPD0gY29sbGlkZXJUb3AgJiZcbiAgICAgICAgICAgICgwICE9PSBkaW1zLnRyYW5zbGF0ZVkgJiYgZGltcy5tYXhUcmFuc2xhdGVZICE9PSBkaW1zLnRyYW5zbGF0ZVkpICl7XG4gICAgICAgICAgICBhZmZpeFR5cGUgPSAnVklFV1BPUlQtVU5CT1RUT00nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhZmZpeFR5cGU7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogR2V0IGFmZml4IHR5cGUgd2hpbGUgc2Nyb2xsaW5nIHVwLlxuICAgICAgICogQHByaXZhdGVcbiAgICAgICAqIEByZXR1cm4ge1N0cmluZ30gLSBQcm9wZXIgYWZmaXggdHlwZSBvZiBzY3JvbGxpbmcgdXAgZGlyZWN0aW9uLlxuICAgICAgICovXG4gICAgICBfZ2V0QWZmaXhUeXBlU2Nyb2xsaW5nVXAoKXtcbiAgICAgICAgdmFyIGRpbXMgPSB0aGlzLmRpbWVuc2lvbnM7XG4gICAgICAgIHZhciBzaWRlYmFyQm90dG9tID0gZGltcy5zaWRlYmFySGVpZ2h0ICsgZGltcy5jb250YWluZXJUb3A7XG4gICAgICAgIHZhciBjb2xsaWRlclRvcCA9IGRpbXMudmlld3BvcnRUb3AgKyBkaW1zLnRvcFNwYWNpbmc7XG4gICAgICAgIHZhciBjb2xsaWRlckJvdHRvbSA9IGRpbXMudmlld3BvcnRCb3R0b20gLSBkaW1zLmJvdHRvbVNwYWNpbmc7XG4gICAgICAgIHZhciBhZmZpeFR5cGUgPSB0aGlzLmFmZml4ZWRUeXBlO1xuXG4gICAgICAgIGlmKCBjb2xsaWRlclRvcCA8PSBkaW1zLnRyYW5zbGF0ZVkgKyBkaW1zLmNvbnRhaW5lclRvcCApe1xuICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSA9IGNvbGxpZGVyVG9wIC0gZGltcy5jb250YWluZXJUb3A7XG4gICAgICAgICAgYWZmaXhUeXBlID0gJ1ZJRVdQT1JULVRPUCc7XG5cbiAgICAgICAgfSBlbHNlIGlmKCBkaW1zLmNvbnRhaW5lckJvdHRvbSA8PSBjb2xsaWRlckJvdHRvbSApe1xuICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSA9IGRpbXMuY29udGFpbmVyQm90dG9tIC0gc2lkZWJhckJvdHRvbTtcbiAgICAgICAgICBhZmZpeFR5cGUgPSAnQ09OVEFJTkVSLUJPVFRPTSc7XG5cbiAgICAgICAgfSBlbHNlIGlmKCAhIHRoaXMuaXNTaWRlYmFyRml0c1ZpZXdwb3J0KCkgKXtcblxuICAgICAgICAgIGlmKCBkaW1zLmNvbnRhaW5lclRvcCA8PSBjb2xsaWRlclRvcCAmJlxuICAgICAgICAgICAgICAoMCAhPT0gZGltcy50cmFuc2xhdGVZICYmIGRpbXMubWF4VHJhbnNsYXRlWSAhPT0gZGltcy50cmFuc2xhdGVZKSApe1xuICAgICAgICAgICAgYWZmaXhUeXBlID0gJ1ZJRVdQT1JULVVOQk9UVE9NJztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYWZmaXhUeXBlO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEdldHMgaW5saW5lIHN0eWxlIG9mIHN0aWNreSBzaWRlYmFyIHdyYXBwZXIgYW5kIGlubmVyIHdyYXBwZXIgYWNjb3JkaW5nXG4gICAgICAgKiB0byBpdHMgYWZmaXggdHlwZS5cbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKiBAcGFyYW0ge1N0cmluZ30gYWZmaXhUeXBlIC0gQWZmaXggdHlwZSBvZiBzdGlja3kgc2lkZWJhci5cbiAgICAgICAqIEByZXR1cm4ge09iamVjdH1cbiAgICAgICAqL1xuICAgICAgX2dldFN0eWxlKGFmZml4VHlwZSl7XG4gICAgICAgIGlmKCAndW5kZWZpbmVkJyA9PT0gdHlwZW9mIGFmZml4VHlwZSApIHJldHVybjtcblxuICAgICAgICB2YXIgc3R5bGUgPSB7aW5uZXI6IHt9LCBvdXRlcjoge319O1xuICAgICAgICB2YXIgZGltcyA9IHRoaXMuZGltZW5zaW9ucztcblxuICAgICAgICBzd2l0Y2goIGFmZml4VHlwZSApe1xuICAgICAgICAgIGNhc2UgJ1ZJRVdQT1JULVRPUCc6XG4gICAgICAgICAgICBzdHlsZS5pbm5lciA9IHtwb3NpdGlvbjogJ2ZpeGVkJywgdG9wOiBkaW1zLnRvcFNwYWNpbmcsXG4gICAgICAgICAgICAgICAgICBsZWZ0OiBkaW1zLnNpZGViYXJMZWZ0IC0gZGltcy52aWV3cG9ydExlZnQsIHdpZHRoOiBkaW1zLnNpZGViYXJXaWR0aH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICdWSUVXUE9SVC1CT1RUT00nOlxuICAgICAgICAgICAgc3R5bGUuaW5uZXIgPSB7cG9zaXRpb246ICdmaXhlZCcsIHRvcDogJ2F1dG8nLCBsZWZ0OiBkaW1zLnNpZGViYXJMZWZ0LFxuICAgICAgICAgICAgICAgICAgYm90dG9tOiBkaW1zLmJvdHRvbVNwYWNpbmcsIHdpZHRoOiBkaW1zLnNpZGViYXJXaWR0aH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICdDT05UQUlORVItQk9UVE9NJzpcbiAgICAgICAgICBjYXNlICdWSUVXUE9SVC1VTkJPVFRPTSc6XG4gICAgICAgICAgICBsZXQgdHJhbnNsYXRlID0gdGhpcy5fZ2V0VHJhbnNsYXRlKDAsIGRpbXMudHJhbnNsYXRlWSArICdweCcpO1xuXG4gICAgICAgICAgICBpZiggdHJhbnNsYXRlIClcbiAgICAgICAgICAgICAgc3R5bGUuaW5uZXIgPSB7dHJhbnNmb3JtOiB0cmFuc2xhdGV9O1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICBzdHlsZS5pbm5lciA9IHtwb3NpdGlvbjogJ2Fic29sdXRlJywgdG9wOiBkaW1zLnRyYW5zbGF0ZVksIHdpZHRoOiBkaW1zLnNpZGViYXJXaWR0aH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXRjaCggYWZmaXhUeXBlICl7XG4gICAgICAgICAgY2FzZSAnVklFV1BPUlQtVE9QJzpcbiAgICAgICAgICBjYXNlICdWSUVXUE9SVC1CT1RUT00nOlxuICAgICAgICAgIGNhc2UgJ1ZJRVdQT1JULVVOQk9UVE9NJzpcbiAgICAgICAgICBjYXNlICdDT05UQUlORVItQk9UVE9NJzpcbiAgICAgICAgICAgIHN0eWxlLm91dGVyID0ge2hlaWdodDogZGltcy5zaWRlYmFySGVpZ2h0LCBwb3NpdGlvbjogJ3JlbGF0aXZlJ307XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIHN0eWxlLm91dGVyID0gU3RpY2t5U2lkZWJhci5leHRlbmQoe2hlaWdodDogJycsIHBvc2l0aW9uOiAnJ30sIHN0eWxlLm91dGVyKTtcbiAgICAgICAgc3R5bGUuaW5uZXIgPSBTdGlja3lTaWRlYmFyLmV4dGVuZCh7cG9zaXRpb246ICdyZWxhdGl2ZScsIHRvcDogJycsIGxlZnQ6ICcnLFxuICAgICAgICAgICAgYm90dG9tOiAnJywgd2lkdGg6ICcnLCAgdHJhbnNmb3JtOiAnJ30sIHN0eWxlLmlubmVyKTtcblxuICAgICAgICByZXR1cm4gc3R5bGU7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogQ2F1c2UgdGhlIHNpZGViYXIgdG8gYmUgc3RpY2t5IGFjY29yZGluZyB0byBhZmZpeCB0eXBlIGJ5IGFkZGluZyBpbmxpbmVcbiAgICAgICAqIHN0eWxlLCBhZGRpbmcgaGVscGVyIGNsYXNzIGFuZCB0cmlnZ2VyIGV2ZW50cy5cbiAgICAgICAqIEBmdW5jdGlvblxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGZvcmNlIC0gVXBkYXRlIHN0aWNreSBzaWRlYmFyIHBvc2l0aW9uIGJ5IGZvcmNlLlxuICAgICAgICovXG4gICAgICBzdGlja3lQb3NpdGlvbihmb3JjZSl7XG4gICAgICAgIGlmKCB0aGlzLl9icmVha3BvaW50ICkgcmV0dXJuO1xuXG4gICAgICAgIGZvcmNlID0gdGhpcy5fcmVTdHlsZSB8fCBmb3JjZSB8fCBmYWxzZTtcblxuICAgICAgICB2YXIgb2Zmc2V0VG9wID0gdGhpcy5vcHRpb25zLnRvcFNwYWNpbmc7XG4gICAgICAgIHZhciBvZmZzZXRCb3R0b20gPSB0aGlzLm9wdGlvbnMuYm90dG9tU3BhY2luZztcblxuICAgICAgICB2YXIgYWZmaXhUeXBlID0gdGhpcy5nZXRBZmZpeFR5cGUoKTtcbiAgICAgICAgdmFyIHN0eWxlID0gdGhpcy5fZ2V0U3R5bGUoYWZmaXhUeXBlKTtcblxuICAgICAgICBpZiggKHRoaXMuYWZmaXhlZFR5cGUgIT0gYWZmaXhUeXBlIHx8IGZvcmNlKSAmJiBhZmZpeFR5cGUgKXtcbiAgICAgICAgICBsZXQgYWZmaXhFdmVudCA9ICdhZmZpeC4nICsgYWZmaXhUeXBlLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgndmlld3BvcnQtJywgJycpICsgRVZFTlRfS0VZO1xuICAgICAgICAgIFN0aWNreVNpZGViYXIuZXZlbnRUcmlnZ2VyKHRoaXMuc2lkZWJhciwgYWZmaXhFdmVudCk7XG5cbiAgICAgICAgICBpZiggJ1NUQVRJQycgPT09IGFmZml4VHlwZSApXG4gICAgICAgICAgICBTdGlja3lTaWRlYmFyLnJlbW92ZUNsYXNzKHRoaXMuc2lkZWJhciwgdGhpcy5vcHRpb25zLnN0aWNreUNsYXNzKTtcbiAgICAgICAgICBlbHNlXG4gICAgICAgICAgICBTdGlja3lTaWRlYmFyLmFkZENsYXNzKHRoaXMuc2lkZWJhciwgdGhpcy5vcHRpb25zLnN0aWNreUNsYXNzKTtcblxuICAgICAgICAgIGZvciggbGV0IGtleSBpbiBzdHlsZS5vdXRlciApe1xuICAgICAgICAgICAgbGV0IHVuaXQgPSAoJ251bWJlcicgPT09IHR5cGVvZiBzdHlsZS5vdXRlcltrZXldKSA/ICdweCcgOiAnJztcbiAgICAgICAgICAgIHRoaXMuc2lkZWJhci5zdHlsZVtrZXldID0gc3R5bGUub3V0ZXJba2V5XSArIHVuaXQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZm9yKCBsZXQga2V5IGluIHN0eWxlLmlubmVyICl7XG4gICAgICAgICAgICBsZXQgdW5pdCA9ICgnbnVtYmVyJyA9PT0gdHlwZW9mIHN0eWxlLmlubmVyW2tleV0pID8gJ3B4JyA6ICcnO1xuICAgICAgICAgICAgdGhpcy5zaWRlYmFySW5uZXIuc3R5bGVba2V5XSA9IHN0eWxlLmlubmVyW2tleV0gKyB1bml0O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxldCBhZmZpeGVkRXZlbnQgPSAnYWZmaXhlZC4nKyBhZmZpeFR5cGUudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCd2aWV3cG9ydC0nLCAnJykgKyBFVkVOVF9LRVk7XG4gICAgICAgICAgU3RpY2t5U2lkZWJhci5ldmVudFRyaWdnZXIodGhpcy5zaWRlYmFyLCBhZmZpeGVkRXZlbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmKCB0aGlzLl9pbml0aWFsaXplZCApIHRoaXMuc2lkZWJhcklubmVyLnN0eWxlLmxlZnQgPSBzdHlsZS5pbm5lci5sZWZ0O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5hZmZpeGVkVHlwZSA9IGFmZml4VHlwZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBCcmVha2Rvd24gc3RpY2t5IHNpZGViYXIgd2hlbiB3aW5kb3cgd2lkdGggaXMgYmVsb3cgYG9wdGlvbnMubWluV2lkdGhgIHZhbHVlLlxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBfd2lkdGhCcmVha3BvaW50KCl7XG5cbiAgICAgICAgaWYoIHdpbmRvdy5pbm5lcldpZHRoIDw9IHRoaXMub3B0aW9ucy5taW5XaWR0aCApe1xuICAgICAgICAgIHRoaXMuX2JyZWFrcG9pbnQgPSB0cnVlO1xuICAgICAgICAgIHRoaXMuYWZmaXhlZFR5cGUgPSAnU1RBVElDJztcblxuICAgICAgICAgIHRoaXMuc2lkZWJhci5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgICAgICAgU3RpY2t5U2lkZWJhci5yZW1vdmVDbGFzcyh0aGlzLnNpZGViYXIsIHRoaXMub3B0aW9ucy5zdGlja3lDbGFzcyk7XG4gICAgICAgICAgdGhpcy5zaWRlYmFySW5uZXIucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuX2JyZWFrcG9pbnQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFN3aXRjaGVzIGJldHdlZW4gZnVuY3Rpb25zIHN0YWNrIGZvciBlYWNoIGV2ZW50IHR5cGUsIGlmIHRoZXJlJ3Mgbm9cbiAgICAgICAqIGV2ZW50LCBpdCB3aWxsIHJlLWluaXRpYWxpemUgc3RpY2t5IHNpZGViYXIuXG4gICAgICAgKiBAcHVibGljXG4gICAgICAgKi9cbiAgICAgIHVwZGF0ZVN0aWNreShldmVudCA9IHt9KXtcbiAgICAgICAgaWYoIHRoaXMuX3J1bm5pbmcgKSByZXR1cm47XG4gICAgICAgIHRoaXMuX3J1bm5pbmcgPSB0cnVlO1xuXG4gICAgICAgICgoZXZlbnRUeXBlKSA9PiB7XG4gICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCggZXZlbnRUeXBlICl7XG4gICAgICAgICAgICAgIC8vIFdoZW4gYnJvd3NlciBpcyBzY3JvbGxpbmcgYW5kIHJlLWNhbGN1bGF0ZSBqdXN0IGRpbWVuc2lvbnNcbiAgICAgICAgICAgICAgLy8gd2l0aGluIHNjcm9sbC5cbiAgICAgICAgICAgICAgY2FzZSAnc2Nyb2xsJzpcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWxjRGltZW5zaW9uc1dpdGhTY3JvbGwoKTtcbiAgICAgICAgICAgICAgICB0aGlzLm9ic2VydmVTY3JvbGxEaXIoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnN0aWNreVBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgLy8gV2hlbiBicm93c2VyIGlzIHJlc2l6aW5nIG9yIHRoZXJlJ3Mgbm8gZXZlbnQsIG9ic2VydmUgd2lkdGhcbiAgICAgICAgICAgICAgLy8gYnJlYWtwb2ludCBhbmQgcmUtY2FsY3VsYXRlIGRpbWVuc2lvbnMuXG4gICAgICAgICAgICAgIGNhc2UgJ3Jlc2l6ZSc6XG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhpcy5fd2lkdGhCcmVha3BvaW50KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWxjRGltZW5zaW9ucygpO1xuICAgICAgICAgICAgICAgIHRoaXMuc3RpY2t5UG9zaXRpb24odHJ1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9ydW5uaW5nID0gZmFsc2U7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pKGV2ZW50LnR5cGUpO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFNldCBicm93c2VyIHN1cHBvcnQgZmVhdHVyZXMgdG8gdGhlIHB1YmxpYyBwcm9wZXJ0eS5cbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKi9cbiAgICAgIF9zZXRTdXBwb3J0RmVhdHVyZXMoKXtcbiAgICAgICAgdmFyIHN1cHBvcnQgPSB0aGlzLnN1cHBvcnQ7XG5cbiAgICAgICAgc3VwcG9ydC50cmFuc2Zvcm0gPSBTdGlja3lTaWRlYmFyLnN1cHBvcnRUcmFuc2Zvcm0oKTtcbiAgICAgICAgc3VwcG9ydC50cmFuc2Zvcm0zZCA9IFN0aWNreVNpZGViYXIuc3VwcG9ydFRyYW5zZm9ybSh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBHZXQgdHJhbnNsYXRlIHZhbHVlLCBpZiB0aGUgYnJvd3NlciBzdXBwb3J0cyB0cmFuc2Zyb20zZCwgaXQgd2lsbCBhZG9wdCBpdC5cbiAgICAgICAqIGFuZCB0aGUgc2FtZSB3aXRoIHRyYW5zbGF0ZS4gaWYgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgYm90aCByZXR1cm4gZmFsc2UuXG4gICAgICAgKiBAcGFyYW0ge051bWJlcn0geSAtIFZhbHVlIG9mIFktYXhpcy5cbiAgICAgICAqIEBwYXJhbSB7TnVtYmVyfSB4IC0gVmFsdWUgb2YgWC1heGlzLlxuICAgICAgICogQHBhcmFtIHtOdW1iZXJ9IHogLSBWYWx1ZSBvZiBaLWF4aXMuXG4gICAgICAgKiBAcmV0dXJuIHtTdHJpbmd8RmFsc2V9XG4gICAgICAgKi9cbiAgICAgIF9nZXRUcmFuc2xhdGUoeSA9IDAsIHggPSAwLCB6ID0gMCl7XG4gICAgICAgIGlmKCB0aGlzLnN1cHBvcnQudHJhbnNmb3JtM2QgKSByZXR1cm4gJ3RyYW5zbGF0ZTNkKCcgKyB5ICsnLCAnKyB4ICsnLCAnKyB6ICsnKSc7XG4gICAgICAgIGVsc2UgaWYoIHRoaXMuc3VwcG9ydC50cmFuc2xhdGUgKSByZXR1cm4gJ3RyYW5zbGF0ZSgnKyB5ICsnLCAnKyB4ICsnKSc7XG4gICAgICAgIGVsc2UgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIERlc3Ryb3kgc3RpY2t5IHNpZGViYXIgcGx1Z2luLlxuICAgICAgICogQHB1YmxpY1xuICAgICAgICovXG4gICAgICBkZXN0cm95KCl7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLCB7Y2FwdHVyZTogZmFsc2V9KTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMsIHtjYXB0dXJlOiBmYWxzZX0pO1xuXG4gICAgICAgIHRoaXMuc2lkZWJhci5jbGFzc0xpc3QucmVtb3ZlKHRoaXMub3B0aW9ucy5zdGlja3lDbGFzcyk7XG4gICAgICAgIHRoaXMuc2lkZWJhci5zdHlsZS5taW5IZWlnaHQgPSAnJztcblxuICAgICAgICB0aGlzLnNpZGViYXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndXBkYXRlJyArIEVWRU5UX0tFWSwgdGhpcyk7XG5cbiAgICAgICAgdmFyIHN0eWxlUmVzZXQgPSB7aW5uZXI6IHt9LCBvdXRlcjoge319O1xuXG4gICAgICAgIHN0eWxlUmVzZXQuaW5uZXIgPSB7cG9zaXRpb246ICcnLCB0b3A6ICcnLCBsZWZ0OiAnJywgYm90dG9tOiAnJywgd2lkdGg6ICcnLCAgdHJhbnNmb3JtOiAnJ307XG4gICAgICAgIHN0eWxlUmVzZXQub3V0ZXIgPSB7aGVpZ2h0OiAnJywgcG9zaXRpb246ICcnfTtcblxuICAgICAgICBmb3IoIGxldCBrZXkgaW4gc3R5bGVSZXNldC5vdXRlciApXG4gICAgICAgICAgdGhpcy5zaWRlYmFyLnN0eWxlW2tleV0gPSBzdHlsZVJlc2V0Lm91dGVyW2tleV07XG5cbiAgICAgICAgZm9yKCBsZXQga2V5IGluIHN0eWxlUmVzZXQuaW5uZXIgKVxuICAgICAgICAgIHRoaXMuc2lkZWJhcklubmVyLnN0eWxlW2tleV0gPSBzdHlsZVJlc2V0LmlubmVyW2tleV07XG5cbiAgICAgICAgaWYoIHRoaXMub3B0aW9ucy5yZXNpemVTZW5zb3IgJiYgJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBSZXNpemVTZW5zb3IgKXtcbiAgICAgICAgICBSZXNpemVTZW5zb3IuZGV0YWNoKHRoaXMuc2lkZWJhcklubmVyLCB0aGlzLmhhbmRsZUV2ZW50KTtcbiAgICAgICAgICBSZXNpemVTZW5zb3IuZGV0YWNoKHRoaXMuY29udGFpbmVyLCB0aGlzLmhhbmRsZUV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIERldGVybWluZSBpZiB0aGUgYnJvd3NlciBzdXBwb3J0cyBDU1MgdHJhbnNmb3JtIGZlYXR1cmUuXG4gICAgICAgKiBAZnVuY3Rpb25cbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gdHJhbnNmb3JtM2QgLSBEZXRlY3QgdHJhbnNmb3JtIHdpdGggdHJhbnNsYXRlM2QuXG4gICAgICAgKiBAcmV0dXJuIHtTdHJpbmd9XG4gICAgICAgKi9cbiAgICAgIHN0YXRpYyBzdXBwb3J0VHJhbnNmb3JtKHRyYW5zZm9ybTNkKXtcbiAgICAgICAgdmFyIHJlc3VsdCA9IGZhbHNlLFxuICAgICAgICAgICAgcHJvcGVydHkgPSAodHJhbnNmb3JtM2QpID8gJ3BlcnNwZWN0aXZlJyA6ICd0cmFuc2Zvcm0nLFxuICAgICAgICAgICAgdXBwZXIgPSBwcm9wZXJ0eS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHByb3BlcnR5LnNsaWNlKDEpLFxuICAgICAgICAgICAgcHJlZml4ZXMgPSBbJ1dlYmtpdCcsICdNb3onLCAnTycsICdtcyddLFxuICAgICAgICAgICAgc3VwcG9ydCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N1cHBvcnQnKSxcbiAgICAgICAgICAgIHN0eWxlID0gc3VwcG9ydC5zdHlsZTtcblxuICAgICAgICAocHJvcGVydHkgKyAnICcgKyBwcmVmaXhlcy5qb2luKHVwcGVyICsgJyAnKSArIHVwcGVyKS5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHksIGkpIHtcbiAgICAgICAgICBpZiAoc3R5bGVbcHJvcGVydHldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHByb3BlcnR5O1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogVHJpZ2dlciBjdXN0b20gZXZlbnQuXG4gICAgICAgKiBAc3RhdGljXG4gICAgICAgKiBAcGFyYW0ge0RPTU9iamVjdH0gZWxlbWVudCAtIFRhcmdldCBlbGVtZW50IG9uIHRoZSBET00uXG4gICAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnROYW1lIC0gRXZlbnQgbmFtZS5cbiAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIC1cbiAgICAgICAqL1xuICAgICAgc3RhdGljIGV2ZW50VHJpZ2dlcihlbGVtZW50LCBldmVudE5hbWUsIGRhdGEpe1xuICAgICAgICB0cnl7XG4gICAgICAgICAgdmFyIGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwge2RldGFpbDogZGF0YX0pO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgIHZhciBldmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdDdXN0b21FdmVudCcpO1xuICAgICAgICAgIGV2ZW50LmluaXRDdXN0b21FdmVudChldmVudE5hbWUsIHRydWUsIHRydWUsIGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogRXh0ZW5kIG9wdGlvbnMgb2JqZWN0IHdpdGggZGVmYXVsdHMuXG4gICAgICAgKiBAZnVuY3Rpb25cbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqL1xuICAgICAgc3RhdGljIGV4dGVuZChkZWZhdWx0cywgb3B0aW9ucyl7XG4gICAgICAgIHZhciByZXN1bHRzID0ge307XG4gICAgICAgIGZvciggbGV0IGtleSBpbiBkZWZhdWx0cyApe1xuICAgICAgICAgIGlmKCAndW5kZWZpbmVkJyAhPT0gdHlwZW9mIG9wdGlvbnNba2V5XSApIHJlc3VsdHNba2V5XSA9IG9wdGlvbnNba2V5XTtcbiAgICAgICAgICBlbHNlIHJlc3VsdHNba2V5XSA9IGRlZmF1bHRzW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogR2V0IGN1cnJlbnQgY29vcmRpbmF0ZXMgbGVmdCBhbmQgdG9wIG9mIHNwZWNpZmljIGVsZW1lbnQuXG4gICAgICAgKiBAc3RhdGljXG4gICAgICAgKi9cbiAgICAgIHN0YXRpYyBvZmZzZXRSZWxhdGl2ZShlbGVtZW50KXtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHtsZWZ0OiAwLCB0b3A6IDB9O1xuXG4gICAgICAgIGRve1xuICAgICAgICAgIGxldCBvZmZzZXRUb3AgPSBlbGVtZW50Lm9mZnNldFRvcDtcbiAgICAgICAgICBsZXQgb2Zmc2V0TGVmdCA9IGVsZW1lbnQub2Zmc2V0TGVmdDtcblxuICAgICAgICAgIGlmKCAhIGlzTmFOKG9mZnNldFRvcCkgKVxuICAgICAgICAgICAgcmVzdWx0LnRvcCArPSBvZmZzZXRUb3A7XG5cbiAgICAgICAgICBpZiggISBpc05hTihvZmZzZXRMZWZ0KSApXG4gICAgICAgICAgICByZXN1bHQubGVmdCArPSBvZmZzZXRMZWZ0O1xuXG4gICAgICAgICAgZWxlbWVudCA9ICggJ0JPRFknID09PSBlbGVtZW50LnRhZ05hbWUgKSA/XG4gICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5wYXJlbnRFbGVtZW50IDogZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG4gICAgICAgIH0gd2hpbGUoZWxlbWVudClcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBBZGQgc3BlY2lmaWMgY2xhc3MgbmFtZSB0byBzcGVjaWZpYyBlbGVtZW50LlxuICAgICAgICogQHN0YXRpY1xuICAgICAgICogQHBhcmFtIHtPYmplY3RET019IGVsZW1lbnRcbiAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjbGFzc05hbWVcbiAgICAgICAqL1xuICAgICAgc3RhdGljIGFkZENsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSl7XG4gICAgICAgIGlmKCAhIFN0aWNreVNpZGViYXIuaGFzQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lKSApe1xuICAgICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdClcbiAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NOYW1lICs9ICcgJyArIGNsYXNzTmFtZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFJlbW92ZSBzcGVjaWZpYyBjbGFzcyBuYW1lIHRvIHNwZWNpZmljIGVsZW1lbnRcbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqIEBwYXJhbSB7T2JqZWN0RE9NfSBlbGVtZW50XG4gICAgICAgKiBAcGFyYW0ge1N0cmluZ30gY2xhc3NOYW1lXG4gICAgICAgKi9cbiAgICAgIHN0YXRpYyByZW1vdmVDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpe1xuICAgICAgICBpZiggU3RpY2t5U2lkZWJhci5oYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpICl7XG4gICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KVxuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZS5yZXBsYWNlKG5ldyBSZWdFeHAoJyhefFxcXFxiKScgKyBjbGFzc05hbWUuc3BsaXQoJyAnKS5qb2luKCd8JykgKyAnKFxcXFxifCQpJywgJ2dpJyksICcgJyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBEZXRlcm1pbmUgd2VhdGhlciB0aGUgZWxlbWVudCBoYXMgc3BlY2lmaWMgY2xhc3MgbmFtZS5cbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqIEBwYXJhbSB7T2JqZWN0RE9NfSBlbGVtZW50XG4gICAgICAgKiBAcGFyYW0ge1N0cmluZ30gY2xhc3NOYW1lXG4gICAgICAgKi9cbiAgICAgIHN0YXRpYyBoYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpe1xuICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpXG4gICAgICAgICAgcmV0dXJuIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cCgnKF58ICknICsgY2xhc3NOYW1lICsgJyggfCQpJywgJ2dpJykudGVzdChlbGVtZW50LmNsYXNzTmFtZSk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogR2V0cyBkZWZhdWx0IHZhbHVlcyBvZiBjb25maWd1cmF0aW9uIG9wdGlvbnMuXG4gICAgICAgKiBAc3RhdGljXG4gICAgICAgKiBAcmV0dXJuIHtPYmplY3R9XG4gICAgICAgKi9cbiAgICAgIHN0YXRpYyBnZXQgZGVmYXVsdHMoKXtcbiAgICAgICAgcmV0dXJuIERFRkFVTFRTO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBTdGlja3lTaWRlYmFyO1xuICB9KSgpO1xuXG4gIGV4cG9ydCBkZWZhdWx0IFN0aWNreVNpZGViYXI7XG5cbiAgLy8gR2xvYmFsXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgd2luZG93LlN0aWNreVNpZGViYXIgPSBTdGlja3lTaWRlYmFyO1xuIiwiaW1wb3J0IFN0aWNreVNpZGViYXIgZnJvbSBcInN0aWNreS1zaWRlYmFyLXYyXCI7XHJcblxyXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGViYXInKSkge1xyXG4gIHZhciBzaWRlYmFyID0gbmV3IFN0aWNreVNpZGViYXIoJy5zaWRlYmFyJywge1xyXG4gICAgICAgICAgY29udGFpbmVyU2VsZWN0b3I6ICcubGF5b3V0JyxcclxuICAgICAgICAgIGlubmVyV3JhcHBlclNlbGVjdG9yOiAnLnNpZGViYXJfX2lubmVyJyxcclxuICAgICAgICAgIHRvcFNwYWNpbmc6IDMwLFxyXG4gICAgICAgICAgYm90dG9tU3BhY2luZzogMjBcclxuICB9KTtcclxufVxyXG4iLCJ2YXIgb2JqZWN0RXh0ZW5kID0gZXh0ZW5kO1xuXG4vKlxuICB2YXIgb2JqID0ge2E6IDMsIGI6IDV9O1xuICBleHRlbmQob2JqLCB7YTogNCwgYzogOH0pOyAvLyB7YTogNCwgYjogNSwgYzogOH1cbiAgb2JqOyAvLyB7YTogNCwgYjogNSwgYzogOH1cblxuICB2YXIgb2JqID0ge2E6IDMsIGI6IDV9O1xuICBleHRlbmQoe30sIG9iaiwge2E6IDQsIGM6IDh9KTsgLy8ge2E6IDQsIGI6IDUsIGM6IDh9XG4gIG9iajsgLy8ge2E6IDMsIGI6IDV9XG5cbiAgdmFyIGFyciA9IFsxLCAyLCAzXTtcbiAgdmFyIG9iaiA9IHthOiAzLCBiOiA1fTtcbiAgZXh0ZW5kKG9iaiwge2M6IGFycn0pOyAvLyB7YTogMywgYjogNSwgYzogWzEsIDIsIDNdfVxuICBhcnIucHVzaCg0KTtcbiAgb2JqOyAvLyB7YTogMywgYjogNSwgYzogWzEsIDIsIDMsIDRdfVxuXG4gIHZhciBhcnIgPSBbMSwgMiwgM107XG4gIHZhciBvYmogPSB7YTogMywgYjogNX07XG4gIGV4dGVuZCh0cnVlLCBvYmosIHtjOiBhcnJ9KTsgLy8ge2E6IDMsIGI6IDUsIGM6IFsxLCAyLCAzXX1cbiAgYXJyLnB1c2goNCk7XG4gIG9iajsgLy8ge2E6IDMsIGI6IDUsIGM6IFsxLCAyLCAzXX1cblxuICBleHRlbmQoe2E6IDQsIGI6IDV9KTsgLy8ge2E6IDQsIGI6IDV9XG4gIGV4dGVuZCh7YTogNCwgYjogNX0sIDMpOyB7YTogNCwgYjogNX1cbiAgZXh0ZW5kKHthOiA0LCBiOiA1fSwgdHJ1ZSk7IHthOiA0LCBiOiA1fVxuICBleHRlbmQoJ2hlbGxvJywge2E6IDQsIGI6IDV9KTsgLy8gdGhyb3dzXG4gIGV4dGVuZCgzLCB7YTogNCwgYjogNX0pOyAvLyB0aHJvd3NcbiovXG5cbmZ1bmN0aW9uIGV4dGVuZCgvKiBbZGVlcF0sIG9iajEsIG9iajIsIFtvYmpuXSAqLykge1xuICB2YXIgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcbiAgdmFyIGRlZXAgPSBmYWxzZTtcbiAgaWYgKHR5cGVvZiBhcmdzWzBdID09ICdib29sZWFuJykge1xuICAgIGRlZXAgPSBhcmdzLnNoaWZ0KCk7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IGFyZ3NbMF07XG4gIGlmIChpc1VuZXh0ZW5kYWJsZShyZXN1bHQpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdleHRlbmRlZSBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICB9XG4gIHZhciBleHRlbmRlcnMgPSBhcmdzLnNsaWNlKDEpO1xuICB2YXIgbGVuID0gZXh0ZW5kZXJzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgIHZhciBleHRlbmRlciA9IGV4dGVuZGVyc1tpXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gZXh0ZW5kZXIpIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXh0ZW5kZXIsIGtleSkpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gZXh0ZW5kZXJba2V5XTtcbiAgICAgICAgaWYgKGRlZXAgJiYgaXNDbG9uZWFibGUodmFsdWUpKSB7XG4gICAgICAgICAgdmFyIGJhc2UgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IFtdIDoge307XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSBleHRlbmQoXG4gICAgICAgICAgICB0cnVlLFxuICAgICAgICAgICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHJlc3VsdCwga2V5KSAmJiAhaXNVbmV4dGVuZGFibGUocmVzdWx0W2tleV0pXG4gICAgICAgICAgICAgID8gcmVzdWx0W2tleV1cbiAgICAgICAgICAgICAgOiBiYXNlLFxuICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gaXNDbG9uZWFibGUob2JqKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KG9iaikgfHwge30udG9TdHJpbmcuY2FsbChvYmopID09ICdbb2JqZWN0IE9iamVjdF0nO1xufVxuXG5mdW5jdGlvbiBpc1VuZXh0ZW5kYWJsZSh2YWwpIHtcbiAgcmV0dXJuICF2YWwgfHwgKHR5cGVvZiB2YWwgIT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCAhPSAnZnVuY3Rpb24nKTtcbn1cblxuZXhwb3J0IHtvYmplY3RFeHRlbmQgYXMgZGVmYXVsdH07XG4iLCJpbXBvcnQgJGV3Qkt5JGp1c3RleHRlbmQgZnJvbSBcImp1c3QtZXh0ZW5kXCI7XG5cbmZ1bmN0aW9uICRwYXJjZWwkaW50ZXJvcERlZmF1bHQoYSkge1xuICByZXR1cm4gYSAmJiBhLl9fZXNNb2R1bGUgPyBhLmRlZmF1bHQgOiBhO1xufVxuXG5jbGFzcyAkNDA0MGFjZmQ4NTg0MzM4ZCRleHBvcnQkMmUyYmNkODczOWFlMDM5IHtcbiAgICAvLyBBZGQgYW4gZXZlbnQgbGlzdGVuZXIgZm9yIGdpdmVuIGV2ZW50XG4gICAgb24oZXZlbnQsIGZuKSB7XG4gICAgICAgIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7XG4gICAgICAgIH07XG4gICAgICAgIC8vIENyZWF0ZSBuYW1lc3BhY2UgZm9yIHRoaXMgZXZlbnRcbiAgICAgICAgaWYgKCF0aGlzLl9jYWxsYmFja3NbZXZlbnRdKSB0aGlzLl9jYWxsYmFja3NbZXZlbnRdID0gW107XG4gICAgICAgIHRoaXMuX2NhbGxiYWNrc1tldmVudF0ucHVzaChmbik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBlbWl0KGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgICAgIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7XG4gICAgICAgIH07XG4gICAgICAgIGxldCBjYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3NbZXZlbnRdO1xuICAgICAgICBpZiAoY2FsbGJhY2tzKSBmb3IgKGxldCBjYWxsYmFjayBvZiBjYWxsYmFja3MpY2FsbGJhY2suYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIC8vIHRyaWdnZXIgYSBjb3JyZXNwb25kaW5nIERPTSBldmVudFxuICAgICAgICBpZiAodGhpcy5lbGVtZW50KSB0aGlzLmVsZW1lbnQuZGlzcGF0Y2hFdmVudCh0aGlzLm1ha2VFdmVudChcImRyb3B6b25lOlwiICsgZXZlbnQsIHtcbiAgICAgICAgICAgIGFyZ3M6IGFyZ3NcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgbWFrZUV2ZW50KGV2ZW50TmFtZSwgZGV0YWlsKSB7XG4gICAgICAgIGxldCBwYXJhbXMgPSB7XG4gICAgICAgICAgICBidWJibGVzOiB0cnVlLFxuICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGRldGFpbDogZGV0YWlsXG4gICAgICAgIH07XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93LkN1c3RvbUV2ZW50ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCBwYXJhbXMpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIElFIDExIHN1cHBvcnRcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9DdXN0b21FdmVudC9DdXN0b21FdmVudFxuICAgICAgICAgICAgdmFyIGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiQ3VzdG9tRXZlbnRcIik7XG4gICAgICAgICAgICBldnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwgcGFyYW1zLmJ1YmJsZXMsIHBhcmFtcy5jYW5jZWxhYmxlLCBwYXJhbXMuZGV0YWlsKTtcbiAgICAgICAgICAgIHJldHVybiBldnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gUmVtb3ZlIGV2ZW50IGxpc3RlbmVyIGZvciBnaXZlbiBldmVudC4gSWYgZm4gaXMgbm90IHByb3ZpZGVkLCBhbGwgZXZlbnRcbiAgICAvLyBsaXN0ZW5lcnMgZm9yIHRoYXQgZXZlbnQgd2lsbCBiZSByZW1vdmVkLiBJZiBuZWl0aGVyIGlzIHByb3ZpZGVkLCBhbGxcbiAgICAvLyBldmVudCBsaXN0ZW5lcnMgd2lsbCBiZSByZW1vdmVkLlxuICAgIG9mZihldmVudCwgZm4pIHtcbiAgICAgICAgaWYgKCF0aGlzLl9jYWxsYmFja3MgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2tzID0ge1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNwZWNpZmljIGV2ZW50XG4gICAgICAgIGxldCBjYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3NbZXZlbnRdO1xuICAgICAgICBpZiAoIWNhbGxiYWNrcykgcmV0dXJuIHRoaXM7XG4gICAgICAgIC8vIHJlbW92ZSBhbGwgaGFuZGxlcnNcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbZXZlbnRdO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVtb3ZlIHNwZWNpZmljIGhhbmRsZXJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBsZXQgY2FsbGJhY2sgPSBjYWxsYmFja3NbaV07XG4gICAgICAgICAgICBpZiAoY2FsbGJhY2sgPT09IGZuKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5cblxuXG52YXIgJGZkNjAzMWY4OGRjZTJlMzIkZXhwb3J0cyA9IHt9O1xuJGZkNjAzMWY4OGRjZTJlMzIkZXhwb3J0cyA9IFwiPGRpdiBjbGFzcz1cXFwiZHotcHJldmlldyBkei1maWxlLXByZXZpZXdcXFwiPlxcbiAgPGRpdiBjbGFzcz1cXFwiZHotaW1hZ2VcXFwiPjxpbWcgZGF0YS1kei10aHVtYm5haWw9XFxcIlxcXCI+PC9kaXY+XFxuICA8ZGl2IGNsYXNzPVxcXCJkei1kZXRhaWxzXFxcIj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiZHotc2l6ZVxcXCI+PHNwYW4gZGF0YS1kei1zaXplPVxcXCJcXFwiPjwvc3Bhbj48L2Rpdj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiZHotZmlsZW5hbWVcXFwiPjxzcGFuIGRhdGEtZHotbmFtZT1cXFwiXFxcIj48L3NwYW4+PC9kaXY+XFxuICA8L2Rpdj5cXG4gIDxkaXYgY2xhc3M9XFxcImR6LXByb2dyZXNzXFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImR6LXVwbG9hZFxcXCIgZGF0YS1kei11cGxvYWRwcm9ncmVzcz1cXFwiXFxcIj48L3NwYW4+XFxuICA8L2Rpdj5cXG4gIDxkaXYgY2xhc3M9XFxcImR6LWVycm9yLW1lc3NhZ2VcXFwiPjxzcGFuIGRhdGEtZHotZXJyb3JtZXNzYWdlPVxcXCJcXFwiPjwvc3Bhbj48L2Rpdj5cXG4gIDxkaXYgY2xhc3M9XFxcImR6LXN1Y2Nlc3MtbWFya1xcXCI+XFxuICAgIDxzdmcgd2lkdGg9XFxcIjU0XFxcIiBoZWlnaHQ9XFxcIjU0XFxcIiB2aWV3Qm94PVxcXCIwIDAgNTQgNTRcXFwiIGZpbGw9XFxcIndoaXRlXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiPlxcbiAgICAgIDxwYXRoIGQ9XFxcIk0xMC4yMDcxIDI5Ljc5MjlMMTQuMjkyOSAyNS43MDcxQzE0LjY4MzQgMjUuMzE2NiAxNS4zMTY2IDI1LjMxNjYgMTUuNzA3MSAyNS43MDcxTDIxLjI5MjkgMzEuMjkyOUMyMS42ODM0IDMxLjY4MzQgMjIuMzE2NiAzMS42ODM0IDIyLjcwNzEgMzEuMjkyOUwzOC4yOTI5IDE1LjcwNzFDMzguNjgzNCAxNS4zMTY2IDM5LjMxNjYgMTUuMzE2NiAzOS43MDcxIDE1LjcwNzFMNDMuNzkyOSAxOS43OTI5QzQ0LjE4MzQgMjAuMTgzNCA0NC4xODM0IDIwLjgxNjYgNDMuNzkyOSAyMS4yMDcxTDIyLjcwNzEgNDIuMjkyOUMyMi4zMTY2IDQyLjY4MzQgMjEuNjgzNCA0Mi42ODM0IDIxLjI5MjkgNDIuMjkyOUwxMC4yMDcxIDMxLjIwNzFDOS44MTY1OCAzMC44MTY2IDkuODE2NTggMzAuMTgzNCAxMC4yMDcxIDI5Ljc5MjlaXFxcIj48L3BhdGg+XFxuICAgIDwvc3ZnPlxcbiAgPC9kaXY+XFxuICA8ZGl2IGNsYXNzPVxcXCJkei1lcnJvci1tYXJrXFxcIj5cXG4gICAgPHN2ZyB3aWR0aD1cXFwiNTRcXFwiIGhlaWdodD1cXFwiNTRcXFwiIHZpZXdCb3g9XFxcIjAgMCA1NCA1NFxcXCIgZmlsbD1cXFwid2hpdGVcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+XFxuICAgICAgPHBhdGggZD1cXFwiTTI2LjI5MjkgMjAuMjkyOUwxOS4yMDcxIDEzLjIwNzFDMTguODE2NiAxMi44MTY2IDE4LjE4MzQgMTIuODE2NiAxNy43OTI5IDEzLjIwNzFMMTMuMjA3MSAxNy43OTI5QzEyLjgxNjYgMTguMTgzNCAxMi44MTY2IDE4LjgxNjYgMTMuMjA3MSAxOS4yMDcxTDIwLjI5MjkgMjYuMjkyOUMyMC42ODM0IDI2LjY4MzQgMjAuNjgzNCAyNy4zMTY2IDIwLjI5MjkgMjcuNzA3MUwxMy4yMDcxIDM0Ljc5MjlDMTIuODE2NiAzNS4xODM0IDEyLjgxNjYgMzUuODE2NiAxMy4yMDcxIDM2LjIwNzFMMTcuNzkyOSA0MC43OTI5QzE4LjE4MzQgNDEuMTgzNCAxOC44MTY2IDQxLjE4MzQgMTkuMjA3MSA0MC43OTI5TDI2LjI5MjkgMzMuNzA3MUMyNi42ODM0IDMzLjMxNjYgMjcuMzE2NiAzMy4zMTY2IDI3LjcwNzEgMzMuNzA3MUwzNC43OTI5IDQwLjc5MjlDMzUuMTgzNCA0MS4xODM0IDM1LjgxNjYgNDEuMTgzNCAzNi4yMDcxIDQwLjc5MjlMNDAuNzkyOSAzNi4yMDcxQzQxLjE4MzQgMzUuODE2NiA0MS4xODM0IDM1LjE4MzQgNDAuNzkyOSAzNC43OTI5TDMzLjcwNzEgMjcuNzA3MUMzMy4zMTY2IDI3LjMxNjYgMzMuMzE2NiAyNi42ODM0IDMzLjcwNzEgMjYuMjkyOUw0MC43OTI5IDE5LjIwNzFDNDEuMTgzNCAxOC44MTY2IDQxLjE4MzQgMTguMTgzNCA0MC43OTI5IDE3Ljc5MjlMMzYuMjA3MSAxMy4yMDcxQzM1LjgxNjYgMTIuODE2NiAzNS4xODM0IDEyLjgxNjYgMzQuNzkyOSAxMy4yMDcxTDI3LjcwNzEgMjAuMjkyOUMyNy4zMTY2IDIwLjY4MzQgMjYuNjgzNCAyMC42ODM0IDI2LjI5MjkgMjAuMjkyOVpcXFwiPjwvcGF0aD5cXG4gICAgPC9zdmc+XFxuICA8L2Rpdj5cXG48L2Rpdj5cXG5cIjtcblxuXG5sZXQgJDRjYTM2NzE4Mjc3NmY4MGIkdmFyJGRlZmF1bHRPcHRpb25zID0ge1xuICAgIC8qKlxuICAgKiBIYXMgdG8gYmUgc3BlY2lmaWVkIG9uIGVsZW1lbnRzIG90aGVyIHRoYW4gZm9ybSAob3Igd2hlbiB0aGUgZm9ybSBkb2Vzbid0XG4gICAqIGhhdmUgYW4gYGFjdGlvbmAgYXR0cmlidXRlKS5cbiAgICpcbiAgICogWW91IGNhbiBhbHNvIHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgY2FsbGVkIHdpdGggYGZpbGVzYCBhbmRcbiAgICogYGRhdGFCbG9ja3NgICBhbmQgbXVzdCByZXR1cm4gdGhlIHVybCBhcyBzdHJpbmcuXG4gICAqLyB1cmw6IG51bGwsXG4gICAgLyoqXG4gICAqIENhbiBiZSBjaGFuZ2VkIHRvIGBcInB1dFwiYCBpZiBuZWNlc3NhcnkuIFlvdSBjYW4gYWxzbyBwcm92aWRlIGEgZnVuY3Rpb25cbiAgICogdGhhdCB3aWxsIGJlIGNhbGxlZCB3aXRoIGBmaWxlc2AgYW5kIG11c3QgcmV0dXJuIHRoZSBtZXRob2QgKHNpbmNlIGB2My4xMi4wYCkuXG4gICAqLyBtZXRob2Q6IFwicG9zdFwiLFxuICAgIC8qKlxuICAgKiBXaWxsIGJlIHNldCBvbiB0aGUgWEhSZXF1ZXN0LlxuICAgKi8gd2l0aENyZWRlbnRpYWxzOiBmYWxzZSxcbiAgICAvKipcbiAgICogVGhlIHRpbWVvdXQgZm9yIHRoZSBYSFIgcmVxdWVzdHMgaW4gbWlsbGlzZWNvbmRzIChzaW5jZSBgdjQuNC4wYCkuXG4gICAqIElmIHNldCB0byBudWxsIG9yIDAsIG5vIHRpbWVvdXQgaXMgZ29pbmcgdG8gYmUgc2V0LlxuICAgKi8gdGltZW91dDogbnVsbCxcbiAgICAvKipcbiAgICogSG93IG1hbnkgZmlsZSB1cGxvYWRzIHRvIHByb2Nlc3MgaW4gcGFyYWxsZWwgKFNlZSB0aGVcbiAgICogRW5xdWV1aW5nIGZpbGUgdXBsb2FkcyBkb2N1bWVudGF0aW9uIHNlY3Rpb24gZm9yIG1vcmUgaW5mbylcbiAgICovIHBhcmFsbGVsVXBsb2FkczogMixcbiAgICAvKipcbiAgICogV2hldGhlciB0byBzZW5kIG11bHRpcGxlIGZpbGVzIGluIG9uZSByZXF1ZXN0LiBJZlxuICAgKiB0aGlzIGl0IHNldCB0byB0cnVlLCB0aGVuIHRoZSBmYWxsYmFjayBmaWxlIGlucHV0IGVsZW1lbnQgd2lsbFxuICAgKiBoYXZlIHRoZSBgbXVsdGlwbGVgIGF0dHJpYnV0ZSBhcyB3ZWxsLiBUaGlzIG9wdGlvbiB3aWxsXG4gICAqIGFsc28gdHJpZ2dlciBhZGRpdGlvbmFsIGV2ZW50cyAobGlrZSBgcHJvY2Vzc2luZ211bHRpcGxlYCkuIFNlZSB0aGUgZXZlbnRzXG4gICAqIGRvY3VtZW50YXRpb24gc2VjdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICovIHVwbG9hZE11bHRpcGxlOiBmYWxzZSxcbiAgICAvKipcbiAgICogV2hldGhlciB5b3Ugd2FudCBmaWxlcyB0byBiZSB1cGxvYWRlZCBpbiBjaHVua3MgdG8geW91ciBzZXJ2ZXIuIFRoaXMgY2FuJ3QgYmVcbiAgICogdXNlZCBpbiBjb21iaW5hdGlvbiB3aXRoIGB1cGxvYWRNdWx0aXBsZWAuXG4gICAqXG4gICAqIFNlZSBbY2h1bmtzVXBsb2FkZWRdKCNjb25maWctY2h1bmtzVXBsb2FkZWQpIGZvciB0aGUgY2FsbGJhY2sgdG8gZmluYWxpc2UgYW4gdXBsb2FkLlxuICAgKi8gY2h1bmtpbmc6IGZhbHNlLFxuICAgIC8qKlxuICAgKiBJZiBgY2h1bmtpbmdgIGlzIGVuYWJsZWQsIHRoaXMgZGVmaW5lcyB3aGV0aGVyICoqZXZlcnkqKiBmaWxlIHNob3VsZCBiZSBjaHVua2VkLFxuICAgKiBldmVuIGlmIHRoZSBmaWxlIHNpemUgaXMgYmVsb3cgY2h1bmtTaXplLiBUaGlzIG1lYW5zLCB0aGF0IHRoZSBhZGRpdGlvbmFsIGNodW5rXG4gICAqIGZvcm0gZGF0YSB3aWxsIGJlIHN1Ym1pdHRlZCBhbmQgdGhlIGBjaHVua3NVcGxvYWRlZGAgY2FsbGJhY2sgd2lsbCBiZSBpbnZva2VkLlxuICAgKi8gZm9yY2VDaHVua2luZzogZmFsc2UsXG4gICAgLyoqXG4gICAqIElmIGBjaHVua2luZ2AgaXMgYHRydWVgLCB0aGVuIHRoaXMgZGVmaW5lcyB0aGUgY2h1bmsgc2l6ZSBpbiBieXRlcy5cbiAgICovIGNodW5rU2l6ZTogMjA5NzE1MixcbiAgICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgaW5kaXZpZHVhbCBjaHVua3Mgb2YgYSBmaWxlIGFyZSBiZWluZyB1cGxvYWRlZCBzaW11bHRhbmVvdXNseS5cbiAgICovIHBhcmFsbGVsQ2h1bmtVcGxvYWRzOiBmYWxzZSxcbiAgICAvKipcbiAgICogV2hldGhlciBhIGNodW5rIHNob3VsZCBiZSByZXRyaWVkIGlmIGl0IGZhaWxzLlxuICAgKi8gcmV0cnlDaHVua3M6IGZhbHNlLFxuICAgIC8qKlxuICAgKiBJZiBgcmV0cnlDaHVua3NgIGlzIHRydWUsIGhvdyBtYW55IHRpbWVzIHNob3VsZCBpdCBiZSByZXRyaWVkLlxuICAgKi8gcmV0cnlDaHVua3NMaW1pdDogMyxcbiAgICAvKipcbiAgICogVGhlIG1heGltdW0gZmlsZXNpemUgKGluIE1pQikgdGhhdCBpcyBhbGxvd2VkIHRvIGJlIHVwbG9hZGVkLlxuICAgKi8gbWF4RmlsZXNpemU6IDI1NixcbiAgICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpbGUgcGFyYW0gdGhhdCBnZXRzIHRyYW5zZmVycmVkLlxuICAgKiAqKk5PVEUqKjogSWYgeW91IGhhdmUgdGhlIG9wdGlvbiAgYHVwbG9hZE11bHRpcGxlYCBzZXQgdG8gYHRydWVgLCB0aGVuXG4gICAqIERyb3B6b25lIHdpbGwgYXBwZW5kIGBbXWAgdG8gdGhlIG5hbWUuXG4gICAqLyBwYXJhbU5hbWU6IFwiZmlsZVwiLFxuICAgIC8qKlxuICAgKiBXaGV0aGVyIHRodW1ibmFpbHMgZm9yIGltYWdlcyBzaG91bGQgYmUgZ2VuZXJhdGVkXG4gICAqLyBjcmVhdGVJbWFnZVRodW1ibmFpbHM6IHRydWUsXG4gICAgLyoqXG4gICAqIEluIE1CLiBXaGVuIHRoZSBmaWxlbmFtZSBleGNlZWRzIHRoaXMgbGltaXQsIHRoZSB0aHVtYm5haWwgd2lsbCBub3QgYmUgZ2VuZXJhdGVkLlxuICAgKi8gbWF4VGh1bWJuYWlsRmlsZXNpemU6IDEwLFxuICAgIC8qKlxuICAgKiBJZiBgbnVsbGAsIHRoZSByYXRpbyBvZiB0aGUgaW1hZ2Ugd2lsbCBiZSB1c2VkIHRvIGNhbGN1bGF0ZSBpdC5cbiAgICovIHRodW1ibmFpbFdpZHRoOiAxMjAsXG4gICAgLyoqXG4gICAqIFRoZSBzYW1lIGFzIGB0aHVtYm5haWxXaWR0aGAuIElmIGJvdGggYXJlIG51bGwsIGltYWdlcyB3aWxsIG5vdCBiZSByZXNpemVkLlxuICAgKi8gdGh1bWJuYWlsSGVpZ2h0OiAxMjAsXG4gICAgLyoqXG4gICAqIEhvdyB0aGUgaW1hZ2VzIHNob3VsZCBiZSBzY2FsZWQgZG93biBpbiBjYXNlIGJvdGgsIGB0aHVtYm5haWxXaWR0aGAgYW5kIGB0aHVtYm5haWxIZWlnaHRgIGFyZSBwcm92aWRlZC5cbiAgICogQ2FuIGJlIGVpdGhlciBgY29udGFpbmAgb3IgYGNyb3BgLlxuICAgKi8gdGh1bWJuYWlsTWV0aG9kOiBcImNyb3BcIixcbiAgICAvKipcbiAgICogSWYgc2V0LCBpbWFnZXMgd2lsbCBiZSByZXNpemVkIHRvIHRoZXNlIGRpbWVuc2lvbnMgYmVmb3JlIGJlaW5nICoqdXBsb2FkZWQqKi5cbiAgICogSWYgb25seSBvbmUsIGByZXNpemVXaWR0aGAgKipvcioqIGByZXNpemVIZWlnaHRgIGlzIHByb3ZpZGVkLCB0aGUgb3JpZ2luYWwgYXNwZWN0XG4gICAqIHJhdGlvIG9mIHRoZSBmaWxlIHdpbGwgYmUgcHJlc2VydmVkLlxuICAgKlxuICAgKiBUaGUgYG9wdGlvbnMudHJhbnNmb3JtRmlsZWAgZnVuY3Rpb24gdXNlcyB0aGVzZSBvcHRpb25zLCBzbyBpZiB0aGUgYHRyYW5zZm9ybUZpbGVgIGZ1bmN0aW9uXG4gICAqIGlzIG92ZXJyaWRkZW4sIHRoZXNlIG9wdGlvbnMgZG9uJ3QgZG8gYW55dGhpbmcuXG4gICAqLyByZXNpemVXaWR0aDogbnVsbCxcbiAgICAvKipcbiAgICogU2VlIGByZXNpemVXaWR0aGAuXG4gICAqLyByZXNpemVIZWlnaHQ6IG51bGwsXG4gICAgLyoqXG4gICAqIFRoZSBtaW1lIHR5cGUgb2YgdGhlIHJlc2l6ZWQgaW1hZ2UgKGJlZm9yZSBpdCBnZXRzIHVwbG9hZGVkIHRvIHRoZSBzZXJ2ZXIpLlxuICAgKiBJZiBgbnVsbGAgdGhlIG9yaWdpbmFsIG1pbWUgdHlwZSB3aWxsIGJlIHVzZWQuIFRvIGZvcmNlIGpwZWcsIGZvciBleGFtcGxlLCB1c2UgYGltYWdlL2pwZWdgLlxuICAgKiBTZWUgYHJlc2l6ZVdpZHRoYCBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICovIHJlc2l6ZU1pbWVUeXBlOiBudWxsLFxuICAgIC8qKlxuICAgKiBUaGUgcXVhbGl0eSBvZiB0aGUgcmVzaXplZCBpbWFnZXMuIFNlZSBgcmVzaXplV2lkdGhgLlxuICAgKi8gcmVzaXplUXVhbGl0eTogMC44LFxuICAgIC8qKlxuICAgKiBIb3cgdGhlIGltYWdlcyBzaG91bGQgYmUgc2NhbGVkIGRvd24gaW4gY2FzZSBib3RoLCBgcmVzaXplV2lkdGhgIGFuZCBgcmVzaXplSGVpZ2h0YCBhcmUgcHJvdmlkZWQuXG4gICAqIENhbiBiZSBlaXRoZXIgYGNvbnRhaW5gIG9yIGBjcm9wYC5cbiAgICovIHJlc2l6ZU1ldGhvZDogXCJjb250YWluXCIsXG4gICAgLyoqXG4gICAqIFRoZSBiYXNlIHRoYXQgaXMgdXNlZCB0byBjYWxjdWxhdGUgdGhlICoqZGlzcGxheWVkKiogZmlsZXNpemUuIFlvdSBjYW5cbiAgICogY2hhbmdlIHRoaXMgdG8gMTAyNCBpZiB5b3Ugd291bGQgcmF0aGVyIGRpc3BsYXkga2liaWJ5dGVzLCBtZWJpYnl0ZXMsXG4gICAqIGV0Yy4uLiAxMDI0IGlzIHRlY2huaWNhbGx5IGluY29ycmVjdCwgYmVjYXVzZSBgMTAyNCBieXRlc2AgYXJlIGAxIGtpYmlieXRlYFxuICAgKiBub3QgYDEga2lsb2J5dGVgLiBZb3UgY2FuIGNoYW5nZSB0aGlzIHRvIGAxMDI0YCBpZiB5b3UgZG9uJ3QgY2FyZSBhYm91dFxuICAgKiB2YWxpZGl0eS5cbiAgICovIGZpbGVzaXplQmFzZTogMTAwMCxcbiAgICAvKipcbiAgICogSWYgbm90IGBudWxsYCBkZWZpbmVzIGhvdyBtYW55IGZpbGVzIHRoaXMgRHJvcHpvbmUgaGFuZGxlcy4gSWYgaXQgZXhjZWVkcyxcbiAgICogdGhlIGV2ZW50IGBtYXhmaWxlc2V4Y2VlZGVkYCB3aWxsIGJlIGNhbGxlZC4gVGhlIGRyb3B6b25lIGVsZW1lbnQgZ2V0cyB0aGVcbiAgICogY2xhc3MgYGR6LW1heC1maWxlcy1yZWFjaGVkYCBhY2NvcmRpbmdseSBzbyB5b3UgY2FuIHByb3ZpZGUgdmlzdWFsXG4gICAqIGZlZWRiYWNrLlxuICAgKi8gbWF4RmlsZXM6IG51bGwsXG4gICAgLyoqXG4gICAqIEFuIG9wdGlvbmFsIG9iamVjdCB0byBzZW5kIGFkZGl0aW9uYWwgaGVhZGVycyB0byB0aGUgc2VydmVyLiBFZzpcbiAgICogYHsgXCJNeS1Bd2Vzb21lLUhlYWRlclwiOiBcImhlYWRlciB2YWx1ZVwiIH1gXG4gICAqLyBoZWFkZXJzOiBudWxsLFxuICAgIC8qKlxuICAgKiBTaG91bGQgdGhlIGRlZmF1bHQgaGVhZGVycyBiZSBzZXQgb3Igbm90P1xuICAgKiBBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24gPC0gZm9yIHJlcXVlc3RpbmcganNvbiByZXNwb25zZVxuICAgKiBDYWNoZS1Db250cm9sOiBuby1jYWNoZSA8LSBSZXF1ZXN0IHNob3VsZG50IGJlIGNhY2hlZFxuICAgKiBYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdCA8LSBXZSBzZW50IHRoZSByZXF1ZXN0IHZpYSBYTUxIdHRwUmVxdWVzdFxuICAgKi8gZGVmYXVsdEhlYWRlcnM6IHRydWUsXG4gICAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGRyb3B6b25lIGVsZW1lbnQgaXRzZWxmIHdpbGwgYmUgY2xpY2thYmxlLCBpZiBgZmFsc2VgXG4gICAqIG5vdGhpbmcgd2lsbCBiZSBjbGlja2FibGUuXG4gICAqXG4gICAqIFlvdSBjYW4gYWxzbyBwYXNzIGFuIEhUTUwgZWxlbWVudCwgYSBDU1Mgc2VsZWN0b3IgKGZvciBtdWx0aXBsZSBlbGVtZW50cylcbiAgICogb3IgYW4gYXJyYXkgb2YgdGhvc2UuIEluIHRoYXQgY2FzZSwgYWxsIG9mIHRob3NlIGVsZW1lbnRzIHdpbGwgdHJpZ2dlciBhblxuICAgKiB1cGxvYWQgd2hlbiBjbGlja2VkLlxuICAgKi8gY2xpY2thYmxlOiB0cnVlLFxuICAgIC8qKlxuICAgKiBXaGV0aGVyIGhpZGRlbiBmaWxlcyBpbiBkaXJlY3RvcmllcyBzaG91bGQgYmUgaWdub3JlZC5cbiAgICovIGlnbm9yZUhpZGRlbkZpbGVzOiB0cnVlLFxuICAgIC8qKlxuICAgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiBgYWNjZXB0YCBjaGVja3MgdGhlIGZpbGUncyBtaW1lIHR5cGUgb3JcbiAgICogZXh0ZW5zaW9uIGFnYWluc3QgdGhpcyBsaXN0LiBUaGlzIGlzIGEgY29tbWEgc2VwYXJhdGVkIGxpc3Qgb2YgbWltZVxuICAgKiB0eXBlcyBvciBmaWxlIGV4dGVuc2lvbnMuXG4gICAqXG4gICAqIEVnLjogYGltYWdlLyosYXBwbGljYXRpb24vcGRmLC5wc2RgXG4gICAqXG4gICAqIElmIHRoZSBEcm9wem9uZSBpcyBgY2xpY2thYmxlYCB0aGlzIG9wdGlvbiB3aWxsIGFsc28gYmUgdXNlZCBhc1xuICAgKiBbYGFjY2VwdGBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvSFRNTC9FbGVtZW50L2lucHV0I2F0dHItYWNjZXB0KVxuICAgKiBwYXJhbWV0ZXIgb24gdGhlIGhpZGRlbiBmaWxlIGlucHV0IGFzIHdlbGwuXG4gICAqLyBhY2NlcHRlZEZpbGVzOiBudWxsLFxuICAgIC8qKlxuICAgKiAqKkRlcHJlY2F0ZWQhKipcbiAgICogVXNlIGFjY2VwdGVkRmlsZXMgaW5zdGVhZC5cbiAgICovIGFjY2VwdGVkTWltZVR5cGVzOiBudWxsLFxuICAgIC8qKlxuICAgKiBJZiBmYWxzZSwgZmlsZXMgd2lsbCBiZSBhZGRlZCB0byB0aGUgcXVldWUgYnV0IHRoZSBxdWV1ZSB3aWxsIG5vdCBiZVxuICAgKiBwcm9jZXNzZWQgYXV0b21hdGljYWxseS5cbiAgICogVGhpcyBjYW4gYmUgdXNlZnVsIGlmIHlvdSBuZWVkIHNvbWUgYWRkaXRpb25hbCB1c2VyIGlucHV0IGJlZm9yZSBzZW5kaW5nXG4gICAqIGZpbGVzIChvciBpZiB5b3Ugd2FudCB3YW50IGFsbCBmaWxlcyBzZW50IGF0IG9uY2UpLlxuICAgKiBJZiB5b3UncmUgcmVhZHkgdG8gc2VuZCB0aGUgZmlsZSBzaW1wbHkgY2FsbCBgbXlEcm9wem9uZS5wcm9jZXNzUXVldWUoKWAuXG4gICAqXG4gICAqIFNlZSB0aGUgW2VucXVldWluZyBmaWxlIHVwbG9hZHNdKCNlbnF1ZXVpbmctZmlsZS11cGxvYWRzKSBkb2N1bWVudGF0aW9uXG4gICAqIHNlY3Rpb24gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gICAqLyBhdXRvUHJvY2Vzc1F1ZXVlOiB0cnVlLFxuICAgIC8qKlxuICAgKiBJZiBmYWxzZSwgZmlsZXMgYWRkZWQgdG8gdGhlIGRyb3B6b25lIHdpbGwgbm90IGJlIHF1ZXVlZCBieSBkZWZhdWx0LlxuICAgKiBZb3UnbGwgaGF2ZSB0byBjYWxsIGBlbnF1ZXVlRmlsZShmaWxlKWAgbWFudWFsbHkuXG4gICAqLyBhdXRvUXVldWU6IHRydWUsXG4gICAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhpcyB3aWxsIGFkZCBhIGxpbmsgdG8gZXZlcnkgZmlsZSBwcmV2aWV3IHRvIHJlbW92ZSBvciBjYW5jZWwgKGlmXG4gICAqIGFscmVhZHkgdXBsb2FkaW5nKSB0aGUgZmlsZS4gVGhlIGBkaWN0Q2FuY2VsVXBsb2FkYCwgYGRpY3RDYW5jZWxVcGxvYWRDb25maXJtYXRpb25gXG4gICAqIGFuZCBgZGljdFJlbW92ZUZpbGVgIG9wdGlvbnMgYXJlIHVzZWQgZm9yIHRoZSB3b3JkaW5nLlxuICAgKi8gYWRkUmVtb3ZlTGlua3M6IGZhbHNlLFxuICAgIC8qKlxuICAgKiBEZWZpbmVzIHdoZXJlIHRvIGRpc3BsYXkgdGhlIGZpbGUgcHJldmlld3Mg4oCTIGlmIGBudWxsYCB0aGVcbiAgICogRHJvcHpvbmUgZWxlbWVudCBpdHNlbGYgaXMgdXNlZC4gQ2FuIGJlIGEgcGxhaW4gYEhUTUxFbGVtZW50YCBvciBhIENTU1xuICAgKiBzZWxlY3Rvci4gVGhlIGVsZW1lbnQgc2hvdWxkIGhhdmUgdGhlIGBkcm9wem9uZS1wcmV2aWV3c2AgY2xhc3Mgc29cbiAgICogdGhlIHByZXZpZXdzIGFyZSBkaXNwbGF5ZWQgcHJvcGVybHkuXG4gICAqLyBwcmV2aWV3c0NvbnRhaW5lcjogbnVsbCxcbiAgICAvKipcbiAgICogU2V0IHRoaXMgdG8gYHRydWVgIGlmIHlvdSBkb24ndCB3YW50IHByZXZpZXdzIHRvIGJlIHNob3duLlxuICAgKi8gZGlzYWJsZVByZXZpZXdzOiBmYWxzZSxcbiAgICAvKipcbiAgICogVGhpcyBpcyB0aGUgZWxlbWVudCB0aGUgaGlkZGVuIGlucHV0IGZpZWxkICh3aGljaCBpcyB1c2VkIHdoZW4gY2xpY2tpbmcgb24gdGhlXG4gICAqIGRyb3B6b25lIHRvIHRyaWdnZXIgZmlsZSBzZWxlY3Rpb24pIHdpbGwgYmUgYXBwZW5kZWQgdG8uIFRoaXMgbWlnaHRcbiAgICogYmUgaW1wb3J0YW50IGluIGNhc2UgeW91IHVzZSBmcmFtZXdvcmtzIHRvIHN3aXRjaCB0aGUgY29udGVudCBvZiB5b3VyIHBhZ2UuXG4gICAqXG4gICAqIENhbiBiZSBhIHNlbGVjdG9yIHN0cmluZywgb3IgYW4gZWxlbWVudCBkaXJlY3RseS5cbiAgICovIGhpZGRlbklucHV0Q29udGFpbmVyOiBcImJvZHlcIixcbiAgICAvKipcbiAgICogSWYgbnVsbCwgbm8gY2FwdHVyZSB0eXBlIHdpbGwgYmUgc3BlY2lmaWVkXG4gICAqIElmIGNhbWVyYSwgbW9iaWxlIGRldmljZXMgd2lsbCBza2lwIHRoZSBmaWxlIHNlbGVjdGlvbiBhbmQgY2hvb3NlIGNhbWVyYVxuICAgKiBJZiBtaWNyb3Bob25lLCBtb2JpbGUgZGV2aWNlcyB3aWxsIHNraXAgdGhlIGZpbGUgc2VsZWN0aW9uIGFuZCBjaG9vc2UgdGhlIG1pY3JvcGhvbmVcbiAgICogSWYgY2FtY29yZGVyLCBtb2JpbGUgZGV2aWNlcyB3aWxsIHNraXAgdGhlIGZpbGUgc2VsZWN0aW9uIGFuZCBjaG9vc2UgdGhlIGNhbWVyYSBpbiB2aWRlbyBtb2RlXG4gICAqIE9uIGFwcGxlIGRldmljZXMgbXVsdGlwbGUgbXVzdCBiZSBzZXQgdG8gZmFsc2UuICBBY2NlcHRlZEZpbGVzIG1heSBuZWVkIHRvXG4gICAqIGJlIHNldCB0byBhbiBhcHByb3ByaWF0ZSBtaW1lIHR5cGUgKGUuZy4gXCJpbWFnZS8qXCIsIFwiYXVkaW8vKlwiLCBvciBcInZpZGVvLypcIikuXG4gICAqLyBjYXB0dXJlOiBudWxsLFxuICAgIC8qKlxuICAgKiAqKkRlcHJlY2F0ZWQqKi4gVXNlIGByZW5hbWVGaWxlYCBpbnN0ZWFkLlxuICAgKi8gcmVuYW1lRmlsZW5hbWU6IG51bGwsXG4gICAgLyoqXG4gICAqIEEgZnVuY3Rpb24gdGhhdCBpcyBpbnZva2VkIGJlZm9yZSB0aGUgZmlsZSBpcyB1cGxvYWRlZCB0byB0aGUgc2VydmVyIGFuZCByZW5hbWVzIHRoZSBmaWxlLlxuICAgKiBUaGlzIGZ1bmN0aW9uIGdldHMgdGhlIGBGaWxlYCBhcyBhcmd1bWVudCBhbmQgY2FuIHVzZSB0aGUgYGZpbGUubmFtZWAuIFRoZSBhY3R1YWwgbmFtZSBvZiB0aGVcbiAgICogZmlsZSB0aGF0IGdldHMgdXNlZCBkdXJpbmcgdGhlIHVwbG9hZCBjYW4gYmUgYWNjZXNzZWQgdGhyb3VnaCBgZmlsZS51cGxvYWQuZmlsZW5hbWVgLlxuICAgKi8gcmVuYW1lRmlsZTogbnVsbCxcbiAgICAvKipcbiAgICogSWYgYHRydWVgIHRoZSBmYWxsYmFjayB3aWxsIGJlIGZvcmNlZC4gVGhpcyBpcyB2ZXJ5IHVzZWZ1bCB0byB0ZXN0IHlvdXIgc2VydmVyXG4gICAqIGltcGxlbWVudGF0aW9ucyBmaXJzdCBhbmQgbWFrZSBzdXJlIHRoYXQgZXZlcnl0aGluZyB3b3JrcyBhc1xuICAgKiBleHBlY3RlZCB3aXRob3V0IGRyb3B6b25lIGlmIHlvdSBleHBlcmllbmNlIHByb2JsZW1zLCBhbmQgdG8gdGVzdFxuICAgKiBob3cgeW91ciBmYWxsYmFja3Mgd2lsbCBsb29rLlxuICAgKi8gZm9yY2VGYWxsYmFjazogZmFsc2UsXG4gICAgLyoqXG4gICAqIFRoZSB0ZXh0IHVzZWQgYmVmb3JlIGFueSBmaWxlcyBhcmUgZHJvcHBlZC5cbiAgICovIGRpY3REZWZhdWx0TWVzc2FnZTogXCJEcm9wIGZpbGVzIGhlcmUgdG8gdXBsb2FkXCIsXG4gICAgLyoqXG4gICAqIFRoZSB0ZXh0IHRoYXQgcmVwbGFjZXMgdGhlIGRlZmF1bHQgbWVzc2FnZSB0ZXh0IGl0IHRoZSBicm93c2VyIGlzIG5vdCBzdXBwb3J0ZWQuXG4gICAqLyBkaWN0RmFsbGJhY2tNZXNzYWdlOiBcIllvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGRyYWcnbidkcm9wIGZpbGUgdXBsb2Fkcy5cIixcbiAgICAvKipcbiAgICogVGhlIHRleHQgdGhhdCB3aWxsIGJlIGFkZGVkIGJlZm9yZSB0aGUgZmFsbGJhY2sgZm9ybS5cbiAgICogSWYgeW91IHByb3ZpZGUgYSAgZmFsbGJhY2sgZWxlbWVudCB5b3Vyc2VsZiwgb3IgaWYgdGhpcyBvcHRpb24gaXMgYG51bGxgIHRoaXMgd2lsbFxuICAgKiBiZSBpZ25vcmVkLlxuICAgKi8gZGljdEZhbGxiYWNrVGV4dDogXCJQbGVhc2UgdXNlIHRoZSBmYWxsYmFjayBmb3JtIGJlbG93IHRvIHVwbG9hZCB5b3VyIGZpbGVzIGxpa2UgaW4gdGhlIG9sZGVuIGRheXMuXCIsXG4gICAgLyoqXG4gICAqIElmIHRoZSBmaWxlc2l6ZSBpcyB0b28gYmlnLlxuICAgKiBge3tmaWxlc2l6ZX19YCBhbmQgYHt7bWF4RmlsZXNpemV9fWAgd2lsbCBiZSByZXBsYWNlZCB3aXRoIHRoZSByZXNwZWN0aXZlIGNvbmZpZ3VyYXRpb24gdmFsdWVzLlxuICAgKi8gZGljdEZpbGVUb29CaWc6IFwiRmlsZSBpcyB0b28gYmlnICh7e2ZpbGVzaXplfX1NaUIpLiBNYXggZmlsZXNpemU6IHt7bWF4RmlsZXNpemV9fU1pQi5cIixcbiAgICAvKipcbiAgICogSWYgdGhlIGZpbGUgZG9lc24ndCBtYXRjaCB0aGUgZmlsZSB0eXBlLlxuICAgKi8gZGljdEludmFsaWRGaWxlVHlwZTogXCJZb3UgY2FuJ3QgdXBsb2FkIGZpbGVzIG9mIHRoaXMgdHlwZS5cIixcbiAgICAvKipcbiAgICogSWYgdGhlIHNlcnZlciByZXNwb25zZSB3YXMgaW52YWxpZC5cbiAgICogYHt7c3RhdHVzQ29kZX19YCB3aWxsIGJlIHJlcGxhY2VkIHdpdGggdGhlIHNlcnZlcnMgc3RhdHVzIGNvZGUuXG4gICAqLyBkaWN0UmVzcG9uc2VFcnJvcjogXCJTZXJ2ZXIgcmVzcG9uZGVkIHdpdGgge3tzdGF0dXNDb2RlfX0gY29kZS5cIixcbiAgICAvKipcbiAgICogSWYgYGFkZFJlbW92ZUxpbmtzYCBpcyB0cnVlLCB0aGUgdGV4dCB0byBiZSB1c2VkIGZvciB0aGUgY2FuY2VsIHVwbG9hZCBsaW5rLlxuICAgKi8gZGljdENhbmNlbFVwbG9hZDogXCJDYW5jZWwgdXBsb2FkXCIsXG4gICAgLyoqXG4gICAqIFRoZSB0ZXh0IHRoYXQgaXMgZGlzcGxheWVkIGlmIGFuIHVwbG9hZCB3YXMgbWFudWFsbHkgY2FuY2VsZWRcbiAgICovIGRpY3RVcGxvYWRDYW5jZWxlZDogXCJVcGxvYWQgY2FuY2VsZWQuXCIsXG4gICAgLyoqXG4gICAqIElmIGBhZGRSZW1vdmVMaW5rc2AgaXMgdHJ1ZSwgdGhlIHRleHQgdG8gYmUgdXNlZCBmb3IgY29uZmlybWF0aW9uIHdoZW4gY2FuY2VsbGluZyB1cGxvYWQuXG4gICAqLyBkaWN0Q2FuY2VsVXBsb2FkQ29uZmlybWF0aW9uOiBcIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjYW5jZWwgdGhpcyB1cGxvYWQ/XCIsXG4gICAgLyoqXG4gICAqIElmIGBhZGRSZW1vdmVMaW5rc2AgaXMgdHJ1ZSwgdGhlIHRleHQgdG8gYmUgdXNlZCB0byByZW1vdmUgYSBmaWxlLlxuICAgKi8gZGljdFJlbW92ZUZpbGU6IFwiUmVtb3ZlIGZpbGVcIixcbiAgICAvKipcbiAgICogSWYgdGhpcyBpcyBub3QgbnVsbCwgdGhlbiB0aGUgdXNlciB3aWxsIGJlIHByb21wdGVkIGJlZm9yZSByZW1vdmluZyBhIGZpbGUuXG4gICAqLyBkaWN0UmVtb3ZlRmlsZUNvbmZpcm1hdGlvbjogbnVsbCxcbiAgICAvKipcbiAgICogRGlzcGxheWVkIGlmIGBtYXhGaWxlc2AgaXMgc3QgYW5kIGV4Y2VlZGVkLlxuICAgKiBUaGUgc3RyaW5nIGB7e21heEZpbGVzfX1gIHdpbGwgYmUgcmVwbGFjZWQgYnkgdGhlIGNvbmZpZ3VyYXRpb24gdmFsdWUuXG4gICAqLyBkaWN0TWF4RmlsZXNFeGNlZWRlZDogXCJZb3UgY2FuIG5vdCB1cGxvYWQgYW55IG1vcmUgZmlsZXMuXCIsXG4gICAgLyoqXG4gICAqIEFsbG93cyB5b3UgdG8gdHJhbnNsYXRlIHRoZSBkaWZmZXJlbnQgdW5pdHMuIFN0YXJ0aW5nIHdpdGggYHRiYCBmb3IgdGVyYWJ5dGVzIGFuZCBnb2luZyBkb3duIHRvXG4gICAqIGBiYCBmb3IgYnl0ZXMuXG4gICAqLyBkaWN0RmlsZVNpemVVbml0czoge1xuICAgICAgICB0YjogXCJUQlwiLFxuICAgICAgICBnYjogXCJHQlwiLFxuICAgICAgICBtYjogXCJNQlwiLFxuICAgICAgICBrYjogXCJLQlwiLFxuICAgICAgICBiOiBcImJcIlxuICAgIH0sXG4gICAgLyoqXG4gICAqIENhbGxlZCB3aGVuIGRyb3B6b25lIGluaXRpYWxpemVkXG4gICAqIFlvdSBjYW4gYWRkIGV2ZW50IGxpc3RlbmVycyBoZXJlXG4gICAqLyBpbml0ICgpIHtcbiAgICB9LFxuICAgIC8qKlxuICAgKiBDYW4gYmUgYW4gKipvYmplY3QqKiBvZiBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgdG8gdHJhbnNmZXIgdG8gdGhlIHNlcnZlciwgKipvcioqIGEgYEZ1bmN0aW9uYFxuICAgKiB0aGF0IGdldHMgaW52b2tlZCB3aXRoIHRoZSBgZmlsZXNgLCBgeGhyYCBhbmQsIGlmIGl0J3MgYSBjaHVua2VkIHVwbG9hZCwgYGNodW5rYCBhcmd1bWVudHMuIEluIGNhc2VcbiAgICogb2YgYSBmdW5jdGlvbiwgdGhpcyBuZWVkcyB0byByZXR1cm4gYSBtYXAuXG4gICAqXG4gICAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGRvZXMgbm90aGluZyBmb3Igbm9ybWFsIHVwbG9hZHMsIGJ1dCBhZGRzIHJlbGV2YW50IGluZm9ybWF0aW9uIGZvclxuICAgKiBjaHVua2VkIHVwbG9hZHMuXG4gICAqXG4gICAqIFRoaXMgaXMgdGhlIHNhbWUgYXMgYWRkaW5nIGhpZGRlbiBpbnB1dCBmaWVsZHMgaW4gdGhlIGZvcm0gZWxlbWVudC5cbiAgICovIHBhcmFtcyAoZmlsZXMsIHhociwgY2h1bmspIHtcbiAgICAgICAgaWYgKGNodW5rKSByZXR1cm4ge1xuICAgICAgICAgICAgZHp1dWlkOiBjaHVuay5maWxlLnVwbG9hZC51dWlkLFxuICAgICAgICAgICAgZHpjaHVua2luZGV4OiBjaHVuay5pbmRleCxcbiAgICAgICAgICAgIGR6dG90YWxmaWxlc2l6ZTogY2h1bmsuZmlsZS5zaXplLFxuICAgICAgICAgICAgZHpjaHVua3NpemU6IHRoaXMub3B0aW9ucy5jaHVua1NpemUsXG4gICAgICAgICAgICBkenRvdGFsY2h1bmtjb3VudDogY2h1bmsuZmlsZS51cGxvYWQudG90YWxDaHVua0NvdW50LFxuICAgICAgICAgICAgZHpjaHVua2J5dGVvZmZzZXQ6IGNodW5rLmluZGV4ICogdGhpcy5vcHRpb25zLmNodW5rU2l6ZVxuICAgICAgICB9O1xuICAgIH0sXG4gICAgLyoqXG4gICAqIEEgZnVuY3Rpb24gdGhhdCBnZXRzIGEgW2ZpbGVdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvRE9NL0ZpbGUpXG4gICAqIGFuZCBhIGBkb25lYCBmdW5jdGlvbiBhcyBwYXJhbWV0ZXJzLlxuICAgKlxuICAgKiBJZiB0aGUgZG9uZSBmdW5jdGlvbiBpcyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCB0aGUgZmlsZSBpcyBcImFjY2VwdGVkXCIgYW5kIHdpbGxcbiAgICogYmUgcHJvY2Vzc2VkLiBJZiB5b3UgcGFzcyBhbiBlcnJvciBtZXNzYWdlLCB0aGUgZmlsZSBpcyByZWplY3RlZCwgYW5kIHRoZSBlcnJvclxuICAgKiBtZXNzYWdlIHdpbGwgYmUgZGlzcGxheWVkLlxuICAgKiBUaGlzIGZ1bmN0aW9uIHdpbGwgbm90IGJlIGNhbGxlZCBpZiB0aGUgZmlsZSBpcyB0b28gYmlnIG9yIGRvZXNuJ3QgbWF0Y2ggdGhlIG1pbWUgdHlwZXMuXG4gICAqLyBhY2NlcHQgKGZpbGUsIGRvbmUpIHtcbiAgICAgICAgcmV0dXJuIGRvbmUoKTtcbiAgICB9LFxuICAgIC8qKlxuICAgKiBUaGUgY2FsbGJhY2sgdGhhdCB3aWxsIGJlIGludm9rZWQgd2hlbiBhbGwgY2h1bmtzIGhhdmUgYmVlbiB1cGxvYWRlZCBmb3IgYSBmaWxlLlxuICAgKiBJdCBnZXRzIHRoZSBmaWxlIGZvciB3aGljaCB0aGUgY2h1bmtzIGhhdmUgYmVlbiB1cGxvYWRlZCBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyLFxuICAgKiBhbmQgdGhlIGBkb25lYCBmdW5jdGlvbiBhcyBzZWNvbmQuIGBkb25lKClgIG5lZWRzIHRvIGJlIGludm9rZWQgd2hlbiBldmVyeXRoaW5nXG4gICAqIG5lZWRlZCB0byBmaW5pc2ggdGhlIHVwbG9hZCBwcm9jZXNzIGlzIGRvbmUuXG4gICAqLyBjaHVua3NVcGxvYWRlZDogZnVuY3Rpb24oZmlsZSwgZG9uZSkge1xuICAgICAgICBkb25lKCk7XG4gICAgfSxcbiAgICAvKipcbiAgICogU2VuZHMgdGhlIGZpbGUgYXMgYmluYXJ5IGJsb2IgaW4gYm9keSBpbnN0ZWFkIG9mIGZvcm0gZGF0YS5cbiAgICogSWYgdGhpcyBpcyBzZXQsIHRoZSBgcGFyYW1zYCBvcHRpb24gd2lsbCBiZSBpZ25vcmVkLlxuICAgKiBJdCdzIGFuIGVycm9yIHRvIHNldCB0aGlzIHRvIGB0cnVlYCBhbG9uZyB3aXRoIGB1cGxvYWRNdWx0aXBsZWAgc2luY2VcbiAgICogbXVsdGlwbGUgZmlsZXMgY2Fubm90IGJlIGluIGEgc2luZ2xlIGJpbmFyeSBib2R5LlxuICAgKi8gYmluYXJ5Qm9keTogZmFsc2UsXG4gICAgLyoqXG4gICAqIEdldHMgY2FsbGVkIHdoZW4gdGhlIGJyb3dzZXIgaXMgbm90IHN1cHBvcnRlZC5cbiAgICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gc2hvd3MgdGhlIGZhbGxiYWNrIGlucHV0IGZpZWxkIGFuZCBhZGRzXG4gICAqIGEgdGV4dC5cbiAgICovIGZhbGxiYWNrICgpIHtcbiAgICAgICAgLy8gVGhpcyBjb2RlIHNob3VsZCBwYXNzIGluIElFNy4uLiA6KFxuICAgICAgICBsZXQgbWVzc2FnZUVsZW1lbnQ7XG4gICAgICAgIHRoaXMuZWxlbWVudC5jbGFzc05hbWUgPSBgJHt0aGlzLmVsZW1lbnQuY2xhc3NOYW1lfSBkei1icm93c2VyLW5vdC1zdXBwb3J0ZWRgO1xuICAgICAgICBmb3IgKGxldCBjaGlsZCBvZiB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIikpaWYgKC8oXnwgKWR6LW1lc3NhZ2UoJHwgKS8udGVzdChjaGlsZC5jbGFzc05hbWUpKSB7XG4gICAgICAgICAgICBtZXNzYWdlRWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgICAgY2hpbGQuY2xhc3NOYW1lID0gXCJkei1tZXNzYWdlXCI7IC8vIFJlbW92ZXMgdGhlICdkei1kZWZhdWx0JyBjbGFzc1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFtZXNzYWdlRWxlbWVudCkge1xuICAgICAgICAgICAgbWVzc2FnZUVsZW1lbnQgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmNyZWF0ZUVsZW1lbnQoJzxkaXYgY2xhc3M9XCJkei1tZXNzYWdlXCI+PHNwYW4+PC9zcGFuPjwvZGl2PicpO1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKG1lc3NhZ2VFbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgc3BhbiA9IG1lc3NhZ2VFbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic3BhblwiKVswXTtcbiAgICAgICAgaWYgKHNwYW4pIHtcbiAgICAgICAgICAgIGlmIChzcGFuLnRleHRDb250ZW50ICE9IG51bGwpIHNwYW4udGV4dENvbnRlbnQgPSB0aGlzLm9wdGlvbnMuZGljdEZhbGxiYWNrTWVzc2FnZTtcbiAgICAgICAgICAgIGVsc2UgaWYgKHNwYW4uaW5uZXJUZXh0ICE9IG51bGwpIHNwYW4uaW5uZXJUZXh0ID0gdGhpcy5vcHRpb25zLmRpY3RGYWxsYmFja01lc3NhZ2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmdldEZhbGxiYWNrRm9ybSgpKTtcbiAgICB9LFxuICAgIC8qKlxuICAgKiBHZXRzIGNhbGxlZCB0byBjYWxjdWxhdGUgdGhlIHRodW1ibmFpbCBkaW1lbnNpb25zLlxuICAgKlxuICAgKiBJdCBnZXRzIGBmaWxlYCwgYHdpZHRoYCBhbmQgYGhlaWdodGAgKGJvdGggbWF5IGJlIGBudWxsYCkgYXMgcGFyYW1ldGVycyBhbmQgbXVzdCByZXR1cm4gYW4gb2JqZWN0IGNvbnRhaW5pbmc6XG4gICAqXG4gICAqICAtIGBzcmNXaWR0aGAgJiBgc3JjSGVpZ2h0YCAocmVxdWlyZWQpXG4gICAqICAtIGB0cmdXaWR0aGAgJiBgdHJnSGVpZ2h0YCAocmVxdWlyZWQpXG4gICAqICAtIGBzcmNYYCAmIGBzcmNZYCAob3B0aW9uYWwsIGRlZmF1bHQgYDBgKVxuICAgKiAgLSBgdHJnWGAgJiBgdHJnWWAgKG9wdGlvbmFsLCBkZWZhdWx0IGAwYClcbiAgICpcbiAgICogVGhvc2UgdmFsdWVzIGFyZSBnb2luZyB0byBiZSB1c2VkIGJ5IGBjdHguZHJhd0ltYWdlKClgLlxuICAgKi8gcmVzaXplIChmaWxlLCB3aWR0aCwgaGVpZ2h0LCByZXNpemVNZXRob2QpIHtcbiAgICAgICAgbGV0IGluZm8gPSB7XG4gICAgICAgICAgICBzcmNYOiAwLFxuICAgICAgICAgICAgc3JjWTogMCxcbiAgICAgICAgICAgIHNyY1dpZHRoOiBmaWxlLndpZHRoLFxuICAgICAgICAgICAgc3JjSGVpZ2h0OiBmaWxlLmhlaWdodFxuICAgICAgICB9O1xuICAgICAgICBsZXQgc3JjUmF0aW8gPSBmaWxlLndpZHRoIC8gZmlsZS5oZWlnaHQ7XG4gICAgICAgIC8vIEF1dG9tYXRpY2FsbHkgY2FsY3VsYXRlIGRpbWVuc2lvbnMgaWYgbm90IHNwZWNpZmllZFxuICAgICAgICBpZiAod2lkdGggPT0gbnVsbCAmJiBoZWlnaHQgPT0gbnVsbCkge1xuICAgICAgICAgICAgd2lkdGggPSBpbmZvLnNyY1dpZHRoO1xuICAgICAgICAgICAgaGVpZ2h0ID0gaW5mby5zcmNIZWlnaHQ7XG4gICAgICAgIH0gZWxzZSBpZiAod2lkdGggPT0gbnVsbCkgd2lkdGggPSBoZWlnaHQgKiBzcmNSYXRpbztcbiAgICAgICAgZWxzZSBpZiAoaGVpZ2h0ID09IG51bGwpIGhlaWdodCA9IHdpZHRoIC8gc3JjUmF0aW87XG4gICAgICAgIC8vIE1ha2Ugc3VyZSBpbWFnZXMgYXJlbid0IHVwc2NhbGVkXG4gICAgICAgIHdpZHRoID0gTWF0aC5taW4od2lkdGgsIGluZm8uc3JjV2lkdGgpO1xuICAgICAgICBoZWlnaHQgPSBNYXRoLm1pbihoZWlnaHQsIGluZm8uc3JjSGVpZ2h0KTtcbiAgICAgICAgbGV0IHRyZ1JhdGlvID0gd2lkdGggLyBoZWlnaHQ7XG4gICAgICAgIGlmIChpbmZvLnNyY1dpZHRoID4gd2lkdGggfHwgaW5mby5zcmNIZWlnaHQgPiBoZWlnaHQpIHtcbiAgICAgICAgICAgIC8vIEltYWdlIGlzIGJpZ2dlciBhbmQgbmVlZHMgcmVzY2FsaW5nXG4gICAgICAgICAgICBpZiAocmVzaXplTWV0aG9kID09PSBcImNyb3BcIikge1xuICAgICAgICAgICAgICAgIGlmIChzcmNSYXRpbyA+IHRyZ1JhdGlvKSB7XG4gICAgICAgICAgICAgICAgICAgIGluZm8uc3JjSGVpZ2h0ID0gZmlsZS5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGluZm8uc3JjV2lkdGggPSBpbmZvLnNyY0hlaWdodCAqIHRyZ1JhdGlvO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGluZm8uc3JjV2lkdGggPSBmaWxlLndpZHRoO1xuICAgICAgICAgICAgICAgICAgICBpbmZvLnNyY0hlaWdodCA9IGluZm8uc3JjV2lkdGggLyB0cmdSYXRpbztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHJlc2l6ZU1ldGhvZCA9PT0gXCJjb250YWluXCIpIHtcbiAgICAgICAgICAgICAgICAvLyBNZXRob2QgJ2NvbnRhaW4nXG4gICAgICAgICAgICAgICAgaWYgKHNyY1JhdGlvID4gdHJnUmF0aW8pIGhlaWdodCA9IHdpZHRoIC8gc3JjUmF0aW87XG4gICAgICAgICAgICAgICAgZWxzZSB3aWR0aCA9IGhlaWdodCAqIHNyY1JhdGlvO1xuICAgICAgICAgICAgfSBlbHNlIHRocm93IG5ldyBFcnJvcihgVW5rbm93biByZXNpemVNZXRob2QgJyR7cmVzaXplTWV0aG9kfSdgKTtcbiAgICAgICAgfVxuICAgICAgICBpbmZvLnNyY1ggPSAoZmlsZS53aWR0aCAtIGluZm8uc3JjV2lkdGgpIC8gMjtcbiAgICAgICAgaW5mby5zcmNZID0gKGZpbGUuaGVpZ2h0IC0gaW5mby5zcmNIZWlnaHQpIC8gMjtcbiAgICAgICAgaW5mby50cmdXaWR0aCA9IHdpZHRoO1xuICAgICAgICBpbmZvLnRyZ0hlaWdodCA9IGhlaWdodDtcbiAgICAgICAgcmV0dXJuIGluZm87XG4gICAgfSxcbiAgICAvKipcbiAgICogQ2FuIGJlIHVzZWQgdG8gdHJhbnNmb3JtIHRoZSBmaWxlIChmb3IgZXhhbXBsZSwgcmVzaXplIGFuIGltYWdlIGlmIG5lY2Vzc2FyeSkuXG4gICAqXG4gICAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIHVzZXMgYHJlc2l6ZVdpZHRoYCBhbmQgYHJlc2l6ZUhlaWdodGAgKGlmIHByb3ZpZGVkKSBhbmQgcmVzaXplc1xuICAgKiBpbWFnZXMgYWNjb3JkaW5nIHRvIHRob3NlIGRpbWVuc2lvbnMuXG4gICAqXG4gICAqIEdldHMgdGhlIGBmaWxlYCBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyLCBhbmQgYSBgZG9uZSgpYCBmdW5jdGlvbiBhcyB0aGUgc2Vjb25kLCB0aGF0IG5lZWRzXG4gICAqIHRvIGJlIGludm9rZWQgd2l0aCB0aGUgZmlsZSB3aGVuIHRoZSB0cmFuc2Zvcm1hdGlvbiBpcyBkb25lLlxuICAgKi8gdHJhbnNmb3JtRmlsZSAoZmlsZSwgZG9uZSkge1xuICAgICAgICBpZiAoKHRoaXMub3B0aW9ucy5yZXNpemVXaWR0aCB8fCB0aGlzLm9wdGlvbnMucmVzaXplSGVpZ2h0KSAmJiBmaWxlLnR5cGUubWF0Y2goL2ltYWdlLiovKSkgcmV0dXJuIHRoaXMucmVzaXplSW1hZ2UoZmlsZSwgdGhpcy5vcHRpb25zLnJlc2l6ZVdpZHRoLCB0aGlzLm9wdGlvbnMucmVzaXplSGVpZ2h0LCB0aGlzLm9wdGlvbnMucmVzaXplTWV0aG9kLCBkb25lKTtcbiAgICAgICAgZWxzZSByZXR1cm4gZG9uZShmaWxlKTtcbiAgICB9LFxuICAgIC8qKlxuICAgKiBBIHN0cmluZyB0aGF0IGNvbnRhaW5zIHRoZSB0ZW1wbGF0ZSB1c2VkIGZvciBlYWNoIGRyb3BwZWRcbiAgICogZmlsZS4gQ2hhbmdlIGl0IHRvIGZ1bGZpbGwgeW91ciBuZWVkcyBidXQgbWFrZSBzdXJlIHRvIHByb3Blcmx5XG4gICAqIHByb3ZpZGUgYWxsIGVsZW1lbnRzLlxuICAgKlxuICAgKiBJZiB5b3Ugd2FudCB0byB1c2UgYW4gYWN0dWFsIEhUTUwgZWxlbWVudCBpbnN0ZWFkIG9mIHByb3ZpZGluZyBhIFN0cmluZ1xuICAgKiBhcyBhIGNvbmZpZyBvcHRpb24sIHlvdSBjb3VsZCBjcmVhdGUgYSBkaXYgd2l0aCB0aGUgaWQgYHRwbGAsXG4gICAqIHB1dCB0aGUgdGVtcGxhdGUgaW5zaWRlIGl0IGFuZCBwcm92aWRlIHRoZSBlbGVtZW50IGxpa2UgdGhpczpcbiAgICpcbiAgICogICAgIGRvY3VtZW50XG4gICAqICAgICAgIC5xdWVyeVNlbGVjdG9yKCcjdHBsJylcbiAgICogICAgICAgLmlubmVySFRNTFxuICAgKlxuICAgKi8gcHJldmlld1RlbXBsYXRlOiAoLypAX19QVVJFX18qLyRwYXJjZWwkaW50ZXJvcERlZmF1bHQoJGZkNjAzMWY4OGRjZTJlMzIkZXhwb3J0cykpLFxuICAgIC8qXG4gICBUaG9zZSBmdW5jdGlvbnMgcmVnaXN0ZXIgdGhlbXNlbHZlcyB0byB0aGUgZXZlbnRzIG9uIGluaXQgYW5kIGhhbmRsZSBhbGxcbiAgIHRoZSB1c2VyIGludGVyZmFjZSBzcGVjaWZpYyBzdHVmZi4gT3ZlcndyaXRpbmcgdGhlbSB3b24ndCBicmVhayB0aGUgdXBsb2FkXG4gICBidXQgY2FuIGJyZWFrIHRoZSB3YXkgaXQncyBkaXNwbGF5ZWQuXG4gICBZb3UgY2FuIG92ZXJ3cml0ZSB0aGVtIGlmIHlvdSBkb24ndCBsaWtlIHRoZSBkZWZhdWx0IGJlaGF2aW9yLiBJZiB5b3UganVzdFxuICAgd2FudCB0byBhZGQgYW4gYWRkaXRpb25hbCBldmVudCBoYW5kbGVyLCByZWdpc3RlciBpdCBvbiB0aGUgZHJvcHpvbmUgb2JqZWN0XG4gICBhbmQgZG9uJ3Qgb3ZlcndyaXRlIHRob3NlIG9wdGlvbnMuXG4gICAqLyAvLyBUaG9zZSBhcmUgc2VsZiBleHBsYW5hdG9yeSBhbmQgc2ltcGx5IGNvbmNlcm4gdGhlIERyYWduRHJvcC5cbiAgICBkcm9wIChlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImR6LWRyYWctaG92ZXJcIik7XG4gICAgfSxcbiAgICBkcmFnc3RhcnQgKGUpIHtcbiAgICB9LFxuICAgIGRyYWdlbmQgKGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiZHotZHJhZy1ob3ZlclwiKTtcbiAgICB9LFxuICAgIGRyYWdlbnRlciAoZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJkei1kcmFnLWhvdmVyXCIpO1xuICAgIH0sXG4gICAgZHJhZ292ZXIgKGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZHotZHJhZy1ob3ZlclwiKTtcbiAgICB9LFxuICAgIGRyYWdsZWF2ZSAoZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJkei1kcmFnLWhvdmVyXCIpO1xuICAgIH0sXG4gICAgcGFzdGUgKGUpIHtcbiAgICB9LFxuICAgIC8vIENhbGxlZCB3aGVuZXZlciB0aGVyZSBhcmUgbm8gZmlsZXMgbGVmdCBpbiB0aGUgZHJvcHpvbmUgYW55bW9yZSwgYW5kIHRoZVxuICAgIC8vIGRyb3B6b25lIHNob3VsZCBiZSBkaXNwbGF5ZWQgYXMgaWYgaW4gdGhlIGluaXRpYWwgc3RhdGUuXG4gICAgcmVzZXQgKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJkei1zdGFydGVkXCIpO1xuICAgIH0sXG4gICAgLy8gQ2FsbGVkIHdoZW4gYSBmaWxlIGlzIGFkZGVkIHRvIHRoZSBxdWV1ZVxuICAgIC8vIFJlY2VpdmVzIGBmaWxlYFxuICAgIGFkZGVkZmlsZSAoZmlsZSkge1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50ID09PSB0aGlzLnByZXZpZXdzQ29udGFpbmVyKSB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LXN0YXJ0ZWRcIik7XG4gICAgICAgIGlmICh0aGlzLnByZXZpZXdzQ29udGFpbmVyICYmICF0aGlzLm9wdGlvbnMuZGlzYWJsZVByZXZpZXdzKSB7XG4gICAgICAgICAgICBmaWxlLnByZXZpZXdFbGVtZW50ID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5jcmVhdGVFbGVtZW50KHRoaXMub3B0aW9ucy5wcmV2aWV3VGVtcGxhdGUudHJpbSgpKTtcbiAgICAgICAgICAgIGZpbGUucHJldmlld1RlbXBsYXRlID0gZmlsZS5wcmV2aWV3RWxlbWVudDsgLy8gQmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICAgICAgICAgIHRoaXMucHJldmlld3NDb250YWluZXIuYXBwZW5kQ2hpbGQoZmlsZS5wcmV2aWV3RWxlbWVudCk7XG4gICAgICAgICAgICBmb3IgKHZhciBub2RlIG9mIGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWR6LW5hbWVdXCIpKW5vZGUudGV4dENvbnRlbnQgPSBmaWxlLm5hbWU7XG4gICAgICAgICAgICBmb3IgKG5vZGUgb2YgZmlsZS5wcmV2aWV3RWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtZHotc2l6ZV1cIikpbm9kZS5pbm5lckhUTUwgPSB0aGlzLmZpbGVzaXplKGZpbGUuc2l6ZSk7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmFkZFJlbW92ZUxpbmtzKSB7XG4gICAgICAgICAgICAgICAgZmlsZS5fcmVtb3ZlTGluayA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuY3JlYXRlRWxlbWVudChgPGEgY2xhc3M9XCJkei1yZW1vdmVcIiBocmVmPVwiamF2YXNjcmlwdDp1bmRlZmluZWQ7XCIgZGF0YS1kei1yZW1vdmU+JHt0aGlzLm9wdGlvbnMuZGljdFJlbW92ZUZpbGV9PC9hPmApO1xuICAgICAgICAgICAgICAgIGZpbGUucHJldmlld0VsZW1lbnQuYXBwZW5kQ2hpbGQoZmlsZS5fcmVtb3ZlTGluayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgcmVtb3ZlRmlsZUV2ZW50ID0gKGUpPT57XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgaWYgKGZpbGUuc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlVQTE9BRElORykgcmV0dXJuICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuY29uZmlybSh0aGlzLm9wdGlvbnMuZGljdENhbmNlbFVwbG9hZENvbmZpcm1hdGlvbiwgKCk9PnRoaXMucmVtb3ZlRmlsZShmaWxlKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZGljdFJlbW92ZUZpbGVDb25maXJtYXRpb24pIHJldHVybiAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmNvbmZpcm0odGhpcy5vcHRpb25zLmRpY3RSZW1vdmVGaWxlQ29uZmlybWF0aW9uLCAoKT0+dGhpcy5yZW1vdmVGaWxlKGZpbGUpXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuIHRoaXMucmVtb3ZlRmlsZShmaWxlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZm9yIChsZXQgcmVtb3ZlTGluayBvZiBmaWxlLnByZXZpZXdFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1kei1yZW1vdmVdXCIpKXJlbW92ZUxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHJlbW92ZUZpbGVFdmVudCk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8vIENhbGxlZCB3aGVuZXZlciBhIGZpbGUgaXMgcmVtb3ZlZC5cbiAgICByZW1vdmVkZmlsZSAoZmlsZSkge1xuICAgICAgICBpZiAoZmlsZS5wcmV2aWV3RWxlbWVudCAhPSBudWxsICYmIGZpbGUucHJldmlld0VsZW1lbnQucGFyZW50Tm9kZSAhPSBudWxsKSBmaWxlLnByZXZpZXdFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZmlsZS5wcmV2aWV3RWxlbWVudCk7XG4gICAgICAgIHJldHVybiB0aGlzLl91cGRhdGVNYXhGaWxlc1JlYWNoZWRDbGFzcygpO1xuICAgIH0sXG4gICAgLy8gQ2FsbGVkIHdoZW4gYSB0aHVtYm5haWwgaGFzIGJlZW4gZ2VuZXJhdGVkXG4gICAgLy8gUmVjZWl2ZXMgYGZpbGVgIGFuZCBgZGF0YVVybGBcbiAgICB0aHVtYm5haWwgKGZpbGUsIGRhdGFVcmwpIHtcbiAgICAgICAgaWYgKGZpbGUucHJldmlld0VsZW1lbnQpIHtcbiAgICAgICAgICAgIGZpbGUucHJldmlld0VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImR6LWZpbGUtcHJldmlld1wiKTtcbiAgICAgICAgICAgIGZvciAobGV0IHRodW1ibmFpbEVsZW1lbnQgb2YgZmlsZS5wcmV2aWV3RWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtZHotdGh1bWJuYWlsXVwiKSl7XG4gICAgICAgICAgICAgICAgdGh1bWJuYWlsRWxlbWVudC5hbHQgPSBmaWxlLm5hbWU7XG4gICAgICAgICAgICAgICAgdGh1bWJuYWlsRWxlbWVudC5zcmMgPSBkYXRhVXJsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoKCk9PmZpbGUucHJldmlld0VsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LWltYWdlLXByZXZpZXdcIilcbiAgICAgICAgICAgICwgMSk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8vIENhbGxlZCB3aGVuZXZlciBhbiBlcnJvciBvY2N1cnNcbiAgICAvLyBSZWNlaXZlcyBgZmlsZWAgYW5kIGBtZXNzYWdlYFxuICAgIGVycm9yIChmaWxlLCBtZXNzYWdlKSB7XG4gICAgICAgIGlmIChmaWxlLnByZXZpZXdFbGVtZW50KSB7XG4gICAgICAgICAgICBmaWxlLnByZXZpZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJkei1lcnJvclwiKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbWVzc2FnZSAhPT0gXCJzdHJpbmdcIiAmJiBtZXNzYWdlLmVycm9yKSBtZXNzYWdlID0gbWVzc2FnZS5lcnJvcjtcbiAgICAgICAgICAgIGZvciAobGV0IG5vZGUgb2YgZmlsZS5wcmV2aWV3RWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtZHotZXJyb3JtZXNzYWdlXVwiKSlub2RlLnRleHRDb250ZW50ID0gbWVzc2FnZTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZXJyb3JtdWx0aXBsZSAoKSB7XG4gICAgfSxcbiAgICAvLyBDYWxsZWQgd2hlbiBhIGZpbGUgZ2V0cyBwcm9jZXNzZWQuIFNpbmNlIHRoZXJlIGlzIGEgY3VlLCBub3QgYWxsIGFkZGVkXG4gICAgLy8gZmlsZXMgYXJlIHByb2Nlc3NlZCBpbW1lZGlhdGVseS5cbiAgICAvLyBSZWNlaXZlcyBgZmlsZWBcbiAgICBwcm9jZXNzaW5nIChmaWxlKSB7XG4gICAgICAgIGlmIChmaWxlLnByZXZpZXdFbGVtZW50KSB7XG4gICAgICAgICAgICBmaWxlLnByZXZpZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJkei1wcm9jZXNzaW5nXCIpO1xuICAgICAgICAgICAgaWYgKGZpbGUuX3JlbW92ZUxpbmspIHJldHVybiBmaWxlLl9yZW1vdmVMaW5rLmlubmVySFRNTCA9IHRoaXMub3B0aW9ucy5kaWN0Q2FuY2VsVXBsb2FkO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBwcm9jZXNzaW5nbXVsdGlwbGUgKCkge1xuICAgIH0sXG4gICAgLy8gQ2FsbGVkIHdoZW5ldmVyIHRoZSB1cGxvYWQgcHJvZ3Jlc3MgZ2V0cyB1cGRhdGVkLlxuICAgIC8vIFJlY2VpdmVzIGBmaWxlYCwgYHByb2dyZXNzYCAocGVyY2VudGFnZSAwLTEwMCkgYW5kIGBieXRlc1NlbnRgLlxuICAgIC8vIFRvIGdldCB0aGUgdG90YWwgbnVtYmVyIG9mIGJ5dGVzIG9mIHRoZSBmaWxlLCB1c2UgYGZpbGUuc2l6ZWBcbiAgICB1cGxvYWRwcm9ncmVzcyAoZmlsZSwgcHJvZ3Jlc3MsIGJ5dGVzU2VudCkge1xuICAgICAgICBpZiAoZmlsZS5wcmV2aWV3RWxlbWVudCkgZm9yIChsZXQgbm9kZSBvZiBmaWxlLnByZXZpZXdFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1kei11cGxvYWRwcm9ncmVzc11cIikpbm9kZS5ub2RlTmFtZSA9PT0gXCJQUk9HUkVTU1wiID8gbm9kZS52YWx1ZSA9IHByb2dyZXNzIDogbm9kZS5zdHlsZS53aWR0aCA9IGAke3Byb2dyZXNzfSVgO1xuICAgIH0sXG4gICAgLy8gQ2FsbGVkIHdoZW5ldmVyIHRoZSB0b3RhbCB1cGxvYWQgcHJvZ3Jlc3MgZ2V0cyB1cGRhdGVkLlxuICAgIC8vIENhbGxlZCB3aXRoIHRvdGFsVXBsb2FkUHJvZ3Jlc3MgKDAtMTAwKSwgdG90YWxCeXRlcyBhbmQgdG90YWxCeXRlc1NlbnRcbiAgICB0b3RhbHVwbG9hZHByb2dyZXNzICgpIHtcbiAgICB9LFxuICAgIC8vIENhbGxlZCBqdXN0IGJlZm9yZSB0aGUgZmlsZSBpcyBzZW50LiBHZXRzIHRoZSBgeGhyYCBvYmplY3QgYXMgc2Vjb25kXG4gICAgLy8gcGFyYW1ldGVyLCBzbyB5b3UgY2FuIG1vZGlmeSBpdCAoZm9yIGV4YW1wbGUgdG8gYWRkIGEgQ1NSRiB0b2tlbikgYW5kIGFcbiAgICAvLyBgZm9ybURhdGFgIG9iamVjdCB0byBhZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi5cbiAgICBzZW5kaW5nICgpIHtcbiAgICB9LFxuICAgIHNlbmRpbmdtdWx0aXBsZSAoKSB7XG4gICAgfSxcbiAgICAvLyBXaGVuIHRoZSBjb21wbGV0ZSB1cGxvYWQgaXMgZmluaXNoZWQgYW5kIHN1Y2Nlc3NmdWxcbiAgICAvLyBSZWNlaXZlcyBgZmlsZWBcbiAgICBzdWNjZXNzIChmaWxlKSB7XG4gICAgICAgIGlmIChmaWxlLnByZXZpZXdFbGVtZW50KSByZXR1cm4gZmlsZS5wcmV2aWV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZHotc3VjY2Vzc1wiKTtcbiAgICB9LFxuICAgIHN1Y2Nlc3NtdWx0aXBsZSAoKSB7XG4gICAgfSxcbiAgICAvLyBXaGVuIHRoZSB1cGxvYWQgaXMgY2FuY2VsZWQuXG4gICAgY2FuY2VsZWQgKGZpbGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChcImVycm9yXCIsIGZpbGUsIHRoaXMub3B0aW9ucy5kaWN0VXBsb2FkQ2FuY2VsZWQpO1xuICAgIH0sXG4gICAgY2FuY2VsZWRtdWx0aXBsZSAoKSB7XG4gICAgfSxcbiAgICAvLyBXaGVuIHRoZSB1cGxvYWQgaXMgZmluaXNoZWQsIGVpdGhlciB3aXRoIHN1Y2Nlc3Mgb3IgYW4gZXJyb3IuXG4gICAgLy8gUmVjZWl2ZXMgYGZpbGVgXG4gICAgY29tcGxldGUgKGZpbGUpIHtcbiAgICAgICAgaWYgKGZpbGUuX3JlbW92ZUxpbmspIGZpbGUuX3JlbW92ZUxpbmsuaW5uZXJIVE1MID0gdGhpcy5vcHRpb25zLmRpY3RSZW1vdmVGaWxlO1xuICAgICAgICBpZiAoZmlsZS5wcmV2aWV3RWxlbWVudCkgcmV0dXJuIGZpbGUucHJldmlld0VsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LWNvbXBsZXRlXCIpO1xuICAgIH0sXG4gICAgY29tcGxldGVtdWx0aXBsZSAoKSB7XG4gICAgfSxcbiAgICBtYXhmaWxlc2V4Y2VlZGVkICgpIHtcbiAgICB9LFxuICAgIG1heGZpbGVzcmVhY2hlZCAoKSB7XG4gICAgfSxcbiAgICBxdWV1ZWNvbXBsZXRlICgpIHtcbiAgICB9LFxuICAgIGFkZGVkZmlsZXMgKCkge1xuICAgIH1cbn07XG52YXIgJDRjYTM2NzE4Mjc3NmY4MGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOSA9ICQ0Y2EzNjcxODI3NzZmODBiJHZhciRkZWZhdWx0T3B0aW9ucztcblxuXG5jbGFzcyAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5IGV4dGVuZHMgJDQwNDBhY2ZkODU4NDMzOGQkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOSB7XG4gICAgc3RhdGljIGluaXRDbGFzcygpIHtcbiAgICAgICAgLy8gRXhwb3NpbmcgdGhlIGVtaXR0ZXIgY2xhc3MsIG1haW5seSBmb3IgdGVzdHNcbiAgICAgICAgdGhpcy5wcm90b3R5cGUuRW1pdHRlciA9ICQ0MDQwYWNmZDg1ODQzMzhkJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzk7XG4gICAgICAgIC8qXG4gICAgIFRoaXMgaXMgYSBsaXN0IG9mIGFsbCBhdmFpbGFibGUgZXZlbnRzIHlvdSBjYW4gcmVnaXN0ZXIgb24gYSBkcm9wem9uZSBvYmplY3QuXG5cbiAgICAgWW91IGNhbiByZWdpc3RlciBhbiBldmVudCBoYW5kbGVyIGxpa2UgdGhpczpcblxuICAgICBkcm9wem9uZS5vbihcImRyYWdFbnRlclwiLCBmdW5jdGlvbigpIHsgfSk7XG5cbiAgICAgKi8gdGhpcy5wcm90b3R5cGUuZXZlbnRzID0gW1xuICAgICAgICAgICAgXCJkcm9wXCIsXG4gICAgICAgICAgICBcImRyYWdzdGFydFwiLFxuICAgICAgICAgICAgXCJkcmFnZW5kXCIsXG4gICAgICAgICAgICBcImRyYWdlbnRlclwiLFxuICAgICAgICAgICAgXCJkcmFnb3ZlclwiLFxuICAgICAgICAgICAgXCJkcmFnbGVhdmVcIixcbiAgICAgICAgICAgIFwiYWRkZWRmaWxlXCIsXG4gICAgICAgICAgICBcImFkZGVkZmlsZXNcIixcbiAgICAgICAgICAgIFwicmVtb3ZlZGZpbGVcIixcbiAgICAgICAgICAgIFwidGh1bWJuYWlsXCIsXG4gICAgICAgICAgICBcImVycm9yXCIsXG4gICAgICAgICAgICBcImVycm9ybXVsdGlwbGVcIixcbiAgICAgICAgICAgIFwicHJvY2Vzc2luZ1wiLFxuICAgICAgICAgICAgXCJwcm9jZXNzaW5nbXVsdGlwbGVcIixcbiAgICAgICAgICAgIFwidXBsb2FkcHJvZ3Jlc3NcIixcbiAgICAgICAgICAgIFwidG90YWx1cGxvYWRwcm9ncmVzc1wiLFxuICAgICAgICAgICAgXCJzZW5kaW5nXCIsXG4gICAgICAgICAgICBcInNlbmRpbmdtdWx0aXBsZVwiLFxuICAgICAgICAgICAgXCJzdWNjZXNzXCIsXG4gICAgICAgICAgICBcInN1Y2Nlc3NtdWx0aXBsZVwiLFxuICAgICAgICAgICAgXCJjYW5jZWxlZFwiLFxuICAgICAgICAgICAgXCJjYW5jZWxlZG11bHRpcGxlXCIsXG4gICAgICAgICAgICBcImNvbXBsZXRlXCIsXG4gICAgICAgICAgICBcImNvbXBsZXRlbXVsdGlwbGVcIixcbiAgICAgICAgICAgIFwicmVzZXRcIixcbiAgICAgICAgICAgIFwibWF4ZmlsZXNleGNlZWRlZFwiLFxuICAgICAgICAgICAgXCJtYXhmaWxlc3JlYWNoZWRcIixcbiAgICAgICAgICAgIFwicXVldWVjb21wbGV0ZVwiLCBcbiAgICAgICAgXTtcbiAgICAgICAgdGhpcy5wcm90b3R5cGUuX3RodW1ibmFpbFF1ZXVlID0gW107XG4gICAgICAgIHRoaXMucHJvdG90eXBlLl9wcm9jZXNzaW5nVGh1bWJuYWlsID0gZmFsc2U7XG4gICAgfVxuICAgIC8vIFJldHVybnMgYWxsIGZpbGVzIHRoYXQgaGF2ZSBiZWVuIGFjY2VwdGVkXG4gICAgZ2V0QWNjZXB0ZWRGaWxlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZXMuZmlsdGVyKChmaWxlKT0+ZmlsZS5hY2NlcHRlZFxuICAgICAgICApLm1hcCgoZmlsZSk9PmZpbGVcbiAgICAgICAgKTtcbiAgICB9XG4gICAgLy8gUmV0dXJucyBhbGwgZmlsZXMgdGhhdCBoYXZlIGJlZW4gcmVqZWN0ZWRcbiAgICAvLyBOb3Qgc3VyZSB3aGVuIHRoYXQncyBnb2luZyB0byBiZSB1c2VmdWwsIGJ1dCBhZGRlZCBmb3IgY29tcGxldGVuZXNzLlxuICAgIGdldFJlamVjdGVkRmlsZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVzLmZpbHRlcigoZmlsZSk9PiFmaWxlLmFjY2VwdGVkXG4gICAgICAgICkubWFwKChmaWxlKT0+ZmlsZVxuICAgICAgICApO1xuICAgIH1cbiAgICBnZXRGaWxlc1dpdGhTdGF0dXMoc3RhdHVzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVzLmZpbHRlcigoZmlsZSk9PmZpbGUuc3RhdHVzID09PSBzdGF0dXNcbiAgICAgICAgKS5tYXAoKGZpbGUpPT5maWxlXG4gICAgICAgICk7XG4gICAgfVxuICAgIC8vIFJldHVybnMgYWxsIGZpbGVzIHRoYXQgYXJlIGluIHRoZSBxdWV1ZVxuICAgIGdldFF1ZXVlZEZpbGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRGaWxlc1dpdGhTdGF0dXMoJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5RVUVVRUQpO1xuICAgIH1cbiAgICBnZXRVcGxvYWRpbmdGaWxlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RmlsZXNXaXRoU3RhdHVzKCQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HKTtcbiAgICB9XG4gICAgZ2V0QWRkZWRGaWxlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RmlsZXNXaXRoU3RhdHVzKCQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQURERUQpO1xuICAgIH1cbiAgICAvLyBGaWxlcyB0aGF0IGFyZSBlaXRoZXIgcXVldWVkIG9yIHVwbG9hZGluZ1xuICAgIGdldEFjdGl2ZUZpbGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlcy5maWx0ZXIoKGZpbGUpPT5maWxlLnN0YXR1cyA9PT0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5VUExPQURJTkcgfHwgZmlsZS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuUVVFVUVEXG4gICAgICAgICkubWFwKChmaWxlKT0+ZmlsZVxuICAgICAgICApO1xuICAgIH1cbiAgICAvLyBUaGUgZnVuY3Rpb24gdGhhdCBnZXRzIGNhbGxlZCB3aGVuIERyb3B6b25lIGlzIGluaXRpYWxpemVkLiBZb3VcbiAgICAvLyBjYW4gKGFuZCBzaG91bGQpIHNldHVwIGV2ZW50IGxpc3RlbmVycyBpbnNpZGUgdGhpcyBmdW5jdGlvbi5cbiAgICBpbml0KCkge1xuICAgICAgICAvLyBJbiBjYXNlIGl0IGlzbid0IHNldCBhbHJlYWR5XG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnQudGFnTmFtZSA9PT0gXCJmb3JtXCIpIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJlbmN0eXBlXCIsIFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiKTtcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoXCJkcm9wem9uZVwiKSAmJiAhdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZHotbWVzc2FnZVwiKSkgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKCQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuY3JlYXRlRWxlbWVudChgPGRpdiBjbGFzcz1cImR6LWRlZmF1bHQgZHotbWVzc2FnZVwiPjxidXR0b24gY2xhc3M9XCJkei1idXR0b25cIiB0eXBlPVwiYnV0dG9uXCI+JHt0aGlzLm9wdGlvbnMuZGljdERlZmF1bHRNZXNzYWdlfTwvYnV0dG9uPjwvZGl2PmApKTtcbiAgICAgICAgaWYgKHRoaXMuY2xpY2thYmxlRWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBsZXQgc2V0dXBIaWRkZW5GaWxlSW5wdXQgPSAoKT0+e1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmhpZGRlbkZpbGVJbnB1dCkgdGhpcy5oaWRkZW5GaWxlSW5wdXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmhpZGRlbkZpbGVJbnB1dCk7XG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcImZpbGVcIik7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5tYXhGaWxlcyA9PT0gbnVsbCB8fCB0aGlzLm9wdGlvbnMubWF4RmlsZXMgPiAxKSB0aGlzLmhpZGRlbkZpbGVJbnB1dC5zZXRBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiLCBcIm11bHRpcGxlXCIpO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LmNsYXNzTmFtZSA9IFwiZHotaGlkZGVuLWlucHV0XCI7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hY2NlcHRlZEZpbGVzICE9PSBudWxsKSB0aGlzLmhpZGRlbkZpbGVJbnB1dC5zZXRBdHRyaWJ1dGUoXCJhY2NlcHRcIiwgdGhpcy5vcHRpb25zLmFjY2VwdGVkRmlsZXMpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY2FwdHVyZSAhPT0gbnVsbCkgdGhpcy5oaWRkZW5GaWxlSW5wdXQuc2V0QXR0cmlidXRlKFwiY2FwdHVyZVwiLCB0aGlzLm9wdGlvbnMuY2FwdHVyZSk7XG4gICAgICAgICAgICAgICAgLy8gTWFraW5nIHN1cmUgdGhhdCBubyBvbmUgY2FuIFwidGFiXCIgaW50byB0aGlzIGZpZWxkLlxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnNldEF0dHJpYnV0ZShcInRhYmluZGV4XCIsIFwiLTFcIik7XG4gICAgICAgICAgICAgICAgLy8gTm90IHNldHRpbmcgYGRpc3BsYXk9XCJub25lXCJgIGJlY2F1c2Ugc29tZSBicm93c2VycyBkb24ndCBhY2NlcHQgY2xpY2tzXG4gICAgICAgICAgICAgICAgLy8gb24gZWxlbWVudHMgdGhhdCBhcmVuJ3QgZGlzcGxheWVkLlxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnN0eWxlLnRvcCA9IFwiMFwiO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnN0eWxlLmxlZnQgPSBcIjBcIjtcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGRlbkZpbGVJbnB1dC5zdHlsZS5oZWlnaHQgPSBcIjBcIjtcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGRlbkZpbGVJbnB1dC5zdHlsZS53aWR0aCA9IFwiMFwiO1xuICAgICAgICAgICAgICAgICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuZ2V0RWxlbWVudCh0aGlzLm9wdGlvbnMuaGlkZGVuSW5wdXRDb250YWluZXIsIFwiaGlkZGVuSW5wdXRDb250YWluZXJcIikuYXBwZW5kQ2hpbGQodGhpcy5oaWRkZW5GaWxlSW5wdXQpO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKCk9PntcbiAgICAgICAgICAgICAgICAgICAgbGV0IHsgZmlsZXM6IGZpbGVzICB9ID0gdGhpcy5oaWRkZW5GaWxlSW5wdXQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWxlcy5sZW5ndGgpIGZvciAobGV0IGZpbGUgb2YgZmlsZXMpdGhpcy5hZGRGaWxlKGZpbGUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXQoXCJhZGRlZGZpbGVzXCIsIGZpbGVzKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0dXBIaWRkZW5GaWxlSW5wdXQoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBzZXR1cEhpZGRlbkZpbGVJbnB1dCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuVVJMID0gd2luZG93LlVSTCAhPT0gbnVsbCA/IHdpbmRvdy5VUkwgOiB3aW5kb3cud2Via2l0VVJMO1xuICAgICAgICAvLyBTZXR1cCBhbGwgZXZlbnQgbGlzdGVuZXJzIG9uIHRoZSBEcm9wem9uZSBvYmplY3QgaXRzZWxmLlxuICAgICAgICAvLyBUaGV5J3JlIG5vdCBpbiBAc2V0dXBFdmVudExpc3RlbmVycygpIGJlY2F1c2UgdGhleSBzaG91bGRuJ3QgYmUgcmVtb3ZlZFxuICAgICAgICAvLyBhZ2FpbiB3aGVuIHRoZSBkcm9wem9uZSBnZXRzIGRpc2FibGVkLlxuICAgICAgICBmb3IgKGxldCBldmVudE5hbWUgb2YgdGhpcy5ldmVudHMpdGhpcy5vbihldmVudE5hbWUsIHRoaXMub3B0aW9uc1tldmVudE5hbWVdKTtcbiAgICAgICAgdGhpcy5vbihcInVwbG9hZHByb2dyZXNzXCIsICgpPT50aGlzLnVwZGF0ZVRvdGFsVXBsb2FkUHJvZ3Jlc3MoKVxuICAgICAgICApO1xuICAgICAgICB0aGlzLm9uKFwicmVtb3ZlZGZpbGVcIiwgKCk9PnRoaXMudXBkYXRlVG90YWxVcGxvYWRQcm9ncmVzcygpXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMub24oXCJjYW5jZWxlZFwiLCAoZmlsZSk9PnRoaXMuZW1pdChcImNvbXBsZXRlXCIsIGZpbGUpXG4gICAgICAgICk7XG4gICAgICAgIC8vIEVtaXQgYSBgcXVldWVjb21wbGV0ZWAgZXZlbnQgaWYgYWxsIGZpbGVzIGZpbmlzaGVkIHVwbG9hZGluZy5cbiAgICAgICAgdGhpcy5vbihcImNvbXBsZXRlXCIsIChmaWxlKT0+e1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2V0QWRkZWRGaWxlcygpLmxlbmd0aCA9PT0gMCAmJiB0aGlzLmdldFVwbG9hZGluZ0ZpbGVzKCkubGVuZ3RoID09PSAwICYmIHRoaXMuZ2V0UXVldWVkRmlsZXMoKS5sZW5ndGggPT09IDApIC8vIFRoaXMgbmVlZHMgdG8gYmUgZGVmZXJyZWQgc28gdGhhdCBgcXVldWVjb21wbGV0ZWAgcmVhbGx5IHRyaWdnZXJzIGFmdGVyIGBjb21wbGV0ZWBcbiAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KCgpPT50aGlzLmVtaXQoXCJxdWV1ZWNvbXBsZXRlXCIpXG4gICAgICAgICAgICAsIDApO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgY29udGFpbnNGaWxlcyA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGlmIChlLmRhdGFUcmFuc2Zlci50eXBlcykgLy8gQmVjYXVzZSBlLmRhdGFUcmFuc2Zlci50eXBlcyBpcyBhbiBPYmplY3QgaW5cbiAgICAgICAgICAgIC8vIElFLCB3ZSBuZWVkIHRvIGl0ZXJhdGUgbGlrZSB0aGlzIGluc3RlYWQgb2ZcbiAgICAgICAgICAgIC8vIHVzaW5nIGUuZGF0YVRyYW5zZmVyLnR5cGVzLnNvbWUoKVxuICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGUuZGF0YVRyYW5zZmVyLnR5cGVzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBpZiAoZS5kYXRhVHJhbnNmZXIudHlwZXNbaV0gPT09IFwiRmlsZXNcIikgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIGxldCBub1Byb3BhZ2F0aW9uID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgLy8gSWYgdGhlcmUgYXJlIG5vIGZpbGVzLCB3ZSBkb24ndCB3YW50IHRvIHN0b3BcbiAgICAgICAgICAgIC8vIHByb3BhZ2F0aW9uIHNvIHdlIGRvbid0IGludGVyZmVyZSB3aXRoIG90aGVyXG4gICAgICAgICAgICAvLyBkcmFnIGFuZCBkcm9wIGJlaGF2aW91ci5cbiAgICAgICAgICAgIGlmICghY29udGFpbnNGaWxlcyhlKSkgcmV0dXJuO1xuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSByZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZWxzZSByZXR1cm4gZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICAvLyBDcmVhdGUgdGhlIGxpc3RlbmVyc1xuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50OiB0aGlzLmVsZW1lbnQsXG4gICAgICAgICAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgICAgIGRyYWdzdGFydDogKGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KFwiZHJhZ3N0YXJ0XCIsIGUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBkcmFnZW50ZXI6IChlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9Qcm9wYWdhdGlvbihlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQoXCJkcmFnZW50ZXJcIiwgZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGRyYWdvdmVyOiAoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIE1ha2VzIGl0IHBvc3NpYmxlIHRvIGRyYWcgZmlsZXMgZnJvbSBjaHJvbWUncyBkb3dubG9hZCBiYXJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTk1MjY0MzAvZHJhZy1hbmQtZHJvcC1maWxlLXVwbG9hZHMtZnJvbS1jaHJvbWUtZG93bmxvYWRzLWJhclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVHJ5IGlzIHJlcXVpcmVkIHRvIHByZXZlbnQgYnVnIGluIEludGVybmV0IEV4cGxvcmVyIDExIChTQ1JJUFQ2NTUzNSBleGNlcHRpb24pXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZWZjdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWZjdCA9IGUuZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9IFwibW92ZVwiID09PSBlZmN0IHx8IFwibGlua01vdmVcIiA9PT0gZWZjdCA/IFwibW92ZVwiIDogXCJjb3B5XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBub1Byb3BhZ2F0aW9uKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChcImRyYWdvdmVyXCIsIGUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBkcmFnbGVhdmU6IChlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChcImRyYWdsZWF2ZVwiLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZHJvcDogKGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBub1Byb3BhZ2F0aW9uKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZHJvcChlKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZHJhZ2VuZDogKGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KFwiZHJhZ2VuZFwiLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIFxuICAgICAgICBdO1xuICAgICAgICB0aGlzLmNsaWNrYWJsZUVsZW1lbnRzLmZvckVhY2goKGNsaWNrYWJsZUVsZW1lbnQpPT57XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMucHVzaCh7XG4gICAgICAgICAgICAgICAgZWxlbWVudDogY2xpY2thYmxlRWxlbWVudCxcbiAgICAgICAgICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IChldnQpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBPbmx5IHRoZSBhY3R1YWwgZHJvcHpvbmUgb3IgdGhlIG1lc3NhZ2UgZWxlbWVudCBzaG91bGQgdHJpZ2dlciBmaWxlIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNsaWNrYWJsZUVsZW1lbnQgIT09IHRoaXMuZWxlbWVudCB8fCBldnQudGFyZ2V0ID09PSB0aGlzLmVsZW1lbnQgfHwgJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5lbGVtZW50SW5zaWRlKGV2dC50YXJnZXQsIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmR6LW1lc3NhZ2VcIikpKSB0aGlzLmhpZGRlbkZpbGVJbnB1dC5jbGljaygpOyAvLyBGb3J3YXJkIHRoZSBjbGlja1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZW5hYmxlKCk7XG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuaW5pdC5jYWxsKHRoaXMpO1xuICAgIH1cbiAgICAvLyBOb3QgZnVsbHkgdGVzdGVkIHlldFxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgICAgICB0aGlzLnJlbW92ZUFsbEZpbGVzKHRydWUpO1xuICAgICAgICBpZiAodGhpcy5oaWRkZW5GaWxlSW5wdXQgIT0gbnVsbCA/IHRoaXMuaGlkZGVuRmlsZUlucHV0LnBhcmVudE5vZGUgOiB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5oaWRkZW5GaWxlSW5wdXQpO1xuICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGRlbGV0ZSB0aGlzLmVsZW1lbnQuZHJvcHpvbmU7XG4gICAgICAgIHJldHVybiAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5Lmluc3RhbmNlcy5zcGxpY2UoJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5pbnN0YW5jZXMuaW5kZXhPZih0aGlzKSwgMSk7XG4gICAgfVxuICAgIHVwZGF0ZVRvdGFsVXBsb2FkUHJvZ3Jlc3MoKSB7XG4gICAgICAgIGxldCB0b3RhbFVwbG9hZFByb2dyZXNzO1xuICAgICAgICBsZXQgdG90YWxCeXRlc1NlbnQgPSAwO1xuICAgICAgICBsZXQgdG90YWxCeXRlcyA9IDA7XG4gICAgICAgIGxldCBhY3RpdmVGaWxlcyA9IHRoaXMuZ2V0QWN0aXZlRmlsZXMoKTtcbiAgICAgICAgaWYgKGFjdGl2ZUZpbGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgZm9yIChsZXQgZmlsZSBvZiB0aGlzLmdldEFjdGl2ZUZpbGVzKCkpe1xuICAgICAgICAgICAgICAgIHRvdGFsQnl0ZXNTZW50ICs9IGZpbGUudXBsb2FkLmJ5dGVzU2VudDtcbiAgICAgICAgICAgICAgICB0b3RhbEJ5dGVzICs9IGZpbGUudXBsb2FkLnRvdGFsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdG90YWxVcGxvYWRQcm9ncmVzcyA9IDEwMCAqIHRvdGFsQnl0ZXNTZW50IC8gdG90YWxCeXRlcztcbiAgICAgICAgfSBlbHNlIHRvdGFsVXBsb2FkUHJvZ3Jlc3MgPSAxMDA7XG4gICAgICAgIHJldHVybiB0aGlzLmVtaXQoXCJ0b3RhbHVwbG9hZHByb2dyZXNzXCIsIHRvdGFsVXBsb2FkUHJvZ3Jlc3MsIHRvdGFsQnl0ZXMsIHRvdGFsQnl0ZXNTZW50KTtcbiAgICB9XG4gICAgLy8gQG9wdGlvbnMucGFyYW1OYW1lIGNhbiBiZSBhIGZ1bmN0aW9uIHRha2luZyBvbmUgcGFyYW1ldGVyIHJhdGhlciB0aGFuIGEgc3RyaW5nLlxuICAgIC8vIEEgcGFyYW1ldGVyIG5hbWUgZm9yIGEgZmlsZSBpcyBvYnRhaW5lZCBzaW1wbHkgYnkgY2FsbGluZyB0aGlzIHdpdGggYW4gaW5kZXggbnVtYmVyLlxuICAgIF9nZXRQYXJhbU5hbWUobikge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5wYXJhbU5hbWUgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRoaXMub3B0aW9ucy5wYXJhbU5hbWUobik7XG4gICAgICAgIGVsc2UgcmV0dXJuIGAke3RoaXMub3B0aW9ucy5wYXJhbU5hbWV9JHt0aGlzLm9wdGlvbnMudXBsb2FkTXVsdGlwbGUgPyBgWyR7bn1dYCA6IFwiXCJ9YDtcbiAgICB9XG4gICAgLy8gSWYgQG9wdGlvbnMucmVuYW1lRmlsZSBpcyBhIGZ1bmN0aW9uLFxuICAgIC8vIHRoZSBmdW5jdGlvbiB3aWxsIGJlIHVzZWQgdG8gcmVuYW1lIHRoZSBmaWxlLm5hbWUgYmVmb3JlIGFwcGVuZGluZyBpdCB0byB0aGUgZm9ybURhdGFcbiAgICBfcmVuYW1lRmlsZShmaWxlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLnJlbmFtZUZpbGUgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIGZpbGUubmFtZTtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5yZW5hbWVGaWxlKGZpbGUpO1xuICAgIH1cbiAgICAvLyBSZXR1cm5zIGEgZm9ybSB0aGF0IGNhbiBiZSB1c2VkIGFzIGZhbGxiYWNrIGlmIHRoZSBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgRHJhZ25Ecm9wXG4gICAgLy9cbiAgICAvLyBJZiB0aGUgZHJvcHpvbmUgaXMgYWxyZWFkeSBhIGZvcm0sIG9ubHkgdGhlIGlucHV0IGZpZWxkIGFuZCBidXR0b24gYXJlIHJldHVybmVkLiBPdGhlcndpc2UgYSBjb21wbGV0ZSBmb3JtIGVsZW1lbnQgaXMgcHJvdmlkZWQuXG4gICAgLy8gVGhpcyBjb2RlIGhhcyB0byBwYXNzIGluIElFNyA6KFxuICAgIGdldEZhbGxiYWNrRm9ybSgpIHtcbiAgICAgICAgbGV0IGV4aXN0aW5nRmFsbGJhY2ssIGZvcm07XG4gICAgICAgIGlmIChleGlzdGluZ0ZhbGxiYWNrID0gdGhpcy5nZXRFeGlzdGluZ0ZhbGxiYWNrKCkpIHJldHVybiBleGlzdGluZ0ZhbGxiYWNrO1xuICAgICAgICBsZXQgZmllbGRzU3RyaW5nID0gJzxkaXYgY2xhc3M9XCJkei1mYWxsYmFja1wiPic7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZGljdEZhbGxiYWNrVGV4dCkgZmllbGRzU3RyaW5nICs9IGA8cD4ke3RoaXMub3B0aW9ucy5kaWN0RmFsbGJhY2tUZXh0fTwvcD5gO1xuICAgICAgICBmaWVsZHNTdHJpbmcgKz0gYDxpbnB1dCB0eXBlPVwiZmlsZVwiIG5hbWU9XCIke3RoaXMuX2dldFBhcmFtTmFtZSgwKX1cIiAke3RoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSA/ICdtdWx0aXBsZT1cIm11bHRpcGxlXCInIDogdW5kZWZpbmVkfSAvPjxpbnB1dCB0eXBlPVwic3VibWl0XCIgdmFsdWU9XCJVcGxvYWQhXCI+PC9kaXY+YDtcbiAgICAgICAgbGV0IGZpZWxkcyA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuY3JlYXRlRWxlbWVudChmaWVsZHNTdHJpbmcpO1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50LnRhZ05hbWUgIT09IFwiRk9STVwiKSB7XG4gICAgICAgICAgICBmb3JtID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5jcmVhdGVFbGVtZW50KGA8Zm9ybSBhY3Rpb249XCIke3RoaXMub3B0aW9ucy51cmx9XCIgZW5jdHlwZT1cIm11bHRpcGFydC9mb3JtLWRhdGFcIiBtZXRob2Q9XCIke3RoaXMub3B0aW9ucy5tZXRob2R9XCI+PC9mb3JtPmApO1xuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChmaWVsZHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gTWFrZSBzdXJlIHRoYXQgdGhlIGVuY3R5cGUgYW5kIG1ldGhvZCBhdHRyaWJ1dGVzIGFyZSBzZXQgcHJvcGVybHlcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJlbmN0eXBlXCIsIFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiKTtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtZXRob2RcIiwgdGhpcy5vcHRpb25zLm1ldGhvZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvcm0gIT0gbnVsbCA/IGZvcm0gOiBmaWVsZHM7XG4gICAgfVxuICAgIC8vIFJldHVybnMgdGhlIGZhbGxiYWNrIGVsZW1lbnRzIGlmIHRoZXkgZXhpc3QgYWxyZWFkeVxuICAgIC8vXG4gICAgLy8gVGhpcyBjb2RlIGhhcyB0byBwYXNzIGluIElFNyA6KFxuICAgIGdldEV4aXN0aW5nRmFsbGJhY2soKSB7XG4gICAgICAgIGxldCBnZXRGYWxsYmFjayA9IGZ1bmN0aW9uKGVsZW1lbnRzKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBlbCBvZiBlbGVtZW50cyl7XG4gICAgICAgICAgICAgICAgaWYgKC8oXnwgKWZhbGxiYWNrKCR8ICkvLnRlc3QoZWwuY2xhc3NOYW1lKSkgcmV0dXJuIGVsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBmb3IgKGxldCB0YWdOYW1lIG9mIFtcbiAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICBcImZvcm1cIlxuICAgICAgICBdKXtcbiAgICAgICAgICAgIHZhciBmYWxsYmFjaztcbiAgICAgICAgICAgIGlmIChmYWxsYmFjayA9IGdldEZhbGxiYWNrKHRoaXMuZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YWdOYW1lKSkpIHJldHVybiBmYWxsYmFjaztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBBY3RpdmF0ZXMgYWxsIGxpc3RlbmVycyBzdG9yZWQgaW4gQGxpc3RlbmVyc1xuICAgIHNldHVwRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5tYXAoKGVsZW1lbnRMaXN0ZW5lcnMpPT4oKCk9PntcbiAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgICAgICAgICAgICAgZm9yKGxldCBldmVudCBpbiBlbGVtZW50TGlzdGVuZXJzLmV2ZW50cyl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsaXN0ZW5lciA9IGVsZW1lbnRMaXN0ZW5lcnMuZXZlbnRzW2V2ZW50XTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goZWxlbWVudExpc3RlbmVycy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfSkoKVxuICAgICAgICApO1xuICAgIH1cbiAgICAvLyBEZWFjdGl2YXRlcyBhbGwgbGlzdGVuZXJzIHN0b3JlZCBpbiBAbGlzdGVuZXJzXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5tYXAoKGVsZW1lbnRMaXN0ZW5lcnMpPT4oKCk9PntcbiAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgICAgICAgICAgICAgZm9yKGxldCBldmVudCBpbiBlbGVtZW50TGlzdGVuZXJzLmV2ZW50cyl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsaXN0ZW5lciA9IGVsZW1lbnRMaXN0ZW5lcnMuZXZlbnRzW2V2ZW50XTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goZWxlbWVudExpc3RlbmVycy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfSkoKVxuICAgICAgICApO1xuICAgIH1cbiAgICAvLyBSZW1vdmVzIGFsbCBldmVudCBsaXN0ZW5lcnMgYW5kIGNhbmNlbHMgYWxsIGZpbGVzIGluIHRoZSBxdWV1ZSBvciBiZWluZyBwcm9jZXNzZWQuXG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgdGhpcy5jbGlja2FibGVFbGVtZW50cy5mb3JFYWNoKChlbGVtZW50KT0+ZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiZHotY2xpY2thYmxlXCIpXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgICAgdGhpcy5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVzLm1hcCgoZmlsZSk9PnRoaXMuY2FuY2VsVXBsb2FkKGZpbGUpXG4gICAgICAgICk7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMuZGlzYWJsZWQ7XG4gICAgICAgIHRoaXMuY2xpY2thYmxlRWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCk9PmVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LWNsaWNrYWJsZVwiKVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gdGhpcy5zZXR1cEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfVxuICAgIC8vIFJldHVybnMgYSBuaWNlbHkgZm9ybWF0dGVkIGZpbGVzaXplXG4gICAgZmlsZXNpemUoc2l6ZSkge1xuICAgICAgICBsZXQgc2VsZWN0ZWRTaXplID0gMDtcbiAgICAgICAgbGV0IHNlbGVjdGVkVW5pdCA9IFwiYlwiO1xuICAgICAgICBpZiAoc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIGxldCB1bml0cyA9IFtcbiAgICAgICAgICAgICAgICBcInRiXCIsXG4gICAgICAgICAgICAgICAgXCJnYlwiLFxuICAgICAgICAgICAgICAgIFwibWJcIixcbiAgICAgICAgICAgICAgICBcImtiXCIsXG4gICAgICAgICAgICAgICAgXCJiXCJcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdW5pdHMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgIGxldCB1bml0ID0gdW5pdHNbaV07XG4gICAgICAgICAgICAgICAgbGV0IGN1dG9mZiA9IE1hdGgucG93KHRoaXMub3B0aW9ucy5maWxlc2l6ZUJhc2UsIDQgLSBpKSAvIDEwO1xuICAgICAgICAgICAgICAgIGlmIChzaXplID49IGN1dG9mZikge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFNpemUgPSBzaXplIC8gTWF0aC5wb3codGhpcy5vcHRpb25zLmZpbGVzaXplQmFzZSwgNCAtIGkpO1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFVuaXQgPSB1bml0O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxlY3RlZFNpemUgPSBNYXRoLnJvdW5kKDEwICogc2VsZWN0ZWRTaXplKSAvIDEwOyAvLyBDdXR0aW5nIG9mIGRpZ2l0c1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgPHN0cm9uZz4ke3NlbGVjdGVkU2l6ZX08L3N0cm9uZz4gJHt0aGlzLm9wdGlvbnMuZGljdEZpbGVTaXplVW5pdHNbc2VsZWN0ZWRVbml0XX1gO1xuICAgIH1cbiAgICAvLyBBZGRzIG9yIHJlbW92ZXMgdGhlIGBkei1tYXgtZmlsZXMtcmVhY2hlZGAgY2xhc3MgZnJvbSB0aGUgZm9ybS5cbiAgICBfdXBkYXRlTWF4RmlsZXNSZWFjaGVkQ2xhc3MoKSB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubWF4RmlsZXMgIT0gbnVsbCAmJiB0aGlzLmdldEFjY2VwdGVkRmlsZXMoKS5sZW5ndGggPj0gdGhpcy5vcHRpb25zLm1heEZpbGVzKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5nZXRBY2NlcHRlZEZpbGVzKCkubGVuZ3RoID09PSB0aGlzLm9wdGlvbnMubWF4RmlsZXMpIHRoaXMuZW1pdChcIm1heGZpbGVzcmVhY2hlZFwiLCB0aGlzLmZpbGVzKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LW1heC1maWxlcy1yZWFjaGVkXCIpO1xuICAgICAgICB9IGVsc2UgcmV0dXJuIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiZHotbWF4LWZpbGVzLXJlYWNoZWRcIik7XG4gICAgfVxuICAgIGRyb3AoZSkge1xuICAgICAgICBpZiAoIWUuZGF0YVRyYW5zZmVyKSByZXR1cm47XG4gICAgICAgIHRoaXMuZW1pdChcImRyb3BcIiwgZSk7XG4gICAgICAgIC8vIENvbnZlcnQgdGhlIEZpbGVMaXN0IHRvIGFuIEFycmF5XG4gICAgICAgIC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGZvciBJRTExXG4gICAgICAgIGxldCBmaWxlcyA9IFtdO1xuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZS5kYXRhVHJhbnNmZXIuZmlsZXMubGVuZ3RoOyBpKyspZmlsZXNbaV0gPSBlLmRhdGFUcmFuc2Zlci5maWxlc1tpXTtcbiAgICAgICAgLy8gRXZlbiBpZiBpdCdzIGEgZm9sZGVyLCBmaWxlcy5sZW5ndGggd2lsbCBjb250YWluIHRoZSBmb2xkZXJzLlxuICAgICAgICBpZiAoZmlsZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBsZXQgeyBpdGVtczogaXRlbXMgIH0gPSBlLmRhdGFUcmFuc2ZlcjtcbiAgICAgICAgICAgIGlmIChpdGVtcyAmJiBpdGVtcy5sZW5ndGggJiYgaXRlbXNbMF0ud2Via2l0R2V0QXNFbnRyeSAhPSBudWxsKSAvLyBUaGUgYnJvd3NlciBzdXBwb3J0cyBkcm9wcGluZyBvZiBmb2xkZXJzLCBzbyBoYW5kbGUgaXRlbXMgaW5zdGVhZCBvZiBmaWxlc1xuICAgICAgICAgICAgdGhpcy5fYWRkRmlsZXNGcm9tSXRlbXMoaXRlbXMpO1xuICAgICAgICAgICAgZWxzZSB0aGlzLmhhbmRsZUZpbGVzKGZpbGVzKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVtaXQoXCJhZGRlZGZpbGVzXCIsIGZpbGVzKTtcbiAgICB9XG4gICAgcGFzdGUoZSkge1xuICAgICAgICBpZiAoJDNlZDI2OWYyZjBmYjIyNGIkdmFyJF9fZ3VhcmRfXyhlICE9IG51bGwgPyBlLmNsaXBib2FyZERhdGEgOiB1bmRlZmluZWQsICh4KT0+eC5pdGVtc1xuICAgICAgICApID09IG51bGwpIHJldHVybjtcbiAgICAgICAgdGhpcy5lbWl0KFwicGFzdGVcIiwgZSk7XG4gICAgICAgIGxldCB7IGl0ZW1zOiBpdGVtcyAgfSA9IGUuY2xpcGJvYXJkRGF0YTtcbiAgICAgICAgaWYgKGl0ZW1zLmxlbmd0aCkgcmV0dXJuIHRoaXMuX2FkZEZpbGVzRnJvbUl0ZW1zKGl0ZW1zKTtcbiAgICB9XG4gICAgaGFuZGxlRmlsZXMoZmlsZXMpIHtcbiAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl0aGlzLmFkZEZpbGUoZmlsZSk7XG4gICAgfVxuICAgIC8vIFdoZW4gYSBmb2xkZXIgaXMgZHJvcHBlZCAob3IgZmlsZXMgYXJlIHBhc3RlZCksIGl0ZW1zIG11c3QgYmUgaGFuZGxlZFxuICAgIC8vIGluc3RlYWQgb2YgZmlsZXMuXG4gICAgX2FkZEZpbGVzRnJvbUl0ZW1zKGl0ZW1zKSB7XG4gICAgICAgIHJldHVybiAoKCk9PntcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGl0ZW0gb2YgaXRlbXMpe1xuICAgICAgICAgICAgICAgIHZhciBlbnRyeTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbS53ZWJraXRHZXRBc0VudHJ5ICE9IG51bGwgJiYgKGVudHJ5ID0gaXRlbS53ZWJraXRHZXRBc0VudHJ5KCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbnRyeS5pc0ZpbGUpIHJlc3VsdC5wdXNoKHRoaXMuYWRkRmlsZShpdGVtLmdldEFzRmlsZSgpKSk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGVudHJ5LmlzRGlyZWN0b3J5KSAvLyBBcHBlbmQgYWxsIGZpbGVzIGZyb20gdGhhdCBkaXJlY3RvcnkgdG8gZmlsZXNcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5fYWRkRmlsZXNGcm9tRGlyZWN0b3J5KGVudHJ5LCBlbnRyeS5uYW1lKSk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzdWx0LnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uZ2V0QXNGaWxlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ua2luZCA9PSBudWxsIHx8IGl0ZW0ua2luZCA9PT0gXCJmaWxlXCIpIHJlc3VsdC5wdXNoKHRoaXMuYWRkRmlsZShpdGVtLmdldEFzRmlsZSgpKSk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzdWx0LnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgcmVzdWx0LnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH0pKCk7XG4gICAgfVxuICAgIC8vIEdvZXMgdGhyb3VnaCB0aGUgZGlyZWN0b3J5LCBhbmQgYWRkcyBlYWNoIGZpbGUgaXQgZmluZHMgcmVjdXJzaXZlbHlcbiAgICBfYWRkRmlsZXNGcm9tRGlyZWN0b3J5KGRpcmVjdG9yeSwgcGF0aCkge1xuICAgICAgICBsZXQgZGlyUmVhZGVyID0gZGlyZWN0b3J5LmNyZWF0ZVJlYWRlcigpO1xuICAgICAgICBsZXQgZXJyb3JIYW5kbGVyID0gKGVycm9yKT0+JDNlZDI2OWYyZjBmYjIyNGIkdmFyJF9fZ3VhcmRNZXRob2RfXyhjb25zb2xlLCBcImxvZ1wiLCAobyk9Pm8ubG9nKGVycm9yKVxuICAgICAgICAgICAgKVxuICAgICAgICA7XG4gICAgICAgIHZhciByZWFkRW50cmllcyA9ICgpPT57XG4gICAgICAgICAgICByZXR1cm4gZGlyUmVhZGVyLnJlYWRFbnRyaWVzKChlbnRyaWVzKT0+e1xuICAgICAgICAgICAgICAgIGlmIChlbnRyaWVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgZW50cnkgb2YgZW50cmllcyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW50cnkuaXNGaWxlKSBlbnRyeS5maWxlKChmaWxlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuaWdub3JlSGlkZGVuRmlsZXMgJiYgZmlsZS5uYW1lLnN1YnN0cmluZygwLCAxKSA9PT0gXCIuXCIpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlLmZ1bGxQYXRoID0gYCR7cGF0aH0vJHtmaWxlLm5hbWV9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5hZGRGaWxlKGZpbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChlbnRyeS5pc0RpcmVjdG9yeSkgdGhpcy5fYWRkRmlsZXNGcm9tRGlyZWN0b3J5KGVudHJ5LCBgJHtwYXRofS8ke2VudHJ5Lm5hbWV9YCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVjdXJzaXZlbHkgY2FsbCByZWFkRW50cmllcygpIGFnYWluLCBzaW5jZSBicm93c2VyIG9ubHkgaGFuZGxlXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoZSBmaXJzdCAxMDAgZW50cmllcy5cbiAgICAgICAgICAgICAgICAgICAgLy8gU2VlOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRGlyZWN0b3J5UmVhZGVyI3JlYWRFbnRyaWVzXG4gICAgICAgICAgICAgICAgICAgIHJlYWRFbnRyaWVzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfSwgZXJyb3JIYW5kbGVyKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHJlYWRFbnRyaWVzKCk7XG4gICAgfVxuICAgIC8vIElmIGBkb25lKClgIGlzIGNhbGxlZCB3aXRob3V0IGFyZ3VtZW50IHRoZSBmaWxlIGlzIGFjY2VwdGVkXG4gICAgLy8gSWYgeW91IGNhbGwgaXQgd2l0aCBhbiBlcnJvciBtZXNzYWdlLCB0aGUgZmlsZSBpcyByZWplY3RlZFxuICAgIC8vIChUaGlzIGFsbG93cyBmb3IgYXN5bmNocm9ub3VzIHZhbGlkYXRpb24pXG4gICAgLy9cbiAgICAvLyBUaGlzIGZ1bmN0aW9uIGNoZWNrcyB0aGUgZmlsZXNpemUsIGFuZCBpZiB0aGUgZmlsZS50eXBlIHBhc3NlcyB0aGVcbiAgICAvLyBgYWNjZXB0ZWRGaWxlc2AgY2hlY2suXG4gICAgYWNjZXB0KGZpbGUsIGRvbmUpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5tYXhGaWxlc2l6ZSAmJiBmaWxlLnNpemUgPiB0aGlzLm9wdGlvbnMubWF4RmlsZXNpemUgKiAxMDQ4NTc2KSBkb25lKHRoaXMub3B0aW9ucy5kaWN0RmlsZVRvb0JpZy5yZXBsYWNlKFwie3tmaWxlc2l6ZX19XCIsIE1hdGgucm91bmQoZmlsZS5zaXplIC8gMTAyNCAvIDEwLjI0KSAvIDEwMCkucmVwbGFjZShcInt7bWF4RmlsZXNpemV9fVwiLCB0aGlzLm9wdGlvbnMubWF4RmlsZXNpemUpKTtcbiAgICAgICAgZWxzZSBpZiAoISQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuaXNWYWxpZEZpbGUoZmlsZSwgdGhpcy5vcHRpb25zLmFjY2VwdGVkRmlsZXMpKSBkb25lKHRoaXMub3B0aW9ucy5kaWN0SW52YWxpZEZpbGVUeXBlKTtcbiAgICAgICAgZWxzZSBpZiAodGhpcy5vcHRpb25zLm1heEZpbGVzICE9IG51bGwgJiYgdGhpcy5nZXRBY2NlcHRlZEZpbGVzKCkubGVuZ3RoID49IHRoaXMub3B0aW9ucy5tYXhGaWxlcykge1xuICAgICAgICAgICAgZG9uZSh0aGlzLm9wdGlvbnMuZGljdE1heEZpbGVzRXhjZWVkZWQucmVwbGFjZShcInt7bWF4RmlsZXN9fVwiLCB0aGlzLm9wdGlvbnMubWF4RmlsZXMpKTtcbiAgICAgICAgICAgIHRoaXMuZW1pdChcIm1heGZpbGVzZXhjZWVkZWRcIiwgZmlsZSk7XG4gICAgICAgIH0gZWxzZSB0aGlzLm9wdGlvbnMuYWNjZXB0LmNhbGwodGhpcywgZmlsZSwgZG9uZSk7XG4gICAgfVxuICAgIGFkZEZpbGUoZmlsZSkge1xuICAgICAgICBmaWxlLnVwbG9hZCA9IHtcbiAgICAgICAgICAgIHV1aWQ6ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkudXVpZHY0KCksXG4gICAgICAgICAgICBwcm9ncmVzczogMCxcbiAgICAgICAgICAgIC8vIFNldHRpbmcgdGhlIHRvdGFsIHVwbG9hZCBzaXplIHRvIGZpbGUuc2l6ZSBmb3IgdGhlIGJlZ2lubmluZ1xuICAgICAgICAgICAgLy8gSXQncyBhY3R1YWwgZGlmZmVyZW50IHRoYW4gdGhlIHNpemUgdG8gYmUgdHJhbnNtaXR0ZWQuXG4gICAgICAgICAgICB0b3RhbDogZmlsZS5zaXplLFxuICAgICAgICAgICAgYnl0ZXNTZW50OiAwLFxuICAgICAgICAgICAgZmlsZW5hbWU6IHRoaXMuX3JlbmFtZUZpbGUoZmlsZSlcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5maWxlcy5wdXNoKGZpbGUpO1xuICAgICAgICBmaWxlLnN0YXR1cyA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQURERUQ7XG4gICAgICAgIHRoaXMuZW1pdChcImFkZGVkZmlsZVwiLCBmaWxlKTtcbiAgICAgICAgdGhpcy5fZW5xdWV1ZVRodW1ibmFpbChmaWxlKTtcbiAgICAgICAgdGhpcy5hY2NlcHQoZmlsZSwgKGVycm9yKT0+e1xuICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgZmlsZS5hY2NlcHRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuX2Vycm9yUHJvY2Vzc2luZyhbXG4gICAgICAgICAgICAgICAgICAgIGZpbGVcbiAgICAgICAgICAgICAgICBdLCBlcnJvcik7IC8vIFdpbGwgc2V0IHRoZSBmaWxlLnN0YXR1c1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmaWxlLmFjY2VwdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmF1dG9RdWV1ZSkgdGhpcy5lbnF1ZXVlRmlsZShmaWxlKTtcbiAgICAgICAgICAgICAgICAgLy8gV2lsbCBzZXQgLmFjY2VwdGVkID0gdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fdXBkYXRlTWF4RmlsZXNSZWFjaGVkQ2xhc3MoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIFdyYXBwZXIgZm9yIGVucXVldWVGaWxlXG4gICAgZW5xdWV1ZUZpbGVzKGZpbGVzKSB7XG4gICAgICAgIGZvciAobGV0IGZpbGUgb2YgZmlsZXMpdGhpcy5lbnF1ZXVlRmlsZShmaWxlKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGVucXVldWVGaWxlKGZpbGUpIHtcbiAgICAgICAgaWYgKGZpbGUuc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LkFEREVEICYmIGZpbGUuYWNjZXB0ZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGZpbGUuc3RhdHVzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5RVUVVRUQ7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmF1dG9Qcm9jZXNzUXVldWUpIHJldHVybiBzZXRUaW1lb3V0KCgpPT50aGlzLnByb2Nlc3NRdWV1ZSgpXG4gICAgICAgICAgICAsIDApOyAvLyBEZWZlcnJpbmcgdGhlIGNhbGxcbiAgICAgICAgfSBlbHNlIHRocm93IG5ldyBFcnJvcihcIlRoaXMgZmlsZSBjYW4ndCBiZSBxdWV1ZWQgYmVjYXVzZSBpdCBoYXMgYWxyZWFkeSBiZWVuIHByb2Nlc3NlZCBvciB3YXMgcmVqZWN0ZWQuXCIpO1xuICAgIH1cbiAgICBfZW5xdWV1ZVRodW1ibmFpbChmaWxlKSB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY3JlYXRlSW1hZ2VUaHVtYm5haWxzICYmIGZpbGUudHlwZS5tYXRjaCgvaW1hZ2UuKi8pICYmIGZpbGUuc2l6ZSA8PSB0aGlzLm9wdGlvbnMubWF4VGh1bWJuYWlsRmlsZXNpemUgKiAxMDQ4NTc2KSB7XG4gICAgICAgICAgICB0aGlzLl90aHVtYm5haWxRdWV1ZS5wdXNoKGZpbGUpO1xuICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoKCk9PnRoaXMuX3Byb2Nlc3NUaHVtYm5haWxRdWV1ZSgpXG4gICAgICAgICAgICAsIDApOyAvLyBEZWZlcnJpbmcgdGhlIGNhbGxcbiAgICAgICAgfVxuICAgIH1cbiAgICBfcHJvY2Vzc1RodW1ibmFpbFF1ZXVlKCkge1xuICAgICAgICBpZiAodGhpcy5fcHJvY2Vzc2luZ1RodW1ibmFpbCB8fCB0aGlzLl90aHVtYm5haWxRdWV1ZS5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgICAgdGhpcy5fcHJvY2Vzc2luZ1RodW1ibmFpbCA9IHRydWU7XG4gICAgICAgIGxldCBmaWxlID0gdGhpcy5fdGh1bWJuYWlsUXVldWUuc2hpZnQoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlVGh1bWJuYWlsKGZpbGUsIHRoaXMub3B0aW9ucy50aHVtYm5haWxXaWR0aCwgdGhpcy5vcHRpb25zLnRodW1ibmFpbEhlaWdodCwgdGhpcy5vcHRpb25zLnRodW1ibmFpbE1ldGhvZCwgdHJ1ZSwgKGRhdGFVcmwpPT57XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJ0aHVtYm5haWxcIiwgZmlsZSwgZGF0YVVybCk7XG4gICAgICAgICAgICB0aGlzLl9wcm9jZXNzaW5nVGh1bWJuYWlsID0gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcHJvY2Vzc1RodW1ibmFpbFF1ZXVlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBDYW4gYmUgY2FsbGVkIGJ5IHRoZSB1c2VyIHRvIHJlbW92ZSBhIGZpbGVcbiAgICByZW1vdmVGaWxlKGZpbGUpIHtcbiAgICAgICAgaWYgKGZpbGUuc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlVQTE9BRElORykgdGhpcy5jYW5jZWxVcGxvYWQoZmlsZSk7XG4gICAgICAgIHRoaXMuZmlsZXMgPSAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkd2l0aG91dCh0aGlzLmZpbGVzLCBmaWxlKTtcbiAgICAgICAgdGhpcy5lbWl0KFwicmVtb3ZlZGZpbGVcIiwgZmlsZSk7XG4gICAgICAgIGlmICh0aGlzLmZpbGVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHRoaXMuZW1pdChcInJlc2V0XCIpO1xuICAgIH1cbiAgICAvLyBSZW1vdmVzIGFsbCBmaWxlcyB0aGF0IGFyZW4ndCBjdXJyZW50bHkgcHJvY2Vzc2VkIGZyb20gdGhlIGxpc3RcbiAgICByZW1vdmVBbGxGaWxlcyhjYW5jZWxJZk5lY2Vzc2FyeSkge1xuICAgICAgICAvLyBDcmVhdGUgYSBjb3B5IG9mIGZpbGVzIHNpbmNlIHJlbW92ZUZpbGUoKSBjaGFuZ2VzIHRoZSBAZmlsZXMgYXJyYXkuXG4gICAgICAgIGlmIChjYW5jZWxJZk5lY2Vzc2FyeSA9PSBudWxsKSBjYW5jZWxJZk5lY2Vzc2FyeSA9IGZhbHNlO1xuICAgICAgICBmb3IgKGxldCBmaWxlIG9mIHRoaXMuZmlsZXMuc2xpY2UoKSlpZiAoZmlsZS5zdGF0dXMgIT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HIHx8IGNhbmNlbElmTmVjZXNzYXJ5KSB0aGlzLnJlbW92ZUZpbGUoZmlsZSk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBSZXNpemVzIGFuIGltYWdlIGJlZm9yZSBpdCBnZXRzIHNlbnQgdG8gdGhlIHNlcnZlci4gVGhpcyBmdW5jdGlvbiBpcyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZlxuICAgIC8vIGBvcHRpb25zLnRyYW5zZm9ybUZpbGVgIGlmIGByZXNpemVXaWR0aGAgb3IgYHJlc2l6ZUhlaWdodGAgYXJlIHNldC4gVGhlIGNhbGxiYWNrIGlzIGludm9rZWQgd2l0aFxuICAgIC8vIHRoZSByZXNpemVkIGJsb2IuXG4gICAgcmVzaXplSW1hZ2UoZmlsZSwgd2lkdGgsIGhlaWdodCwgcmVzaXplTWV0aG9kLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVUaHVtYm5haWwoZmlsZSwgd2lkdGgsIGhlaWdodCwgcmVzaXplTWV0aG9kLCB0cnVlLCAoZGF0YVVybCwgY2FudmFzKT0+e1xuICAgICAgICAgICAgaWYgKGNhbnZhcyA9PSBudWxsKSAvLyBUaGUgaW1hZ2UgaGFzIG5vdCBiZWVuIHJlc2l6ZWRcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhmaWxlKTtcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGxldCB7IHJlc2l6ZU1pbWVUeXBlOiByZXNpemVNaW1lVHlwZSAgfSA9IHRoaXMub3B0aW9ucztcbiAgICAgICAgICAgICAgICBpZiAocmVzaXplTWltZVR5cGUgPT0gbnVsbCkgcmVzaXplTWltZVR5cGUgPSBmaWxlLnR5cGU7XG4gICAgICAgICAgICAgICAgbGV0IHJlc2l6ZWREYXRhVVJMID0gY2FudmFzLnRvRGF0YVVSTChyZXNpemVNaW1lVHlwZSwgdGhpcy5vcHRpb25zLnJlc2l6ZVF1YWxpdHkpO1xuICAgICAgICAgICAgICAgIGlmIChyZXNpemVNaW1lVHlwZSA9PT0gXCJpbWFnZS9qcGVnXCIgfHwgcmVzaXplTWltZVR5cGUgPT09IFwiaW1hZ2UvanBnXCIpIC8vIE5vdyBhZGQgdGhlIG9yaWdpbmFsIEVYSUYgaW5mb3JtYXRpb25cbiAgICAgICAgICAgICAgICByZXNpemVkRGF0YVVSTCA9ICQzZWQyNjlmMmYwZmIyMjRiJHZhciRFeGlmUmVzdG9yZS5yZXN0b3JlKGZpbGUuZGF0YVVSTCwgcmVzaXplZERhdGFVUkwpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjaygkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmRhdGFVUkl0b0Jsb2IocmVzaXplZERhdGFVUkwpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZVRodW1ibmFpbChmaWxlLCB3aWR0aCwgaGVpZ2h0LCByZXNpemVNZXRob2QsIGZpeE9yaWVudGF0aW9uLCBjYWxsYmFjaykge1xuICAgICAgICBsZXQgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gKCk9PntcbiAgICAgICAgICAgIGZpbGUuZGF0YVVSTCA9IGZpbGVSZWFkZXIucmVzdWx0O1xuICAgICAgICAgICAgLy8gRG9uJ3QgYm90aGVyIGNyZWF0aW5nIGEgdGh1bWJuYWlsIGZvciBTVkcgaW1hZ2VzIHNpbmNlIHRoZXkncmUgdmVjdG9yXG4gICAgICAgICAgICBpZiAoZmlsZS50eXBlID09PSBcImltYWdlL3N2Zyt4bWxcIikge1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKSBjYWxsYmFjayhmaWxlUmVhZGVyLnJlc3VsdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jcmVhdGVUaHVtYm5haWxGcm9tVXJsKGZpbGUsIHdpZHRoLCBoZWlnaHQsIHJlc2l6ZU1ldGhvZCwgZml4T3JpZW50YXRpb24sIGNhbGxiYWNrKTtcbiAgICAgICAgfTtcbiAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICAgIH1cbiAgICAvLyBgbW9ja0ZpbGVgIG5lZWRzIHRvIGhhdmUgdGhlc2UgYXR0cmlidXRlczpcbiAgICAvL1xuICAgIC8vICAgICB7IG5hbWU6ICduYW1lJywgc2l6ZTogMTIzNDUsIGltYWdlVXJsOiAnJyB9XG4gICAgLy9cbiAgICAvLyBgY2FsbGJhY2tgIHdpbGwgYmUgaW52b2tlZCB3aGVuIHRoZSBpbWFnZSBoYXMgYmVlbiBkb3dubG9hZGVkIGFuZCBkaXNwbGF5ZWQuXG4gICAgLy8gYGNyb3NzT3JpZ2luYCB3aWxsIGJlIGFkZGVkIHRvIHRoZSBgaW1nYCB0YWcgd2hlbiBhY2Nlc3NpbmcgdGhlIGZpbGUuXG4gICAgZGlzcGxheUV4aXN0aW5nRmlsZShtb2NrRmlsZSwgaW1hZ2VVcmwsIGNhbGxiYWNrLCBjcm9zc09yaWdpbiwgcmVzaXplVGh1bWJuYWlsID0gdHJ1ZSkge1xuICAgICAgICB0aGlzLmVtaXQoXCJhZGRlZGZpbGVcIiwgbW9ja0ZpbGUpO1xuICAgICAgICB0aGlzLmVtaXQoXCJjb21wbGV0ZVwiLCBtb2NrRmlsZSk7XG4gICAgICAgIGlmICghcmVzaXplVGh1bWJuYWlsKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJ0aHVtYm5haWxcIiwgbW9ja0ZpbGUsIGltYWdlVXJsKTtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2soKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxldCBvbkRvbmUgPSAodGh1bWJuYWlsKT0+e1xuICAgICAgICAgICAgICAgIHRoaXMuZW1pdChcInRodW1ibmFpbFwiLCBtb2NrRmlsZSwgdGh1bWJuYWlsKTtcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbW9ja0ZpbGUuZGF0YVVSTCA9IGltYWdlVXJsO1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVUaHVtYm5haWxGcm9tVXJsKG1vY2tGaWxlLCB0aGlzLm9wdGlvbnMudGh1bWJuYWlsV2lkdGgsIHRoaXMub3B0aW9ucy50aHVtYm5haWxIZWlnaHQsIHRoaXMub3B0aW9ucy50aHVtYm5haWxNZXRob2QsIHRoaXMub3B0aW9ucy5maXhPcmllbnRhdGlvbiwgb25Eb25lLCBjcm9zc09yaWdpbik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY3JlYXRlVGh1bWJuYWlsRnJvbVVybChmaWxlLCB3aWR0aCwgaGVpZ2h0LCByZXNpemVNZXRob2QsIGZpeE9yaWVudGF0aW9uLCBjYWxsYmFjaywgY3Jvc3NPcmlnaW4pIHtcbiAgICAgICAgLy8gTm90IHVzaW5nIGBuZXcgSW1hZ2VgIGhlcmUgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBsYXRlc3QgQ2hyb21lIHZlcnNpb25zLlxuICAgICAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2VueW8vZHJvcHpvbmUvcHVsbC8yMjZcbiAgICAgICAgbGV0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgICAgIGlmIChjcm9zc09yaWdpbikgaW1nLmNyb3NzT3JpZ2luID0gY3Jvc3NPcmlnaW47XG4gICAgICAgIC8vIGZpeE9yaWVudGF0aW9uIGlzIG5vdCBuZWVkZWQgYW55bW9yZSB3aXRoIGJyb3dzZXJzIGhhbmRsaW5nIGltYWdlT3JpZW50YXRpb25cbiAgICAgICAgZml4T3JpZW50YXRpb24gPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpW1wiaW1hZ2VPcmllbnRhdGlvblwiXSA9PSBcImZyb20taW1hZ2VcIiA/IGZhbHNlIDogZml4T3JpZW50YXRpb247XG4gICAgICAgIGltZy5vbmxvYWQgPSAoKT0+e1xuICAgICAgICAgICAgbGV0IGxvYWRFeGlmID0gKGNhbGxiYWNrKT0+Y2FsbGJhY2soMSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgRVhJRiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBFWElGICE9PSBudWxsICYmIGZpeE9yaWVudGF0aW9uKSBsb2FkRXhpZiA9IChjYWxsYmFjayk9PkVYSUYuZ2V0RGF0YShpbWcsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soRVhJRi5nZXRUYWcodGhpcywgXCJPcmllbnRhdGlvblwiKSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIHJldHVybiBsb2FkRXhpZigob3JpZW50YXRpb24pPT57XG4gICAgICAgICAgICAgICAgZmlsZS53aWR0aCA9IGltZy53aWR0aDtcbiAgICAgICAgICAgICAgICBmaWxlLmhlaWdodCA9IGltZy5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgbGV0IHJlc2l6ZUluZm8gPSB0aGlzLm9wdGlvbnMucmVzaXplLmNhbGwodGhpcywgZmlsZSwgd2lkdGgsIGhlaWdodCwgcmVzaXplTWV0aG9kKTtcbiAgICAgICAgICAgICAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcbiAgICAgICAgICAgICAgICBsZXQgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggPSByZXNpemVJbmZvLnRyZ1dpZHRoO1xuICAgICAgICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSByZXNpemVJbmZvLnRyZ0hlaWdodDtcbiAgICAgICAgICAgICAgICBpZiAob3JpZW50YXRpb24gPiA0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHJlc2l6ZUluZm8udHJnSGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gcmVzaXplSW5mby50cmdXaWR0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3dpdGNoKG9yaWVudGF0aW9uKXtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaG9yaXpvbnRhbCBmbGlwXG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKGNhbnZhcy53aWR0aCwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHguc2NhbGUoLTEsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDE4MMKwIHJvdGF0ZSBsZWZ0XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgucm90YXRlKE1hdGguUEkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHZlcnRpY2FsIGZsaXBcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoMCwgY2FudmFzLmhlaWdodCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHguc2NhbGUoMSwgLTEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHZlcnRpY2FsIGZsaXAgKyA5MCByb3RhdGUgcmlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5yb3RhdGUoMC41ICogTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHguc2NhbGUoMSwgLTEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDkwwrAgcm90YXRlIHJpZ2h0XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgucm90YXRlKDAuNSAqIE1hdGguUEkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgwLCAtY2FudmFzLndpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBob3Jpem9udGFsIGZsaXAgKyA5MCByb3RhdGUgcmlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5yb3RhdGUoMC41ICogTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKGNhbnZhcy5oZWlnaHQsIC1jYW52YXMud2lkdGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnNjYWxlKC0xLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyA5MMKwIHJvdGF0ZSBsZWZ0XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgucm90YXRlKC0wLjUgKiBNYXRoLlBJKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoLWNhbnZhcy5oZWlnaHQsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFRoaXMgaXMgYSBidWdmaXggZm9yIGlPUycgc2NhbGluZyBidWcuXG4gICAgICAgICAgICAgICAgJDNlZDI2OWYyZjBmYjIyNGIkdmFyJGRyYXdJbWFnZUlPU0ZpeChjdHgsIGltZywgcmVzaXplSW5mby5zcmNYICE9IG51bGwgPyByZXNpemVJbmZvLnNyY1ggOiAwLCByZXNpemVJbmZvLnNyY1kgIT0gbnVsbCA/IHJlc2l6ZUluZm8uc3JjWSA6IDAsIHJlc2l6ZUluZm8uc3JjV2lkdGgsIHJlc2l6ZUluZm8uc3JjSGVpZ2h0LCByZXNpemVJbmZvLnRyZ1ggIT0gbnVsbCA/IHJlc2l6ZUluZm8udHJnWCA6IDAsIHJlc2l6ZUluZm8udHJnWSAhPSBudWxsID8gcmVzaXplSW5mby50cmdZIDogMCwgcmVzaXplSW5mby50cmdXaWR0aCwgcmVzaXplSW5mby50cmdIZWlnaHQpO1xuICAgICAgICAgICAgICAgIGxldCB0aHVtYm5haWwgPSBjYW52YXMudG9EYXRhVVJMKFwiaW1hZ2UvcG5nXCIpO1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKSByZXR1cm4gY2FsbGJhY2sodGh1bWJuYWlsLCBjYW52YXMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKSBpbWcub25lcnJvciA9IGNhbGxiYWNrO1xuICAgICAgICByZXR1cm4gaW1nLnNyYyA9IGZpbGUuZGF0YVVSTDtcbiAgICB9XG4gICAgLy8gR29lcyB0aHJvdWdoIHRoZSBxdWV1ZSBhbmQgcHJvY2Vzc2VzIGZpbGVzIGlmIHRoZXJlIGFyZW4ndCB0b28gbWFueSBhbHJlYWR5LlxuICAgIHByb2Nlc3NRdWV1ZSgpIHtcbiAgICAgICAgbGV0IHsgcGFyYWxsZWxVcGxvYWRzOiBwYXJhbGxlbFVwbG9hZHMgIH0gPSB0aGlzLm9wdGlvbnM7XG4gICAgICAgIGxldCBwcm9jZXNzaW5nTGVuZ3RoID0gdGhpcy5nZXRVcGxvYWRpbmdGaWxlcygpLmxlbmd0aDtcbiAgICAgICAgbGV0IGkgPSBwcm9jZXNzaW5nTGVuZ3RoO1xuICAgICAgICAvLyBUaGVyZSBhcmUgYWxyZWFkeSBhdCBsZWFzdCBhcyBtYW55IGZpbGVzIHVwbG9hZGluZyB0aGFuIHNob3VsZCBiZVxuICAgICAgICBpZiAocHJvY2Vzc2luZ0xlbmd0aCA+PSBwYXJhbGxlbFVwbG9hZHMpIHJldHVybjtcbiAgICAgICAgbGV0IHF1ZXVlZEZpbGVzID0gdGhpcy5nZXRRdWV1ZWRGaWxlcygpO1xuICAgICAgICBpZiAoIShxdWV1ZWRGaWxlcy5sZW5ndGggPiAwKSkgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSAvLyBUaGUgZmlsZXMgc2hvdWxkIGJlIHVwbG9hZGVkIGluIG9uZSByZXF1ZXN0XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NGaWxlcyhxdWV1ZWRGaWxlcy5zbGljZSgwLCBwYXJhbGxlbFVwbG9hZHMgLSBwcm9jZXNzaW5nTGVuZ3RoKSk7XG4gICAgICAgIGVsc2Ugd2hpbGUoaSA8IHBhcmFsbGVsVXBsb2Fkcyl7XG4gICAgICAgICAgICBpZiAoIXF1ZXVlZEZpbGVzLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICAgICAgIC8vIE5vdGhpbmcgbGVmdCB0byBwcm9jZXNzXG4gICAgICAgICAgICB0aGlzLnByb2Nlc3NGaWxlKHF1ZXVlZEZpbGVzLnNoaWZ0KCkpO1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFdyYXBwZXIgZm9yIGBwcm9jZXNzRmlsZXNgXG4gICAgcHJvY2Vzc0ZpbGUoZmlsZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzRmlsZXMoW1xuICAgICAgICAgICAgZmlsZVxuICAgICAgICBdKTtcbiAgICB9XG4gICAgLy8gTG9hZHMgdGhlIGZpbGUsIHRoZW4gY2FsbHMgZmluaXNoZWRMb2FkaW5nKClcbiAgICBwcm9jZXNzRmlsZXMoZmlsZXMpIHtcbiAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl7XG4gICAgICAgICAgICBmaWxlLnByb2Nlc3NpbmcgPSB0cnVlOyAvLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgICAgICAgICAgZmlsZS5zdGF0dXMgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlVQTE9BRElORztcbiAgICAgICAgICAgIHRoaXMuZW1pdChcInByb2Nlc3NpbmdcIiwgZmlsZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSkgdGhpcy5lbWl0KFwicHJvY2Vzc2luZ211bHRpcGxlXCIsIGZpbGVzKTtcbiAgICAgICAgcmV0dXJuIHRoaXMudXBsb2FkRmlsZXMoZmlsZXMpO1xuICAgIH1cbiAgICBfZ2V0RmlsZXNXaXRoWGhyKHhocikge1xuICAgICAgICBsZXQgZmlsZXM7XG4gICAgICAgIHJldHVybiBmaWxlcyA9IHRoaXMuZmlsZXMuZmlsdGVyKChmaWxlKT0+ZmlsZS54aHIgPT09IHhoclxuICAgICAgICApLm1hcCgoZmlsZSk9PmZpbGVcbiAgICAgICAgKTtcbiAgICB9XG4gICAgLy8gQ2FuY2VscyB0aGUgZmlsZSB1cGxvYWQgYW5kIHNldHMgdGhlIHN0YXR1cyB0byBDQU5DRUxFRFxuICAgIC8vICoqaWYqKiB0aGUgZmlsZSBpcyBhY3R1YWxseSBiZWluZyB1cGxvYWRlZC5cbiAgICAvLyBJZiBpdCdzIHN0aWxsIGluIHRoZSBxdWV1ZSwgdGhlIGZpbGUgaXMgYmVpbmcgcmVtb3ZlZCBmcm9tIGl0IGFuZCB0aGUgc3RhdHVzXG4gICAgLy8gc2V0IHRvIENBTkNFTEVELlxuICAgIGNhbmNlbFVwbG9hZChmaWxlKSB7XG4gICAgICAgIGlmIChmaWxlLnN0YXR1cyA9PT0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5VUExPQURJTkcpIHtcbiAgICAgICAgICAgIGxldCBncm91cGVkRmlsZXMgPSB0aGlzLl9nZXRGaWxlc1dpdGhYaHIoZmlsZS54aHIpO1xuICAgICAgICAgICAgZm9yIChsZXQgZ3JvdXBlZEZpbGUgb2YgZ3JvdXBlZEZpbGVzKWdyb3VwZWRGaWxlLnN0YXR1cyA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQ0FOQ0VMRUQ7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGZpbGUueGhyICE9PSBcInVuZGVmaW5lZFwiKSBmaWxlLnhoci5hYm9ydCgpO1xuICAgICAgICAgICAgZm9yIChsZXQgZ3JvdXBlZEZpbGUxIG9mIGdyb3VwZWRGaWxlcyl0aGlzLmVtaXQoXCJjYW5jZWxlZFwiLCBncm91cGVkRmlsZTEpO1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSkgdGhpcy5lbWl0KFwiY2FuY2VsZWRtdWx0aXBsZVwiLCBncm91cGVkRmlsZXMpO1xuICAgICAgICB9IGVsc2UgaWYgKGZpbGUuc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LkFEREVEIHx8IGZpbGUuc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlFVRVVFRCkge1xuICAgICAgICAgICAgZmlsZS5zdGF0dXMgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LkNBTkNFTEVEO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwiY2FuY2VsZWRcIiwgZmlsZSk7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSB0aGlzLmVtaXQoXCJjYW5jZWxlZG11bHRpcGxlXCIsIFtcbiAgICAgICAgICAgICAgICBmaWxlXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmF1dG9Qcm9jZXNzUXVldWUpIHJldHVybiB0aGlzLnByb2Nlc3NRdWV1ZSgpO1xuICAgIH1cbiAgICByZXNvbHZlT3B0aW9uKG9wdGlvbiwgLi4uYXJncykge1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gb3B0aW9uLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICByZXR1cm4gb3B0aW9uO1xuICAgIH1cbiAgICB1cGxvYWRGaWxlKGZpbGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXBsb2FkRmlsZXMoW1xuICAgICAgICAgICAgZmlsZVxuICAgICAgICBdKTtcbiAgICB9XG4gICAgdXBsb2FkRmlsZXMoZmlsZXMpIHtcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtRmlsZXMoZmlsZXMsICh0cmFuc2Zvcm1lZEZpbGVzKT0+e1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jaHVua2luZykge1xuICAgICAgICAgICAgICAgIC8vIENodW5raW5nIGlzIG5vdCBhbGxvd2VkIHRvIGJlIHVzZWQgd2l0aCBgdXBsb2FkTXVsdGlwbGVgIHNvIHdlIGtub3dcbiAgICAgICAgICAgICAgICAvLyB0aGF0IHRoZXJlIGlzIG9ubHkgX19vbmVfX2ZpbGUuXG4gICAgICAgICAgICAgICAgbGV0IHRyYW5zZm9ybWVkRmlsZSA9IHRyYW5zZm9ybWVkRmlsZXNbMF07XG4gICAgICAgICAgICAgICAgZmlsZXNbMF0udXBsb2FkLmNodW5rZWQgPSB0aGlzLm9wdGlvbnMuY2h1bmtpbmcgJiYgKHRoaXMub3B0aW9ucy5mb3JjZUNodW5raW5nIHx8IHRyYW5zZm9ybWVkRmlsZS5zaXplID4gdGhpcy5vcHRpb25zLmNodW5rU2l6ZSk7XG4gICAgICAgICAgICAgICAgZmlsZXNbMF0udXBsb2FkLnRvdGFsQ2h1bmtDb3VudCA9IE1hdGguY2VpbCh0cmFuc2Zvcm1lZEZpbGUuc2l6ZSAvIHRoaXMub3B0aW9ucy5jaHVua1NpemUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZpbGVzWzBdLnVwbG9hZC5jaHVua2VkKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBmaWxlIHNob3VsZCBiZSBzZW50IGluIGNodW5rcyFcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgY2h1bmtpbmcgb3B0aW9uIGlzIHNldCwgd2UgKiprbm93KiogdGhhdCB0aGVyZSBjYW4gb25seSBiZSAqKm9uZSoqIGZpbGUsIHNpbmNlXG4gICAgICAgICAgICAgICAgLy8gdXBsb2FkTXVsdGlwbGUgaXMgbm90IGFsbG93ZWQgd2l0aCB0aGlzIG9wdGlvbi5cbiAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IGZpbGVzWzBdO1xuICAgICAgICAgICAgICAgIGxldCB0cmFuc2Zvcm1lZEZpbGUgPSB0cmFuc2Zvcm1lZEZpbGVzWzBdO1xuICAgICAgICAgICAgICAgIGxldCBzdGFydGVkQ2h1bmtDb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgZmlsZS51cGxvYWQuY2h1bmtzID0gW107XG4gICAgICAgICAgICAgICAgbGV0IGhhbmRsZU5leHRDaHVuayA9ICgpPT57XG4gICAgICAgICAgICAgICAgICAgIGxldCBjaHVua0luZGV4ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgLy8gRmluZCB0aGUgbmV4dCBpdGVtIGluIGZpbGUudXBsb2FkLmNodW5rcyB0aGF0IGlzIG5vdCBkZWZpbmVkIHlldC5cbiAgICAgICAgICAgICAgICAgICAgd2hpbGUoZmlsZS51cGxvYWQuY2h1bmtzW2NodW5rSW5kZXhdICE9PSB1bmRlZmluZWQpY2h1bmtJbmRleCsrO1xuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIG1lYW5zLCB0aGF0IGFsbCBjaHVua3MgaGF2ZSBhbHJlYWR5IGJlZW4gc3RhcnRlZC5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNodW5rSW5kZXggPj0gZmlsZS51cGxvYWQudG90YWxDaHVua0NvdW50KSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ZWRDaHVua0NvdW50Kys7XG4gICAgICAgICAgICAgICAgICAgIGxldCBzdGFydCA9IGNodW5rSW5kZXggKiB0aGlzLm9wdGlvbnMuY2h1bmtTaXplO1xuICAgICAgICAgICAgICAgICAgICBsZXQgZW5kID0gTWF0aC5taW4oc3RhcnQgKyB0aGlzLm9wdGlvbnMuY2h1bmtTaXplLCB0cmFuc2Zvcm1lZEZpbGUuc2l6ZSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhQmxvY2sgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLl9nZXRQYXJhbU5hbWUoMCksXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0cmFuc2Zvcm1lZEZpbGUud2Via2l0U2xpY2UgPyB0cmFuc2Zvcm1lZEZpbGUud2Via2l0U2xpY2Uoc3RhcnQsIGVuZCkgOiB0cmFuc2Zvcm1lZEZpbGUuc2xpY2Uoc3RhcnQsIGVuZCksXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZTogZmlsZS51cGxvYWQuZmlsZW5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaHVua0luZGV4OiBjaHVua0luZGV4XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIGZpbGUudXBsb2FkLmNodW5rc1tjaHVua0luZGV4XSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6IGZpbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRleDogY2h1bmtJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFCbG9jazogZGF0YUJsb2NrLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlVQTE9BRElORyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyZXNzOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0cmllczogMFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl91cGxvYWREYXRhKGZpbGVzLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhQmxvY2tcbiAgICAgICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5maW5pc2hlZENodW5rVXBsb2FkID0gKGNodW5rLCByZXNwb25zZSk9PntcbiAgICAgICAgICAgICAgICAgICAgbGV0IGFsbEZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY2h1bmsuc3RhdHVzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5TVUNDRVNTO1xuICAgICAgICAgICAgICAgICAgICAvLyBDbGVhciB0aGUgZGF0YSBmcm9tIHRoZSBjaHVua1xuICAgICAgICAgICAgICAgICAgICBjaHVuay5kYXRhQmxvY2sgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICBjaHVuay5yZXNwb25zZSA9IGNodW5rLnhoci5yZXNwb25zZVRleHQ7XG4gICAgICAgICAgICAgICAgICAgIGNodW5rLnJlc3BvbnNlSGVhZGVycyA9IGNodW5rLnhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gTGVhdmluZyB0aGlzIHJlZmVyZW5jZSB0byB4aHIgd2lsbCBjYXVzZSBtZW1vcnkgbGVha3MuXG4gICAgICAgICAgICAgICAgICAgIGNodW5rLnhociA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBmaWxlLnVwbG9hZC50b3RhbENodW5rQ291bnQ7IGkrKyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlsZS51cGxvYWQuY2h1bmtzW2ldID09PSB1bmRlZmluZWQpIHJldHVybiBoYW5kbGVOZXh0Q2h1bmsoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWxlLnVwbG9hZC5jaHVua3NbaV0uc3RhdHVzICE9PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlNVQ0NFU1MpIGFsbEZpbmlzaGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGFsbEZpbmlzaGVkKSB0aGlzLm9wdGlvbnMuY2h1bmtzVXBsb2FkZWQoZmlsZSwgKCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2ZpbmlzaGVkKGZpbGVzLCByZXNwb25zZSwgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wYXJhbGxlbENodW5rVXBsb2FkcykgZm9yKGxldCBpID0gMDsgaSA8IGZpbGUudXBsb2FkLnRvdGFsQ2h1bmtDb3VudDsgaSsrKWhhbmRsZU5leHRDaHVuaygpO1xuICAgICAgICAgICAgICAgIGVsc2UgaGFuZGxlTmV4dENodW5rKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhQmxvY2tzID0gW107XG4gICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKWRhdGFCbG9ja3NbaV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuX2dldFBhcmFtTmFtZShpKSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogdHJhbnNmb3JtZWRGaWxlc1tpXSxcbiAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWU6IGZpbGVzW2ldLnVwbG9hZC5maWxlbmFtZVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgdGhpcy5fdXBsb2FkRGF0YShmaWxlcywgZGF0YUJsb2Nrcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLy8gUmV0dXJucyB0aGUgcmlnaHQgY2h1bmsgZm9yIGdpdmVuIGZpbGUgYW5kIHhoclxuICAgIF9nZXRDaHVuayhmaWxlLCB4aHIpIHtcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGZpbGUudXBsb2FkLnRvdGFsQ2h1bmtDb3VudDsgaSsrKXtcbiAgICAgICAgICAgIGlmIChmaWxlLnVwbG9hZC5jaHVua3NbaV0gIT09IHVuZGVmaW5lZCAmJiBmaWxlLnVwbG9hZC5jaHVua3NbaV0ueGhyID09PSB4aHIpIHJldHVybiBmaWxlLnVwbG9hZC5jaHVua3NbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gVGhpcyBmdW5jdGlvbiBhY3R1YWxseSB1cGxvYWRzIHRoZSBmaWxlKHMpIHRvIHRoZSBzZXJ2ZXIuXG4gICAgLy9cbiAgICAvLyAgSWYgZGF0YUJsb2NrcyBjb250YWlucyB0aGUgYWN0dWFsIGRhdGEgdG8gdXBsb2FkIChtZWFuaW5nLCB0aGF0IHRoaXMgY291bGRcbiAgICAvLyBlaXRoZXIgYmUgdHJhbnNmb3JtZWQgZmlsZXMsIG9yIGluZGl2aWR1YWwgY2h1bmtzIGZvciBjaHVua2VkIHVwbG9hZCkgdGhlblxuICAgIC8vIHRoZXkgd2lsbCBiZSB1c2VkIGZvciB0aGUgYWN0dWFsIGRhdGEgdG8gdXBsb2FkLlxuICAgIF91cGxvYWREYXRhKGZpbGVzLCBkYXRhQmxvY2tzKSB7XG4gICAgICAgIGxldCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgLy8gUHV0IHRoZSB4aHIgb2JqZWN0IGluIHRoZSBmaWxlIG9iamVjdHMgdG8gYmUgYWJsZSB0byByZWZlcmVuY2UgaXQgbGF0ZXIuXG4gICAgICAgIGZvciAobGV0IGZpbGUgb2YgZmlsZXMpZmlsZS54aHIgPSB4aHI7XG4gICAgICAgIGlmIChmaWxlc1swXS51cGxvYWQuY2h1bmtlZCkgLy8gUHV0IHRoZSB4aHIgb2JqZWN0IGluIHRoZSByaWdodCBjaHVuayBvYmplY3QsIHNvIGl0IGNhbiBiZSBhc3NvY2lhdGVkXG4gICAgICAgIC8vIGxhdGVyLCBhbmQgZm91bmQgd2l0aCBfZ2V0Q2h1bmsuXG4gICAgICAgIGZpbGVzWzBdLnVwbG9hZC5jaHVua3NbZGF0YUJsb2Nrc1swXS5jaHVua0luZGV4XS54aHIgPSB4aHI7XG4gICAgICAgIGxldCBtZXRob2QgPSB0aGlzLnJlc29sdmVPcHRpb24odGhpcy5vcHRpb25zLm1ldGhvZCwgZmlsZXMsIGRhdGFCbG9ja3MpO1xuICAgICAgICBsZXQgdXJsID0gdGhpcy5yZXNvbHZlT3B0aW9uKHRoaXMub3B0aW9ucy51cmwsIGZpbGVzLCBkYXRhQmxvY2tzKTtcbiAgICAgICAgeGhyLm9wZW4obWV0aG9kLCB1cmwsIHRydWUpO1xuICAgICAgICAvLyBTZXR0aW5nIHRoZSB0aW1lb3V0IGFmdGVyIG9wZW4gYmVjYXVzZSBvZiBJRTExIGlzc3VlOiBodHRwczovL2dpdGxhYi5jb20vbWVuby9kcm9wem9uZS9pc3N1ZXMvOFxuICAgICAgICBsZXQgdGltZW91dCA9IHRoaXMucmVzb2x2ZU9wdGlvbih0aGlzLm9wdGlvbnMudGltZW91dCwgZmlsZXMpO1xuICAgICAgICBpZiAodGltZW91dCkgeGhyLnRpbWVvdXQgPSB0aGlzLnJlc29sdmVPcHRpb24odGhpcy5vcHRpb25zLnRpbWVvdXQsIGZpbGVzKTtcbiAgICAgICAgLy8gSGFzIHRvIGJlIGFmdGVyIGAub3BlbigpYC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lbnlvL2Ryb3B6b25lL2lzc3Vlcy8xNzlcbiAgICAgICAgeGhyLndpdGhDcmVkZW50aWFscyA9ICEhdGhpcy5vcHRpb25zLndpdGhDcmVkZW50aWFscztcbiAgICAgICAgeGhyLm9ubG9hZCA9IChlKT0+e1xuICAgICAgICAgICAgdGhpcy5fZmluaXNoZWRVcGxvYWRpbmcoZmlsZXMsIHhociwgZSk7XG4gICAgICAgIH07XG4gICAgICAgIHhoci5vbnRpbWVvdXQgPSAoKT0+e1xuICAgICAgICAgICAgdGhpcy5faGFuZGxlVXBsb2FkRXJyb3IoZmlsZXMsIHhociwgYFJlcXVlc3QgdGltZWRvdXQgYWZ0ZXIgJHt0aGlzLm9wdGlvbnMudGltZW91dCAvIDEwMDB9IHNlY29uZHNgKTtcbiAgICAgICAgfTtcbiAgICAgICAgeGhyLm9uZXJyb3IgPSAoKT0+e1xuICAgICAgICAgICAgdGhpcy5faGFuZGxlVXBsb2FkRXJyb3IoZmlsZXMsIHhocik7XG4gICAgICAgIH07XG4gICAgICAgIC8vIFNvbWUgYnJvd3NlcnMgZG8gbm90IGhhdmUgdGhlIC51cGxvYWQgcHJvcGVydHlcbiAgICAgICAgbGV0IHByb2dyZXNzT2JqID0geGhyLnVwbG9hZCAhPSBudWxsID8geGhyLnVwbG9hZCA6IHhocjtcbiAgICAgICAgcHJvZ3Jlc3NPYmoub25wcm9ncmVzcyA9IChlKT0+dGhpcy5fdXBkYXRlRmlsZXNVcGxvYWRQcm9ncmVzcyhmaWxlcywgeGhyLCBlKVxuICAgICAgICA7XG4gICAgICAgIGxldCBoZWFkZXJzID0gdGhpcy5vcHRpb25zLmRlZmF1bHRIZWFkZXJzID8ge1xuICAgICAgICAgICAgQWNjZXB0OiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIFwiQ2FjaGUtQ29udHJvbFwiOiBcIm5vLWNhY2hlXCIsXG4gICAgICAgICAgICBcIlgtUmVxdWVzdGVkLVdpdGhcIjogXCJYTUxIdHRwUmVxdWVzdFwiXG4gICAgICAgIH0gOiB7XG4gICAgICAgIH07XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmluYXJ5Qm9keSkgaGVhZGVyc1tcIkNvbnRlbnQtVHlwZVwiXSA9IGZpbGVzWzBdLnR5cGU7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuaGVhZGVycykgJGV3Qkt5JGp1c3RleHRlbmQoaGVhZGVycywgdGhpcy5vcHRpb25zLmhlYWRlcnMpO1xuICAgICAgICBmb3IobGV0IGhlYWRlck5hbWUgaW4gaGVhZGVycyl7XG4gICAgICAgICAgICBsZXQgaGVhZGVyVmFsdWUgPSBoZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgICAgICAgICAgaWYgKGhlYWRlclZhbHVlKSB4aHIuc2V0UmVxdWVzdEhlYWRlcihoZWFkZXJOYW1lLCBoZWFkZXJWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5iaW5hcnlCb2R5KSB7XG4gICAgICAgICAgICAvLyBTaW5jZSB0aGUgZmlsZSBpcyBnb2luZyB0byBiZSBzZW50IGFzIGJpbmFyeSBib2R5LCBpdCBkb2Vzbid0IG1ha2VcbiAgICAgICAgICAgIC8vIGFueSBzZW5zZSB0byBnZW5lcmF0ZSBgRm9ybURhdGFgIGZvciBpdC5cbiAgICAgICAgICAgIGZvciAobGV0IGZpbGUgb2YgZmlsZXMpdGhpcy5lbWl0KFwic2VuZGluZ1wiLCBmaWxlLCB4aHIpO1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSkgdGhpcy5lbWl0KFwic2VuZGluZ211bHRpcGxlXCIsIGZpbGVzLCB4aHIpO1xuICAgICAgICAgICAgdGhpcy5zdWJtaXRSZXF1ZXN0KHhociwgbnVsbCwgZmlsZXMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgICAgICAvLyBBZGRpbmcgYWxsIEBvcHRpb25zIHBhcmFtZXRlcnNcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucGFyYW1zKSB7XG4gICAgICAgICAgICAgICAgbGV0IGFkZGl0aW9uYWxQYXJhbXMgPSB0aGlzLm9wdGlvbnMucGFyYW1zO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgYWRkaXRpb25hbFBhcmFtcyA9PT0gXCJmdW5jdGlvblwiKSBhZGRpdGlvbmFsUGFyYW1zID0gYWRkaXRpb25hbFBhcmFtcy5jYWxsKHRoaXMsIGZpbGVzLCB4aHIsIGZpbGVzWzBdLnVwbG9hZC5jaHVua2VkID8gdGhpcy5fZ2V0Q2h1bmsoZmlsZXNbMF0sIHhocikgOiBudWxsKTtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGtleSBpbiBhZGRpdGlvbmFsUGFyYW1zKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gYWRkaXRpb25hbFBhcmFtc1trZXldO1xuICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIC8vIFRoZSBhZGRpdGlvbmFsIHBhcmFtZXRlciBjb250YWlucyBhbiBhcnJheSxcbiAgICAgICAgICAgICAgICAgICAgLy8gc28gbGV0cyBpdGVyYXRlIG92ZXIgaXQgdG8gYXR0YWNoIGVhY2ggdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgLy8gaW5kaXZpZHVhbGx5LlxuICAgICAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspZm9ybURhdGEuYXBwZW5kKGtleSwgdmFsdWVbaV0pO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIGZvcm1EYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBMZXQgdGhlIHVzZXIgYWRkIGFkZGl0aW9uYWwgZGF0YSBpZiBuZWNlc3NhcnlcbiAgICAgICAgICAgIGZvciAobGV0IGZpbGUgb2YgZmlsZXMpdGhpcy5lbWl0KFwic2VuZGluZ1wiLCBmaWxlLCB4aHIsIGZvcm1EYXRhKTtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMudXBsb2FkTXVsdGlwbGUpIHRoaXMuZW1pdChcInNlbmRpbmdtdWx0aXBsZVwiLCBmaWxlcywgeGhyLCBmb3JtRGF0YSk7XG4gICAgICAgICAgICB0aGlzLl9hZGRGb3JtRWxlbWVudERhdGEoZm9ybURhdGEpO1xuICAgICAgICAgICAgLy8gRmluYWxseSBhZGQgdGhlIGZpbGVzXG4gICAgICAgICAgICAvLyBIYXMgdG8gYmUgbGFzdCBiZWNhdXNlIHNvbWUgc2VydmVycyAoZWc6IFMzKSBleHBlY3QgdGhlIGZpbGUgdG8gYmUgdGhlIGxhc3QgcGFyYW1ldGVyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZGF0YUJsb2Nrcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgbGV0IGRhdGFCbG9jayA9IGRhdGFCbG9ja3NbaV07XG4gICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKGRhdGFCbG9jay5uYW1lLCBkYXRhQmxvY2suZGF0YSwgZGF0YUJsb2NrLmZpbGVuYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc3VibWl0UmVxdWVzdCh4aHIsIGZvcm1EYXRhLCBmaWxlcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gVHJhbnNmb3JtcyBhbGwgZmlsZXMgd2l0aCB0aGlzLm9wdGlvbnMudHJhbnNmb3JtRmlsZSBhbmQgaW52b2tlcyBkb25lIHdpdGggdGhlIHRyYW5zZm9ybWVkIGZpbGVzIHdoZW4gZG9uZS5cbiAgICBfdHJhbnNmb3JtRmlsZXMoZmlsZXMsIGRvbmUpIHtcbiAgICAgICAgbGV0IHRyYW5zZm9ybWVkRmlsZXMgPSBbXTtcbiAgICAgICAgLy8gQ2x1bXN5IHdheSBvZiBoYW5kbGluZyBhc3luY2hyb25vdXMgY2FsbHMsIHVudGlsIEkgZ2V0IHRvIGFkZCBhIHByb3BlciBGdXR1cmUgbGlicmFyeS5cbiAgICAgICAgbGV0IGRvbmVDb3VudGVyID0gMDtcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKXRoaXMub3B0aW9ucy50cmFuc2Zvcm1GaWxlLmNhbGwodGhpcywgZmlsZXNbaV0sICh0cmFuc2Zvcm1lZEZpbGUpPT57XG4gICAgICAgICAgICB0cmFuc2Zvcm1lZEZpbGVzW2ldID0gdHJhbnNmb3JtZWRGaWxlO1xuICAgICAgICAgICAgaWYgKCsrZG9uZUNvdW50ZXIgPT09IGZpbGVzLmxlbmd0aCkgZG9uZSh0cmFuc2Zvcm1lZEZpbGVzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIFRha2VzIGNhcmUgb2YgYWRkaW5nIG90aGVyIGlucHV0IGVsZW1lbnRzIG9mIHRoZSBmb3JtIHRvIHRoZSBBSkFYIHJlcXVlc3RcbiAgICBfYWRkRm9ybUVsZW1lbnREYXRhKGZvcm1EYXRhKSB7XG4gICAgICAgIC8vIFRha2UgY2FyZSBvZiBvdGhlciBpbnB1dCBlbGVtZW50c1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50LnRhZ05hbWUgPT09IFwiRk9STVwiKSBmb3IgKGxldCBpbnB1dCBvZiB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcImlucHV0LCB0ZXh0YXJlYSwgc2VsZWN0LCBidXR0b25cIikpe1xuICAgICAgICAgICAgbGV0IGlucHV0TmFtZSA9IGlucHV0LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XG4gICAgICAgICAgICBsZXQgaW5wdXRUeXBlID0gaW5wdXQuZ2V0QXR0cmlidXRlKFwidHlwZVwiKTtcbiAgICAgICAgICAgIGlmIChpbnB1dFR5cGUpIGlucHV0VHlwZSA9IGlucHV0VHlwZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgLy8gSWYgdGhlIGlucHV0IGRvZXNuJ3QgaGF2ZSBhIG5hbWUsIHdlIGNhbid0IHVzZSBpdC5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgaW5wdXROYW1lID09PSBcInVuZGVmaW5lZFwiIHx8IGlucHV0TmFtZSA9PT0gbnVsbCkgY29udGludWU7XG4gICAgICAgICAgICBpZiAoaW5wdXQudGFnTmFtZSA9PT0gXCJTRUxFQ1RcIiAmJiBpbnB1dC5oYXNBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiKSkge1xuICAgICAgICAgICAgICAgIC8vIFBvc3NpYmx5IG11bHRpcGxlIHZhbHVlc1xuICAgICAgICAgICAgICAgIGZvciAobGV0IG9wdGlvbiBvZiBpbnB1dC5vcHRpb25zKWlmIChvcHRpb24uc2VsZWN0ZWQpIGZvcm1EYXRhLmFwcGVuZChpbnB1dE5hbWUsIG9wdGlvbi52YWx1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCFpbnB1dFR5cGUgfHwgaW5wdXRUeXBlICE9PSBcImNoZWNrYm94XCIgJiYgaW5wdXRUeXBlICE9PSBcInJhZGlvXCIgfHwgaW5wdXQuY2hlY2tlZCkgZm9ybURhdGEuYXBwZW5kKGlucHV0TmFtZSwgaW5wdXQudmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIEludm9rZWQgd2hlbiB0aGVyZSBpcyBuZXcgcHJvZ3Jlc3MgaW5mb3JtYXRpb24gYWJvdXQgZ2l2ZW4gZmlsZXMuXG4gICAgLy8gSWYgZSBpcyBub3QgcHJvdmlkZWQsIGl0IGlzIGFzc3VtZWQgdGhhdCB0aGUgdXBsb2FkIGlzIGZpbmlzaGVkLlxuICAgIF91cGRhdGVGaWxlc1VwbG9hZFByb2dyZXNzKGZpbGVzLCB4aHIsIGUpIHtcbiAgICAgICAgaWYgKCFmaWxlc1swXS51cGxvYWQuY2h1bmtlZCkgLy8gSGFuZGxlIGZpbGUgdXBsb2FkcyB3aXRob3V0IGNodW5raW5nXG4gICAgICAgIGZvciAobGV0IGZpbGUgb2YgZmlsZXMpe1xuICAgICAgICAgICAgaWYgKGZpbGUudXBsb2FkLnRvdGFsICYmIGZpbGUudXBsb2FkLmJ5dGVzU2VudCAmJiBmaWxlLnVwbG9hZC5ieXRlc1NlbnQgPT0gZmlsZS51cGxvYWQudG90YWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5wcm9ncmVzcyA9IDEwMCAqIGUubG9hZGVkIC8gZS50b3RhbDtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC50b3RhbCA9IGUudG90YWw7XG4gICAgICAgICAgICAgICAgZmlsZS51cGxvYWQuYnl0ZXNTZW50ID0gZS5sb2FkZWQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIE5vIGV2ZW50LCBzbyB3ZSdyZSBhdCAxMDAlXG4gICAgICAgICAgICAgICAgZmlsZS51cGxvYWQucHJvZ3Jlc3MgPSAxMDA7XG4gICAgICAgICAgICAgICAgZmlsZS51cGxvYWQuYnl0ZXNTZW50ID0gZmlsZS51cGxvYWQudG90YWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJ1cGxvYWRwcm9ncmVzc1wiLCBmaWxlLCBmaWxlLnVwbG9hZC5wcm9ncmVzcywgZmlsZS51cGxvYWQuYnl0ZXNTZW50KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIEhhbmRsZSBjaHVua2VkIGZpbGUgdXBsb2Fkc1xuICAgICAgICAgICAgLy8gQ2h1bmtlZCB1cGxvYWQgaXMgbm90IGNvbXBhdGlibGUgd2l0aCB1cGxvYWRpbmcgbXVsdGlwbGUgZmlsZXMgaW4gb25lXG4gICAgICAgICAgICAvLyByZXF1ZXN0LCBzbyB3ZSBrbm93IHRoZXJlJ3Mgb25seSBvbmUgZmlsZS5cbiAgICAgICAgICAgIGxldCBmaWxlID0gZmlsZXNbMF07XG4gICAgICAgICAgICAvLyBTaW5jZSB0aGlzIGlzIGEgY2h1bmtlZCB1cGxvYWQsIHdlIG5lZWQgdG8gdXBkYXRlIHRoZSBhcHByb3ByaWF0ZSBjaHVua1xuICAgICAgICAgICAgLy8gcHJvZ3Jlc3MuXG4gICAgICAgICAgICBsZXQgY2h1bmsgPSB0aGlzLl9nZXRDaHVuayhmaWxlLCB4aHIpO1xuICAgICAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgICAgICBjaHVuay5wcm9ncmVzcyA9IDEwMCAqIGUubG9hZGVkIC8gZS50b3RhbDtcbiAgICAgICAgICAgICAgICBjaHVuay50b3RhbCA9IGUudG90YWw7XG4gICAgICAgICAgICAgICAgY2h1bmsuYnl0ZXNTZW50ID0gZS5sb2FkZWQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIE5vIGV2ZW50LCBzbyB3ZSdyZSBhdCAxMDAlXG4gICAgICAgICAgICAgICAgY2h1bmsucHJvZ3Jlc3MgPSAxMDA7XG4gICAgICAgICAgICAgICAgY2h1bmsuYnl0ZXNTZW50ID0gY2h1bmsudG90YWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBOb3cgdGFsbHkgdGhlICpmaWxlKiB1cGxvYWQgcHJvZ3Jlc3MgZnJvbSBpdHMgaW5kaXZpZHVhbCBjaHVua3NcbiAgICAgICAgICAgIGZpbGUudXBsb2FkLnByb2dyZXNzID0gMDtcbiAgICAgICAgICAgIGZpbGUudXBsb2FkLnRvdGFsID0gMDtcbiAgICAgICAgICAgIGZpbGUudXBsb2FkLmJ5dGVzU2VudCA9IDA7XG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZmlsZS51cGxvYWQudG90YWxDaHVua0NvdW50OyBpKyspaWYgKGZpbGUudXBsb2FkLmNodW5rc1tpXSAmJiB0eXBlb2YgZmlsZS51cGxvYWQuY2h1bmtzW2ldLnByb2dyZXNzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgZmlsZS51cGxvYWQucHJvZ3Jlc3MgKz0gZmlsZS51cGxvYWQuY2h1bmtzW2ldLnByb2dyZXNzO1xuICAgICAgICAgICAgICAgIGZpbGUudXBsb2FkLnRvdGFsICs9IGZpbGUudXBsb2FkLmNodW5rc1tpXS50b3RhbDtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5ieXRlc1NlbnQgKz0gZmlsZS51cGxvYWQuY2h1bmtzW2ldLmJ5dGVzU2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFNpbmNlIHRoZSBwcm9jZXNzIGlzIGEgcGVyY2VudGFnZSwgd2UgbmVlZCB0byBkaXZpZGUgYnkgdGhlIGFtb3VudCBvZlxuICAgICAgICAgICAgLy8gY2h1bmtzIHdlJ3ZlIHVzZWQuXG4gICAgICAgICAgICBmaWxlLnVwbG9hZC5wcm9ncmVzcyA9IGZpbGUudXBsb2FkLnByb2dyZXNzIC8gZmlsZS51cGxvYWQudG90YWxDaHVua0NvdW50O1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwidXBsb2FkcHJvZ3Jlc3NcIiwgZmlsZSwgZmlsZS51cGxvYWQucHJvZ3Jlc3MsIGZpbGUudXBsb2FkLmJ5dGVzU2VudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX2ZpbmlzaGVkVXBsb2FkaW5nKGZpbGVzLCB4aHIsIGUpIHtcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICBpZiAoZmlsZXNbMF0uc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LkNBTkNFTEVEKSByZXR1cm47XG4gICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSAhPT0gNCkgcmV0dXJuO1xuICAgICAgICBpZiAoeGhyLnJlc3BvbnNlVHlwZSAhPT0gXCJhcnJheWJ1ZmZlclwiICYmIHhoci5yZXNwb25zZVR5cGUgIT09IFwiYmxvYlwiKSB7XG4gICAgICAgICAgICByZXNwb25zZSA9IHhoci5yZXNwb25zZVRleHQ7XG4gICAgICAgICAgICBpZiAoeGhyLmdldFJlc3BvbnNlSGVhZGVyKFwiY29udGVudC10eXBlXCIpICYmIH54aHIuZ2V0UmVzcG9uc2VIZWFkZXIoXCJjb250ZW50LXR5cGVcIikuaW5kZXhPZihcImFwcGxpY2F0aW9uL2pzb25cIikpIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgZSA9IGVycm9yO1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gXCJJbnZhbGlkIEpTT04gcmVzcG9uc2UgZnJvbSBzZXJ2ZXIuXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdXBkYXRlRmlsZXNVcGxvYWRQcm9ncmVzcyhmaWxlcywgeGhyKTtcbiAgICAgICAgaWYgKCEoMjAwIDw9IHhoci5zdGF0dXMgJiYgeGhyLnN0YXR1cyA8IDMwMCkpIHRoaXMuX2hhbmRsZVVwbG9hZEVycm9yKGZpbGVzLCB4aHIsIHJlc3BvbnNlKTtcbiAgICAgICAgZWxzZSBpZiAoZmlsZXNbMF0udXBsb2FkLmNodW5rZWQpIGZpbGVzWzBdLnVwbG9hZC5maW5pc2hlZENodW5rVXBsb2FkKHRoaXMuX2dldENodW5rKGZpbGVzWzBdLCB4aHIpLCByZXNwb25zZSk7XG4gICAgICAgIGVsc2UgdGhpcy5fZmluaXNoZWQoZmlsZXMsIHJlc3BvbnNlLCBlKTtcbiAgICB9XG4gICAgX2hhbmRsZVVwbG9hZEVycm9yKGZpbGVzLCB4aHIsIHJlc3BvbnNlKSB7XG4gICAgICAgIGlmIChmaWxlc1swXS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQ0FOQ0VMRUQpIHJldHVybjtcbiAgICAgICAgaWYgKGZpbGVzWzBdLnVwbG9hZC5jaHVua2VkICYmIHRoaXMub3B0aW9ucy5yZXRyeUNodW5rcykge1xuICAgICAgICAgICAgbGV0IGNodW5rID0gdGhpcy5fZ2V0Q2h1bmsoZmlsZXNbMF0sIHhocik7XG4gICAgICAgICAgICBpZiAoKGNodW5rLnJldHJpZXMrKykgPCB0aGlzLm9wdGlvbnMucmV0cnlDaHVua3NMaW1pdCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3VwbG9hZERhdGEoZmlsZXMsIFtcbiAgICAgICAgICAgICAgICAgICAgY2h1bmsuZGF0YUJsb2NrXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfSBlbHNlIGNvbnNvbGUud2FybihcIlJldHJpZWQgdGhpcyBjaHVuayB0b28gb2Z0ZW4uIEdpdmluZyB1cC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZXJyb3JQcm9jZXNzaW5nKGZpbGVzLCByZXNwb25zZSB8fCB0aGlzLm9wdGlvbnMuZGljdFJlc3BvbnNlRXJyb3IucmVwbGFjZShcInt7c3RhdHVzQ29kZX19XCIsIHhoci5zdGF0dXMpLCB4aHIpO1xuICAgIH1cbiAgICBzdWJtaXRSZXF1ZXN0KHhociwgZm9ybURhdGEsIGZpbGVzKSB7XG4gICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSAhPSAxKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJDYW5ub3Qgc2VuZCB0aGlzIHJlcXVlc3QgYmVjYXVzZSB0aGUgWE1MSHR0cFJlcXVlc3QucmVhZHlTdGF0ZSBpcyBub3QgT1BFTkVELlwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmJpbmFyeUJvZHkpIHtcbiAgICAgICAgICAgIGlmIChmaWxlc1swXS51cGxvYWQuY2h1bmtlZCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gdGhpcy5fZ2V0Q2h1bmsoZmlsZXNbMF0sIHhocik7XG4gICAgICAgICAgICAgICAgeGhyLnNlbmQoY2h1bmsuZGF0YUJsb2NrLmRhdGEpO1xuICAgICAgICAgICAgfSBlbHNlIHhoci5zZW5kKGZpbGVzWzBdKTtcbiAgICAgICAgfSBlbHNlIHhoci5zZW5kKGZvcm1EYXRhKTtcbiAgICB9XG4gICAgLy8gQ2FsbGVkIGludGVybmFsbHkgd2hlbiBwcm9jZXNzaW5nIGlzIGZpbmlzaGVkLlxuICAgIC8vIEluZGl2aWR1YWwgY2FsbGJhY2tzIGhhdmUgdG8gYmUgY2FsbGVkIGluIHRoZSBhcHByb3ByaWF0ZSBzZWN0aW9ucy5cbiAgICBfZmluaXNoZWQoZmlsZXMsIHJlc3BvbnNlVGV4dCwgZSkge1xuICAgICAgICBmb3IgKGxldCBmaWxlIG9mIGZpbGVzKXtcbiAgICAgICAgICAgIGZpbGUuc3RhdHVzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5TVUNDRVNTO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwic3VjY2Vzc1wiLCBmaWxlLCByZXNwb25zZVRleHQsIGUpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwiY29tcGxldGVcIiwgZmlsZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSkge1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwic3VjY2Vzc211bHRpcGxlXCIsIGZpbGVzLCByZXNwb25zZVRleHQsIGUpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwiY29tcGxldGVtdWx0aXBsZVwiLCBmaWxlcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hdXRvUHJvY2Vzc1F1ZXVlKSByZXR1cm4gdGhpcy5wcm9jZXNzUXVldWUoKTtcbiAgICB9XG4gICAgLy8gQ2FsbGVkIGludGVybmFsbHkgd2hlbiBwcm9jZXNzaW5nIGlzIGZpbmlzaGVkLlxuICAgIC8vIEluZGl2aWR1YWwgY2FsbGJhY2tzIGhhdmUgdG8gYmUgY2FsbGVkIGluIHRoZSBhcHByb3ByaWF0ZSBzZWN0aW9ucy5cbiAgICBfZXJyb3JQcm9jZXNzaW5nKGZpbGVzLCBtZXNzYWdlLCB4aHIpIHtcbiAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl7XG4gICAgICAgICAgICBmaWxlLnN0YXR1cyA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuRVJST1I7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJlcnJvclwiLCBmaWxlLCBtZXNzYWdlLCB4aHIpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwiY29tcGxldGVcIiwgZmlsZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSkge1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwiZXJyb3JtdWx0aXBsZVwiLCBmaWxlcywgbWVzc2FnZSwgeGhyKTtcbiAgICAgICAgICAgIHRoaXMuZW1pdChcImNvbXBsZXRlbXVsdGlwbGVcIiwgZmlsZXMpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXV0b1Byb2Nlc3NRdWV1ZSkgcmV0dXJuIHRoaXMucHJvY2Vzc1F1ZXVlKCk7XG4gICAgfVxuICAgIHN0YXRpYyB1dWlkdjQoKSB7XG4gICAgICAgIHJldHVybiBcInh4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFwiLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24oYykge1xuICAgICAgICAgICAgbGV0IHIgPSBNYXRoLnJhbmRvbSgpICogMTYgfCAwLCB2ID0gYyA9PT0gXCJ4XCIgPyByIDogciAmIDMgfCA4O1xuICAgICAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoZWwsIG9wdGlvbnMpe1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBsZXQgZmFsbGJhY2ssIGxlZnQ7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsO1xuICAgICAgICB0aGlzLmNsaWNrYWJsZUVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMubGlzdGVuZXJzID0gW107XG4gICAgICAgIHRoaXMuZmlsZXMgPSBbXTsgLy8gQWxsIGZpbGVzXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5lbGVtZW50ID09PSBcInN0cmluZ1wiKSB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuZWxlbWVudCk7XG4gICAgICAgIC8vIE5vdCBjaGVja2luZyBpZiBpbnN0YW5jZSBvZiBIVE1MRWxlbWVudCBvciBFbGVtZW50IHNpbmNlIElFOSBpcyBleHRyZW1lbHkgd2VpcmQuXG4gICAgICAgIGlmICghdGhpcy5lbGVtZW50IHx8IHRoaXMuZWxlbWVudC5ub2RlVHlwZSA9PSBudWxsKSB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGRyb3B6b25lIGVsZW1lbnQuXCIpO1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50LmRyb3B6b25lKSB0aHJvdyBuZXcgRXJyb3IoXCJEcm9wem9uZSBhbHJlYWR5IGF0dGFjaGVkLlwiKTtcbiAgICAgICAgLy8gTm93IGFkZCB0aGlzIGRyb3B6b25lIHRvIHRoZSBpbnN0YW5jZXMuXG4gICAgICAgICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuaW5zdGFuY2VzLnB1c2godGhpcyk7XG4gICAgICAgIC8vIFB1dCB0aGUgZHJvcHpvbmUgaW5zaWRlIHRoZSBlbGVtZW50IGl0c2VsZi5cbiAgICAgICAgdGhpcy5lbGVtZW50LmRyb3B6b25lID0gdGhpcztcbiAgICAgICAgbGV0IGVsZW1lbnRPcHRpb25zID0gKGxlZnQgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5Lm9wdGlvbnNGb3JFbGVtZW50KHRoaXMuZWxlbWVudCkpICE9IG51bGwgPyBsZWZ0IDoge1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSAkZXdCS3kkanVzdGV4dGVuZCh0cnVlLCB7XG4gICAgICAgIH0sICQ0Y2EzNjcxODI3NzZmODBiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzksIGVsZW1lbnRPcHRpb25zLCBvcHRpb25zICE9IG51bGwgPyBvcHRpb25zIDoge1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vcHRpb25zLnByZXZpZXdUZW1wbGF0ZSA9IHRoaXMub3B0aW9ucy5wcmV2aWV3VGVtcGxhdGUucmVwbGFjZSgvXFxuKi9nLCBcIlwiKTtcbiAgICAgICAgLy8gSWYgdGhlIGJyb3dzZXIgZmFpbGVkLCBqdXN0IGNhbGwgdGhlIGZhbGxiYWNrIGFuZCBsZWF2ZVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmZvcmNlRmFsbGJhY2sgfHwgISQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuaXNCcm93c2VyU3VwcG9ydGVkKCkpIHJldHVybiB0aGlzLm9wdGlvbnMuZmFsbGJhY2suY2FsbCh0aGlzKTtcbiAgICAgICAgLy8gQG9wdGlvbnMudXJsID0gQGVsZW1lbnQuZ2V0QXR0cmlidXRlIFwiYWN0aW9uXCIgdW5sZXNzIEBvcHRpb25zLnVybD9cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cmwgPT0gbnVsbCkgdGhpcy5vcHRpb25zLnVybCA9IHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJhY3Rpb25cIik7XG4gICAgICAgIGlmICghdGhpcy5vcHRpb25zLnVybCkgdGhyb3cgbmV3IEVycm9yKFwiTm8gVVJMIHByb3ZpZGVkLlwiKTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hY2NlcHRlZEZpbGVzICYmIHRoaXMub3B0aW9ucy5hY2NlcHRlZE1pbWVUeXBlcykgdGhyb3cgbmV3IEVycm9yKFwiWW91IGNhbid0IHByb3ZpZGUgYm90aCAnYWNjZXB0ZWRGaWxlcycgYW5kICdhY2NlcHRlZE1pbWVUeXBlcycuICdhY2NlcHRlZE1pbWVUeXBlcycgaXMgZGVwcmVjYXRlZC5cIik7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMudXBsb2FkTXVsdGlwbGUgJiYgdGhpcy5vcHRpb25zLmNodW5raW5nKSB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgY2Fubm90IHNldCBib3RoOiB1cGxvYWRNdWx0aXBsZSBhbmQgY2h1bmtpbmcuXCIpO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmJpbmFyeUJvZHkgJiYgdGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgY2Fubm90IHNldCBib3RoOiBiaW5hcnlCb2R5IGFuZCB1cGxvYWRNdWx0aXBsZS5cIik7XG4gICAgICAgIC8vIEJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYWNjZXB0ZWRNaW1lVHlwZXMpIHtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5hY2NlcHRlZEZpbGVzID0gdGhpcy5vcHRpb25zLmFjY2VwdGVkTWltZVR5cGVzO1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMub3B0aW9ucy5hY2NlcHRlZE1pbWVUeXBlcztcbiAgICAgICAgfVxuICAgICAgICAvLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnJlbmFtZUZpbGVuYW1lICE9IG51bGwpIHRoaXMub3B0aW9ucy5yZW5hbWVGaWxlID0gKGZpbGUpPT50aGlzLm9wdGlvbnMucmVuYW1lRmlsZW5hbWUuY2FsbCh0aGlzLCBmaWxlLm5hbWUsIGZpbGUpXG4gICAgICAgIDtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMubWV0aG9kID09PSBcInN0cmluZ1wiKSB0aGlzLm9wdGlvbnMubWV0aG9kID0gdGhpcy5vcHRpb25zLm1ldGhvZC50b1VwcGVyQ2FzZSgpO1xuICAgICAgICBpZiAoKGZhbGxiYWNrID0gdGhpcy5nZXRFeGlzdGluZ0ZhbGxiYWNrKCkpICYmIGZhbGxiYWNrLnBhcmVudE5vZGUpIC8vIFJlbW92ZSB0aGUgZmFsbGJhY2tcbiAgICAgICAgZmFsbGJhY2sucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChmYWxsYmFjayk7XG4gICAgICAgIC8vIERpc3BsYXkgcHJldmlld3MgaW4gdGhlIHByZXZpZXdzQ29udGFpbmVyIGVsZW1lbnQgb3IgdGhlIERyb3B6b25lIGVsZW1lbnQgdW5sZXNzIGV4cGxpY2l0bHkgc2V0IHRvIGZhbHNlXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucHJldmlld3NDb250YWluZXIgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnByZXZpZXdzQ29udGFpbmVyKSB0aGlzLnByZXZpZXdzQ29udGFpbmVyID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5nZXRFbGVtZW50KHRoaXMub3B0aW9ucy5wcmV2aWV3c0NvbnRhaW5lciwgXCJwcmV2aWV3c0NvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIGVsc2UgdGhpcy5wcmV2aWV3c0NvbnRhaW5lciA9IHRoaXMuZWxlbWVudDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmNsaWNrYWJsZSkge1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jbGlja2FibGUgPT09IHRydWUpIHRoaXMuY2xpY2thYmxlRWxlbWVudHMgPSBbXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50XG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgZWxzZSB0aGlzLmNsaWNrYWJsZUVsZW1lbnRzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5nZXRFbGVtZW50cyh0aGlzLm9wdGlvbnMuY2xpY2thYmxlLCBcImNsaWNrYWJsZVwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmluaXQoKTtcbiAgICB9XG59XG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmluaXRDbGFzcygpO1xuLy8gVGhpcyBpcyBhIG1hcCBvZiBvcHRpb25zIGZvciB5b3VyIGRpZmZlcmVudCBkcm9wem9uZXMuIEFkZCBjb25maWd1cmF0aW9uc1xuLy8gdG8gdGhpcyBvYmplY3QgZm9yIHlvdXIgZGlmZmVyZW50IGRyb3B6b25lIGVsZW1lbnMuXG4vL1xuLy8gRXhhbXBsZTpcbi8vXG4vLyAgICAgRHJvcHpvbmUub3B0aW9ucy5teURyb3B6b25lRWxlbWVudElkID0geyBtYXhGaWxlc2l6ZTogMSB9O1xuLy9cbi8vIEFuZCBpbiBodG1sOlxuLy9cbi8vICAgICA8Zm9ybSBhY3Rpb249XCIvdXBsb2FkXCIgaWQ9XCJteS1kcm9wem9uZS1lbGVtZW50LWlkXCIgY2xhc3M9XCJkcm9wem9uZVwiPjwvZm9ybT5cbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkub3B0aW9ucyA9IHtcbn07XG4vLyBSZXR1cm5zIHRoZSBvcHRpb25zIGZvciBhbiBlbGVtZW50IG9yIHVuZGVmaW5lZCBpZiBub25lIGF2YWlsYWJsZS5cbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkub3B0aW9uc0ZvckVsZW1lbnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgLy8gR2V0IHRoZSBgRHJvcHpvbmUub3B0aW9ucy5lbGVtZW50SWRgIGZvciB0aGlzIGVsZW1lbnQgaWYgaXQgZXhpc3RzXG4gICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiaWRcIikpIHJldHVybiAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5Lm9wdGlvbnNbJDNlZDI2OWYyZjBmYjIyNGIkdmFyJGNhbWVsaXplKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiaWRcIikpXTtcbiAgICBlbHNlIHJldHVybiB1bmRlZmluZWQ7XG59O1xuLy8gSG9sZHMgYSBsaXN0IG9mIGFsbCBkcm9wem9uZSBpbnN0YW5jZXNcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuaW5zdGFuY2VzID0gW107XG4vLyBSZXR1cm5zIHRoZSBkcm9wem9uZSBmb3IgZ2l2ZW4gZWxlbWVudCBpZiBhbnlcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuZm9yRWxlbWVudCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICBpZiAodHlwZW9mIGVsZW1lbnQgPT09IFwic3RyaW5nXCIpIGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpO1xuICAgIGlmICgoZWxlbWVudCAhPSBudWxsID8gZWxlbWVudC5kcm9wem9uZSA6IHVuZGVmaW5lZCkgPT0gbnVsbCkgdGhyb3cgbmV3IEVycm9yKFwiTm8gRHJvcHpvbmUgZm91bmQgZm9yIGdpdmVuIGVsZW1lbnQuIFRoaXMgaXMgcHJvYmFibHkgYmVjYXVzZSB5b3UncmUgdHJ5aW5nIHRvIGFjY2VzcyBpdCBiZWZvcmUgRHJvcHpvbmUgaGFkIHRoZSB0aW1lIHRvIGluaXRpYWxpemUuIFVzZSB0aGUgYGluaXRgIG9wdGlvbiB0byBzZXR1cCBhbnkgYWRkaXRpb25hbCBvYnNlcnZlcnMgb24geW91ciBEcm9wem9uZS5cIik7XG4gICAgcmV0dXJuIGVsZW1lbnQuZHJvcHpvbmU7XG59O1xuLy8gTG9va3MgZm9yIGFsbCAuZHJvcHpvbmUgZWxlbWVudHMgYW5kIGNyZWF0ZXMgYSBkcm9wem9uZSBmb3IgdGhlbVxuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5kaXNjb3ZlciA9IGZ1bmN0aW9uKCkge1xuICAgIGxldCBkcm9wem9uZXM7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwpIGRyb3B6b25lcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZHJvcHpvbmVcIik7XG4gICAgZWxzZSB7XG4gICAgICAgIGRyb3B6b25lcyA9IFtdO1xuICAgICAgICAvLyBJRSA6KFxuICAgICAgICBsZXQgY2hlY2tFbGVtZW50cyA9IChlbGVtZW50cyk9PigoKT0+e1xuICAgICAgICAgICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBlbCBvZiBlbGVtZW50cylpZiAoLyhefCApZHJvcHpvbmUoJHwgKS8udGVzdChlbC5jbGFzc05hbWUpKSByZXN1bHQucHVzaChkcm9wem9uZXMucHVzaChlbCkpO1xuICAgICAgICAgICAgICAgIGVsc2UgcmVzdWx0LnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfSkoKVxuICAgICAgICA7XG4gICAgICAgIGNoZWNrRWxlbWVudHMoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIikpO1xuICAgICAgICBjaGVja0VsZW1lbnRzKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZm9ybVwiKSk7XG4gICAgfVxuICAgIHJldHVybiAoKCk9PntcbiAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICBmb3IgKGxldCBkcm9wem9uZSBvZiBkcm9wem9uZXMpLy8gQ3JlYXRlIGEgZHJvcHpvbmUgdW5sZXNzIGF1dG8gZGlzY292ZXIgaGFzIGJlZW4gZGlzYWJsZWQgZm9yIHNwZWNpZmljIGVsZW1lbnRcbiAgICAgICAgaWYgKCQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkub3B0aW9uc0ZvckVsZW1lbnQoZHJvcHpvbmUpICE9PSBmYWxzZSkgcmVzdWx0LnB1c2gobmV3ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkoZHJvcHpvbmUpKTtcbiAgICAgICAgZWxzZSByZXN1bHQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pKCk7XG59O1xuLy8gU29tZSBicm93c2VycyBzdXBwb3J0IGRyYWcgYW5kIGRyb2cgZnVuY3Rpb25hbGl0eSwgYnV0IG5vdCBjb3JyZWN0bHkuXG4vL1xuLy8gU28gSSBjcmVhdGVkIGEgYmxvY2tsaXN0IG9mIHVzZXJBZ2VudHMuIFllcywgeWVzLiBCcm93c2VyIHNuaWZmaW5nLCBJIGtub3cuXG4vLyBCdXQgd2hhdCB0byBkbyB3aGVuIGJyb3dzZXJzICp0aGVvcmV0aWNhbGx5KiBzdXBwb3J0IGFuIEFQSSwgYnV0IGNyYXNoXG4vLyB3aGVuIHVzaW5nIGl0LlxuLy9cbi8vIFRoaXMgaXMgYSBsaXN0IG9mIHJlZ3VsYXIgZXhwcmVzc2lvbnMgdGVzdGVkIGFnYWluc3QgbmF2aWdhdG9yLnVzZXJBZ2VudFxuLy9cbi8vICoqIEl0IHNob3VsZCBvbmx5IGJlIHVzZWQgb24gYnJvd3NlciB0aGF0ICpkbyogc3VwcG9ydCB0aGUgQVBJLCBidXRcbi8vIGluY29ycmVjdGx5ICoqXG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmJsb2NrZWRCcm93c2VycyA9IFtcbiAgICAvLyBUaGUgbWFjIG9zIGFuZCB3aW5kb3dzIHBob25lIHZlcnNpb24gb2Ygb3BlcmEgMTIgc2VlbXMgdG8gaGF2ZSBhIHByb2JsZW0gd2l0aCB0aGUgRmlsZSBkcmFnJ24nZHJvcCBBUEkuXG4gICAgL29wZXJhLiooTWFjaW50b3NofFdpbmRvd3MgUGhvbmUpLip2ZXJzaW9uXFwvMTIvaSwgXG5dO1xuLy8gQ2hlY2tzIGlmIHRoZSBicm93c2VyIGlzIHN1cHBvcnRlZFxuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5pc0Jyb3dzZXJTdXBwb3J0ZWQgPSBmdW5jdGlvbigpIHtcbiAgICBsZXQgY2FwYWJsZUJyb3dzZXIgPSB0cnVlO1xuICAgIGlmICh3aW5kb3cuRmlsZSAmJiB3aW5kb3cuRmlsZVJlYWRlciAmJiB3aW5kb3cuRmlsZUxpc3QgJiYgd2luZG93LkJsb2IgJiYgd2luZG93LkZvcm1EYXRhICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IpIHtcbiAgICAgICAgaWYgKCEoXCJjbGFzc0xpc3RcIiBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKSkpIGNhcGFibGVCcm93c2VyID0gZmFsc2U7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKCQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuYmxhY2tsaXN0ZWRCcm93c2VycyAhPT0gdW5kZWZpbmVkKSAvLyBTaW5jZSB0aGlzIGhhcyBiZWVuIHJlbmFtZWQsIHRoaXMgbWFrZXMgc3VyZSB3ZSBkb24ndCBicmVhayBvbGRlclxuICAgICAgICAgICAgLy8gY29uZmlndXJhdGlvbi5cbiAgICAgICAgICAgICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuYmxvY2tlZEJyb3dzZXJzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5ibGFja2xpc3RlZEJyb3dzZXJzO1xuICAgICAgICAgICAgLy8gVGhlIGJyb3dzZXIgc3VwcG9ydHMgdGhlIEFQSSwgYnV0IG1heSBiZSBibG9ja2VkLlxuICAgICAgICAgICAgZm9yIChsZXQgcmVnZXggb2YgJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5ibG9ja2VkQnJvd3NlcnMpaWYgKHJlZ2V4LnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHtcbiAgICAgICAgICAgICAgICBjYXBhYmxlQnJvd3NlciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIGNhcGFibGVCcm93c2VyID0gZmFsc2U7XG4gICAgcmV0dXJuIGNhcGFibGVCcm93c2VyO1xufTtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuZGF0YVVSSXRvQmxvYiA9IGZ1bmN0aW9uKGRhdGFVUkkpIHtcbiAgICAvLyBjb252ZXJ0IGJhc2U2NCB0byByYXcgYmluYXJ5IGRhdGEgaGVsZCBpbiBhIHN0cmluZ1xuICAgIC8vIGRvZXNuJ3QgaGFuZGxlIFVSTEVuY29kZWQgRGF0YVVSSXMgLSBzZWUgU08gYW5zd2VyICM2ODUwMjc2IGZvciBjb2RlIHRoYXQgZG9lcyB0aGlzXG4gICAgbGV0IGJ5dGVTdHJpbmcgPSBhdG9iKGRhdGFVUkkuc3BsaXQoXCIsXCIpWzFdKTtcbiAgICAvLyBzZXBhcmF0ZSBvdXQgdGhlIG1pbWUgY29tcG9uZW50XG4gICAgbGV0IG1pbWVTdHJpbmcgPSBkYXRhVVJJLnNwbGl0KFwiLFwiKVswXS5zcGxpdChcIjpcIilbMV0uc3BsaXQoXCI7XCIpWzBdO1xuICAgIC8vIHdyaXRlIHRoZSBieXRlcyBvZiB0aGUgc3RyaW5nIHRvIGFuIEFycmF5QnVmZmVyXG4gICAgbGV0IGFiID0gbmV3IEFycmF5QnVmZmVyKGJ5dGVTdHJpbmcubGVuZ3RoKTtcbiAgICBsZXQgaWEgPSBuZXcgVWludDhBcnJheShhYik7XG4gICAgZm9yKGxldCBpID0gMCwgZW5kID0gYnl0ZVN0cmluZy5sZW5ndGgsIGFzYyA9IDAgPD0gZW5kOyBhc2MgPyBpIDw9IGVuZCA6IGkgPj0gZW5kOyBhc2MgPyBpKysgOiBpLS0paWFbaV0gPSBieXRlU3RyaW5nLmNoYXJDb2RlQXQoaSk7XG4gICAgLy8gd3JpdGUgdGhlIEFycmF5QnVmZmVyIHRvIGEgYmxvYlxuICAgIHJldHVybiBuZXcgQmxvYihbXG4gICAgICAgIGFiXG4gICAgXSwge1xuICAgICAgICB0eXBlOiBtaW1lU3RyaW5nXG4gICAgfSk7XG59O1xuLy8gUmV0dXJucyBhbiBhcnJheSB3aXRob3V0IHRoZSByZWplY3RlZCBpdGVtXG5jb25zdCAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkd2l0aG91dCA9IChsaXN0LCByZWplY3RlZEl0ZW0pPT5saXN0LmZpbHRlcigoaXRlbSk9Pml0ZW0gIT09IHJlamVjdGVkSXRlbVxuICAgICkubWFwKChpdGVtKT0+aXRlbVxuICAgIClcbjtcbi8vIGFiYy1kZWZfZ2hpIC0+IGFiY0RlZkdoaVxuY29uc3QgJDNlZDI2OWYyZjBmYjIyNGIkdmFyJGNhbWVsaXplID0gKHN0cik9PnN0ci5yZXBsYWNlKC9bXFwtX10oXFx3KS9nLCAobWF0Y2gpPT5tYXRjaC5jaGFyQXQoMSkudG9VcHBlckNhc2UoKVxuICAgIClcbjtcbi8vIENyZWF0ZXMgYW4gZWxlbWVudCBmcm9tIHN0cmluZ1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5jcmVhdGVFbGVtZW50ID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgbGV0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZGl2LmlubmVySFRNTCA9IHN0cmluZztcbiAgICByZXR1cm4gZGl2LmNoaWxkTm9kZXNbMF07XG59O1xuLy8gVGVzdHMgaWYgZ2l2ZW4gZWxlbWVudCBpcyBpbnNpZGUgKG9yIHNpbXBseSBpcykgdGhlIGNvbnRhaW5lclxuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5lbGVtZW50SW5zaWRlID0gZnVuY3Rpb24oZWxlbWVudCwgY29udGFpbmVyKSB7XG4gICAgaWYgKGVsZW1lbnQgPT09IGNvbnRhaW5lcikgcmV0dXJuIHRydWU7XG4gICAgIC8vIENvZmZlZXNjcmlwdCBkb2Vzbid0IHN1cHBvcnQgZG8vd2hpbGUgbG9vcHNcbiAgICB3aGlsZShlbGVtZW50ID0gZWxlbWVudC5wYXJlbnROb2RlKXtcbiAgICAgICAgaWYgKGVsZW1lbnQgPT09IGNvbnRhaW5lcikgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmdldEVsZW1lbnQgPSBmdW5jdGlvbihlbCwgbmFtZSkge1xuICAgIGxldCBlbGVtZW50O1xuICAgIGlmICh0eXBlb2YgZWwgPT09IFwic3RyaW5nXCIpIGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsKTtcbiAgICBlbHNlIGlmIChlbC5ub2RlVHlwZSAhPSBudWxsKSBlbGVtZW50ID0gZWw7XG4gICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIFxcYCR7bmFtZX1cXGAgb3B0aW9uIHByb3ZpZGVkLiBQbGVhc2UgcHJvdmlkZSBhIENTUyBzZWxlY3RvciBvciBhIHBsYWluIEhUTUwgZWxlbWVudC5gKTtcbiAgICByZXR1cm4gZWxlbWVudDtcbn07XG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmdldEVsZW1lbnRzID0gZnVuY3Rpb24oZWxzLCBuYW1lKSB7XG4gICAgbGV0IGVsLCBlbGVtZW50cztcbiAgICBpZiAoZWxzIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgZWxlbWVudHMgPSBbXTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoZWwgb2YgZWxzKWVsZW1lbnRzLnB1c2godGhpcy5nZXRFbGVtZW50KGVsLCBuYW1lKSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGVsZW1lbnRzID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZiAodHlwZW9mIGVscyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBlbGVtZW50cyA9IFtdO1xuICAgICAgICBmb3IgKGVsIG9mIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZWxzKSllbGVtZW50cy5wdXNoKGVsKTtcbiAgICB9IGVsc2UgaWYgKGVscy5ub2RlVHlwZSAhPSBudWxsKSBlbGVtZW50cyA9IFtcbiAgICAgICAgZWxzXG4gICAgXTtcbiAgICBpZiAoZWxlbWVudHMgPT0gbnVsbCB8fCAhZWxlbWVudHMubGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgXFxgJHtuYW1lfVxcYCBvcHRpb24gcHJvdmlkZWQuIFBsZWFzZSBwcm92aWRlIGEgQ1NTIHNlbGVjdG9yLCBhIHBsYWluIEhUTUwgZWxlbWVudCBvciBhIGxpc3Qgb2YgdGhvc2UuYCk7XG4gICAgcmV0dXJuIGVsZW1lbnRzO1xufTtcbi8vIEFza3MgdGhlIHVzZXIgdGhlIHF1ZXN0aW9uIGFuZCBjYWxscyBhY2NlcHRlZCBvciByZWplY3RlZCBhY2NvcmRpbmdseVxuLy9cbi8vIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGp1c3QgdXNlcyBgd2luZG93LmNvbmZpcm1gIGFuZCB0aGVuIGNhbGxzIHRoZVxuLy8gYXBwcm9wcmlhdGUgY2FsbGJhY2suXG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmNvbmZpcm0gPSBmdW5jdGlvbihxdWVzdGlvbiwgYWNjZXB0ZWQsIHJlamVjdGVkKSB7XG4gICAgaWYgKHdpbmRvdy5jb25maXJtKHF1ZXN0aW9uKSkgcmV0dXJuIGFjY2VwdGVkKCk7XG4gICAgZWxzZSBpZiAocmVqZWN0ZWQgIT0gbnVsbCkgcmV0dXJuIHJlamVjdGVkKCk7XG59O1xuLy8gVmFsaWRhdGVzIHRoZSBtaW1lIHR5cGUgbGlrZSB0aGlzOlxuLy9cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvSFRNTC9FbGVtZW50L2lucHV0I2F0dHItYWNjZXB0XG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmlzVmFsaWRGaWxlID0gZnVuY3Rpb24oZmlsZSwgYWNjZXB0ZWRGaWxlcykge1xuICAgIGlmICghYWNjZXB0ZWRGaWxlcykgcmV0dXJuIHRydWU7XG4gICAgIC8vIElmIHRoZXJlIGFyZSBubyBhY2NlcHRlZCBtaW1lIHR5cGVzLCBpdCdzIE9LXG4gICAgYWNjZXB0ZWRGaWxlcyA9IGFjY2VwdGVkRmlsZXMuc3BsaXQoXCIsXCIpO1xuICAgIGxldCBtaW1lVHlwZSA9IGZpbGUudHlwZTtcbiAgICBsZXQgYmFzZU1pbWVUeXBlID0gbWltZVR5cGUucmVwbGFjZSgvXFwvLiokLywgXCJcIik7XG4gICAgZm9yIChsZXQgdmFsaWRUeXBlIG9mIGFjY2VwdGVkRmlsZXMpe1xuICAgICAgICB2YWxpZFR5cGUgPSB2YWxpZFR5cGUudHJpbSgpO1xuICAgICAgICBpZiAodmFsaWRUeXBlLmNoYXJBdCgwKSA9PT0gXCIuXCIpIHtcbiAgICAgICAgICAgIGlmIChmaWxlLm5hbWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKHZhbGlkVHlwZS50b0xvd2VyQ2FzZSgpLCBmaWxlLm5hbWUubGVuZ3RoIC0gdmFsaWRUeXBlLmxlbmd0aCkgIT09IC0xKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmICgvXFwvXFwqJC8udGVzdCh2YWxpZFR5cGUpKSB7XG4gICAgICAgICAgICAvLyBUaGlzIGlzIHNvbWV0aGluZyBsaWtlIGEgaW1hZ2UvKiBtaW1lIHR5cGVcbiAgICAgICAgICAgIGlmIChiYXNlTWltZVR5cGUgPT09IHZhbGlkVHlwZS5yZXBsYWNlKC9cXC8uKiQvLCBcIlwiKSkgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAobWltZVR5cGUgPT09IHZhbGlkVHlwZSkgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbi8vIEF1Z21lbnQgalF1ZXJ5XG5pZiAodHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBqUXVlcnkgIT09IG51bGwpIGpRdWVyeS5mbi5kcm9wem9uZSA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbmV3ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkodGhpcywgb3B0aW9ucyk7XG4gICAgfSk7XG59O1xuLy8gRHJvcHpvbmUgZmlsZSBzdGF0dXMgY29kZXNcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQURERUQgPSBcImFkZGVkXCI7XG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlFVRVVFRCA9IFwicXVldWVkXCI7XG4vLyBGb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuIE5vdywgaWYgYSBmaWxlIGlzIGFjY2VwdGVkLCBpdCdzIGVpdGhlciBxdWV1ZWRcbi8vIG9yIHVwbG9hZGluZy5cbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQUNDRVBURUQgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlFVRVVFRDtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HID0gXCJ1cGxvYWRpbmdcIjtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuUFJPQ0VTU0lORyA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HOyAvLyBhbGlhc1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5DQU5DRUxFRCA9IFwiY2FuY2VsZWRcIjtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuRVJST1IgPSBcImVycm9yXCI7XG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlNVQ0NFU1MgPSBcInN1Y2Nlc3NcIjtcbi8qXG5cbiBCdWdmaXggZm9yIGlPUyA2IGFuZCA3XG4gU291cmNlOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzExOTI5MDk5L2h0bWw1LWNhbnZhcy1kcmF3aW1hZ2UtcmF0aW8tYnVnLWlvc1xuIGJhc2VkIG9uIHRoZSB3b3JrIG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9zdG9taXRhL2lvcy1pbWFnZWZpbGUtbWVnYXBpeGVsXG5cbiAqLyAvLyBEZXRlY3RpbmcgdmVydGljYWwgc3F1YXNoIGluIGxvYWRlZCBpbWFnZS5cbi8vIEZpeGVzIGEgYnVnIHdoaWNoIHNxdWFzaCBpbWFnZSB2ZXJ0aWNhbGx5IHdoaWxlIGRyYXdpbmcgaW50byBjYW52YXMgZm9yIHNvbWUgaW1hZ2VzLlxuLy8gVGhpcyBpcyBhIGJ1ZyBpbiBpT1M2IGRldmljZXMuIFRoaXMgZnVuY3Rpb24gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vc3RvbWl0YS9pb3MtaW1hZ2VmaWxlLW1lZ2FwaXhlbFxubGV0ICQzZWQyNjlmMmYwZmIyMjRiJHZhciRkZXRlY3RWZXJ0aWNhbFNxdWFzaCA9IGZ1bmN0aW9uKGltZykge1xuICAgIGxldCBpdyA9IGltZy5uYXR1cmFsV2lkdGg7XG4gICAgbGV0IGloID0gaW1nLm5hdHVyYWxIZWlnaHQ7XG4gICAgbGV0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgY2FudmFzLndpZHRoID0gMTtcbiAgICBjYW52YXMuaGVpZ2h0ID0gaWg7XG4gICAgbGV0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgY3R4LmRyYXdJbWFnZShpbWcsIDAsIDApO1xuICAgIGxldCB7IGRhdGE6IGRhdGEgIH0gPSBjdHguZ2V0SW1hZ2VEYXRhKDEsIDAsIDEsIGloKTtcbiAgICAvLyBzZWFyY2ggaW1hZ2UgZWRnZSBwaXhlbCBwb3NpdGlvbiBpbiBjYXNlIGl0IGlzIHNxdWFzaGVkIHZlcnRpY2FsbHkuXG4gICAgbGV0IHN5ID0gMDtcbiAgICBsZXQgZXkgPSBpaDtcbiAgICBsZXQgcHkgPSBpaDtcbiAgICB3aGlsZShweSA+IHN5KXtcbiAgICAgICAgbGV0IGFscGhhID0gZGF0YVsocHkgLSAxKSAqIDQgKyAzXTtcbiAgICAgICAgaWYgKGFscGhhID09PSAwKSBleSA9IHB5O1xuICAgICAgICBlbHNlIHN5ID0gcHk7XG4gICAgICAgIHB5ID0gZXkgKyBzeSA+PiAxO1xuICAgIH1cbiAgICBsZXQgcmF0aW8gPSBweSAvIGloO1xuICAgIGlmIChyYXRpbyA9PT0gMCkgcmV0dXJuIDE7XG4gICAgZWxzZSByZXR1cm4gcmF0aW87XG59O1xuLy8gQSByZXBsYWNlbWVudCBmb3IgY29udGV4dC5kcmF3SW1hZ2Vcbi8vIChhcmdzIGFyZSBmb3Igc291cmNlIGFuZCBkZXN0aW5hdGlvbikuXG52YXIgJDNlZDI2OWYyZjBmYjIyNGIkdmFyJGRyYXdJbWFnZUlPU0ZpeCA9IGZ1bmN0aW9uKGN0eCwgaW1nLCBzeCwgc3ksIHN3LCBzaCwgZHgsIGR5LCBkdywgZGgpIHtcbiAgICBsZXQgdmVydFNxdWFzaFJhdGlvID0gJDNlZDI2OWYyZjBmYjIyNGIkdmFyJGRldGVjdFZlcnRpY2FsU3F1YXNoKGltZyk7XG4gICAgcmV0dXJuIGN0eC5kcmF3SW1hZ2UoaW1nLCBzeCwgc3ksIHN3LCBzaCwgZHgsIGR5LCBkdywgZGggLyB2ZXJ0U3F1YXNoUmF0aW8pO1xufTtcbi8vIEJhc2VkIG9uIE1pbmlmeUpwZWdcbi8vIFNvdXJjZTogaHR0cDovL3d3dy5wZXJyeS5jei9maWxlcy9FeGlmUmVzdG9yZXIuanNcbi8vIGh0dHA6Ly9lbGljb24uYmxvZzU3LmZjMi5jb20vYmxvZy1lbnRyeS0yMDYuaHRtbFxuY2xhc3MgJDNlZDI2OWYyZjBmYjIyNGIkdmFyJEV4aWZSZXN0b3JlIHtcbiAgICBzdGF0aWMgaW5pdENsYXNzKCkge1xuICAgICAgICB0aGlzLktFWV9TVFIgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89XCI7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGU2NChpbnB1dCkge1xuICAgICAgICBsZXQgb3V0cHV0ID0gXCJcIjtcbiAgICAgICAgbGV0IGNocjEgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBjaHIyID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgY2hyMyA9IFwiXCI7XG4gICAgICAgIGxldCBlbmMxID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgZW5jMiA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGVuYzMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBlbmM0ID0gXCJcIjtcbiAgICAgICAgbGV0IGkgPSAwO1xuICAgICAgICB3aGlsZSh0cnVlKXtcbiAgICAgICAgICAgIGNocjEgPSBpbnB1dFtpKytdO1xuICAgICAgICAgICAgY2hyMiA9IGlucHV0W2krK107XG4gICAgICAgICAgICBjaHIzID0gaW5wdXRbaSsrXTtcbiAgICAgICAgICAgIGVuYzEgPSBjaHIxID4+IDI7XG4gICAgICAgICAgICBlbmMyID0gKGNocjEgJiAzKSA8PCA0IHwgY2hyMiA+PiA0O1xuICAgICAgICAgICAgZW5jMyA9IChjaHIyICYgMTUpIDw8IDIgfCBjaHIzID4+IDY7XG4gICAgICAgICAgICBlbmM0ID0gY2hyMyAmIDYzO1xuICAgICAgICAgICAgaWYgKGlzTmFOKGNocjIpKSBlbmMzID0gZW5jNCA9IDY0O1xuICAgICAgICAgICAgZWxzZSBpZiAoaXNOYU4oY2hyMykpIGVuYzQgPSA2NDtcbiAgICAgICAgICAgIG91dHB1dCA9IG91dHB1dCArIHRoaXMuS0VZX1NUUi5jaGFyQXQoZW5jMSkgKyB0aGlzLktFWV9TVFIuY2hhckF0KGVuYzIpICsgdGhpcy5LRVlfU1RSLmNoYXJBdChlbmMzKSArIHRoaXMuS0VZX1NUUi5jaGFyQXQoZW5jNCk7XG4gICAgICAgICAgICBjaHIxID0gY2hyMiA9IGNocjMgPSBcIlwiO1xuICAgICAgICAgICAgZW5jMSA9IGVuYzIgPSBlbmMzID0gZW5jNCA9IFwiXCI7XG4gICAgICAgICAgICBpZiAoIShpIDwgaW5wdXQubGVuZ3RoKSkgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG4gICAgc3RhdGljIHJlc3RvcmUob3JpZ0ZpbGVCYXNlNjQsIHJlc2l6ZWRGaWxlQmFzZTY0KSB7XG4gICAgICAgIGlmICghb3JpZ0ZpbGVCYXNlNjQubWF0Y2goXCJkYXRhOmltYWdlL2pwZWc7YmFzZTY0LFwiKSkgcmV0dXJuIHJlc2l6ZWRGaWxlQmFzZTY0O1xuICAgICAgICBsZXQgcmF3SW1hZ2UgPSB0aGlzLmRlY29kZTY0KG9yaWdGaWxlQmFzZTY0LnJlcGxhY2UoXCJkYXRhOmltYWdlL2pwZWc7YmFzZTY0LFwiLCBcIlwiKSk7XG4gICAgICAgIGxldCBzZWdtZW50cyA9IHRoaXMuc2xpY2UyU2VnbWVudHMocmF3SW1hZ2UpO1xuICAgICAgICBsZXQgaW1hZ2UgPSB0aGlzLmV4aWZNYW5pcHVsYXRpb24ocmVzaXplZEZpbGVCYXNlNjQsIHNlZ21lbnRzKTtcbiAgICAgICAgcmV0dXJuIGBkYXRhOmltYWdlL2pwZWc7YmFzZTY0LCR7dGhpcy5lbmNvZGU2NChpbWFnZSl9YDtcbiAgICB9XG4gICAgc3RhdGljIGV4aWZNYW5pcHVsYXRpb24ocmVzaXplZEZpbGVCYXNlNjQsIHNlZ21lbnRzKSB7XG4gICAgICAgIGxldCBleGlmQXJyYXkgPSB0aGlzLmdldEV4aWZBcnJheShzZWdtZW50cyk7XG4gICAgICAgIGxldCBuZXdJbWFnZUFycmF5ID0gdGhpcy5pbnNlcnRFeGlmKHJlc2l6ZWRGaWxlQmFzZTY0LCBleGlmQXJyYXkpO1xuICAgICAgICBsZXQgYUJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KG5ld0ltYWdlQXJyYXkpO1xuICAgICAgICByZXR1cm4gYUJ1ZmZlcjtcbiAgICB9XG4gICAgc3RhdGljIGdldEV4aWZBcnJheShzZWdtZW50cykge1xuICAgICAgICBsZXQgc2VnID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgeCA9IDA7XG4gICAgICAgIHdoaWxlKHggPCBzZWdtZW50cy5sZW5ndGgpe1xuICAgICAgICAgICAgc2VnID0gc2VnbWVudHNbeF07XG4gICAgICAgICAgICBpZiAoc2VnWzBdID09PSAyNTUgJiBzZWdbMV0gPT09IDIyNSkgcmV0dXJuIHNlZztcbiAgICAgICAgICAgIHgrKztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHN0YXRpYyBpbnNlcnRFeGlmKHJlc2l6ZWRGaWxlQmFzZTY0LCBleGlmQXJyYXkpIHtcbiAgICAgICAgbGV0IGltYWdlRGF0YSA9IHJlc2l6ZWRGaWxlQmFzZTY0LnJlcGxhY2UoXCJkYXRhOmltYWdlL2pwZWc7YmFzZTY0LFwiLCBcIlwiKTtcbiAgICAgICAgbGV0IGJ1ZiA9IHRoaXMuZGVjb2RlNjQoaW1hZ2VEYXRhKTtcbiAgICAgICAgbGV0IHNlcGFyYXRlUG9pbnQgPSBidWYuaW5kZXhPZigyNTUsIDMpO1xuICAgICAgICBsZXQgbWFlID0gYnVmLnNsaWNlKDAsIHNlcGFyYXRlUG9pbnQpO1xuICAgICAgICBsZXQgYXRvID0gYnVmLnNsaWNlKHNlcGFyYXRlUG9pbnQpO1xuICAgICAgICBsZXQgYXJyYXkgPSBtYWU7XG4gICAgICAgIGFycmF5ID0gYXJyYXkuY29uY2F0KGV4aWZBcnJheSk7XG4gICAgICAgIGFycmF5ID0gYXJyYXkuY29uY2F0KGF0byk7XG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICB9XG4gICAgc3RhdGljIHNsaWNlMlNlZ21lbnRzKHJhd0ltYWdlQXJyYXkpIHtcbiAgICAgICAgbGV0IGhlYWQgPSAwO1xuICAgICAgICBsZXQgc2VnbWVudHMgPSBbXTtcbiAgICAgICAgd2hpbGUodHJ1ZSl7XG4gICAgICAgICAgICB2YXIgbGVuZ3RoO1xuICAgICAgICAgICAgaWYgKHJhd0ltYWdlQXJyYXlbaGVhZF0gPT09IDI1NSAmIHJhd0ltYWdlQXJyYXlbaGVhZCArIDFdID09PSAyMTgpIGJyZWFrO1xuICAgICAgICAgICAgaWYgKHJhd0ltYWdlQXJyYXlbaGVhZF0gPT09IDI1NSAmIHJhd0ltYWdlQXJyYXlbaGVhZCArIDFdID09PSAyMTYpIGhlYWQgKz0gMjtcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGxlbmd0aCA9IHJhd0ltYWdlQXJyYXlbaGVhZCArIDJdICogMjU2ICsgcmF3SW1hZ2VBcnJheVtoZWFkICsgM107XG4gICAgICAgICAgICAgICAgbGV0IGVuZFBvaW50ID0gaGVhZCArIGxlbmd0aCArIDI7XG4gICAgICAgICAgICAgICAgbGV0IHNlZyA9IHJhd0ltYWdlQXJyYXkuc2xpY2UoaGVhZCwgZW5kUG9pbnQpO1xuICAgICAgICAgICAgICAgIHNlZ21lbnRzLnB1c2goc2VnKTtcbiAgICAgICAgICAgICAgICBoZWFkID0gZW5kUG9pbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaGVhZCA+IHJhd0ltYWdlQXJyYXkubGVuZ3RoKSBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2VnbWVudHM7XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGU2NChpbnB1dCkge1xuICAgICAgICBsZXQgb3V0cHV0ID0gXCJcIjtcbiAgICAgICAgbGV0IGNocjEgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBjaHIyID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgY2hyMyA9IFwiXCI7XG4gICAgICAgIGxldCBlbmMxID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgZW5jMiA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGVuYzMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBlbmM0ID0gXCJcIjtcbiAgICAgICAgbGV0IGkgPSAwO1xuICAgICAgICBsZXQgYnVmID0gW107XG4gICAgICAgIC8vIHJlbW92ZSBhbGwgY2hhcmFjdGVycyB0aGF0IGFyZSBub3QgQS1aLCBhLXosIDAtOSwgKywgLywgb3IgPVxuICAgICAgICBsZXQgYmFzZTY0dGVzdCA9IC9bXkEtWmEtejAtOVxcK1xcL1xcPV0vZztcbiAgICAgICAgaWYgKGJhc2U2NHRlc3QuZXhlYyhpbnB1dCkpIGNvbnNvbGUud2FybihcIlRoZXJlIHdlcmUgaW52YWxpZCBiYXNlNjQgY2hhcmFjdGVycyBpbiB0aGUgaW5wdXQgdGV4dC5cXG5WYWxpZCBiYXNlNjQgY2hhcmFjdGVycyBhcmUgQS1aLCBhLXosIDAtOSwgJysnLCAnLycsYW5kICc9J1xcbkV4cGVjdCBlcnJvcnMgaW4gZGVjb2RpbmcuXCIpO1xuICAgICAgICBpbnB1dCA9IGlucHV0LnJlcGxhY2UoL1teQS1aYS16MC05XFwrXFwvXFw9XS9nLCBcIlwiKTtcbiAgICAgICAgd2hpbGUodHJ1ZSl7XG4gICAgICAgICAgICBlbmMxID0gdGhpcy5LRVlfU1RSLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO1xuICAgICAgICAgICAgZW5jMiA9IHRoaXMuS0VZX1NUUi5pbmRleE9mKGlucHV0LmNoYXJBdChpKyspKTtcbiAgICAgICAgICAgIGVuYzMgPSB0aGlzLktFWV9TVFIuaW5kZXhPZihpbnB1dC5jaGFyQXQoaSsrKSk7XG4gICAgICAgICAgICBlbmM0ID0gdGhpcy5LRVlfU1RSLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO1xuICAgICAgICAgICAgY2hyMSA9IGVuYzEgPDwgMiB8IGVuYzIgPj4gNDtcbiAgICAgICAgICAgIGNocjIgPSAoZW5jMiAmIDE1KSA8PCA0IHwgZW5jMyA+PiAyO1xuICAgICAgICAgICAgY2hyMyA9IChlbmMzICYgMykgPDwgNiB8IGVuYzQ7XG4gICAgICAgICAgICBidWYucHVzaChjaHIxKTtcbiAgICAgICAgICAgIGlmIChlbmMzICE9PSA2NCkgYnVmLnB1c2goY2hyMik7XG4gICAgICAgICAgICBpZiAoZW5jNCAhPT0gNjQpIGJ1Zi5wdXNoKGNocjMpO1xuICAgICAgICAgICAgY2hyMSA9IGNocjIgPSBjaHIzID0gXCJcIjtcbiAgICAgICAgICAgIGVuYzEgPSBlbmMyID0gZW5jMyA9IGVuYzQgPSBcIlwiO1xuICAgICAgICAgICAgaWYgKCEoaSA8IGlucHV0Lmxlbmd0aCkpIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBidWY7XG4gICAgfVxufVxuJDNlZDI2OWYyZjBmYjIyNGIkdmFyJEV4aWZSZXN0b3JlLmluaXRDbGFzcygpO1xuLypcbiAqIGNvbnRlbnRsb2FkZWQuanNcbiAqXG4gKiBBdXRob3I6IERpZWdvIFBlcmluaSAoZGllZ28ucGVyaW5pIGF0IGdtYWlsLmNvbSlcbiAqIFN1bW1hcnk6IGNyb3NzLWJyb3dzZXIgd3JhcHBlciBmb3IgRE9NQ29udGVudExvYWRlZFxuICogVXBkYXRlZDogMjAxMDEwMjBcbiAqIExpY2Vuc2U6IE1JVFxuICogVmVyc2lvbjogMS4yXG4gKlxuICogVVJMOlxuICogaHR0cDovL2phdmFzY3JpcHQubndib3guY29tL0NvbnRlbnRMb2FkZWQvXG4gKiBodHRwOi8vamF2YXNjcmlwdC5ud2JveC5jb20vQ29udGVudExvYWRlZC9NSVQtTElDRU5TRVxuICovIC8vIEB3aW4gd2luZG93IHJlZmVyZW5jZVxuLy8gQGZuIGZ1bmN0aW9uIHJlZmVyZW5jZVxubGV0ICQzZWQyNjlmMmYwZmIyMjRiJHZhciRjb250ZW50TG9hZGVkID0gZnVuY3Rpb24od2luLCBmbikge1xuICAgIGxldCBkb25lID0gZmFsc2U7XG4gICAgbGV0IHRvcCA9IHRydWU7XG4gICAgbGV0IGRvYyA9IHdpbi5kb2N1bWVudDtcbiAgICBsZXQgcm9vdCA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgbGV0IGFkZCA9IGRvYy5hZGRFdmVudExpc3RlbmVyID8gXCJhZGRFdmVudExpc3RlbmVyXCIgOiBcImF0dGFjaEV2ZW50XCI7XG4gICAgbGV0IHJlbSA9IGRvYy5hZGRFdmVudExpc3RlbmVyID8gXCJyZW1vdmVFdmVudExpc3RlbmVyXCIgOiBcImRldGFjaEV2ZW50XCI7XG4gICAgbGV0IHByZSA9IGRvYy5hZGRFdmVudExpc3RlbmVyID8gXCJcIiA6IFwib25cIjtcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKGUudHlwZSA9PT0gXCJyZWFkeXN0YXRlY2hhbmdlXCIgJiYgZG9jLnJlYWR5U3RhdGUgIT09IFwiY29tcGxldGVcIikgcmV0dXJuO1xuICAgICAgICAoZS50eXBlID09PSBcImxvYWRcIiA/IHdpbiA6IGRvYylbcmVtXShwcmUgKyBlLnR5cGUsIGluaXQsIGZhbHNlKTtcbiAgICAgICAgaWYgKCFkb25lICYmIChkb25lID0gdHJ1ZSkpIHJldHVybiBmbi5jYWxsKHdpbiwgZS50eXBlIHx8IGUpO1xuICAgIH07XG4gICAgdmFyIHBvbGwgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJvb3QuZG9TY3JvbGwoXCJsZWZ0XCIpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KHBvbGwsIDUwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5pdChcInBvbGxcIik7XG4gICAgfTtcbiAgICBpZiAoZG9jLnJlYWR5U3RhdGUgIT09IFwiY29tcGxldGVcIikge1xuICAgICAgICBpZiAoZG9jLmNyZWF0ZUV2ZW50T2JqZWN0ICYmIHJvb3QuZG9TY3JvbGwpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdG9wID0gIXdpbi5mcmFtZUVsZW1lbnQ7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRvcCkgcG9sbCgpO1xuICAgICAgICB9XG4gICAgICAgIGRvY1thZGRdKHByZSArIFwiRE9NQ29udGVudExvYWRlZFwiLCBpbml0LCBmYWxzZSk7XG4gICAgICAgIGRvY1thZGRdKHByZSArIFwicmVhZHlzdGF0ZWNoYW5nZVwiLCBpbml0LCBmYWxzZSk7XG4gICAgICAgIHJldHVybiB3aW5bYWRkXShwcmUgKyBcImxvYWRcIiwgaW5pdCwgZmFsc2UpO1xuICAgIH1cbn07XG5mdW5jdGlvbiAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkX19ndWFyZF9fKHZhbHVlLCB0cmFuc2Zvcm0pIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiICYmIHZhbHVlICE9PSBudWxsID8gdHJhbnNmb3JtKHZhbHVlKSA6IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uICQzZWQyNjlmMmYwZmIyMjRiJHZhciRfX2d1YXJkTWV0aG9kX18ob2JqLCBtZXRob2ROYW1lLCB0cmFuc2Zvcm0pIHtcbiAgICBpZiAodHlwZW9mIG9iaiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmogIT09IG51bGwgJiYgdHlwZW9mIG9ialttZXRob2ROYW1lXSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJhbnNmb3JtKG9iaiwgbWV0aG9kTmFtZSk7XG4gICAgZWxzZSByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5cbmV4cG9ydCB7JDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOSBhcyBkZWZhdWx0LCAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5IGFzIERyb3B6b25lfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyb3B6b25lLm1qcy5tYXBcbiIsImltcG9ydCB7IERyb3B6b25lIH0gZnJvbSBcImRyb3B6b25lXCI7XHJcblxyXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGl2LmZvcm1fX2Ryb3B6b25lJykpIHtcclxuICBjb25zdCBkcm9wem9uZSA9IG5ldyBEcm9wem9uZShcImRpdi5mb3JtX19kcm9wem9uZVwiLCB7XHJcbiAgICB1cmw6IFwiL2ZpbGUvcG9zdFwiLFxyXG4gICAgY3JlYXRlSW1hZ2VUaHVtYm5haWxzOiBmYWxzZSxcclxuICAgIGRpY3REZWZhdWx0TWVzc2FnZTogJ0hlcmUnXHJcbiAgfSk7XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IEhPT0tTID0gW1xuICAgIFwib25DaGFuZ2VcIixcbiAgICBcIm9uQ2xvc2VcIixcbiAgICBcIm9uRGF5Q3JlYXRlXCIsXG4gICAgXCJvbkRlc3Ryb3lcIixcbiAgICBcIm9uS2V5RG93blwiLFxuICAgIFwib25Nb250aENoYW5nZVwiLFxuICAgIFwib25PcGVuXCIsXG4gICAgXCJvblBhcnNlQ29uZmlnXCIsXG4gICAgXCJvblJlYWR5XCIsXG4gICAgXCJvblZhbHVlVXBkYXRlXCIsXG4gICAgXCJvblllYXJDaGFuZ2VcIixcbiAgICBcIm9uUHJlQ2FsZW5kYXJQb3NpdGlvblwiLFxuXTtcbmV4cG9ydCBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICBfZGlzYWJsZTogW10sXG4gICAgYWxsb3dJbnB1dDogZmFsc2UsXG4gICAgYWxsb3dJbnZhbGlkUHJlbG9hZDogZmFsc2UsXG4gICAgYWx0Rm9ybWF0OiBcIkYgaiwgWVwiLFxuICAgIGFsdElucHV0OiBmYWxzZSxcbiAgICBhbHRJbnB1dENsYXNzOiBcImZvcm0tY29udHJvbCBpbnB1dFwiLFxuICAgIGFuaW1hdGU6IHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIk1TSUVcIikgPT09IC0xLFxuICAgIGFyaWFEYXRlRm9ybWF0OiBcIkYgaiwgWVwiLFxuICAgIGF1dG9GaWxsRGVmYXVsdFRpbWU6IHRydWUsXG4gICAgY2xpY2tPcGVuczogdHJ1ZSxcbiAgICBjbG9zZU9uU2VsZWN0OiB0cnVlLFxuICAgIGNvbmp1bmN0aW9uOiBcIiwgXCIsXG4gICAgZGF0ZUZvcm1hdDogXCJZLW0tZFwiLFxuICAgIGRlZmF1bHRIb3VyOiAxMixcbiAgICBkZWZhdWx0TWludXRlOiAwLFxuICAgIGRlZmF1bHRTZWNvbmRzOiAwLFxuICAgIGRpc2FibGU6IFtdLFxuICAgIGRpc2FibGVNb2JpbGU6IGZhbHNlLFxuICAgIGVuYWJsZVNlY29uZHM6IGZhbHNlLFxuICAgIGVuYWJsZVRpbWU6IGZhbHNlLFxuICAgIGVycm9ySGFuZGxlcjogKGVycikgPT4gdHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIgJiYgY29uc29sZS53YXJuKGVyciksXG4gICAgZ2V0V2VlazogKGdpdmVuRGF0ZSkgPT4ge1xuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZ2l2ZW5EYXRlLmdldFRpbWUoKSk7XG4gICAgICAgIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIDMgLSAoKGRhdGUuZ2V0RGF5KCkgKyA2KSAlIDcpKTtcbiAgICAgICAgdmFyIHdlZWsxID0gbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCAwLCA0KTtcbiAgICAgICAgcmV0dXJuICgxICtcbiAgICAgICAgICAgIE1hdGgucm91bmQoKChkYXRlLmdldFRpbWUoKSAtIHdlZWsxLmdldFRpbWUoKSkgLyA4NjQwMDAwMCAtXG4gICAgICAgICAgICAgICAgMyArXG4gICAgICAgICAgICAgICAgKCh3ZWVrMS5nZXREYXkoKSArIDYpICUgNykpIC9cbiAgICAgICAgICAgICAgICA3KSk7XG4gICAgfSxcbiAgICBob3VySW5jcmVtZW50OiAxLFxuICAgIGlnbm9yZWRGb2N1c0VsZW1lbnRzOiBbXSxcbiAgICBpbmxpbmU6IGZhbHNlLFxuICAgIGxvY2FsZTogXCJkZWZhdWx0XCIsXG4gICAgbWludXRlSW5jcmVtZW50OiA1LFxuICAgIG1vZGU6IFwic2luZ2xlXCIsXG4gICAgbW9udGhTZWxlY3RvclR5cGU6IFwiZHJvcGRvd25cIixcbiAgICBuZXh0QXJyb3c6IFwiPHN2ZyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnIHZpZXdCb3g9JzAgMCAxNyAxNyc+PGc+PC9nPjxwYXRoIGQ9J00xMy4yMDcgOC40NzJsLTcuODU0IDcuODU0LTAuNzA3LTAuNzA3IDcuMTQ2LTcuMTQ2LTcuMTQ2LTcuMTQ4IDAuNzA3LTAuNzA3IDcuODU0IDcuODU0eicgLz48L3N2Zz5cIixcbiAgICBub0NhbGVuZGFyOiBmYWxzZSxcbiAgICBub3c6IG5ldyBEYXRlKCksXG4gICAgb25DaGFuZ2U6IFtdLFxuICAgIG9uQ2xvc2U6IFtdLFxuICAgIG9uRGF5Q3JlYXRlOiBbXSxcbiAgICBvbkRlc3Ryb3k6IFtdLFxuICAgIG9uS2V5RG93bjogW10sXG4gICAgb25Nb250aENoYW5nZTogW10sXG4gICAgb25PcGVuOiBbXSxcbiAgICBvblBhcnNlQ29uZmlnOiBbXSxcbiAgICBvblJlYWR5OiBbXSxcbiAgICBvblZhbHVlVXBkYXRlOiBbXSxcbiAgICBvblllYXJDaGFuZ2U6IFtdLFxuICAgIG9uUHJlQ2FsZW5kYXJQb3NpdGlvbjogW10sXG4gICAgcGx1Z2luczogW10sXG4gICAgcG9zaXRpb246IFwiYXV0b1wiLFxuICAgIHBvc2l0aW9uRWxlbWVudDogdW5kZWZpbmVkLFxuICAgIHByZXZBcnJvdzogXCI8c3ZnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycgdmlld0JveD0nMCAwIDE3IDE3Jz48Zz48L2c+PHBhdGggZD0nTTUuMjA3IDguNDcxbDcuMTQ2IDcuMTQ3LTAuNzA3IDAuNzA3LTcuODUzLTcuODU0IDcuODU0LTcuODUzIDAuNzA3IDAuNzA3LTcuMTQ3IDcuMTQ2eicgLz48L3N2Zz5cIixcbiAgICBzaG9ydGhhbmRDdXJyZW50TW9udGg6IGZhbHNlLFxuICAgIHNob3dNb250aHM6IDEsXG4gICAgc3RhdGljOiBmYWxzZSxcbiAgICB0aW1lXzI0aHI6IGZhbHNlLFxuICAgIHdlZWtOdW1iZXJzOiBmYWxzZSxcbiAgICB3cmFwOiBmYWxzZSxcbn07XG4iLCJleHBvcnQgY29uc3QgZW5nbGlzaCA9IHtcbiAgICB3ZWVrZGF5czoge1xuICAgICAgICBzaG9ydGhhbmQ6IFtcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiXSxcbiAgICAgICAgbG9uZ2hhbmQ6IFtcbiAgICAgICAgICAgIFwiU3VuZGF5XCIsXG4gICAgICAgICAgICBcIk1vbmRheVwiLFxuICAgICAgICAgICAgXCJUdWVzZGF5XCIsXG4gICAgICAgICAgICBcIldlZG5lc2RheVwiLFxuICAgICAgICAgICAgXCJUaHVyc2RheVwiLFxuICAgICAgICAgICAgXCJGcmlkYXlcIixcbiAgICAgICAgICAgIFwiU2F0dXJkYXlcIixcbiAgICAgICAgXSxcbiAgICB9LFxuICAgIG1vbnRoczoge1xuICAgICAgICBzaG9ydGhhbmQ6IFtcbiAgICAgICAgICAgIFwiSmFuXCIsXG4gICAgICAgICAgICBcIkZlYlwiLFxuICAgICAgICAgICAgXCJNYXJcIixcbiAgICAgICAgICAgIFwiQXByXCIsXG4gICAgICAgICAgICBcIk1heVwiLFxuICAgICAgICAgICAgXCJKdW5cIixcbiAgICAgICAgICAgIFwiSnVsXCIsXG4gICAgICAgICAgICBcIkF1Z1wiLFxuICAgICAgICAgICAgXCJTZXBcIixcbiAgICAgICAgICAgIFwiT2N0XCIsXG4gICAgICAgICAgICBcIk5vdlwiLFxuICAgICAgICAgICAgXCJEZWNcIixcbiAgICAgICAgXSxcbiAgICAgICAgbG9uZ2hhbmQ6IFtcbiAgICAgICAgICAgIFwiSmFudWFyeVwiLFxuICAgICAgICAgICAgXCJGZWJydWFyeVwiLFxuICAgICAgICAgICAgXCJNYXJjaFwiLFxuICAgICAgICAgICAgXCJBcHJpbFwiLFxuICAgICAgICAgICAgXCJNYXlcIixcbiAgICAgICAgICAgIFwiSnVuZVwiLFxuICAgICAgICAgICAgXCJKdWx5XCIsXG4gICAgICAgICAgICBcIkF1Z3VzdFwiLFxuICAgICAgICAgICAgXCJTZXB0ZW1iZXJcIixcbiAgICAgICAgICAgIFwiT2N0b2JlclwiLFxuICAgICAgICAgICAgXCJOb3ZlbWJlclwiLFxuICAgICAgICAgICAgXCJEZWNlbWJlclwiLFxuICAgICAgICBdLFxuICAgIH0sXG4gICAgZGF5c0luTW9udGg6IFszMSwgMjgsIDMxLCAzMCwgMzEsIDMwLCAzMSwgMzEsIDMwLCAzMSwgMzAsIDMxXSxcbiAgICBmaXJzdERheU9mV2VlazogMCxcbiAgICBvcmRpbmFsOiAobnRoKSA9PiB7XG4gICAgICAgIGNvbnN0IHMgPSBudGggJSAxMDA7XG4gICAgICAgIGlmIChzID4gMyAmJiBzIDwgMjEpXG4gICAgICAgICAgICByZXR1cm4gXCJ0aFwiO1xuICAgICAgICBzd2l0Y2ggKHMgJSAxMCkge1xuICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHJldHVybiBcInN0XCI7XG4gICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwibmRcIjtcbiAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJyZFwiO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ0aFwiO1xuICAgICAgICB9XG4gICAgfSxcbiAgICByYW5nZVNlcGFyYXRvcjogXCIgdG8gXCIsXG4gICAgd2Vla0FiYnJldmlhdGlvbjogXCJXa1wiLFxuICAgIHNjcm9sbFRpdGxlOiBcIlNjcm9sbCB0byBpbmNyZW1lbnRcIixcbiAgICB0b2dnbGVUaXRsZTogXCJDbGljayB0byB0b2dnbGVcIixcbiAgICBhbVBNOiBbXCJBTVwiLCBcIlBNXCJdLFxuICAgIHllYXJBcmlhTGFiZWw6IFwiWWVhclwiLFxuICAgIG1vbnRoQXJpYUxhYmVsOiBcIk1vbnRoXCIsXG4gICAgaG91ckFyaWFMYWJlbDogXCJIb3VyXCIsXG4gICAgbWludXRlQXJpYUxhYmVsOiBcIk1pbnV0ZVwiLFxuICAgIHRpbWVfMjRocjogZmFsc2UsXG59O1xuZXhwb3J0IGRlZmF1bHQgZW5nbGlzaDtcbiIsImV4cG9ydCBjb25zdCBwYWQgPSAobnVtYmVyLCBsZW5ndGggPSAyKSA9PiBgMDAwJHtudW1iZXJ9YC5zbGljZShsZW5ndGggKiAtMSk7XG5leHBvcnQgY29uc3QgaW50ID0gKGJvb2wpID0+IChib29sID09PSB0cnVlID8gMSA6IDApO1xuZXhwb3J0IGZ1bmN0aW9uIGRlYm91bmNlKGZuLCB3YWl0KSB7XG4gICAgbGV0IHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHQpO1xuICAgICAgICB0ID0gc2V0VGltZW91dCgoKSA9PiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB3YWl0KTtcbiAgICB9O1xufVxuZXhwb3J0IGNvbnN0IGFycmF5aWZ5ID0gKG9iaikgPT4gb2JqIGluc3RhbmNlb2YgQXJyYXkgPyBvYmogOiBbb2JqXTtcbiIsImV4cG9ydCBmdW5jdGlvbiB0b2dnbGVDbGFzcyhlbGVtLCBjbGFzc05hbWUsIGJvb2wpIHtcbiAgICBpZiAoYm9vbCA9PT0gdHJ1ZSlcbiAgICAgICAgcmV0dXJuIGVsZW0uY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICAgIGVsZW0uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQodGFnLCBjbGFzc05hbWUsIGNvbnRlbnQpIHtcbiAgICBjb25zdCBlID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWUgfHwgXCJcIjtcbiAgICBjb250ZW50ID0gY29udGVudCB8fCBcIlwiO1xuICAgIGUuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgIGlmIChjb250ZW50ICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGUudGV4dENvbnRlbnQgPSBjb250ZW50O1xuICAgIHJldHVybiBlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyTm9kZShub2RlKSB7XG4gICAgd2hpbGUgKG5vZGUuZmlyc3RDaGlsZClcbiAgICAgICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmZpcnN0Q2hpbGQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRQYXJlbnQobm9kZSwgY29uZGl0aW9uKSB7XG4gICAgaWYgKGNvbmRpdGlvbihub2RlKSlcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgZWxzZSBpZiAobm9kZS5wYXJlbnROb2RlKVxuICAgICAgICByZXR1cm4gZmluZFBhcmVudChub2RlLnBhcmVudE5vZGUsIGNvbmRpdGlvbik7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOdW1iZXJJbnB1dChpbnB1dENsYXNzTmFtZSwgb3B0cykge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwibnVtSW5wdXRXcmFwcGVyXCIpLCBudW1JbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCBcIm51bUlucHV0IFwiICsgaW5wdXRDbGFzc05hbWUpLCBhcnJvd1VwID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJhcnJvd1VwXCIpLCBhcnJvd0Rvd24gPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImFycm93RG93blwiKTtcbiAgICBpZiAobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKFwiTVNJRSA5LjBcIikgPT09IC0xKSB7XG4gICAgICAgIG51bUlucHV0LnR5cGUgPSBcIm51bWJlclwiO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbnVtSW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICBudW1JbnB1dC5wYXR0ZXJuID0gXCJcXFxcZCpcIjtcbiAgICB9XG4gICAgaWYgKG9wdHMgIT09IHVuZGVmaW5lZClcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gb3B0cylcbiAgICAgICAgICAgIG51bUlucHV0LnNldEF0dHJpYnV0ZShrZXksIG9wdHNba2V5XSk7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChudW1JbnB1dCk7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChhcnJvd1VwKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGFycm93RG93bik7XG4gICAgcmV0dXJuIHdyYXBwZXI7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RXZlbnRUYXJnZXQoZXZlbnQpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGV2ZW50LmNvbXBvc2VkUGF0aCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gZXZlbnQuY29tcG9zZWRQYXRoKCk7XG4gICAgICAgICAgICByZXR1cm4gcGF0aFswXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXZlbnQudGFyZ2V0O1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGV2ZW50LnRhcmdldDtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBpbnQsIHBhZCB9IGZyb20gXCIuLi91dGlsc1wiO1xuY29uc3QgZG9Ob3RoaW5nID0gKCkgPT4gdW5kZWZpbmVkO1xuZXhwb3J0IGNvbnN0IG1vbnRoVG9TdHIgPSAobW9udGhOdW1iZXIsIHNob3J0aGFuZCwgbG9jYWxlKSA9PiBsb2NhbGUubW9udGhzW3Nob3J0aGFuZCA/IFwic2hvcnRoYW5kXCIgOiBcImxvbmdoYW5kXCJdW21vbnRoTnVtYmVyXTtcbmV4cG9ydCBjb25zdCByZXZGb3JtYXQgPSB7XG4gICAgRDogZG9Ob3RoaW5nLFxuICAgIEY6IGZ1bmN0aW9uIChkYXRlT2JqLCBtb250aE5hbWUsIGxvY2FsZSkge1xuICAgICAgICBkYXRlT2JqLnNldE1vbnRoKGxvY2FsZS5tb250aHMubG9uZ2hhbmQuaW5kZXhPZihtb250aE5hbWUpKTtcbiAgICB9LFxuICAgIEc6IChkYXRlT2JqLCBob3VyKSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0SG91cnMocGFyc2VGbG9hdChob3VyKSk7XG4gICAgfSxcbiAgICBIOiAoZGF0ZU9iaiwgaG91cikgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldEhvdXJzKHBhcnNlRmxvYXQoaG91cikpO1xuICAgIH0sXG4gICAgSjogKGRhdGVPYmosIGRheSkgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldERhdGUocGFyc2VGbG9hdChkYXkpKTtcbiAgICB9LFxuICAgIEs6IChkYXRlT2JqLCBhbVBNLCBsb2NhbGUpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXRIb3VycygoZGF0ZU9iai5nZXRIb3VycygpICUgMTIpICtcbiAgICAgICAgICAgIDEyICogaW50KG5ldyBSZWdFeHAobG9jYWxlLmFtUE1bMV0sIFwiaVwiKS50ZXN0KGFtUE0pKSk7XG4gICAgfSxcbiAgICBNOiBmdW5jdGlvbiAoZGF0ZU9iaiwgc2hvcnRNb250aCwgbG9jYWxlKSB7XG4gICAgICAgIGRhdGVPYmouc2V0TW9udGgobG9jYWxlLm1vbnRocy5zaG9ydGhhbmQuaW5kZXhPZihzaG9ydE1vbnRoKSk7XG4gICAgfSxcbiAgICBTOiAoZGF0ZU9iaiwgc2Vjb25kcykgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldFNlY29uZHMocGFyc2VGbG9hdChzZWNvbmRzKSk7XG4gICAgfSxcbiAgICBVOiAoXywgdW5peFNlY29uZHMpID0+IG5ldyBEYXRlKHBhcnNlRmxvYXQodW5peFNlY29uZHMpICogMTAwMCksXG4gICAgVzogZnVuY3Rpb24gKGRhdGVPYmosIHdlZWtOdW0sIGxvY2FsZSkge1xuICAgICAgICBjb25zdCB3ZWVrTnVtYmVyID0gcGFyc2VJbnQod2Vla051bSk7XG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkYXRlT2JqLmdldEZ1bGxZZWFyKCksIDAsIDIgKyAod2Vla051bWJlciAtIDEpICogNywgMCwgMCwgMCwgMCk7XG4gICAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIGRhdGUuZ2V0RGF5KCkgKyBsb2NhbGUuZmlyc3REYXlPZldlZWspO1xuICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICB9LFxuICAgIFk6IChkYXRlT2JqLCB5ZWFyKSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0RnVsbFllYXIocGFyc2VGbG9hdCh5ZWFyKSk7XG4gICAgfSxcbiAgICBaOiAoXywgSVNPRGF0ZSkgPT4gbmV3IERhdGUoSVNPRGF0ZSksXG4gICAgZDogKGRhdGVPYmosIGRheSkgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldERhdGUocGFyc2VGbG9hdChkYXkpKTtcbiAgICB9LFxuICAgIGg6IChkYXRlT2JqLCBob3VyKSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0SG91cnMocGFyc2VGbG9hdChob3VyKSk7XG4gICAgfSxcbiAgICBpOiAoZGF0ZU9iaiwgbWludXRlcykgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldE1pbnV0ZXMocGFyc2VGbG9hdChtaW51dGVzKSk7XG4gICAgfSxcbiAgICBqOiAoZGF0ZU9iaiwgZGF5KSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0RGF0ZShwYXJzZUZsb2F0KGRheSkpO1xuICAgIH0sXG4gICAgbDogZG9Ob3RoaW5nLFxuICAgIG06IChkYXRlT2JqLCBtb250aCkgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldE1vbnRoKHBhcnNlRmxvYXQobW9udGgpIC0gMSk7XG4gICAgfSxcbiAgICBuOiAoZGF0ZU9iaiwgbW9udGgpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXRNb250aChwYXJzZUZsb2F0KG1vbnRoKSAtIDEpO1xuICAgIH0sXG4gICAgczogKGRhdGVPYmosIHNlY29uZHMpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXRTZWNvbmRzKHBhcnNlRmxvYXQoc2Vjb25kcykpO1xuICAgIH0sXG4gICAgdTogKF8sIHVuaXhNaWxsU2Vjb25kcykgPT4gbmV3IERhdGUocGFyc2VGbG9hdCh1bml4TWlsbFNlY29uZHMpKSxcbiAgICB3OiBkb05vdGhpbmcsXG4gICAgeTogKGRhdGVPYmosIHllYXIpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXRGdWxsWWVhcigyMDAwICsgcGFyc2VGbG9hdCh5ZWFyKSk7XG4gICAgfSxcbn07XG5leHBvcnQgY29uc3QgdG9rZW5SZWdleCA9IHtcbiAgICBEOiBcIihcXFxcdyspXCIsXG4gICAgRjogXCIoXFxcXHcrKVwiLFxuICAgIEc6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgSDogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBKOiBcIihcXFxcZFxcXFxkfFxcXFxkKVxcXFx3K1wiLFxuICAgIEs6IFwiXCIsXG4gICAgTTogXCIoXFxcXHcrKVwiLFxuICAgIFM6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgVTogXCIoLispXCIsXG4gICAgVzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBZOiBcIihcXFxcZHs0fSlcIixcbiAgICBaOiBcIiguKylcIixcbiAgICBkOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIGg6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgaTogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBqOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIGw6IFwiKFxcXFx3KylcIixcbiAgICBtOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIG46IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgczogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICB1OiBcIiguKylcIixcbiAgICB3OiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIHk6IFwiKFxcXFxkezJ9KVwiLFxufTtcbmV4cG9ydCBjb25zdCBmb3JtYXRzID0ge1xuICAgIFo6IChkYXRlKSA9PiBkYXRlLnRvSVNPU3RyaW5nKCksXG4gICAgRDogZnVuY3Rpb24gKGRhdGUsIGxvY2FsZSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbG9jYWxlLndlZWtkYXlzLnNob3J0aGFuZFtmb3JtYXRzLncoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKV07XG4gICAgfSxcbiAgICBGOiBmdW5jdGlvbiAoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBtb250aFRvU3RyKGZvcm1hdHMubihkYXRlLCBsb2NhbGUsIG9wdGlvbnMpIC0gMSwgZmFsc2UsIGxvY2FsZSk7XG4gICAgfSxcbiAgICBHOiBmdW5jdGlvbiAoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBwYWQoZm9ybWF0cy5oKGRhdGUsIGxvY2FsZSwgb3B0aW9ucykpO1xuICAgIH0sXG4gICAgSDogKGRhdGUpID0+IHBhZChkYXRlLmdldEhvdXJzKCkpLFxuICAgIEo6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5vcmRpbmFsICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gZGF0ZS5nZXREYXRlKCkgKyBsb2NhbGUub3JkaW5hbChkYXRlLmdldERhdGUoKSlcbiAgICAgICAgICAgIDogZGF0ZS5nZXREYXRlKCk7XG4gICAgfSxcbiAgICBLOiAoZGF0ZSwgbG9jYWxlKSA9PiBsb2NhbGUuYW1QTVtpbnQoZGF0ZS5nZXRIb3VycygpID4gMTEpXSxcbiAgICBNOiBmdW5jdGlvbiAoZGF0ZSwgbG9jYWxlKSB7XG4gICAgICAgIHJldHVybiBtb250aFRvU3RyKGRhdGUuZ2V0TW9udGgoKSwgdHJ1ZSwgbG9jYWxlKTtcbiAgICB9LFxuICAgIFM6IChkYXRlKSA9PiBwYWQoZGF0ZS5nZXRTZWNvbmRzKCkpLFxuICAgIFU6IChkYXRlKSA9PiBkYXRlLmdldFRpbWUoKSAvIDEwMDAsXG4gICAgVzogZnVuY3Rpb24gKGRhdGUsIF8sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG9wdGlvbnMuZ2V0V2VlayhkYXRlKTtcbiAgICB9LFxuICAgIFk6IChkYXRlKSA9PiBwYWQoZGF0ZS5nZXRGdWxsWWVhcigpLCA0KSxcbiAgICBkOiAoZGF0ZSkgPT4gcGFkKGRhdGUuZ2V0RGF0ZSgpKSxcbiAgICBoOiAoZGF0ZSkgPT4gKGRhdGUuZ2V0SG91cnMoKSAlIDEyID8gZGF0ZS5nZXRIb3VycygpICUgMTIgOiAxMiksXG4gICAgaTogKGRhdGUpID0+IHBhZChkYXRlLmdldE1pbnV0ZXMoKSksXG4gICAgajogKGRhdGUpID0+IGRhdGUuZ2V0RGF0ZSgpLFxuICAgIGw6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS53ZWVrZGF5cy5sb25naGFuZFtkYXRlLmdldERheSgpXTtcbiAgICB9LFxuICAgIG06IChkYXRlKSA9PiBwYWQoZGF0ZS5nZXRNb250aCgpICsgMSksXG4gICAgbjogKGRhdGUpID0+IGRhdGUuZ2V0TW9udGgoKSArIDEsXG4gICAgczogKGRhdGUpID0+IGRhdGUuZ2V0U2Vjb25kcygpLFxuICAgIHU6IChkYXRlKSA9PiBkYXRlLmdldFRpbWUoKSxcbiAgICB3OiAoZGF0ZSkgPT4gZGF0ZS5nZXREYXkoKSxcbiAgICB5OiAoZGF0ZSkgPT4gU3RyaW5nKGRhdGUuZ2V0RnVsbFllYXIoKSkuc3Vic3RyaW5nKDIpLFxufTtcbiIsImltcG9ydCB7IHRva2VuUmVnZXgsIHJldkZvcm1hdCwgZm9ybWF0cywgfSBmcm9tIFwiLi9mb3JtYXR0aW5nXCI7XG5pbXBvcnQgeyBkZWZhdWx0cyB9IGZyb20gXCIuLi90eXBlcy9vcHRpb25zXCI7XG5pbXBvcnQgeyBlbmdsaXNoIH0gZnJvbSBcIi4uL2wxMG4vZGVmYXVsdFwiO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZURhdGVGb3JtYXR0ZXIgPSAoeyBjb25maWcgPSBkZWZhdWx0cywgbDEwbiA9IGVuZ2xpc2gsIGlzTW9iaWxlID0gZmFsc2UsIH0pID0+IChkYXRlT2JqLCBmcm10LCBvdmVycmlkZUxvY2FsZSkgPT4ge1xuICAgIGNvbnN0IGxvY2FsZSA9IG92ZXJyaWRlTG9jYWxlIHx8IGwxMG47XG4gICAgaWYgKGNvbmZpZy5mb3JtYXREYXRlICE9PSB1bmRlZmluZWQgJiYgIWlzTW9iaWxlKSB7XG4gICAgICAgIHJldHVybiBjb25maWcuZm9ybWF0RGF0ZShkYXRlT2JqLCBmcm10LCBsb2NhbGUpO1xuICAgIH1cbiAgICByZXR1cm4gZnJtdFxuICAgICAgICAuc3BsaXQoXCJcIilcbiAgICAgICAgLm1hcCgoYywgaSwgYXJyKSA9PiBmb3JtYXRzW2NdICYmIGFycltpIC0gMV0gIT09IFwiXFxcXFwiXG4gICAgICAgID8gZm9ybWF0c1tjXShkYXRlT2JqLCBsb2NhbGUsIGNvbmZpZylcbiAgICAgICAgOiBjICE9PSBcIlxcXFxcIlxuICAgICAgICAgICAgPyBjXG4gICAgICAgICAgICA6IFwiXCIpXG4gICAgICAgIC5qb2luKFwiXCIpO1xufTtcbmV4cG9ydCBjb25zdCBjcmVhdGVEYXRlUGFyc2VyID0gKHsgY29uZmlnID0gZGVmYXVsdHMsIGwxMG4gPSBlbmdsaXNoIH0pID0+IChkYXRlLCBnaXZlbkZvcm1hdCwgdGltZWxlc3MsIGN1c3RvbUxvY2FsZSkgPT4ge1xuICAgIGlmIChkYXRlICE9PSAwICYmICFkYXRlKVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGNvbnN0IGxvY2FsZSA9IGN1c3RvbUxvY2FsZSB8fCBsMTBuO1xuICAgIGxldCBwYXJzZWREYXRlO1xuICAgIGNvbnN0IGRhdGVPcmlnID0gZGF0ZTtcbiAgICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpXG4gICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSk7XG4gICAgZWxzZSBpZiAodHlwZW9mIGRhdGUgIT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgZGF0ZS50b0ZpeGVkICE9PSB1bmRlZmluZWQpXG4gICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICBlbHNlIGlmICh0eXBlb2YgZGF0ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCBmb3JtYXQgPSBnaXZlbkZvcm1hdCB8fCAoY29uZmlnIHx8IGRlZmF1bHRzKS5kYXRlRm9ybWF0O1xuICAgICAgICBjb25zdCBkYXRlc3RyID0gU3RyaW5nKGRhdGUpLnRyaW0oKTtcbiAgICAgICAgaWYgKGRhdGVzdHIgPT09IFwidG9kYXlcIikge1xuICAgICAgICAgICAgcGFyc2VkRGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICB0aW1lbGVzcyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoL1okLy50ZXN0KGRhdGVzdHIpIHx8XG4gICAgICAgICAgICAvR01UJC8udGVzdChkYXRlc3RyKSlcbiAgICAgICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICAgICAgZWxzZSBpZiAoY29uZmlnICYmIGNvbmZpZy5wYXJzZURhdGUpXG4gICAgICAgICAgICBwYXJzZWREYXRlID0gY29uZmlnLnBhcnNlRGF0ZShkYXRlLCBmb3JtYXQpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlZERhdGUgPVxuICAgICAgICAgICAgICAgICFjb25maWcgfHwgIWNvbmZpZy5ub0NhbGVuZGFyXG4gICAgICAgICAgICAgICAgICAgID8gbmV3IERhdGUobmV3IERhdGUoKS5nZXRGdWxsWWVhcigpLCAwLCAxLCAwLCAwLCAwLCAwKVxuICAgICAgICAgICAgICAgICAgICA6IG5ldyBEYXRlKG5ldyBEYXRlKCkuc2V0SG91cnMoMCwgMCwgMCwgMCkpO1xuICAgICAgICAgICAgbGV0IG1hdGNoZWQsIG9wcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIG1hdGNoSW5kZXggPSAwLCByZWdleFN0ciA9IFwiXCI7IGkgPCBmb3JtYXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0b2tlbiA9IGZvcm1hdFtpXTtcbiAgICAgICAgICAgICAgICBjb25zdCBpc0JhY2tTbGFzaCA9IHRva2VuID09PSBcIlxcXFxcIjtcbiAgICAgICAgICAgICAgICBjb25zdCBlc2NhcGVkID0gZm9ybWF0W2kgLSAxXSA9PT0gXCJcXFxcXCIgfHwgaXNCYWNrU2xhc2g7XG4gICAgICAgICAgICAgICAgaWYgKHRva2VuUmVnZXhbdG9rZW5dICYmICFlc2NhcGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlZ2V4U3RyICs9IHRva2VuUmVnZXhbdG9rZW5dO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXRjaCA9IG5ldyBSZWdFeHAocmVnZXhTdHIpLmV4ZWMoZGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiAobWF0Y2hlZCA9IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHNbdG9rZW4gIT09IFwiWVwiID8gXCJwdXNoXCIgOiBcInVuc2hpZnRcIl0oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZuOiByZXZGb3JtYXRbdG9rZW5dLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbDogbWF0Y2hbKyttYXRjaEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFpc0JhY2tTbGFzaClcbiAgICAgICAgICAgICAgICAgICAgcmVnZXhTdHIgKz0gXCIuXCI7XG4gICAgICAgICAgICAgICAgb3BzLmZvckVhY2goKHsgZm4sIHZhbCB9KSA9PiAocGFyc2VkRGF0ZSA9IGZuKHBhcnNlZERhdGUsIHZhbCwgbG9jYWxlKSB8fCBwYXJzZWREYXRlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXJzZWREYXRlID0gbWF0Y2hlZCA/IHBhcnNlZERhdGUgOiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKCEocGFyc2VkRGF0ZSBpbnN0YW5jZW9mIERhdGUgJiYgIWlzTmFOKHBhcnNlZERhdGUuZ2V0VGltZSgpKSkpIHtcbiAgICAgICAgY29uZmlnLmVycm9ySGFuZGxlcihuZXcgRXJyb3IoYEludmFsaWQgZGF0ZSBwcm92aWRlZDogJHtkYXRlT3JpZ31gKSk7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh0aW1lbGVzcyA9PT0gdHJ1ZSlcbiAgICAgICAgcGFyc2VkRGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgICByZXR1cm4gcGFyc2VkRGF0ZTtcbn07XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZURhdGVzKGRhdGUxLCBkYXRlMiwgdGltZWxlc3MgPSB0cnVlKSB7XG4gICAgaWYgKHRpbWVsZXNzICE9PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gKG5ldyBEYXRlKGRhdGUxLmdldFRpbWUoKSkuc2V0SG91cnMoMCwgMCwgMCwgMCkgLVxuICAgICAgICAgICAgbmV3IERhdGUoZGF0ZTIuZ2V0VGltZSgpKS5zZXRIb3VycygwLCAwLCAwLCAwKSk7XG4gICAgfVxuICAgIHJldHVybiBkYXRlMS5nZXRUaW1lKCkgLSBkYXRlMi5nZXRUaW1lKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVRpbWVzKGRhdGUxLCBkYXRlMikge1xuICAgIHJldHVybiAoMzYwMCAqIChkYXRlMS5nZXRIb3VycygpIC0gZGF0ZTIuZ2V0SG91cnMoKSkgK1xuICAgICAgICA2MCAqIChkYXRlMS5nZXRNaW51dGVzKCkgLSBkYXRlMi5nZXRNaW51dGVzKCkpICtcbiAgICAgICAgZGF0ZTEuZ2V0U2Vjb25kcygpIC1cbiAgICAgICAgZGF0ZTIuZ2V0U2Vjb25kcygpKTtcbn1cbmV4cG9ydCBjb25zdCBpc0JldHdlZW4gPSAodHMsIHRzMSwgdHMyKSA9PiB7XG4gICAgcmV0dXJuIHRzID4gTWF0aC5taW4odHMxLCB0czIpICYmIHRzIDwgTWF0aC5tYXgodHMxLCB0czIpO1xufTtcbmV4cG9ydCBjb25zdCBkdXJhdGlvbiA9IHtcbiAgICBEQVk6IDg2NDAwMDAwLFxufTtcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0SG91cnMoY29uZmlnKSB7XG4gICAgbGV0IGhvdXJzID0gY29uZmlnLmRlZmF1bHRIb3VyO1xuICAgIGxldCBtaW51dGVzID0gY29uZmlnLmRlZmF1bHRNaW51dGU7XG4gICAgbGV0IHNlY29uZHMgPSBjb25maWcuZGVmYXVsdFNlY29uZHM7XG4gICAgaWYgKGNvbmZpZy5taW5EYXRlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc3QgbWluSG91ciA9IGNvbmZpZy5taW5EYXRlLmdldEhvdXJzKCk7XG4gICAgICAgIGNvbnN0IG1pbk1pbnV0ZXMgPSBjb25maWcubWluRGF0ZS5nZXRNaW51dGVzKCk7XG4gICAgICAgIGNvbnN0IG1pblNlY29uZHMgPSBjb25maWcubWluRGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgICAgIGlmIChob3VycyA8IG1pbkhvdXIpIHtcbiAgICAgICAgICAgIGhvdXJzID0gbWluSG91cjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaG91cnMgPT09IG1pbkhvdXIgJiYgbWludXRlcyA8IG1pbk1pbnV0ZXMpIHtcbiAgICAgICAgICAgIG1pbnV0ZXMgPSBtaW5NaW51dGVzO1xuICAgICAgICB9XG4gICAgICAgIGlmIChob3VycyA9PT0gbWluSG91ciAmJiBtaW51dGVzID09PSBtaW5NaW51dGVzICYmIHNlY29uZHMgPCBtaW5TZWNvbmRzKVxuICAgICAgICAgICAgc2Vjb25kcyA9IGNvbmZpZy5taW5EYXRlLmdldFNlY29uZHMoKTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5tYXhEYXRlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc3QgbWF4SHIgPSBjb25maWcubWF4RGF0ZS5nZXRIb3VycygpO1xuICAgICAgICBjb25zdCBtYXhNaW51dGVzID0gY29uZmlnLm1heERhdGUuZ2V0TWludXRlcygpO1xuICAgICAgICBob3VycyA9IE1hdGgubWluKGhvdXJzLCBtYXhIcik7XG4gICAgICAgIGlmIChob3VycyA9PT0gbWF4SHIpXG4gICAgICAgICAgICBtaW51dGVzID0gTWF0aC5taW4obWF4TWludXRlcywgbWludXRlcyk7XG4gICAgICAgIGlmIChob3VycyA9PT0gbWF4SHIgJiYgbWludXRlcyA9PT0gbWF4TWludXRlcylcbiAgICAgICAgICAgIHNlY29uZHMgPSBjb25maWcubWF4RGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgfVxuICAgIHJldHVybiB7IGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzIH07XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbmlmICh0eXBlb2YgT2JqZWN0LmFzc2lnbiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgT2JqZWN0LmFzc2lnbiA9IGZ1bmN0aW9uICh0YXJnZXQsIC4uLmFyZ3MpIHtcbiAgICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgICAgIHRocm93IFR5cGVFcnJvcihcIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdFwiKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHNvdXJjZSBvZiBhcmdzKSB7XG4gICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKChrZXkpID0+ICh0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9O1xufVxuIiwiaW1wb3J0IHsgZGVmYXVsdHMgYXMgZGVmYXVsdE9wdGlvbnMsIEhPT0tTLCB9IGZyb20gXCIuL3R5cGVzL29wdGlvbnNcIjtcbmltcG9ydCBFbmdsaXNoIGZyb20gXCIuL2wxMG4vZGVmYXVsdFwiO1xuaW1wb3J0IHsgYXJyYXlpZnksIGRlYm91bmNlLCBpbnQsIHBhZCB9IGZyb20gXCIuL3V0aWxzXCI7XG5pbXBvcnQgeyBjbGVhck5vZGUsIGNyZWF0ZUVsZW1lbnQsIGNyZWF0ZU51bWJlcklucHV0LCBmaW5kUGFyZW50LCB0b2dnbGVDbGFzcywgZ2V0RXZlbnRUYXJnZXQsIH0gZnJvbSBcIi4vdXRpbHMvZG9tXCI7XG5pbXBvcnQgeyBjb21wYXJlRGF0ZXMsIGNyZWF0ZURhdGVQYXJzZXIsIGNyZWF0ZURhdGVGb3JtYXR0ZXIsIGR1cmF0aW9uLCBpc0JldHdlZW4sIGdldERlZmF1bHRIb3VycywgfSBmcm9tIFwiLi91dGlscy9kYXRlc1wiO1xuaW1wb3J0IHsgdG9rZW5SZWdleCwgbW9udGhUb1N0ciB9IGZyb20gXCIuL3V0aWxzL2Zvcm1hdHRpbmdcIjtcbmltcG9ydCBcIi4vdXRpbHMvcG9seWZpbGxzXCI7XG5jb25zdCBERUJPVU5DRURfQ0hBTkdFX01TID0gMzAwO1xuZnVuY3Rpb24gRmxhdHBpY2tySW5zdGFuY2UoZWxlbWVudCwgaW5zdGFuY2VDb25maWcpIHtcbiAgICBjb25zdCBzZWxmID0ge1xuICAgICAgICBjb25maWc6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdE9wdGlvbnMpLCBmbGF0cGlja3IuZGVmYXVsdENvbmZpZyksXG4gICAgICAgIGwxMG46IEVuZ2xpc2gsXG4gICAgfTtcbiAgICBzZWxmLnBhcnNlRGF0ZSA9IGNyZWF0ZURhdGVQYXJzZXIoeyBjb25maWc6IHNlbGYuY29uZmlnLCBsMTBuOiBzZWxmLmwxMG4gfSk7XG4gICAgc2VsZi5faGFuZGxlcnMgPSBbXTtcbiAgICBzZWxmLnBsdWdpbkVsZW1lbnRzID0gW107XG4gICAgc2VsZi5sb2FkZWRQbHVnaW5zID0gW107XG4gICAgc2VsZi5fYmluZCA9IGJpbmQ7XG4gICAgc2VsZi5fc2V0SG91cnNGcm9tRGF0ZSA9IHNldEhvdXJzRnJvbURhdGU7XG4gICAgc2VsZi5fcG9zaXRpb25DYWxlbmRhciA9IHBvc2l0aW9uQ2FsZW5kYXI7XG4gICAgc2VsZi5jaGFuZ2VNb250aCA9IGNoYW5nZU1vbnRoO1xuICAgIHNlbGYuY2hhbmdlWWVhciA9IGNoYW5nZVllYXI7XG4gICAgc2VsZi5jbGVhciA9IGNsZWFyO1xuICAgIHNlbGYuY2xvc2UgPSBjbG9zZTtcbiAgICBzZWxmLl9jcmVhdGVFbGVtZW50ID0gY3JlYXRlRWxlbWVudDtcbiAgICBzZWxmLmRlc3Ryb3kgPSBkZXN0cm95O1xuICAgIHNlbGYuaXNFbmFibGVkID0gaXNFbmFibGVkO1xuICAgIHNlbGYuanVtcFRvRGF0ZSA9IGp1bXBUb0RhdGU7XG4gICAgc2VsZi5vcGVuID0gb3BlbjtcbiAgICBzZWxmLnJlZHJhdyA9IHJlZHJhdztcbiAgICBzZWxmLnNldCA9IHNldDtcbiAgICBzZWxmLnNldERhdGUgPSBzZXREYXRlO1xuICAgIHNlbGYudG9nZ2xlID0gdG9nZ2xlO1xuICAgIGZ1bmN0aW9uIHNldHVwSGVscGVyRnVuY3Rpb25zKCkge1xuICAgICAgICBzZWxmLnV0aWxzID0ge1xuICAgICAgICAgICAgZ2V0RGF5c0luTW9udGgobW9udGggPSBzZWxmLmN1cnJlbnRNb250aCwgeXIgPSBzZWxmLmN1cnJlbnRZZWFyKSB7XG4gICAgICAgICAgICAgICAgaWYgKG1vbnRoID09PSAxICYmICgoeXIgJSA0ID09PSAwICYmIHlyICUgMTAwICE9PSAwKSB8fCB5ciAlIDQwMCA9PT0gMCkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAyOTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5sMTBuLmRheXNJbk1vbnRoW21vbnRoXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAgIHNlbGYuZWxlbWVudCA9IHNlbGYuaW5wdXQgPSBlbGVtZW50O1xuICAgICAgICBzZWxmLmlzT3BlbiA9IGZhbHNlO1xuICAgICAgICBwYXJzZUNvbmZpZygpO1xuICAgICAgICBzZXR1cExvY2FsZSgpO1xuICAgICAgICBzZXR1cElucHV0cygpO1xuICAgICAgICBzZXR1cERhdGVzKCk7XG4gICAgICAgIHNldHVwSGVscGVyRnVuY3Rpb25zKCk7XG4gICAgICAgIGlmICghc2VsZi5pc01vYmlsZSlcbiAgICAgICAgICAgIGJ1aWxkKCk7XG4gICAgICAgIGJpbmRFdmVudHMoKTtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggfHwgc2VsZi5jb25maWcubm9DYWxlbmRhcikge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUpIHtcbiAgICAgICAgICAgICAgICBzZXRIb3Vyc0Zyb21EYXRlKHNlbGYuY29uZmlnLm5vQ2FsZW5kYXIgPyBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA6IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1cGRhdGVWYWx1ZShmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0Q2FsZW5kYXJXaWR0aCgpO1xuICAgICAgICBjb25zdCBpc1NhZmFyaSA9IC9eKCg/IWNocm9tZXxhbmRyb2lkKS4pKnNhZmFyaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICAgIGlmICghc2VsZi5pc01vYmlsZSAmJiBpc1NhZmFyaSkge1xuICAgICAgICAgICAgcG9zaXRpb25DYWxlbmRhcigpO1xuICAgICAgICB9XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uUmVhZHlcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJpbmRUb0luc3RhbmNlKGZuKSB7XG4gICAgICAgIHJldHVybiBmbi5iaW5kKHNlbGYpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRDYWxlbmRhcldpZHRoKCkge1xuICAgICAgICBjb25zdCBjb25maWcgPSBzZWxmLmNvbmZpZztcbiAgICAgICAgaWYgKGNvbmZpZy53ZWVrTnVtYmVycyA9PT0gZmFsc2UgJiYgY29uZmlnLnNob3dNb250aHMgPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb25maWcubm9DYWxlbmRhciAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY2FsZW5kYXJDb250YWluZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXlzV2lkdGggPSAoc2VsZi5kYXlzLm9mZnNldFdpZHRoICsgMSkgKiBjb25maWcuc2hvd01vbnRocztcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyLnN0eWxlLndpZHRoID0gZGF5c1dpZHRoICsgXCJweFwiO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLndpZHRoID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRheXNXaWR0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNlbGYud2Vla1dyYXBwZXIgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYud2Vla1dyYXBwZXIub2Zmc2V0V2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAwKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJweFwiO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJlbW92ZVByb3BlcnR5KFwidmlzaWJpbGl0eVwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcImRpc3BsYXlcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlVGltZShlKSB7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0RGF0ZSA9IHNlbGYuY29uZmlnLm1pbkRhdGUgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhuZXcgRGF0ZSgpLCBzZWxmLmNvbmZpZy5taW5EYXRlKSA+PSAwXG4gICAgICAgICAgICAgICAgPyBuZXcgRGF0ZSgpXG4gICAgICAgICAgICAgICAgOiBuZXcgRGF0ZShzZWxmLmNvbmZpZy5taW5EYXRlLmdldFRpbWUoKSk7XG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0cyA9IGdldERlZmF1bHRIb3VycyhzZWxmLmNvbmZpZyk7XG4gICAgICAgICAgICBkZWZhdWx0RGF0ZS5zZXRIb3VycyhkZWZhdWx0cy5ob3VycywgZGVmYXVsdHMubWludXRlcywgZGVmYXVsdHMuc2Vjb25kcywgZGVmYXVsdERhdGUuZ2V0TWlsbGlzZWNvbmRzKCkpO1xuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzID0gW2RlZmF1bHREYXRlXTtcbiAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gZGVmYXVsdERhdGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGUgIT09IHVuZGVmaW5lZCAmJiBlLnR5cGUgIT09IFwiYmx1clwiKSB7XG4gICAgICAgICAgICB0aW1lV3JhcHBlcihlKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcmV2VmFsdWUgPSBzZWxmLl9pbnB1dC52YWx1ZTtcbiAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgIGlmIChzZWxmLl9pbnB1dC52YWx1ZSAhPT0gcHJldlZhbHVlKSB7XG4gICAgICAgICAgICBzZWxmLl9kZWJvdW5jZWRDaGFuZ2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBhbXBtMm1pbGl0YXJ5KGhvdXIsIGFtUE0pIHtcbiAgICAgICAgcmV0dXJuIChob3VyICUgMTIpICsgMTIgKiBpbnQoYW1QTSA9PT0gc2VsZi5sMTBuLmFtUE1bMV0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBtaWxpdGFyeTJhbXBtKGhvdXIpIHtcbiAgICAgICAgc3dpdGNoIChob3VyICUgMjQpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDEyO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gaG91ciAlIDEyO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldEhvdXJzRnJvbUlucHV0cygpIHtcbiAgICAgICAgaWYgKHNlbGYuaG91ckVsZW1lbnQgPT09IHVuZGVmaW5lZCB8fCBzZWxmLm1pbnV0ZUVsZW1lbnQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGhvdXJzID0gKHBhcnNlSW50KHNlbGYuaG91ckVsZW1lbnQudmFsdWUuc2xpY2UoLTIpLCAxMCkgfHwgMCkgJSAyNCwgbWludXRlcyA9IChwYXJzZUludChzZWxmLm1pbnV0ZUVsZW1lbnQudmFsdWUsIDEwKSB8fCAwKSAlIDYwLCBzZWNvbmRzID0gc2VsZi5zZWNvbmRFbGVtZW50ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gKHBhcnNlSW50KHNlbGYuc2Vjb25kRWxlbWVudC52YWx1ZSwgMTApIHx8IDApICUgNjBcbiAgICAgICAgICAgIDogMDtcbiAgICAgICAgaWYgKHNlbGYuYW1QTSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBob3VycyA9IGFtcG0ybWlsaXRhcnkoaG91cnMsIHNlbGYuYW1QTS50ZXh0Q29udGVudCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGltaXRNaW5Ib3VycyA9IHNlbGYuY29uZmlnLm1pblRpbWUgIT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1pbkRhdGUgJiZcbiAgICAgICAgICAgICAgICBzZWxmLm1pbkRhdGVIYXNUaW1lICYmXG4gICAgICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogJiZcbiAgICAgICAgICAgICAgICBjb21wYXJlRGF0ZXMoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmosIHNlbGYuY29uZmlnLm1pbkRhdGUsIHRydWUpID09PVxuICAgICAgICAgICAgICAgICAgICAwKTtcbiAgICAgICAgY29uc3QgbGltaXRNYXhIb3VycyA9IHNlbGYuY29uZmlnLm1heFRpbWUgIT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1heERhdGUgJiZcbiAgICAgICAgICAgICAgICBzZWxmLm1heERhdGVIYXNUaW1lICYmXG4gICAgICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogJiZcbiAgICAgICAgICAgICAgICBjb21wYXJlRGF0ZXMoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmosIHNlbGYuY29uZmlnLm1heERhdGUsIHRydWUpID09PVxuICAgICAgICAgICAgICAgICAgICAwKTtcbiAgICAgICAgaWYgKGxpbWl0TWF4SG91cnMpIHtcbiAgICAgICAgICAgIGNvbnN0IG1heFRpbWUgPSBzZWxmLmNvbmZpZy5tYXhUaW1lICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heFRpbWVcbiAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1heERhdGU7XG4gICAgICAgICAgICBob3VycyA9IE1hdGgubWluKGhvdXJzLCBtYXhUaW1lLmdldEhvdXJzKCkpO1xuICAgICAgICAgICAgaWYgKGhvdXJzID09PSBtYXhUaW1lLmdldEhvdXJzKCkpXG4gICAgICAgICAgICAgICAgbWludXRlcyA9IE1hdGgubWluKG1pbnV0ZXMsIG1heFRpbWUuZ2V0TWludXRlcygpKTtcbiAgICAgICAgICAgIGlmIChtaW51dGVzID09PSBtYXhUaW1lLmdldE1pbnV0ZXMoKSlcbiAgICAgICAgICAgICAgICBzZWNvbmRzID0gTWF0aC5taW4oc2Vjb25kcywgbWF4VGltZS5nZXRTZWNvbmRzKCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsaW1pdE1pbkhvdXJzKSB7XG4gICAgICAgICAgICBjb25zdCBtaW5UaW1lID0gc2VsZi5jb25maWcubWluVGltZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5taW5UaW1lXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5taW5EYXRlO1xuICAgICAgICAgICAgaG91cnMgPSBNYXRoLm1heChob3VycywgbWluVGltZS5nZXRIb3VycygpKTtcbiAgICAgICAgICAgIGlmIChob3VycyA9PT0gbWluVGltZS5nZXRIb3VycygpICYmIG1pbnV0ZXMgPCBtaW5UaW1lLmdldE1pbnV0ZXMoKSlcbiAgICAgICAgICAgICAgICBtaW51dGVzID0gbWluVGltZS5nZXRNaW51dGVzKCk7XG4gICAgICAgICAgICBpZiAobWludXRlcyA9PT0gbWluVGltZS5nZXRNaW51dGVzKCkpXG4gICAgICAgICAgICAgICAgc2Vjb25kcyA9IE1hdGgubWF4KHNlY29uZHMsIG1pblRpbWUuZ2V0U2Vjb25kcygpKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRIb3Vycyhob3VycywgbWludXRlcywgc2Vjb25kcyk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldEhvdXJzRnJvbURhdGUoZGF0ZU9iaikge1xuICAgICAgICBjb25zdCBkYXRlID0gZGF0ZU9iaiB8fCBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iajtcbiAgICAgICAgaWYgKGRhdGUpIHtcbiAgICAgICAgICAgIHNldEhvdXJzKGRhdGUuZ2V0SG91cnMoKSwgZGF0ZS5nZXRNaW51dGVzKCksIGRhdGUuZ2V0U2Vjb25kcygpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRIb3Vycyhob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICAgICAgICBpZiAoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmouc2V0SG91cnMoaG91cnMgJSAyNCwgbWludXRlcywgc2Vjb25kcyB8fCAwLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNlbGYuaG91ckVsZW1lbnQgfHwgIXNlbGYubWludXRlRWxlbWVudCB8fCBzZWxmLmlzTW9iaWxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnZhbHVlID0gcGFkKCFzZWxmLmNvbmZpZy50aW1lXzI0aHJcbiAgICAgICAgICAgID8gKCgxMiArIGhvdXJzKSAlIDEyKSArIDEyICogaW50KGhvdXJzICUgMTIgPT09IDApXG4gICAgICAgICAgICA6IGhvdXJzKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnZhbHVlID0gcGFkKG1pbnV0ZXMpO1xuICAgICAgICBpZiAoc2VsZi5hbVBNICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPSBzZWxmLmwxMG4uYW1QTVtpbnQoaG91cnMgPj0gMTIpXTtcbiAgICAgICAgaWYgKHNlbGYuc2Vjb25kRWxlbWVudCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5zZWNvbmRFbGVtZW50LnZhbHVlID0gcGFkKHNlY29uZHMpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvblllYXJJbnB1dChldmVudCkge1xuICAgICAgICBjb25zdCBldmVudFRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50KTtcbiAgICAgICAgY29uc3QgeWVhciA9IHBhcnNlSW50KGV2ZW50VGFyZ2V0LnZhbHVlKSArIChldmVudC5kZWx0YSB8fCAwKTtcbiAgICAgICAgaWYgKHllYXIgLyAxMDAwID4gMSB8fFxuICAgICAgICAgICAgKGV2ZW50LmtleSA9PT0gXCJFbnRlclwiICYmICEvW15cXGRdLy50ZXN0KHllYXIudG9TdHJpbmcoKSkpKSB7XG4gICAgICAgICAgICBjaGFuZ2VZZWFyKHllYXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJpbmQoZWxlbWVudCwgZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGV2ZW50IGluc3RhbmNlb2YgQXJyYXkpXG4gICAgICAgICAgICByZXR1cm4gZXZlbnQuZm9yRWFjaCgoZXYpID0+IGJpbmQoZWxlbWVudCwgZXYsIGhhbmRsZXIsIG9wdGlvbnMpKTtcbiAgICAgICAgaWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50LmZvckVhY2goKGVsKSA9PiBiaW5kKGVsLCBldmVudCwgaGFuZGxlciwgb3B0aW9ucykpO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpO1xuICAgICAgICBzZWxmLl9oYW5kbGVycy5wdXNoKHtcbiAgICAgICAgICAgIHJlbW92ZTogKCkgPT4gZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRyaWdnZXJDaGFuZ2UoKSB7XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2hhbmdlXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBiaW5kRXZlbnRzKCkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcud3JhcCkge1xuICAgICAgICAgICAgW1wib3BlblwiLCBcImNsb3NlXCIsIFwidG9nZ2xlXCIsIFwiY2xlYXJcIl0uZm9yRWFjaCgoZXZ0KSA9PiB7XG4gICAgICAgICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChzZWxmLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChgW2RhdGEtJHtldnR9XWApLCAoZWwpID0+IGJpbmQoZWwsIFwiY2xpY2tcIiwgc2VsZltldnRdKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5pc01vYmlsZSkge1xuICAgICAgICAgICAgc2V0dXBNb2JpbGUoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZWJvdW5jZWRSZXNpemUgPSBkZWJvdW5jZShvblJlc2l6ZSwgNTApO1xuICAgICAgICBzZWxmLl9kZWJvdW5jZWRDaGFuZ2UgPSBkZWJvdW5jZSh0cmlnZ2VyQ2hhbmdlLCBERUJPVU5DRURfQ0hBTkdFX01TKTtcbiAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAmJiAhL2lQaG9uZXxpUGFkfGlQb2QvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKVxuICAgICAgICAgICAgYmluZChzZWxmLmRheXNDb250YWluZXIsIFwibW91c2VvdmVyXCIsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIilcbiAgICAgICAgICAgICAgICAgICAgb25Nb3VzZU92ZXIoZ2V0RXZlbnRUYXJnZXQoZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIGJpbmQod2luZG93LmRvY3VtZW50LmJvZHksIFwia2V5ZG93blwiLCBvbktleURvd24pO1xuICAgICAgICBpZiAoIXNlbGYuY29uZmlnLmlubGluZSAmJiAhc2VsZi5jb25maWcuc3RhdGljKVxuICAgICAgICAgICAgYmluZCh3aW5kb3csIFwicmVzaXplXCIsIGRlYm91bmNlZFJlc2l6ZSk7XG4gICAgICAgIGlmICh3aW5kb3cub250b3VjaHN0YXJ0ICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBiaW5kKHdpbmRvdy5kb2N1bWVudCwgXCJ0b3VjaHN0YXJ0XCIsIGRvY3VtZW50Q2xpY2spO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICBiaW5kKHdpbmRvdy5kb2N1bWVudCwgXCJtb3VzZWRvd25cIiwgZG9jdW1lbnRDbGljayk7XG4gICAgICAgIGJpbmQod2luZG93LmRvY3VtZW50LCBcImZvY3VzXCIsIGRvY3VtZW50Q2xpY2ssIHsgY2FwdHVyZTogdHJ1ZSB9KTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmNsaWNrT3BlbnMgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5faW5wdXQsIFwiZm9jdXNcIiwgc2VsZi5vcGVuKTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5faW5wdXQsIFwiY2xpY2tcIiwgc2VsZi5vcGVuKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5tb250aE5hdiwgXCJjbGlja1wiLCBvbk1vbnRoTmF2Q2xpY2spO1xuICAgICAgICAgICAgYmluZChzZWxmLm1vbnRoTmF2LCBbXCJrZXl1cFwiLCBcImluY3JlbWVudFwiXSwgb25ZZWFySW5wdXQpO1xuICAgICAgICAgICAgYmluZChzZWxmLmRheXNDb250YWluZXIsIFwiY2xpY2tcIiwgc2VsZWN0RGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYudGltZUNvbnRhaW5lciAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBzZWxUZXh0ID0gKGUpID0+IGdldEV2ZW50VGFyZ2V0KGUpLnNlbGVjdCgpO1xuICAgICAgICAgICAgYmluZChzZWxmLnRpbWVDb250YWluZXIsIFtcImluY3JlbWVudFwiXSwgdXBkYXRlVGltZSk7XG4gICAgICAgICAgICBiaW5kKHNlbGYudGltZUNvbnRhaW5lciwgXCJibHVyXCIsIHVwZGF0ZVRpbWUsIHsgY2FwdHVyZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi50aW1lQ29udGFpbmVyLCBcImNsaWNrXCIsIHRpbWVJbmNyZW1lbnQpO1xuICAgICAgICAgICAgYmluZChbc2VsZi5ob3VyRWxlbWVudCwgc2VsZi5taW51dGVFbGVtZW50XSwgW1wiZm9jdXNcIiwgXCJjbGlja1wiXSwgc2VsVGV4dCk7XG4gICAgICAgICAgICBpZiAoc2VsZi5zZWNvbmRFbGVtZW50ICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgYmluZChzZWxmLnNlY29uZEVsZW1lbnQsIFwiZm9jdXNcIiwgKCkgPT4gc2VsZi5zZWNvbmRFbGVtZW50ICYmIHNlbGYuc2Vjb25kRWxlbWVudC5zZWxlY3QoKSk7XG4gICAgICAgICAgICBpZiAoc2VsZi5hbVBNICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBiaW5kKHNlbGYuYW1QTSwgXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaW1lKGUpO1xuICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyQ2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5faW5wdXQsIFwiYmx1clwiLCBvbkJsdXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGp1bXBUb0RhdGUoanVtcERhdGUsIHRyaWdnZXJDaGFuZ2UpIHtcbiAgICAgICAgY29uc3QganVtcFRvID0ganVtcERhdGUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBzZWxmLnBhcnNlRGF0ZShqdW1wRGF0ZSlcbiAgICAgICAgICAgIDogc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogfHxcbiAgICAgICAgICAgICAgICAoc2VsZi5jb25maWcubWluRGF0ZSAmJiBzZWxmLmNvbmZpZy5taW5EYXRlID4gc2VsZi5ub3dcbiAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5taW5EYXRlXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcubWF4RGF0ZSAmJiBzZWxmLmNvbmZpZy5tYXhEYXRlIDwgc2VsZi5ub3dcbiAgICAgICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWF4RGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBzZWxmLm5vdyk7XG4gICAgICAgIGNvbnN0IG9sZFllYXIgPSBzZWxmLmN1cnJlbnRZZWFyO1xuICAgICAgICBjb25zdCBvbGRNb250aCA9IHNlbGYuY3VycmVudE1vbnRoO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKGp1bXBUbyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IGp1bXBUby5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0ganVtcFRvLmdldE1vbnRoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGUubWVzc2FnZSA9IFwiSW52YWxpZCBkYXRlIHN1cHBsaWVkOiBcIiArIGp1bXBUbztcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVycm9ySGFuZGxlcihlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSAmJiBzZWxmLmN1cnJlbnRZZWFyICE9PSBvbGRZZWFyKSB7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2UgJiZcbiAgICAgICAgICAgIChzZWxmLmN1cnJlbnRZZWFyICE9PSBvbGRZZWFyIHx8IHNlbGYuY3VycmVudE1vbnRoICE9PSBvbGRNb250aCkpIHtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uTW9udGhDaGFuZ2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdGltZUluY3JlbWVudChlKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgIGlmICh+ZXZlbnRUYXJnZXQuY2xhc3NOYW1lLmluZGV4T2YoXCJhcnJvd1wiKSlcbiAgICAgICAgICAgIGluY3JlbWVudE51bUlucHV0KGUsIGV2ZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImFycm93VXBcIikgPyAxIDogLTEpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpbmNyZW1lbnROdW1JbnB1dChlLCBkZWx0YSwgaW5wdXRFbGVtKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGUgJiYgZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gaW5wdXRFbGVtIHx8XG4gICAgICAgICAgICAodGFyZ2V0ICYmIHRhcmdldC5wYXJlbnROb2RlICYmIHRhcmdldC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpO1xuICAgICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUV2ZW50KFwiaW5jcmVtZW50XCIpO1xuICAgICAgICBldmVudC5kZWx0YSA9IGRlbHRhO1xuICAgICAgICBpbnB1dCAmJiBpbnB1dC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGQoKSB7XG4gICAgICAgIGNvbnN0IGZyYWdtZW50ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItY2FsZW5kYXJcIik7XG4gICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIudGFiSW5kZXggPSAtMTtcbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5ub0NhbGVuZGFyKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZChidWlsZE1vbnRoTmF2KCkpO1xuICAgICAgICAgICAgc2VsZi5pbm5lckNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItaW5uZXJDb250YWluZXJcIik7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcud2Vla051bWJlcnMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHdlZWtXcmFwcGVyLCB3ZWVrTnVtYmVycyB9ID0gYnVpbGRXZWVrcygpO1xuICAgICAgICAgICAgICAgIHNlbGYuaW5uZXJDb250YWluZXIuYXBwZW5kQ2hpbGQod2Vla1dyYXBwZXIpO1xuICAgICAgICAgICAgICAgIHNlbGYud2Vla051bWJlcnMgPSB3ZWVrTnVtYmVycztcbiAgICAgICAgICAgICAgICBzZWxmLndlZWtXcmFwcGVyID0gd2Vla1dyYXBwZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLnJDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXJDb250YWluZXJcIik7XG4gICAgICAgICAgICBzZWxmLnJDb250YWluZXIuYXBwZW5kQ2hpbGQoYnVpbGRXZWVrZGF5cygpKTtcbiAgICAgICAgICAgIGlmICghc2VsZi5kYXlzQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1kYXlzXCIpO1xuICAgICAgICAgICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lci50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnVpbGREYXlzKCk7XG4gICAgICAgICAgICBzZWxmLnJDb250YWluZXIuYXBwZW5kQ2hpbGQoc2VsZi5kYXlzQ29udGFpbmVyKTtcbiAgICAgICAgICAgIHNlbGYuaW5uZXJDb250YWluZXIuYXBwZW5kQ2hpbGQoc2VsZi5yQ29udGFpbmVyKTtcbiAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKHNlbGYuaW5uZXJDb250YWluZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5lbmFibGVUaW1lKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZChidWlsZFRpbWUoKSk7XG4gICAgICAgIH1cbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJyYW5nZU1vZGVcIiwgc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhbmltYXRlXCIsIHNlbGYuY29uZmlnLmFuaW1hdGUgPT09IHRydWUpO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcIm11bHRpTW9udGhcIiwgc2VsZi5jb25maWcuc2hvd01vbnRocyA+IDEpO1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmFwcGVuZENoaWxkKGZyYWdtZW50KTtcbiAgICAgICAgY29uc3QgY3VzdG9tQXBwZW5kID0gc2VsZi5jb25maWcuYXBwZW5kVG8gIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgc2VsZi5jb25maWcuYXBwZW5kVG8ubm9kZVR5cGUgIT09IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmlubGluZSB8fCBzZWxmLmNvbmZpZy5zdGF0aWMpIHtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuY2xhc3NMaXN0LmFkZChzZWxmLmNvbmZpZy5pbmxpbmUgPyBcImlubGluZVwiIDogXCJzdGF0aWNcIik7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcuaW5saW5lKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjdXN0b21BcHBlbmQgJiYgc2VsZi5lbGVtZW50LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZWxlbWVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBzZWxmLl9pbnB1dC5uZXh0U2libGluZyk7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoc2VsZi5jb25maWcuYXBwZW5kVG8gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcuYXBwZW5kVG8uYXBwZW5kQ2hpbGQoc2VsZi5jYWxlbmRhckNvbnRhaW5lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcuc3RhdGljKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgd3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3Itd3JhcHBlclwiKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5lbGVtZW50LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZWxlbWVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh3cmFwcGVyLCBzZWxmLmVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoc2VsZi5lbGVtZW50KTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5hbHRJbnB1dClcbiAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZChzZWxmLmFsdElucHV0KTtcbiAgICAgICAgICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKHNlbGYuY2FsZW5kYXJDb250YWluZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsZi5jb25maWcuc3RhdGljICYmICFzZWxmLmNvbmZpZy5pbmxpbmUpXG4gICAgICAgICAgICAoc2VsZi5jb25maWcuYXBwZW5kVG8gIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYXBwZW5kVG9cbiAgICAgICAgICAgICAgICA6IHdpbmRvdy5kb2N1bWVudC5ib2R5KS5hcHBlbmRDaGlsZChzZWxmLmNhbGVuZGFyQ29udGFpbmVyKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlRGF5KGNsYXNzTmFtZSwgZGF0ZSwgZGF5TnVtYmVyLCBpKSB7XG4gICAgICAgIGNvbnN0IGRhdGVJc0VuYWJsZWQgPSBpc0VuYWJsZWQoZGF0ZSwgdHJ1ZSksIGRheUVsZW1lbnQgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci1kYXkgXCIgKyBjbGFzc05hbWUsIGRhdGUuZ2V0RGF0ZSgpLnRvU3RyaW5nKCkpO1xuICAgICAgICBkYXlFbGVtZW50LmRhdGVPYmogPSBkYXRlO1xuICAgICAgICBkYXlFbGVtZW50LiRpID0gaTtcbiAgICAgICAgZGF5RWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIsIHNlbGYuZm9ybWF0RGF0ZShkYXRlLCBzZWxmLmNvbmZpZy5hcmlhRGF0ZUZvcm1hdCkpO1xuICAgICAgICBpZiAoY2xhc3NOYW1lLmluZGV4T2YoXCJoaWRkZW5cIikgPT09IC0xICYmXG4gICAgICAgICAgICBjb21wYXJlRGF0ZXMoZGF0ZSwgc2VsZi5ub3cpID09PSAwKSB7XG4gICAgICAgICAgICBzZWxmLnRvZGF5RGF0ZUVsZW0gPSBkYXlFbGVtZW50O1xuICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwidG9kYXlcIik7XG4gICAgICAgICAgICBkYXlFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtY3VycmVudFwiLCBcImRhdGVcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRhdGVJc0VuYWJsZWQpIHtcbiAgICAgICAgICAgIGRheUVsZW1lbnQudGFiSW5kZXggPSAtMTtcbiAgICAgICAgICAgIGlmIChpc0RhdGVTZWxlY3RlZChkYXRlKSkge1xuICAgICAgICAgICAgICAgIGRheUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlRWxlbSA9IGRheUVsZW1lbnQ7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIikge1xuICAgICAgICAgICAgICAgICAgICB0b2dnbGVDbGFzcyhkYXlFbGVtZW50LCBcInN0YXJ0UmFuZ2VcIiwgc2VsZi5zZWxlY3RlZERhdGVzWzBdICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wYXJlRGF0ZXMoZGF0ZSwgc2VsZi5zZWxlY3RlZERhdGVzWzBdLCB0cnVlKSA9PT0gMCk7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUNsYXNzKGRheUVsZW1lbnQsIFwiZW5kUmFuZ2VcIiwgc2VsZi5zZWxlY3RlZERhdGVzWzFdICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wYXJlRGF0ZXMoZGF0ZSwgc2VsZi5zZWxlY3RlZERhdGVzWzFdLCB0cnVlKSA9PT0gMCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjbGFzc05hbWUgPT09IFwibmV4dE1vbnRoRGF5XCIpXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJpblJhbmdlXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGRheUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImZsYXRwaWNrci1kaXNhYmxlZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKSB7XG4gICAgICAgICAgICBpZiAoaXNEYXRlSW5SYW5nZShkYXRlKSAmJiAhaXNEYXRlU2VsZWN0ZWQoZGF0ZSkpXG4gICAgICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiaW5SYW5nZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi53ZWVrTnVtYmVycyAmJlxuICAgICAgICAgICAgc2VsZi5jb25maWcuc2hvd01vbnRocyA9PT0gMSAmJlxuICAgICAgICAgICAgY2xhc3NOYW1lICE9PSBcInByZXZNb250aERheVwiICYmXG4gICAgICAgICAgICBkYXlOdW1iZXIgJSA3ID09PSAxKSB7XG4gICAgICAgICAgICBzZWxmLndlZWtOdW1iZXJzLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBcIjxzcGFuIGNsYXNzPSdmbGF0cGlja3ItZGF5Jz5cIiArIHNlbGYuY29uZmlnLmdldFdlZWsoZGF0ZSkgKyBcIjwvc3Bhbj5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25EYXlDcmVhdGVcIiwgZGF5RWxlbWVudCk7XG4gICAgICAgIHJldHVybiBkYXlFbGVtZW50O1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb2N1c09uRGF5RWxlbSh0YXJnZXROb2RlKSB7XG4gICAgICAgIHRhcmdldE5vZGUuZm9jdXMoKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIilcbiAgICAgICAgICAgIG9uTW91c2VPdmVyKHRhcmdldE5vZGUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRGaXJzdEF2YWlsYWJsZURheShkZWx0YSkge1xuICAgICAgICBjb25zdCBzdGFydE1vbnRoID0gZGVsdGEgPiAwID8gMCA6IHNlbGYuY29uZmlnLnNob3dNb250aHMgLSAxO1xuICAgICAgICBjb25zdCBlbmRNb250aCA9IGRlbHRhID4gMCA/IHNlbGYuY29uZmlnLnNob3dNb250aHMgOiAtMTtcbiAgICAgICAgZm9yIChsZXQgbSA9IHN0YXJ0TW9udGg7IG0gIT0gZW5kTW9udGg7IG0gKz0gZGVsdGEpIHtcbiAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gc2VsZi5kYXlzQ29udGFpbmVyLmNoaWxkcmVuW21dO1xuICAgICAgICAgICAgY29uc3Qgc3RhcnRJbmRleCA9IGRlbHRhID4gMCA/IDAgOiBtb250aC5jaGlsZHJlbi5sZW5ndGggLSAxO1xuICAgICAgICAgICAgY29uc3QgZW5kSW5kZXggPSBkZWx0YSA+IDAgPyBtb250aC5jaGlsZHJlbi5sZW5ndGggOiAtMTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSBzdGFydEluZGV4OyBpICE9IGVuZEluZGV4OyBpICs9IGRlbHRhKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYyA9IG1vbnRoLmNoaWxkcmVuW2ldO1xuICAgICAgICAgICAgICAgIGlmIChjLmNsYXNzTmFtZS5pbmRleE9mKFwiaGlkZGVuXCIpID09PSAtMSAmJiBpc0VuYWJsZWQoYy5kYXRlT2JqKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0TmV4dEF2YWlsYWJsZURheShjdXJyZW50LCBkZWx0YSkge1xuICAgICAgICBjb25zdCBnaXZlbk1vbnRoID0gY3VycmVudC5jbGFzc05hbWUuaW5kZXhPZihcIk1vbnRoXCIpID09PSAtMVxuICAgICAgICAgICAgPyBjdXJyZW50LmRhdGVPYmouZ2V0TW9udGgoKVxuICAgICAgICAgICAgOiBzZWxmLmN1cnJlbnRNb250aDtcbiAgICAgICAgY29uc3QgZW5kTW9udGggPSBkZWx0YSA+IDAgPyBzZWxmLmNvbmZpZy5zaG93TW9udGhzIDogLTE7XG4gICAgICAgIGNvbnN0IGxvb3BEZWx0YSA9IGRlbHRhID4gMCA/IDEgOiAtMTtcbiAgICAgICAgZm9yIChsZXQgbSA9IGdpdmVuTW9udGggLSBzZWxmLmN1cnJlbnRNb250aDsgbSAhPSBlbmRNb250aDsgbSArPSBsb29wRGVsdGEpIHtcbiAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gc2VsZi5kYXlzQ29udGFpbmVyLmNoaWxkcmVuW21dO1xuICAgICAgICAgICAgY29uc3Qgc3RhcnRJbmRleCA9IGdpdmVuTW9udGggLSBzZWxmLmN1cnJlbnRNb250aCA9PT0gbVxuICAgICAgICAgICAgICAgID8gY3VycmVudC4kaSArIGRlbHRhXG4gICAgICAgICAgICAgICAgOiBkZWx0YSA8IDBcbiAgICAgICAgICAgICAgICAgICAgPyBtb250aC5jaGlsZHJlbi5sZW5ndGggLSAxXG4gICAgICAgICAgICAgICAgICAgIDogMDtcbiAgICAgICAgICAgIGNvbnN0IG51bU1vbnRoRGF5cyA9IG1vbnRoLmNoaWxkcmVuLmxlbmd0aDtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSBzdGFydEluZGV4OyBpID49IDAgJiYgaSA8IG51bU1vbnRoRGF5cyAmJiBpICE9IChkZWx0YSA+IDAgPyBudW1Nb250aERheXMgOiAtMSk7IGkgKz0gbG9vcERlbHRhKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYyA9IG1vbnRoLmNoaWxkcmVuW2ldO1xuICAgICAgICAgICAgICAgIGlmIChjLmNsYXNzTmFtZS5pbmRleE9mKFwiaGlkZGVuXCIpID09PSAtMSAmJlxuICAgICAgICAgICAgICAgICAgICBpc0VuYWJsZWQoYy5kYXRlT2JqKSAmJlxuICAgICAgICAgICAgICAgICAgICBNYXRoLmFicyhjdXJyZW50LiRpIC0gaSkgPj0gTWF0aC5hYnMoZGVsdGEpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZm9jdXNPbkRheUVsZW0oYyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5jaGFuZ2VNb250aChsb29wRGVsdGEpO1xuICAgICAgICBmb2N1c09uRGF5KGdldEZpcnN0QXZhaWxhYmxlRGF5KGxvb3BEZWx0YSksIDApO1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb2N1c09uRGF5KGN1cnJlbnQsIG9mZnNldCkge1xuICAgICAgICBjb25zdCBkYXlGb2N1c2VkID0gaXNJblZpZXcoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCB8fCBkb2N1bWVudC5ib2R5KTtcbiAgICAgICAgY29uc3Qgc3RhcnRFbGVtID0gY3VycmVudCAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICA/IGN1cnJlbnRcbiAgICAgICAgICAgIDogZGF5Rm9jdXNlZFxuICAgICAgICAgICAgICAgID8gZG9jdW1lbnQuYWN0aXZlRWxlbWVudFxuICAgICAgICAgICAgICAgIDogc2VsZi5zZWxlY3RlZERhdGVFbGVtICE9PSB1bmRlZmluZWQgJiYgaXNJblZpZXcoc2VsZi5zZWxlY3RlZERhdGVFbGVtKVxuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuc2VsZWN0ZWREYXRlRWxlbVxuICAgICAgICAgICAgICAgICAgICA6IHNlbGYudG9kYXlEYXRlRWxlbSAhPT0gdW5kZWZpbmVkICYmIGlzSW5WaWV3KHNlbGYudG9kYXlEYXRlRWxlbSlcbiAgICAgICAgICAgICAgICAgICAgICAgID8gc2VsZi50b2RheURhdGVFbGVtXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGdldEZpcnN0QXZhaWxhYmxlRGF5KG9mZnNldCA+IDAgPyAxIDogLTEpO1xuICAgICAgICBpZiAoc3RhcnRFbGVtID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuX2lucHV0LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIWRheUZvY3VzZWQpIHtcbiAgICAgICAgICAgIGZvY3VzT25EYXlFbGVtKHN0YXJ0RWxlbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBnZXROZXh0QXZhaWxhYmxlRGF5KHN0YXJ0RWxlbSwgb2Zmc2V0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZE1vbnRoRGF5cyh5ZWFyLCBtb250aCkge1xuICAgICAgICBjb25zdCBmaXJzdE9mTW9udGggPSAobmV3IERhdGUoeWVhciwgbW9udGgsIDEpLmdldERheSgpIC0gc2VsZi5sMTBuLmZpcnN0RGF5T2ZXZWVrICsgNykgJSA3O1xuICAgICAgICBjb25zdCBwcmV2TW9udGhEYXlzID0gc2VsZi51dGlscy5nZXREYXlzSW5Nb250aCgobW9udGggLSAxICsgMTIpICUgMTIsIHllYXIpO1xuICAgICAgICBjb25zdCBkYXlzSW5Nb250aCA9IHNlbGYudXRpbHMuZ2V0RGF5c0luTW9udGgobW9udGgsIHllYXIpLCBkYXlzID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSwgaXNNdWx0aU1vbnRoID0gc2VsZi5jb25maWcuc2hvd01vbnRocyA+IDEsIHByZXZNb250aERheUNsYXNzID0gaXNNdWx0aU1vbnRoID8gXCJwcmV2TW9udGhEYXkgaGlkZGVuXCIgOiBcInByZXZNb250aERheVwiLCBuZXh0TW9udGhEYXlDbGFzcyA9IGlzTXVsdGlNb250aCA/IFwibmV4dE1vbnRoRGF5IGhpZGRlblwiIDogXCJuZXh0TW9udGhEYXlcIjtcbiAgICAgICAgbGV0IGRheU51bWJlciA9IHByZXZNb250aERheXMgKyAxIC0gZmlyc3RPZk1vbnRoLCBkYXlJbmRleCA9IDA7XG4gICAgICAgIGZvciAoOyBkYXlOdW1iZXIgPD0gcHJldk1vbnRoRGF5czsgZGF5TnVtYmVyKyssIGRheUluZGV4KyspIHtcbiAgICAgICAgICAgIGRheXMuYXBwZW5kQ2hpbGQoY3JlYXRlRGF5KHByZXZNb250aERheUNsYXNzLCBuZXcgRGF0ZSh5ZWFyLCBtb250aCAtIDEsIGRheU51bWJlciksIGRheU51bWJlciwgZGF5SW5kZXgpKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGRheU51bWJlciA9IDE7IGRheU51bWJlciA8PSBkYXlzSW5Nb250aDsgZGF5TnVtYmVyKyssIGRheUluZGV4KyspIHtcbiAgICAgICAgICAgIGRheXMuYXBwZW5kQ2hpbGQoY3JlYXRlRGF5KFwiXCIsIG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXlOdW1iZXIpLCBkYXlOdW1iZXIsIGRheUluZGV4KSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgZGF5TnVtID0gZGF5c0luTW9udGggKyAxOyBkYXlOdW0gPD0gNDIgLSBmaXJzdE9mTW9udGggJiZcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5zaG93TW9udGhzID09PSAxIHx8IGRheUluZGV4ICUgNyAhPT0gMCk7IGRheU51bSsrLCBkYXlJbmRleCsrKSB7XG4gICAgICAgICAgICBkYXlzLmFwcGVuZENoaWxkKGNyZWF0ZURheShuZXh0TW9udGhEYXlDbGFzcywgbmV3IERhdGUoeWVhciwgbW9udGggKyAxLCBkYXlOdW0gJSBkYXlzSW5Nb250aCksIGRheU51bSwgZGF5SW5kZXgpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkYXlDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZGF5Q29udGFpbmVyXCIpO1xuICAgICAgICBkYXlDb250YWluZXIuYXBwZW5kQ2hpbGQoZGF5cyk7XG4gICAgICAgIHJldHVybiBkYXlDb250YWluZXI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkRGF5cygpIHtcbiAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY2xlYXJOb2RlKHNlbGYuZGF5c0NvbnRhaW5lcik7XG4gICAgICAgIGlmIChzZWxmLndlZWtOdW1iZXJzKVxuICAgICAgICAgICAgY2xlYXJOb2RlKHNlbGYud2Vla051bWJlcnMpO1xuICAgICAgICBjb25zdCBmcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGYuY29uZmlnLnNob3dNb250aHM7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgZCA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIHNlbGYuY3VycmVudE1vbnRoLCAxKTtcbiAgICAgICAgICAgIGQuc2V0TW9udGgoc2VsZi5jdXJyZW50TW9udGggKyBpKTtcbiAgICAgICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQoYnVpbGRNb250aERheXMoZC5nZXRGdWxsWWVhcigpLCBkLmdldE1vbnRoKCkpKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmRheXNDb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZyk7XG4gICAgICAgIHNlbGYuZGF5cyA9IHNlbGYuZGF5c0NvbnRhaW5lci5maXJzdENoaWxkO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiICYmIHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIG9uTW91c2VPdmVyKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRNb250aFN3aXRjaCgpIHtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxIHx8XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tb250aFNlbGVjdG9yVHlwZSAhPT0gXCJkcm9wZG93blwiKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBzaG91bGRCdWlsZE1vbnRoID0gZnVuY3Rpb24gKG1vbnRoKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcubWluRGF0ZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpICYmXG4gICAgICAgICAgICAgICAgbW9udGggPCBzZWxmLmNvbmZpZy5taW5EYXRlLmdldE1vbnRoKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gIShzZWxmLmNvbmZpZy5tYXhEYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkgJiZcbiAgICAgICAgICAgICAgICBtb250aCA+IHNlbGYuY29uZmlnLm1heERhdGUuZ2V0TW9udGgoKSk7XG4gICAgICAgIH07XG4gICAgICAgIHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIudGFiSW5kZXggPSAtMTtcbiAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEyOyBpKyspIHtcbiAgICAgICAgICAgIGlmICghc2hvdWxkQnVpbGRNb250aChpKSlcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCBcImZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoXCIpO1xuICAgICAgICAgICAgbW9udGgudmFsdWUgPSBuZXcgRGF0ZShzZWxmLmN1cnJlbnRZZWFyLCBpKS5nZXRNb250aCgpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBtb250aC50ZXh0Q29udGVudCA9IG1vbnRoVG9TdHIoaSwgc2VsZi5jb25maWcuc2hvcnRoYW5kQ3VycmVudE1vbnRoLCBzZWxmLmwxMG4pO1xuICAgICAgICAgICAgbW9udGgudGFiSW5kZXggPSAtMTtcbiAgICAgICAgICAgIGlmIChzZWxmLmN1cnJlbnRNb250aCA9PT0gaSkge1xuICAgICAgICAgICAgICAgIG1vbnRoLnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIuYXBwZW5kQ2hpbGQobW9udGgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGgoKSB7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItbW9udGhcIik7XG4gICAgICAgIGNvbnN0IG1vbnRoTmF2RnJhZ21lbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICBsZXQgbW9udGhFbGVtZW50O1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuc2hvd01vbnRocyA+IDEgfHxcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vbnRoU2VsZWN0b3JUeXBlID09PSBcInN0YXRpY1wiKSB7XG4gICAgICAgICAgICBtb250aEVsZW1lbnQgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImN1ci1tb250aFwiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwic2VsZWN0XCIsIFwiZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGhzXCIpO1xuICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIsIHNlbGYubDEwbi5tb250aEFyaWFMYWJlbCk7XG4gICAgICAgICAgICBiaW5kKHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIsIFwiY2hhbmdlXCIsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRNb250aCA9IHBhcnNlSW50KHRhcmdldC52YWx1ZSwgMTApO1xuICAgICAgICAgICAgICAgIHNlbGYuY2hhbmdlTW9udGgoc2VsZWN0ZWRNb250aCAtIHNlbGYuY3VycmVudE1vbnRoKTtcbiAgICAgICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk1vbnRoQ2hhbmdlXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgICAgICBtb250aEVsZW1lbnQgPSBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHllYXJJbnB1dCA9IGNyZWF0ZU51bWJlcklucHV0KFwiY3VyLXllYXJcIiwgeyB0YWJpbmRleDogXCItMVwiIH0pO1xuICAgICAgICBjb25zdCB5ZWFyRWxlbWVudCA9IHllYXJJbnB1dC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImlucHV0XCIpWzBdO1xuICAgICAgICB5ZWFyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIsIHNlbGYubDEwbi55ZWFyQXJpYUxhYmVsKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1pbkRhdGUpIHtcbiAgICAgICAgICAgIHllYXJFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1pblwiLCBzZWxmLmNvbmZpZy5taW5EYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1heERhdGUpIHtcbiAgICAgICAgICAgIHllYXJFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1heFwiLCBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICB5ZWFyRWxlbWVudC5kaXNhYmxlZCA9XG4gICAgICAgICAgICAgICAgISFzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSA9PT0gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGN1cnJlbnRNb250aCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItY3VycmVudC1tb250aFwiKTtcbiAgICAgICAgY3VycmVudE1vbnRoLmFwcGVuZENoaWxkKG1vbnRoRWxlbWVudCk7XG4gICAgICAgIGN1cnJlbnRNb250aC5hcHBlbmRDaGlsZCh5ZWFySW5wdXQpO1xuICAgICAgICBtb250aE5hdkZyYWdtZW50LmFwcGVuZENoaWxkKGN1cnJlbnRNb250aCk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChtb250aE5hdkZyYWdtZW50KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvbnRhaW5lcixcbiAgICAgICAgICAgIHllYXJFbGVtZW50LFxuICAgICAgICAgICAgbW9udGhFbGVtZW50LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZE1vbnRocygpIHtcbiAgICAgICAgY2xlYXJOb2RlKHNlbGYubW9udGhOYXYpO1xuICAgICAgICBzZWxmLm1vbnRoTmF2LmFwcGVuZENoaWxkKHNlbGYucHJldk1vbnRoTmF2KTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnNob3dNb250aHMpIHtcbiAgICAgICAgICAgIHNlbGYueWVhckVsZW1lbnRzID0gW107XG4gICAgICAgICAgICBzZWxmLm1vbnRoRWxlbWVudHMgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBtID0gc2VsZi5jb25maWcuc2hvd01vbnRoczsgbS0tOykge1xuICAgICAgICAgICAgY29uc3QgbW9udGggPSBidWlsZE1vbnRoKCk7XG4gICAgICAgICAgICBzZWxmLnllYXJFbGVtZW50cy5wdXNoKG1vbnRoLnllYXJFbGVtZW50KTtcbiAgICAgICAgICAgIHNlbGYubW9udGhFbGVtZW50cy5wdXNoKG1vbnRoLm1vbnRoRWxlbWVudCk7XG4gICAgICAgICAgICBzZWxmLm1vbnRoTmF2LmFwcGVuZENoaWxkKG1vbnRoLmNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5tb250aE5hdi5hcHBlbmRDaGlsZChzZWxmLm5leHRNb250aE5hdik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhOYXYoKSB7XG4gICAgICAgIHNlbGYubW9udGhOYXYgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLW1vbnRoc1wiKTtcbiAgICAgICAgc2VsZi55ZWFyRWxlbWVudHMgPSBbXTtcbiAgICAgICAgc2VsZi5tb250aEVsZW1lbnRzID0gW107XG4gICAgICAgIHNlbGYucHJldk1vbnRoTmF2ID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3ItcHJldi1tb250aFwiKTtcbiAgICAgICAgc2VsZi5wcmV2TW9udGhOYXYuaW5uZXJIVE1MID0gc2VsZi5jb25maWcucHJldkFycm93O1xuICAgICAgICBzZWxmLm5leHRNb250aE5hdiA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLW5leHQtbW9udGhcIik7XG4gICAgICAgIHNlbGYubmV4dE1vbnRoTmF2LmlubmVySFRNTCA9IHNlbGYuY29uZmlnLm5leHRBcnJvdztcbiAgICAgICAgYnVpbGRNb250aHMoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIFwiX2hpZGVQcmV2TW9udGhBcnJvd1wiLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHNlbGYuX19oaWRlUHJldk1vbnRoQXJyb3csXG4gICAgICAgICAgICBzZXQoYm9vbCkge1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLl9faGlkZVByZXZNb250aEFycm93ICE9PSBib29sKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYucHJldk1vbnRoTmF2LCBcImZsYXRwaWNrci1kaXNhYmxlZFwiLCBib29sKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fX2hpZGVQcmV2TW9udGhBcnJvdyA9IGJvb2w7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLCBcIl9oaWRlTmV4dE1vbnRoQXJyb3dcIiwge1xuICAgICAgICAgICAgZ2V0OiAoKSA9PiBzZWxmLl9faGlkZU5leHRNb250aEFycm93LFxuICAgICAgICAgICAgc2V0KGJvb2wpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5fX2hpZGVOZXh0TW9udGhBcnJvdyAhPT0gYm9vbCkge1xuICAgICAgICAgICAgICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLm5leHRNb250aE5hdiwgXCJmbGF0cGlja3ItZGlzYWJsZWRcIiwgYm9vbCk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX19oaWRlTmV4dE1vbnRoQXJyb3cgPSBib29sO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudCA9IHNlbGYueWVhckVsZW1lbnRzWzBdO1xuICAgICAgICB1cGRhdGVOYXZpZ2F0aW9uQ3VycmVudE1vbnRoKCk7XG4gICAgICAgIHJldHVybiBzZWxmLm1vbnRoTmF2O1xuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZFRpbWUoKSB7XG4gICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImhhc1RpbWVcIik7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5ub0NhbGVuZGFyKVxuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwibm9DYWxlbmRhclwiKTtcbiAgICAgICAgY29uc3QgZGVmYXVsdHMgPSBnZXREZWZhdWx0SG91cnMoc2VsZi5jb25maWcpO1xuICAgICAgICBzZWxmLnRpbWVDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXRpbWVcIik7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lci50YWJJbmRleCA9IC0xO1xuICAgICAgICBjb25zdCBzZXBhcmF0b3IgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci10aW1lLXNlcGFyYXRvclwiLCBcIjpcIik7XG4gICAgICAgIGNvbnN0IGhvdXJJbnB1dCA9IGNyZWF0ZU51bWJlcklucHV0KFwiZmxhdHBpY2tyLWhvdXJcIiwge1xuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHNlbGYubDEwbi5ob3VyQXJpYUxhYmVsLFxuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudCA9IGhvdXJJbnB1dC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImlucHV0XCIpWzBdO1xuICAgICAgICBjb25zdCBtaW51dGVJbnB1dCA9IGNyZWF0ZU51bWJlcklucHV0KFwiZmxhdHBpY2tyLW1pbnV0ZVwiLCB7XG4gICAgICAgICAgICBcImFyaWEtbGFiZWxcIjogc2VsZi5sMTBuLm1pbnV0ZUFyaWFMYWJlbCxcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYubWludXRlRWxlbWVudCA9IG1pbnV0ZUlucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgIHNlbGYuaG91ckVsZW1lbnQudGFiSW5kZXggPSBzZWxmLm1pbnV0ZUVsZW1lbnQudGFiSW5kZXggPSAtMTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC52YWx1ZSA9IHBhZChzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9ialxuICAgICAgICAgICAgPyBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iai5nZXRIb3VycygpXG4gICAgICAgICAgICA6IHNlbGYuY29uZmlnLnRpbWVfMjRoclxuICAgICAgICAgICAgICAgID8gZGVmYXVsdHMuaG91cnNcbiAgICAgICAgICAgICAgICA6IG1pbGl0YXJ5MmFtcG0oZGVmYXVsdHMuaG91cnMpKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnZhbHVlID0gcGFkKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqXG4gICAgICAgICAgICA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLmdldE1pbnV0ZXMoKVxuICAgICAgICAgICAgOiBkZWZhdWx0cy5taW51dGVzKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJzdGVwXCIsIHNlbGYuY29uZmlnLmhvdXJJbmNyZW1lbnQudG9TdHJpbmcoKSk7XG4gICAgICAgIHNlbGYubWludXRlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJzdGVwXCIsIHNlbGYuY29uZmlnLm1pbnV0ZUluY3JlbWVudC50b1N0cmluZygpKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtaW5cIiwgc2VsZi5jb25maWcudGltZV8yNGhyID8gXCIwXCIgOiBcIjFcIik7XG4gICAgICAgIHNlbGYuaG91ckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4XCIsIHNlbGYuY29uZmlnLnRpbWVfMjRociA/IFwiMjNcIiA6IFwiMTJcIik7XG4gICAgICAgIHNlbGYuaG91ckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsIFwiMlwiKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1pblwiLCBcIjBcIik7XG4gICAgICAgIHNlbGYubWludXRlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhcIiwgXCI1OVwiKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1heGxlbmd0aFwiLCBcIjJcIik7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5hcHBlbmRDaGlsZChob3VySW5wdXQpO1xuICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2VwYXJhdG9yKTtcbiAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKG1pbnV0ZUlucHV0KTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnRpbWVfMjRocilcbiAgICAgICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidGltZTI0aHJcIik7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5lbmFibGVTZWNvbmRzKSB7XG4gICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImhhc1NlY29uZHNcIik7XG4gICAgICAgICAgICBjb25zdCBzZWNvbmRJbnB1dCA9IGNyZWF0ZU51bWJlcklucHV0KFwiZmxhdHBpY2tyLXNlY29uZFwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudCA9IHNlY29uZElucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQudmFsdWUgPSBwYWQoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmpcbiAgICAgICAgICAgICAgICA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLmdldFNlY29uZHMoKVxuICAgICAgICAgICAgICAgIDogZGVmYXVsdHMuc2Vjb25kcyk7XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3RlcFwiLCBzZWxmLm1pbnV0ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwic3RlcFwiKSk7XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIFwiMFwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhcIiwgXCI1OVwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyXCIpO1xuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLXRpbWUtc2VwYXJhdG9yXCIsIFwiOlwiKSk7XG4gICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2Vjb25kSW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsZi5jb25maWcudGltZV8yNGhyKSB7XG4gICAgICAgICAgICBzZWxmLmFtUE0gPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci1hbS1wbVwiLCBzZWxmLmwxMG4uYW1QTVtpbnQoKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqXG4gICAgICAgICAgICAgICAgPyBzZWxmLmhvdXJFbGVtZW50LnZhbHVlXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5kZWZhdWx0SG91cikgPiAxMSldKTtcbiAgICAgICAgICAgIHNlbGYuYW1QTS50aXRsZSA9IHNlbGYubDEwbi50b2dnbGVUaXRsZTtcbiAgICAgICAgICAgIHNlbGYuYW1QTS50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKHNlbGYuYW1QTSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGYudGltZUNvbnRhaW5lcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRXZWVrZGF5cygpIHtcbiAgICAgICAgaWYgKCFzZWxmLndlZWtkYXlDb250YWluZXIpXG4gICAgICAgICAgICBzZWxmLndlZWtkYXlDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWtkYXlzXCIpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICBjbGVhck5vZGUoc2VsZi53ZWVrZGF5Q29udGFpbmVyKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IHNlbGYuY29uZmlnLnNob3dNb250aHM7IGktLTspIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3Itd2Vla2RheWNvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIHNlbGYud2Vla2RheUNvbnRhaW5lci5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZVdlZWtkYXlzKCk7XG4gICAgICAgIHJldHVybiBzZWxmLndlZWtkYXlDb250YWluZXI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZVdlZWtkYXlzKCkge1xuICAgICAgICBpZiAoIXNlbGYud2Vla2RheUNvbnRhaW5lcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZpcnN0RGF5T2ZXZWVrID0gc2VsZi5sMTBuLmZpcnN0RGF5T2ZXZWVrO1xuICAgICAgICBsZXQgd2Vla2RheXMgPSBbLi4uc2VsZi5sMTBuLndlZWtkYXlzLnNob3J0aGFuZF07XG4gICAgICAgIGlmIChmaXJzdERheU9mV2VlayA+IDAgJiYgZmlyc3REYXlPZldlZWsgPCB3ZWVrZGF5cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHdlZWtkYXlzID0gW1xuICAgICAgICAgICAgICAgIC4uLndlZWtkYXlzLnNwbGljZShmaXJzdERheU9mV2Vlaywgd2Vla2RheXMubGVuZ3RoKSxcbiAgICAgICAgICAgICAgICAuLi53ZWVrZGF5cy5zcGxpY2UoMCwgZmlyc3REYXlPZldlZWspLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gc2VsZi5jb25maWcuc2hvd01vbnRoczsgaS0tOykge1xuICAgICAgICAgICAgc2VsZi53ZWVrZGF5Q29udGFpbmVyLmNoaWxkcmVuW2ldLmlubmVySFRNTCA9IGBcbiAgICAgIDxzcGFuIGNsYXNzPSdmbGF0cGlja3Itd2Vla2RheSc+XG4gICAgICAgICR7d2Vla2RheXMuam9pbihcIjwvc3Bhbj48c3BhbiBjbGFzcz0nZmxhdHBpY2tyLXdlZWtkYXknPlwiKX1cbiAgICAgIDwvc3Bhbj5cbiAgICAgIGA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRXZWVrcygpIHtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiaGFzV2Vla3NcIik7XG4gICAgICAgIGNvbnN0IHdlZWtXcmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci13ZWVrd3JhcHBlclwiKTtcbiAgICAgICAgd2Vla1dyYXBwZXIuYXBwZW5kQ2hpbGQoY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3Itd2Vla2RheVwiLCBzZWxmLmwxMG4ud2Vla0FiYnJldmlhdGlvbikpO1xuICAgICAgICBjb25zdCB3ZWVrTnVtYmVycyA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3Itd2Vla3NcIik7XG4gICAgICAgIHdlZWtXcmFwcGVyLmFwcGVuZENoaWxkKHdlZWtOdW1iZXJzKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHdlZWtXcmFwcGVyLFxuICAgICAgICAgICAgd2Vla051bWJlcnMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNoYW5nZU1vbnRoKHZhbHVlLCBpc09mZnNldCA9IHRydWUpIHtcbiAgICAgICAgY29uc3QgZGVsdGEgPSBpc09mZnNldCA/IHZhbHVlIDogdmFsdWUgLSBzZWxmLmN1cnJlbnRNb250aDtcbiAgICAgICAgaWYgKChkZWx0YSA8IDAgJiYgc2VsZi5faGlkZVByZXZNb250aEFycm93ID09PSB0cnVlKSB8fFxuICAgICAgICAgICAgKGRlbHRhID4gMCAmJiBzZWxmLl9oaWRlTmV4dE1vbnRoQXJyb3cgPT09IHRydWUpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZWxmLmN1cnJlbnRNb250aCArPSBkZWx0YTtcbiAgICAgICAgaWYgKHNlbGYuY3VycmVudE1vbnRoIDwgMCB8fCBzZWxmLmN1cnJlbnRNb250aCA+IDExKSB7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyICs9IHNlbGYuY3VycmVudE1vbnRoID4gMTEgPyAxIDogLTE7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IChzZWxmLmN1cnJlbnRNb250aCArIDEyKSAlIDEyO1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25ZZWFyQ2hhbmdlXCIpO1xuICAgICAgICAgICAgYnVpbGRNb250aFN3aXRjaCgpO1xuICAgICAgICB9XG4gICAgICAgIGJ1aWxkRGF5cygpO1xuICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk1vbnRoQ2hhbmdlXCIpO1xuICAgICAgICB1cGRhdGVOYXZpZ2F0aW9uQ3VycmVudE1vbnRoKCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNsZWFyKHRyaWdnZXJDaGFuZ2VFdmVudCA9IHRydWUsIHRvSW5pdGlhbCA9IHRydWUpIHtcbiAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgIGlmIChzZWxmLmFsdElucHV0ICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgaWYgKHNlbGYubW9iaWxlSW5wdXQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSBbXTtcbiAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmICh0b0luaXRpYWwgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXIgPSBzZWxmLl9pbml0aWFsRGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggPSBzZWxmLl9pbml0aWFsRGF0ZS5nZXRNb250aCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5lbmFibGVUaW1lID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zdCB7IGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzIH0gPSBnZXREZWZhdWx0SG91cnMoc2VsZi5jb25maWcpO1xuICAgICAgICAgICAgc2V0SG91cnMoaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMpO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgIGlmICh0cmlnZ2VyQ2hhbmdlRXZlbnQpXG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkNoYW5nZVwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2xvc2UoKSB7XG4gICAgICAgIHNlbGYuaXNPcGVuID0gZmFsc2U7XG4gICAgICAgIGlmICghc2VsZi5pc01vYmlsZSkge1xuICAgICAgICAgICAgaWYgKHNlbGYuY2FsZW5kYXJDb250YWluZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZi5faW5wdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHNlbGYuX2lucHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DbG9zZVwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkRlc3Ryb3lcIik7XG4gICAgICAgIGZvciAobGV0IGkgPSBzZWxmLl9oYW5kbGVycy5sZW5ndGg7IGktLTspIHtcbiAgICAgICAgICAgIHNlbGYuX2hhbmRsZXJzW2ldLnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuX2hhbmRsZXJzID0gW107XG4gICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0KSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5tb2JpbGVJbnB1dC5wYXJlbnROb2RlKVxuICAgICAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzZWxmLm1vYmlsZUlucHV0KTtcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VsZi5jYWxlbmRhckNvbnRhaW5lciAmJiBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5zdGF0aWMgJiYgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgd3JhcHBlciA9IHNlbGYuY2FsZW5kYXJDb250YWluZXIucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICB3cmFwcGVyLmxhc3RDaGlsZCAmJiB3cmFwcGVyLnJlbW92ZUNoaWxkKHdyYXBwZXIubGFzdENoaWxkKTtcbiAgICAgICAgICAgICAgICBpZiAod3JhcHBlci5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICh3cmFwcGVyLmZpcnN0Q2hpbGQpXG4gICAgICAgICAgICAgICAgICAgICAgICB3cmFwcGVyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHdyYXBwZXIuZmlyc3RDaGlsZCwgd3JhcHBlcik7XG4gICAgICAgICAgICAgICAgICAgIHdyYXBwZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh3cmFwcGVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNlbGYuY2FsZW5kYXJDb250YWluZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmFsdElucHV0KSB7XG4gICAgICAgICAgICBzZWxmLmlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICAgICAgICAgIGlmIChzZWxmLmFsdElucHV0LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNlbGYuYWx0SW5wdXQpO1xuICAgICAgICAgICAgZGVsZXRlIHNlbGYuYWx0SW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuaW5wdXQpIHtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQudHlwZSA9IHNlbGYuaW5wdXQuX3R5cGU7XG4gICAgICAgICAgICBzZWxmLmlucHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJmbGF0cGlja3ItaW5wdXRcIik7XG4gICAgICAgICAgICBzZWxmLmlucHV0LnJlbW92ZUF0dHJpYnV0ZShcInJlYWRvbmx5XCIpO1xuICAgICAgICB9XG4gICAgICAgIFtcbiAgICAgICAgICAgIFwiX3Nob3dUaW1lSW5wdXRcIixcbiAgICAgICAgICAgIFwibGF0ZXN0U2VsZWN0ZWREYXRlT2JqXCIsXG4gICAgICAgICAgICBcIl9oaWRlTmV4dE1vbnRoQXJyb3dcIixcbiAgICAgICAgICAgIFwiX2hpZGVQcmV2TW9udGhBcnJvd1wiLFxuICAgICAgICAgICAgXCJfX2hpZGVOZXh0TW9udGhBcnJvd1wiLFxuICAgICAgICAgICAgXCJfX2hpZGVQcmV2TW9udGhBcnJvd1wiLFxuICAgICAgICAgICAgXCJpc01vYmlsZVwiLFxuICAgICAgICAgICAgXCJpc09wZW5cIixcbiAgICAgICAgICAgIFwic2VsZWN0ZWREYXRlRWxlbVwiLFxuICAgICAgICAgICAgXCJtaW5EYXRlSGFzVGltZVwiLFxuICAgICAgICAgICAgXCJtYXhEYXRlSGFzVGltZVwiLFxuICAgICAgICAgICAgXCJkYXlzXCIsXG4gICAgICAgICAgICBcImRheXNDb250YWluZXJcIixcbiAgICAgICAgICAgIFwiX2lucHV0XCIsXG4gICAgICAgICAgICBcIl9wb3NpdGlvbkVsZW1lbnRcIixcbiAgICAgICAgICAgIFwiaW5uZXJDb250YWluZXJcIixcbiAgICAgICAgICAgIFwickNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJtb250aE5hdlwiLFxuICAgICAgICAgICAgXCJ0b2RheURhdGVFbGVtXCIsXG4gICAgICAgICAgICBcImNhbGVuZGFyQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcIndlZWtkYXlDb250YWluZXJcIixcbiAgICAgICAgICAgIFwicHJldk1vbnRoTmF2XCIsXG4gICAgICAgICAgICBcIm5leHRNb250aE5hdlwiLFxuICAgICAgICAgICAgXCJtb250aHNEcm9wZG93bkNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJjdXJyZW50TW9udGhFbGVtZW50XCIsXG4gICAgICAgICAgICBcImN1cnJlbnRZZWFyRWxlbWVudFwiLFxuICAgICAgICAgICAgXCJuYXZpZ2F0aW9uQ3VycmVudE1vbnRoXCIsXG4gICAgICAgICAgICBcInNlbGVjdGVkRGF0ZUVsZW1cIixcbiAgICAgICAgICAgIFwiY29uZmlnXCIsXG4gICAgICAgIF0uZm9yRWFjaCgoaykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBkZWxldGUgc2VsZltrXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChfKSB7IH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGlzQ2FsZW5kYXJFbGVtKGVsZW0pIHtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFwcGVuZFRvICYmIHNlbGYuY29uZmlnLmFwcGVuZFRvLmNvbnRhaW5zKGVsZW0pKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIHJldHVybiBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNvbnRhaW5zKGVsZW0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkb2N1bWVudENsaWNrKGUpIHtcbiAgICAgICAgaWYgKHNlbGYuaXNPcGVuICYmICFzZWxmLmNvbmZpZy5pbmxpbmUpIHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgICAgICBjb25zdCBpc0NhbGVuZGFyRWxlbWVudCA9IGlzQ2FsZW5kYXJFbGVtKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgICAgIGNvbnN0IGlzSW5wdXQgPSBldmVudFRhcmdldCA9PT0gc2VsZi5pbnB1dCB8fFxuICAgICAgICAgICAgICAgIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFsdElucHV0IHx8XG4gICAgICAgICAgICAgICAgc2VsZi5lbGVtZW50LmNvbnRhaW5zKGV2ZW50VGFyZ2V0KSB8fFxuICAgICAgICAgICAgICAgIChlLnBhdGggJiZcbiAgICAgICAgICAgICAgICAgICAgZS5wYXRoLmluZGV4T2YgJiZcbiAgICAgICAgICAgICAgICAgICAgKH5lLnBhdGguaW5kZXhPZihzZWxmLmlucHV0KSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgfmUucGF0aC5pbmRleE9mKHNlbGYuYWx0SW5wdXQpKSk7XG4gICAgICAgICAgICBjb25zdCBsb3N0Rm9jdXMgPSBlLnR5cGUgPT09IFwiYmx1clwiXG4gICAgICAgICAgICAgICAgPyBpc0lucHV0ICYmXG4gICAgICAgICAgICAgICAgICAgIGUucmVsYXRlZFRhcmdldCAmJlxuICAgICAgICAgICAgICAgICAgICAhaXNDYWxlbmRhckVsZW0oZS5yZWxhdGVkVGFyZ2V0KVxuICAgICAgICAgICAgICAgIDogIWlzSW5wdXQgJiZcbiAgICAgICAgICAgICAgICAgICAgIWlzQ2FsZW5kYXJFbGVtZW50ICYmXG4gICAgICAgICAgICAgICAgICAgICFpc0NhbGVuZGFyRWxlbShlLnJlbGF0ZWRUYXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgaXNJZ25vcmVkID0gIXNlbGYuY29uZmlnLmlnbm9yZWRGb2N1c0VsZW1lbnRzLnNvbWUoKGVsZW0pID0+IGVsZW0uY29udGFpbnMoZXZlbnRUYXJnZXQpKTtcbiAgICAgICAgICAgIGlmIChsb3N0Rm9jdXMgJiYgaXNJZ25vcmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYudGltZUNvbnRhaW5lciAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYubWludXRlRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmlucHV0LnZhbHVlICE9PSBcIlwiICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQudmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaW1lKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNlbGYuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jb25maWcgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhcihmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNoYW5nZVllYXIobmV3WWVhcikge1xuICAgICAgICBpZiAoIW5ld1llYXIgfHxcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5taW5EYXRlICYmIG5ld1llYXIgPCBzZWxmLmNvbmZpZy5taW5EYXRlLmdldEZ1bGxZZWFyKCkpIHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcubWF4RGF0ZSAmJiBuZXdZZWFyID4gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgbmV3WWVhck51bSA9IG5ld1llYXIsIGlzTmV3WWVhciA9IHNlbGYuY3VycmVudFllYXIgIT09IG5ld1llYXJOdW07XG4gICAgICAgIHNlbGYuY3VycmVudFllYXIgPSBuZXdZZWFyTnVtIHx8IHNlbGYuY3VycmVudFllYXI7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tYXhEYXRlICYmXG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkpIHtcbiAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0gTWF0aC5taW4oc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNb250aCgpLCBzZWxmLmN1cnJlbnRNb250aCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpKSB7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IE1hdGgubWF4KHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0TW9udGgoKSwgc2VsZi5jdXJyZW50TW9udGgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc05ld1llYXIpIHtcbiAgICAgICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gaXNFbmFibGVkKGRhdGUsIHRpbWVsZXNzID0gdHJ1ZSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IGRhdGVUb0NoZWNrID0gc2VsZi5wYXJzZURhdGUoZGF0ZSwgdW5kZWZpbmVkLCB0aW1lbGVzcyk7XG4gICAgICAgIGlmICgoc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgZGF0ZVRvQ2hlY2sgJiZcbiAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlVG9DaGVjaywgc2VsZi5jb25maWcubWluRGF0ZSwgdGltZWxlc3MgIT09IHVuZGVmaW5lZCA/IHRpbWVsZXNzIDogIXNlbGYubWluRGF0ZUhhc1RpbWUpIDwgMCkgfHxcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5tYXhEYXRlICYmXG4gICAgICAgICAgICAgICAgZGF0ZVRvQ2hlY2sgJiZcbiAgICAgICAgICAgICAgICBjb21wYXJlRGF0ZXMoZGF0ZVRvQ2hlY2ssIHNlbGYuY29uZmlnLm1heERhdGUsIHRpbWVsZXNzICE9PSB1bmRlZmluZWQgPyB0aW1lbGVzcyA6ICFzZWxmLm1heERhdGVIYXNUaW1lKSA+IDApKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBpZiAoIXNlbGYuY29uZmlnLmVuYWJsZSAmJiBzZWxmLmNvbmZpZy5kaXNhYmxlLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBpZiAoZGF0ZVRvQ2hlY2sgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgY29uc3QgYm9vbCA9ICEhc2VsZi5jb25maWcuZW5hYmxlLCBhcnJheSA9IChfYSA9IHNlbGYuY29uZmlnLmVuYWJsZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogc2VsZi5jb25maWcuZGlzYWJsZTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGQ7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZCA9IGFycmF5W2ldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBkID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgICAgICAgICBkKGRhdGVUb0NoZWNrKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgICAgIGVsc2UgaWYgKGQgaW5zdGFuY2VvZiBEYXRlICYmXG4gICAgICAgICAgICAgICAgZGF0ZVRvQ2hlY2sgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIGQuZ2V0VGltZSgpID09PSBkYXRlVG9DaGVjay5nZXRUaW1lKCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvb2w7XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgZCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IHNlbGYucGFyc2VEYXRlKGQsIHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlZCAmJiBwYXJzZWQuZ2V0VGltZSgpID09PSBkYXRlVG9DaGVjay5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgPyBib29sXG4gICAgICAgICAgICAgICAgICAgIDogIWJvb2w7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgZCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgICAgIGRhdGVUb0NoZWNrICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICBkLmZyb20gJiZcbiAgICAgICAgICAgICAgICBkLnRvICYmXG4gICAgICAgICAgICAgICAgZGF0ZVRvQ2hlY2suZ2V0VGltZSgpID49IGQuZnJvbS5nZXRUaW1lKCkgJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjay5nZXRUaW1lKCkgPD0gZC50by5nZXRUaW1lKCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvb2w7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICFib29sO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc0luVmlldyhlbGVtKSB7XG4gICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiAoZWxlbS5jbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTmFtZS5pbmRleE9mKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpID09PSAtMSAmJlxuICAgICAgICAgICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lci5jb250YWlucyhlbGVtKSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25CbHVyKGUpIHtcbiAgICAgICAgY29uc3QgaXNJbnB1dCA9IGUudGFyZ2V0ID09PSBzZWxmLl9pbnB1dDtcbiAgICAgICAgaWYgKGlzSW5wdXQgJiZcbiAgICAgICAgICAgIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMCB8fCBzZWxmLl9pbnB1dC52YWx1ZS5sZW5ndGggPiAwKSAmJlxuICAgICAgICAgICAgIShlLnJlbGF0ZWRUYXJnZXQgJiYgaXNDYWxlbmRhckVsZW0oZS5yZWxhdGVkVGFyZ2V0KSkpIHtcbiAgICAgICAgICAgIHNlbGYuc2V0RGF0ZShzZWxmLl9pbnB1dC52YWx1ZSwgdHJ1ZSwgZS50YXJnZXQgPT09IHNlbGYuYWx0SW5wdXRcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLmFsdEZvcm1hdFxuICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gb25LZXlEb3duKGUpIHtcbiAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgY29uc3QgaXNJbnB1dCA9IHNlbGYuY29uZmlnLndyYXBcbiAgICAgICAgICAgID8gZWxlbWVudC5jb250YWlucyhldmVudFRhcmdldClcbiAgICAgICAgICAgIDogZXZlbnRUYXJnZXQgPT09IHNlbGYuX2lucHV0O1xuICAgICAgICBjb25zdCBhbGxvd0lucHV0ID0gc2VsZi5jb25maWcuYWxsb3dJbnB1dDtcbiAgICAgICAgY29uc3QgYWxsb3dLZXlkb3duID0gc2VsZi5pc09wZW4gJiYgKCFhbGxvd0lucHV0IHx8ICFpc0lucHV0KTtcbiAgICAgICAgY29uc3QgYWxsb3dJbmxpbmVLZXlkb3duID0gc2VsZi5jb25maWcuaW5saW5lICYmIGlzSW5wdXQgJiYgIWFsbG93SW5wdXQ7XG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDEzICYmIGlzSW5wdXQpIHtcbiAgICAgICAgICAgIGlmIChhbGxvd0lucHV0KSB7XG4gICAgICAgICAgICAgICAgc2VsZi5zZXREYXRlKHNlbGYuX2lucHV0LnZhbHVlLCB0cnVlLCBldmVudFRhcmdldCA9PT0gc2VsZi5hbHRJbnB1dFxuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLmFsdEZvcm1hdFxuICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLmRhdGVGb3JtYXQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBldmVudFRhcmdldC5ibHVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWxmLm9wZW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc0NhbGVuZGFyRWxlbShldmVudFRhcmdldCkgfHxcbiAgICAgICAgICAgIGFsbG93S2V5ZG93biB8fFxuICAgICAgICAgICAgYWxsb3dJbmxpbmVLZXlkb3duKSB7XG4gICAgICAgICAgICBjb25zdCBpc1RpbWVPYmogPSAhIXNlbGYudGltZUNvbnRhaW5lciAmJlxuICAgICAgICAgICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5jb250YWlucyhldmVudFRhcmdldCk7XG4gICAgICAgICAgICBzd2l0Y2ggKGUua2V5Q29kZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1RpbWVPYmopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRpbWUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzQW5kQ2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3REYXRlKGUpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDI3OlxuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIGZvY3VzQW5kQ2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgICAgIGNhc2UgNDY6XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0lucHV0ICYmICFzZWxmLmNvbmZpZy5hbGxvd0lucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmNsZWFyKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzNzpcbiAgICAgICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVGltZU9iaiAmJiAhaXNJbnB1dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGFsbG93SW5wdXQgPT09IGZhbHNlIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmIGlzSW5WaWV3KGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZWx0YSA9IGUua2V5Q29kZSA9PT0gMzkgPyAxIDogLTE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFlLmN0cmxLZXkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzT25EYXkodW5kZWZpbmVkLCBkZWx0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZU1vbnRoKGRlbHRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNPbkRheShnZXRGaXJzdEF2YWlsYWJsZURheSgxKSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGYuaG91ckVsZW1lbnQpXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmhvdXJFbGVtZW50LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkZWx0YSA9IGUua2V5Q29kZSA9PT0gNDAgPyAxIDogLTE7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoc2VsZi5kYXlzQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFRhcmdldC4kaSAhPT0gdW5kZWZpbmVkKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQgPT09IHNlbGYuaW5wdXQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFsdElucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5jdHJsS2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VZZWFyKHNlbGYuY3VycmVudFllYXIgLSBkZWx0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNPbkRheShnZXRGaXJzdEF2YWlsYWJsZURheSgxKSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghaXNUaW1lT2JqKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzT25EYXkodW5kZWZpbmVkLCBkZWx0YSAqIDcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV2ZW50VGFyZ2V0ID09PSBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlWWVhcihzZWxmLmN1cnJlbnRZZWFyIC0gZGVsdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNUaW1lT2JqICYmIHNlbGYuaG91ckVsZW1lbnQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGltZShlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2RlYm91bmNlZENoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzVGltZU9iaikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbXMgPSBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zZWNvbmRFbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYW1QTSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KHNlbGYucGx1Z2luRWxlbWVudHMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcigoeCkgPT4geCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpID0gZWxlbXMuaW5kZXhPZihldmVudFRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBlbGVtc1tpICsgKGUuc2hpZnRLZXkgPyAtMSA6IDEpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRhcmdldCB8fCBzZWxmLl9pbnB1dCkuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghc2VsZi5jb25maWcubm9DYWxlbmRhciAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIuY29udGFpbnMoZXZlbnRUYXJnZXQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCAmJiBldmVudFRhcmdldCA9PT0gc2VsZi5hbVBNKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGUua2V5KSB7XG4gICAgICAgICAgICAgICAgY2FzZSBzZWxmLmwxMG4uYW1QTVswXS5jaGFyQXQoMCk6XG4gICAgICAgICAgICAgICAgY2FzZSBzZWxmLmwxMG4uYW1QTVswXS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKTpcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5hbVBNLnRleHRDb250ZW50ID0gc2VsZi5sMTBuLmFtUE1bMF07XG4gICAgICAgICAgICAgICAgICAgIHNldEhvdXJzRnJvbUlucHV0cygpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVWYWx1ZSgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzFdLmNoYXJBdCgwKTpcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzFdLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpOlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPSBzZWxmLmwxMG4uYW1QTVsxXTtcbiAgICAgICAgICAgICAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpc0lucHV0IHx8IGlzQ2FsZW5kYXJFbGVtKGV2ZW50VGFyZ2V0KSkge1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25LZXlEb3duXCIsIGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uTW91c2VPdmVyKGVsZW0pIHtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggIT09IDEgfHxcbiAgICAgICAgICAgIChlbGVtICYmXG4gICAgICAgICAgICAgICAgKCFlbGVtLmNsYXNzTGlzdC5jb250YWlucyhcImZsYXRwaWNrci1kYXlcIikgfHxcbiAgICAgICAgICAgICAgICAgICAgZWxlbS5jbGFzc0xpc3QuY29udGFpbnMoXCJmbGF0cGlja3ItZGlzYWJsZWRcIikpKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgaG92ZXJEYXRlID0gZWxlbVxuICAgICAgICAgICAgPyBlbGVtLmRhdGVPYmouZ2V0VGltZSgpXG4gICAgICAgICAgICA6IHNlbGYuZGF5cy5maXJzdEVsZW1lbnRDaGlsZC5kYXRlT2JqLmdldFRpbWUoKSwgaW5pdGlhbERhdGUgPSBzZWxmLnBhcnNlRGF0ZShzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHVuZGVmaW5lZCwgdHJ1ZSkuZ2V0VGltZSgpLCByYW5nZVN0YXJ0RGF0ZSA9IE1hdGgubWluKGhvdmVyRGF0ZSwgc2VsZi5zZWxlY3RlZERhdGVzWzBdLmdldFRpbWUoKSksIHJhbmdlRW5kRGF0ZSA9IE1hdGgubWF4KGhvdmVyRGF0ZSwgc2VsZi5zZWxlY3RlZERhdGVzWzBdLmdldFRpbWUoKSk7XG4gICAgICAgIGxldCBjb250YWluc0Rpc2FibGVkID0gZmFsc2U7XG4gICAgICAgIGxldCBtaW5SYW5nZSA9IDAsIG1heFJhbmdlID0gMDtcbiAgICAgICAgZm9yIChsZXQgdCA9IHJhbmdlU3RhcnREYXRlOyB0IDwgcmFuZ2VFbmREYXRlOyB0ICs9IGR1cmF0aW9uLkRBWSkge1xuICAgICAgICAgICAgaWYgKCFpc0VuYWJsZWQobmV3IERhdGUodCksIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgY29udGFpbnNEaXNhYmxlZCA9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5zRGlzYWJsZWQgfHwgKHQgPiByYW5nZVN0YXJ0RGF0ZSAmJiB0IDwgcmFuZ2VFbmREYXRlKTtcbiAgICAgICAgICAgICAgICBpZiAodCA8IGluaXRpYWxEYXRlICYmICghbWluUmFuZ2UgfHwgdCA+IG1pblJhbmdlKSlcbiAgICAgICAgICAgICAgICAgICAgbWluUmFuZ2UgPSB0O1xuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHQgPiBpbml0aWFsRGF0ZSAmJiAoIW1heFJhbmdlIHx8IHQgPCBtYXhSYW5nZSkpXG4gICAgICAgICAgICAgICAgICAgIG1heFJhbmdlID0gdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBtID0gMDsgbSA8IHNlbGYuY29uZmlnLnNob3dNb250aHM7IG0rKykge1xuICAgICAgICAgICAgY29uc3QgbW9udGggPSBzZWxmLmRheXNDb250YWluZXIuY2hpbGRyZW5bbV07XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbCA9IG1vbnRoLmNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRheUVsZW0gPSBtb250aC5jaGlsZHJlbltpXSwgZGF0ZSA9IGRheUVsZW0uZGF0ZU9iajtcbiAgICAgICAgICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSBkYXRlLmdldFRpbWUoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBvdXRPZlJhbmdlID0gKG1pblJhbmdlID4gMCAmJiB0aW1lc3RhbXAgPCBtaW5SYW5nZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgKG1heFJhbmdlID4gMCAmJiB0aW1lc3RhbXAgPiBtYXhSYW5nZSk7XG4gICAgICAgICAgICAgICAgaWYgKG91dE9mUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF5RWxlbS5jbGFzc0xpc3QuYWRkKFwibm90QWxsb3dlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgW1wiaW5SYW5nZVwiLCBcInN0YXJ0UmFuZ2VcIiwgXCJlbmRSYW5nZVwiXS5mb3JFYWNoKChjKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXlFbGVtLmNsYXNzTGlzdC5yZW1vdmUoYyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoY29udGFpbnNEaXNhYmxlZCAmJiAhb3V0T2ZSYW5nZSlcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgW1wic3RhcnRSYW5nZVwiLCBcImluUmFuZ2VcIiwgXCJlbmRSYW5nZVwiLCBcIm5vdEFsbG93ZWRcIl0uZm9yRWFjaCgoYykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBkYXlFbGVtLmNsYXNzTGlzdC5yZW1vdmUoYyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoaG92ZXJEYXRlIDw9IHNlbGYuc2VsZWN0ZWREYXRlc1swXS5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgICAgID8gXCJzdGFydFJhbmdlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIDogXCJlbmRSYW5nZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluaXRpYWxEYXRlIDwgaG92ZXJEYXRlICYmIHRpbWVzdGFtcCA9PT0gaW5pdGlhbERhdGUpXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXlFbGVtLmNsYXNzTGlzdC5hZGQoXCJzdGFydFJhbmdlXCIpO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChpbml0aWFsRGF0ZSA+IGhvdmVyRGF0ZSAmJiB0aW1lc3RhbXAgPT09IGluaXRpYWxEYXRlKVxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5RWxlbS5jbGFzc0xpc3QuYWRkKFwiZW5kUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aW1lc3RhbXAgPj0gbWluUmFuZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChtYXhSYW5nZSA9PT0gMCB8fCB0aW1lc3RhbXAgPD0gbWF4UmFuZ2UpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0JldHdlZW4odGltZXN0YW1wLCBpbml0aWFsRGF0ZSwgaG92ZXJEYXRlKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LmFkZChcImluUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgICAgICBpZiAoc2VsZi5pc09wZW4gJiYgIXNlbGYuY29uZmlnLnN0YXRpYyAmJiAhc2VsZi5jb25maWcuaW5saW5lKVxuICAgICAgICAgICAgcG9zaXRpb25DYWxlbmRhcigpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvcGVuKGUsIHBvc2l0aW9uRWxlbWVudCA9IHNlbGYuX3Bvc2l0aW9uRWxlbWVudCkge1xuICAgICAgICBpZiAoc2VsZi5pc01vYmlsZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnRUYXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQuYmx1cigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5jbGljaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25PcGVuXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuX2lucHV0LmRpc2FibGVkIHx8IHNlbGYuY29uZmlnLmlubGluZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHdhc09wZW4gPSBzZWxmLmlzT3BlbjtcbiAgICAgICAgc2VsZi5pc09wZW4gPSB0cnVlO1xuICAgICAgICBpZiAoIXdhc09wZW4pIHtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuY2xhc3NMaXN0LmFkZChcIm9wZW5cIik7XG4gICAgICAgICAgICBzZWxmLl9pbnB1dC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25PcGVuXCIpO1xuICAgICAgICAgICAgcG9zaXRpb25DYWxlbmRhcihwb3NpdGlvbkVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5lbmFibGVUaW1lID09PSB0cnVlICYmIHNlbGYuY29uZmlnLm5vQ2FsZW5kYXIgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5hbGxvd0lucHV0ID09PSBmYWxzZSAmJlxuICAgICAgICAgICAgICAgIChlID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgIXNlbGYudGltZUNvbnRhaW5lci5jb250YWlucyhlLnJlbGF0ZWRUYXJnZXQpKSkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2VsZi5ob3VyRWxlbWVudC5zZWxlY3QoKSwgNTApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1pbk1heERhdGVTZXR0ZXIodHlwZSkge1xuICAgICAgICByZXR1cm4gKGRhdGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGVPYmogPSAoc2VsZi5jb25maWdbYF8ke3R5cGV9RGF0ZWBdID0gc2VsZi5wYXJzZURhdGUoZGF0ZSwgc2VsZi5jb25maWcuZGF0ZUZvcm1hdCkpO1xuICAgICAgICAgICAgY29uc3QgaW52ZXJzZURhdGVPYmogPSBzZWxmLmNvbmZpZ1tgXyR7dHlwZSA9PT0gXCJtaW5cIiA/IFwibWF4XCIgOiBcIm1pblwifURhdGVgXTtcbiAgICAgICAgICAgIGlmIChkYXRlT2JqICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmW3R5cGUgPT09IFwibWluXCIgPyBcIm1pbkRhdGVIYXNUaW1lXCIgOiBcIm1heERhdGVIYXNUaW1lXCJdID1cbiAgICAgICAgICAgICAgICAgICAgZGF0ZU9iai5nZXRIb3VycygpID4gMCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZU9iai5nZXRNaW51dGVzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlT2JqLmdldFNlY29uZHMoKSA+IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZi5zZWxlY3RlZERhdGVzKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzID0gc2VsZi5zZWxlY3RlZERhdGVzLmZpbHRlcigoZCkgPT4gaXNFbmFibGVkKGQpKTtcbiAgICAgICAgICAgICAgICBpZiAoIXNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggJiYgdHlwZSA9PT0gXCJtaW5cIilcbiAgICAgICAgICAgICAgICAgICAgc2V0SG91cnNGcm9tRGF0ZShkYXRlT2JqKTtcbiAgICAgICAgICAgICAgICB1cGRhdGVWYWx1ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgIHJlZHJhdygpO1xuICAgICAgICAgICAgICAgIGlmIChkYXRlT2JqICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXJFbGVtZW50W3R5cGVdID0gZGF0ZU9iai5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUodHlwZSk7XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhckVsZW1lbnQuZGlzYWJsZWQgPVxuICAgICAgICAgICAgICAgICAgICAhIWludmVyc2VEYXRlT2JqICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlT2JqICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGludmVyc2VEYXRlT2JqLmdldEZ1bGxZZWFyKCkgPT09IGRhdGVPYmouZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcGFyc2VDb25maWcoKSB7XG4gICAgICAgIGNvbnN0IGJvb2xPcHRzID0gW1xuICAgICAgICAgICAgXCJ3cmFwXCIsXG4gICAgICAgICAgICBcIndlZWtOdW1iZXJzXCIsXG4gICAgICAgICAgICBcImFsbG93SW5wdXRcIixcbiAgICAgICAgICAgIFwiYWxsb3dJbnZhbGlkUHJlbG9hZFwiLFxuICAgICAgICAgICAgXCJjbGlja09wZW5zXCIsXG4gICAgICAgICAgICBcInRpbWVfMjRoclwiLFxuICAgICAgICAgICAgXCJlbmFibGVUaW1lXCIsXG4gICAgICAgICAgICBcIm5vQ2FsZW5kYXJcIixcbiAgICAgICAgICAgIFwiYWx0SW5wdXRcIixcbiAgICAgICAgICAgIFwic2hvcnRoYW5kQ3VycmVudE1vbnRoXCIsXG4gICAgICAgICAgICBcImlubGluZVwiLFxuICAgICAgICAgICAgXCJzdGF0aWNcIixcbiAgICAgICAgICAgIFwiZW5hYmxlU2Vjb25kc1wiLFxuICAgICAgICAgICAgXCJkaXNhYmxlTW9iaWxlXCIsXG4gICAgICAgIF07XG4gICAgICAgIGNvbnN0IHVzZXJDb25maWcgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZWxlbWVudC5kYXRhc2V0IHx8IHt9KSkpLCBpbnN0YW5jZUNvbmZpZyk7XG4gICAgICAgIGNvbnN0IGZvcm1hdHMgPSB7fTtcbiAgICAgICAgc2VsZi5jb25maWcucGFyc2VEYXRlID0gdXNlckNvbmZpZy5wYXJzZURhdGU7XG4gICAgICAgIHNlbGYuY29uZmlnLmZvcm1hdERhdGUgPSB1c2VyQ29uZmlnLmZvcm1hdERhdGU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJlbmFibGVcIiwge1xuICAgICAgICAgICAgZ2V0OiAoKSA9PiBzZWxmLmNvbmZpZy5fZW5hYmxlLFxuICAgICAgICAgICAgc2V0OiAoZGF0ZXMpID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5fZW5hYmxlID0gcGFyc2VEYXRlUnVsZXMoZGF0ZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJkaXNhYmxlXCIsIHtcbiAgICAgICAgICAgIGdldDogKCkgPT4gc2VsZi5jb25maWcuX2Rpc2FibGUsXG4gICAgICAgICAgICBzZXQ6IChkYXRlcykgPT4ge1xuICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLl9kaXNhYmxlID0gcGFyc2VEYXRlUnVsZXMoZGF0ZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHRpbWVNb2RlID0gdXNlckNvbmZpZy5tb2RlID09PSBcInRpbWVcIjtcbiAgICAgICAgaWYgKCF1c2VyQ29uZmlnLmRhdGVGb3JtYXQgJiYgKHVzZXJDb25maWcuZW5hYmxlVGltZSB8fCB0aW1lTW9kZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGRlZmF1bHREYXRlRm9ybWF0ID0gZmxhdHBpY2tyLmRlZmF1bHRDb25maWcuZGF0ZUZvcm1hdCB8fCBkZWZhdWx0T3B0aW9ucy5kYXRlRm9ybWF0O1xuICAgICAgICAgICAgZm9ybWF0cy5kYXRlRm9ybWF0ID1cbiAgICAgICAgICAgICAgICB1c2VyQ29uZmlnLm5vQ2FsZW5kYXIgfHwgdGltZU1vZGVcbiAgICAgICAgICAgICAgICAgICAgPyBcIkg6aVwiICsgKHVzZXJDb25maWcuZW5hYmxlU2Vjb25kcyA/IFwiOlNcIiA6IFwiXCIpXG4gICAgICAgICAgICAgICAgICAgIDogZGVmYXVsdERhdGVGb3JtYXQgKyBcIiBIOmlcIiArICh1c2VyQ29uZmlnLmVuYWJsZVNlY29uZHMgPyBcIjpTXCIgOiBcIlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodXNlckNvbmZpZy5hbHRJbnB1dCAmJlxuICAgICAgICAgICAgKHVzZXJDb25maWcuZW5hYmxlVGltZSB8fCB0aW1lTW9kZSkgJiZcbiAgICAgICAgICAgICF1c2VyQ29uZmlnLmFsdEZvcm1hdCkge1xuICAgICAgICAgICAgY29uc3QgZGVmYXVsdEFsdEZvcm1hdCA9IGZsYXRwaWNrci5kZWZhdWx0Q29uZmlnLmFsdEZvcm1hdCB8fCBkZWZhdWx0T3B0aW9ucy5hbHRGb3JtYXQ7XG4gICAgICAgICAgICBmb3JtYXRzLmFsdEZvcm1hdCA9XG4gICAgICAgICAgICAgICAgdXNlckNvbmZpZy5ub0NhbGVuZGFyIHx8IHRpbWVNb2RlXG4gICAgICAgICAgICAgICAgICAgID8gXCJoOmlcIiArICh1c2VyQ29uZmlnLmVuYWJsZVNlY29uZHMgPyBcIjpTIEtcIiA6IFwiIEtcIilcbiAgICAgICAgICAgICAgICAgICAgOiBkZWZhdWx0QWx0Rm9ybWF0ICsgYCBoOmkke3VzZXJDb25maWcuZW5hYmxlU2Vjb25kcyA/IFwiOlNcIiA6IFwiXCJ9IEtgO1xuICAgICAgICB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJtaW5EYXRlXCIsIHtcbiAgICAgICAgICAgIGdldDogKCkgPT4gc2VsZi5jb25maWcuX21pbkRhdGUsXG4gICAgICAgICAgICBzZXQ6IG1pbk1heERhdGVTZXR0ZXIoXCJtaW5cIiksXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZi5jb25maWcsIFwibWF4RGF0ZVwiLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHNlbGYuY29uZmlnLl9tYXhEYXRlLFxuICAgICAgICAgICAgc2V0OiBtaW5NYXhEYXRlU2V0dGVyKFwibWF4XCIpLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgbWluTWF4VGltZVNldHRlciA9ICh0eXBlKSA9PiAodmFsKSA9PiB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZ1t0eXBlID09PSBcIm1pblwiID8gXCJfbWluVGltZVwiIDogXCJfbWF4VGltZVwiXSA9IHNlbGYucGFyc2VEYXRlKHZhbCwgXCJIOmk6U1wiKTtcbiAgICAgICAgfTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcIm1pblRpbWVcIiwge1xuICAgICAgICAgICAgZ2V0OiAoKSA9PiBzZWxmLmNvbmZpZy5fbWluVGltZSxcbiAgICAgICAgICAgIHNldDogbWluTWF4VGltZVNldHRlcihcIm1pblwiKSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJtYXhUaW1lXCIsIHtcbiAgICAgICAgICAgIGdldDogKCkgPT4gc2VsZi5jb25maWcuX21heFRpbWUsXG4gICAgICAgICAgICBzZXQ6IG1pbk1heFRpbWVTZXR0ZXIoXCJtYXhcIiksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodXNlckNvbmZpZy5tb2RlID09PSBcInRpbWVcIikge1xuICAgICAgICAgICAgc2VsZi5jb25maWcubm9DYWxlbmRhciA9IHRydWU7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5lbmFibGVUaW1lID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuYXNzaWduKHNlbGYuY29uZmlnLCBmb3JtYXRzLCB1c2VyQ29uZmlnKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBib29sT3B0cy5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIHNlbGYuY29uZmlnW2Jvb2xPcHRzW2ldXSA9XG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWdbYm9vbE9wdHNbaV1dID09PSB0cnVlIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnW2Jvb2xPcHRzW2ldXSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIEhPT0tTLmZpbHRlcigoaG9vaykgPT4gc2VsZi5jb25maWdbaG9va10gIT09IHVuZGVmaW5lZCkuZm9yRWFjaCgoaG9vaykgPT4ge1xuICAgICAgICAgICAgc2VsZi5jb25maWdbaG9va10gPSBhcnJheWlmeShzZWxmLmNvbmZpZ1tob29rXSB8fCBbXSkubWFwKGJpbmRUb0luc3RhbmNlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuaXNNb2JpbGUgPVxuICAgICAgICAgICAgIXNlbGYuY29uZmlnLmRpc2FibGVNb2JpbGUgJiZcbiAgICAgICAgICAgICAgICAhc2VsZi5jb25maWcuaW5saW5lICYmXG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWcubW9kZSA9PT0gXCJzaW5nbGVcIiAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5kaXNhYmxlLmxlbmd0aCAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5lbmFibGUgJiZcbiAgICAgICAgICAgICAgICAhc2VsZi5jb25maWcud2Vla051bWJlcnMgJiZcbiAgICAgICAgICAgICAgICAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZi5jb25maWcucGx1Z2lucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgcGx1Z2luQ29uZiA9IHNlbGYuY29uZmlnLnBsdWdpbnNbaV0oc2VsZikgfHwge307XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBwbHVnaW5Db25mKSB7XG4gICAgICAgICAgICAgICAgaWYgKEhPT0tTLmluZGV4T2Yoa2V5KSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnW2tleV0gPSBhcnJheWlmeShwbHVnaW5Db25mW2tleV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKGJpbmRUb0luc3RhbmNlKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmNvbmNhdChzZWxmLmNvbmZpZ1trZXldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIHVzZXJDb25maWdba2V5XSA9PT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWdba2V5XSA9IHBsdWdpbkNvbmZba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXVzZXJDb25maWcuYWx0SW5wdXRDbGFzcykge1xuICAgICAgICAgICAgc2VsZi5jb25maWcuYWx0SW5wdXRDbGFzcyA9XG4gICAgICAgICAgICAgICAgZ2V0SW5wdXRFbGVtKCkuY2xhc3NOYW1lICsgXCIgXCIgKyBzZWxmLmNvbmZpZy5hbHRJbnB1dENsYXNzO1xuICAgICAgICB9XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uUGFyc2VDb25maWdcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldElucHV0RWxlbSgpIHtcbiAgICAgICAgcmV0dXJuIHNlbGYuY29uZmlnLndyYXBcbiAgICAgICAgICAgID8gZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaW5wdXRdXCIpXG4gICAgICAgICAgICA6IGVsZW1lbnQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldHVwTG9jYWxlKCkge1xuICAgICAgICBpZiAodHlwZW9mIHNlbGYuY29uZmlnLmxvY2FsZSAhPT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgdHlwZW9mIGZsYXRwaWNrci5sMTBuc1tzZWxmLmNvbmZpZy5sb2NhbGVdID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAgICAgc2VsZi5jb25maWcuZXJyb3JIYW5kbGVyKG5ldyBFcnJvcihgZmxhdHBpY2tyOiBpbnZhbGlkIGxvY2FsZSAke3NlbGYuY29uZmlnLmxvY2FsZX1gKSk7XG4gICAgICAgIHNlbGYubDEwbiA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZmxhdHBpY2tyLmwxMG5zLmRlZmF1bHQpLCAodHlwZW9mIHNlbGYuY29uZmlnLmxvY2FsZSA9PT0gXCJvYmplY3RcIlxuICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5sb2NhbGVcbiAgICAgICAgICAgIDogc2VsZi5jb25maWcubG9jYWxlICE9PSBcImRlZmF1bHRcIlxuICAgICAgICAgICAgICAgID8gZmxhdHBpY2tyLmwxMG5zW3NlbGYuY29uZmlnLmxvY2FsZV1cbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCkpO1xuICAgICAgICB0b2tlblJlZ2V4LksgPSBgKCR7c2VsZi5sMTBuLmFtUE1bMF19fCR7c2VsZi5sMTBuLmFtUE1bMV19fCR7c2VsZi5sMTBuLmFtUE1bMF0udG9Mb3dlckNhc2UoKX18JHtzZWxmLmwxMG4uYW1QTVsxXS50b0xvd2VyQ2FzZSgpfSlgO1xuICAgICAgICBjb25zdCB1c2VyQ29uZmlnID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbnN0YW5jZUNvbmZpZyksIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZWxlbWVudC5kYXRhc2V0IHx8IHt9KSkpO1xuICAgICAgICBpZiAodXNlckNvbmZpZy50aW1lXzI0aHIgPT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgZmxhdHBpY2tyLmRlZmF1bHRDb25maWcudGltZV8yNGhyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLnRpbWVfMjRociA9IHNlbGYubDEwbi50aW1lXzI0aHI7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5mb3JtYXREYXRlID0gY3JlYXRlRGF0ZUZvcm1hdHRlcihzZWxmKTtcbiAgICAgICAgc2VsZi5wYXJzZURhdGUgPSBjcmVhdGVEYXRlUGFyc2VyKHsgY29uZmlnOiBzZWxmLmNvbmZpZywgbDEwbjogc2VsZi5sMTBuIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb3NpdGlvbkNhbGVuZGFyKGN1c3RvbVBvc2l0aW9uRWxlbWVudCkge1xuICAgICAgICBpZiAodHlwZW9mIHNlbGYuY29uZmlnLnBvc2l0aW9uID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB2b2lkIHNlbGYuY29uZmlnLnBvc2l0aW9uKHNlbGYsIGN1c3RvbVBvc2l0aW9uRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY2FsZW5kYXJDb250YWluZXIgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25QcmVDYWxlbmRhclBvc2l0aW9uXCIpO1xuICAgICAgICBjb25zdCBwb3NpdGlvbkVsZW1lbnQgPSBjdXN0b21Qb3NpdGlvbkVsZW1lbnQgfHwgc2VsZi5fcG9zaXRpb25FbGVtZW50O1xuICAgICAgICBjb25zdCBjYWxlbmRhckhlaWdodCA9IEFycmF5LnByb3RvdHlwZS5yZWR1Y2UuY2FsbChzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNoaWxkcmVuLCAoKGFjYywgY2hpbGQpID0+IGFjYyArIGNoaWxkLm9mZnNldEhlaWdodCksIDApLCBjYWxlbmRhcldpZHRoID0gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5vZmZzZXRXaWR0aCwgY29uZmlnUG9zID0gc2VsZi5jb25maWcucG9zaXRpb24uc3BsaXQoXCIgXCIpLCBjb25maWdQb3NWZXJ0aWNhbCA9IGNvbmZpZ1Bvc1swXSwgY29uZmlnUG9zSG9yaXpvbnRhbCA9IGNvbmZpZ1Bvcy5sZW5ndGggPiAxID8gY29uZmlnUG9zWzFdIDogbnVsbCwgaW5wdXRCb3VuZHMgPSBwb3NpdGlvbkVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksIGRpc3RhbmNlRnJvbUJvdHRvbSA9IHdpbmRvdy5pbm5lckhlaWdodCAtIGlucHV0Qm91bmRzLmJvdHRvbSwgc2hvd09uVG9wID0gY29uZmlnUG9zVmVydGljYWwgPT09IFwiYWJvdmVcIiB8fFxuICAgICAgICAgICAgKGNvbmZpZ1Bvc1ZlcnRpY2FsICE9PSBcImJlbG93XCIgJiZcbiAgICAgICAgICAgICAgICBkaXN0YW5jZUZyb21Cb3R0b20gPCBjYWxlbmRhckhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGlucHV0Qm91bmRzLnRvcCA+IGNhbGVuZGFySGVpZ2h0KTtcbiAgICAgICAgY29uc3QgdG9wID0gd2luZG93LnBhZ2VZT2Zmc2V0ICtcbiAgICAgICAgICAgIGlucHV0Qm91bmRzLnRvcCArXG4gICAgICAgICAgICAoIXNob3dPblRvcCA/IHBvc2l0aW9uRWxlbWVudC5vZmZzZXRIZWlnaHQgKyAyIDogLWNhbGVuZGFySGVpZ2h0IC0gMik7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYXJyb3dUb3BcIiwgIXNob3dPblRvcCk7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYXJyb3dCb3R0b21cIiwgc2hvd09uVG9wKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmlubGluZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGxlZnQgPSB3aW5kb3cucGFnZVhPZmZzZXQgKyBpbnB1dEJvdW5kcy5sZWZ0O1xuICAgICAgICBsZXQgaXNDZW50ZXIgPSBmYWxzZTtcbiAgICAgICAgbGV0IGlzUmlnaHQgPSBmYWxzZTtcbiAgICAgICAgaWYgKGNvbmZpZ1Bvc0hvcml6b250YWwgPT09IFwiY2VudGVyXCIpIHtcbiAgICAgICAgICAgIGxlZnQgLT0gKGNhbGVuZGFyV2lkdGggLSBpbnB1dEJvdW5kcy53aWR0aCkgLyAyO1xuICAgICAgICAgICAgaXNDZW50ZXIgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvbmZpZ1Bvc0hvcml6b250YWwgPT09IFwicmlnaHRcIikge1xuICAgICAgICAgICAgbGVmdCAtPSBjYWxlbmRhcldpZHRoIC0gaW5wdXRCb3VuZHMud2lkdGg7XG4gICAgICAgICAgICBpc1JpZ2h0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFycm93TGVmdFwiLCAhaXNDZW50ZXIgJiYgIWlzUmlnaHQpO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFycm93Q2VudGVyXCIsIGlzQ2VudGVyKTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhcnJvd1JpZ2h0XCIsIGlzUmlnaHQpO1xuICAgICAgICBjb25zdCByaWdodCA9IHdpbmRvdy5kb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoIC1cbiAgICAgICAgICAgICh3aW5kb3cucGFnZVhPZmZzZXQgKyBpbnB1dEJvdW5kcy5yaWdodCk7XG4gICAgICAgIGNvbnN0IHJpZ2h0TW9zdCA9IGxlZnQgKyBjYWxlbmRhcldpZHRoID4gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7XG4gICAgICAgIGNvbnN0IGNlbnRlck1vc3QgPSByaWdodCArIGNhbGVuZGFyV2lkdGggPiB3aW5kb3cuZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJyaWdodE1vc3RcIiwgcmlnaHRNb3N0KTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnN0YXRpYylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS50b3AgPSBgJHt0b3B9cHhgO1xuICAgICAgICBpZiAoIXJpZ2h0TW9zdCkge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gYCR7bGVmdH1weGA7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gXCJhdXRvXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIWNlbnRlck1vc3QpIHtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUubGVmdCA9IFwiYXV0b1wiO1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5yaWdodCA9IGAke3JpZ2h0fXB4YDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGRvYyA9IGdldERvY3VtZW50U3R5bGVTaGVldCgpO1xuICAgICAgICAgICAgaWYgKGRvYyA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGNvbnN0IGJvZHlXaWR0aCA9IHdpbmRvdy5kb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgY29uc3QgY2VudGVyTGVmdCA9IE1hdGgubWF4KDAsIGJvZHlXaWR0aCAvIDIgLSBjYWxlbmRhcldpZHRoIC8gMik7XG4gICAgICAgICAgICBjb25zdCBjZW50ZXJCZWZvcmUgPSBcIi5mbGF0cGlja3ItY2FsZW5kYXIuY2VudGVyTW9zdDpiZWZvcmVcIjtcbiAgICAgICAgICAgIGNvbnN0IGNlbnRlckFmdGVyID0gXCIuZmxhdHBpY2tyLWNhbGVuZGFyLmNlbnRlck1vc3Q6YWZ0ZXJcIjtcbiAgICAgICAgICAgIGNvbnN0IGNlbnRlckluZGV4ID0gZG9jLmNzc1J1bGVzLmxlbmd0aDtcbiAgICAgICAgICAgIGNvbnN0IGNlbnRlclN0eWxlID0gYHtsZWZ0OiR7aW5wdXRCb3VuZHMubGVmdH1weDtyaWdodDphdXRvO31gO1xuICAgICAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJyaWdodE1vc3RcIiwgZmFsc2UpO1xuICAgICAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJjZW50ZXJNb3N0XCIsIHRydWUpO1xuICAgICAgICAgICAgZG9jLmluc2VydFJ1bGUoYCR7Y2VudGVyQmVmb3JlfSwke2NlbnRlckFmdGVyfSR7Y2VudGVyU3R5bGV9YCwgY2VudGVySW5kZXgpO1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gYCR7Y2VudGVyTGVmdH1weGA7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gXCJhdXRvXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0RG9jdW1lbnRTdHlsZVNoZWV0KCkge1xuICAgICAgICBsZXQgZWRpdGFibGVTaGVldCA9IG51bGw7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHNoZWV0ID0gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHNoZWV0LmNzc1J1bGVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWRpdGFibGVTaGVldCA9IHNoZWV0O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVkaXRhYmxlU2hlZXQgIT0gbnVsbCA/IGVkaXRhYmxlU2hlZXQgOiBjcmVhdGVTdHlsZVNoZWV0KCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZVN0eWxlU2hlZXQoKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICAgICAgcmV0dXJuIHN0eWxlLnNoZWV0O1xuICAgIH1cbiAgICBmdW5jdGlvbiByZWRyYXcoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5ub0NhbGVuZGFyIHx8IHNlbGYuaXNNb2JpbGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgdXBkYXRlTmF2aWdhdGlvbkN1cnJlbnRNb250aCgpO1xuICAgICAgICBidWlsZERheXMoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZm9jdXNBbmRDbG9zZSgpIHtcbiAgICAgICAgc2VsZi5faW5wdXQuZm9jdXMoKTtcbiAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJNU0lFXCIpICE9PSAtMSB8fFxuICAgICAgICAgICAgbmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2V0VGltZW91dChzZWxmLmNsb3NlLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzZWxlY3REYXRlKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBjb25zdCBpc1NlbGVjdGFibGUgPSAoZGF5KSA9PiBkYXkuY2xhc3NMaXN0ICYmXG4gICAgICAgICAgICBkYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRheVwiKSAmJlxuICAgICAgICAgICAgIWRheS5jbGFzc0xpc3QuY29udGFpbnMoXCJmbGF0cGlja3ItZGlzYWJsZWRcIikgJiZcbiAgICAgICAgICAgICFkYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwibm90QWxsb3dlZFwiKTtcbiAgICAgICAgY29uc3QgdCA9IGZpbmRQYXJlbnQoZ2V0RXZlbnRUYXJnZXQoZSksIGlzU2VsZWN0YWJsZSk7XG4gICAgICAgIGlmICh0ID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IHQ7XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkRGF0ZSA9IChzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9IG5ldyBEYXRlKHRhcmdldC5kYXRlT2JqLmdldFRpbWUoKSkpO1xuICAgICAgICBjb25zdCBzaG91bGRDaGFuZ2VNb250aCA9IChzZWxlY3RlZERhdGUuZ2V0TW9udGgoKSA8IHNlbGYuY3VycmVudE1vbnRoIHx8XG4gICAgICAgICAgICBzZWxlY3RlZERhdGUuZ2V0TW9udGgoKSA+XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggKyBzZWxmLmNvbmZpZy5zaG93TW9udGhzIC0gMSkgJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vZGUgIT09IFwicmFuZ2VcIjtcbiAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVFbGVtID0gdGFyZ2V0O1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJzaW5nbGVcIilcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IFtzZWxlY3RlZERhdGVdO1xuICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcIm11bHRpcGxlXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkSW5kZXggPSBpc0RhdGVTZWxlY3RlZChzZWxlY3RlZERhdGUpO1xuICAgICAgICAgICAgaWYgKHNlbGVjdGVkSW5kZXgpXG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnNwbGljZShwYXJzZUludChzZWxlY3RlZEluZGV4KSwgMSk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnB1c2goc2VsZWN0ZWREYXRlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5jbGVhcihmYWxzZSwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogPSBzZWxlY3RlZERhdGU7XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMucHVzaChzZWxlY3RlZERhdGUpO1xuICAgICAgICAgICAgaWYgKGNvbXBhcmVEYXRlcyhzZWxlY3RlZERhdGUsIHNlbGYuc2VsZWN0ZWREYXRlc1swXSwgdHJ1ZSkgIT09IDApXG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnNvcnQoKGEsIGIpID0+IGEuZ2V0VGltZSgpIC0gYi5nZXRUaW1lKCkpO1xuICAgICAgICB9XG4gICAgICAgIHNldEhvdXJzRnJvbUlucHV0cygpO1xuICAgICAgICBpZiAoc2hvdWxkQ2hhbmdlTW9udGgpIHtcbiAgICAgICAgICAgIGNvbnN0IGlzTmV3WWVhciA9IHNlbGYuY3VycmVudFllYXIgIT09IHNlbGVjdGVkRGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IHNlbGVjdGVkRGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggPSBzZWxlY3RlZERhdGUuZ2V0TW9udGgoKTtcbiAgICAgICAgICAgIGlmIChpc05ld1llYXIpIHtcbiAgICAgICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICAgICAgYnVpbGRNb250aFN3aXRjaCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25Nb250aENoYW5nZVwiKTtcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVOYXZpZ2F0aW9uQ3VycmVudE1vbnRoKCk7XG4gICAgICAgIGJ1aWxkRGF5cygpO1xuICAgICAgICB1cGRhdGVWYWx1ZSgpO1xuICAgICAgICBpZiAoIXNob3VsZENoYW5nZU1vbnRoICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCIgJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLnNob3dNb250aHMgPT09IDEpXG4gICAgICAgICAgICBmb2N1c09uRGF5RWxlbSh0YXJnZXQpO1xuICAgICAgICBlbHNlIGlmIChzZWxmLnNlbGVjdGVkRGF0ZUVsZW0gIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0gJiYgc2VsZi5zZWxlY3RlZERhdGVFbGVtLmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuaG91ckVsZW1lbnQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQgIT09IHVuZGVmaW5lZCAmJiBzZWxmLmhvdXJFbGVtZW50LmZvY3VzKCk7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5jbG9zZU9uU2VsZWN0KSB7XG4gICAgICAgICAgICBjb25zdCBzaW5nbGUgPSBzZWxmLmNvbmZpZy5tb2RlID09PSBcInNpbmdsZVwiICYmICFzZWxmLmNvbmZpZy5lbmFibGVUaW1lO1xuICAgICAgICAgICAgY29uc3QgcmFuZ2UgPSBzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIgJiZcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID09PSAyICYmXG4gICAgICAgICAgICAgICAgIXNlbGYuY29uZmlnLmVuYWJsZVRpbWU7XG4gICAgICAgICAgICBpZiAoc2luZ2xlIHx8IHJhbmdlKSB7XG4gICAgICAgICAgICAgICAgZm9jdXNBbmRDbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRyaWdnZXJDaGFuZ2UoKTtcbiAgICB9XG4gICAgY29uc3QgQ0FMTEJBQ0tTID0ge1xuICAgICAgICBsb2NhbGU6IFtzZXR1cExvY2FsZSwgdXBkYXRlV2Vla2RheXNdLFxuICAgICAgICBzaG93TW9udGhzOiBbYnVpbGRNb250aHMsIHNldENhbGVuZGFyV2lkdGgsIGJ1aWxkV2Vla2RheXNdLFxuICAgICAgICBtaW5EYXRlOiBbanVtcFRvRGF0ZV0sXG4gICAgICAgIG1heERhdGU6IFtqdW1wVG9EYXRlXSxcbiAgICAgICAgY2xpY2tPcGVuczogW1xuICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5jbGlja09wZW5zID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGJpbmQoc2VsZi5faW5wdXQsIFwiZm9jdXNcIiwgc2VsZi5vcGVuKTtcbiAgICAgICAgICAgICAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJjbGlja1wiLCBzZWxmLm9wZW4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX2lucHV0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzZWxmLm9wZW4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgfTtcbiAgICBmdW5jdGlvbiBzZXQob3B0aW9uLCB2YWx1ZSkge1xuICAgICAgICBpZiAob3B0aW9uICE9PSBudWxsICYmIHR5cGVvZiBvcHRpb24gPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oc2VsZi5jb25maWcsIG9wdGlvbik7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBvcHRpb24pIHtcbiAgICAgICAgICAgICAgICBpZiAoQ0FMTEJBQ0tTW2tleV0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgQ0FMTEJBQ0tTW2tleV0uZm9yRWFjaCgoeCkgPT4geCgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnW29wdGlvbl0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChDQUxMQkFDS1Nbb3B0aW9uXSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIENBTExCQUNLU1tvcHRpb25dLmZvckVhY2goKHgpID0+IHgoKSk7XG4gICAgICAgICAgICBlbHNlIGlmIChIT09LUy5pbmRleE9mKG9wdGlvbikgPiAtMSlcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZ1tvcHRpb25dID0gYXJyYXlpZnkodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKHRydWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRTZWxlY3RlZERhdGUoaW5wdXREYXRlLCBmb3JtYXQpIHtcbiAgICAgICAgbGV0IGRhdGVzID0gW107XG4gICAgICAgIGlmIChpbnB1dERhdGUgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgICAgIGRhdGVzID0gaW5wdXREYXRlLm1hcCgoZCkgPT4gc2VsZi5wYXJzZURhdGUoZCwgZm9ybWF0KSk7XG4gICAgICAgIGVsc2UgaWYgKGlucHV0RGF0ZSBpbnN0YW5jZW9mIERhdGUgfHwgdHlwZW9mIGlucHV0RGF0ZSA9PT0gXCJudW1iZXJcIilcbiAgICAgICAgICAgIGRhdGVzID0gW3NlbGYucGFyc2VEYXRlKGlucHV0RGF0ZSwgZm9ybWF0KV07XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBpbnB1dERhdGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoc2VsZi5jb25maWcubW9kZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzaW5nbGVcIjpcbiAgICAgICAgICAgICAgICBjYXNlIFwidGltZVwiOlxuICAgICAgICAgICAgICAgICAgICBkYXRlcyA9IFtzZWxmLnBhcnNlRGF0ZShpbnB1dERhdGUsIGZvcm1hdCldO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwibXVsdGlwbGVcIjpcbiAgICAgICAgICAgICAgICAgICAgZGF0ZXMgPSBpbnB1dERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdChzZWxmLmNvbmZpZy5jb25qdW5jdGlvbilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoKGRhdGUpID0+IHNlbGYucGFyc2VEYXRlKGRhdGUsIGZvcm1hdCkpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwicmFuZ2VcIjpcbiAgICAgICAgICAgICAgICAgICAgZGF0ZXMgPSBpbnB1dERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdChzZWxmLmwxMG4ucmFuZ2VTZXBhcmF0b3IpXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKChkYXRlKSA9PiBzZWxmLnBhcnNlRGF0ZShkYXRlLCBmb3JtYXQpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgc2VsZi5jb25maWcuZXJyb3JIYW5kbGVyKG5ldyBFcnJvcihgSW52YWxpZCBkYXRlIHN1cHBsaWVkOiAke0pTT04uc3RyaW5naWZ5KGlucHV0RGF0ZSl9YCkpO1xuICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSAoc2VsZi5jb25maWcuYWxsb3dJbnZhbGlkUHJlbG9hZFxuICAgICAgICAgICAgPyBkYXRlc1xuICAgICAgICAgICAgOiBkYXRlcy5maWx0ZXIoKGQpID0+IGQgaW5zdGFuY2VvZiBEYXRlICYmIGlzRW5hYmxlZChkLCBmYWxzZSkpKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIilcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5zb3J0KChhLCBiKSA9PiBhLmdldFRpbWUoKSAtIGIuZ2V0VGltZSgpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0RGF0ZShkYXRlLCB0cmlnZ2VyQ2hhbmdlID0gZmFsc2UsIGZvcm1hdCA9IHNlbGYuY29uZmlnLmRhdGVGb3JtYXQpIHtcbiAgICAgICAgaWYgKChkYXRlICE9PSAwICYmICFkYXRlKSB8fCAoZGF0ZSBpbnN0YW5jZW9mIEFycmF5ICYmIGRhdGUubGVuZ3RoID09PSAwKSlcbiAgICAgICAgICAgIHJldHVybiBzZWxmLmNsZWFyKHRyaWdnZXJDaGFuZ2UpO1xuICAgICAgICBzZXRTZWxlY3RlZERhdGUoZGF0ZSwgZm9ybWF0KTtcbiAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogPVxuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzW3NlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggLSAxXTtcbiAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICAgICAganVtcFRvRGF0ZSh1bmRlZmluZWQsIHRyaWdnZXJDaGFuZ2UpO1xuICAgICAgICBzZXRIb3Vyc0Zyb21EYXRlKCk7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBzZWxmLmNsZWFyKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVWYWx1ZSh0cmlnZ2VyQ2hhbmdlKTtcbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2UpXG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkNoYW5nZVwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcGFyc2VEYXRlUnVsZXMoYXJyKSB7XG4gICAgICAgIHJldHVybiBhcnJcbiAgICAgICAgICAgIC5zbGljZSgpXG4gICAgICAgICAgICAubWFwKChydWxlKSA9PiB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHJ1bGUgPT09IFwic3RyaW5nXCIgfHxcbiAgICAgICAgICAgICAgICB0eXBlb2YgcnVsZSA9PT0gXCJudW1iZXJcIiB8fFxuICAgICAgICAgICAgICAgIHJ1bGUgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlbGYucGFyc2VEYXRlKHJ1bGUsIHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChydWxlICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIHJ1bGUgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgICAgICAgICBydWxlLmZyb20gJiZcbiAgICAgICAgICAgICAgICBydWxlLnRvKVxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb206IHNlbGYucGFyc2VEYXRlKHJ1bGUuZnJvbSwgdW5kZWZpbmVkKSxcbiAgICAgICAgICAgICAgICAgICAgdG86IHNlbGYucGFyc2VEYXRlKHJ1bGUudG8sIHVuZGVmaW5lZCksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBydWxlO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmZpbHRlcigoeCkgPT4geCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldHVwRGF0ZXMoKSB7XG4gICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IFtdO1xuICAgICAgICBzZWxmLm5vdyA9IHNlbGYucGFyc2VEYXRlKHNlbGYuY29uZmlnLm5vdykgfHwgbmV3IERhdGUoKTtcbiAgICAgICAgY29uc3QgcHJlbG9hZGVkRGF0ZSA9IHNlbGYuY29uZmlnLmRlZmF1bHREYXRlIHx8XG4gICAgICAgICAgICAoKHNlbGYuaW5wdXQubm9kZU5hbWUgPT09IFwiSU5QVVRcIiB8fFxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQubm9kZU5hbWUgPT09IFwiVEVYVEFSRUFcIikgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmlucHV0LnBsYWNlaG9sZGVyICYmXG4gICAgICAgICAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSA9PT0gc2VsZi5pbnB1dC5wbGFjZWhvbGRlclxuICAgICAgICAgICAgICAgID8gbnVsbFxuICAgICAgICAgICAgICAgIDogc2VsZi5pbnB1dC52YWx1ZSk7XG4gICAgICAgIGlmIChwcmVsb2FkZWREYXRlKVxuICAgICAgICAgICAgc2V0U2VsZWN0ZWREYXRlKHByZWxvYWRlZERhdGUsIHNlbGYuY29uZmlnLmRhdGVGb3JtYXQpO1xuICAgICAgICBzZWxmLl9pbml0aWFsRGF0ZSA9XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgID8gc2VsZi5zZWxlY3RlZERhdGVzWzBdXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0VGltZSgpID4gc2VsZi5ub3cuZ2V0VGltZSgpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWluRGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1heERhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0VGltZSgpIDwgc2VsZi5ub3cuZ2V0VGltZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogc2VsZi5ub3c7XG4gICAgICAgIHNlbGYuY3VycmVudFllYXIgPSBzZWxmLl9pbml0aWFsRGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGYuX2luaXRpYWxEYXRlLmdldE1vbnRoKCk7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMClcbiAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gc2VsZi5zZWxlY3RlZERhdGVzWzBdO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluVGltZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5jb25maWcubWluVGltZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuY29uZmlnLm1pblRpbWUsIFwiSDppXCIpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5jb25maWcubWF4VGltZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuY29uZmlnLm1heFRpbWUsIFwiSDppXCIpO1xuICAgICAgICBzZWxmLm1pbkRhdGVIYXNUaW1lID1cbiAgICAgICAgICAgICEhc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5taW5EYXRlLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0TWludXRlcygpID4gMCB8fFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5EYXRlLmdldFNlY29uZHMoKSA+IDApO1xuICAgICAgICBzZWxmLm1heERhdGVIYXNUaW1lID1cbiAgICAgICAgICAgICEhc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0TWludXRlcygpID4gMCB8fFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldFNlY29uZHMoKSA+IDApO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXR1cElucHV0cygpIHtcbiAgICAgICAgc2VsZi5pbnB1dCA9IGdldElucHV0RWxlbSgpO1xuICAgICAgICBpZiAoIXNlbGYuaW5wdXQpIHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVycm9ySGFuZGxlcihuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IGVsZW1lbnQgc3BlY2lmaWVkXCIpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmlucHV0Ll90eXBlID0gc2VsZi5pbnB1dC50eXBlO1xuICAgICAgICBzZWxmLmlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICAgICAgc2VsZi5pbnB1dC5jbGFzc0xpc3QuYWRkKFwiZmxhdHBpY2tyLWlucHV0XCIpO1xuICAgICAgICBzZWxmLl9pbnB1dCA9IHNlbGYuaW5wdXQ7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5hbHRJbnB1dCkge1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoc2VsZi5pbnB1dC5ub2RlTmFtZSwgc2VsZi5jb25maWcuYWx0SW5wdXRDbGFzcyk7XG4gICAgICAgICAgICBzZWxmLl9pbnB1dCA9IHNlbGYuYWx0SW5wdXQ7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnBsYWNlaG9sZGVyID0gc2VsZi5pbnB1dC5wbGFjZWhvbGRlcjtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQuZGlzYWJsZWQgPSBzZWxmLmlucHV0LmRpc2FibGVkO1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC5yZXF1aXJlZCA9IHNlbGYuaW5wdXQucmVxdWlyZWQ7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnRhYkluZGV4ID0gc2VsZi5pbnB1dC50YWJJbmRleDtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICAgICAgc2VsZi5pbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5zdGF0aWMgJiYgc2VsZi5pbnB1dC5wYXJlbnROb2RlKVxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoc2VsZi5hbHRJbnB1dCwgc2VsZi5pbnB1dC5uZXh0U2libGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5hbGxvd0lucHV0KVxuICAgICAgICAgICAgc2VsZi5faW5wdXQuc2V0QXR0cmlidXRlKFwicmVhZG9ubHlcIiwgXCJyZWFkb25seVwiKTtcbiAgICAgICAgc2VsZi5fcG9zaXRpb25FbGVtZW50ID0gc2VsZi5jb25maWcucG9zaXRpb25FbGVtZW50IHx8IHNlbGYuX2lucHV0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXR1cE1vYmlsZSgpIHtcbiAgICAgICAgY29uc3QgaW5wdXRUeXBlID0gc2VsZi5jb25maWcuZW5hYmxlVGltZVxuICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5ub0NhbGVuZGFyXG4gICAgICAgICAgICAgICAgPyBcInRpbWVcIlxuICAgICAgICAgICAgICAgIDogXCJkYXRldGltZS1sb2NhbFwiXG4gICAgICAgICAgICA6IFwiZGF0ZVwiO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0ID0gY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHNlbGYuaW5wdXQuY2xhc3NOYW1lICsgXCIgZmxhdHBpY2tyLW1vYmlsZVwiKTtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC50YWJJbmRleCA9IDE7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQudHlwZSA9IGlucHV0VHlwZTtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5kaXNhYmxlZCA9IHNlbGYuaW5wdXQuZGlzYWJsZWQ7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQucmVxdWlyZWQgPSBzZWxmLmlucHV0LnJlcXVpcmVkO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnBsYWNlaG9sZGVyID0gc2VsZi5pbnB1dC5wbGFjZWhvbGRlcjtcbiAgICAgICAgc2VsZi5tb2JpbGVGb3JtYXRTdHIgPVxuICAgICAgICAgICAgaW5wdXRUeXBlID09PSBcImRhdGV0aW1lLWxvY2FsXCJcbiAgICAgICAgICAgICAgICA/IFwiWS1tLWRcXFxcVEg6aTpTXCJcbiAgICAgICAgICAgICAgICA6IGlucHV0VHlwZSA9PT0gXCJkYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgPyBcIlktbS1kXCJcbiAgICAgICAgICAgICAgICAgICAgOiBcIkg6aTpTXCI7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5kZWZhdWx0VmFsdWUgPSBzZWxmLm1vYmlsZUlucHV0LnZhbHVlID0gc2VsZi5mb3JtYXREYXRlKHNlbGYuc2VsZWN0ZWREYXRlc1swXSwgc2VsZi5tb2JpbGVGb3JtYXRTdHIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5taW5EYXRlKVxuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5taW4gPSBzZWxmLmZvcm1hdERhdGUoc2VsZi5jb25maWcubWluRGF0ZSwgXCJZLW0tZFwiKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1heERhdGUpXG4gICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0Lm1heCA9IHNlbGYuZm9ybWF0RGF0ZShzZWxmLmNvbmZpZy5tYXhEYXRlLCBcIlktbS1kXCIpO1xuICAgICAgICBpZiAoc2VsZi5pbnB1dC5nZXRBdHRyaWJ1dGUoXCJzdGVwXCIpKVxuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5zdGVwID0gU3RyaW5nKHNlbGYuaW5wdXQuZ2V0QXR0cmlidXRlKFwic3RlcFwiKSk7XG4gICAgICAgIHNlbGYuaW5wdXQudHlwZSA9IFwiaGlkZGVuXCI7XG4gICAgICAgIGlmIChzZWxmLmFsdElucHV0ICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnR5cGUgPSBcImhpZGRlblwiO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHNlbGYuaW5wdXQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICBzZWxmLmlucHV0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNlbGYubW9iaWxlSW5wdXQsIHNlbGYuaW5wdXQubmV4dFNpYmxpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkgeyB9XG4gICAgICAgIGJpbmQoc2VsZi5tb2JpbGVJbnB1dCwgXCJjaGFuZ2VcIiwgKGUpID0+IHtcbiAgICAgICAgICAgIHNlbGYuc2V0RGF0ZShnZXRFdmVudFRhcmdldChlKS52YWx1ZSwgZmFsc2UsIHNlbGYubW9iaWxlRm9ybWF0U3RyKTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2hhbmdlXCIpO1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DbG9zZVwiKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRvZ2dsZShlKSB7XG4gICAgICAgIGlmIChzZWxmLmlzT3BlbiA9PT0gdHJ1ZSlcbiAgICAgICAgICAgIHJldHVybiBzZWxmLmNsb3NlKCk7XG4gICAgICAgIHNlbGYub3BlbihlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHJpZ2dlckV2ZW50KGV2ZW50LCBkYXRhKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZyA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBob29rcyA9IHNlbGYuY29uZmlnW2V2ZW50XTtcbiAgICAgICAgaWYgKGhvb2tzICE9PSB1bmRlZmluZWQgJiYgaG9va3MubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGhvb2tzW2ldICYmIGkgPCBob29rcy5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgICAgICBob29rc1tpXShzZWxmLnNlbGVjdGVkRGF0ZXMsIHNlbGYuaW5wdXQudmFsdWUsIHNlbGYsIGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChldmVudCA9PT0gXCJvbkNoYW5nZVwiKSB7XG4gICAgICAgICAgICBzZWxmLmlucHV0LmRpc3BhdGNoRXZlbnQoY3JlYXRlRXZlbnQoXCJjaGFuZ2VcIikpO1xuICAgICAgICAgICAgc2VsZi5pbnB1dC5kaXNwYXRjaEV2ZW50KGNyZWF0ZUV2ZW50KFwiaW5wdXRcIikpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZUV2ZW50KG5hbWUpIHtcbiAgICAgICAgY29uc3QgZSA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiRXZlbnRcIik7XG4gICAgICAgIGUuaW5pdEV2ZW50KG5hbWUsIHRydWUsIHRydWUpO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNEYXRlU2VsZWN0ZWQoZGF0ZSkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGNvbXBhcmVEYXRlcyhzZWxmLnNlbGVjdGVkRGF0ZXNbaV0sIGRhdGUpID09PSAwKVxuICAgICAgICAgICAgICAgIHJldHVybiBcIlwiICsgaTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGlzRGF0ZUluUmFuZ2UoZGF0ZSkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSAhPT0gXCJyYW5nZVwiIHx8IHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPCAyKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICByZXR1cm4gKGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0pID49IDAgJiZcbiAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMV0pIDw9IDApO1xuICAgIH1cbiAgICBmdW5jdGlvbiB1cGRhdGVOYXZpZ2F0aW9uQ3VycmVudE1vbnRoKCkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubm9DYWxlbmRhciB8fCBzZWxmLmlzTW9iaWxlIHx8ICFzZWxmLm1vbnRoTmF2KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZWxmLnllYXJFbGVtZW50cy5mb3JFYWNoKCh5ZWFyRWxlbWVudCwgaSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZCA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIHNlbGYuY3VycmVudE1vbnRoLCAxKTtcbiAgICAgICAgICAgIGQuc2V0TW9udGgoc2VsZi5jdXJyZW50TW9udGggKyBpKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSB8fFxuICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vbnRoU2VsZWN0b3JUeXBlID09PSBcInN0YXRpY1wiKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5tb250aEVsZW1lbnRzW2ldLnRleHRDb250ZW50ID1cbiAgICAgICAgICAgICAgICAgICAgbW9udGhUb1N0cihkLmdldE1vbnRoKCksIHNlbGYuY29uZmlnLnNob3J0aGFuZEN1cnJlbnRNb250aCwgc2VsZi5sMTBuKSArIFwiIFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci52YWx1ZSA9IGQuZ2V0TW9udGgoKS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeWVhckVsZW1lbnQudmFsdWUgPSBkLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuX2hpZGVQcmV2TW9udGhBcnJvdyA9XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5EYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jdXJyZW50TW9udGggPD0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jdXJyZW50WWVhciA8IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgICAgIHNlbGYuX2hpZGVOZXh0TW9udGhBcnJvdyA9XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tYXhEYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jdXJyZW50TW9udGggKyAxID4gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jdXJyZW50WWVhciA+IHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldERhdGVTdHIoZm9ybWF0KSB7XG4gICAgICAgIHJldHVybiBzZWxmLnNlbGVjdGVkRGF0ZXNcbiAgICAgICAgICAgIC5tYXAoKGRPYmopID0+IHNlbGYuZm9ybWF0RGF0ZShkT2JqLCBmb3JtYXQpKVxuICAgICAgICAgICAgLmZpbHRlcigoZCwgaSwgYXJyKSA9PiBzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCIgfHxcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVuYWJsZVRpbWUgfHxcbiAgICAgICAgICAgIGFyci5pbmRleE9mKGQpID09PSBpKVxuICAgICAgICAgICAgLmpvaW4oc2VsZi5jb25maWcubW9kZSAhPT0gXCJyYW5nZVwiXG4gICAgICAgICAgICA/IHNlbGYuY29uZmlnLmNvbmp1bmN0aW9uXG4gICAgICAgICAgICA6IHNlbGYubDEwbi5yYW5nZVNlcGFyYXRvcik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZVZhbHVlKHRyaWdnZXJDaGFuZ2UgPSB0cnVlKSB7XG4gICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0ICE9PSB1bmRlZmluZWQgJiYgc2VsZi5tb2JpbGVGb3JtYXRTdHIpIHtcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQudmFsdWUgPVxuICAgICAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmZvcm1hdERhdGUoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmosIHNlbGYubW9iaWxlRm9ybWF0U3RyKVxuICAgICAgICAgICAgICAgICAgICA6IFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSA9IGdldERhdGVTdHIoc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgIGlmIChzZWxmLmFsdElucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudmFsdWUgPSBnZXREYXRlU3RyKHNlbGYuY29uZmlnLmFsdEZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2UgIT09IGZhbHNlKVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25WYWx1ZVVwZGF0ZVwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25Nb250aE5hdkNsaWNrKGUpIHtcbiAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgY29uc3QgaXNQcmV2TW9udGggPSBzZWxmLnByZXZNb250aE5hdi5jb250YWlucyhldmVudFRhcmdldCk7XG4gICAgICAgIGNvbnN0IGlzTmV4dE1vbnRoID0gc2VsZi5uZXh0TW9udGhOYXYuY29udGFpbnMoZXZlbnRUYXJnZXQpO1xuICAgICAgICBpZiAoaXNQcmV2TW9udGggfHwgaXNOZXh0TW9udGgpIHtcbiAgICAgICAgICAgIGNoYW5nZU1vbnRoKGlzUHJldk1vbnRoID8gLTEgOiAxKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWxmLnllYXJFbGVtZW50cy5pbmRleE9mKGV2ZW50VGFyZ2V0KSA+PSAwKSB7XG4gICAgICAgICAgICBldmVudFRhcmdldC5zZWxlY3QoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChldmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJhcnJvd1VwXCIpKSB7XG4gICAgICAgICAgICBzZWxmLmNoYW5nZVllYXIoc2VsZi5jdXJyZW50WWVhciArIDEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV2ZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImFycm93RG93blwiKSkge1xuICAgICAgICAgICAgc2VsZi5jaGFuZ2VZZWFyKHNlbGYuY3VycmVudFllYXIgLSAxKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0aW1lV3JhcHBlcihlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgY29uc3QgaXNLZXlEb3duID0gZS50eXBlID09PSBcImtleWRvd25cIiwgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKSwgaW5wdXQgPSBldmVudFRhcmdldDtcbiAgICAgICAgaWYgKHNlbGYuYW1QTSAhPT0gdW5kZWZpbmVkICYmIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFtUE0pIHtcbiAgICAgICAgICAgIHNlbGYuYW1QTS50ZXh0Q29udGVudCA9XG4gICAgICAgICAgICAgICAgc2VsZi5sMTBuLmFtUE1baW50KHNlbGYuYW1QTS50ZXh0Q29udGVudCA9PT0gc2VsZi5sMTBuLmFtUE1bMF0pXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtaW4gPSBwYXJzZUZsb2F0KGlucHV0LmdldEF0dHJpYnV0ZShcIm1pblwiKSksIG1heCA9IHBhcnNlRmxvYXQoaW5wdXQuZ2V0QXR0cmlidXRlKFwibWF4XCIpKSwgc3RlcCA9IHBhcnNlRmxvYXQoaW5wdXQuZ2V0QXR0cmlidXRlKFwic3RlcFwiKSksIGN1clZhbHVlID0gcGFyc2VJbnQoaW5wdXQudmFsdWUsIDEwKSwgZGVsdGEgPSBlLmRlbHRhIHx8XG4gICAgICAgICAgICAoaXNLZXlEb3duID8gKGUud2hpY2ggPT09IDM4ID8gMSA6IC0xKSA6IDApO1xuICAgICAgICBsZXQgbmV3VmFsdWUgPSBjdXJWYWx1ZSArIHN0ZXAgKiBkZWx0YTtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dC52YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpbnB1dC52YWx1ZS5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIGNvbnN0IGlzSG91ckVsZW0gPSBpbnB1dCA9PT0gc2VsZi5ob3VyRWxlbWVudCwgaXNNaW51dGVFbGVtID0gaW5wdXQgPT09IHNlbGYubWludXRlRWxlbWVudDtcbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA8IG1pbikge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlID1cbiAgICAgICAgICAgICAgICAgICAgbWF4ICtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGludCghaXNIb3VyRWxlbSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKGludChpc0hvdXJFbGVtKSAmJiBpbnQoIXNlbGYuYW1QTSkpO1xuICAgICAgICAgICAgICAgIGlmIChpc01pbnV0ZUVsZW0pXG4gICAgICAgICAgICAgICAgICAgIGluY3JlbWVudE51bUlucHV0KHVuZGVmaW5lZCwgLTEsIHNlbGYuaG91ckVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobmV3VmFsdWUgPiBtYXgpIHtcbiAgICAgICAgICAgICAgICBuZXdWYWx1ZSA9XG4gICAgICAgICAgICAgICAgICAgIGlucHV0ID09PSBzZWxmLmhvdXJFbGVtZW50ID8gbmV3VmFsdWUgLSBtYXggLSBpbnQoIXNlbGYuYW1QTSkgOiBtaW47XG4gICAgICAgICAgICAgICAgaWYgKGlzTWludXRlRWxlbSlcbiAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50TnVtSW5wdXQodW5kZWZpbmVkLCAxLCBzZWxmLmhvdXJFbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLmFtUE0gJiZcbiAgICAgICAgICAgICAgICBpc0hvdXJFbGVtICYmXG4gICAgICAgICAgICAgICAgKHN0ZXAgPT09IDFcbiAgICAgICAgICAgICAgICAgICAgPyBuZXdWYWx1ZSArIGN1clZhbHVlID09PSAyM1xuICAgICAgICAgICAgICAgICAgICA6IE1hdGguYWJzKG5ld1ZhbHVlIC0gY3VyVmFsdWUpID4gc3RlcCkpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmwxMG4uYW1QTVtpbnQoc2VsZi5hbVBNLnRleHRDb250ZW50ID09PSBzZWxmLmwxMG4uYW1QTVswXSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBwYWQobmV3VmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGluaXQoKTtcbiAgICByZXR1cm4gc2VsZjtcbn1cbmZ1bmN0aW9uIF9mbGF0cGlja3Iobm9kZUxpc3QsIGNvbmZpZykge1xuICAgIGNvbnN0IG5vZGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlXG4gICAgICAgIC5jYWxsKG5vZGVMaXN0KVxuICAgICAgICAuZmlsdGVyKCh4KSA9PiB4IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpO1xuICAgIGNvbnN0IGluc3RhbmNlcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1mcC1vbWl0XCIpICE9PSBudWxsKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKG5vZGUuX2ZsYXRwaWNrciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbm9kZS5fZmxhdHBpY2tyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICBub2RlLl9mbGF0cGlja3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBub2RlLl9mbGF0cGlja3IgPSBGbGF0cGlja3JJbnN0YW5jZShub2RlLCBjb25maWcgfHwge30pO1xuICAgICAgICAgICAgaW5zdGFuY2VzLnB1c2gobm9kZS5fZmxhdHBpY2tyKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaW5zdGFuY2VzLmxlbmd0aCA9PT0gMSA/IGluc3RhbmNlc1swXSA6IGluc3RhbmNlcztcbn1cbmlmICh0eXBlb2YgSFRNTEVsZW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgSFRNTENvbGxlY3Rpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgTm9kZUxpc3QgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUuZmxhdHBpY2tyID0gTm9kZUxpc3QucHJvdG90eXBlLmZsYXRwaWNrciA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3IodGhpcywgY29uZmlnKTtcbiAgICB9O1xuICAgIEhUTUxFbGVtZW50LnByb3RvdHlwZS5mbGF0cGlja3IgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHJldHVybiBfZmxhdHBpY2tyKFt0aGlzXSwgY29uZmlnKTtcbiAgICB9O1xufVxudmFyIGZsYXRwaWNrciA9IGZ1bmN0aW9uIChzZWxlY3RvciwgY29uZmlnKSB7XG4gICAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcih3aW5kb3cuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvciksIGNvbmZpZyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgTm9kZSkge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcihbc2VsZWN0b3JdLCBjb25maWcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3Ioc2VsZWN0b3IsIGNvbmZpZyk7XG4gICAgfVxufTtcbmZsYXRwaWNrci5kZWZhdWx0Q29uZmlnID0ge307XG5mbGF0cGlja3IubDEwbnMgPSB7XG4gICAgZW46IE9iamVjdC5hc3NpZ24oe30sIEVuZ2xpc2gpLFxuICAgIGRlZmF1bHQ6IE9iamVjdC5hc3NpZ24oe30sIEVuZ2xpc2gpLFxufTtcbmZsYXRwaWNrci5sb2NhbGl6ZSA9IChsMTBuKSA9PiB7XG4gICAgZmxhdHBpY2tyLmwxMG5zLmRlZmF1bHQgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGZsYXRwaWNrci5sMTBucy5kZWZhdWx0KSwgbDEwbik7XG59O1xuZmxhdHBpY2tyLnNldERlZmF1bHRzID0gKGNvbmZpZykgPT4ge1xuICAgIGZsYXRwaWNrci5kZWZhdWx0Q29uZmlnID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBmbGF0cGlja3IuZGVmYXVsdENvbmZpZyksIGNvbmZpZyk7XG59O1xuZmxhdHBpY2tyLnBhcnNlRGF0ZSA9IGNyZWF0ZURhdGVQYXJzZXIoe30pO1xuZmxhdHBpY2tyLmZvcm1hdERhdGUgPSBjcmVhdGVEYXRlRm9ybWF0dGVyKHt9KTtcbmZsYXRwaWNrci5jb21wYXJlRGF0ZXMgPSBjb21wYXJlRGF0ZXM7XG5pZiAodHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgalF1ZXJ5LmZuICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgalF1ZXJ5LmZuLmZsYXRwaWNrciA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3IodGhpcywgY29uZmlnKTtcbiAgICB9O1xufVxuRGF0ZS5wcm90b3R5cGUuZnBfaW5jciA9IGZ1bmN0aW9uIChkYXlzKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMuZ2V0RnVsbFllYXIoKSwgdGhpcy5nZXRNb250aCgpLCB0aGlzLmdldERhdGUoKSArICh0eXBlb2YgZGF5cyA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlSW50KGRheXMsIDEwKSA6IGRheXMpKTtcbn07XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHdpbmRvdy5mbGF0cGlja3IgPSBmbGF0cGlja3I7XG59XG5leHBvcnQgZGVmYXVsdCBmbGF0cGlja3I7XG4iLCJpbXBvcnQgZmxhdHBpY2tyIGZyb20gXCJmbGF0cGlja3JcIjtcclxuXHJcbmZsYXRwaWNrcihcIi5mb3JtX19kYXRlXCIsIHtcclxuICAgIGRhdGVGb3JtYXQ6IFwiZC1tLVlcIixcclxuICAgIGRpc2FibGVNb2JpbGU6IFwidHJ1ZVwiLFxyXG59KTtcclxuXHJcbmZsYXRwaWNrcihcIi5mb3JtX190aW1lXCIsIHtcclxuICBlbmFibGVUaW1lOiB0cnVlLFxyXG4gIG5vQ2FsZW5kYXI6IHRydWUsXHJcbiAgZGF0ZUZvcm1hdDogXCJILWlcIixcclxuICBkaXNhYmxlTW9iaWxlOiBcInRydWVcIixcclxufSk7XHJcbiIsIi8vIFBvbHlmaWxsIGZvciBjcmVhdGluZyBDdXN0b21FdmVudHMgb24gSUU5LzEwLzExXG5cbi8vIGNvZGUgcHVsbGVkIGZyb206XG4vLyBodHRwczovL2dpdGh1Yi5jb20vZDR0b2NjaGluaS9jdXN0b21ldmVudC1wb2x5ZmlsbFxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0N1c3RvbUV2ZW50I1BvbHlmaWxsXG5cbnRyeSB7XG4gICAgdmFyIGNlID0gbmV3IHdpbmRvdy5DdXN0b21FdmVudCgndGVzdCcpO1xuICAgIGNlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKGNlLmRlZmF1bHRQcmV2ZW50ZWQgIT09IHRydWUpIHtcbiAgICAgICAgLy8gSUUgaGFzIHByb2JsZW1zIHdpdGggLnByZXZlbnREZWZhdWx0KCkgb24gY3VzdG9tIGV2ZW50c1xuICAgICAgICAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIzMzQ5MTkxXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IHByZXZlbnQgZGVmYXVsdCcpO1xuICAgIH1cbn0gY2F0Y2goZSkge1xuICB2YXIgQ3VzdG9tRXZlbnQgPSBmdW5jdGlvbihldmVudCwgcGFyYW1zKSB7XG4gICAgdmFyIGV2dCwgb3JpZ1ByZXZlbnQ7XG4gICAgcGFyYW1zID0gcGFyYW1zIHx8IHtcbiAgICAgIGJ1YmJsZXM6IGZhbHNlLFxuICAgICAgY2FuY2VsYWJsZTogZmFsc2UsXG4gICAgICBkZXRhaWw6IHVuZGVmaW5lZFxuICAgIH07XG5cbiAgICBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO1xuICAgIGV2dC5pbml0Q3VzdG9tRXZlbnQoZXZlbnQsIHBhcmFtcy5idWJibGVzLCBwYXJhbXMuY2FuY2VsYWJsZSwgcGFyYW1zLmRldGFpbCk7XG4gICAgb3JpZ1ByZXZlbnQgPSBldnQucHJldmVudERlZmF1bHQ7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgb3JpZ1ByZXZlbnQuY2FsbCh0aGlzKTtcbiAgICAgIHRyeSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAnZGVmYXVsdFByZXZlbnRlZCcsIHtcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoKGUpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0UHJldmVudGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBldnQ7XG4gIH07XG5cbiAgQ3VzdG9tRXZlbnQucHJvdG90eXBlID0gd2luZG93LkV2ZW50LnByb3RvdHlwZTtcbiAgd2luZG93LkN1c3RvbUV2ZW50ID0gQ3VzdG9tRXZlbnQ7IC8vIGV4cG9zZSBkZWZpbml0aW9uIHRvIHdpbmRvd1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7IC8qKlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBjdXN0b20tc2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIEEgbGlnaHR3ZWlnaHQgSlMgc2NyaXB0IGZvciBjdXN0b20gc2VsZWN0IGNyZWF0aW9uLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBOZWVkcyBubyBkZXBlbmRlbmNpZXMuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIHYwLjAuMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiAoaHR0cHM6Ly9naXRodWIuY29tL2N1c3RvbS1zZWxlY3QvY3VzdG9tLXNlbGVjdClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogQ29weXJpZ2h0IChjKSAyMDE2IEdpb25hdGFuIExvbWJhcmRpICYgTWFyY28gTnVjYXJhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIE1JVCBMaWNlbnNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuXG5leHBvcnRzLmRlZmF1bHQgPSBjdXN0b21TZWxlY3Q7XG5cbnJlcXVpcmUoJ2N1c3RvbS1ldmVudC1wb2x5ZmlsbCcpO1xuXG52YXIgZGVmYXVsdFBhcmFtcyA9IHtcbiAgY29udGFpbmVyQ2xhc3M6ICdjdXN0b20tc2VsZWN0LWNvbnRhaW5lcicsXG4gIG9wZW5lckNsYXNzOiAnY3VzdG9tLXNlbGVjdC1vcGVuZXInLFxuICBwYW5lbENsYXNzOiAnY3VzdG9tLXNlbGVjdC1wYW5lbCcsXG4gIG9wdGlvbkNsYXNzOiAnY3VzdG9tLXNlbGVjdC1vcHRpb24nLFxuICBvcHRncm91cENsYXNzOiAnY3VzdG9tLXNlbGVjdC1vcHRncm91cCcsXG4gIGlzU2VsZWN0ZWRDbGFzczogJ2lzLXNlbGVjdGVkJyxcbiAgaGFzRm9jdXNDbGFzczogJ2hhcy1mb2N1cycsXG4gIGlzRGlzYWJsZWRDbGFzczogJ2lzLWRpc2FibGVkJyxcbiAgaXNPcGVuQ2xhc3M6ICdpcy1vcGVuJ1xufTtcblxuZnVuY3Rpb24gYnVpbGRlcihlbCwgYnVpbGRlclBhcmFtcykge1xuICB2YXIgY29udGFpbmVyQ2xhc3MgPSAnY3VzdG9tU2VsZWN0JztcbiAgdmFyIGlzT3BlbiA9IGZhbHNlO1xuICB2YXIgdUlkID0gJyc7XG4gIHZhciBzZWxlY3QgPSBlbDtcbiAgdmFyIGNvbnRhaW5lciA9IHZvaWQgMDtcbiAgdmFyIG9wZW5lciA9IHZvaWQgMDtcbiAgdmFyIGZvY3VzZWRFbGVtZW50ID0gdm9pZCAwO1xuICB2YXIgc2VsZWN0ZWRFbGVtZW50ID0gdm9pZCAwO1xuICB2YXIgcGFuZWwgPSB2b2lkIDA7XG4gIHZhciBjdXJyTGFiZWwgPSB2b2lkIDA7XG5cbiAgdmFyIHJlc2V0U2VhcmNoVGltZW91dCA9IHZvaWQgMDtcbiAgdmFyIHNlYXJjaEtleSA9ICcnO1xuXG4gIC8vXG4gIC8vIElubmVyIEZ1bmN0aW9uc1xuICAvL1xuXG4gIC8vIFNldHMgdGhlIGZvY3VzZWQgZWxlbWVudCB3aXRoIHRoZSBuZWNjZXNzYXJ5IGNsYXNzZXMgc3Vic3RpdHV0aW9uc1xuICBmdW5jdGlvbiBzZXRGb2N1c2VkRWxlbWVudChjc3RPcHRpb24pIHtcbiAgICBpZiAoZm9jdXNlZEVsZW1lbnQpIHtcbiAgICAgIGZvY3VzZWRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoYnVpbGRlclBhcmFtcy5oYXNGb2N1c0NsYXNzKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjc3RPcHRpb24gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBmb2N1c2VkRWxlbWVudCA9IGNzdE9wdGlvbjtcbiAgICAgIGZvY3VzZWRFbGVtZW50LmNsYXNzTGlzdC5hZGQoYnVpbGRlclBhcmFtcy5oYXNGb2N1c0NsYXNzKTtcbiAgICAgIC8vIE9mZnNldCB1cGRhdGU6IGNoZWNrcyBpZiB0aGUgZm9jdXNlZCBlbGVtZW50IGlzIGluIHRoZSB2aXNpYmxlIHBhcnQgb2YgdGhlIHBhbmVsQ2xhc3NcbiAgICAgIC8vIGlmIG5vdCBkaXNwYXRjaGVzIGEgY3VzdG9tIGV2ZW50XG4gICAgICBpZiAoaXNPcGVuKSB7XG4gICAgICAgIGlmIChjc3RPcHRpb24ub2Zmc2V0VG9wIDwgY3N0T3B0aW9uLm9mZnNldFBhcmVudC5zY3JvbGxUb3AgfHwgY3N0T3B0aW9uLm9mZnNldFRvcCA+IGNzdE9wdGlvbi5vZmZzZXRQYXJlbnQuc2Nyb2xsVG9wICsgY3N0T3B0aW9uLm9mZnNldFBhcmVudC5jbGllbnRIZWlnaHQgLSBjc3RPcHRpb24uY2xpZW50SGVpZ2h0KSB7XG4gICAgICAgICAgY3N0T3B0aW9uLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdjdXN0b20tc2VsZWN0OmZvY3VzLW91dHNpZGUtcGFuZWwnLCB7IGJ1YmJsZXM6IHRydWUgfSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvY3VzZWRFbGVtZW50ID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuXG4gIC8vIFJlYXNzaWducyB0aGUgZm9jdXNlZCBhbmQgc2VsZWN0ZWQgY3VzdG9tIG9wdGlvblxuICAvLyBVcGRhdGVzIHRoZSBvcGVuZXIgdGV4dFxuICAvLyBJTVBPUlRBTlQ6IHRoZSBzZXRTZWxlY3RlZEVsZW1lbnQgZnVuY3Rpb24gZG9lc24ndCBjaGFuZ2UgdGhlIHNlbGVjdCB2YWx1ZSFcbiAgZnVuY3Rpb24gc2V0U2VsZWN0ZWRFbGVtZW50KGNzdE9wdGlvbikge1xuICAgIGlmIChzZWxlY3RlZEVsZW1lbnQpIHtcbiAgICAgIHNlbGVjdGVkRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGJ1aWxkZXJQYXJhbXMuaXNTZWxlY3RlZENsYXNzKTtcbiAgICAgIHNlbGVjdGVkRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICBvcGVuZXIucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWFjdGl2ZWRlc2NlbmRhbnQnKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjc3RPcHRpb24gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjc3RPcHRpb24uY2xhc3NMaXN0LmFkZChidWlsZGVyUGFyYW1zLmlzU2VsZWN0ZWRDbGFzcyk7XG4gICAgICBjc3RPcHRpb24uc2V0QXR0cmlidXRlKCdpZCcsIGNvbnRhaW5lckNsYXNzICsgJy0nICsgdUlkICsgJy1zZWxlY3RlZE9wdGlvbicpO1xuICAgICAgb3BlbmVyLnNldEF0dHJpYnV0ZSgnYXJpYS1hY3RpdmVkZXNjZW5kYW50JywgY29udGFpbmVyQ2xhc3MgKyAnLScgKyB1SWQgKyAnLXNlbGVjdGVkT3B0aW9uJyk7XG4gICAgICBzZWxlY3RlZEVsZW1lbnQgPSBjc3RPcHRpb247XG4gICAgICBvcGVuZXIuY2hpbGRyZW5bMF0udGV4dENvbnRlbnQgPSBzZWxlY3RlZEVsZW1lbnQuY3VzdG9tU2VsZWN0T3JpZ2luYWxPcHRpb24udGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0ZWRFbGVtZW50ID0gdW5kZWZpbmVkO1xuICAgICAgb3BlbmVyLmNoaWxkcmVuWzBdLnRleHRDb250ZW50ID0gJyc7XG4gICAgfVxuICAgIHNldEZvY3VzZWRFbGVtZW50KGNzdE9wdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRWYWx1ZSh2YWx1ZSkge1xuICAgIC8vIEdldHMgdGhlIG9wdGlvbiB3aXRoIHRoZSBwcm92aWRlZCB2YWx1ZVxuICAgIHZhciB0b1NlbGVjdCA9IHNlbGVjdC5xdWVyeVNlbGVjdG9yKCdvcHRpb25bdmFsdWU9XFwnJyArIHZhbHVlICsgJ1xcJ10nKTtcbiAgICAvLyBJZiBubyBvcHRpb24gaGFzIHRoZSBwcm92aWRlZCB2YWx1ZSBnZXQgdGhlIGZpcnN0XG4gICAgaWYgKCF0b1NlbGVjdCkge1xuICAgICAgdmFyIF9zZWxlY3Qkb3B0aW9ucyA9IF9zbGljZWRUb0FycmF5KHNlbGVjdC5vcHRpb25zLCAxKTtcblxuICAgICAgdG9TZWxlY3QgPSBfc2VsZWN0JG9wdGlvbnNbMF07XG4gICAgfVxuICAgIC8vIFRoZSBvcHRpb24gd2l0aCB0aGUgcHJvdmlkZWQgdmFsdWUgYmVjb21lcyB0aGUgc2VsZWN0ZWQgb25lXG4gICAgLy8gQW5kIGNoYW5nZXMgdGhlIHNlbGVjdCBjdXJyZW50IHZhbHVlXG4gICAgdG9TZWxlY3Quc2VsZWN0ZWQgPSB0cnVlO1xuXG4gICAgc2V0U2VsZWN0ZWRFbGVtZW50KHNlbGVjdC5vcHRpb25zW3NlbGVjdC5zZWxlY3RlZEluZGV4XS5jdXN0b21TZWxlY3RDc3RPcHRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gbW92ZUZvY3Vlc2VkRWxlbWVudChkaXJlY3Rpb24pIHtcbiAgICAvLyBHZXQgYWxsIHRoZSAuY3VzdG9tLXNlbGVjdC1vcHRpb25zXG4gICAgLy8gR2V0IHRoZSBpbmRleCBvZiB0aGUgY3VycmVudCBmb2N1c2VkIG9uZVxuICAgIHZhciBjdXJyZW50Rm9jdXNlZEluZGV4ID0gW10uaW5kZXhPZi5jYWxsKHNlbGVjdC5vcHRpb25zLCBmb2N1c2VkRWxlbWVudC5jdXN0b21TZWxlY3RPcmlnaW5hbE9wdGlvbik7XG4gICAgLy8gSWYgdGhlIG5leHQgb3IgcHJldiBjdXN0b20gb3B0aW9uIGV4aXN0XG4gICAgLy8gU2V0cyBpdCBhcyB0aGUgbmV3IGZvY3VzZWQgb25lXG4gICAgaWYgKHNlbGVjdC5vcHRpb25zW2N1cnJlbnRGb2N1c2VkSW5kZXggKyBkaXJlY3Rpb25dKSB7XG4gICAgICBzZXRGb2N1c2VkRWxlbWVudChzZWxlY3Qub3B0aW9uc1tjdXJyZW50Rm9jdXNlZEluZGV4ICsgZGlyZWN0aW9uXS5jdXN0b21TZWxlY3RDc3RPcHRpb24pO1xuICAgIH1cbiAgfVxuXG4gIC8vIE9wZW4vQ2xvc2UgZnVuY3Rpb24gKHRvZ2dsZSlcbiAgZnVuY3Rpb24gb3Blbihib29sKSB7XG4gICAgLy8gT3BlblxuICAgIGlmIChib29sIHx8IHR5cGVvZiBib29sID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gSWYgcHJlc2VudCBjbG9zZXMgYW4gb3BlbmVkIGluc3RhbmNlIG9mIHRoZSBwbHVnaW5cbiAgICAgIC8vIE9ubHkgb25lIGF0IHRpbWUgY2FuIGJlIG9wZW5cbiAgICAgIHZhciBvcGVuZWRDdXN0b21TZWxlY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuJyArIGNvbnRhaW5lckNsYXNzICsgJy4nICsgYnVpbGRlclBhcmFtcy5pc09wZW5DbGFzcyk7XG4gICAgICBpZiAob3BlbmVkQ3VzdG9tU2VsZWN0KSB7XG4gICAgICAgIG9wZW5lZEN1c3RvbVNlbGVjdC5jdXN0b21TZWxlY3Qub3BlbiA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICAvLyBPcGVucyBvbmx5IHRoZSBjbGlja2VkIG9uZVxuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoYnVpbGRlclBhcmFtcy5pc09wZW5DbGFzcyk7XG5cbiAgICAgIC8vIGFyaWEtZXhwYW5kZWQgdXBkYXRlXG4gICAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZChidWlsZGVyUGFyYW1zLmlzT3BlbkNsYXNzKTtcbiAgICAgIG9wZW5lci5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAndHJ1ZScpO1xuXG4gICAgICAvLyBVcGRhdGVzIHRoZSBzY3JvbGxUb3AgcG9zaXRpb24gb2YgdGhlIHBhbmVsIGluIHJlbGF0aW9uIHdpdGggdGhlIGZvY3VzZWQgb3B0aW9uXG4gICAgICBpZiAoc2VsZWN0ZWRFbGVtZW50KSB7XG4gICAgICAgIHBhbmVsLnNjcm9sbFRvcCA9IHNlbGVjdGVkRWxlbWVudC5vZmZzZXRUb3A7XG4gICAgICB9XG5cbiAgICAgIC8vIERpc3BhdGNoZXMgdGhlIGN1c3RvbSBldmVudCBvcGVuXG4gICAgICBjb250YWluZXIuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2N1c3RvbS1zZWxlY3Q6b3BlbicpKTtcblxuICAgICAgLy8gU2V0cyB0aGUgZ2xvYmFsIHN0YXRlXG4gICAgICBpc09wZW4gPSB0cnVlO1xuXG4gICAgICAvLyBDbG9zZVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZW1vdmVzIHRoZSBjc3MgY2xhc3Nlc1xuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoYnVpbGRlclBhcmFtcy5pc09wZW5DbGFzcyk7XG5cbiAgICAgIC8vIGFyaWEtZXhwYW5kZWQgdXBkYXRlXG4gICAgICBvcGVuZXIuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyk7XG5cbiAgICAgIC8vIFNldHMgdGhlIGdsb2JhbCBzdGF0ZVxuICAgICAgaXNPcGVuID0gZmFsc2U7XG5cbiAgICAgIC8vIFdoZW4gY2xvc2luZyB0aGUgcGFuZWwgdGhlIGZvY3VzZWQgY3VzdG9tIG9wdGlvbiBtdXN0IGJlIHRoZSBzZWxlY3RlZCBvbmVcbiAgICAgIHNldEZvY3VzZWRFbGVtZW50KHNlbGVjdGVkRWxlbWVudCk7XG5cbiAgICAgIC8vIERpc3BhdGNoZXMgdGhlIGN1c3RvbSBldmVudCBjbG9zZVxuICAgICAgY29udGFpbmVyLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdjdXN0b20tc2VsZWN0OmNsb3NlJykpO1xuICAgIH1cbiAgICByZXR1cm4gaXNPcGVuO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xpY2tFdmVudChlKSB7XG4gICAgLy8gT3BlbmVyIGNsaWNrXG4gICAgaWYgKGUudGFyZ2V0ID09PSBvcGVuZXIgfHwgb3BlbmVyLmNvbnRhaW5zKGUudGFyZ2V0KSkge1xuICAgICAgaWYgKGlzT3Blbikge1xuICAgICAgICBvcGVuKGZhbHNlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9wZW4oKTtcbiAgICAgIH1cbiAgICAgIC8vIEN1c3RvbSBPcHRpb24gY2xpY2tcbiAgICB9IGVsc2UgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdCAmJiBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYnVpbGRlclBhcmFtcy5vcHRpb25DbGFzcykgJiYgcGFuZWwuY29udGFpbnMoZS50YXJnZXQpKSB7XG4gICAgICBzZXRTZWxlY3RlZEVsZW1lbnQoZS50YXJnZXQpO1xuICAgICAgLy8gU2V0cyB0aGUgY29ycmlzcG9uZGluZyBzZWxlY3QncyBvcHRpb24gdG8gc2VsZWN0ZWQgdXBkYXRpbmcgdGhlIHNlbGVjdCdzIHZhbHVlIHRvb1xuICAgICAgc2VsZWN0ZWRFbGVtZW50LmN1c3RvbVNlbGVjdE9yaWdpbmFsT3B0aW9uLnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgIG9wZW4oZmFsc2UpO1xuICAgICAgLy8gVHJpZ2dlcnMgdGhlIG5hdGl2ZSBjaGFuZ2UgZXZlbnQgb2YgdGhlIHNlbGVjdFxuICAgICAgc2VsZWN0LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdjaGFuZ2UnKSk7XG4gICAgICAvLyBjbGljayBvbiBsYWJlbCBvciBzZWxlY3QgKGNsaWNrIG9uIGxhYmVsIGNvcnJpc3BvbmQgdG8gc2VsZWN0IGNsaWNrKVxuICAgIH0gZWxzZSBpZiAoZS50YXJnZXQgPT09IHNlbGVjdCkge1xuICAgICAgLy8gaWYgdGhlIG9yaWdpbmFsIHNlbGVjdCBpcyBmb2N1c2FibGUgKGZvciBhbnkgZXh0ZXJuYWwgcmVhc29uKSBsZXQgdGhlIGZvY3VzXG4gICAgICAvLyBlbHNlIHRyaWdnZXIgdGhlIGZvY3VzIG9uIG9wZW5lclxuICAgICAgaWYgKG9wZW5lciAhPT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiBzZWxlY3QgIT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgb3BlbmVyLmZvY3VzKCk7XG4gICAgICB9XG4gICAgICAvLyBDbGljayBvdXRzaWRlIHRoZSBjb250YWluZXIgY2xvc2VzIHRoZSBwYW5lbFxuICAgIH0gZWxzZSBpZiAoaXNPcGVuICYmICFjb250YWluZXIuY29udGFpbnMoZS50YXJnZXQpKSB7XG4gICAgICBvcGVuKGZhbHNlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZW92ZXJFdmVudChlKSB7XG4gICAgLy8gT24gbW91c2UgbW92ZSBvdmVyIGFuZCBvcHRpb25zIGl0IGJhY2FtZXMgdGhlIGZvY3VzZWQgb25lXG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdCAmJiBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYnVpbGRlclBhcmFtcy5vcHRpb25DbGFzcykpIHtcbiAgICAgIHNldEZvY3VzZWRFbGVtZW50KGUudGFyZ2V0KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBrZXlkb3duRXZlbnQoZSkge1xuICAgIGlmICghaXNPcGVuKSB7XG4gICAgICAvLyBPbiBcIkFycm93IGRvd25cIiwgXCJBcnJvdyB1cFwiIGFuZCBcIlNwYWNlXCIga2V5cyBvcGVucyB0aGUgcGFuZWxcbiAgICAgIGlmIChlLmtleUNvZGUgPT09IDQwIHx8IGUua2V5Q29kZSA9PT0gMzggfHwgZS5rZXlDb2RlID09PSAzMikge1xuICAgICAgICBvcGVuKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXRjaCAoZS5rZXlDb2RlKSB7XG4gICAgICAgIGNhc2UgMTM6XG4gICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgLy8gT24gXCJFbnRlclwiIG9yIFwiU3BhY2VcIiBzZWxlY3RzIHRoZSBmb2N1c2VkIGVsZW1lbnQgYXMgdGhlIHNlbGVjdGVkIG9uZVxuICAgICAgICAgIHNldFNlbGVjdGVkRWxlbWVudChmb2N1c2VkRWxlbWVudCk7XG4gICAgICAgICAgLy8gU2V0cyB0aGUgY29ycmlzcG9uZGluZyBzZWxlY3QncyBvcHRpb24gdG8gc2VsZWN0ZWQgdXBkYXRpbmcgdGhlIHNlbGVjdCdzIHZhbHVlIHRvb1xuICAgICAgICAgIHNlbGVjdGVkRWxlbWVudC5jdXN0b21TZWxlY3RPcmlnaW5hbE9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgICAgLy8gVHJpZ2dlcnMgdGhlIG5hdGl2ZSBjaGFuZ2UgZXZlbnQgb2YgdGhlIHNlbGVjdFxuICAgICAgICAgIHNlbGVjdC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnY2hhbmdlJykpO1xuICAgICAgICAgIG9wZW4oZmFsc2UpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI3OlxuICAgICAgICAgIC8vIE9uIFwiRXNjYXBlXCIgY2xvc2VzIHRoZSBwYW5lbFxuICAgICAgICAgIG9wZW4oZmFsc2UpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgLy8gT24gXCJBcnJvdyB1cFwiIHNldCBmb2N1cyB0byB0aGUgcHJldiBvcHRpb24gaWYgcHJlc2VudFxuICAgICAgICAgIG1vdmVGb2N1ZXNlZEVsZW1lbnQoLTEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgIC8vIE9uIFwiQXJyb3cgZG93blwiIHNldCBmb2N1cyB0byB0aGUgbmV4dCBvcHRpb24gaWYgcHJlc2VudFxuICAgICAgICAgIG1vdmVGb2N1ZXNlZEVsZW1lbnQoKzEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIC8vIHNlYXJjaCBpbiBwYW5lbCAoYXV0b2NvbXBsZXRlKVxuICAgICAgICAgIGlmIChlLmtleUNvZGUgPj0gNDggJiYgZS5rZXlDb2RlIDw9IDkwKSB7XG4gICAgICAgICAgICAvLyBjbGVhciBleGlzdGluZyByZXNldCB0aW1lb3V0XG4gICAgICAgICAgICBpZiAocmVzZXRTZWFyY2hUaW1lb3V0KSB7XG4gICAgICAgICAgICAgIGNsZWFyVGltZW91dChyZXNldFNlYXJjaFRpbWVvdXQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyByZXNldCB0aW1lb3V0IGZvciBlbXB0eSBzZWFyY2gga2V5XG4gICAgICAgICAgICByZXNldFNlYXJjaFRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgc2VhcmNoS2V5ID0gJyc7XG4gICAgICAgICAgICB9LCAxNTAwKTtcblxuICAgICAgICAgICAgLy8gdXBkYXRlIHNlYXJjaCBrZXl3b3JkIGFwcGVuZGluZyB0aGUgY3VycmVudCBrZXlcbiAgICAgICAgICAgIHNlYXJjaEtleSArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGUua2V5Q29kZSk7XG5cbiAgICAgICAgICAgIC8vIHNlYXJjaCB0aGUgZWxlbWVudFxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBzZWxlY3Qub3B0aW9ucy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgLy8gcmVtb3ZlZCBjYXVzZSBub3Qgc3VwcG9ydGVkIGJ5IElFOlxuICAgICAgICAgICAgICAvLyBpZiAob3B0aW9uc1tpXS50ZXh0LnN0YXJ0c1dpdGgoc2VhcmNoS2V5KSlcbiAgICAgICAgICAgICAgaWYgKHNlbGVjdC5vcHRpb25zW2ldLnRleHQudG9VcHBlckNhc2UoKS5zdWJzdHIoMCwgc2VhcmNoS2V5Lmxlbmd0aCkgPT09IHNlYXJjaEtleSkge1xuICAgICAgICAgICAgICAgIHNldEZvY3VzZWRFbGVtZW50KHNlbGVjdC5vcHRpb25zW2ldLmN1c3RvbVNlbGVjdENzdE9wdGlvbik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2hhbmdlRXZlbnQoKSB7XG4gICAgdmFyIGluZGV4ID0gc2VsZWN0LnNlbGVjdGVkSW5kZXg7XG4gICAgdmFyIGVsZW1lbnQgPSBpbmRleCA9PT0gLTEgPyB1bmRlZmluZWQgOiBzZWxlY3Qub3B0aW9uc1tpbmRleF0uY3VzdG9tU2VsZWN0Q3N0T3B0aW9uO1xuXG4gICAgc2V0U2VsZWN0ZWRFbGVtZW50KGVsZW1lbnQpO1xuICB9XG5cbiAgLy8gV2hlbiB0aGUgb3B0aW9uIGlzIG91dHNpZGUgdGhlIHZpc2libGUgcGFydCBvZiB0aGUgb3BlbmVkIHBhbmVsLCB1cGRhdGVzIHRoZSBzY3JvbGxUb3AgcG9zaXRpb25cbiAgLy8gVGhpcyBpcyB0aGUgZGVmYXVsdCBiZWhhdmlvdXJcbiAgLy8gVG8gYmxvY2sgaXQgdGhlIHBsdWdpbiB1c2VyIG11c3RcbiAgLy8gYWRkIGEgXCJjdXN0b20tc2VsZWN0OmZvY3VzLW91dHNpZGUtcGFuZWxcIiBldmVudExpc3RlbmVyIG9uIHRoZSBwYW5lbFxuICAvLyB3aXRoIHVzZUNhcHR1cmUgc2V0IHRvIHRydWVcbiAgLy8gYW5kIHN0b3BQcm9wYWdhdGlvblxuICBmdW5jdGlvbiBzY3JvbGxUb0ZvY3VzZWQoZSkge1xuICAgIHZhciBjdXJyUGFuZWwgPSBlLmN1cnJlbnRUYXJnZXQ7XG4gICAgdmFyIGN1cnJPcHRpb24gPSBlLnRhcmdldDtcbiAgICAvLyBVcFxuICAgIGlmIChjdXJyT3B0aW9uLm9mZnNldFRvcCA8IGN1cnJQYW5lbC5zY3JvbGxUb3ApIHtcbiAgICAgIGN1cnJQYW5lbC5zY3JvbGxUb3AgPSBjdXJyT3B0aW9uLm9mZnNldFRvcDtcbiAgICAgIC8vIERvd25cbiAgICB9IGVsc2Uge1xuICAgICAgY3VyclBhbmVsLnNjcm9sbFRvcCA9IGN1cnJPcHRpb24ub2Zmc2V0VG9wICsgY3Vyck9wdGlvbi5jbGllbnRIZWlnaHQgLSBjdXJyUGFuZWwuY2xpZW50SGVpZ2h0O1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZEV2ZW50cygpIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsaWNrRXZlbnQpO1xuICAgIHBhbmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIG1vdXNlb3ZlckV2ZW50KTtcbiAgICBwYW5lbC5hZGRFdmVudExpc3RlbmVyKCdjdXN0b20tc2VsZWN0OmZvY3VzLW91dHNpZGUtcGFuZWwnLCBzY3JvbGxUb0ZvY3VzZWQpO1xuICAgIHNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VFdmVudCk7XG4gICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBrZXlkb3duRXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlRXZlbnRzKCkge1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tFdmVudCk7XG4gICAgcGFuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgbW91c2VvdmVyRXZlbnQpO1xuICAgIHBhbmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2N1c3RvbS1zZWxlY3Q6Zm9jdXMtb3V0c2lkZS1wYW5lbCcsIHNjcm9sbFRvRm9jdXNlZCk7XG4gICAgc2VsZWN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUV2ZW50KTtcbiAgICBjb250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGtleWRvd25FdmVudCk7XG4gIH1cblxuICBmdW5jdGlvbiBkaXNhYmxlZChib29sKSB7XG4gICAgaWYgKGJvb2wgJiYgIXNlbGVjdC5kaXNhYmxlZCkge1xuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoYnVpbGRlclBhcmFtcy5pc0Rpc2FibGVkQ2xhc3MpO1xuICAgICAgc2VsZWN0LmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgIG9wZW5lci5yZW1vdmVBdHRyaWJ1dGUoJ3RhYmluZGV4Jyk7XG4gICAgICBjb250YWluZXIuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2N1c3RvbS1zZWxlY3Q6ZGlzYWJsZWQnKSk7XG4gICAgICByZW1vdmVFdmVudHMoKTtcbiAgICB9IGVsc2UgaWYgKCFib29sICYmIHNlbGVjdC5kaXNhYmxlZCkge1xuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoYnVpbGRlclBhcmFtcy5pc0Rpc2FibGVkQ2xhc3MpO1xuICAgICAgc2VsZWN0LmRpc2FibGVkID0gZmFsc2U7XG4gICAgICBvcGVuZXIuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICcwJyk7XG4gICAgICBjb250YWluZXIuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2N1c3RvbS1zZWxlY3Q6ZW5hYmxlZCcpKTtcbiAgICAgIGFkZEV2ZW50cygpO1xuICAgIH1cbiAgfVxuXG4gIC8vIEZvcm0gYSBnaXZlbiBzZWxlY3QgY2hpbGRyZW4gRE9NIHRyZWUgKG9wdGlvbnMgYW5kIG9wdGdyb3VwKSxcbiAgLy8gQ3JlYXRlcyB0aGUgY29ycmVzcG9uZGluZyBjdXN0b20gSFRNTEVsZW1lbnRzIGxpc3QgKGRpdnMgd2l0aCBkaWZmZXJlbnQgY2xhc3NlcyBhbmQgYXR0cmlidXRlcylcbiAgZnVuY3Rpb24gcGFyc2VNYXJrdXAoY2hpbGRyZW4pIHtcbiAgICB2YXIgbm9kZUxpc3QgPSBjaGlsZHJlbjtcbiAgICB2YXIgY3N0TGlzdCA9IFtdO1xuXG4gICAgaWYgKHR5cGVvZiBub2RlTGlzdC5sZW5ndGggPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIEFyZ3VtZW50Jyk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxpID0gbm9kZUxpc3QubGVuZ3RoOyBpIDwgbGk7IGkrKykge1xuICAgICAgaWYgKG5vZGVMaXN0W2ldIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiYgbm9kZUxpc3RbaV0udGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnT1BUR1JPVVAnKSB7XG4gICAgICAgIHZhciBjc3RPcHRncm91cCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBjc3RPcHRncm91cC5jbGFzc0xpc3QuYWRkKGJ1aWxkZXJQYXJhbXMub3B0Z3JvdXBDbGFzcyk7XG4gICAgICAgIGNzdE9wdGdyb3VwLnNldEF0dHJpYnV0ZSgnZGF0YS1sYWJlbCcsIG5vZGVMaXN0W2ldLmxhYmVsKTtcblxuICAgICAgICAvLyBJTVBPUlRBTlQ6IFN0b3JlcyBpbiBhIHByb3BlcnR5IG9mIHRoZSBjcmVhdGVkIGN1c3RvbSBvcHRpb24gZ3JvdXBcbiAgICAgICAgLy8gYSBob29rIHRvIHRoZSB0aGUgY29ycmlzcG9uZGluZyBzZWxlY3QncyBvcHRpb24gZ3JvdXBcbiAgICAgICAgY3N0T3B0Z3JvdXAuY3VzdG9tU2VsZWN0T3JpZ2luYWxPcHRncm91cCA9IG5vZGVMaXN0W2ldO1xuXG4gICAgICAgIC8vIElNUE9SVEFOVDogU3RvcmVzIGluIGEgcHJvcGVydHkgb2Ygc2VsZWN0J3Mgb3B0aW9uIGdyb3VwXG4gICAgICAgIC8vIGEgaG9vayB0byB0aGUgY3JlYXRlZCBjdXN0b20gb3B0aW9uIGdyb3VwXG4gICAgICAgIG5vZGVMaXN0W2ldLmN1c3RvbVNlbGVjdENzdE9wdGdyb3VwID0gY3N0T3B0Z3JvdXA7XG5cbiAgICAgICAgdmFyIHN1Yk5vZGVzID0gcGFyc2VNYXJrdXAobm9kZUxpc3RbaV0uY2hpbGRyZW4pO1xuICAgICAgICBmb3IgKHZhciBqID0gMCwgbGogPSBzdWJOb2Rlcy5sZW5ndGg7IGogPCBsajsgaisrKSB7XG4gICAgICAgICAgY3N0T3B0Z3JvdXAuYXBwZW5kQ2hpbGQoc3ViTm9kZXNbal0pO1xuICAgICAgICB9XG5cbiAgICAgICAgY3N0TGlzdC5wdXNoKGNzdE9wdGdyb3VwKTtcbiAgICAgIH0gZWxzZSBpZiAobm9kZUxpc3RbaV0gaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJiBub2RlTGlzdFtpXS50YWdOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICdPUFRJT04nKSB7XG4gICAgICAgIHZhciBjc3RPcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgY3N0T3B0aW9uLmNsYXNzTGlzdC5hZGQoYnVpbGRlclBhcmFtcy5vcHRpb25DbGFzcyk7XG4gICAgICAgIGNzdE9wdGlvbi50ZXh0Q29udGVudCA9IG5vZGVMaXN0W2ldLnRleHQ7XG4gICAgICAgIGNzdE9wdGlvbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtdmFsdWUnLCBub2RlTGlzdFtpXS52YWx1ZSk7XG4gICAgICAgIGNzdE9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnb3B0aW9uJyk7XG5cbiAgICAgICAgLy8gSU1QT1JUQU5UOiBTdG9yZXMgaW4gYSBwcm9wZXJ0eSBvZiB0aGUgY3JlYXRlZCBjdXN0b20gb3B0aW9uXG4gICAgICAgIC8vIGEgaG9vayB0byB0aGUgdGhlIGNvcnJpc3BvbmRpbmcgc2VsZWN0J3Mgb3B0aW9uXG4gICAgICAgIGNzdE9wdGlvbi5jdXN0b21TZWxlY3RPcmlnaW5hbE9wdGlvbiA9IG5vZGVMaXN0W2ldO1xuXG4gICAgICAgIC8vIElNUE9SVEFOVDogU3RvcmVzIGluIGEgcHJvcGVydHkgb2Ygc2VsZWN0J3Mgb3B0aW9uXG4gICAgICAgIC8vIGEgaG9vayB0byB0aGUgY3JlYXRlZCBjdXN0b20gb3B0aW9uXG4gICAgICAgIG5vZGVMaXN0W2ldLmN1c3RvbVNlbGVjdENzdE9wdGlvbiA9IGNzdE9wdGlvbjtcblxuICAgICAgICAvLyBJZiB0aGUgc2VsZWN0J3Mgb3B0aW9uIGlzIHNlbGVjdGVkXG4gICAgICAgIGlmIChub2RlTGlzdFtpXS5zZWxlY3RlZCkge1xuICAgICAgICAgIHNldFNlbGVjdGVkRWxlbWVudChjc3RPcHRpb24pO1xuICAgICAgICB9XG4gICAgICAgIGNzdExpc3QucHVzaChjc3RPcHRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBBcmd1bWVudCcpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY3N0TGlzdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9hcHBlbmQobm9kZVBhciwgYXBwZW5kSW50b09yaWdpbmFsLCB0YXJnZXRQYXIpIHtcbiAgICB2YXIgdGFyZ2V0ID0gdm9pZCAwO1xuICAgIGlmICh0eXBlb2YgdGFyZ2V0UGFyID09PSAndW5kZWZpbmVkJyB8fCB0YXJnZXRQYXIgPT09IHNlbGVjdCkge1xuICAgICAgdGFyZ2V0ID0gcGFuZWw7XG4gICAgfSBlbHNlIGlmICh0YXJnZXRQYXIgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJiB0YXJnZXRQYXIudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnT1BUR1JPVVAnICYmIHNlbGVjdC5jb250YWlucyh0YXJnZXRQYXIpKSB7XG4gICAgICB0YXJnZXQgPSB0YXJnZXRQYXIuY3VzdG9tU2VsZWN0Q3N0T3B0Z3JvdXA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgQXJndW1lbnQnKTtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGUgbm9kZSBwcm92aWRlZCBpcyBhIHNpbmdsZSBIVE1MRWxlbWVudCBpdCBpcyBzdG9yZWQgaW4gYW4gYXJyYXlcbiAgICB2YXIgbm9kZSA9IG5vZGVQYXIgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCA/IFtub2RlUGFyXSA6IG5vZGVQYXI7XG5cbiAgICAvLyBJbmplY3RzIHRoZSBvcHRpb25zfG9wdGdyb3VwIGluIHRoZSBzZWxlY3RcbiAgICBpZiAoYXBwZW5kSW50b09yaWdpbmFsKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbCA9IG5vZGUubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmICh0YXJnZXQgPT09IHBhbmVsKSB7XG4gICAgICAgICAgc2VsZWN0LmFwcGVuZENoaWxkKG5vZGVbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRhcmdldC5jdXN0b21TZWxlY3RPcmlnaW5hbE9wdGdyb3VwLmFwcGVuZENoaWxkKG5vZGVbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gVGhlIGN1c3RvbSBtYXJrdXAgdG8gYXBwZW5kXG4gICAgdmFyIG1hcmt1cFRvSW5zZXJ0ID0gcGFyc2VNYXJrdXAobm9kZSk7XG5cbiAgICAvLyBJbmplY3RzIHRoZSBjcmVhdGVkIERPTSBjb250ZW50IGluIHRoZSBwYW5lbFxuICAgIGZvciAodmFyIF9pID0gMCwgX2wgPSBtYXJrdXBUb0luc2VydC5sZW5ndGg7IF9pIDwgX2w7IF9pKyspIHtcbiAgICAgIHRhcmdldC5hcHBlbmRDaGlsZChtYXJrdXBUb0luc2VydFtfaV0pO1xuICAgIH1cblxuICAgIHJldHVybiBub2RlO1xuICB9XG5cbiAgZnVuY3Rpb24gX2luc2VydEJlZm9yZShub2RlLCB0YXJnZXRQYXIpIHtcbiAgICB2YXIgdGFyZ2V0ID0gdm9pZCAwO1xuICAgIGlmICh0YXJnZXRQYXIgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJiB0YXJnZXRQYXIudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnT1BUSU9OJyAmJiBzZWxlY3QuY29udGFpbnModGFyZ2V0UGFyKSkge1xuICAgICAgdGFyZ2V0ID0gdGFyZ2V0UGFyLmN1c3RvbVNlbGVjdENzdE9wdGlvbjtcbiAgICB9IGVsc2UgaWYgKHRhcmdldFBhciBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICYmIHRhcmdldFBhci50YWdOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICdPUFRHUk9VUCcgJiYgc2VsZWN0LmNvbnRhaW5zKHRhcmdldFBhcikpIHtcbiAgICAgIHRhcmdldCA9IHRhcmdldFBhci5jdXN0b21TZWxlY3RDc3RPcHRncm91cDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBBcmd1bWVudCcpO1xuICAgIH1cblxuICAgIC8vIFRoZSBjdXN0b20gbWFya3VwIHRvIGFwcGVuZFxuICAgIHZhciBtYXJrdXBUb0luc2VydCA9IHBhcnNlTWFya3VwKG5vZGUubGVuZ3RoID8gbm9kZSA6IFtub2RlXSk7XG5cbiAgICB0YXJnZXQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobWFya3VwVG9JbnNlcnRbMF0sIHRhcmdldCk7XG5cbiAgICAvLyBJbmplY3RzIHRoZSBvcHRpb24gb3Igb3B0Z3JvdXAgbm9kZSBpbiB0aGUgb3JpZ2luYWwgc2VsZWN0IGFuZCByZXR1cm5zIHRoZSBpbmplY3RlZCBub2RlXG4gICAgcmV0dXJuIHRhcmdldFBhci5wYXJlbnROb2RlLmluc2VydEJlZm9yZShub2RlLmxlbmd0aCA/IG5vZGVbMF0gOiBub2RlLCB0YXJnZXRQYXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlKG5vZGUpIHtcbiAgICB2YXIgY3N0Tm9kZSA9IHZvaWQgMDtcbiAgICBpZiAobm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICYmIG5vZGUudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnT1BUSU9OJyAmJiBzZWxlY3QuY29udGFpbnMobm9kZSkpIHtcbiAgICAgIGNzdE5vZGUgPSBub2RlLmN1c3RvbVNlbGVjdENzdE9wdGlvbjtcbiAgICB9IGVsc2UgaWYgKG5vZGUgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJiBub2RlLnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PT0gJ09QVEdST1VQJyAmJiBzZWxlY3QuY29udGFpbnMobm9kZSkpIHtcbiAgICAgIGNzdE5vZGUgPSBub2RlLmN1c3RvbVNlbGVjdENzdE9wdGdyb3VwO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIEFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIGNzdE5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjc3ROb2RlKTtcbiAgICB2YXIgcmVtb3ZlZE5vZGUgPSBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZSk7XG4gICAgY2hhbmdlRXZlbnQoKTtcbiAgICByZXR1cm4gcmVtb3ZlZE5vZGU7XG4gIH1cblxuICBmdW5jdGlvbiBlbXB0eSgpIHtcbiAgICB2YXIgcmVtb3ZlZCA9IFtdO1xuICAgIHdoaWxlIChzZWxlY3QuY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICBwYW5lbC5yZW1vdmVDaGlsZChwYW5lbC5jaGlsZHJlblswXSk7XG4gICAgICByZW1vdmVkLnB1c2goc2VsZWN0LnJlbW92ZUNoaWxkKHNlbGVjdC5jaGlsZHJlblswXSkpO1xuICAgIH1cbiAgICBzZXRTZWxlY3RlZEVsZW1lbnQoKTtcbiAgICByZXR1cm4gcmVtb3ZlZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBzZWxlY3Qub3B0aW9ucy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGRlbGV0ZSBzZWxlY3Qub3B0aW9uc1tpXS5jdXN0b21TZWxlY3RDc3RPcHRpb247XG4gICAgfVxuICAgIHZhciBvcHRHcm91cCA9IHNlbGVjdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnb3B0Z3JvdXAnKTtcbiAgICBmb3IgKHZhciBfaTIgPSAwLCBfbDIgPSBvcHRHcm91cC5sZW5ndGg7IF9pMiA8IF9sMjsgX2kyKyspIHtcbiAgICAgIGRlbGV0ZSBvcHRHcm91cC5jdXN0b21TZWxlY3RDc3RPcHRncm91cDtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudHMoKTtcblxuICAgIHJldHVybiBjb250YWluZXIucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoc2VsZWN0LCBjb250YWluZXIpO1xuICB9XG4gIC8vXG4gIC8vIEN1c3RvbSBTZWxlY3QgRE9NIHRyZWUgY3JlYXRpb25cbiAgLy9cblxuICAvLyBDcmVhdGVzIHRoZSBjb250YWluZXIvd3JhcHBlclxuICBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoYnVpbGRlclBhcmFtcy5jb250YWluZXJDbGFzcywgY29udGFpbmVyQ2xhc3MpO1xuXG4gIC8vIENyZWF0ZXMgdGhlIG9wZW5lclxuICBvcGVuZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIG9wZW5lci5jbGFzc05hbWUgPSBidWlsZGVyUGFyYW1zLm9wZW5lckNsYXNzO1xuICBvcGVuZXIuc2V0QXR0cmlidXRlKCdyb2xlJywgJ2NvbWJvYm94Jyk7XG4gIG9wZW5lci5zZXRBdHRyaWJ1dGUoJ2FyaWEtYXV0b2NvbXBsZXRlJywgJ2xpc3QnKTtcbiAgb3BlbmVyLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsICdmYWxzZScpO1xuICBvcGVuZXIuaW5uZXJIVE1MID0gJzxzcGFuPlxcbiAgICcgKyAoc2VsZWN0LnNlbGVjdGVkSW5kZXggIT09IC0xID8gc2VsZWN0Lm9wdGlvbnNbc2VsZWN0LnNlbGVjdGVkSW5kZXhdLnRleHQgOiAnJykgKyAnXFxuICAgPC9zcGFuPic7XG5cbiAgLy8gQ3JlYXRlcyB0aGUgcGFuZWxcbiAgLy8gYW5kIGluamVjdHMgdGhlIG1hcmt1cCBvZiB0aGUgc2VsZWN0IGluc2lkZVxuICAvLyB3aXRoIHNvbWUgdGFnIGFuZCBhdHRyaWJ1dGVzIHJlcGxhY2VtZW50XG4gIHBhbmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIC8vIENyZWF0ZSByYW5kb20gaWRcbiAgdmFyIHBvc3NpYmxlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JztcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICB1SWQgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpO1xuICB9XG4gIHBhbmVsLmlkID0gY29udGFpbmVyQ2xhc3MgKyAnLScgKyB1SWQgKyAnLXBhbmVsJztcbiAgcGFuZWwuY2xhc3NOYW1lID0gYnVpbGRlclBhcmFtcy5wYW5lbENsYXNzO1xuICBwYW5lbC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnbGlzdGJveCcpO1xuICBvcGVuZXIuc2V0QXR0cmlidXRlKCdhcmlhLW93bnMnLCBwYW5lbC5pZCk7XG5cbiAgX2FwcGVuZChzZWxlY3QuY2hpbGRyZW4sIGZhbHNlKTtcblxuICAvLyBJbmplY3RzIHRoZSBjb250YWluZXIgaW4gdGhlIG9yaWdpbmFsIERPTSBwb3NpdGlvbiBvZiB0aGUgc2VsZWN0XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChvcGVuZXIpO1xuICBzZWxlY3QucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoY29udGFpbmVyLCBzZWxlY3QpO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQoc2VsZWN0KTtcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKHBhbmVsKTtcblxuICAvLyBBUklBIGxhYmVsbGVkYnkgLSBsYWJlbFxuICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbGFiZWxbZm9yPVwiJyArIHNlbGVjdC5pZCArICdcIl0nKSkge1xuICAgIGN1cnJMYWJlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xhYmVsW2Zvcj1cIicgKyBzZWxlY3QuaWQgKyAnXCJdJyk7XG4gIH0gZWxzZSBpZiAoY29udGFpbmVyLnBhcmVudE5vZGUudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnTEFCRUwnKSB7XG4gICAgY3VyckxhYmVsID0gY29udGFpbmVyLnBhcmVudE5vZGU7XG4gIH1cbiAgaWYgKHR5cGVvZiBjdXJyTGFiZWwgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY3VyckxhYmVsLnNldEF0dHJpYnV0ZSgnaWQnLCBjb250YWluZXJDbGFzcyArICctJyArIHVJZCArICctbGFiZWwnKTtcbiAgICBvcGVuZXIuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsbGVkYnknLCBjb250YWluZXJDbGFzcyArICctJyArIHVJZCArICctbGFiZWwnKTtcbiAgfVxuXG4gIC8vIEV2ZW50IEluaXRcbiAgaWYgKHNlbGVjdC5kaXNhYmxlZCkge1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGJ1aWxkZXJQYXJhbXMuaXNEaXNhYmxlZENsYXNzKTtcbiAgfSBlbHNlIHtcbiAgICBvcGVuZXIuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICcwJyk7XG4gICAgc2VsZWN0LnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgICBhZGRFdmVudHMoKTtcbiAgfVxuXG4gIC8vIFN0b3JlcyB0aGUgcGx1Z2luIHB1YmxpYyBleHBvc2VkIG1ldGhvZHMgYW5kIHByb3BlcnRpZXMsIGRpcmVjdGx5IGluIHRoZSBjb250YWluZXIgSFRNTEVsZW1lbnRcbiAgY29udGFpbmVyLmN1c3RvbVNlbGVjdCA9IHtcbiAgICBnZXQgcGx1Z2luT3B0aW9ucygpIHtcbiAgICAgIHJldHVybiBidWlsZGVyUGFyYW1zO1xuICAgIH0sXG4gICAgZ2V0IG9wZW4oKSB7XG4gICAgICByZXR1cm4gaXNPcGVuO1xuICAgIH0sXG4gICAgc2V0IG9wZW4oYm9vbCkge1xuICAgICAgb3Blbihib29sKTtcbiAgICB9LFxuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgIHJldHVybiBzZWxlY3QuZGlzYWJsZWQ7XG4gICAgfSxcbiAgICBzZXQgZGlzYWJsZWQoYm9vbCkge1xuICAgICAgZGlzYWJsZWQoYm9vbCk7XG4gICAgfSxcbiAgICBnZXQgdmFsdWUoKSB7XG4gICAgICByZXR1cm4gc2VsZWN0LnZhbHVlO1xuICAgIH0sXG4gICAgc2V0IHZhbHVlKHZhbCkge1xuICAgICAgc2V0VmFsdWUodmFsKTtcbiAgICB9LFxuICAgIGFwcGVuZDogZnVuY3Rpb24gYXBwZW5kKG5vZGUsIHRhcmdldCkge1xuICAgICAgcmV0dXJuIF9hcHBlbmQobm9kZSwgdHJ1ZSwgdGFyZ2V0KTtcbiAgICB9LFxuICAgIGluc2VydEJlZm9yZTogZnVuY3Rpb24gaW5zZXJ0QmVmb3JlKG5vZGUsIHRhcmdldCkge1xuICAgICAgcmV0dXJuIF9pbnNlcnRCZWZvcmUobm9kZSwgdGFyZ2V0KTtcbiAgICB9LFxuICAgIHJlbW92ZTogcmVtb3ZlLFxuICAgIGVtcHR5OiBlbXB0eSxcbiAgICBkZXN0cm95OiBkZXN0cm95LFxuICAgIG9wZW5lcjogb3BlbmVyLFxuICAgIHNlbGVjdDogc2VsZWN0LFxuICAgIHBhbmVsOiBwYW5lbCxcbiAgICBjb250YWluZXI6IGNvbnRhaW5lclxuICB9O1xuXG4gIC8vIFN0b3JlcyB0aGUgcGx1Z2luIGRpcmVjdGx5IGluIHRoZSBvcmlnaW5hbCBzZWxlY3RcbiAgc2VsZWN0LmN1c3RvbVNlbGVjdCA9IGNvbnRhaW5lci5jdXN0b21TZWxlY3Q7XG5cbiAgLy8gUmV0dXJucyB0aGUgcGx1Z2luIGluc3RhbmNlLCB3aXRoIHRoZSBwdWJsaWMgZXhwb3NlZCBtZXRob2RzIGFuZCBwcm9wZXJ0aWVzXG4gIHJldHVybiBjb250YWluZXIuY3VzdG9tU2VsZWN0O1xufVxuXG5mdW5jdGlvbiBjdXN0b21TZWxlY3QoZWxlbWVudCwgY3VzdG9tUGFyYW1zKSB7XG4gIC8vIE92ZXJyaWRlcyB0aGUgZGVmYXVsdCBvcHRpb25zIHdpdGggdGhlIG9uZXMgcHJvdmlkZWQgYnkgdGhlIHVzZXJcbiAgdmFyIG5vZGVMaXN0ID0gW107XG4gIHZhciBzZWxlY3RzID0gW107XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgLy8gVGhlIHBsdWdpbiBpcyBjYWxsZWQgb24gYSBzaW5nbGUgSFRNTEVsZW1lbnRcbiAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiYgZWxlbWVudC50YWdOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICdTRUxFQ1QnKSB7XG4gICAgICBub2RlTGlzdC5wdXNoKGVsZW1lbnQpO1xuICAgICAgLy8gVGhlIHBsdWdpbiBpcyBjYWxsZWQgb24gYSBzZWxlY3RvclxuICAgIH0gZWxzZSBpZiAoZWxlbWVudCAmJiB0eXBlb2YgZWxlbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhciBlbGVtZW50c0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGVsZW1lbnQpO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBlbGVtZW50c0xpc3QubGVuZ3RoOyBpIDwgbDsgKytpKSB7XG4gICAgICAgIGlmIChlbGVtZW50c0xpc3RbaV0gaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJiBlbGVtZW50c0xpc3RbaV0udGFnTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnU0VMRUNUJykge1xuICAgICAgICAgIG5vZGVMaXN0LnB1c2goZWxlbWVudHNMaXN0W2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gVGhlIHBsdWdpbiBpcyBjYWxsZWQgb24gYW55IEhUTUxFbGVtZW50cyBsaXN0IChOb2RlTGlzdCwgSFRNTENvbGxlY3Rpb24sIEFycmF5LCBldGMuKVxuICAgIH0gZWxzZSBpZiAoZWxlbWVudCAmJiBlbGVtZW50Lmxlbmd0aCkge1xuICAgICAgZm9yICh2YXIgX2kzID0gMCwgX2wzID0gZWxlbWVudC5sZW5ndGg7IF9pMyA8IF9sMzsgKytfaTMpIHtcbiAgICAgICAgaWYgKGVsZW1lbnRbX2kzXSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICYmIGVsZW1lbnRbX2kzXS50YWdOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICdTRUxFQ1QnKSB7XG4gICAgICAgICAgbm9kZUxpc3QucHVzaChlbGVtZW50W19pM10pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gTGF1bmNoZXMgdGhlIHBsdWdpbiBvdmVyIGV2ZXJ5IEhUTUxFbGVtZW50XG4gICAgLy8gQW5kIHN0b3JlcyBldmVyeSBwbHVnaW4gaW5zdGFuY2VcbiAgICBmb3IgKHZhciBfaTQgPSAwLCBfbDQgPSBub2RlTGlzdC5sZW5ndGg7IF9pNCA8IF9sNDsgKytfaTQpIHtcbiAgICAgIHNlbGVjdHMucHVzaChidWlsZGVyKG5vZGVMaXN0W19pNF0sIF9leHRlbmRzKHt9LCBkZWZhdWx0UGFyYW1zLCBjdXN0b21QYXJhbXMpKSk7XG4gICAgfVxuXG4gICAgLy8gUmV0dXJucyBhbGwgcGx1Z2luIGluc3RhbmNlc1xuICAgIHJldHVybiBzZWxlY3RzO1xuICB9KCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImltcG9ydCBjdXN0b21TZWxlY3QgZnJvbSAnY3VzdG9tLXNlbGVjdCc7XG5cbmN1c3RvbVNlbGVjdCgnc2VsZWN0Jyk7XG4iLCIvKlxyXG4gIEAgQWRkIGJvZHkgY2xhc3MgaWY6XHJcbiAgLSBzY3JvbGwgc3RhcnRlZFxyXG4gIC0gc2Nyb2xsZWQgdG8gYm90dG9tXHJcbiovXHJcblxyXG5jb25zdCBTVEFSVF9PRkZTRVQgPSAzNDtcclxuY29uc3QgU1RBUlRfQ0xBU1MgPSBcImlzLXNjcm9sbGVkXCI7XHJcbmNvbnN0IEJPVFRPTV9PRkZTRVQgPSAxMDtcclxuY29uc3QgQk9UVE9NX0NMQVNTID0gXCJpcy1zY3JvbGxlZC1ib3R0b21cIjtcclxuXHJcbmNvbnN0IFVQX0RPV05fQ0xBU1NFUyA9IGZhbHNlO1xyXG5jb25zdCBVUF9DTEFTUyA9IFwic2Nyb2xsaW5nLXVwXCI7XHJcbmNvbnN0IERPV05fQ0xBU1MgPSBcInNjcm9sbGluZy1kb3duXCI7XHJcblxyXG5jbGFzcyBTY3JvbGxDbGFzcyB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHRoaXMuc2Nyb2xsSGFuZGxlciwge3Bhc3NpdmU6IHRydWV9KTtcclxuICB9XHJcblxyXG4gIHNjcm9sbEhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICBjb25zdCB0b3AgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO1xyXG5cclxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnRvZ2dsZShTVEFSVF9DTEFTUywgdG9wID49IFNUQVJUX09GRlNFVCk7XHJcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoXHJcbiAgICAgIEJPVFRPTV9DTEFTUyxcclxuICAgICAgd2luZG93LmlubmVySGVpZ2h0ICsgdG9wID49IGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0IC0gQk9UVE9NX09GRlNFVFxyXG4gICAgKTtcclxuXHJcbiAgICBpZiAoVVBfRE9XTl9DTEFTU0VTKSB7XHJcbiAgICAgIGlmKHRoaXMub2xkU2Nyb2xsID4gdG9wKXtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoVVBfQ0xBU1MpXHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKERPV05fQ0xBU1MpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChET1dOX0NMQVNTKVxyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShVUF9DTEFTUyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLm9sZFNjcm9sbCA9IHRvcDtcclxuXHJcbiAgfTtcclxufVxyXG5cclxubmV3IFNjcm9sbENsYXNzKCk7XHJcbiJdLCJuYW1lcyI6WyJJU01PQklMRSIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwiVEhSRVNIT0xEIiwiTE9BRF9USFJFU0hPTEQiLCJFTEVNRU5UUyIsIlZJU0lCTEVfQ0xBU1MiLCJBbmltYXRlIiwiZW50cmllcyIsIm1hcCIsImVudHJ5Iiwic2VjdGlvbiIsInRhcmdldCIsImRlbGF5IiwiZ2V0RGVsYXkiLCJzZWN0aW9uQm9keUNsYXNzIiwiZ2V0QXR0cmlidXRlIiwiaXNJbnRlcnNlY3RpbmciLCJjbGFzc0xpc3QiLCJhZGQiLCJib2R5Q2xhc3MiLCJzZXRUaW1lb3V0IiwiaW5jbHVkZXMiLCJwYXJzZUludCIsImh0bWxjbGFzcyIsInR5cGUiLCJkb2N1bWVudCIsImJvZHkiLCJyZW1vdmUiLCJzZWN0aW9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWwiLCJCb3VuZGluZ0NsaWVudFJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ2aXNpYmxlUmF0aW8iLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsImxvYWRPYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwib2JzZXJ2ZUNhbGxiYWNrIiwidGhyZXNob2xkIiwib2JzZXJ2ZSIsImRpc2Nvbm5lY3QiLCJvYnNlcnZlclRocmVzaG9sZCIsIm9ic2VydmVyIiwidG9nZ2xlQ2xhc3MiLCJwYWQiLCJxdWVyeVNlbGVjdG9yIiwiU3BsaWRlIiwicGFnaW5hdGlvbiIsInBlclBhZ2UiLCJwZXJNb3ZlIiwiZ2FwIiwiYnJlYWtwb2ludHMiLCJwYWRkaW5nIiwicmlnaHQiLCJsZWZ0IiwibW91bnQiLCJkZXN0cm95IiwibWVkaWFRdWVyeSIsIlRPR0dMRV9DTEFTUyIsIlRvZ2dsZU5hdiIsImVsZW1lbnRzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZU5hdiIsImUiLCJ0b2dnbGUiLCJwcmV2ZW50RGVmYXVsdCIsImdsb2JhbCIsIlNpbXBsZUxpZ2h0Ym94IiwiU3RpY2t5U2lkZWJhciIsImNvbnRhaW5lclNlbGVjdG9yIiwiaW5uZXJXcmFwcGVyU2VsZWN0b3IiLCJ0b3BTcGFjaW5nIiwiYm90dG9tU3BhY2luZyIsIiRld0JLeSRqdXN0ZXh0ZW5kIiwiRHJvcHpvbmUiLCJ1cmwiLCJjcmVhdGVJbWFnZVRodW1ibmFpbHMiLCJkaWN0RGVmYXVsdE1lc3NhZ2UiLCJkZWZhdWx0T3B0aW9ucyIsIkVuZ2xpc2giLCJmbGF0cGlja3IiLCJkYXRlRm9ybWF0IiwiZGlzYWJsZU1vYmlsZSIsImVuYWJsZVRpbWUiLCJub0NhbGVuZGFyIiwiQ3VzdG9tRXZlbnQiLCJjdXN0b21TZWxlY3QiLCJTVEFSVF9PRkZTRVQiLCJTVEFSVF9DTEFTUyIsIkJPVFRPTV9PRkZTRVQiLCJCT1RUT01fQ0xBU1MiLCJTY3JvbGxDbGFzcyIsInRvcCIsImRvY3VtZW50RWxlbWVudCIsInNjcm9sbFRvcCIsIm9mZnNldEhlaWdodCIsIm9sZFNjcm9sbCIsInNjcm9sbEhhbmRsZXIiLCJwYXNzaXZlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBQUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUVDLElBQU1BLFFBQVEsR0FBR0MsTUFBTSxDQUFDQyxVQUFQLENBQWtCLG9DQUFsQixFQUF3REMsT0FBekU7RUFDQSxJQUFNQyxTQUFTLEdBQUcsTUFBbEI7RUFDQSxJQUFNQyxjQUFjLEdBQUcsS0FBdkI7RUFDQSxJQUFNQyxVQUFRLEdBQUcsVUFBakI7RUFDQSxJQUFNQyxhQUFhLEdBQUcsa0JBQXRCOztNQUVNQyxVQUNKLG1CQUFjO0VBQUE7O0VBQUE7O0VBQUEsMkNBd0NLLFVBQUNDLE9BQUQsRUFBYTtFQUM3QkEsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksVUFBQ0MsS0FBRCxFQUFXO0VBQ3JCLFVBQU1DLE9BQU8sR0FBR0QsS0FBSyxDQUFDRSxNQUF0Qjs7RUFDQSxVQUFNQyxLQUFLLEdBQUcsS0FBSSxDQUFDQyxRQUFMLENBQWNILE9BQWQsQ0FBZDs7RUFDQSxVQUFNSSxn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S0FBSyxDQUFDLEdBQUcsRUFBRTtFQUN0QixJQUFJLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxhQUFhLEVBQUUsS0FBSyxLQUFLO0VBQy9DLE1BQU0sR0FBRyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztFQUN0QixLQUFLLENBQUMsQ0FBQztFQUNQLEdBQUc7RUFDSCxFQUFFLFNBQVMsSUFBSSxDQUFDLEtBQUssRUFBRTtFQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQyxPQUFPLEtBQUs7RUFDakQsTUFBTSxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQzVELEtBQUssQ0FBQyxDQUFDO0VBQ1AsR0FBRztFQUNILEVBQUUsU0FBUyxPQUFPLEdBQUc7RUFDckIsSUFBSSxRQUFRLEdBQUcsRUFBRSxDQUFDO0VBQ2xCLEdBQUc7RUFDSCxFQUFFLFNBQVMsWUFBWSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUU7RUFDMUMsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEtBQUs7RUFDOUQsTUFBTSxNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQzNDLE1BQU0sUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUMzQyxLQUFLLENBQUMsQ0FBQztFQUNQLEdBQUc7RUFDSCxFQUFFLE9BQU87RUFDVCxJQUFJLEVBQUU7RUFDTixJQUFJLEdBQUc7RUFDUCxJQUFJLEtBQUs7RUFDVCxJQUFJLElBQUk7RUFDUixJQUFJLE9BQU87RUFDWCxHQUFHLENBQUM7RUFDSixDQUFDO0FBQ0Q7RUFD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QUFDLElBQUksT0FBTyxNQUFNLEtBQUssVUFBVSxJQUFJLE9BQU8sTUFBTSxDQUFDLFFBQVEsS0FBSyxRQUFRLEVBQUUsRUFBRSxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsT0FBTyxPQUFPLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxHQUFHLFNBQVMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sR0FBRyxJQUFJLE9BQU8sTUFBTSxLQUFLLFVBQVUsSUFBSSxHQUFHLENBQUMsV0FBVyxLQUFLLE1BQU0sSUFBSSxHQUFHLEtBQUssTUFBTSxDQUFDLFNBQVMsR0FBRyxRQUFRLEdBQUcsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO0FBQzFYO0VBQ0EsU0FBUywwQkFBMEIsQ0FBQyxDQUFDLEVBQUUsY0FBYyxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsMkJBQTJCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxjQUFjLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLElBQUksU0FBUyxDQUFDLHVJQUF1SSxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksZ0JBQWdCLEdBQUcsSUFBSSxFQUFFLE1BQU0sR0FBRyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLEdBQUcsRUFBRSxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksSUFBSSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksTUFBTSxFQUFFLE1BQU0sR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRTtBQUM1K0I7RUFDQSxTQUFTLDJCQUEyQixDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLFFBQVEsRUFBRSxPQUFPLGlCQUFpQixDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxLQUFLLEtBQUssRUFBRSxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxXQUFXLElBQUksMENBQTBDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLE9BQU8saUJBQWlCLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLEVBQUU7QUFDaGE7RUFDQSxTQUFTLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxJQUFJLEdBQUcsSUFBSSxJQUFJLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sSUFBSSxDQUFDLEVBQUU7QUFDdkw7RUFDQSxTQUFTLGVBQWUsQ0FBQyxRQUFR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QUFLLFNBQVMsRUFBRTtFQUNuRSxVQUFVLElBQUksVUFBVSxHQUFHLFFBQVEsR0FBRyxTQUFTLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUM7RUFDbkcsVUFBVSxhQUFhLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDL0Q7RUFDQSxVQUFVLElBQUksUUFBUSxLQUFLLFNBQVM7RUFDcEMsWUFBWSxhQUFhLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztFQUM5RTtFQUNBLFlBQVksYUFBYSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDM0U7RUFDQSxVQUFVLEtBQUssSUFBSSxHQUFHLElBQUksS0FBSyxDQUFDLEtBQUssRUFBRTtFQUN2QyxZQUFZLElBQUksSUFBSSxHQUFHLENBQUMsUUFBUSxLQUFLLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDO0VBQzFFLFlBQVksSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7RUFDOUQsV0FBVztBQUNYO0VBQ0EsVUFBVSxLQUFLLElBQUksR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLEVBQUU7RUFDdkMsWUFBWSxJQUFJLElBQUksR0FBRyxDQUFDLFFBQVEsS0FBSyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztFQUMxRSxZQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMs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RUFBRSxVQUFVLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0VBQzdDLFFBQVEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztFQUNwRSxLQUFLO0VBQ0wsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxLQUFLO0VBQzFCLFFBQVEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUMzQyxLQUFLO0VBQ0wsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxLQUFLO0VBQzFCLFFBQVEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUMzQyxLQUFLO0VBQ0wsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxLQUFLO0VBQ3pCLFFBQVEsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztFQUN6QyxLQUFLO0VBQ0wsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sS0FBSztFQUNsQyxRQUFRLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRTtFQUNqRCxZQUFZLEVBQUUsR0FBRyxHQUFHLENBQUMsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ2xFLEtBQUs7RUFDTCxJQUFJLENBQUMsRUFBRSxVQUFVLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFO0VBQzlDLFFBQVEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FB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LE1BQU0sRUFBRSxFQUFFLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxPQUFPLE1BQU0sQ0FBQyxFQUFFLENBQUM7QUFDalE7RUFDQSxJQUFJLGNBQWMsR0FBRyxZQUFZLEVBQUUsU0FBUyxhQUFhLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxHQUFHLEtBQUssQ0FBQyxDQUFDLElBQUksRUFBRSxHQUFHLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLElBQUksRUFBRSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsR0FBRyxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsT0FBTyxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sVUFBVSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsT0FBTyxHQUFHLENBQUMsRUFBRSxNQUFNLElBQUksTUFBTSxDQUFDLFFBQVEsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxPQUFPLGFBQWEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxJQUFJLFNBQVMsQ0FBQyxzREFBc0QsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO0VBQ3hwQjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQUNBO0VBQ0EsZUFBZSxHQUFHLFlBQVksQ0FBQztBQUMvQjtBQUNpQztBQUNqQztFQUNBLElBQUksYUFBYSxHQUFHO0VBQ3BCLEVBQUUsY0FBYyxFQUFFLHlCQUF5QjtFQUMzQyxFQUFFLFdBQVcsRUFBRSxzQkFBc0I7RUFDckMsRUFBRSxVQUFVLEVBQUUscUJBQXFCO0VBQ25DLEVBQUUsV0FBVyxFQUFFLHNCQUFzQjtFQUNyQyxFQUFFLGFBQWEsRUFBRSx3QkFBd0I7RUFDekMsRUFBRSxlQUFlLEVBQUUsYUFBYTtFQUNoQyxFQUFFLGFBQWEsRUFBRSxXQUFXO0VBQzVCLEVBQUUsZUFBZSxFQUFFLGFBQWE7RUFDaEMsRUFBRSxXQUFXLEVBQUUsU0FBUztFQUN4QixDQUFDLENBQUM7QUFDRjtFQUNBLFNBQVMsT0FBTyxDQUFDLEVBQUUsRUFBRSxhQUFhLEVBQUU7RUFDcEMsRUFBRSxJQUFJLGNBQWMsR0FBRyxjQUFjLENBQUM7RUFDdEMsRUFBRSxJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUM7RUFDckIsRUFBRSxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7RUFDZixFQUFFLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztFQUNsQixFQUFFLElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDO0VBQ3pCLEVBQUUsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLENBQUM7RUFDdEIsRUFBRSxJQUFJLGNBQWMsR0FBRyxLQUFLLENBQUMsQ0FBQztFQUM5QixFQUFFLElBQUksZUFBZSxHQUFHLEtBQUssQ0FBQyxDQUFDO0VBQy9CLEVBQUUsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUM7RUFDckIsRUFBRSxJQUFJLFNBQVMsR0FBRyxLQUFLLENBQUMsQ0FBQztBQUN6QjtFQUNBLEVBQUUsSUFBSSxrQkFBa0IsR0FBRyxLQUFLLENBQUMsQ0FBQztFQUNsQyxFQUFFLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUNyQjtFQUNBO0VBQ0E7RUFDQTtBQUNBO0VBQ0E7RUFDQSxFQUFFLFNBQVMsaUJBQWlCLENBQUMsU0FBUyxFQUFFO0VBQ3hDLElBQUksSUFBSSxjQUFjLEVBQUU7RUFDeEIsTUFBTSxjQUFjLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUM7RUFDbkUsS0FBSztFQUNMLElBQUksSUFBSSxPQUFPLFNBQVMsS0FBSyxXQUFXLEVBQUU7RUFDMUMsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDO0VBQ2pDLE1BQU0sY0FBYyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0VBQ2hFO0VBQ0E7RUFDQSxNQUFNLElBQUksTUFBTSxFQUFFO0VBQ2xCLFFBQVEsSUFBSSxTQUFTLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxZQUFZLENBQUMsU0FBUyxJQUFJLFNBQVMsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLFlBQVksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLFlBQVksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDLFlBQVksRUFBRTtFQUM3TCxVQUFVLFNBQVMsQ0FBQyxhQUFhLENBQUMsSUFBSSxXQUFXLENBQUMsbUNBQW1DLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0VBQzNHLFNBQVM7RUFDVCxPQUFPO0VBQ1AsS0FBSyxNQUFNO0VBQ1gsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDO0VBQ2pDLEtBQUs7RUFDTCxHQUFHO0FBQ0g7RUFDQTtFQUNBO0VBQ0E7RUFDQSxFQUFFLFNBQVMsa0JBQWtCLENBQUMsU0FBUyxFQUFFO0VBQ3pDLElBQUksSUFBSSxlQUFlLEVBQUU7RUFDekIsTUFBTSxlQUFlLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLENBQUM7RUFDdEUsTUFBTSxlQUFlLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQzVDLE1BQU0sTUFBTSxDQUFDLGVBQWUsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0VBQ3RELEtBQUs7RUFDTCxJQUFJLElBQUksT0FBTyxTQUFTLEtBQUssV0FBVyxFQUFFO0VBQzFDLE1BQU0sU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0VBQzdELE1BQU0sU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsY0FBYyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsaUJBQWlCLENBQUMsQ0FBQztFQUNuRixNQUFNLE1BQU0sQ0FBQyxZQUFZLENBQUMsdUJBQXVCLEVBQUUsY0FBYyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsaUJBQWlCLENBQUMsQ0FBQztFQUNuRyxNQUFNLGVBQWUsR0FBRyxTQUFTLENBQUM7RUFDbEMsTUFBTSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBRyxlQUFlLENBQUMsMEJBQTBCLENBQUMsSUFBSSxDQUFDO0VBQ3ZGLEtBQUssTUFBTTtFQUNYLE1BQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQztFQUNsQyxNQUFNLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztFQUMxQyxLQUFLO0VBQ0wsSUFBSSxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztFQUNqQyxHQUFHO0FBQ0g7RUFDQSxFQUFFLFNBQVMsUUFBUSxDQUFDLEtBQUssRUFBRTtFQUMzQjtFQUNBLElBQUksSUFBSSxRQUFRLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUM7RUFDM0U7RUFDQSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7RUFDbkIsTUFBTSxJQUFJLGVBQWUsR0FBRyxjQUFjLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM5RDtFQUNBLE1BQU0sUUFBUSxHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNwQyxLQUFLO0VBQ0w7RUFDQTtFQUNBLElBQUksUUFBUSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7QUFDN0I7RUFDQSxJQUFJLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUM7RUFDbkYsR0FBRztBQUNIO0VBQ0EsRUFBRSxTQUFTLG1CQUFtQixDQUFDLFNBQVMsRUFBRTtFQUMxQztFQUNBO0VBQ0EsSUFBSSxJQUFJLG1CQUFtQixHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLDBCQUEwQixDQUFDLENBQUM7RUFDekc7RUFDQTtFQUNBLElBQUksSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLFNBQVMsQ0FBQyxFQUFFO0VBQ3pELE1BQU0saUJBQWlCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsR0FBRyxTQUFTLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0VBQy9GLEtBQUs7RUFDTCxHQUFHO0FBQ0g7RUFDQTtFQUNBLEVBQUUsU0FBUyxJQUFJLENBQUMsSUFBSSxFQUFFO0VBQ3RCO0VBQ0EsSUFBSSxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxXQUFXLEVBQUU7RUFDN0M7RUFDQTtFQUNBLE1BQU0sSUFBSSxrQkFBa0IsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEdBQUcsR0FBRyxjQUFjLEdBQUcsR0FBRyxHQUFHLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztFQUM5RyxNQUFNLElBQUksa0JBQWtCLEVBQUU7RUFDOUIsUUFBUSxrQkFBa0IsQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztFQUNyRCxPQUFPO0FBQ1A7RUFDQTtFQUNBLE1BQU0sU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3pEO0VBQ0E7RUFDQSxNQUFNLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztFQUN6RCxNQUFNLE1BQU0sQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ25EO0VBQ0E7RUFDQSxNQUFNLElBQUksZUFBZSxFQUFFO0VBQzNCLFFBQVEsS0FBSyxDQUFDLFNBQVMsR0FBRyxlQUFlLENBQUMsU0FBUyxDQUFDO0VBQ3BELE9BQU87QUFDUDtFQUNBO0VBQ0EsTUFBTSxTQUFTLENBQUMsYUFBYSxDQUFDLElBQUksV0FBVyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQztBQUNyRTtFQUNBO0VBQ0EsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDO0FBQ3BCO0VBQ0E7RUFDQSxLQUFLLE1BQU07RUFDWDtFQUNBLE1BQU0sU0FBUyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzVEO0VBQ0E7RUFDQSxNQUFNLE1BQU0sQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BEO0VBQ0E7RUFDQSxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUM7QUFDckI7RUFDQTtFQUNBLE1BQU0saUJBQWlCLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDekM7RUFDQTtFQUNBLE1BQU0sU0FBUyxDQUFDLGFBQWEsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUM7RUFDdEUsS0FBSztFQUNMLElBQUksT0FBTyxNQUFNLENBQUM7RUFDbEIsR0FBRztBQUNIO0VBQ0EsRUFBRSxTQUFTLFVBQVUsQ0FBQyxDQUFDLEVBQUU7RUFDekI7RUFDQSxJQUFJLElBQUksQ0FBQyxDQUFDLE1BQU0sS0FBSyxNQUFNLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUU7RUFDMUQsTUFBTSxJQUFJLE1BQU0sRUFBRTtFQUNsQixRQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztFQUNwQixPQUFPLE1BQU07RUFDYixRQUFRLElBQUksRUFBRSxDQUFDO0VBQ2YsT0FBTztFQUNQO0VBQ0EsS0FBSyxNQUFNLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRTtFQUN6SCxNQUFNLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztFQUNuQztFQUNBLE1BQU0sZUFBZSxDQUFDLDBCQUEwQixDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7RUFDakUsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7RUFDbEI7RUFDQSxNQUFNLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztFQUN0RDtFQUNBLEtBQUssTUFBTSxJQUFJLENBQUMsQ0FBQyxNQUFNLEtBQUssTUFBTSxFQUFFO0VBQ3BDO0VBQ0E7RUFDQSxNQUFNLElBQUksTUFBTSxLQUFLLFFBQVEsQ0FBQyxhQUFhLElBQUksTUFBTSxLQUFLLFFBQVEsQ0FBQyxhQUFhLEVBQUU7RUFDbEYsUUFBUSxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7RUFDdkIsT0FBTztFQUNQO0VBQ0EsS0FBSyxNQUFNLElBQUksTUFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUU7RUFDeEQsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7RUFDbEIsS0FBSztFQUNMLEdBQUc7QUFDSDtFQUNBLEVBQUUsU0FBUyxjQUFjLENBQUMsQ0FBQyxFQUFFO0VBQzdCO0VBQ0EsSUFBSSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLEVBQUU7RUFDdEYsTUFBTSxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7RUFDbEMsS0FBSztFQUNMLEdBQUc7QUFDSDtFQUNBLEVBQUUsU0FBUyxZQUFZLENBQUMsQ0FBQyxFQUFFO0VBQzNCLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtFQUNqQjtFQUNBLE1BQU0sSUFBSSxDQUFDLENBQUMsT0FBTyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsT0FBTyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsT0FBTyxLQUFLLEVBQUUsRUFBRTtFQUNwRSxRQUFRLElBQUksRUFBRSxDQUFDO0VBQ2YsT0FBTztFQUNQLEtBQUssTUFBTTtFQUNYLE1BQU0sUUFBUSxDQUFDLENBQUMsT0FBTztFQUN2QixRQUFRLEtBQUssRUFBRSxDQUFDO0VBQ2hCLFFBQVEsS0FBSyxFQUFFO0VBQ2Y7RUFDQSxVQUFVLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxDQUFDO0VBQzdDO0VBQ0EsVUFBVSxlQUFlLENBQUMsMEJBQTBCLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztFQUNyRTtFQUNBLFVBQVUsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0VBQzFELFVBQVUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQ3RCLFVBQVUsTUFBTTtFQUNoQixRQUFRLEtBQUssRUFBRTtFQUNmO0VBQ0EsVUFBVSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7RUFDdEIsVUFBVSxNQUFNO0FBQ2hCO0VBQ0EsUUFBUSxLQUFLLEVBQUU7RUFDZjtFQUNBLFVBQVUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNsQyxVQUFVLE1BQU07RUFDaEIsUUFBUSxLQUFLLEVBQUU7RUFDZjtFQUNBLFVBQVUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNsQyxVQUFVLE1BQU07RUFDaEIsUUFBUTtFQUNSO0VBQ0EsVUFBVSxJQUFJLENBQUMsQ0FBQyxPQUFPLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLElBQUksRUFBRSxFQUFFO0VBQ2xEO0VBQ0EsWUFBWSxJQUFJLGtCQUFrQixFQUFFO0VBQ3BDLGNBQWMsWUFBWSxDQUFDLGtCQUFrQixDQUFDLENBQUM7RUFDL0MsYUFBYTtBQUNiO0VBQ0E7RUFDQSxZQUFZLGtCQUFrQixHQUFHLFVBQVUsQ0FBQyxZQUFZO0VBQ3hELGNBQWMsU0FBUyxHQUFHLEVBQUUsQ0FBQztFQUM3QixhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDckI7RUFDQTtFQUNBLFlBQVksU0FBUyxJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3hEO0VBQ0E7RUFDQSxZQUFZLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0VBQ25FO0VBQ0E7RUFDQSxjQUFjLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssU0FBUyxFQUFFO0VBQ2xHLGdCQUFnQixpQkFBaUIsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUM7RUFDM0UsZ0JBQWdCLE1BQU07RUFDdEIsZUFBZTtFQUNmLGFBQWE7RUFDYixXQUFXO0VBQ1gsVUFBVSxNQUFNO0VBQ2hCLE9BQU87RUFDUCxLQUFLO0VBQ0wsR0FBRztBQUNIO0VBQ0EsRUFBRSxTQUFTLFdBQVcsR0FBRztFQUN6QixJQUFJLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUM7RUFDckMsSUFBSSxJQUFJLE9BQU8sR0FBRyxLQUFLLEtBQUssQ0FBQyxDQUFDLEdBQUcsU0FBUyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMscUJBQXFCLENBQUM7QUFDekY7RUFDQSxJQUFJLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0VBQ2hDLEdBQUc7QUFDSDtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLEVBQUUsU0FBUyxlQUFlLENBQUMsQ0FBQyxFQUFFO0VBQzlCLElBQUksSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQztFQUNwQyxJQUFJLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7RUFDOUI7RUFDQSxJQUFJLElBQUksVUFBVSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxFQUFFO0VBQ3BELE1BQU0sU0FBUyxDQUFDLFNBQVMsR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDO0VBQ2pEO0VBQ0EsS0FBSyxNQUFNO0VBQ1gsTUFBTSxTQUFTLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDLFlBQVksR0FBRyxTQUFTLENBQUMsWUFBWSxDQUFDO0VBQ3BHLEtBQUs7RUFDTCxHQUFHO0FBQ0g7RUFDQSxFQUFFLFNBQVMsU0FBUyxHQUFHO0VBQ3ZCLElBQUksUUFBUSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztFQUNuRCxJQUFJLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7RUFDeEQsSUFBSSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsbUNBQW1DLEVBQUUsZUFBZSxDQUFDLENBQUM7RUFDakYsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0VBQ25ELElBQUksU0FBUyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztFQUN4RCxHQUFHO0FBQ0g7RUFDQSxFQUFFLFNBQVMsWUFBWSxHQUFHO0VBQzFCLElBQUksUUFBUSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztFQUN0RCxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7RUFDM0QsSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsbUNBQW1DLEVBQUUsZUFBZSxDQUFDLENBQUM7RUFDcEYsSUFBSSxNQUFNLENBQUMsbUJBQW1CLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0VBQ3RELElBQUksU0FBUyxDQUFDLG1CQUFtQixDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztFQUMzRCxHQUFHO0FBQ0g7RUFDQSxFQUFFLFNBQVMsUUFBUSxDQUFDLElBQUksRUFBRTtFQUMxQixJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtFQUNsQyxNQUFNLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQztFQUM3RCxNQUFNLE1BQU0sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0VBQzdCLE1BQU0sTUFBTSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQztFQUN6QyxNQUFNLFNBQVMsQ0FBQyxhQUFhLENBQUMsSUFBSSxXQUFXLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO0VBQ3pFLE1BQU0sWUFBWSxFQUFFLENBQUM7RUFDckIsS0FBSyxNQUFNLElBQUksQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRTtFQUN6QyxNQUFNLFNBQVMsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQztFQUNoRSxNQUFNLE1BQU0sQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0VBQzlCLE1BQU0sTUFBTSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7RUFDM0MsTUFBTSxTQUFTLENBQUMsYUFBYSxDQUFDLElBQUksV0FBVyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQztFQUN4RSxNQUFNLFNBQVMsRUFBRSxDQUFDO0VBQ2xCLEtBQUs7RUFDTCxHQUFHO0FBQ0g7RUFDQTtFQUNBO0VBQ0EsRUFBRSxTQUFTLFdBQVcsQ0FBQyxRQUFRLEVBQUU7RUFDakMsSUFBSSxJQUFJLFFBQVEsR0FBRyxRQUFRLENBQUM7RUFDNUIsSUFBSSxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUM7QUFDckI7RUFDQSxJQUFJLElBQUksT0FBTyxRQUFRLENBQUMsTUFBTSxLQUFLLFdBQVcsRUFBRTtFQUNoRCxNQUFNLE1BQU0sSUFBSSxTQUFTLENBQUMsa0JBQWtCLENBQUMsQ0FBQztFQUM5QyxLQUFLO0FBQ0w7RUFDQSxJQUFJLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7RUFDdkQsTUFBTSxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUMsWUFBWSxXQUFXLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsS0FBSyxVQUFVLEVBQUU7RUFDbEcsUUFBUSxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQ3hELFFBQVEsV0FBVyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0VBQy9ELFFBQVEsV0FBVyxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2xFO0VBQ0E7RUFDQTtFQUNBLFFBQVEsV0FBVyxDQUFDLDRCQUE0QixHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvRDtFQUNBO0VBQ0E7RUFDQSxRQUFRLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsR0FBRyxXQUFXLENBQUM7QUFDMUQ7RUFDQSxRQUFRLElBQUksUUFBUSxHQUFHLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7RUFDekQsUUFBUSxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFO0VBQzNELFVBQVUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUMvQyxTQUFTO0FBQ1Q7RUFDQSxRQUFRLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7RUFDbEMsT0FBTyxNQUFNLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQyxZQUFZLFdBQVcsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxLQUFLLFFBQVEsRUFBRTtFQUN2RyxRQUFRLElBQUksU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7RUFDdEQsUUFBUSxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7RUFDM0QsUUFBUSxTQUFTLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7RUFDakQsUUFBUSxTQUFTLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7RUFDaEUsUUFBUSxTQUFTLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNqRDtFQUNBO0VBQ0E7RUFDQSxRQUFRLFNBQVMsQ0FBQywwQkFBMEIsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0Q7RUFDQTtFQUNBO0VBQ0EsUUFBUSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMscUJBQXFCLEdBQUcsU0FBUyxDQUFDO0FBQ3REO0VBQ0E7RUFDQSxRQUFRLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRTtFQUNsQyxVQUFVLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0VBQ3hDLFNBQVM7RUFDVCxRQUFRLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7RUFDaEMsT0FBTyxNQUFNO0VBQ2IsUUFBUSxNQUFNLElBQUksU0FBUyxDQUFDLGtCQUFrQixDQUFDLENBQUM7RUFDaEQsT0FBTztFQUNQLEtBQUs7RUFDTCxJQUFJLE9BQU8sT0FBTyxDQUFDO0VBQ25CLEdBQUc7QUFDSDtFQUNBLEVBQUUsU0FBUyxPQUFPLENBQUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFNBQVMsRUFBRTtFQUMzRCxJQUFJLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxDQUFDO0VBQ3hCLElBQUksSUFBSSxPQUFPLFNBQVMsS0FBSyxXQUFXLElBQUksU0FBUyxLQUFLLE1BQU0sRUFBRTtFQUNsRSxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUM7RUFDckIsS0FBSyxNQUFNLElBQUksU0FBUyxZQUFZLFdBQVcsSUFBSSxTQUFTLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxLQUFLLFVBQVUsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFO0VBQ2pJLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQztFQUNqRCxLQUFLLE1BQU07RUFDWCxNQUFNLE1BQU0sSUFBSSxTQUFTLENBQUMsa0JBQWtCLENBQUMsQ0FBQztFQUM5QyxLQUFLO0FBQ0w7RUFDQTtFQUNBLElBQUksSUFBSSxJQUFJLEdBQUcsT0FBTyxZQUFZLFdBQVcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLE9BQU8sQ0FBQztBQUNwRTtFQUNBO0VBQ0EsSUFBSSxJQUFJLGtCQUFrQixFQUFFO0VBQzVCLE1BQU0sS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtFQUNuRCxRQUFRLElBQUksTUFBTSxLQUFLLEtBQUssRUFBRTtFQUM5QixVQUFVLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDdEMsU0FBUyxNQUFNO0VBQ2YsVUFBVSxNQUFNLENBQUMsNEJBQTRCLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ25FLFNBQVM7RUFDVCxPQUFPO0VBQ1AsS0FBSztBQUNMO0VBQ0E7RUFDQSxJQUFJLElBQUksY0FBYyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMzQztFQUNBO0VBQ0EsSUFBSSxLQUFLLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsY0FBYyxDQUFDLE1BQU0sRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFO0VBQ2hFLE1BQU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUM3QyxLQUFLO0FBQ0w7RUFDQSxJQUFJLE9BQU8sSUFBSSxDQUFDO0VBQ2hCLEdBQUc7QUFDSDtFQUNBLEVBQUUsU0FBUyxhQUFhLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRTtFQUMxQyxJQUFJLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxDQUFDO0VBQ3hCLElBQUksSUFBSSxTQUFTLFlBQVksV0FBVyxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEtBQUssUUFBUSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUU7RUFDeEgsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLHFCQUFxQixDQUFDO0VBQy9DLEtBQUssTUFBTSxJQUFJLFNBQVMsWUFBWSxXQUFXLElBQUksU0FBUyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsS0FBSyxVQUFVLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtFQUNqSSxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsdUJBQXVCLENBQUM7RUFDakQsS0FBSyxNQUFNO0VBQ1gsTUFBTSxNQUFNLElBQUksU0FBUyxDQUFDLGtCQUFrQixDQUFDLENBQUM7RUFDOUMsS0FBSztBQUNMO0VBQ0E7RUFDQSxJQUFJLElBQUksY0FBYyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDbEU7RUFDQSxJQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM5RDtFQUNBO0VBQ0EsSUFBSSxPQUFPLFNBQVMsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztFQUN0RixHQUFHO0FBQ0g7RUFDQSxFQUFFLFNBQVMsTUFBTSxDQUFDLElBQUksRUFBRTtFQUN4QixJQUFJLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDO0VBQ3pCLElBQUksSUFBSSxJQUFJLFlBQVksV0FBVyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEtBQUssUUFBUSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUU7RUFDekcsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDO0VBQzNDLEtBQUssTUFBTSxJQUFJLElBQUksWUFBWSxXQUFXLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsS0FBSyxVQUFVLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtFQUNsSCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsdUJBQXVCLENBQUM7RUFDN0MsS0FBSyxNQUFNO0VBQ1gsTUFBTSxNQUFNLElBQUksU0FBUyxDQUFDLGtCQUFrQixDQUFDLENBQUM7RUFDOUMsS0FBSztFQUNMLElBQUksT0FBTyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7RUFDNUMsSUFBSSxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUN4RCxJQUFJLFdBQVcsRUFBRSxDQUFDO0VBQ2xCLElBQUksT0FBTyxXQUFXLENBQUM7RUFDdkIsR0FBRztBQUNIO0VBQ0EsRUFBRSxTQUFTLEtBQUssR0FBRztFQUNuQixJQUFJLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztFQUNyQixJQUFJLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUU7RUFDbkMsTUFBTSxLQUFLLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUMzQyxNQUFNLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUMzRCxLQUFLO0VBQ0wsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO0VBQ3pCLElBQUksT0FBTyxPQUFPLENBQUM7RUFDbkIsR0FBRztBQUNIO0VBQ0EsRUFBRSxTQUFTLE9BQU8sR0FBRztFQUNyQixJQUFJLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0VBQzNELE1BQU0sT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDO0VBQ3JELEtBQUs7RUFDTCxJQUFJLElBQUksUUFBUSxHQUFHLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztFQUMzRCxJQUFJLEtBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7RUFDL0QsTUFBTSxPQUFPLFFBQVEsQ0FBQyx1QkFBdUIsQ0FBQztFQUM5QyxLQUFLO0FBQ0w7RUFDQSxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ25CO0VBQ0EsSUFBSSxPQUFPLFNBQVMsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQztFQUNoRSxHQUFHO0VBQ0g7RUFDQTtFQUNBO0FBQ0E7RUFDQTtFQUNBLEVBQUUsU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7RUFDNUMsRUFBRSxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsY0FBYyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ3hFO0VBQ0E7RUFDQSxFQUFFLE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0VBQzFDLEVBQUUsTUFBTSxDQUFDLFNBQVMsR0FBRyxhQUFhLENBQUMsV0FBVyxDQUFDO0VBQy9DLEVBQUUsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7RUFDMUMsRUFBRSxNQUFNLENBQUMsWUFBWSxDQUFDLG1CQUFtQixFQUFFLE1BQU0sQ0FBQyxDQUFDO0VBQ25ELEVBQUUsTUFBTSxDQUFDLFlBQVksQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUM7RUFDaEQsRUFBRSxNQUFNLENBQUMsU0FBUyxHQUFHLGFBQWEsSUFBSSxNQUFNLENBQUMsYUFBYSxLQUFLLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsR0FBRyxjQUFjLENBQUM7QUFDckk7RUFDQTtFQUNBO0VBQ0E7RUFDQSxFQUFFLEtBQUssR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQ3hDO0VBQ0EsRUFBRSxJQUFJLFFBQVEsR0FBRyxnRUFBZ0UsQ0FBQztFQUNsRixFQUFFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7RUFDOUIsSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztFQUN4RSxHQUFHO0VBQ0gsRUFBRSxLQUFLLENBQUMsRUFBRSxHQUFHLGNBQWMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLFFBQVEsQ0FBQztFQUNuRCxFQUFFLEtBQUssQ0FBQyxTQUFTLEdBQUcsYUFBYSxDQUFDLFVBQVUsQ0FBQztFQUM3QyxFQUFFLEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0VBQ3hDLEVBQUUsTUFBTSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzdDO0VBQ0EsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNsQztFQUNBO0VBQ0EsRUFBRSxTQUFTLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0VBQ2hDLEVBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0VBQ3BELEVBQUUsU0FBUyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztFQUNoQyxFQUFFLFNBQVMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDL0I7RUFDQTtFQUNBLEVBQUUsSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFO0VBQ2hFLElBQUksU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7RUFDekUsR0FBRyxNQUFNLElBQUksU0FBUyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEtBQUssT0FBTyxFQUFFO0VBQ3JFLElBQUksU0FBUyxHQUFHLFNBQVMsQ0FBQyxVQUFVLENBQUM7RUFDckMsR0FBRztFQUNILEVBQUUsSUFBSSxPQUFPLFNBQVMsS0FBSyxXQUFXLEVBQUU7RUFDeEMsSUFBSSxTQUFTLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxjQUFjLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQztFQUN4RSxJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsaUJBQWlCLEVBQUUsY0FBYyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUM7RUFDbEYsR0FBRztBQUNIO0VBQ0E7RUFDQSxFQUFFLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRTtFQUN2QixJQUFJLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQztFQUMzRCxHQUFHLE1BQU07RUFDVCxJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0VBQ3pDLElBQUksTUFBTSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7RUFDMUMsSUFBSSxTQUFTLEVBQUUsQ0FBQztFQUNoQixHQUFHO0FBQ0g7RUFDQTtFQUNBLEVBQUUsU0FBUyxDQUFDLFlBQVksR0FBRztFQUMzQixJQUFJLElBQUksYUFBYSxHQUFHO0VBQ3hCLE1BQU0sT0FBTyxhQUFhLENBQUM7RUFDM0IsS0FBSztFQUNMLElBQUksSUFBSSxJQUFJLEdBQUc7RUFDZixNQUFNLE9BQU8sTUFBTSxDQUFDO0VBQ3BCLEtBQUs7RUFDTCxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtFQUNuQixNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUNqQixLQUFLO0VBQ0wsSUFBSSxJQUFJLFFBQVEsR0FBRztFQUNuQixNQUFNLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQztFQUM3QixLQUFLO0VBQ0wsSUFBSSxJQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQUU7RUFDdkIsTUFBTSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDckIsS0FBSztFQUNMLElBQUksSUFBSSxLQUFLLEdBQUc7RUFDaEIsTUFBTSxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUM7RUFDMUIsS0FBSztFQUNMLElBQUksSUFBSSxLQUFLLENBQUMsR0FBRyxFQUFFO0VBQ25CLE1BQU0sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQ3BCLEtBQUs7RUFDTCxJQUFJLE1BQU0sRUFBRSxTQUFTLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFO0VBQzFDLE1BQU0sT0FBTyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztFQUN6QyxLQUFLO0VBQ0wsSUFBSSxZQUFZLEVBQUUsU0FBUyxZQUFZLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRTtFQUN0RCxNQUFNLE9BQU8sYUFBYSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztFQUN6QyxLQUFLO0VBQ0wsSUFBSSxNQUFNLEVBQUUsTUFBTTtFQUNsQixJQUFJLEtBQUssRUFBRSxLQUFLO0VBQ2hCLElBQUksT0FBTyxFQUFFLE9BQU87RUFDcEIsSUFBSSxNQUFNLEVBQUUsTUFBTTtFQUNsQixJQUFJLE1BQU0sRUFBRSxNQUFNO0VBQ2xCLElBQUksS0FBSyxFQUFFLEtBQUs7RUFDaEIsSUFBSSxTQUFTLEVBQUUsU0FBUztFQUN4QixHQUFHLENBQUM7QUFDSjtFQUNBO0VBQ0EsRUFBRSxNQUFNLENBQUMsWUFBWSxHQUFHLFNBQVMsQ0FBQyxZQUFZLENBQUM7QUFDL0M7RUFDQTtFQUNBLEVBQUUsT0FBTyxTQUFTLENBQUMsWUFBWSxDQUFDO0VBQ2hDLENBQUM7QUFDRDtFQUNBLFNBQVMsWUFBWSxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDN0M7RUFDQSxFQUFFLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztFQUNwQixFQUFFLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztBQUNuQjtFQUNBLEVBQUUsT0FBTyxTQUFTLElBQUksR0FBRztFQUN6QjtFQUNBLElBQUksSUFBSSxPQUFPLElBQUksT0FBTyxZQUFZLFdBQVcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxLQUFLLFFBQVEsRUFBRTtFQUNqRyxNQUFNLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7RUFDN0I7RUFDQSxLQUFLLE1BQU0sSUFBSSxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0VBQ3ZELE1BQU0sSUFBSSxZQUFZLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0VBQzVELE1BQU0sS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFlBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRTtFQUMzRCxRQUFRLElBQUksWUFBWSxDQUFDLENBQUMsQ0FBQyxZQUFZLFdBQVcsSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxLQUFLLFFBQVEsRUFBRTtFQUMxRyxVQUFVLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDekMsU0FBUztFQUNULE9BQU87RUFDUDtFQUNBLEtBQUssTUFBTSxJQUFJLE9BQU8sSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO0VBQzFDLE1BQU0sS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRTtFQUNoRSxRQUFRLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLFdBQVcsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxLQUFLLFFBQVEsRUFBRTtFQUNwRyxVQUFVLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDdEMsU0FBUztFQUNULE9BQU87RUFDUCxLQUFLO0FBQ0w7RUFDQTtFQUNBO0VBQ0EsSUFBSSxLQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFO0VBQy9ELE1BQU0sT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxFQUFFLEVBQUUsYUFBYSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUN0RixLQUFLO0FBQ0w7RUFDQTtFQUNBLElBQUksT0FBTyxPQUFPLENBQUM7RUFDbkIsR0FBRyxFQUFFLENBQUM7RUFDTixDQUFDO0FBQ0Q7Ozs7OztFQ3RtQkFDLFlBQVksQ0FBQyxRQUFELENBQVo7O0VDRkE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUVBLElBQU1DLFlBQVksR0FBRyxFQUFyQjtFQUNBLElBQU1DLFdBQVcsR0FBRyxhQUFwQjtFQUNBLElBQU1DLGFBQWEsR0FBRyxFQUF0QjtFQUNBLElBQU1DLFlBQVksR0FBRyxvQkFBckI7O01BTU1DLGNBQ0osdUJBQWM7RUFBQTs7RUFBQTs7RUFBQSx5Q0FJRSxZQUFNO0VBQ3BCLFFBQU1DLEdBQUcsR0FBR3JFLFFBQVEsQ0FBQ3NFLGVBQVQsQ0FBeUJDLFNBQXJDO0VBRUF2RSxJQUFBQSxRQUFRLENBQUNDLElBQVQsQ0FBY1QsU0FBZCxDQUF3QmlELE1BQXhCLENBQStCd0IsV0FBL0IsRUFBNENJLEdBQUcsSUFBSUwsWUFBbkQ7RUFDQWhFLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjVCxTQUFkLENBQXdCaUQsTUFBeEIsQ0FDRTBCLFlBREYsRUFFRTdGLE1BQU0sQ0FBQ3FDLFdBQVAsR0FBcUIwRCxHQUFyQixJQUE0QnJFLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjdUUsWUFBZCxHQUE2Qk4sYUFGM0Q7O0VBZUEsSUFBQSxLQUFJLENBQUNPLFNBQUwsR0FBaUJKLEdBQWpCO0VBRUQsR0F6QmE7O0VBQ1pyRSxFQUFBQSxRQUFRLENBQUNzQyxnQkFBVCxDQUEwQixRQUExQixFQUFvQyxLQUFLb0MsYUFBekMsRUFBd0Q7RUFBQ0MsSUFBQUEsT0FBTyxFQUFFO0VBQVYsR0FBeEQ7RUFDRDs7RUEwQkgsSUFBSVAsV0FBSjs7Ozs7OyJ9\n","/**\r\n * Animate\r\n * ======================================\r\n * - add class to element in viewport\r\n * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n * - set animation delay via [animate-delay] html attribute\r\n * - set visible threshold via [animate-threshold] html attribute\r\n */\r\n\r\n const ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches\r\n const THRESHOLD = '0.75'\r\n const LOAD_THRESHOLD = '0.2'\r\n const ELEMENTS = '.animate'\r\n const VISIBLE_CLASS = 'animate--visible'\r\n\r\n class Animate {\r\n   constructor() {\r\n    this.sections = document.querySelectorAll(ELEMENTS)\r\n    this.THRESHOLD = THRESHOLD\r\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD\r\n\r\n      if('IntersectionObserver' in window) {\r\n        this.sections.forEach((el) => {\r\n         const BoundingClientRect = el.getBoundingClientRect()\r\n         const visibleRatio =  BoundingClientRect.height / window.innerHeight\r\n\r\n         if(visibleRatio > 0.95){\r\n           this.THRESHOLD =  window.innerHeight / BoundingClientRect.height / 100 * 30\r\n           this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20\r\n         }\r\n\r\n          // observe on page load\r\n          const loadObserver = new IntersectionObserver(this.observeCallback, {\r\n            threshold: this.LOAD_THRESHOLD\r\n          });\r\n          loadObserver.observe(el);\r\n\r\n\r\n          setTimeout(() => {\r\n            loadObserver.disconnect();\r\n          }, 100);\r\n\r\n          // observe\r\n          const observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : this.THRESHOLD\r\n          const observer = new IntersectionObserver(this.observeCallback, {\r\n            threshold: observerThreshold\r\n          });\r\n          observer.observe(el);\r\n        })\r\n      } else {\r\n        this.sections.forEach((el) => {\r\n          el.classList.add(VISIBLE_CLASS)\r\n        })\r\n      }\r\n   }\r\n\r\n    observeCallback = (entries) => {\r\n      entries.map((entry) => {\r\n        const section = entry.target;\r\n        const delay = this.getDelay(section)\r\n        const sectionBodyClass = section.getAttribute('animate-body-class')\r\n\r\n        if (entry.isIntersecting) {\r\n          if(ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n            section.classList.add(VISIBLE_CLASS)\r\n\r\n            this.bodyClass(sectionBodyClass, 'add')\r\n          } else {\r\n            setTimeout(() => {\r\n              section.classList.add(VISIBLE_CLASS)\r\n              this.bodyClass(sectionBodyClass, 'add')\r\n            }, delay)\r\n          }\r\n        } else {\r\n          this.bodyClass(sectionBodyClass, 'remove')\r\n        }\r\n      });\r\n    }\r\n\r\n   getDelay = (section) => {\r\n   var delay = section.getAttribute('animate-delay')\r\n\r\n   if(!ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n     var delay = section.getAttribute('animate-delay-desktop')\r\n   }\r\n\r\n   if (delay === null) {\r\n     return 0\r\n   } else if (delay.includes('.')) {\r\n     return parseInt(delay * 1000)\r\n   } else {\r\n     return parseInt(delay)\r\n   }\r\n   }\r\n\r\n   bodyClass = (htmlclass, type) => {\r\n     if(!htmlclass){\r\n       return\r\n     }\r\n\r\n      if(type == 'add'){\r\n        document.body.classList.add(htmlclass)\r\n      } else {\r\n        document.body.classList.remove(htmlclass)\r\n      }\r\n    }\r\n }\r\n\r\n new Animate()\r\n","/*!\n * Splide.js\n * Version  : 3.2.5\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\n\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = ref.parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, (attr) => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    const { style: style2 } = elm;\n    value = `${value}`;\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition, message = \"\") {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n  function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n  function emit(event) {\n    (handlers[event] || []).forEach((handler) => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n  function destroy() {\n    handlers = {};\n  }\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const { event } = Splide2;\n  const key = {};\n  let listeners = [];\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  function off(events) {\n    event.off(events, key);\n  }\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter((listener) => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, (target) => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  function destroy() {\n    listeners = listeners.filter((data) => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const { now } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n      if (rate === 1) {\n        onInterval();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      raf(update);\n    }\n  }\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return { set, is };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n    initialOptions = merge({}, options);\n    const { breakpoints } = options;\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n        point,\n        matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n      ]);\n      observe();\n    }\n  }\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function observe() {\n    const item = find(points, (item2) => item2[1].matches) || [];\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n      Splide2.options = newOptions;\n    }\n  }\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\n\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const { direction } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n  function destroy() {\n    [root, track, list].forEach((elm) => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n  function refresh() {\n    destroy();\n    setup();\n  }\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  function getClasses() {\n    return [\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE\n    ];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  TAB_INDEX,\n  DISABLED\n];\n\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n  const { Components, root, options } = Splide2;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n  function mount() {\n    init();\n    bind(slide, \"click keydown\", (e) => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove.bind(this));\n    }\n  }\n  function init() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n    if (isNavigation) {\n      const idx = isClone ? slideIndex : index;\n      const label = format(options.i18n.slideX, idx + 1);\n      const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n      setAttribute(slide, ARIA_LABEL, label);\n      setAttribute(slide, ARIA_CONTROLS, controls);\n      setAttribute(slide, ROLE, \"menuitem\");\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n  function onMove(next, prev, dest) {\n    if (!destroyed) {\n      update.call(this);\n      if (dest === index) {\n        updateActivity.call(this, true);\n      }\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      const { index: currIndex } = Splide2;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n  function updateVisibility(visible) {\n    const ariaHidden = !visible && !isActive();\n    setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n    setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n    if (focusableNodes) {\n      focusableNodes.forEach((node) => {\n        setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n      });\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    return Splide2.index === index;\n  }\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n    return diff <= distance;\n  }\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    style: style$1,\n    isWithin\n  };\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const { on, emit, bind } = EventInterface(Splide2);\n  const { slides, list } = Components2.Elements;\n  const Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1((Slide2) => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n  }\n  function getIn(page) {\n    const { Controller } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, (slide) => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map((Slide2) => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n  function style(prop, value, useContainer) {\n    forEach$1((Slide2) => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let { length } = images;\n    if (length) {\n      images.forEach((img) => {\n        bind(img, \"load error\", () => {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const { root, track, list } = Components2.Elements;\n  const { getAt } = Slides;\n  let vertical;\n  let rootRect;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n  function resize() {\n    const newRect = rect(root);\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      Slides.style(resolve(\"marginRight\"), unit(options.gap));\n      Slides.style(\"width\", cssSlideWidth() || null);\n      setSlidesHeight();\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n  function cssPadding(right) {\n    const { padding } = options;\n    const prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    let height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n  }\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Elements, Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n  function computeCloneCount() {\n    let { clones: clones2 } = options;\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n  const { resolve, orient } = Components2.Direction;\n  const { list, track } = Components2.Elements;\n  let waiting;\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n  function reposition() {\n    if (!isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const { set } = Splide2.state;\n      const position = getPosition();\n      const looping = dest !== index;\n      waiting = looping || options.waitForTransition;\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Components2.Transition.start(dest, () => {\n        looping && jump(index);\n        waiting = false;\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n    }\n  }\n  function loop(position) {\n    if (!waiting && Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= sign(excess) * size * ceil(abs(excess) / size);\n    return position;\n  }\n  function cancel() {\n    waiting = false;\n    translate(getPosition());\n    Components2.Transition.cancel();\n  }\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    const { focus } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function isBusy() {\n    return !!waiting;\n  }\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit } = Move;\n  const { isEnough, getLength } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    let index = currIndex;\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      if (isLoop) {\n        index = clamp(control, -perPage, slideCount + perPage - 1);\n      } else {\n        index = clamp(control, 0, getEnd());\n      }\n    }\n    return index;\n  }\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function getEnd() {\n    let end = slideCount - perPage;\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n    return max(end, 0);\n  }\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n    return index;\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n    return index;\n  }\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n    if (prev && next) {\n      if (!arrows.prev) {\n        const { id } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    const { go } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nfunction Autoplay(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Elements } = Components2;\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const { isPaused } = interval;\n  let hovered;\n  let focused;\n  let paused;\n  function mount() {\n    const { autoplay } = options;\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n  function listen() {\n    const { root } = Elements;\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", (e) => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", (e) => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(manual = true) {\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n    paused = manual;\n  }\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  function update(rate) {\n    const { bar } = Elements;\n    if (bar) {\n      style(bar, \"width\", `${rate * 100}%`);\n    }\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  function destroy() {\n    apply(false);\n  }\n  function apply(cover) {\n    Components2.Slides.forEach((Slide) => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit, exceededLimit } = Move;\n  let interval;\n  let scrollCallback;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, (rate) => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  function easing(t) {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Move, Scroll, Controller } = Components2;\n  const { track } = Components2.Elements;\n  const { resolve, orient } = Components2.Direction;\n  const { getPosition, exceededLimit } = Move;\n  const listenerOptions = { passive: false, capture: true };\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n    bind(track, \"click\", onClick, { capture: true });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    const { drag } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    if (!disabled) {\n      const { noDrag } = options;\n      const isTouch = isTouchEvent(e);\n      const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n      if (isDraggable && (isTouch || !e.button)) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          clickPrevented = false;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n    lastEvent = e;\n    if (e.cancelable) {\n      const diff = coordOf(e) - coordOf(baseEvent);\n      if (dragging) {\n        Move.translate(basePosition + constrain(diff));\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n        if (expired || exceeded) {\n          save(e);\n        }\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        let { dragMinThreshold: thresholds } = options;\n        thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n        dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(Splide2.index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n        prevent(e);\n      }\n      emit(EVENT_DRAGGED);\n    }\n    dragging = false;\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\nfunction Keyboard(Splide2, Components2, options) {\n  const { on, bind, unbind } = EventInterface(Splide2);\n  const { root } = Components2.Elements;\n  const { resolve } = Components2.Direction;\n  let target;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, () => {\n      destroy();\n      init();\n    });\n  }\n  function init() {\n    const { keyboard = \"global\" } = options;\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n      bind(target, \"keydown\", onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, \"keydown\");\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n  function onKeydown(e) {\n    const { key } = e;\n    const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n    if (normalizedKey === resolve(\"ArrowLeft\")) {\n      Splide2.go(\"<\");\n    } else if (normalizedKey === resolve(\"ArrowRight\")) {\n      Splide2.go(\">\");\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const { on, off, bind, emit } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        destroy();\n        init();\n      });\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n  function init() {\n    Components2.Slides.forEach((_Slide) => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({ _img, _Slide, src, srcset, _spinner });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  function observe() {\n    images = images.filter((data) => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n      return true;\n    });\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  function load(data) {\n    const { _img } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", (e) => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach((name) => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  function onLoad(data, error) {\n    const { _Slide } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Slides, Elements, Controller } = Components2;\n  const { hasFocus, getIndex } = Controller;\n  const items = [];\n  let list;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  function init() {\n    destroy();\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n      update();\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach((item) => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  function createPagination() {\n    const { length } = Splide2;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n      const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({ li, button, page: i });\n    }\n  }\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n    emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\nfunction Sync(Splide2, Components2, options) {\n  const { splides } = Splide2;\n  const { list } = Components2.Elements;\n  function mount() {\n    if (options.isNavigation) {\n      navigate();\n    } else {\n      sync();\n    }\n  }\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n  }\n  function sync() {\n    const processed = [];\n    splides.concat(Splide2).forEach((splide, index, instances) => {\n      EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n        instances.forEach((instance) => {\n          if (instance !== splide && !includes(processed, splide)) {\n            processed.push(instance);\n            instance.go(instance.is(LOOP) ? dest : index2);\n          }\n        });\n        empty(processed);\n      });\n    });\n  }\n  function navigate() {\n    const { on, emit } = EventInterface(Splide2);\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n    }\n  }\n  function onWheel(e) {\n    const { deltaY } = e;\n    if (deltaY) {\n      Splide2.go(deltaY < 0 ? \"<\" : \">\");\n      prevent(e);\n    }\n  }\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\n\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n  function start(index, done) {\n    const { track } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  const { Move, Controller } = Components2;\n  const { list } = Components2.Elements;\n  let endCallback;\n  function mount() {\n    bind(list, \"transitionend\", (e) => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    apply(\"\");\n  }\n  function getSpeed(index) {\n    const { rewindSpeed } = options;\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n  mount(Extensions, Transition) {\n    const { state, Components: Components2 } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, (component) => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  sync(splide) {\n    this.splides.push(splide);\n    splide.splides.push(this);\n    return this;\n  }\n  go(control) {\n    this._Components.Controller.go(control);\n    return this;\n  }\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n    return this;\n  }\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n    return this;\n  }\n  is(type) {\n    return this._options.type === type;\n  }\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  destroy(completely = true) {\n    const { event, state } = this;\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, (component) => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    const { _options } = this;\n    merge(_options, options);\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n};\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\nconst CLASS_RENDERED = \"is-rendered\";\n\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n  build() {\n    let css = \"\";\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach((breakpoint) => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      css += `#${this.id} ${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n  static clean(splide) {\n    const { on } = EventInterface(splide);\n    const { root } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? { html: content } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n  registerRootStyles() {\n    this.breakpoints.forEach(([width, options]) => {\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n  registerTrackStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n  registerListStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n    });\n  }\n  registerSlideStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      const height = this.cssSlideHeight(options);\n      if (height) {\n        Style2.rule(selector, \"height\", height, width);\n      } else {\n        Style2.rule(selector, \"padding-top\", this.cssSlidePadding(options), width);\n      }\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n  buildTranslate(options) {\n    const { resolve, orient } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n    return values.filter(Boolean).map((value) => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n  cssOffsetClones(options) {\n    const { resolve, orient } = this.Direction;\n    const cloneCount = this.getCloneCount();\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n  cssOffsetCenter(options) {\n    const { resolve, orient } = this.Direction;\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n    const values = [];\n    const { perPage, gap } = options;\n    values.push(`${orient(50 / perPage)}%`);\n    if (gap) {\n      const { value, unit: unit2 } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n    return values;\n  }\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n    if (cloneCount && options.gap) {\n      const { orient } = this.Direction;\n      const { value, unit: unit2 } = this.parseCssValue(options.gap);\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n      const { perPage } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n    return \"\";\n  }\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n  cssPadding(options, right) {\n    const { padding } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  cssTrackHeight(options) {\n    let height = \"\";\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n    return height;\n  }\n  cssHeight(options) {\n    return unit(options.height);\n  }\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  cssSlidePadding(options) {\n    const { heightRatio } = options;\n    return heightRatio ? `${heightRatio * 100}%` : \"\";\n  }\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return { value: number, unit: unit2 };\n    }\n    return { value, unit: \"px\" };\n  }\n  parseBreakpoints() {\n    const { breakpoints } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n    return false;\n  }\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n  buildClasses() {\n    const { options } = this;\n    return [\n      CLASS_ROOT,\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE,\n      !this.config.hidden && CLASS_RENDERED\n    ].filter(Boolean).join(\" \");\n  }\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n  renderSlides() {\n    const { slideTag: tag } = this.config;\n    return this.slides.map((content) => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n  cover(content) {\n    const { styles, html = \"\" } = content;\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n  generateClones(contents) {\n    const { classes } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, { class: `${content.attrs.class} ${classes.clone}` });\n      const clone = assign({}, content, { attrs });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n  getCloneCount() {\n    if (this.isLoop()) {\n      const { options } = this;\n      if (options.clones) {\n        return options.clones;\n      }\n      const perPage = max(...this.breakpoints.map(([, options2]) => options2.perPage));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n    return 0;\n  }\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n  renderArrow(prev) {\n    const { classes, i18n } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n  html() {\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n    html += beforeTrack || \"\";\n    if (arrows) {\n      html += this.renderArrows();\n    }\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n    html += `</div>`;\n    return html;\n  }\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };\n","import Splide from '@splidejs/splide';\r\n\r\n\r\nif (document.querySelector('#carousel')) {\r\n  new Splide( '#carousel', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 4,\r\n    perMove: 1,\r\n    gap: 32,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n        padding: { right: 30, left: 30 },\r\n      },\r\n      767: {\r\n        perPage: 1,\r\n        gap: 10,\r\n        padding: { right: 30, left: 30 },\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n        padding: { right: 0, left: 0 },\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n\r\nif (document.querySelector('#testimonials')) {\r\n  new Splide( '#testimonials', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 3,\r\n    perMove: 1,\r\n    gap: 28,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n      },\r\n      767: {\r\n        perPage: 2,\r\n        gap: 10,\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n\r\nif (document.querySelector('#logos')) {\r\n  new Splide( '#logos', {\r\n    pagination: true,\r\n    type: 'slide',\r\n    perPage: 10,\r\n    destroy: true,\r\n    mediaQuery: 'min',\r\n    perMove: 1,\r\n    breakpoints: {\r\n      320: {\r\n        perPage: 2,\r\n        gap: 10,\r\n        perMove: 1,\r\n        destroy: false,\r\n        padding: { right: 30, left: 30 },\r\n      },\r\n      500: {\r\n        perPage: 3,\r\n        gap: 10,\r\n        perMove: 1,\r\n        destroy: false,\r\n        padding: { right: 30, left: 30 },\r\n      },\r\n      767: {\r\n        destroy: true,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n","/**\r\n * Toggle Nav\r\n * ======================================\r\n * - toggle class on body\r\n */\r\n\r\nconst ELEMENTS = '.togglenav__button'\r\nconst TOGGLE_CLASS = 'nav-is-open'\r\n\r\nclass ToggleNav {\r\n  constructor() {\r\n    this.elements = document.querySelectorAll(ELEMENTS)\r\n\r\n    if (!this.elements) {\r\n      return false\r\n    }\r\n\r\n    this.elements.forEach((el) => {\r\n      el.addEventListener('click', this.toggleNav, false)\r\n    })\r\n  }\r\n\r\n  toggleNav(e) {\r\n    document.body.classList.toggle(TOGGLE_CLASS)\r\n    document.body.classList.toggle('lock')\r\n\r\n    e.preventDefault()\r\n  }\r\n}\r\n\r\nnew ToggleNav()\r\n","import SimpleLightbox from \"simplelightbox\";\r\n\r\nnew SimpleLightbox('.gallery__fancybox', { /* options */ });\r\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.1\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SimpleLightbox = /*#__PURE__*/function () {\n  function SimpleLightbox(elements, options) {\n    var _this = this;\n\n    _classCallCheck(this, SimpleLightbox);\n\n    _defineProperty(this, \"defaultOptions\", {\n      sourceAttr: 'href',\n      overlay: true,\n      spinner: true,\n      nav: true,\n      navText: ['&lsaquo;', '&rsaquo;'],\n      captions: true,\n      captionDelay: 0,\n      captionSelector: 'img',\n      captionType: 'attr',\n      captionsData: 'title',\n      captionPosition: 'bottom',\n      captionClass: '',\n      close: true,\n      closeText: '&times;',\n      swipeClose: true,\n      showCounter: true,\n      fileExt: 'png|jpg|jpeg|gif|webp',\n      animationSlide: true,\n      animationSpeed: 250,\n      preloading: true,\n      enableKeyboard: true,\n      loop: true,\n      rel: false,\n      docClose: true,\n      swipeTolerance: 50,\n      className: 'simple-lightbox',\n      widthRatio: 0.8,\n      heightRatio: 0.9,\n      scaleImageToRatio: false,\n      disableRightClick: false,\n      disableScroll: true,\n      alertError: true,\n      alertErrorMessage: 'Image not found, next image will be loaded',\n      additionalHtml: false,\n      history: true,\n      throttleInterval: 0,\n      doubleTapZoom: 2,\n      maxZoom: 10,\n      htmlClass: 'has-lightbox',\n      rtl: false,\n      fixedClass: 'sl-fixed',\n      fadeSpeed: 300,\n      uniqueImages: true,\n      focus: true,\n      scrollZoom: true,\n      scrollZoomFactor: 0.5\n    });\n\n    _defineProperty(this, \"transitionPrefix\", void 0);\n\n    _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n    _defineProperty(this, \"transitionCapable\", false);\n\n    _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n    _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n    _defineProperty(this, \"initialLocationHash\", void 0);\n\n    _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n    _defineProperty(this, \"isOpen\", false);\n\n    _defineProperty(this, \"isAnimating\", false);\n\n    _defineProperty(this, \"isClosing\", false);\n\n    _defineProperty(this, \"isFadeIn\", false);\n\n    _defineProperty(this, \"urlChangedOnce\", false);\n\n    _defineProperty(this, \"hashReseted\", false);\n\n    _defineProperty(this, \"historyHasChanges\", false);\n\n    _defineProperty(this, \"historyUpdateTimeout\", null);\n\n    _defineProperty(this, \"currentImage\", void 0);\n\n    _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n    _defineProperty(this, \"domNodes\", {});\n\n    _defineProperty(this, \"loadedImages\", []);\n\n    _defineProperty(this, \"initialImageIndex\", 0);\n\n    _defineProperty(this, \"currentImageIndex\", 0);\n\n    _defineProperty(this, \"initialSelector\", null);\n\n    _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n    _defineProperty(this, \"controlCoordinates\", {\n      swipeDiff: 0,\n      swipeYDiff: 0,\n      swipeStart: 0,\n      swipeEnd: 0,\n      swipeYStart: 0,\n      swipeYEnd: 0,\n      mousedown: false,\n      imageLeft: 0,\n      zoomed: false,\n      containerHeight: 0,\n      containerWidth: 0,\n      containerOffsetX: 0,\n      containerOffsetY: 0,\n      imgHeight: 0,\n      imgWidth: 0,\n      capture: false,\n      initialOffsetX: 0,\n      initialOffsetY: 0,\n      initialPointerOffsetX: 0,\n      initialPointerOffsetY: 0,\n      initialPointerOffsetX2: 0,\n      initialPointerOffsetY2: 0,\n      initialScale: 1,\n      initialPinchDistance: 0,\n      pointerOffsetX: 0,\n      pointerOffsetY: 0,\n      pointerOffsetX2: 0,\n      pointerOffsetY2: 0,\n      targetOffsetX: 0,\n      targetOffsetY: 0,\n      targetScale: 0,\n      pinchOffsetX: 0,\n      pinchOffsetY: 0,\n      limitOffsetX: 0,\n      limitOffsetY: 0,\n      scaleDifference: 0,\n      targetPinchDistance: 0,\n      touchCount: 0,\n      doubleTapped: false,\n      touchmoveCount: 0\n    });\n\n    this.options = Object.assign(this.defaultOptions, options);\n    this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n    if (typeof elements === 'string') {\n      this.initialSelector = elements;\n      this.elements = Array.from(document.querySelectorAll(elements));\n    } else {\n      this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n    }\n\n    this.relatedElements = [];\n    this.transitionPrefix = this.calculateTransitionPrefix();\n    this.transitionCapable = this.transitionPrefix !== false;\n    this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n    if (this.options.rel) {\n      this.elements = this.getRelated(this.options.rel);\n    }\n\n    if (this.options.uniqueImages) {\n      var imgArr = [];\n      this.elements = Array.from(this.elements).filter(function (element) {\n        var src = element.getAttribute(_this.options.sourceAttr);\n\n        if (imgArr.indexOf(src) === -1) {\n          imgArr.push(src);\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    this.createDomNodes();\n\n    if (this.options.close) {\n      this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n    }\n\n    if (this.options.nav) {\n      this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n    }\n\n    if (this.options.spinner) {\n      this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n    }\n\n    this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n      if (_this.isValidLink(event.currentTarget)) {\n        event.preventDefault();\n\n        if (_this.isAnimating) {\n          return false;\n        }\n\n        _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n        _this.openImage(event.currentTarget);\n      }\n    }); // close addEventListener click addEventListener doc\n\n    if (this.options.docClose) {\n      this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n        if (_this.isOpen && event.target === event.currentTarget) {\n          _this.close();\n        }\n      });\n    } // disable rightclick\n\n\n    if (this.options.disableRightClick) {\n      this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n        if (event.target.parentElement.classList.contains(\"sl-image\")) {\n          event.preventDefault();\n        }\n      });\n    } // keyboard-control\n\n\n    if (this.options.enableKeyboard) {\n      this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n        _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n        if (_this.isAnimating && event.key === 'Escape') {\n          _this.currentImage.setAttribute('src', '');\n\n          _this.isAnimating = false;\n          return _this.close();\n        }\n\n        if (_this.isOpen) {\n          event.preventDefault();\n\n          if (event.key === 'Escape') {\n            _this.close();\n          }\n\n          if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n            _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n          }\n        }\n      }, this.options.throttleInterval));\n    }\n\n    this.addEvents();\n  }\n\n  _createClass(SimpleLightbox, [{\n    key: \"checkPassiveEventsSupport\",\n    value: function checkPassiveEventsSupport() {\n      // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n      // Test via a getter in the options object to see if the passive property is accessed\n      var supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            supportsPassive = true;\n          }\n        });\n        window.addEventListener(\"testPassive\", null, opts);\n        window.removeEventListener(\"testPassive\", null, opts);\n      } catch (e) {}\n\n      return supportsPassive;\n    }\n  }, {\n    key: \"createDomNodes\",\n    value: function createDomNodes() {\n      this.domNodes.overlay = document.createElement('div');\n      this.domNodes.overlay.classList.add('sl-overlay');\n      this.domNodes.overlay.dataset.opacityTarget = \".7\";\n      this.domNodes.closeButton = document.createElement('button');\n      this.domNodes.closeButton.classList.add('sl-close');\n      this.domNodes.closeButton.innerHTML = this.options.closeText;\n      this.domNodes.spinner = document.createElement('div');\n      this.domNodes.spinner.classList.add('sl-spinner');\n      this.domNodes.spinner.innerHTML = '<div></div>';\n      this.domNodes.navigation = document.createElement('div');\n      this.domNodes.navigation.classList.add('sl-navigation');\n      this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n      this.domNodes.counter = document.createElement('div');\n      this.domNodes.counter.classList.add('sl-counter');\n      this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n      this.domNodes.caption = document.createElement('div');\n      this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n      if (this.options.captionClass) {\n        this.domNodes.caption.classList.add(this.options.captionClass);\n      }\n\n      this.domNodes.image = document.createElement('div');\n      this.domNodes.image.classList.add('sl-image');\n      this.domNodes.wrapper = document.createElement('div');\n      this.domNodes.wrapper.classList.add('sl-wrapper');\n      this.domNodes.wrapper.setAttribute('tabindex', -1);\n      this.domNodes.wrapper.setAttribute('role', 'dialog');\n      this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n      if (this.options.className) {\n        this.domNodes.wrapper.classList.add(this.options.className);\n      }\n\n      if (this.options.rtl) {\n        this.domNodes.wrapper.classList.add('sl-dir-rtl');\n      }\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(func, limit) {\n      var inThrottle;\n      return function () {\n        if (!inThrottle) {\n          func.apply(this, arguments);\n          inThrottle = true;\n          setTimeout(function () {\n            return inThrottle = false;\n          }, limit);\n        }\n      };\n    }\n  }, {\n    key: \"isValidLink\",\n    value: function isValidLink(element) {\n      return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"calculateTransitionPrefix\",\n    value: function calculateTransitionPrefix() {\n      var s = (document.body || document.documentElement).style;\n      return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n    }\n  }, {\n    key: \"toggleScrollbar\",\n    value: function toggleScrollbar(type) {\n      var scrollbarWidth = 0;\n      var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n      if (type === 'hide') {\n        var fullWindowWidth = window.innerWidth;\n\n        if (!fullWindowWidth) {\n          var documentElementRect = document.documentElement.getBoundingClientRect();\n          fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n        }\n\n        if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n          var scrollDiv = document.createElement('div'),\n              paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n          scrollDiv.classList.add('sl-scrollbar-measure');\n          document.body.appendChild(scrollDiv);\n          scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          document.body.removeChild(scrollDiv);\n          document.body.dataset.originalPaddingRight = paddingRight;\n\n          if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n            document.body.classList.add('hidden-scroll');\n            document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n            fixedElements.forEach(function (element) {\n              var actualPadding = element.style.paddingRight;\n              var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n              element.dataset.originalPaddingRight = actualPadding;\n              element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n            });\n          }\n        }\n      } else {\n        document.body.classList.remove('hidden-scroll');\n        document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n        fixedElements.forEach(function (element) {\n          var padding = element.dataset.originalPaddingRight;\n\n          if (typeof padding !== 'undefined') {\n            element.style.paddingRight = padding;\n          }\n        });\n      }\n\n      return scrollbarWidth;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      if (!this.isOpen || this.isAnimating || this.isClosing) {\n        return false;\n      }\n\n      this.isClosing = true;\n      var element = this.relatedElements[this.currentImageIndex];\n      element.dispatchEvent(new Event('close.simplelightbox'));\n\n      if (this.options.history) {\n        this.historyHasChanges = false;\n\n        if (!this.hashReseted) {\n          this.resetHash();\n        }\n      }\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n        if (_this2.options.disableScroll) {\n          _this2.toggleScrollbar('show');\n        }\n\n        if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n          document.querySelector('html').classList.remove(_this2.options.htmlClass);\n        }\n\n        document.body.removeChild(_this2.domNodes.wrapper);\n        document.body.removeChild(_this2.domNodes.overlay);\n        _this2.domNodes.additionalHtml = null;\n        element.dispatchEvent(new Event('closed.simplelightbox'));\n        _this2.isClosing = false;\n      });\n      this.currentImage = null;\n      this.isOpen = false;\n      this.isAnimating = false; // reset touchcontrol coordinates\n\n      for (var key in this.controlCoordinates) {\n        this.controlCoordinates[key] = 0;\n      }\n\n      this.controlCoordinates.mousedown = false;\n      this.controlCoordinates.zoomed = false;\n      this.controlCoordinates.capture = false;\n      this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n      this.controlCoordinates.doubleTapped = false;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return window.location.hash.substring(1);\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      var _this3 = this;\n\n      var index = this.currentImageIndex,\n          length = this.relatedElements.length,\n          next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n          prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n          nextImage = new Image(),\n          prevImage = new Image();\n      nextImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          //is this condition even required... setting multiple times will not change usage...\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n      });\n      nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n      prevImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n      });\n      prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(direction) {\n      var _this4 = this;\n\n      var slideDirection = direction;\n\n      if (this.options.rtl) {\n        direction = -direction;\n      }\n\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n      var newIndex = this.currentImageIndex + direction;\n\n      if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n        return false;\n      }\n\n      this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n      if (this.options.animationSlide) {\n        this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n      }\n\n      this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n        _this4.isAnimating = true;\n\n        if (!_this4.isClosing) {\n          setTimeout(function () {\n            var element = _this4.relatedElements[_this4.currentImageIndex];\n\n            _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n            if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n              _this4.show(_this4.domNodes.spinner);\n            }\n\n            if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n              _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n            }\n\n            _this4.adjustImage(slideDirection);\n\n            if (_this4.options.preloading) _this4.preload();\n          }, 100);\n        } else {\n          _this4.isAnimating = false;\n        }\n      });\n    }\n  }, {\n    key: \"adjustImage\",\n    value: function adjustImage(direction) {\n      var _this5 = this;\n\n      if (!this.currentImage) {\n        return false;\n      }\n\n      var tmpImage = new Image(),\n          windowWidth = window.innerWidth * this.options.widthRatio,\n          windowHeight = window.innerHeight * this.options.heightRatio;\n      tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n      this.zoomPanElement(0, 0, 1);\n      tmpImage.addEventListener('error', function (event) {\n        _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n        _this5.isAnimating = false;\n        _this5.isOpen = true;\n        _this5.domNodes.spinner.style.display = 'none';\n        var dirIsDefined = direction === 1 || direction === -1;\n\n        if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n          return _this5.close();\n        }\n\n        if (_this5.options.alertError) {\n          alert(_this5.options.alertErrorMessage);\n        }\n\n        _this5.loadImage(dirIsDefined ? direction : 1);\n      });\n      tmpImage.addEventListener('load', function (event) {\n        if (typeof direction !== 'undefined') {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n        } // history\n\n\n        if (_this5.options.history) {\n          _this5.updateURL();\n        }\n\n        if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n          _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n        }\n\n        var imageWidth = event.target.width,\n            imageHeight = event.target.height;\n\n        if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n          var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n          imageWidth /= ratio;\n          imageHeight /= ratio;\n        }\n\n        _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n        _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n        _this5.domNodes.image.style.width = imageWidth + 'px';\n        _this5.domNodes.image.style.height = imageHeight + 'px';\n        _this5.domNodes.spinner.style.display = 'none';\n\n        if (_this5.options.focus) {\n          _this5.forceFocus();\n        }\n\n        _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n          if (_this5.options.focus) {\n            _this5.domNodes.wrapper.focus();\n          }\n        });\n\n        _this5.isOpen = true;\n        var captionContainer, captionText;\n\n        if (typeof _this5.options.captionSelector === 'string') {\n          captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n        } else if (typeof _this5.options.captionSelector === 'function') {\n          captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n        }\n\n        if (_this5.options.captions && captionContainer) {\n          if (_this5.options.captionType === 'data') {\n            captionText = captionContainer.dataset[_this5.options.captionsData];\n          } else if (_this5.options.captionType === 'text') {\n            captionText = captionContainer.innerHTML;\n          } else {\n            captionText = captionContainer.getAttribute(_this5.options.captionsData);\n          }\n        }\n\n        if (!_this5.options.loop) {\n          if (_this5.currentImageIndex === 0) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n\n          if (_this5.currentImageIndex > 0) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n        } else {\n          if (_this5.relatedElements.length === 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          } else {\n            _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          }\n        }\n\n        if (direction === 1 || direction === -1) {\n          if (_this5.options.animationSlide) {\n            _this5.slide(0, 100 * direction + 'px');\n\n            setTimeout(function () {\n              _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n            }, 50);\n          }\n\n          _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          });\n        } else {\n          _this5.isAnimating = false;\n\n          _this5.setCaption(captionText, imageWidth);\n        }\n\n        if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n          _this5.domNodes.additionalHtml = document.createElement('div');\n\n          _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n          _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n          _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n        }\n      });\n    }\n  }, {\n    key: \"zoomPanElement\",\n    value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n      this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n    }\n  }, {\n    key: \"minMax\",\n    value: function minMax(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n  }, {\n    key: \"setZoomData\",\n    value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n      this.currentImage.dataset.scale = initialScale;\n      this.currentImage.dataset.translateX = targetOffsetX;\n      this.currentImage.dataset.translateY = targetOffsetY;\n    }\n  }, {\n    key: \"hashchangeHandler\",\n    value: function hashchangeHandler() {\n      if (this.isOpen && this.hash === this.initialLocationHash) {\n        this.hashReseted = true;\n        this.close();\n      }\n    }\n  }, {\n    key: \"addEvents\",\n    value: function addEvents() {\n      var _this6 = this;\n\n      // resize/responsive\n      this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n        //this.adjustImage.bind(this)\n        if (_this6.isOpen) {\n          _this6.adjustImage();\n        }\n      });\n      this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n      if (this.options.history) {\n        setTimeout(function () {\n          _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n            if (_this6.isOpen) {\n              _this6.hashchangeHandler();\n            }\n          });\n        }, 40);\n      }\n\n      this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n        if (!event.currentTarget.tagName.match(/button/i)) {\n          return true;\n        }\n\n        event.preventDefault();\n        _this6.controlCoordinates.swipeDiff = 0;\n\n        _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n      });\n\n      if (this.options.scrollZoom) {\n        var scale = 1;\n        this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n          if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n            return true;\n          }\n\n          if (_this6.controlCoordinates.containerHeight == 0) {\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          }\n\n          event.preventDefault();\n          var delta = event.delta || event.wheelDelta;\n\n          if (delta === undefined) {\n            //we are on firefox\n            delta = event.detail;\n          }\n\n          delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n          // apply zoom\n\n          scale += delta * _this6.options.scrollZoomFactor * scale;\n          scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n          _this6.controlCoordinates.targetScale = scale;\n          _this6.controlCoordinates.pinchOffsetX = event.pageX;\n          _this6.controlCoordinates.pinchOffsetY = event.pageY;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n          if (_this6.controlCoordinates.targetScale > 1) {\n            _this6.controlCoordinates.zoomed = true;\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          } else {\n            if (_this6.controlCoordinates.initialScale === 1) {\n              _this6.controlCoordinates.zoomed = false;\n\n              if (_this6.domNodes.caption.style.display === 'none') {\n                _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = null;\n            _this6.controlCoordinates.capture = false;\n          }\n\n          _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n          _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n          _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n          _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n          _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        });\n      }\n\n      this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n        if (event.target.tagName === 'A' && event.type === 'touchstart') {\n          return true;\n        }\n\n        if (event.type === 'mousedown') {\n          event.preventDefault();\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n          _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n          _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          _this6.controlCoordinates.capture = true;\n        } else {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              if (!_this6.controlCoordinates.doubleTapped) {\n                _this6.controlCoordinates.doubleTapped = true;\n                setTimeout(function () {\n                  _this6.controlCoordinates.doubleTapped = false;\n                }, 300);\n              } else {\n                _this6.currentImage.classList.add('sl-transition');\n\n                if (!_this6.controlCoordinates.zoomed) {\n                  _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n\n                  _this6.controlCoordinates.zoomed = true;\n                } else {\n                  _this6.controlCoordinates.initialScale = 1;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  _this6.controlCoordinates.zoomed = false;\n                }\n\n                setTimeout(function () {\n                  if (_this6.currentImage) {\n                    _this6.currentImage.classList.remove('sl-transition');\n                  }\n                }, 200);\n                return false;\n              }\n\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            } else if (_this6.controlCoordinates.touchCount === 2)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n              _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n              _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n            }\n\n          _this6.controlCoordinates.capture = true;\n        }\n\n        if (_this6.controlCoordinates.mousedown) return true;\n\n        if (_this6.transitionCapable) {\n          _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n        }\n\n        _this6.controlCoordinates.mousedown = true;\n        _this6.controlCoordinates.swipeDiff = 0;\n        _this6.controlCoordinates.swipeYDiff = 0;\n        _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n        _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n        return false;\n      });\n      this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n        if (!_this6.controlCoordinates.mousedown) {\n          return true;\n        }\n\n        if (event.type === 'touchmove') {\n          if (_this6.controlCoordinates.capture === false) {\n            return false;\n          }\n\n          _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.touchmoveCount++;\n\n          if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n              if (_this6.controlCoordinates.initialPinchDistance === null) {\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                /* Initialize helpers */\n                _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                if (_this6.controlCoordinates.targetScale > 1) {\n                  _this6.controlCoordinates.zoomed = true;\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              }\n            } else {\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n        }\n        /* Mouse Move implementation */\n\n\n        if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n          if (event.type == 'touchmove') return true;\n          event.preventDefault();\n          if (_this6.controlCoordinates.capture === false) return false;\n          _this6.controlCoordinates.pointerOffsetX = event.clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.clientY;\n          _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n          }\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n            _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n          }\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        }\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n          _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n          _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n          if (_this6.options.animationSlide) {\n            _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n        if (_this6.isTouchDevice && event.type === 'touchend') {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n\n          if (_this6.controlCoordinates.touchCount === 0)\n            /* No touch */\n            {\n              /* Set attributes */\n              if (_this6.currentImage) {\n                _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n              }\n\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            } else if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            } else if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPinchDistance = null;\n            }\n        }\n\n        if (_this6.controlCoordinates.mousedown) {\n          _this6.controlCoordinates.mousedown = false;\n          var possibleDir = true;\n\n          if (!_this6.options.loop) {\n            if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n              possibleDir = false;\n            }\n\n            if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n              possibleDir = false;\n            }\n          }\n\n          if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n            _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n          } else if (_this6.options.animationSlide) {\n            _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n          }\n\n          if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n            _this6.close();\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n        if (_this6.isTouchDevice) return;\n        _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n        _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n        _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n        _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n        _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n        _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n        _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n        _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n        _this6.currentImage.classList.add('sl-transition');\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n            _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n\n          _this6.controlCoordinates.zoomed = true;\n        } else {\n          _this6.controlCoordinates.initialScale = 1;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          _this6.controlCoordinates.zoomed = false;\n\n          if (_this6.domNodes.caption.style.display === 'none') {\n            _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n        }\n\n        setTimeout(function () {\n          if (_this6.currentImage) {\n            _this6.currentImage.classList.remove('sl-transition');\n\n            _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n          }\n        }, 200);\n        _this6.controlCoordinates.capture = true;\n        return false;\n      });\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions(element) {\n      var styles = window.getComputedStyle(element),\n          height = element.offsetHeight,\n          width = element.offsetWidth,\n          borderTopWidth = parseFloat(styles.borderTopWidth),\n          borderBottomWidth = parseFloat(styles.borderBottomWidth),\n          paddingTop = parseFloat(styles.paddingTop),\n          paddingBottom = parseFloat(styles.paddingBottom),\n          borderLeftWidth = parseFloat(styles.borderLeftWidth),\n          borderRightWidth = parseFloat(styles.borderRightWidth),\n          paddingLeft = parseFloat(styles.paddingLeft),\n          paddingRight = parseFloat(styles.paddingRight);\n      return {\n        height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n        width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n      };\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash() {\n      var newHash = 'pid=' + (this.currentImageIndex + 1),\n          newURL = window.location.href.split('#')[0] + '#' + newHash;\n      this.hashReseted = false;\n\n      if (this.pushStateSupport) {\n        window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n      } else {\n        // what is the browser target of this?\n        if (this.historyHasChanges) {\n          window.location.replace(newURL);\n        } else {\n          window.location.hash = newHash;\n        }\n      }\n\n      if (!this.historyHasChanges) {\n        this.urlChangedOnce = true;\n      }\n\n      this.historyHasChanges = true;\n    }\n  }, {\n    key: \"resetHash\",\n    value: function resetHash() {\n      this.hashReseted = true;\n\n      if (this.urlChangedOnce) {\n        history.back();\n      } else {\n        if (this.pushStateSupport) {\n          history.pushState('', document.title, window.location.pathname + window.location.search);\n        } else {\n          window.location.hash = '';\n        }\n      } //\n      //in case an history operation is still pending\n\n\n      clearTimeout(this.historyUpdateTimeout);\n    }\n  }, {\n    key: \"updateURL\",\n    value: function updateURL() {\n      clearTimeout(this.historyUpdateTimeout);\n\n      if (!this.historyHasChanges) {\n        this.updateHash(); // first time\n      } else {\n        this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n      }\n    }\n  }, {\n    key: \"setCaption\",\n    value: function setCaption(captionText, imageWidth) {\n      var _this7 = this;\n\n      if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n        this.hide(this.domNodes.caption);\n        this.domNodes.caption.style.width = imageWidth + 'px';\n        this.domNodes.caption.innerHTML = captionText;\n        this.domNodes.image.appendChild(this.domNodes.caption);\n        setTimeout(function () {\n          _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n        }, this.options.captionDelay);\n      }\n    }\n  }, {\n    key: \"slide\",\n    value: function slide(speed, pos) {\n      if (!this.transitionCapable) {\n        return this.domNodes.image.style.left = pos;\n      }\n\n      this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n      this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n  }, {\n    key: \"getRelated\",\n    value: function getRelated(rel) {\n      var elems;\n\n      if (rel && rel !== false && rel !== 'nofollow') {\n        elems = Array.from(this.elements).filter(function (element) {\n          return element.getAttribute('rel') === rel;\n        });\n      } else {\n        elems = this.elements;\n      }\n\n      return elems;\n    }\n  }, {\n    key: \"openImage\",\n    value: function openImage(element) {\n      var _this8 = this;\n\n      element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n      if (this.options.disableScroll) {\n        this.globalScrollbarWidth = this.toggleScrollbar('hide');\n      }\n\n      if (this.options.htmlClass && this.options.htmlClass !== '') {\n        document.querySelector('html').classList.add(this.options.htmlClass);\n      }\n\n      document.body.appendChild(this.domNodes.wrapper);\n      this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n      if (this.options.overlay) {\n        document.body.appendChild(this.domNodes.overlay);\n      }\n\n      this.relatedElements = this.getRelated(element.rel);\n\n      if (this.options.showCounter) {\n        if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.removeChild(this.domNodes.counter);\n        } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.appendChild(this.domNodes.counter);\n        }\n      }\n\n      this.isAnimating = true;\n      this.currentImageIndex = this.relatedElements.indexOf(element);\n      var targetURL = element.getAttribute(this.options.sourceAttr);\n      this.currentImage = document.createElement('img');\n      this.currentImage.style.display = 'none';\n      this.currentImage.setAttribute('src', targetURL);\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n\n      if (this.loadedImages.indexOf(targetURL) === -1) {\n        this.loadedImages.push(targetURL);\n      }\n\n      this.domNodes.image.innerHTML = '';\n      this.domNodes.image.setAttribute('style', '');\n      this.domNodes.image.appendChild(this.currentImage);\n      this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n      this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n      this.show(this.domNodes.spinner);\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n      this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n      this.adjustImage();\n\n      if (this.options.preloading) {\n        this.preload();\n      }\n\n      setTimeout(function () {\n        element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n      }, this.options.animationSpeed);\n    }\n  }, {\n    key: \"forceFocus\",\n    value: function forceFocus() {\n      var _this9 = this;\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n        if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n          _this9.domNodes.wrapper.focus();\n        }\n      });\n    } // utility\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(elements, events, callback, opts) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator = _createForOfIteratorHelper(elements),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var element = _step.value;\n\n          if (!element.namespaces) {\n            element.namespaces = {};\n          } // save the namespaces addEventListener the DOM element itself\n\n\n          var _iterator2 = _createForOfIteratorHelper(events),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var event = _step2.value;\n              var options = opts || false;\n              var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n              if (needsPassiveFix && this.isPassiveEventsSupported) {\n                if (_typeof(options) === 'object') {\n                  options.passive = true;\n                } else {\n                  options = {\n                    passive: true\n                  };\n                }\n              }\n\n              element.namespaces[event] = callback;\n              element.addEventListener(event.split('.')[0], callback, options);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(elements, events) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator3 = _createForOfIteratorHelper(elements),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var element = _step3.value;\n\n          var _iterator4 = _createForOfIteratorHelper(events),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var event = _step4.value;\n\n              if (element.namespaces && element.namespaces[event]) {\n                element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                delete element.namespaces[event];\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"fadeOut\",\n    value: function fadeOut(elements, duration, callback) {\n      var _this10 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator5 = _createForOfIteratorHelper(elements),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var element = _step5.value;\n          element.style.opacity = 1;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.isFadeIn = false;\n\n      var step = 16.66666 / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if ((currentOpacity -= step) < 0) {\n          var _iterator6 = _createForOfIteratorHelper(elements),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var element = _step6.value;\n              element.style.display = \"none\"; // element.style.opacity = '';\n\n              element.style.opacity = 1;\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          callback && callback.call(_this10, elements);\n        } else {\n          var _iterator7 = _createForOfIteratorHelper(elements),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _element = _step7.value;\n              _element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n\n          requestAnimationFrame(fade);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"fadeIn\",\n    value: function fadeIn(elements, duration, callback, display) {\n      var _this11 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator8 = _createForOfIteratorHelper(elements),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var element = _step8.value;\n          element.style.opacity = 0;\n          element.style.display = display || \"block\";\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      this.isFadeIn = true;\n\n      var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n          step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if (!((currentOpacity += step) > opacityTarget)) {\n          var _iterator9 = _createForOfIteratorHelper(elements),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var element = _step9.value;\n              element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n\n          if (!_this11.isFadeIn) return;\n          requestAnimationFrame(fade);\n        } else {\n          var _iterator10 = _createForOfIteratorHelper(elements),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var _element2 = _step10.value;\n              _element2.style.opacity = '';\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          callback && callback.call(_this11, elements);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(elements) {\n      elements = this.wrap(elements);\n\n      var _iterator11 = _createForOfIteratorHelper(elements),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var element = _step11.value;\n\n          if (element.style.display != 'none') {\n            element.dataset.initialDisplay = element.style.display;\n          }\n\n          element.style.display = 'none';\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(elements, display) {\n      elements = this.wrap(elements);\n\n      var _iterator12 = _createForOfIteratorHelper(elements),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var element = _step12.value;\n          element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap(input) {\n      return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n  }, {\n    key: \"on\",\n    value: function on(events, callback) {\n      events = this.wrap(events);\n\n      var _iterator13 = _createForOfIteratorHelper(this.elements),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var element = _step13.value;\n\n          if (!element.fullyNamespacedEvents) {\n            element.fullyNamespacedEvents = {};\n          }\n\n          var _iterator14 = _createForOfIteratorHelper(events),\n              _step14;\n\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var event = _step14.value;\n              element.fullyNamespacedEvents[event] = callback;\n              element.addEventListener(event, callback);\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(events) {\n      events = this.wrap(events);\n\n      var _iterator15 = _createForOfIteratorHelper(this.elements),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var element = _step15.value;\n\n          var _iterator16 = _createForOfIteratorHelper(events),\n              _step16;\n\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var event = _step16.value;\n\n              if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n              }\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      return this;\n    } // api\n\n  }, {\n    key: \"open\",\n    value: function open(elem) {\n      elem = elem || this.elements[0];\n\n      if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n        elem = elem.get(0);\n      }\n\n      this.initialImageIndex = this.elements.indexOf(elem);\n\n      if (this.initialImageIndex > -1) {\n        this.openImage(elem);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.loadImage(1);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.loadImage(-1);\n    } // get some useful data\n\n  }, {\n    key: \"getLighboxData\",\n    value: function getLighboxData() {\n      return {\n        currentImageIndex: this.currentImageIndex,\n        currentImage: this.currentImage,\n        globalScrollbarWidth: this.globalScrollbarWidth\n      };\n    } //close is exposed anyways..\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      //remove all custom event listeners from elements\n      this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n      this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n      this.removeEventListener(window, 'resize.' + this.eventNamespace);\n      this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n      this.close();\n\n      if (this.isOpen) {\n        document.body.removeChild(this.domNodes.wrapper);\n        document.body.removeChild(this.domNodes.overlay);\n      }\n\n      this.elements = null;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (!this.initialSelector) {\n        throw 'refreshing only works when you initialize using a selector!';\n      }\n\n      var options = this.options,\n          selector = this.initialSelector;\n      this.destroy();\n      this.constructor(selector, options);\n      return this;\n    }\n  }]);\n\n  return SimpleLightbox;\n}();\n\nvar _default = SimpleLightbox;\nexports[\"default\"] = _default;\nglobal.SimpleLightbox = SimpleLightbox;","/**\n * Sticky Sidebar v2 JavaScript Plugin.\n * @version 1.0.1\n * @author Øystein Blixhavn <oystein@blixhavn.no>\n * @license The MIT License (MIT)\n */\nconst StickySidebar = (() => {\n\n    // ---------------------------------\n    // # Define Constants\n    // ---------------------------------\n    //\n    const EVENT_KEY = '.stickySidebar';\n    const VERSION   = '1.0.1';\n\n    const DEFAULTS = {\n      /**\n       * Additional top spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      topSpacing: 0,\n\n      /**\n       * Additional bottom spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      bottomSpacing: 0,\n\n      /**\n       * Container sidebar selector to know what the beginning and end of sticky element.\n       * @type {String|False}\n       */\n      containerSelector: false,\n\n      /**\n       * Parent element where the scrolling happens.\n       */\n      scrollContainer: false,\n\n      /**\n       * Inner wrapper selector.\n       * @type {String}\n       */\n      innerWrapperSelector: '.inner-wrapper-sticky',\n\n      /**\n       * The name of CSS class to apply to elements when they have become stuck.\n       * @type {String|False}\n       */\n      stickyClass: 'is-affixed',\n\n      /**\n       * The sidebar returns to its normal position if its width below this value.\n       * @type {Numeric}\n       */\n      minWidth: false\n    };\n\n    // ---------------------------------\n    // # Class Definition\n    // ---------------------------------\n    //\n    /**\n     * Sticky Sidebar Class.\n     * @public\n     */\n    class StickySidebar{\n\n      /**\n       * Sticky Sidebar Constructor.\n       * @constructor\n       * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n       * @param {Object} options - The options of sticky sidebar.\n       */\n      constructor(sidebar, options = {}){\n        this.options = StickySidebar.extend(DEFAULTS, options);\n\n        // Sidebar element query if there's no one, throw error.\n        this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n        if( 'undefined' === typeof this.sidebar )\n          throw new Error(\"There is no specific sidebar element.\");\n\n        this.sidebarInner = false;\n        this.container = this.sidebar.parentElement;\n\n        // Current Affix Type of sidebar element.\n        this.affixedType = 'STATIC';\n        this.direction = 'down';\n        this.support = {\n          transform:   false,\n          transform3d: false\n        };\n\n        this._initialized = false;\n        this._reStyle = false;\n        this._breakpoint = false;\n\n        // Dimensions of sidebar, container and screen viewport.\n        this.dimensions = {\n          translateY: 0,\n          maxTranslateY: 0,\n          topSpacing: 0,\n          lastTopSpacing: 0,\n          bottomSpacing: 0,\n          lastBottomSpacing: 0,\n          sidebarHeight: 0,\n          sidebarWidth: 0,\n          containerTop: 0,\n          containerHeight: 0,\n          viewportHeight: 0,\n          viewportTop: 0,\n          lastViewportTop: 0,\n        };\n\n        // Bind event handlers for referencability.\n        ['handleEvent'].forEach( (method) => {\n          this[method] = this[method].bind(this);\n        });\n\n        // Initialize sticky sidebar for first time.\n        this.initialize();\n      }\n\n      /**\n       * Initializes the sticky sidebar by adding inner wrapper, define its container,\n       * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n       * @private\n       */\n      initialize(){\n        this._setSupportFeatures();\n\n        // Get sticky sidebar inner wrapper, if not found, will create one.\n        if( this.options.innerWrapperSelector ){\n          this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n          if( null === this.sidebarInner )\n            this.sidebarInner = false;\n        }\n\n        if( ! this.sidebarInner ){\n          let wrapper = document.createElement('div');\n          wrapper.setAttribute('class', 'inner-wrapper-sticky');\n          this.sidebar.appendChild(wrapper);\n\n          while( this.sidebar.firstChild != wrapper )\n            wrapper.appendChild(this.sidebar.firstChild);\n\n          this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n        }\n\n        // Container wrapper of the sidebar.\n        if( this.options.containerSelector ){\n          let containers = document.querySelectorAll(this.options.containerSelector);\n          containers = Array.prototype.slice.call(containers);\n\n          containers.forEach((container, item) => {\n            if( ! container.contains(this.sidebar) ) return;\n            this.container = container;\n          });\n\n          if( ! containers.length )\n            throw new Error(\"The container does not contains on the sidebar.\");\n        }\n\n        // Get scroll container, if provided\n        this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n        // If top/bottom spacing is not function parse value to integer.\n        if( 'function' !== typeof this.options.topSpacing )\n          this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n        if( 'function' !== typeof this.options.bottomSpacing )\n          this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n        // Breakdown sticky sidebar if screen width below `options.minWidth`.\n        this._widthBreakpoint();\n\n        // Calculate dimensions of sidebar, container and viewport.\n        this.calcDimensions();\n\n        // Affix sidebar in proper position.\n        this.stickyPosition();\n\n        // Bind all events.\n        this.bindEvents();\n\n        // Inform other properties the sticky sidebar is initialized.\n        this._initialized = true;\n      }\n\n      /**\n       * Bind all events of sticky sidebar plugin.\n       * @protected\n       */\n      bindEvents(){\n        this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n        this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n        this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n        this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n        if( 'undefined' !== typeof ResizeObserver ){\n          const resizeObserver = new ResizeObserver(() => this.handleEvent())\n          resizeObserver.observe(this.sidebarInner)\n          resizeObserver.observe(this.container)\n        }\n      }\n\n      /**\n       * Handles all events of the plugin.\n       * @param {Object} event - Event object passed from listener.\n       */\n      handleEvent(event){\n        this.updateSticky(event);\n      }\n\n      /**\n       * Calculates dimensions of sidebar, container and screen viewpoint\n       * @public\n       */\n      calcDimensions(){\n        if( this._breakpoint ) return;\n        var dims = this.dimensions;\n\n        // Container of sticky sidebar dimensions.\n        dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n        dims.containerHeight = this.container.clientHeight;\n        dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n        // Sidebar dimensions.\n        dims.sidebarHeight = this.sidebarInner.offsetHeight;\n        dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n        // Screen viewport dimensions.\n        dims.viewportHeight = window.innerHeight;\n\n        // Maximum sidebar translate Y.\n        dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n        this._calcDimensionsWithScroll();\n      }\n\n      /**\n       * Some dimensions values need to be up-to-date when scrolling the page.\n       * @private\n       */\n      _calcDimensionsWithScroll(){\n        var dims = this.dimensions;\n\n        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n        if (this.scrollContainer) {\n          dims.viewportTop = this.scrollContainer.scrollTop;\n          dims.viewportLeft = this.scrollContainer.scrollLeft;\n        } else {\n          dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n          dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n        }\n        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n        dims.topSpacing    = this.options.topSpacing;\n        dims.bottomSpacing = this.options.bottomSpacing;\n\n        if( 'function' === typeof dims.topSpacing )\n            dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n        if( 'function' === typeof dims.bottomSpacing )\n            dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n        if( 'VIEWPORT-TOP' === this.affixedType ){\n          // Adjust translate Y in the case decrease top spacing value.\n          if( dims.topSpacing < dims.lastTopSpacing ){\n            dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n            this._reStyle = true;\n          }\n        } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n          // Adjust translate Y in the case decrease bottom spacing value.\n          if( dims.bottomSpacing < dims.lastBottomSpacing ){\n            dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n            this._reStyle = true;\n          }\n        }\n\n        dims.lastTopSpacing    = dims.topSpacing;\n        dims.lastBottomSpacing = dims.bottomSpacing;\n      }\n\n      /**\n       * Determine whether the sidebar is bigger than viewport.\n       * @public\n       * @return {Boolean}\n       */\n      isSidebarFitsViewport() {\n        return this.dimensions.viewportHeight >= (\n          this.dimensions.lastBottomSpacing +\n          this.dimensions.lastTopSpacing +\n          this.dimensions.sidebarHeight\n        );\n      }\n\n      /**\n       * Observe browser scrolling direction top and down.\n       */\n      observeScrollDir(){\n        var dims = this.dimensions;\n        if( dims.lastViewportTop === dims.viewportTop ) return;\n\n        var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n        // If the browser is scrolling not in the same direction.\n        if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n          this.direction = 'down' === this.direction ?  'up' : 'down';\n      }\n\n      /**\n       * Gets affix type of sidebar according to current scroll top and scrolling direction.\n       * @public\n       * @return {String|False} - Proper affix type.\n       */\n      getAffixType(){\n        this._calcDimensionsWithScroll();\n        var dims = this.dimensions;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var affixType = this.affixedType;\n\n       if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n          dims.translateY = 0;\n          affixType = 'STATIC';\n        } else {\n          affixType = ( 'up' === this.direction ) ?\n            this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n        }\n\n        // Make sure the translate Y is not bigger than container height.\n        dims.translateY = Math.max(0, dims.translateY);\n        dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n        dims.translateY = Math.round(dims.translateY);\n\n        dims.lastViewportTop = dims.viewportTop;\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling down.\n       * @private\n       * @return {String} - Proper affix type of scrolling down direction.\n       */\n      _getAffixTypeScrollingDown(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( this.isSidebarFitsViewport() ){\n          if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( colliderTop >= dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n          }\n        } else {\n          if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n            dims.translateY = colliderBottom - sidebarBottom;\n            affixType = 'VIEWPORT-BOTTOM';\n\n          } else if( dims.containerTop + dims.translateY <= colliderTop &&\n            (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling up.\n       * @private\n       * @return {String} - Proper affix type of scrolling up direction.\n       */\n      _getAffixTypeScrollingUp(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( colliderTop <= dims.translateY + dims.containerTop ){\n          dims.translateY = colliderTop - dims.containerTop;\n          affixType = 'VIEWPORT-TOP';\n\n        } else if( dims.containerBottom <= colliderBottom ){\n          dims.translateY = dims.containerBottom - sidebarBottom;\n          affixType = 'CONTAINER-BOTTOM';\n\n        } else if( ! this.isSidebarFitsViewport() ){\n\n          if( dims.containerTop <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Gets inline style of sticky sidebar wrapper and inner wrapper according\n       * to its affix type.\n       * @private\n       * @param {String} affixType - Affix type of sticky sidebar.\n       * @return {Object}\n       */\n      _getStyle(affixType){\n        if( 'undefined' === typeof affixType ) return;\n\n        var style = {inner: {}, outer: {}};\n        var dims = this.dimensions;\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n            style.inner = {position: 'fixed', top: dims.topSpacing,\n                  left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n            break;\n          case 'VIEWPORT-BOTTOM':\n            style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                  bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n            break;\n          case 'CONTAINER-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n            let translate = this._getTranslate(0, dims.translateY + 'px');\n\n            if( translate )\n              style.inner = {transform: translate};\n            else\n              style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n            break;\n        }\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n          case 'VIEWPORT-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n          case 'CONTAINER-BOTTOM':\n            style.outer = {height: dims.sidebarHeight, position: 'relative'};\n            break;\n        }\n\n        style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n        style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n            bottom: '', width: '',  transform: ''}, style.inner);\n\n        return style;\n      }\n\n      /**\n       * Cause the sidebar to be sticky according to affix type by adding inline\n       * style, adding helper class and trigger events.\n       * @function\n       * @protected\n       * @param {string} force - Update sticky sidebar position by force.\n       */\n      stickyPosition(force){\n        if( this._breakpoint ) return;\n\n        force = this._reStyle || force || false;\n\n        var offsetTop = this.options.topSpacing;\n        var offsetBottom = this.options.bottomSpacing;\n\n        var affixType = this.getAffixType();\n        var style = this._getStyle(affixType);\n\n        if( (this.affixedType != affixType || force) && affixType ){\n          let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n          if( 'STATIC' === affixType )\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          else\n            StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n          for( let key in style.outer ){\n            let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n            this.sidebar.style[key] = style.outer[key] + unit;\n          }\n\n          for( let key in style.inner ){\n            let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n            this.sidebarInner.style[key] = style.inner[key] + unit;\n          }\n\n          let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n        } else {\n          if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n        }\n\n        this.affixedType = affixType;\n      }\n\n      /**\n       * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n       * @protected\n       */\n      _widthBreakpoint(){\n\n        if( window.innerWidth <= this.options.minWidth ){\n          this._breakpoint = true;\n          this.affixedType = 'STATIC';\n\n          this.sidebar.removeAttribute('style');\n          StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          this.sidebarInner.removeAttribute('style');\n        } else {\n          this._breakpoint = false;\n        }\n      }\n\n      /**\n       * Switches between functions stack for each event type, if there's no\n       * event, it will re-initialize sticky sidebar.\n       * @public\n       */\n      updateSticky(event = {}){\n        if( this._running ) return;\n        this._running = true;\n\n        ((eventType) => {\n          requestAnimationFrame(() => {\n            switch( eventType ){\n              // When browser is scrolling and re-calculate just dimensions\n              // within scroll.\n              case 'scroll':\n                this._calcDimensionsWithScroll();\n                this.observeScrollDir();\n                this.stickyPosition();\n                break;\n\n              // When browser is resizing or there's no event, observe width\n              // breakpoint and re-calculate dimensions.\n              case 'resize':\n              default:\n                this._widthBreakpoint();\n                this.calcDimensions();\n                this.stickyPosition(true);\n                break;\n            }\n            this._running = false;\n          });\n        })(event.type);\n      }\n\n      /**\n       * Set browser support features to the public property.\n       * @private\n       */\n      _setSupportFeatures(){\n        var support = this.support;\n\n        support.transform = StickySidebar.supportTransform();\n        support.transform3d = StickySidebar.supportTransform(true);\n      }\n\n      /**\n       * Get translate value, if the browser supports transfrom3d, it will adopt it.\n       * and the same with translate. if browser doesn't support both return false.\n       * @param {Number} y - Value of Y-axis.\n       * @param {Number} x - Value of X-axis.\n       * @param {Number} z - Value of Z-axis.\n       * @return {String|False}\n       */\n      _getTranslate(y = 0, x = 0, z = 0){\n        if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n        else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n        else return false;\n      }\n\n      /**\n       * Destroy sticky sidebar plugin.\n       * @public\n       */\n      destroy(){\n        window.removeEventListener('resize', this, {capture: false});\n        window.removeEventListener('scroll', this, {capture: false});\n\n        this.sidebar.classList.remove(this.options.stickyClass);\n        this.sidebar.style.minHeight = '';\n\n        this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n        var styleReset = {inner: {}, outer: {}};\n\n        styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n        styleReset.outer = {height: '', position: ''};\n\n        for( let key in styleReset.outer )\n          this.sidebar.style[key] = styleReset.outer[key];\n\n        for( let key in styleReset.inner )\n          this.sidebarInner.style[key] = styleReset.inner[key];\n\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n          ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n          ResizeSensor.detach(this.container, this.handleEvent);\n        }\n      }\n\n      /**\n       * Determine if the browser supports CSS transform feature.\n       * @function\n       * @static\n       * @param {Boolean} transform3d - Detect transform with translate3d.\n       * @return {String}\n       */\n      static supportTransform(transform3d){\n        var result = false,\n            property = (transform3d) ? 'perspective' : 'transform',\n            upper = property.charAt(0).toUpperCase() + property.slice(1),\n            prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n            support = document.createElement('support'),\n            style = support.style;\n\n        (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n          if (style[property] !== undefined) {\n            result = property;\n            return false;\n          }\n        });\n        return result;\n      }\n\n      /**\n       * Trigger custom event.\n       * @static\n       * @param {DOMObject} element - Target element on the DOM.\n       * @param {String} eventName - Event name.\n       * @param {Object} data -\n       */\n      static eventTrigger(element, eventName, data){\n        try{\n          var event = new CustomEvent(eventName, {detail: data});\n        } catch(e){\n          var event = document.createEvent('CustomEvent');\n          event.initCustomEvent(eventName, true, true, data);\n        }\n        element.dispatchEvent(event);\n      }\n\n      /**\n       * Extend options object with defaults.\n       * @function\n       * @static\n       */\n      static extend(defaults, options){\n        var results = {};\n        for( let key in defaults ){\n          if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n          else results[key] = defaults[key];\n        }\n        return results;\n      }\n\n      /**\n       * Get current coordinates left and top of specific element.\n       * @static\n       */\n      static offsetRelative(element){\n        var result = {left: 0, top: 0};\n\n        do{\n          let offsetTop = element.offsetTop;\n          let offsetLeft = element.offsetLeft;\n\n          if( ! isNaN(offsetTop) )\n            result.top += offsetTop;\n\n          if( ! isNaN(offsetLeft) )\n            result.left += offsetLeft;\n\n          element = ( 'BODY' === element.tagName ) ?\n                      element.parentElement : element.offsetParent;\n        } while(element)\n        return result;\n      }\n\n      /**\n       * Add specific class name to specific element.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static addClass(element, className){\n        if( ! StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.add(className);\n          else\n            element.className += ' ' + className;\n        }\n      }\n\n      /**\n       * Remove specific class name to specific element\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static removeClass(element, className){\n        if( StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.remove(className);\n          else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n      }\n\n      /**\n       * Determine weather the element has specific class name.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static hasClass(element, className){\n        if (element.classList)\n          return element.classList.contains(className);\n        else\n          return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n      }\n\n      /**\n       * Gets default values of configuration options.\n       * @static\n       * @return {Object}\n       */\n      static get defaults(){\n        return DEFAULTS;\n      }\n    }\n\n    return StickySidebar;\n  })();\n\n  export default StickySidebar;\n\n  // Global\n  // -------------------------\n  window.StickySidebar = StickySidebar;\n","import StickySidebar from \"sticky-sidebar-v2\";\r\n\r\nif (document.querySelector('.sidebar')) {\r\n  var sidebar = new StickySidebar('.sidebar', {\r\n          containerSelector: '.layout',\r\n          innerWrapperSelector: '.sidebar__inner',\r\n          topSpacing: 30,\r\n          bottomSpacing: 20\r\n  });\r\n}\r\n","var objectExtend = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(\n            true,\n            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n              ? result[key]\n              : base,\n            value\n          );\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || (typeof val != 'object' && typeof val != 'function');\n}\n\nexport {objectExtend as default};\n","import $ewBKy$justextend from \"just-extend\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nclass $4040acfd8584338d$export$2e2bcd8739ae039 {\n    // Add an event listener for given event\n    on(event, fn) {\n        this._callbacks = this._callbacks || {\n        };\n        // Create namespace for this event\n        if (!this._callbacks[event]) this._callbacks[event] = [];\n        this._callbacks[event].push(fn);\n        return this;\n    }\n    emit(event, ...args) {\n        this._callbacks = this._callbacks || {\n        };\n        let callbacks = this._callbacks[event];\n        if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n        // trigger a corresponding DOM event\n        if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n            args: args\n        }));\n        return this;\n    }\n    makeEvent(eventName, detail) {\n        let params = {\n            bubbles: true,\n            cancelable: true,\n            detail: detail\n        };\n        if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n        else {\n            // IE 11 support\n            // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n            var evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        }\n    }\n    // Remove event listener for given event. If fn is not provided, all event\n    // listeners for that event will be removed. If neither is provided, all\n    // event listeners will be removed.\n    off(event, fn) {\n        if (!this._callbacks || arguments.length === 0) {\n            this._callbacks = {\n            };\n            return this;\n        }\n        // specific event\n        let callbacks = this._callbacks[event];\n        if (!callbacks) return this;\n        // remove all handlers\n        if (arguments.length === 1) {\n            delete this._callbacks[event];\n            return this;\n        }\n        // remove specific handler\n        for(let i = 0; i < callbacks.length; i++){\n            let callback = callbacks[i];\n            if (callback === fn) {\n                callbacks.splice(i, 1);\n                break;\n            }\n        }\n        return this;\n    }\n}\n\n\n\nvar $fd6031f88dce2e32$exports = {};\n$fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\nlet $4ca367182776f80b$var$defaultOptions = {\n    /**\n   * Has to be specified on elements other than form (or when the form doesn't\n   * have an `action` attribute).\n   *\n   * You can also provide a function that will be called with `files` and\n   * `dataBlocks`  and must return the url as string.\n   */ url: null,\n    /**\n   * Can be changed to `\"put\"` if necessary. You can also provide a function\n   * that will be called with `files` and must return the method (since `v3.12.0`).\n   */ method: \"post\",\n    /**\n   * Will be set on the XHRequest.\n   */ withCredentials: false,\n    /**\n   * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n   * If set to null or 0, no timeout is going to be set.\n   */ timeout: null,\n    /**\n   * How many file uploads to process in parallel (See the\n   * Enqueuing file uploads documentation section for more info)\n   */ parallelUploads: 2,\n    /**\n   * Whether to send multiple files in one request. If\n   * this it set to true, then the fallback file input element will\n   * have the `multiple` attribute as well. This option will\n   * also trigger additional events (like `processingmultiple`). See the events\n   * documentation section for more information.\n   */ uploadMultiple: false,\n    /**\n   * Whether you want files to be uploaded in chunks to your server. This can't be\n   * used in combination with `uploadMultiple`.\n   *\n   * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n   */ chunking: false,\n    /**\n   * If `chunking` is enabled, this defines whether **every** file should be chunked,\n   * even if the file size is below chunkSize. This means, that the additional chunk\n   * form data will be submitted and the `chunksUploaded` callback will be invoked.\n   */ forceChunking: false,\n    /**\n   * If `chunking` is `true`, then this defines the chunk size in bytes.\n   */ chunkSize: 2097152,\n    /**\n   * If `true`, the individual chunks of a file are being uploaded simultaneously.\n   */ parallelChunkUploads: false,\n    /**\n   * Whether a chunk should be retried if it fails.\n   */ retryChunks: false,\n    /**\n   * If `retryChunks` is true, how many times should it be retried.\n   */ retryChunksLimit: 3,\n    /**\n   * The maximum filesize (in MiB) that is allowed to be uploaded.\n   */ maxFilesize: 256,\n    /**\n   * The name of the file param that gets transferred.\n   * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n   * Dropzone will append `[]` to the name.\n   */ paramName: \"file\",\n    /**\n   * Whether thumbnails for images should be generated\n   */ createImageThumbnails: true,\n    /**\n   * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n   */ maxThumbnailFilesize: 10,\n    /**\n   * If `null`, the ratio of the image will be used to calculate it.\n   */ thumbnailWidth: 120,\n    /**\n   * The same as `thumbnailWidth`. If both are null, images will not be resized.\n   */ thumbnailHeight: 120,\n    /**\n   * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ thumbnailMethod: \"crop\",\n    /**\n   * If set, images will be resized to these dimensions before being **uploaded**.\n   * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n   * ratio of the file will be preserved.\n   *\n   * The `options.transformFile` function uses these options, so if the `transformFile` function\n   * is overridden, these options don't do anything.\n   */ resizeWidth: null,\n    /**\n   * See `resizeWidth`.\n   */ resizeHeight: null,\n    /**\n   * The mime type of the resized image (before it gets uploaded to the server).\n   * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n   * See `resizeWidth` for more information.\n   */ resizeMimeType: null,\n    /**\n   * The quality of the resized images. See `resizeWidth`.\n   */ resizeQuality: 0.8,\n    /**\n   * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ resizeMethod: \"contain\",\n    /**\n   * The base that is used to calculate the **displayed** filesize. You can\n   * change this to 1024 if you would rather display kibibytes, mebibytes,\n   * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n   * not `1 kilobyte`. You can change this to `1024` if you don't care about\n   * validity.\n   */ filesizeBase: 1000,\n    /**\n   * If not `null` defines how many files this Dropzone handles. If it exceeds,\n   * the event `maxfilesexceeded` will be called. The dropzone element gets the\n   * class `dz-max-files-reached` accordingly so you can provide visual\n   * feedback.\n   */ maxFiles: null,\n    /**\n   * An optional object to send additional headers to the server. Eg:\n   * `{ \"My-Awesome-Header\": \"header value\" }`\n   */ headers: null,\n    /**\n   * Should the default headers be set or not?\n   * Accept: application/json <- for requesting json response\n   * Cache-Control: no-cache <- Request shouldnt be cached\n   * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n   */ defaultHeaders: true,\n    /**\n   * If `true`, the dropzone element itself will be clickable, if `false`\n   * nothing will be clickable.\n   *\n   * You can also pass an HTML element, a CSS selector (for multiple elements)\n   * or an array of those. In that case, all of those elements will trigger an\n   * upload when clicked.\n   */ clickable: true,\n    /**\n   * Whether hidden files in directories should be ignored.\n   */ ignoreHiddenFiles: true,\n    /**\n   * The default implementation of `accept` checks the file's mime type or\n   * extension against this list. This is a comma separated list of mime\n   * types or file extensions.\n   *\n   * Eg.: `image/*,application/pdf,.psd`\n   *\n   * If the Dropzone is `clickable` this option will also be used as\n   * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n   * parameter on the hidden file input as well.\n   */ acceptedFiles: null,\n    /**\n   * **Deprecated!**\n   * Use acceptedFiles instead.\n   */ acceptedMimeTypes: null,\n    /**\n   * If false, files will be added to the queue but the queue will not be\n   * processed automatically.\n   * This can be useful if you need some additional user input before sending\n   * files (or if you want want all files sent at once).\n   * If you're ready to send the file simply call `myDropzone.processQueue()`.\n   *\n   * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n   * section for more information.\n   */ autoProcessQueue: true,\n    /**\n   * If false, files added to the dropzone will not be queued by default.\n   * You'll have to call `enqueueFile(file)` manually.\n   */ autoQueue: true,\n    /**\n   * If `true`, this will add a link to every file preview to remove or cancel (if\n   * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n   * and `dictRemoveFile` options are used for the wording.\n   */ addRemoveLinks: false,\n    /**\n   * Defines where to display the file previews – if `null` the\n   * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n   * selector. The element should have the `dropzone-previews` class so\n   * the previews are displayed properly.\n   */ previewsContainer: null,\n    /**\n   * Set this to `true` if you don't want previews to be shown.\n   */ disablePreviews: false,\n    /**\n   * This is the element the hidden input field (which is used when clicking on the\n   * dropzone to trigger file selection) will be appended to. This might\n   * be important in case you use frameworks to switch the content of your page.\n   *\n   * Can be a selector string, or an element directly.\n   */ hiddenInputContainer: \"body\",\n    /**\n   * If null, no capture type will be specified\n   * If camera, mobile devices will skip the file selection and choose camera\n   * If microphone, mobile devices will skip the file selection and choose the microphone\n   * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n   * On apple devices multiple must be set to false.  AcceptedFiles may need to\n   * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n   */ capture: null,\n    /**\n   * **Deprecated**. Use `renameFile` instead.\n   */ renameFilename: null,\n    /**\n   * A function that is invoked before the file is uploaded to the server and renames the file.\n   * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n   * file that gets used during the upload can be accessed through `file.upload.filename`.\n   */ renameFile: null,\n    /**\n   * If `true` the fallback will be forced. This is very useful to test your server\n   * implementations first and make sure that everything works as\n   * expected without dropzone if you experience problems, and to test\n   * how your fallbacks will look.\n   */ forceFallback: false,\n    /**\n   * The text used before any files are dropped.\n   */ dictDefaultMessage: \"Drop files here to upload\",\n    /**\n   * The text that replaces the default message text it the browser is not supported.\n   */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n    /**\n   * The text that will be added before the fallback form.\n   * If you provide a  fallback element yourself, or if this option is `null` this will\n   * be ignored.\n   */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n    /**\n   * If the filesize is too big.\n   * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n   */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n    /**\n   * If the file doesn't match the file type.\n   */ dictInvalidFileType: \"You can't upload files of this type.\",\n    /**\n   * If the server response was invalid.\n   * `{{statusCode}}` will be replaced with the servers status code.\n   */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n   */ dictCancelUpload: \"Cancel upload\",\n    /**\n   * The text that is displayed if an upload was manually canceled\n   */ dictUploadCanceled: \"Upload canceled.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n   */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used to remove a file.\n   */ dictRemoveFile: \"Remove file\",\n    /**\n   * If this is not null, then the user will be prompted before removing a file.\n   */ dictRemoveFileConfirmation: null,\n    /**\n   * Displayed if `maxFiles` is st and exceeded.\n   * The string `{{maxFiles}}` will be replaced by the configuration value.\n   */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n    /**\n   * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n   * `b` for bytes.\n   */ dictFileSizeUnits: {\n        tb: \"TB\",\n        gb: \"GB\",\n        mb: \"MB\",\n        kb: \"KB\",\n        b: \"b\"\n    },\n    /**\n   * Called when dropzone initialized\n   * You can add event listeners here\n   */ init () {\n    },\n    /**\n   * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n   * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n   * of a function, this needs to return a map.\n   *\n   * The default implementation does nothing for normal uploads, but adds relevant information for\n   * chunked uploads.\n   *\n   * This is the same as adding hidden input fields in the form element.\n   */ params (files, xhr, chunk) {\n        if (chunk) return {\n            dzuuid: chunk.file.upload.uuid,\n            dzchunkindex: chunk.index,\n            dztotalfilesize: chunk.file.size,\n            dzchunksize: this.options.chunkSize,\n            dztotalchunkcount: chunk.file.upload.totalChunkCount,\n            dzchunkbyteoffset: chunk.index * this.options.chunkSize\n        };\n    },\n    /**\n   * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n   * and a `done` function as parameters.\n   *\n   * If the done function is invoked without arguments, the file is \"accepted\" and will\n   * be processed. If you pass an error message, the file is rejected, and the error\n   * message will be displayed.\n   * This function will not be called if the file is too big or doesn't match the mime types.\n   */ accept (file, done) {\n        return done();\n    },\n    /**\n   * The callback that will be invoked when all chunks have been uploaded for a file.\n   * It gets the file for which the chunks have been uploaded as the first parameter,\n   * and the `done` function as second. `done()` needs to be invoked when everything\n   * needed to finish the upload process is done.\n   */ chunksUploaded: function(file, done) {\n        done();\n    },\n    /**\n   * Sends the file as binary blob in body instead of form data.\n   * If this is set, the `params` option will be ignored.\n   * It's an error to set this to `true` along with `uploadMultiple` since\n   * multiple files cannot be in a single binary body.\n   */ binaryBody: false,\n    /**\n   * Gets called when the browser is not supported.\n   * The default implementation shows the fallback input field and adds\n   * a text.\n   */ fallback () {\n        // This code should pass in IE7... :(\n        let messageElement;\n        this.element.className = `${this.element.className} dz-browser-not-supported`;\n        for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\"; // Removes the 'dz-default' class\n            break;\n        }\n        if (!messageElement) {\n            messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n            this.element.appendChild(messageElement);\n        }\n        let span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n            if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n            else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n        }\n        return this.element.appendChild(this.getFallbackForm());\n    },\n    /**\n   * Gets called to calculate the thumbnail dimensions.\n   *\n   * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n   *\n   *  - `srcWidth` & `srcHeight` (required)\n   *  - `trgWidth` & `trgHeight` (required)\n   *  - `srcX` & `srcY` (optional, default `0`)\n   *  - `trgX` & `trgY` (optional, default `0`)\n   *\n   * Those values are going to be used by `ctx.drawImage()`.\n   */ resize (file, width, height, resizeMethod) {\n        let info = {\n            srcX: 0,\n            srcY: 0,\n            srcWidth: file.width,\n            srcHeight: file.height\n        };\n        let srcRatio = file.width / file.height;\n        // Automatically calculate dimensions if not specified\n        if (width == null && height == null) {\n            width = info.srcWidth;\n            height = info.srcHeight;\n        } else if (width == null) width = height * srcRatio;\n        else if (height == null) height = width / srcRatio;\n        // Make sure images aren't upscaled\n        width = Math.min(width, info.srcWidth);\n        height = Math.min(height, info.srcHeight);\n        let trgRatio = width / height;\n        if (info.srcWidth > width || info.srcHeight > height) {\n            // Image is bigger and needs rescaling\n            if (resizeMethod === \"crop\") {\n                if (srcRatio > trgRatio) {\n                    info.srcHeight = file.height;\n                    info.srcWidth = info.srcHeight * trgRatio;\n                } else {\n                    info.srcWidth = file.width;\n                    info.srcHeight = info.srcWidth / trgRatio;\n                }\n            } else if (resizeMethod === \"contain\") {\n                // Method 'contain'\n                if (srcRatio > trgRatio) height = width / srcRatio;\n                else width = height * srcRatio;\n            } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        info.trgWidth = width;\n        info.trgHeight = height;\n        return info;\n    },\n    /**\n   * Can be used to transform the file (for example, resize an image if necessary).\n   *\n   * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n   * images according to those dimensions.\n   *\n   * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n   * to be invoked with the file when the transformation is done.\n   */ transformFile (file, done) {\n        if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n        else return done(file);\n    },\n    /**\n   * A string that contains the template used for each dropped\n   * file. Change it to fulfill your needs but make sure to properly\n   * provide all elements.\n   *\n   * If you want to use an actual HTML element instead of providing a String\n   * as a config option, you could create a div with the id `tpl`,\n   * put the template inside it and provide the element like this:\n   *\n   *     document\n   *       .querySelector('#tpl')\n   *       .innerHTML\n   *\n   */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n    /*\n   Those functions register themselves to the events on init and handle all\n   the user interface specific stuff. Overwriting them won't break the upload\n   but can break the way it's displayed.\n   You can overwrite them if you don't like the default behavior. If you just\n   want to add an additional event handler, register it on the dropzone object\n   and don't overwrite those options.\n   */ // Those are self explanatory and simply concern the DragnDrop.\n    drop (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragstart (e) {\n    },\n    dragend (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragenter (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragover (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragleave (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    paste (e) {\n    },\n    // Called whenever there are no files left in the dropzone anymore, and the\n    // dropzone should be displayed as if in the initial state.\n    reset () {\n        return this.element.classList.remove(\"dz-started\");\n    },\n    // Called when a file is added to the queue\n    // Receives `file`\n    addedfile (file) {\n        if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n        if (this.previewsContainer && !this.options.disablePreviews) {\n            file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n            file.previewTemplate = file.previewElement; // Backwards compatibility\n            this.previewsContainer.appendChild(file.previewElement);\n            for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n            for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n            if (this.options.addRemoveLinks) {\n                file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                file.previewElement.appendChild(file._removeLink);\n            }\n            let removeFileEvent = (e)=>{\n                e.preventDefault();\n                e.stopPropagation();\n                if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                );\n                else {\n                    if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                    );\n                    else return this.removeFile(file);\n                }\n            };\n            for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n        }\n    },\n    // Called whenever a file is removed.\n    removedfile (file) {\n        if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n        return this._updateMaxFilesReachedClass();\n    },\n    // Called when a thumbnail has been generated\n    // Receives `file` and `dataUrl`\n    thumbnail (file, dataUrl) {\n        if (file.previewElement) {\n            file.previewElement.classList.remove(\"dz-file-preview\");\n            for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                thumbnailElement.alt = file.name;\n                thumbnailElement.src = dataUrl;\n            }\n            return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n            , 1);\n        }\n    },\n    // Called whenever an error occurs\n    // Receives `file` and `message`\n    error (file, message) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-error\");\n            if (typeof message !== \"string\" && message.error) message = message.error;\n            for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n        }\n    },\n    errormultiple () {\n    },\n    // Called when a file gets processed. Since there is a cue, not all added\n    // files are processed immediately.\n    // Receives `file`\n    processing (file) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-processing\");\n            if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n        }\n    },\n    processingmultiple () {\n    },\n    // Called whenever the upload progress gets updated.\n    // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n    // To get the total number of bytes of the file, use `file.size`\n    uploadprogress (file, progress, bytesSent) {\n        if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n    },\n    // Called whenever the total upload progress gets updated.\n    // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n    totaluploadprogress () {\n    },\n    // Called just before the file is sent. Gets the `xhr` object as second\n    // parameter, so you can modify it (for example to add a CSRF token) and a\n    // `formData` object to add additional information.\n    sending () {\n    },\n    sendingmultiple () {\n    },\n    // When the complete upload is finished and successful\n    // Receives `file`\n    success (file) {\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n    },\n    successmultiple () {\n    },\n    // When the upload is canceled.\n    canceled (file) {\n        return this.emit(\"error\", file, this.options.dictUploadCanceled);\n    },\n    canceledmultiple () {\n    },\n    // When the upload is finished, either with success or an error.\n    // Receives `file`\n    complete (file) {\n        if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n    },\n    completemultiple () {\n    },\n    maxfilesexceeded () {\n    },\n    maxfilesreached () {\n    },\n    queuecomplete () {\n    },\n    addedfiles () {\n    }\n};\nvar $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\nclass $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n    static initClass() {\n        // Exposing the emitter class, mainly for tests\n        this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n        /*\n     This is a list of all available events you can register on a dropzone object.\n\n     You can register an event handler like this:\n\n     dropzone.on(\"dragEnter\", function() { });\n\n     */ this.prototype.events = [\n            \"drop\",\n            \"dragstart\",\n            \"dragend\",\n            \"dragenter\",\n            \"dragover\",\n            \"dragleave\",\n            \"addedfile\",\n            \"addedfiles\",\n            \"removedfile\",\n            \"thumbnail\",\n            \"error\",\n            \"errormultiple\",\n            \"processing\",\n            \"processingmultiple\",\n            \"uploadprogress\",\n            \"totaluploadprogress\",\n            \"sending\",\n            \"sendingmultiple\",\n            \"success\",\n            \"successmultiple\",\n            \"canceled\",\n            \"canceledmultiple\",\n            \"complete\",\n            \"completemultiple\",\n            \"reset\",\n            \"maxfilesexceeded\",\n            \"maxfilesreached\",\n            \"queuecomplete\", \n        ];\n        this.prototype._thumbnailQueue = [];\n        this.prototype._processingThumbnail = false;\n    }\n    // Returns all files that have been accepted\n    getAcceptedFiles() {\n        return this.files.filter((file)=>file.accepted\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that have been rejected\n    // Not sure when that's going to be useful, but added for completeness.\n    getRejectedFiles() {\n        return this.files.filter((file)=>!file.accepted\n        ).map((file)=>file\n        );\n    }\n    getFilesWithStatus(status) {\n        return this.files.filter((file)=>file.status === status\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that are in the queue\n    getQueuedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n    }\n    getUploadingFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n    }\n    getAddedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n    }\n    // Files that are either queued or uploading\n    getActiveFiles() {\n        return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n        ).map((file)=>file\n        );\n    }\n    // The function that gets called when Dropzone is initialized. You\n    // can (and should) setup event listeners inside this function.\n    init() {\n        // In case it isn't set already\n        if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n        if (this.clickableElements.length) {\n            let setupHiddenFileInput = ()=>{\n                if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                this.hiddenFileInput = document.createElement(\"input\");\n                this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                this.hiddenFileInput.className = \"dz-hidden-input\";\n                if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                // Making sure that no one can \"tab\" into this field.\n                this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                // Not setting `display=\"none\"` because some browsers don't accept clicks\n                // on elements that aren't displayed.\n                this.hiddenFileInput.style.visibility = \"hidden\";\n                this.hiddenFileInput.style.position = \"absolute\";\n                this.hiddenFileInput.style.top = \"0\";\n                this.hiddenFileInput.style.left = \"0\";\n                this.hiddenFileInput.style.height = \"0\";\n                this.hiddenFileInput.style.width = \"0\";\n                $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                    let { files: files  } = this.hiddenFileInput;\n                    if (files.length) for (let file of files)this.addFile(file);\n                    this.emit(\"addedfiles\", files);\n                    setupHiddenFileInput();\n                });\n            };\n            setupHiddenFileInput();\n        }\n        this.URL = window.URL !== null ? window.URL : window.webkitURL;\n        // Setup all event listeners on the Dropzone object itself.\n        // They're not in @setupEventListeners() because they shouldn't be removed\n        // again when the dropzone gets disabled.\n        for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n        this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n        );\n        // Emit a `queuecomplete` event if all files finished uploading.\n        this.on(\"complete\", (file)=>{\n            if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n            return setTimeout(()=>this.emit(\"queuecomplete\")\n            , 0);\n        });\n        const containsFiles = function(e) {\n            if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n            // IE, we need to iterate like this instead of\n            // using e.dataTransfer.types.some()\n            for(var i = 0; i < e.dataTransfer.types.length; i++){\n                if (e.dataTransfer.types[i] === \"Files\") return true;\n            }\n            return false;\n        };\n        let noPropagation = function(e) {\n            // If there are no files, we don't want to stop\n            // propagation so we don't interfere with other\n            // drag and drop behaviour.\n            if (!containsFiles(e)) return;\n            e.stopPropagation();\n            if (e.preventDefault) return e.preventDefault();\n            else return e.returnValue = false;\n        };\n        // Create the listeners\n        this.listeners = [\n            {\n                element: this.element,\n                events: {\n                    dragstart: (e)=>{\n                        return this.emit(\"dragstart\", e);\n                    },\n                    dragenter: (e)=>{\n                        noPropagation(e);\n                        return this.emit(\"dragenter\", e);\n                    },\n                    dragover: (e)=>{\n                        // Makes it possible to drag files from chrome's download bar\n                        // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                        // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                        let efct;\n                        try {\n                            efct = e.dataTransfer.effectAllowed;\n                        } catch (error) {\n                        }\n                        e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                        noPropagation(e);\n                        return this.emit(\"dragover\", e);\n                    },\n                    dragleave: (e)=>{\n                        return this.emit(\"dragleave\", e);\n                    },\n                    drop: (e)=>{\n                        noPropagation(e);\n                        return this.drop(e);\n                    },\n                    dragend: (e)=>{\n                        return this.emit(\"dragend\", e);\n                    }\n                }\n            }, \n        ];\n        this.clickableElements.forEach((clickableElement)=>{\n            return this.listeners.push({\n                element: clickableElement,\n                events: {\n                    click: (evt)=>{\n                        // Only the actual dropzone or the message element should trigger file selection\n                        if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                        return true;\n                    }\n                }\n            });\n        });\n        this.enable();\n        return this.options.init.call(this);\n    }\n    // Not fully tested yet\n    destroy() {\n        this.disable();\n        this.removeAllFiles(true);\n        if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n            this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n            this.hiddenFileInput = null;\n        }\n        delete this.element.dropzone;\n        return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n    }\n    updateTotalUploadProgress() {\n        let totalUploadProgress;\n        let totalBytesSent = 0;\n        let totalBytes = 0;\n        let activeFiles = this.getActiveFiles();\n        if (activeFiles.length) {\n            for (let file of this.getActiveFiles()){\n                totalBytesSent += file.upload.bytesSent;\n                totalBytes += file.upload.total;\n            }\n            totalUploadProgress = 100 * totalBytesSent / totalBytes;\n        } else totalUploadProgress = 100;\n        return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    }\n    // @options.paramName can be a function taking one parameter rather than a string.\n    // A parameter name for a file is obtained simply by calling this with an index number.\n    _getParamName(n) {\n        if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n        else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n    }\n    // If @options.renameFile is a function,\n    // the function will be used to rename the file.name before appending it to the formData\n    _renameFile(file) {\n        if (typeof this.options.renameFile !== \"function\") return file.name;\n        return this.options.renameFile(file);\n    }\n    // Returns a form that can be used as fallback if the browser does not support DragnDrop\n    //\n    // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n    // This code has to pass in IE7 :(\n    getFallbackForm() {\n        let existingFallback, form;\n        if (existingFallback = this.getExistingFallback()) return existingFallback;\n        let fieldsString = '<div class=\"dz-fallback\">';\n        if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n        fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n        let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n        if (this.element.tagName !== \"FORM\") {\n            form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n            form.appendChild(fields);\n        } else {\n            // Make sure that the enctype and method attributes are set properly\n            this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n            this.element.setAttribute(\"method\", this.options.method);\n        }\n        return form != null ? form : fields;\n    }\n    // Returns the fallback elements if they exist already\n    //\n    // This code has to pass in IE7 :(\n    getExistingFallback() {\n        let getFallback = function(elements) {\n            for (let el of elements){\n                if (/(^| )fallback($| )/.test(el.className)) return el;\n            }\n        };\n        for (let tagName of [\n            \"div\",\n            \"form\"\n        ]){\n            var fallback;\n            if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n        }\n    }\n    // Activates all listeners stored in @listeners\n    setupEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.addEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Deactivates all listeners stored in @listeners\n    removeEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.removeEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Removes all event listeners and cancels all files in the queue or being processed.\n    disable() {\n        this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n        );\n        this.removeEventListeners();\n        this.disabled = true;\n        return this.files.map((file)=>this.cancelUpload(file)\n        );\n    }\n    enable() {\n        delete this.disabled;\n        this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n        );\n        return this.setupEventListeners();\n    }\n    // Returns a nicely formatted filesize\n    filesize(size) {\n        let selectedSize = 0;\n        let selectedUnit = \"b\";\n        if (size > 0) {\n            let units = [\n                \"tb\",\n                \"gb\",\n                \"mb\",\n                \"kb\",\n                \"b\"\n            ];\n            for(let i = 0; i < units.length; i++){\n                let unit = units[i];\n                let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                if (size >= cutoff) {\n                    selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                    selectedUnit = unit;\n                    break;\n                }\n            }\n            selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n        }\n        return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n    }\n    // Adds or removes the `dz-max-files-reached` class from the form.\n    _updateMaxFilesReachedClass() {\n        if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n            return this.element.classList.add(\"dz-max-files-reached\");\n        } else return this.element.classList.remove(\"dz-max-files-reached\");\n    }\n    drop(e) {\n        if (!e.dataTransfer) return;\n        this.emit(\"drop\", e);\n        // Convert the FileList to an Array\n        // This is necessary for IE11\n        let files = [];\n        for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n        // Even if it's a folder, files.length will contain the folders.\n        if (files.length) {\n            let { items: items  } = e.dataTransfer;\n            if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n            this._addFilesFromItems(items);\n            else this.handleFiles(files);\n        }\n        this.emit(\"addedfiles\", files);\n    }\n    paste(e) {\n        if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n        ) == null) return;\n        this.emit(\"paste\", e);\n        let { items: items  } = e.clipboardData;\n        if (items.length) return this._addFilesFromItems(items);\n    }\n    handleFiles(files) {\n        for (let file of files)this.addFile(file);\n    }\n    // When a folder is dropped (or files are pasted), items must be handled\n    // instead of files.\n    _addFilesFromItems(items) {\n        return (()=>{\n            let result = [];\n            for (let item of items){\n                var entry;\n                if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                    if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                    else if (entry.isDirectory) // Append all files from that directory to files\n                    result.push(this._addFilesFromDirectory(entry, entry.name));\n                    else result.push(undefined);\n                } else if (item.getAsFile != null) {\n                    if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                    else result.push(undefined);\n                } else result.push(undefined);\n            }\n            return result;\n        })();\n    }\n    // Goes through the directory, and adds each file it finds recursively\n    _addFilesFromDirectory(directory, path) {\n        let dirReader = directory.createReader();\n        let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n            )\n        ;\n        var readEntries = ()=>{\n            return dirReader.readEntries((entries)=>{\n                if (entries.length > 0) {\n                    for (let entry of entries){\n                        if (entry.isFile) entry.file((file)=>{\n                            if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                            file.fullPath = `${path}/${file.name}`;\n                            return this.addFile(file);\n                        });\n                        else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                    }\n                    // Recursively call readEntries() again, since browser only handle\n                    // the first 100 entries.\n                    // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                    readEntries();\n                }\n                return null;\n            }, errorHandler);\n        };\n        return readEntries();\n    }\n    // If `done()` is called without argument the file is accepted\n    // If you call it with an error message, the file is rejected\n    // (This allows for asynchronous validation)\n    //\n    // This function checks the filesize, and if the file.type passes the\n    // `acceptedFiles` check.\n    accept(file, done) {\n        if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n        else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n        else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n            this.emit(\"maxfilesexceeded\", file);\n        } else this.options.accept.call(this, file, done);\n    }\n    addFile(file) {\n        file.upload = {\n            uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n            progress: 0,\n            // Setting the total upload size to file.size for the beginning\n            // It's actual different than the size to be transmitted.\n            total: file.size,\n            bytesSent: 0,\n            filename: this._renameFile(file)\n        };\n        this.files.push(file);\n        file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n        this.emit(\"addedfile\", file);\n        this._enqueueThumbnail(file);\n        this.accept(file, (error)=>{\n            if (error) {\n                file.accepted = false;\n                this._errorProcessing([\n                    file\n                ], error); // Will set the file.status\n            } else {\n                file.accepted = true;\n                if (this.options.autoQueue) this.enqueueFile(file);\n                 // Will set .accepted = true\n            }\n            this._updateMaxFilesReachedClass();\n        });\n    }\n    // Wrapper for enqueueFile\n    enqueueFiles(files) {\n        for (let file of files)this.enqueueFile(file);\n        return null;\n    }\n    enqueueFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n            if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n            , 0); // Deferring the call\n        } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n    }\n    _enqueueThumbnail(file) {\n        if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n            this._thumbnailQueue.push(file);\n            return setTimeout(()=>this._processThumbnailQueue()\n            , 0); // Deferring the call\n        }\n    }\n    _processThumbnailQueue() {\n        if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n        this._processingThumbnail = true;\n        let file = this._thumbnailQueue.shift();\n        return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n            this.emit(\"thumbnail\", file, dataUrl);\n            this._processingThumbnail = false;\n            return this._processThumbnailQueue();\n        });\n    }\n    // Can be called by the user to remove a file\n    removeFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n        this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n        this.emit(\"removedfile\", file);\n        if (this.files.length === 0) return this.emit(\"reset\");\n    }\n    // Removes all files that aren't currently processed from the list\n    removeAllFiles(cancelIfNecessary) {\n        // Create a copy of files since removeFile() changes the @files array.\n        if (cancelIfNecessary == null) cancelIfNecessary = false;\n        for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n        return null;\n    }\n    // Resizes an image before it gets sent to the server. This function is the default behavior of\n    // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n    // the resized blob.\n    resizeImage(file, width, height, resizeMethod, callback) {\n        return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n            if (canvas == null) // The image has not been resized\n            return callback(file);\n            else {\n                let { resizeMimeType: resizeMimeType  } = this.options;\n                if (resizeMimeType == null) resizeMimeType = file.type;\n                let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n            }\n        });\n    }\n    createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n        let fileReader = new FileReader();\n        fileReader.onload = ()=>{\n            file.dataURL = fileReader.result;\n            // Don't bother creating a thumbnail for SVG images since they're vector\n            if (file.type === \"image/svg+xml\") {\n                if (callback != null) callback(fileReader.result);\n                return;\n            }\n            this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n        };\n        fileReader.readAsDataURL(file);\n    }\n    // `mockFile` needs to have these attributes:\n    //\n    //     { name: 'name', size: 12345, imageUrl: '' }\n    //\n    // `callback` will be invoked when the image has been downloaded and displayed.\n    // `crossOrigin` will be added to the `img` tag when accessing the file.\n    displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n        this.emit(\"addedfile\", mockFile);\n        this.emit(\"complete\", mockFile);\n        if (!resizeThumbnail) {\n            this.emit(\"thumbnail\", mockFile, imageUrl);\n            if (callback) callback();\n        } else {\n            let onDone = (thumbnail)=>{\n                this.emit(\"thumbnail\", mockFile, thumbnail);\n                if (callback) callback();\n            };\n            mockFile.dataURL = imageUrl;\n            this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n        }\n    }\n    createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n        // Not using `new Image` here because of a bug in latest Chrome versions.\n        // See https://github.com/enyo/dropzone/pull/226\n        let img = document.createElement(\"img\");\n        if (crossOrigin) img.crossOrigin = crossOrigin;\n        // fixOrientation is not needed anymore with browsers handling imageOrientation\n        fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n        img.onload = ()=>{\n            let loadExif = (callback)=>callback(1)\n            ;\n            if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                    return callback(EXIF.getTag(this, \"Orientation\"));\n                })\n            ;\n            return loadExif((orientation)=>{\n                file.width = img.width;\n                file.height = img.height;\n                let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                let canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = resizeInfo.trgWidth;\n                canvas.height = resizeInfo.trgHeight;\n                if (orientation > 4) {\n                    canvas.width = resizeInfo.trgHeight;\n                    canvas.height = resizeInfo.trgWidth;\n                }\n                switch(orientation){\n                    case 2:\n                        // horizontal flip\n                        ctx.translate(canvas.width, 0);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 3:\n                        // 180° rotate left\n                        ctx.translate(canvas.width, canvas.height);\n                        ctx.rotate(Math.PI);\n                        break;\n                    case 4:\n                        // vertical flip\n                        ctx.translate(0, canvas.height);\n                        ctx.scale(1, -1);\n                        break;\n                    case 5:\n                        // vertical flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.scale(1, -1);\n                        break;\n                    case 6:\n                        // 90° rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(0, -canvas.width);\n                        break;\n                    case 7:\n                        // horizontal flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(canvas.height, -canvas.width);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 8:\n                        // 90° rotate left\n                        ctx.rotate(-0.5 * Math.PI);\n                        ctx.translate(-canvas.height, 0);\n                        break;\n                }\n                // This is a bugfix for iOS' scaling bug.\n                $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                let thumbnail = canvas.toDataURL(\"image/png\");\n                if (callback != null) return callback(thumbnail, canvas);\n            });\n        };\n        if (callback != null) img.onerror = callback;\n        return img.src = file.dataURL;\n    }\n    // Goes through the queue and processes files if there aren't too many already.\n    processQueue() {\n        let { parallelUploads: parallelUploads  } = this.options;\n        let processingLength = this.getUploadingFiles().length;\n        let i = processingLength;\n        // There are already at least as many files uploading than should be\n        if (processingLength >= parallelUploads) return;\n        let queuedFiles = this.getQueuedFiles();\n        if (!(queuedFiles.length > 0)) return;\n        if (this.options.uploadMultiple) // The files should be uploaded in one request\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n        else while(i < parallelUploads){\n            if (!queuedFiles.length) return;\n             // Nothing left to process\n            this.processFile(queuedFiles.shift());\n            i++;\n        }\n    }\n    // Wrapper for `processFiles`\n    processFile(file) {\n        return this.processFiles([\n            file\n        ]);\n    }\n    // Loads the file, then calls finishedLoading()\n    processFiles(files) {\n        for (let file of files){\n            file.processing = true; // Backwards compatibility\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n            this.emit(\"processing\", file);\n        }\n        if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n        return this.uploadFiles(files);\n    }\n    _getFilesWithXhr(xhr) {\n        let files;\n        return files = this.files.filter((file)=>file.xhr === xhr\n        ).map((file)=>file\n        );\n    }\n    // Cancels the file upload and sets the status to CANCELED\n    // **if** the file is actually being uploaded.\n    // If it's still in the queue, the file is being removed from it and the status\n    // set to CANCELED.\n    cancelUpload(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n            let groupedFiles = this._getFilesWithXhr(file.xhr);\n            for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n            for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n        } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            this.emit(\"canceled\", file);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                file\n            ]);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    resolveOption(option, ...args) {\n        if (typeof option === \"function\") return option.apply(this, args);\n        return option;\n    }\n    uploadFile(file) {\n        return this.uploadFiles([\n            file\n        ]);\n    }\n    uploadFiles(files) {\n        this._transformFiles(files, (transformedFiles)=>{\n            if (this.options.chunking) {\n                // Chunking is not allowed to be used with `uploadMultiple` so we know\n                // that there is only __one__file.\n                let transformedFile = transformedFiles[0];\n                files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n            }\n            if (files[0].upload.chunked) {\n                // This file should be sent in chunks!\n                // If the chunking option is set, we **know** that there can only be **one** file, since\n                // uploadMultiple is not allowed with this option.\n                let file = files[0];\n                let transformedFile = transformedFiles[0];\n                let startedChunkCount = 0;\n                file.upload.chunks = [];\n                let handleNextChunk = ()=>{\n                    let chunkIndex = 0;\n                    // Find the next item in file.upload.chunks that is not defined yet.\n                    while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                    // This means, that all chunks have already been started.\n                    if (chunkIndex >= file.upload.totalChunkCount) return;\n                    startedChunkCount++;\n                    let start = chunkIndex * this.options.chunkSize;\n                    let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                    let dataBlock = {\n                        name: this._getParamName(0),\n                        data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                        filename: file.upload.filename,\n                        chunkIndex: chunkIndex\n                    };\n                    file.upload.chunks[chunkIndex] = {\n                        file: file,\n                        index: chunkIndex,\n                        dataBlock: dataBlock,\n                        status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                        progress: 0,\n                        retries: 0\n                    };\n                    this._uploadData(files, [\n                        dataBlock\n                    ]);\n                };\n                file.upload.finishedChunkUpload = (chunk, response)=>{\n                    let allFinished = true;\n                    chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                    // Clear the data from the chunk\n                    chunk.dataBlock = null;\n                    chunk.response = chunk.xhr.responseText;\n                    chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                    // Leaving this reference to xhr will cause memory leaks.\n                    chunk.xhr = null;\n                    for(let i = 0; i < file.upload.totalChunkCount; i++){\n                        if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                        if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                    }\n                    if (allFinished) this.options.chunksUploaded(file, ()=>{\n                        this._finished(files, response, null);\n                    });\n                };\n                if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                else handleNextChunk();\n            } else {\n                let dataBlocks = [];\n                for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                    name: this._getParamName(i),\n                    data: transformedFiles[i],\n                    filename: files[i].upload.filename\n                };\n                this._uploadData(files, dataBlocks);\n            }\n        });\n    }\n    /// Returns the right chunk for given file and xhr\n    _getChunk(file, xhr) {\n        for(let i = 0; i < file.upload.totalChunkCount; i++){\n            if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n        }\n    }\n    // This function actually uploads the file(s) to the server.\n    //\n    //  If dataBlocks contains the actual data to upload (meaning, that this could\n    // either be transformed files, or individual chunks for chunked upload) then\n    // they will be used for the actual data to upload.\n    _uploadData(files, dataBlocks) {\n        let xhr = new XMLHttpRequest();\n        // Put the xhr object in the file objects to be able to reference it later.\n        for (let file of files)file.xhr = xhr;\n        if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n        // later, and found with _getChunk.\n        files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n        let method = this.resolveOption(this.options.method, files, dataBlocks);\n        let url = this.resolveOption(this.options.url, files, dataBlocks);\n        xhr.open(method, url, true);\n        // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n        let timeout = this.resolveOption(this.options.timeout, files);\n        if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n        // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n        xhr.withCredentials = !!this.options.withCredentials;\n        xhr.onload = (e)=>{\n            this._finishedUploading(files, xhr, e);\n        };\n        xhr.ontimeout = ()=>{\n            this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n        };\n        xhr.onerror = ()=>{\n            this._handleUploadError(files, xhr);\n        };\n        // Some browsers do not have the .upload property\n        let progressObj = xhr.upload != null ? xhr.upload : xhr;\n        progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n        ;\n        let headers = this.options.defaultHeaders ? {\n            Accept: \"application/json\",\n            \"Cache-Control\": \"no-cache\",\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        } : {\n        };\n        if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n        if (this.options.headers) $ewBKy$justextend(headers, this.options.headers);\n        for(let headerName in headers){\n            let headerValue = headers[headerName];\n            if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n        }\n        if (this.options.binaryBody) {\n            // Since the file is going to be sent as binary body, it doesn't make\n            // any sense to generate `FormData` for it.\n            for (let file of files)this.emit(\"sending\", file, xhr);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n            this.submitRequest(xhr, null, files);\n        } else {\n            let formData = new FormData();\n            // Adding all @options parameters\n            if (this.options.params) {\n                let additionalParams = this.options.params;\n                if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                for(let key in additionalParams){\n                    let value = additionalParams[key];\n                    if (Array.isArray(value)) // The additional parameter contains an array,\n                    // so lets iterate over it to attach each value\n                    // individually.\n                    for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                    else formData.append(key, value);\n                }\n            }\n            // Let the user add additional data if necessary\n            for (let file of files)this.emit(\"sending\", file, xhr, formData);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n            this._addFormElementData(formData);\n            // Finally add the files\n            // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n            for(let i = 0; i < dataBlocks.length; i++){\n                let dataBlock = dataBlocks[i];\n                formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n            }\n            this.submitRequest(xhr, formData, files);\n        }\n    }\n    // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n    _transformFiles(files, done) {\n        let transformedFiles = [];\n        // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n        let doneCounter = 0;\n        for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n            transformedFiles[i] = transformedFile;\n            if (++doneCounter === files.length) done(transformedFiles);\n        });\n    }\n    // Takes care of adding other input elements of the form to the AJAX request\n    _addFormElementData(formData) {\n        // Take care of other input elements\n        if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n            let inputName = input.getAttribute(\"name\");\n            let inputType = input.getAttribute(\"type\");\n            if (inputType) inputType = inputType.toLowerCase();\n            // If the input doesn't have a name, we can't use it.\n            if (typeof inputName === \"undefined\" || inputName === null) continue;\n            if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                // Possibly multiple values\n                for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n            } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n        }\n    }\n    // Invoked when there is new progress information about given files.\n    // If e is not provided, it is assumed that the upload is finished.\n    _updateFilesUploadProgress(files, xhr, e) {\n        if (!files[0].upload.chunked) // Handle file uploads without chunking\n        for (let file of files){\n            if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n            if (e) {\n                file.upload.progress = 100 * e.loaded / e.total;\n                file.upload.total = e.total;\n                file.upload.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                file.upload.progress = 100;\n                file.upload.bytesSent = file.upload.total;\n            }\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n        else {\n            // Handle chunked file uploads\n            // Chunked upload is not compatible with uploading multiple files in one\n            // request, so we know there's only one file.\n            let file = files[0];\n            // Since this is a chunked upload, we need to update the appropriate chunk\n            // progress.\n            let chunk = this._getChunk(file, xhr);\n            if (e) {\n                chunk.progress = 100 * e.loaded / e.total;\n                chunk.total = e.total;\n                chunk.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                chunk.progress = 100;\n                chunk.bytesSent = chunk.total;\n            }\n            // Now tally the *file* upload progress from its individual chunks\n            file.upload.progress = 0;\n            file.upload.total = 0;\n            file.upload.bytesSent = 0;\n            for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                file.upload.progress += file.upload.chunks[i].progress;\n                file.upload.total += file.upload.chunks[i].total;\n                file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n            }\n            // Since the process is a percentage, we need to divide by the amount of\n            // chunks we've used.\n            file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n    }\n    _finishedUploading(files, xhr, e) {\n        let response;\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (xhr.readyState !== 4) return;\n        if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n            response = xhr.responseText;\n            if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                response = JSON.parse(response);\n            } catch (error) {\n                e = error;\n                response = \"Invalid JSON response from server.\";\n            }\n        }\n        this._updateFilesUploadProgress(files, xhr);\n        if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n        else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n        else this._finished(files, response, e);\n    }\n    _handleUploadError(files, xhr, response) {\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (files[0].upload.chunked && this.options.retryChunks) {\n            let chunk = this._getChunk(files[0], xhr);\n            if ((chunk.retries++) < this.options.retryChunksLimit) {\n                this._uploadData(files, [\n                    chunk.dataBlock\n                ]);\n                return;\n            } else console.warn(\"Retried this chunk too often. Giving up.\");\n        }\n        this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n    }\n    submitRequest(xhr, formData, files) {\n        if (xhr.readyState != 1) {\n            console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n            return;\n        }\n        if (this.options.binaryBody) {\n            if (files[0].upload.chunked) {\n                const chunk = this._getChunk(files[0], xhr);\n                xhr.send(chunk.dataBlock.data);\n            } else xhr.send(files[0]);\n        } else xhr.send(formData);\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _finished(files, responseText, e) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n            this.emit(\"success\", file, responseText, e);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"successmultiple\", files, responseText, e);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _errorProcessing(files, message, xhr) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n            this.emit(\"error\", file, message, xhr);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"errormultiple\", files, message, xhr);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    static uuidv4() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n            return v.toString(16);\n        });\n    }\n    constructor(el, options){\n        super();\n        let fallback, left;\n        this.element = el;\n        this.clickableElements = [];\n        this.listeners = [];\n        this.files = []; // All files\n        if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n        // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n        if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n        if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n        // Now add this dropzone to the instances.\n        $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n        // Put the dropzone inside the element itself.\n        this.element.dropzone = this;\n        let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n        };\n        this.options = $ewBKy$justextend(true, {\n        }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n        });\n        this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n        // If the browser failed, just call the fallback and leave\n        if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n        // @options.url = @element.getAttribute \"action\" unless @options.url?\n        if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n        if (!this.options.url) throw new Error(\"No URL provided.\");\n        if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n        if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n        if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n        // Backwards compatibility\n        if (this.options.acceptedMimeTypes) {\n            this.options.acceptedFiles = this.options.acceptedMimeTypes;\n            delete this.options.acceptedMimeTypes;\n        }\n        // Backwards compatibility\n        if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n        ;\n        if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n        if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n        fallback.parentNode.removeChild(fallback);\n        // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n        if (this.options.previewsContainer !== false) {\n            if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n            else this.previewsContainer = this.element;\n        }\n        if (this.options.clickable) {\n            if (this.options.clickable === true) this.clickableElements = [\n                this.element\n            ];\n            else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n        }\n        this.init();\n    }\n}\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n// This is a map of options for your different dropzones. Add configurations\n// to this object for your different dropzone elemens.\n//\n// Example:\n//\n//     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n//\n// And in html:\n//\n//     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n};\n// Returns the options for an element or undefined if none available.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n    // Get the `Dropzone.options.elementId` for this element if it exists\n    if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n    else return undefined;\n};\n// Holds a list of all dropzone instances\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n// Returns the dropzone for given element if any\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    return element.dropzone;\n};\n// Looks for all .dropzone elements and creates a dropzone for them\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n    let dropzones;\n    if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n    else {\n        dropzones = [];\n        // IE :(\n        let checkElements = (elements)=>(()=>{\n                let result = [];\n                for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                else result.push(undefined);\n                return result;\n            })()\n        ;\n        checkElements(document.getElementsByTagName(\"div\"));\n        checkElements(document.getElementsByTagName(\"form\"));\n    }\n    return (()=>{\n        let result = [];\n        for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n        if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n        else result.push(undefined);\n        return result;\n    })();\n};\n// Some browsers support drag and drog functionality, but not correctly.\n//\n// So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n// But what to do when browsers *theoretically* support an API, but crash\n// when using it.\n//\n// This is a list of regular expressions tested against navigator.userAgent\n//\n// ** It should only be used on browser that *do* support the API, but\n// incorrectly **\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n    // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n    /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n];\n// Checks if the browser is supported\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n    let capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n        if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n        else {\n            if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n            // configuration.\n            $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n            // The browser supports the API, but may be blocked.\n            for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                capableBrowser = false;\n                continue;\n            }\n        }\n    } else capableBrowser = false;\n    return capableBrowser;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    let byteString = atob(dataURI.split(\",\")[1]);\n    // separate out the mime component\n    let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n    // write the bytes of the string to an ArrayBuffer\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n    // write the ArrayBuffer to a blob\n    return new Blob([\n        ab\n    ], {\n        type: mimeString\n    });\n};\n// Returns an array without the rejected item\nconst $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n    ).map((item)=>item\n    )\n;\n// abc-def_ghi -> abcDefGhi\nconst $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n    )\n;\n// Creates an element from string\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n    let div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n};\n// Tests if given element is inside (or simply is) the container\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n    if (element === container) return true;\n     // Coffeescript doesn't support do/while loops\n    while(element = element.parentNode){\n        if (element === container) return true;\n    }\n    return false;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n    let element;\n    if (typeof el === \"string\") element = document.querySelector(el);\n    else if (el.nodeType != null) element = el;\n    if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n    return element;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n    let el, elements;\n    if (els instanceof Array) {\n        elements = [];\n        try {\n            for (el of els)elements.push(this.getElement(el, name));\n        } catch (e) {\n            elements = null;\n        }\n    } else if (typeof els === \"string\") {\n        elements = [];\n        for (el of document.querySelectorAll(els))elements.push(el);\n    } else if (els.nodeType != null) elements = [\n        els\n    ];\n    if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n    return elements;\n};\n// Asks the user the question and calls accepted or rejected accordingly\n//\n// The default implementation just uses `window.confirm` and then calls the\n// appropriate callback.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) return accepted();\n    else if (rejected != null) return rejected();\n};\n// Validates the mime type like this:\n//\n// https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n    if (!acceptedFiles) return true;\n     // If there are no accepted mime types, it's OK\n    acceptedFiles = acceptedFiles.split(\",\");\n    let mimeType = file.type;\n    let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (let validType of acceptedFiles){\n        validType = validType.trim();\n        if (validType.charAt(0) === \".\") {\n            if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n        } else if (/\\/\\*$/.test(validType)) {\n            // This is something like a image/* mime type\n            if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n        } else {\n            if (mimeType === validType) return true;\n        }\n    }\n    return false;\n};\n// Augment jQuery\nif (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n    return this.each(function() {\n        return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n    });\n};\n// Dropzone file status codes\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n// For backwards compatibility. Now, if a file is accepted, it's either queued\n// or uploading.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n/*\n\n Bugfix for iOS 6 and 7\n Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n */ // Detecting vertical squash in loaded image.\n// Fixes a bug which squash image vertically while drawing into canvas for some images.\n// This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\nlet $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n    let iw = img.naturalWidth;\n    let ih = img.naturalHeight;\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n    // search image edge pixel position in case it is squashed vertically.\n    let sy = 0;\n    let ey = ih;\n    let py = ih;\n    while(py > sy){\n        let alpha = data[(py - 1) * 4 + 3];\n        if (alpha === 0) ey = py;\n        else sy = py;\n        py = ey + sy >> 1;\n    }\n    let ratio = py / ih;\n    if (ratio === 0) return 1;\n    else return ratio;\n};\n// A replacement for context.drawImage\n// (args are for source and destination).\nvar $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n};\n// Based on MinifyJpeg\n// Source: http://www.perry.cz/files/ExifRestorer.js\n// http://elicon.blog57.fc2.com/blog-entry-206.html\nclass $3ed269f2f0fb224b$var$ExifRestore {\n    static initClass() {\n        this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    }\n    static encode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        while(true){\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n            enc1 = chr1 >> 2;\n            enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n            enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) enc3 = enc4 = 64;\n            else if (isNaN(chr3)) enc4 = 64;\n            output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return output;\n    }\n    static restore(origFileBase64, resizedFileBase64) {\n        if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n        let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n        let segments = this.slice2Segments(rawImage);\n        let image = this.exifManipulation(resizedFileBase64, segments);\n        return `data:image/jpeg;base64,${this.encode64(image)}`;\n    }\n    static exifManipulation(resizedFileBase64, segments) {\n        let exifArray = this.getExifArray(segments);\n        let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n        let aBuffer = new Uint8Array(newImageArray);\n        return aBuffer;\n    }\n    static getExifArray(segments) {\n        let seg = undefined;\n        let x = 0;\n        while(x < segments.length){\n            seg = segments[x];\n            if (seg[0] === 255 & seg[1] === 225) return seg;\n            x++;\n        }\n        return [];\n    }\n    static insertExif(resizedFileBase64, exifArray) {\n        let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n        let buf = this.decode64(imageData);\n        let separatePoint = buf.indexOf(255, 3);\n        let mae = buf.slice(0, separatePoint);\n        let ato = buf.slice(separatePoint);\n        let array = mae;\n        array = array.concat(exifArray);\n        array = array.concat(ato);\n        return array;\n    }\n    static slice2Segments(rawImageArray) {\n        let head = 0;\n        let segments = [];\n        while(true){\n            var length;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n            else {\n                length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                let endPoint = head + length + 2;\n                let seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length) break;\n        }\n        return segments;\n    }\n    static decode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        let buf = [];\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while(true){\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n            chr1 = enc1 << 2 | enc2 >> 4;\n            chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n            chr3 = (enc3 & 3) << 6 | enc4;\n            buf.push(chr1);\n            if (enc3 !== 64) buf.push(chr2);\n            if (enc4 !== 64) buf.push(chr3);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return buf;\n    }\n}\n$3ed269f2f0fb224b$var$ExifRestore.initClass();\n/*\n * contentloaded.js\n *\n * Author: Diego Perini (diego.perini at gmail.com)\n * Summary: cross-browser wrapper for DOMContentLoaded\n * Updated: 20101020\n * License: MIT\n * Version: 1.2\n *\n * URL:\n * http://javascript.nwbox.com/ContentLoaded/\n * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n */ // @win window reference\n// @fn function reference\nlet $3ed269f2f0fb224b$var$contentLoaded = function(win, fn) {\n    let done = false;\n    let top = true;\n    let doc = win.document;\n    let root = doc.documentElement;\n    let add = doc.addEventListener ? \"addEventListener\" : \"attachEvent\";\n    let rem = doc.addEventListener ? \"removeEventListener\" : \"detachEvent\";\n    let pre = doc.addEventListener ? \"\" : \"on\";\n    var init = function(e) {\n        if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") return;\n        (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n        if (!done && (done = true)) return fn.call(win, e.type || e);\n    };\n    var poll = function() {\n        try {\n            root.doScroll(\"left\");\n        } catch (e) {\n            setTimeout(poll, 50);\n            return;\n        }\n        return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n        if (doc.createEventObject && root.doScroll) {\n            try {\n                top = !win.frameElement;\n            } catch (error) {\n            }\n            if (top) poll();\n        }\n        doc[add](pre + \"DOMContentLoaded\", init, false);\n        doc[add](pre + \"readystatechange\", init, false);\n        return win[add](pre + \"load\", init, false);\n    }\n};\nfunction $3ed269f2f0fb224b$var$__guard__(value, transform) {\n    return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n}\nfunction $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n    if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n    else return undefined;\n}\n\n\nexport {$3ed269f2f0fb224b$export$2e2bcd8739ae039 as default, $3ed269f2f0fb224b$export$2e2bcd8739ae039 as Dropzone};\n//# sourceMappingURL=dropzone.mjs.map\n","import { Dropzone } from \"dropzone\";\r\n\r\nif (document.querySelector('div.form__dropzone')) {\r\n  const dropzone = new Dropzone(\"div.form__dropzone\", {\r\n    url: \"/file/post\",\r\n    createImageThumbnails: false,\r\n    dictDefaultMessage: 'Here'\r\n  });\r\n}\r\n","export const HOOKS = [\n    \"onChange\",\n    \"onClose\",\n    \"onDayCreate\",\n    \"onDestroy\",\n    \"onKeyDown\",\n    \"onMonthChange\",\n    \"onOpen\",\n    \"onParseConfig\",\n    \"onReady\",\n    \"onValueUpdate\",\n    \"onYearChange\",\n    \"onPreCalendarPosition\",\n];\nexport const defaults = {\n    _disable: [],\n    allowInput: false,\n    allowInvalidPreload: false,\n    altFormat: \"F j, Y\",\n    altInput: false,\n    altInputClass: \"form-control input\",\n    animate: typeof window === \"object\" &&\n        window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n    ariaDateFormat: \"F j, Y\",\n    autoFillDefaultTime: true,\n    clickOpens: true,\n    closeOnSelect: true,\n    conjunction: \", \",\n    dateFormat: \"Y-m-d\",\n    defaultHour: 12,\n    defaultMinute: 0,\n    defaultSeconds: 0,\n    disable: [],\n    disableMobile: false,\n    enableSeconds: false,\n    enableTime: false,\n    errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n    getWeek: (givenDate) => {\n        const date = new Date(givenDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n        var week1 = new Date(date.getFullYear(), 0, 4);\n        return (1 +\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                3 +\n                ((week1.getDay() + 6) % 7)) /\n                7));\n    },\n    hourIncrement: 1,\n    ignoredFocusElements: [],\n    inline: false,\n    locale: \"default\",\n    minuteIncrement: 5,\n    mode: \"single\",\n    monthSelectorType: \"dropdown\",\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n    noCalendar: false,\n    now: new Date(),\n    onChange: [],\n    onClose: [],\n    onDayCreate: [],\n    onDestroy: [],\n    onKeyDown: [],\n    onMonthChange: [],\n    onOpen: [],\n    onParseConfig: [],\n    onReady: [],\n    onValueUpdate: [],\n    onYearChange: [],\n    onPreCalendarPosition: [],\n    plugins: [],\n    position: \"auto\",\n    positionElement: undefined,\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n    shorthandCurrentMonth: false,\n    showMonths: 1,\n    static: false,\n    time_24hr: false,\n    weekNumbers: false,\n    wrap: false,\n};\n","export const english = {\n    weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ],\n    },\n    months: {\n        shorthand: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        longhand: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ],\n    },\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    firstDayOfWeek: 0,\n    ordinal: (nth) => {\n        const s = nth % 100;\n        if (s > 3 && s < 21)\n            return \"th\";\n        switch (s % 10) {\n            case 1:\n                return \"st\";\n            case 2:\n                return \"nd\";\n            case 3:\n                return \"rd\";\n            default:\n                return \"th\";\n        }\n    },\n    rangeSeparator: \" to \",\n    weekAbbreviation: \"Wk\",\n    scrollTitle: \"Scroll to increment\",\n    toggleTitle: \"Click to toggle\",\n    amPM: [\"AM\", \"PM\"],\n    yearAriaLabel: \"Year\",\n    monthAriaLabel: \"Month\",\n    hourAriaLabel: \"Hour\",\n    minuteAriaLabel: \"Minute\",\n    time_24hr: false,\n};\nexport default english;\n","export const pad = (number, length = 2) => `000${number}`.slice(length * -1);\nexport const int = (bool) => (bool === true ? 1 : 0);\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\nexport const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n","export function toggleClass(elem, className, bool) {\n    if (bool === true)\n        return elem.classList.add(className);\n    elem.classList.remove(className);\n}\nexport function createElement(tag, className, content) {\n    const e = window.document.createElement(tag);\n    className = className || \"\";\n    content = content || \"\";\n    e.className = className;\n    if (content !== undefined)\n        e.textContent = content;\n    return e;\n}\nexport function clearNode(node) {\n    while (node.firstChild)\n        node.removeChild(node.firstChild);\n}\nexport function findParent(node, condition) {\n    if (condition(node))\n        return node;\n    else if (node.parentNode)\n        return findParent(node.parentNode, condition);\n    return undefined;\n}\nexport function createNumberInput(inputClassName, opts) {\n    const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n    if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n        numInput.type = \"number\";\n    }\n    else {\n        numInput.type = \"text\";\n        numInput.pattern = \"\\\\d*\";\n    }\n    if (opts !== undefined)\n        for (const key in opts)\n            numInput.setAttribute(key, opts[key]);\n    wrapper.appendChild(numInput);\n    wrapper.appendChild(arrowUp);\n    wrapper.appendChild(arrowDown);\n    return wrapper;\n}\nexport function getEventTarget(event) {\n    try {\n        if (typeof event.composedPath === \"function\") {\n            const path = event.composedPath();\n            return path[0];\n        }\n        return event.target;\n    }\n    catch (error) {\n        return event.target;\n    }\n}\n","import { int, pad } from \"../utils\";\nconst doNothing = () => undefined;\nexport const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\nexport const revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    H: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: (dateObj, amPM, locale) => {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n    W: function (dateObj, weekNum, locale) {\n        const weekNumber = parseInt(weekNum);\n        const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: (dateObj, year) => {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: (_, ISODate) => new Date(ISODate),\n    d: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    i: (dateObj, minutes) => {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n    w: doNothing,\n    y: (dateObj, year) => {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nexport const tokenRegex = {\n    D: \"(\\\\w+)\",\n    F: \"(\\\\w+)\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"(\\\\w+)\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"(\\\\w+)\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nexport const formats = {\n    Z: (date) => date.toISOString(),\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return pad(formats.h(date, locale, options));\n    },\n    H: (date) => pad(date.getHours()),\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: (date) => pad(date.getSeconds()),\n    U: (date) => date.getTime() / 1000,\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: (date) => pad(date.getFullYear(), 4),\n    d: (date) => pad(date.getDate()),\n    h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n    i: (date) => pad(date.getMinutes()),\n    j: (date) => date.getDate(),\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: (date) => pad(date.getMonth() + 1),\n    n: (date) => date.getMonth() + 1,\n    s: (date) => date.getSeconds(),\n    u: (date) => date.getTime(),\n    w: (date) => date.getDay(),\n    y: (date) => String(date.getFullYear()).substring(2),\n};\n","import { tokenRegex, revFormat, formats, } from \"./formatting\";\nimport { defaults } from \"../types/options\";\nimport { english } from \"../l10n/default\";\nexport const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n    const locale = overrideLocale || l10n;\n    if (config.formatDate !== undefined && !isMobile) {\n        return config.formatDate(dateObj, frmt, locale);\n    }\n    return frmt\n        .split(\"\")\n        .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n        ? formats[c](dateObj, locale, config)\n        : c !== \"\\\\\"\n            ? c\n            : \"\")\n        .join(\"\");\n};\nexport const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n    if (date !== 0 && !date)\n        return undefined;\n    const locale = customLocale || l10n;\n    let parsedDate;\n    const dateOrig = date;\n    if (date instanceof Date)\n        parsedDate = new Date(date.getTime());\n    else if (typeof date !== \"string\" &&\n        date.toFixed !== undefined)\n        parsedDate = new Date(date);\n    else if (typeof date === \"string\") {\n        const format = givenFormat || (config || defaults).dateFormat;\n        const datestr = String(date).trim();\n        if (datestr === \"today\") {\n            parsedDate = new Date();\n            timeless = true;\n        }\n        else if (/Z$/.test(datestr) ||\n            /GMT$/.test(datestr))\n            parsedDate = new Date(date);\n        else if (config && config.parseDate)\n            parsedDate = config.parseDate(date, format);\n        else {\n            parsedDate =\n                !config || !config.noCalendar\n                    ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                    : new Date(new Date().setHours(0, 0, 0, 0));\n            let matched, ops = [];\n            for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                const token = format[i];\n                const isBackSlash = token === \"\\\\\";\n                const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                if (tokenRegex[token] && !escaped) {\n                    regexStr += tokenRegex[token];\n                    const match = new RegExp(regexStr).exec(date);\n                    if (match && (matched = true)) {\n                        ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                            fn: revFormat[token],\n                            val: match[++matchIndex],\n                        });\n                    }\n                }\n                else if (!isBackSlash)\n                    regexStr += \".\";\n                ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n            }\n            parsedDate = matched ? parsedDate : undefined;\n        }\n    }\n    if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n        config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n        return undefined;\n    }\n    if (timeless === true)\n        parsedDate.setHours(0, 0, 0, 0);\n    return parsedDate;\n};\nexport function compareDates(date1, date2, timeless = true) {\n    if (timeless !== false) {\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\n    }\n    return date1.getTime() - date2.getTime();\n}\nexport function compareTimes(date1, date2) {\n    return (3600 * (date1.getHours() - date2.getHours()) +\n        60 * (date1.getMinutes() - date2.getMinutes()) +\n        date1.getSeconds() -\n        date2.getSeconds());\n}\nexport const isBetween = (ts, ts1, ts2) => {\n    return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n};\nexport const duration = {\n    DAY: 86400000,\n};\nexport function getDefaultHours(config) {\n    let hours = config.defaultHour;\n    let minutes = config.defaultMinute;\n    let seconds = config.defaultSeconds;\n    if (config.minDate !== undefined) {\n        const minHour = config.minDate.getHours();\n        const minMinutes = config.minDate.getMinutes();\n        const minSeconds = config.minDate.getSeconds();\n        if (hours < minHour) {\n            hours = minHour;\n        }\n        if (hours === minHour && minutes < minMinutes) {\n            minutes = minMinutes;\n        }\n        if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n            seconds = config.minDate.getSeconds();\n    }\n    if (config.maxDate !== undefined) {\n        const maxHr = config.maxDate.getHours();\n        const maxMinutes = config.maxDate.getMinutes();\n        hours = Math.min(hours, maxHr);\n        if (hours === maxHr)\n            minutes = Math.min(maxMinutes, minutes);\n        if (hours === maxHr && minutes === maxMinutes)\n            seconds = config.maxDate.getSeconds();\n    }\n    return { hours, minutes, seconds };\n}\n","\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target, ...args) {\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        for (const source of args) {\n            if (source) {\n                Object.keys(source).forEach((key) => (target[key] = source[key]));\n            }\n        }\n        return target;\n    };\n}\n","import { defaults as defaultOptions, HOOKS, } from \"./types/options\";\nimport English from \"./l10n/default\";\nimport { arrayify, debounce, int, pad } from \"./utils\";\nimport { clearNode, createElement, createNumberInput, findParent, toggleClass, getEventTarget, } from \"./utils/dom\";\nimport { compareDates, createDateParser, createDateFormatter, duration, isBetween, getDefaultHours, } from \"./utils/dates\";\nimport { tokenRegex, monthToStr } from \"./utils/formatting\";\nimport \"./utils/polyfills\";\nconst DEBOUNCED_CHANGE_MS = 300;\nfunction FlatpickrInstance(element, instanceConfig) {\n    const self = {\n        config: Object.assign(Object.assign({}, defaultOptions), flatpickr.defaultConfig),\n        l10n: English,\n    };\n    self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    self._handlers = [];\n    self.pluginElements = [];\n    self.loadedPlugins = [];\n    self._bind = bind;\n    self._setHoursFromDate = setHoursFromDate;\n    self._positionCalendar = positionCalendar;\n    self.changeMonth = changeMonth;\n    self.changeYear = changeYear;\n    self.clear = clear;\n    self.close = close;\n    self._createElement = createElement;\n    self.destroy = destroy;\n    self.isEnabled = isEnabled;\n    self.jumpToDate = jumpToDate;\n    self.open = open;\n    self.redraw = redraw;\n    self.set = set;\n    self.setDate = setDate;\n    self.toggle = toggle;\n    function setupHelperFunctions() {\n        self.utils = {\n            getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                    return 29;\n                return self.l10n.daysInMonth[month];\n            },\n        };\n    }\n    function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile)\n            build();\n        bindEvents();\n        if (self.selectedDates.length || self.config.noCalendar) {\n            if (self.config.enableTime) {\n                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n            }\n            updateValue(false);\n        }\n        setCalendarWidth();\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (!self.isMobile && isSafari) {\n            positionCalendar();\n        }\n        triggerEvent(\"onReady\");\n    }\n    function bindToInstance(fn) {\n        return fn.bind(self);\n    }\n    function setCalendarWidth() {\n        const config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) {\n            return;\n        }\n        else if (config.noCalendar !== true) {\n            window.requestAnimationFrame(function () {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width =\n                        daysWidth +\n                            (self.weekWrapper !== undefined\n                                ? self.weekWrapper.offsetWidth\n                                : 0) +\n                            \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n    }\n    function updateTime(e) {\n        if (self.selectedDates.length === 0) {\n            const defaultDate = self.config.minDate === undefined ||\n                compareDates(new Date(), self.config.minDate) >= 0\n                ? new Date()\n                : new Date(self.config.minDate.getTime());\n            const defaults = getDefaultHours(self.config);\n            defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n            self.selectedDates = [defaultDate];\n            self.latestSelectedDateObj = defaultDate;\n        }\n        if (e !== undefined && e.type !== \"blur\") {\n            timeWrapper(e);\n        }\n        const prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n        if (self._input.value !== prevValue) {\n            self._debouncedChange();\n        }\n    }\n    function ampm2military(hour, amPM) {\n        return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n    }\n    function military2ampm(hour) {\n        switch (hour % 24) {\n            case 0:\n            case 12:\n                return 12;\n            default:\n                return hour % 12;\n        }\n    }\n    function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined)\n            return;\n        let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\n            : 0;\n        if (self.amPM !== undefined) {\n            hours = ampm2military(hours, self.amPM.textContent);\n        }\n        const limitMinHours = self.config.minTime !== undefined ||\n            (self.config.minDate &&\n                self.minDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                    0);\n        const limitMaxHours = self.config.maxTime !== undefined ||\n            (self.config.maxDate &&\n                self.maxDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                    0);\n        if (limitMaxHours) {\n            const maxTime = self.config.maxTime !== undefined\n                ? self.config.maxTime\n                : self.config.maxDate;\n            hours = Math.min(hours, maxTime.getHours());\n            if (hours === maxTime.getHours())\n                minutes = Math.min(minutes, maxTime.getMinutes());\n            if (minutes === maxTime.getMinutes())\n                seconds = Math.min(seconds, maxTime.getSeconds());\n        }\n        if (limitMinHours) {\n            const minTime = self.config.minTime !== undefined\n                ? self.config.minTime\n                : self.config.minDate;\n            hours = Math.max(hours, minTime.getHours());\n            if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                minutes = minTime.getMinutes();\n            if (minutes === minTime.getMinutes())\n                seconds = Math.max(seconds, minTime.getSeconds());\n        }\n        setHours(hours, minutes, seconds);\n    }\n    function setHoursFromDate(dateObj) {\n        const date = dateObj || self.latestSelectedDateObj;\n        if (date) {\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n    }\n    function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\n            return;\n        self.hourElement.value = pad(!self.config.time_24hr\n            ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n            : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined)\n            self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined)\n            self.secondElement.value = pad(seconds);\n    }\n    function onYearInput(event) {\n        const eventTarget = getEventTarget(event);\n        const year = parseInt(eventTarget.value) + (event.delta || 0);\n        if (year / 1000 > 1 ||\n            (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n            changeYear(year);\n        }\n    }\n    function bind(element, event, handler, options) {\n        if (event instanceof Array)\n            return event.forEach((ev) => bind(element, ev, handler, options));\n        if (element instanceof Array)\n            return element.forEach((el) => bind(el, event, handler, options));\n        element.addEventListener(event, handler, options);\n        self._handlers.push({\n            remove: () => element.removeEventListener(event, handler),\n        });\n    }\n    function triggerChange() {\n        triggerEvent(\"onChange\");\n    }\n    function bindEvents() {\n        if (self.config.wrap) {\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n            });\n        }\n        if (self.isMobile) {\n            setupMobile();\n            return;\n        }\n        const debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n            bind(self.daysContainer, \"mouseover\", (e) => {\n                if (self.config.mode === \"range\")\n                    onMouseOver(getEventTarget(e));\n            });\n        bind(window.document.body, \"keydown\", onKeyDown);\n        if (!self.config.inline && !self.config.static)\n            bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined)\n            bind(window.document, \"touchstart\", documentClick);\n        else\n            bind(window.document, \"mousedown\", documentClick);\n        bind(window.document, \"focus\", documentClick, { capture: true });\n        if (self.config.clickOpens === true) {\n            bind(self._input, \"focus\", self.open);\n            bind(self._input, \"click\", self.open);\n        }\n        if (self.daysContainer !== undefined) {\n            bind(self.monthNav, \"click\", onMonthNavClick);\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n            bind(self.daysContainer, \"click\", selectDate);\n        }\n        if (self.timeContainer !== undefined &&\n            self.minuteElement !== undefined &&\n            self.hourElement !== undefined) {\n            const selText = (e) => getEventTarget(e).select();\n            bind(self.timeContainer, [\"increment\"], updateTime);\n            bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n            bind(self.timeContainer, \"click\", timeIncrement);\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n            if (self.secondElement !== undefined)\n                bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n            if (self.amPM !== undefined) {\n                bind(self.amPM, \"click\", (e) => {\n                    updateTime(e);\n                    triggerChange();\n                });\n            }\n        }\n        if (self.config.allowInput) {\n            bind(self._input, \"blur\", onBlur);\n        }\n    }\n    function jumpToDate(jumpDate, triggerChange) {\n        const jumpTo = jumpDate !== undefined\n            ? self.parseDate(jumpDate)\n            : self.latestSelectedDateObj ||\n                (self.config.minDate && self.config.minDate > self.now\n                    ? self.config.minDate\n                    : self.config.maxDate && self.config.maxDate < self.now\n                        ? self.config.maxDate\n                        : self.now);\n        const oldYear = self.currentYear;\n        const oldMonth = self.currentMonth;\n        try {\n            if (jumpTo !== undefined) {\n                self.currentYear = jumpTo.getFullYear();\n                self.currentMonth = jumpTo.getMonth();\n            }\n        }\n        catch (e) {\n            e.message = \"Invalid date supplied: \" + jumpTo;\n            self.config.errorHandler(e);\n        }\n        if (triggerChange && self.currentYear !== oldYear) {\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        if (triggerChange &&\n            (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n            triggerEvent(\"onMonthChange\");\n        }\n        self.redraw();\n    }\n    function timeIncrement(e) {\n        const eventTarget = getEventTarget(e);\n        if (~eventTarget.className.indexOf(\"arrow\"))\n            incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n    }\n    function incrementNumInput(e, delta, inputElem) {\n        const target = e && getEventTarget(e);\n        const input = inputElem ||\n            (target && target.parentNode && target.parentNode.firstChild);\n        const event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n    }\n    function build() {\n        const fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n        if (!self.config.noCalendar) {\n            fragment.appendChild(buildMonthNav());\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n            if (self.config.weekNumbers) {\n                const { weekWrapper, weekNumbers } = buildWeeks();\n                self.innerContainer.appendChild(weekWrapper);\n                self.weekNumbers = weekNumbers;\n                self.weekWrapper = weekWrapper;\n            }\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n            self.rContainer.appendChild(buildWeekdays());\n            if (!self.daysContainer) {\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                self.daysContainer.tabIndex = -1;\n            }\n            buildDays();\n            self.rContainer.appendChild(self.daysContainer);\n            self.innerContainer.appendChild(self.rContainer);\n            fragment.appendChild(self.innerContainer);\n        }\n        if (self.config.enableTime) {\n            fragment.appendChild(buildTime());\n        }\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        const customAppend = self.config.appendTo !== undefined &&\n            self.config.appendTo.nodeType !== undefined;\n        if (self.config.inline || self.config.static) {\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n            if (self.config.inline) {\n                if (!customAppend && self.element.parentNode)\n                    self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                else if (self.config.appendTo !== undefined)\n                    self.config.appendTo.appendChild(self.calendarContainer);\n            }\n            if (self.config.static) {\n                const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                if (self.element.parentNode)\n                    self.element.parentNode.insertBefore(wrapper, self.element);\n                wrapper.appendChild(self.element);\n                if (self.altInput)\n                    wrapper.appendChild(self.altInput);\n                wrapper.appendChild(self.calendarContainer);\n            }\n        }\n        if (!self.config.static && !self.config.inline)\n            (self.config.appendTo !== undefined\n                ? self.config.appendTo\n                : window.document.body).appendChild(self.calendarContainer);\n    }\n    function createDay(className, date, dayNumber, i) {\n        const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n        if (className.indexOf(\"hidden\") === -1 &&\n            compareDates(date, self.now) === 0) {\n            self.todayDateElem = dayElement;\n            dayElement.classList.add(\"today\");\n            dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n        if (dateIsEnabled) {\n            dayElement.tabIndex = -1;\n            if (isDateSelected(date)) {\n                dayElement.classList.add(\"selected\");\n                self.selectedDateElem = dayElement;\n                if (self.config.mode === \"range\") {\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                        compareDates(date, self.selectedDates[0], true) === 0);\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                        compareDates(date, self.selectedDates[1], true) === 0);\n                    if (className === \"nextMonthDay\")\n                        dayElement.classList.add(\"inRange\");\n                }\n            }\n        }\n        else {\n            dayElement.classList.add(\"flatpickr-disabled\");\n        }\n        if (self.config.mode === \"range\") {\n            if (isDateInRange(date) && !isDateSelected(date))\n                dayElement.classList.add(\"inRange\");\n        }\n        if (self.weekNumbers &&\n            self.config.showMonths === 1 &&\n            className !== \"prevMonthDay\" &&\n            dayNumber % 7 === 1) {\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n    }\n    function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\")\n            onMouseOver(targetNode);\n    }\n    function getFirstAvailableDay(delta) {\n        const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        for (let m = startMonth; m != endMonth; m += delta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = delta > 0 ? 0 : month.children.length - 1;\n            const endIndex = delta > 0 ? month.children.length : -1;\n            for (let i = startIndex; i != endIndex; i += delta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                    return c;\n            }\n        }\n        return undefined;\n    }\n    function getNextAvailableDay(current, delta) {\n        const givenMonth = current.className.indexOf(\"Month\") === -1\n            ? current.dateObj.getMonth()\n            : self.currentMonth;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        const loopDelta = delta > 0 ? 1 : -1;\n        for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = givenMonth - self.currentMonth === m\n                ? current.$i + delta\n                : delta < 0\n                    ? month.children.length - 1\n                    : 0;\n            const numMonthDays = month.children.length;\n            for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 &&\n                    isEnabled(c.dateObj) &&\n                    Math.abs(current.$i - i) >= Math.abs(delta))\n                    return focusOnDayElem(c);\n            }\n        }\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n    }\n    function focusOnDay(current, offset) {\n        const dayFocused = isInView(document.activeElement || document.body);\n        const startElem = current !== undefined\n            ? current\n            : dayFocused\n                ? document.activeElement\n                : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                    ? self.selectedDateElem\n                    : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                        ? self.todayDateElem\n                        : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) {\n            self._input.focus();\n        }\n        else if (!dayFocused) {\n            focusOnDayElem(startElem);\n        }\n        else {\n            getNextAvailableDay(startElem, offset);\n        }\n    }\n    function buildMonthDays(year, month) {\n        const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n        const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n        for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n            (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n            days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n        const dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n    }\n    function buildDays() {\n        if (self.daysContainer === undefined) {\n            return;\n        }\n        clearNode(self.daysContainer);\n        if (self.weekNumbers)\n            clearNode(self.weekNumbers);\n        const frag = document.createDocumentFragment();\n        for (let i = 0; i < self.config.showMonths; i++) {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n            onMouseOver();\n        }\n    }\n    function buildMonthSwitch() {\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType !== \"dropdown\")\n            return;\n        const shouldBuildMonth = function (month) {\n            if (self.config.minDate !== undefined &&\n                self.currentYear === self.config.minDate.getFullYear() &&\n                month < self.config.minDate.getMonth()) {\n                return false;\n            }\n            return !(self.config.maxDate !== undefined &&\n                self.currentYear === self.config.maxDate.getFullYear() &&\n                month > self.config.maxDate.getMonth());\n        };\n        self.monthsDropdownContainer.tabIndex = -1;\n        self.monthsDropdownContainer.innerHTML = \"\";\n        for (let i = 0; i < 12; i++) {\n            if (!shouldBuildMonth(i))\n                continue;\n            const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n            month.value = new Date(self.currentYear, i).getMonth().toString();\n            month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n            month.tabIndex = -1;\n            if (self.currentMonth === i) {\n                month.selected = true;\n            }\n            self.monthsDropdownContainer.appendChild(month);\n        }\n    }\n    function buildMonth() {\n        const container = createElement(\"div\", \"flatpickr-month\");\n        const monthNavFragment = window.document.createDocumentFragment();\n        let monthElement;\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType === \"static\") {\n            monthElement = createElement(\"span\", \"cur-month\");\n        }\n        else {\n            self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n            self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n            bind(self.monthsDropdownContainer, \"change\", (e) => {\n                const target = getEventTarget(e);\n                const selectedMonth = parseInt(target.value, 10);\n                self.changeMonth(selectedMonth - self.currentMonth);\n                triggerEvent(\"onMonthChange\");\n            });\n            buildMonthSwitch();\n            monthElement = self.monthsDropdownContainer;\n        }\n        const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n        const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) {\n            yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n        }\n        if (self.config.maxDate) {\n            yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n            yearElement.disabled =\n                !!self.config.minDate &&\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n        const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n            container,\n            yearElement,\n            monthElement,\n        };\n    }\n    function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n        if (self.config.showMonths) {\n            self.yearElements = [];\n            self.monthElements = [];\n        }\n        for (let m = self.config.showMonths; m--;) {\n            const month = buildMonth();\n            self.yearElements.push(month.yearElement);\n            self.monthElements.push(month.monthElement);\n            self.monthNav.appendChild(month.container);\n        }\n        self.monthNav.appendChild(self.nextMonthNav);\n    }\n    function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n            get: () => self.__hidePrevMonthArrow,\n            set(bool) {\n                if (self.__hidePrevMonthArrow !== bool) {\n                    toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hidePrevMonthArrow = bool;\n                }\n            },\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n            get: () => self.__hideNextMonthArrow,\n            set(bool) {\n                if (self.__hideNextMonthArrow !== bool) {\n                    toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hideNextMonthArrow = bool;\n                }\n            },\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n    }\n    function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar)\n            self.calendarContainer.classList.add(\"noCalendar\");\n        const defaults = getDefaultHours(self.config);\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        const hourInput = createNumberInput(\"flatpickr-hour\", {\n            \"aria-label\": self.l10n.hourAriaLabel,\n        });\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        const minuteInput = createNumberInput(\"flatpickr-minute\", {\n            \"aria-label\": self.l10n.minuteAriaLabel,\n        });\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getHours()\n            : self.config.time_24hr\n                ? defaults.hours\n                : military2ampm(defaults.hours));\n        self.minuteElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getMinutes()\n            : defaults.minutes);\n        self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.hourElement.setAttribute(\"maxlength\", \"2\");\n        self.minuteElement.setAttribute(\"min\", \"0\");\n        self.minuteElement.setAttribute(\"max\", \"59\");\n        self.minuteElement.setAttribute(\"maxlength\", \"2\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr)\n            self.timeContainer.classList.add(\"time24hr\");\n        if (self.config.enableSeconds) {\n            self.timeContainer.classList.add(\"hasSeconds\");\n            const secondInput = createNumberInput(\"flatpickr-second\");\n            self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n            self.secondElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getSeconds()\n                : defaults.seconds);\n            self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n            self.secondElement.setAttribute(\"min\", \"0\");\n            self.secondElement.setAttribute(\"max\", \"59\");\n            self.secondElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n            self.timeContainer.appendChild(secondInput);\n        }\n        if (!self.config.time_24hr) {\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                ? self.hourElement.value\n                : self.config.defaultHour) > 11)]);\n            self.amPM.title = self.l10n.toggleTitle;\n            self.amPM.tabIndex = -1;\n            self.timeContainer.appendChild(self.amPM);\n        }\n        return self.timeContainer;\n    }\n    function buildWeekdays() {\n        if (!self.weekdayContainer)\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n        else\n            clearNode(self.weekdayContainer);\n        for (let i = self.config.showMonths; i--;) {\n            const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n            self.weekdayContainer.appendChild(container);\n        }\n        updateWeekdays();\n        return self.weekdayContainer;\n    }\n    function updateWeekdays() {\n        if (!self.weekdayContainer) {\n            return;\n        }\n        const firstDayOfWeek = self.l10n.firstDayOfWeek;\n        let weekdays = [...self.l10n.weekdays.shorthand];\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n            weekdays = [\n                ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                ...weekdays.splice(0, firstDayOfWeek),\n            ];\n        }\n        for (let i = self.config.showMonths; i--;) {\n            self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n        }\n    }\n    function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n            weekWrapper,\n            weekNumbers,\n        };\n    }\n    function changeMonth(value, isOffset = true) {\n        const delta = isOffset ? value : value - self.currentMonth;\n        if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n            (delta > 0 && self._hideNextMonthArrow === true))\n            return;\n        self.currentMonth += delta;\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\n            self.currentMonth = (self.currentMonth + 12) % 12;\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n    }\n    function clear(triggerChangeEvent = true, toInitial = true) {\n        self.input.value = \"\";\n        if (self.altInput !== undefined)\n            self.altInput.value = \"\";\n        if (self.mobileInput !== undefined)\n            self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        if (toInitial === true) {\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n        }\n        if (self.config.enableTime === true) {\n            const { hours, minutes, seconds } = getDefaultHours(self.config);\n            setHours(hours, minutes, seconds);\n        }\n        self.redraw();\n        if (triggerChangeEvent)\n            triggerEvent(\"onChange\");\n    }\n    function close() {\n        self.isOpen = false;\n        if (!self.isMobile) {\n            if (self.calendarContainer !== undefined) {\n                self.calendarContainer.classList.remove(\"open\");\n            }\n            if (self._input !== undefined) {\n                self._input.classList.remove(\"active\");\n            }\n        }\n        triggerEvent(\"onClose\");\n    }\n    function destroy() {\n        if (self.config !== undefined)\n            triggerEvent(\"onDestroy\");\n        for (let i = self._handlers.length; i--;) {\n            self._handlers[i].remove();\n        }\n        self._handlers = [];\n        if (self.mobileInput) {\n            if (self.mobileInput.parentNode)\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\n            self.mobileInput = undefined;\n        }\n        else if (self.calendarContainer && self.calendarContainer.parentNode) {\n            if (self.config.static && self.calendarContainer.parentNode) {\n                const wrapper = self.calendarContainer.parentNode;\n                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                if (wrapper.parentNode) {\n                    while (wrapper.firstChild)\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                }\n            }\n            else\n                self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n        if (self.altInput) {\n            self.input.type = \"text\";\n            if (self.altInput.parentNode)\n                self.altInput.parentNode.removeChild(self.altInput);\n            delete self.altInput;\n        }\n        if (self.input) {\n            self.input.type = self.input._type;\n            self.input.classList.remove(\"flatpickr-input\");\n            self.input.removeAttribute(\"readonly\");\n        }\n        [\n            \"_showTimeInput\",\n            \"latestSelectedDateObj\",\n            \"_hideNextMonthArrow\",\n            \"_hidePrevMonthArrow\",\n            \"__hideNextMonthArrow\",\n            \"__hidePrevMonthArrow\",\n            \"isMobile\",\n            \"isOpen\",\n            \"selectedDateElem\",\n            \"minDateHasTime\",\n            \"maxDateHasTime\",\n            \"days\",\n            \"daysContainer\",\n            \"_input\",\n            \"_positionElement\",\n            \"innerContainer\",\n            \"rContainer\",\n            \"monthNav\",\n            \"todayDateElem\",\n            \"calendarContainer\",\n            \"weekdayContainer\",\n            \"prevMonthNav\",\n            \"nextMonthNav\",\n            \"monthsDropdownContainer\",\n            \"currentMonthElement\",\n            \"currentYearElement\",\n            \"navigationCurrentMonth\",\n            \"selectedDateElem\",\n            \"config\",\n        ].forEach((k) => {\n            try {\n                delete self[k];\n            }\n            catch (_) { }\n        });\n    }\n    function isCalendarElem(elem) {\n        if (self.config.appendTo && self.config.appendTo.contains(elem))\n            return true;\n        return self.calendarContainer.contains(elem);\n    }\n    function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n            const eventTarget = getEventTarget(e);\n            const isCalendarElement = isCalendarElem(eventTarget);\n            const isInput = eventTarget === self.input ||\n                eventTarget === self.altInput ||\n                self.element.contains(eventTarget) ||\n                (e.path &&\n                    e.path.indexOf &&\n                    (~e.path.indexOf(self.input) ||\n                        ~e.path.indexOf(self.altInput)));\n            const lostFocus = e.type === \"blur\"\n                ? isInput &&\n                    e.relatedTarget &&\n                    !isCalendarElem(e.relatedTarget)\n                : !isInput &&\n                    !isCalendarElement &&\n                    !isCalendarElem(e.relatedTarget);\n            const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n            if (lostFocus && isIgnored) {\n                if (self.timeContainer !== undefined &&\n                    self.minuteElement !== undefined &&\n                    self.hourElement !== undefined &&\n                    self.input.value !== \"\" &&\n                    self.input.value !== undefined) {\n                    updateTime();\n                }\n                self.close();\n                if (self.config &&\n                    self.config.mode === \"range\" &&\n                    self.selectedDates.length === 1) {\n                    self.clear(false);\n                    self.redraw();\n                }\n            }\n        }\n    }\n    function changeYear(newYear) {\n        if (!newYear ||\n            (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n            (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n            return;\n        const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n        if (self.config.maxDate &&\n            self.currentYear === self.config.maxDate.getFullYear()) {\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        }\n        else if (self.config.minDate &&\n            self.currentYear === self.config.minDate.getFullYear()) {\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n        if (isNewYear) {\n            self.redraw();\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n    }\n    function isEnabled(date, timeless = true) {\n        var _a;\n        const dateToCheck = self.parseDate(date, undefined, timeless);\n        if ((self.config.minDate &&\n            dateToCheck &&\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n            (self.config.maxDate &&\n                dateToCheck &&\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n            return false;\n        if (!self.config.enable && self.config.disable.length === 0)\n            return true;\n        if (dateToCheck === undefined)\n            return false;\n        const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n        for (let i = 0, d; i < array.length; i++) {\n            d = array[i];\n            if (typeof d === \"function\" &&\n                d(dateToCheck))\n                return bool;\n            else if (d instanceof Date &&\n                dateToCheck !== undefined &&\n                d.getTime() === dateToCheck.getTime())\n                return bool;\n            else if (typeof d === \"string\") {\n                const parsed = self.parseDate(d, undefined, true);\n                return parsed && parsed.getTime() === dateToCheck.getTime()\n                    ? bool\n                    : !bool;\n            }\n            else if (typeof d === \"object\" &&\n                dateToCheck !== undefined &&\n                d.from &&\n                d.to &&\n                dateToCheck.getTime() >= d.from.getTime() &&\n                dateToCheck.getTime() <= d.to.getTime())\n                return bool;\n        }\n        return !bool;\n    }\n    function isInView(elem) {\n        if (self.daysContainer !== undefined)\n            return (elem.className.indexOf(\"hidden\") === -1 &&\n                elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                self.daysContainer.contains(elem));\n        return false;\n    }\n    function onBlur(e) {\n        const isInput = e.target === self._input;\n        if (isInput &&\n            (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n            !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n            self.setDate(self._input.value, true, e.target === self.altInput\n                ? self.config.altFormat\n                : self.config.dateFormat);\n        }\n    }\n    function onKeyDown(e) {\n        const eventTarget = getEventTarget(e);\n        const isInput = self.config.wrap\n            ? element.contains(eventTarget)\n            : eventTarget === self._input;\n        const allowInput = self.config.allowInput;\n        const allowKeydown = self.isOpen && (!allowInput || !isInput);\n        const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n        if (e.keyCode === 13 && isInput) {\n            if (allowInput) {\n                self.setDate(self._input.value, true, eventTarget === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n                return eventTarget.blur();\n            }\n            else {\n                self.open();\n            }\n        }\n        else if (isCalendarElem(eventTarget) ||\n            allowKeydown ||\n            allowInlineKeydown) {\n            const isTimeObj = !!self.timeContainer &&\n                self.timeContainer.contains(eventTarget);\n            switch (e.keyCode) {\n                case 13:\n                    if (isTimeObj) {\n                        e.preventDefault();\n                        updateTime();\n                        focusAndClose();\n                    }\n                    else\n                        selectDate(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    focusAndClose();\n                    break;\n                case 8:\n                case 46:\n                    if (isInput && !self.config.allowInput) {\n                        e.preventDefault();\n                        self.clear();\n                    }\n                    break;\n                case 37:\n                case 39:\n                    if (!isTimeObj && !isInput) {\n                        e.preventDefault();\n                        if (self.daysContainer !== undefined &&\n                            (allowInput === false ||\n                                (document.activeElement && isInView(document.activeElement)))) {\n                            const delta = e.keyCode === 39 ? 1 : -1;\n                            if (!e.ctrlKey)\n                                focusOnDay(undefined, delta);\n                            else {\n                                e.stopPropagation();\n                                changeMonth(delta);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                        }\n                    }\n                    else if (self.hourElement)\n                        self.hourElement.focus();\n                    break;\n                case 38:\n                case 40:\n                    e.preventDefault();\n                    const delta = e.keyCode === 40 ? 1 : -1;\n                    if ((self.daysContainer &&\n                        eventTarget.$i !== undefined) ||\n                        eventTarget === self.input ||\n                        eventTarget === self.altInput) {\n                        if (e.ctrlKey) {\n                            e.stopPropagation();\n                            changeYear(self.currentYear - delta);\n                            focusOnDay(getFirstAvailableDay(1), 0);\n                        }\n                        else if (!isTimeObj)\n                            focusOnDay(undefined, delta * 7);\n                    }\n                    else if (eventTarget === self.currentYearElement) {\n                        changeYear(self.currentYear - delta);\n                    }\n                    else if (self.config.enableTime) {\n                        if (!isTimeObj && self.hourElement)\n                            self.hourElement.focus();\n                        updateTime(e);\n                        self._debouncedChange();\n                    }\n                    break;\n                case 9:\n                    if (isTimeObj) {\n                        const elems = [\n                            self.hourElement,\n                            self.minuteElement,\n                            self.secondElement,\n                            self.amPM,\n                        ]\n                            .concat(self.pluginElements)\n                            .filter((x) => x);\n                        const i = elems.indexOf(eventTarget);\n                        if (i !== -1) {\n                            const target = elems[i + (e.shiftKey ? -1 : 1)];\n                            e.preventDefault();\n                            (target || self._input).focus();\n                        }\n                    }\n                    else if (!self.config.noCalendar &&\n                        self.daysContainer &&\n                        self.daysContainer.contains(eventTarget) &&\n                        e.shiftKey) {\n                        e.preventDefault();\n                        self._input.focus();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            switch (e.key) {\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n        }\n        if (isInput || isCalendarElem(eventTarget)) {\n            triggerEvent(\"onKeyDown\", e);\n        }\n    }\n    function onMouseOver(elem) {\n        if (self.selectedDates.length !== 1 ||\n            (elem &&\n                (!elem.classList.contains(\"flatpickr-day\") ||\n                    elem.classList.contains(\"flatpickr-disabled\"))))\n            return;\n        const hoverDate = elem\n            ? elem.dateObj.getTime()\n            : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n        let containsDisabled = false;\n        let minRange = 0, maxRange = 0;\n        for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n            if (!isEnabled(new Date(t), true)) {\n                containsDisabled =\n                    containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                if (t < initialDate && (!minRange || t > minRange))\n                    minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange))\n                    maxRange = t;\n            }\n        }\n        for (let m = 0; m < self.config.showMonths; m++) {\n            const month = self.daysContainer.children[m];\n            for (let i = 0, l = month.children.length; i < l; i++) {\n                const dayElem = month.children[i], date = dayElem.dateObj;\n                const timestamp = date.getTime();\n                const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                    (maxRange > 0 && timestamp > maxRange);\n                if (outOfRange) {\n                    dayElem.classList.add(\"notAllowed\");\n                    [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                        dayElem.classList.remove(c);\n                    });\n                    continue;\n                }\n                else if (containsDisabled && !outOfRange)\n                    continue;\n                [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                    dayElem.classList.remove(c);\n                });\n                if (elem !== undefined) {\n                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                        ? \"startRange\"\n                        : \"endRange\");\n                    if (initialDate < hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"startRange\");\n                    else if (initialDate > hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"endRange\");\n                    if (timestamp >= minRange &&\n                        (maxRange === 0 || timestamp <= maxRange) &&\n                        isBetween(timestamp, initialDate, hoverDate))\n                        dayElem.classList.add(\"inRange\");\n                }\n            }\n        }\n    }\n    function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline)\n            positionCalendar();\n    }\n    function open(e, positionElement = self._positionElement) {\n        if (self.isMobile === true) {\n            if (e) {\n                e.preventDefault();\n                const eventTarget = getEventTarget(e);\n                if (eventTarget) {\n                    eventTarget.blur();\n                }\n            }\n            if (self.mobileInput !== undefined) {\n                self.mobileInput.focus();\n                self.mobileInput.click();\n            }\n            triggerEvent(\"onOpen\");\n            return;\n        }\n        else if (self._input.disabled || self.config.inline) {\n            return;\n        }\n        const wasOpen = self.isOpen;\n        self.isOpen = true;\n        if (!wasOpen) {\n            self.calendarContainer.classList.add(\"open\");\n            self._input.classList.add(\"active\");\n            triggerEvent(\"onOpen\");\n            positionCalendar(positionElement);\n        }\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n            if (self.config.allowInput === false &&\n                (e === undefined ||\n                    !self.timeContainer.contains(e.relatedTarget))) {\n                setTimeout(() => self.hourElement.select(), 50);\n            }\n        }\n    }\n    function minMaxDateSetter(type) {\n        return (date) => {\n            const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n            const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n            if (dateObj !== undefined) {\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                    dateObj.getHours() > 0 ||\n                        dateObj.getMinutes() > 0 ||\n                        dateObj.getSeconds() > 0;\n            }\n            if (self.selectedDates) {\n                self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                if (!self.selectedDates.length && type === \"min\")\n                    setHoursFromDate(dateObj);\n                updateValue();\n            }\n            if (self.daysContainer) {\n                redraw();\n                if (dateObj !== undefined)\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\n                else\n                    self.currentYearElement.removeAttribute(type);\n                self.currentYearElement.disabled =\n                    !!inverseDateObj &&\n                        dateObj !== undefined &&\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\n            }\n        };\n    }\n    function parseConfig() {\n        const boolOpts = [\n            \"wrap\",\n            \"weekNumbers\",\n            \"allowInput\",\n            \"allowInvalidPreload\",\n            \"clickOpens\",\n            \"time_24hr\",\n            \"enableTime\",\n            \"noCalendar\",\n            \"altInput\",\n            \"shorthandCurrentMonth\",\n            \"inline\",\n            \"static\",\n            \"enableSeconds\",\n            \"disableMobile\",\n        ];\n        const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n        const formats = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n            get: () => self.config._enable,\n            set: (dates) => {\n                self.config._enable = parseDateRules(dates);\n            },\n        });\n        Object.defineProperty(self.config, \"disable\", {\n            get: () => self.config._disable,\n            set: (dates) => {\n                self.config._disable = parseDateRules(dates);\n            },\n        });\n        const timeMode = userConfig.mode === \"time\";\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n            const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaultOptions.dateFormat;\n            formats.dateFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                    : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n        if (userConfig.altInput &&\n            (userConfig.enableTime || timeMode) &&\n            !userConfig.altFormat) {\n            const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaultOptions.altFormat;\n            formats.altFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                    : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n        }\n        Object.defineProperty(self.config, \"minDate\", {\n            get: () => self.config._minDate,\n            set: minMaxDateSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n            get: () => self.config._maxDate,\n            set: minMaxDateSetter(\"max\"),\n        });\n        const minMaxTimeSetter = (type) => (val) => {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n        };\n        Object.defineProperty(self.config, \"minTime\", {\n            get: () => self.config._minTime,\n            set: minMaxTimeSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n            get: () => self.config._maxTime,\n            set: minMaxTimeSetter(\"max\"),\n        });\n        if (userConfig.mode === \"time\") {\n            self.config.noCalendar = true;\n            self.config.enableTime = true;\n        }\n        Object.assign(self.config, formats, userConfig);\n        for (let i = 0; i < boolOpts.length; i++)\n            self.config[boolOpts[i]] =\n                self.config[boolOpts[i]] === true ||\n                    self.config[boolOpts[i]] === \"true\";\n        HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n            self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile =\n            !self.config.disableMobile &&\n                !self.config.inline &&\n                self.config.mode === \"single\" &&\n                !self.config.disable.length &&\n                !self.config.enable &&\n                !self.config.weekNumbers &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        for (let i = 0; i < self.config.plugins.length; i++) {\n            const pluginConf = self.config.plugins[i](self) || {};\n            for (const key in pluginConf) {\n                if (HOOKS.indexOf(key) > -1) {\n                    self.config[key] = arrayify(pluginConf[key])\n                        .map(bindToInstance)\n                        .concat(self.config[key]);\n                }\n                else if (typeof userConfig[key] === \"undefined\")\n                    self.config[key] = pluginConf[key];\n            }\n        }\n        if (!userConfig.altInputClass) {\n            self.config.altInputClass =\n                getInputElem().className + \" \" + self.config.altInputClass;\n        }\n        triggerEvent(\"onParseConfig\");\n    }\n    function getInputElem() {\n        return self.config.wrap\n            ? element.querySelector(\"[data-input]\")\n            : element;\n    }\n    function setupLocale() {\n        if (typeof self.config.locale !== \"object\" &&\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n            self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n        self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n            ? self.config.locale\n            : self.config.locale !== \"default\"\n                ? flatpickr.l10ns[self.config.locale]\n                : undefined));\n        tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n        const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n        if (userConfig.time_24hr === undefined &&\n            flatpickr.defaultConfig.time_24hr === undefined) {\n            self.config.time_24hr = self.l10n.time_24hr;\n        }\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    }\n    function positionCalendar(customPositionElement) {\n        if (typeof self.config.position === \"function\") {\n            return void self.config.position(self, customPositionElement);\n        }\n        if (self.calendarContainer === undefined)\n            return;\n        triggerEvent(\"onPreCalendarPosition\");\n        const positionElement = customPositionElement || self._positionElement;\n        const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n            (configPosVertical !== \"below\" &&\n                distanceFromBottom < calendarHeight &&\n                inputBounds.top > calendarHeight);\n        const top = window.pageYOffset +\n            inputBounds.top +\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline)\n            return;\n        let left = window.pageXOffset + inputBounds.left;\n        let isCenter = false;\n        let isRight = false;\n        if (configPosHorizontal === \"center\") {\n            left -= (calendarWidth - inputBounds.width) / 2;\n            isCenter = true;\n        }\n        else if (configPosHorizontal === \"right\") {\n            left -= calendarWidth - inputBounds.width;\n            isRight = true;\n        }\n        toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n        toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n        toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n        const right = window.document.body.offsetWidth -\n            (window.pageXOffset + inputBounds.right);\n        const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static)\n            return;\n        self.calendarContainer.style.top = `${top}px`;\n        if (!rightMost) {\n            self.calendarContainer.style.left = `${left}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n        else if (!centerMost) {\n            self.calendarContainer.style.left = \"auto\";\n            self.calendarContainer.style.right = `${right}px`;\n        }\n        else {\n            const doc = getDocumentStyleSheet();\n            if (doc === undefined)\n                return;\n            const bodyWidth = window.document.body.offsetWidth;\n            const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n            const centerBefore = \".flatpickr-calendar.centerMost:before\";\n            const centerAfter = \".flatpickr-calendar.centerMost:after\";\n            const centerIndex = doc.cssRules.length;\n            const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n            toggleClass(self.calendarContainer, \"rightMost\", false);\n            toggleClass(self.calendarContainer, \"centerMost\", true);\n            doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n            self.calendarContainer.style.left = `${centerLeft}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n    }\n    function getDocumentStyleSheet() {\n        let editableSheet = null;\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i];\n            try {\n                sheet.cssRules;\n            }\n            catch (err) {\n                continue;\n            }\n            editableSheet = sheet;\n            break;\n        }\n        return editableSheet != null ? editableSheet : createStyleSheet();\n    }\n    function createStyleSheet() {\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        return style.sheet;\n    }\n    function redraw() {\n        if (self.config.noCalendar || self.isMobile)\n            return;\n        buildMonthSwitch();\n        updateNavigationCurrentMonth();\n        buildDays();\n    }\n    function focusAndClose() {\n        self._input.focus();\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.msMaxTouchPoints !== undefined) {\n            setTimeout(self.close, 0);\n        }\n        else {\n            self.close();\n        }\n    }\n    function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const isSelectable = (day) => day.classList &&\n            day.classList.contains(\"flatpickr-day\") &&\n            !day.classList.contains(\"flatpickr-disabled\") &&\n            !day.classList.contains(\"notAllowed\");\n        const t = findParent(getEventTarget(e), isSelectable);\n        if (t === undefined)\n            return;\n        const target = t;\n        const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n        const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n            selectedDate.getMonth() >\n                self.currentMonth + self.config.showMonths - 1) &&\n            self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\")\n            self.selectedDates = [selectedDate];\n        else if (self.config.mode === \"multiple\") {\n            const selectedIndex = isDateSelected(selectedDate);\n            if (selectedIndex)\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\n            else\n                self.selectedDates.push(selectedDate);\n        }\n        else if (self.config.mode === \"range\") {\n            if (self.selectedDates.length === 2) {\n                self.clear(false, false);\n            }\n            self.latestSelectedDateObj = selectedDate;\n            self.selectedDates.push(selectedDate);\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n        }\n        setHoursFromInputs();\n        if (shouldChangeMonth) {\n            const isNewYear = self.currentYear !== selectedDate.getFullYear();\n            self.currentYear = selectedDate.getFullYear();\n            self.currentMonth = selectedDate.getMonth();\n            if (isNewYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            triggerEvent(\"onMonthChange\");\n        }\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (!shouldChangeMonth &&\n            self.config.mode !== \"range\" &&\n            self.config.showMonths === 1)\n            focusOnDayElem(target);\n        else if (self.selectedDateElem !== undefined &&\n            self.hourElement === undefined) {\n            self.selectedDateElem && self.selectedDateElem.focus();\n        }\n        if (self.hourElement !== undefined)\n            self.hourElement !== undefined && self.hourElement.focus();\n        if (self.config.closeOnSelect) {\n            const single = self.config.mode === \"single\" && !self.config.enableTime;\n            const range = self.config.mode === \"range\" &&\n                self.selectedDates.length === 2 &&\n                !self.config.enableTime;\n            if (single || range) {\n                focusAndClose();\n            }\n        }\n        triggerChange();\n    }\n    const CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n        minDate: [jumpToDate],\n        maxDate: [jumpToDate],\n        clickOpens: [\n            () => {\n                if (self.config.clickOpens === true) {\n                    bind(self._input, \"focus\", self.open);\n                    bind(self._input, \"click\", self.open);\n                }\n                else {\n                    self._input.removeEventListener(\"focus\", self.open);\n                    self._input.removeEventListener(\"click\", self.open);\n                }\n            },\n        ],\n    };\n    function set(option, value) {\n        if (option !== null && typeof option === \"object\") {\n            Object.assign(self.config, option);\n            for (const key in option) {\n                if (CALLBACKS[key] !== undefined)\n                    CALLBACKS[key].forEach((x) => x());\n            }\n        }\n        else {\n            self.config[option] = value;\n            if (CALLBACKS[option] !== undefined)\n                CALLBACKS[option].forEach((x) => x());\n            else if (HOOKS.indexOf(option) > -1)\n                self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        updateValue(true);\n    }\n    function setSelectedDate(inputDate, format) {\n        let dates = [];\n        if (inputDate instanceof Array)\n            dates = inputDate.map((d) => self.parseDate(d, format));\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\n            dates = [self.parseDate(inputDate, format)];\n        else if (typeof inputDate === \"string\") {\n            switch (self.config.mode) {\n                case \"single\":\n                case \"time\":\n                    dates = [self.parseDate(inputDate, format)];\n                    break;\n                case \"multiple\":\n                    dates = inputDate\n                        .split(self.config.conjunction)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                case \"range\":\n                    dates = inputDate\n                        .split(self.l10n.rangeSeparator)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                default:\n                    break;\n            }\n        }\n        else\n            self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n        self.selectedDates = (self.config.allowInvalidPreload\n            ? dates\n            : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n        if (self.config.mode === \"range\")\n            self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n    }\n    function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n        if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n            return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.latestSelectedDateObj =\n            self.selectedDates[self.selectedDates.length - 1];\n        self.redraw();\n        jumpToDate(undefined, triggerChange);\n        setHoursFromDate();\n        if (self.selectedDates.length === 0) {\n            self.clear(false);\n        }\n        updateValue(triggerChange);\n        if (triggerChange)\n            triggerEvent(\"onChange\");\n    }\n    function parseDateRules(arr) {\n        return arr\n            .slice()\n            .map((rule) => {\n            if (typeof rule === \"string\" ||\n                typeof rule === \"number\" ||\n                rule instanceof Date) {\n                return self.parseDate(rule, undefined, true);\n            }\n            else if (rule &&\n                typeof rule === \"object\" &&\n                rule.from &&\n                rule.to)\n                return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined),\n                };\n            return rule;\n        })\n            .filter((x) => x);\n    }\n    function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        const preloadedDate = self.config.defaultDate ||\n            ((self.input.nodeName === \"INPUT\" ||\n                self.input.nodeName === \"TEXTAREA\") &&\n                self.input.placeholder &&\n                self.input.value === self.input.placeholder\n                ? null\n                : self.input.value);\n        if (preloadedDate)\n            setSelectedDate(preloadedDate, self.config.dateFormat);\n        self._initialDate =\n            self.selectedDates.length > 0\n                ? self.selectedDates[0]\n                : self.config.minDate &&\n                    self.config.minDate.getTime() > self.now.getTime()\n                    ? self.config.minDate\n                    : self.config.maxDate &&\n                        self.config.maxDate.getTime() < self.now.getTime()\n                        ? self.config.maxDate\n                        : self.now;\n        self.currentYear = self._initialDate.getFullYear();\n        self.currentMonth = self._initialDate.getMonth();\n        if (self.selectedDates.length > 0)\n            self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined)\n            self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined)\n            self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime =\n            !!self.config.minDate &&\n                (self.config.minDate.getHours() > 0 ||\n                    self.config.minDate.getMinutes() > 0 ||\n                    self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime =\n            !!self.config.maxDate &&\n                (self.config.maxDate.getHours() > 0 ||\n                    self.config.maxDate.getMinutes() > 0 ||\n                    self.config.maxDate.getSeconds() > 0);\n    }\n    function setupInputs() {\n        self.input = getInputElem();\n        if (!self.input) {\n            self.config.errorHandler(new Error(\"Invalid input element specified\"));\n            return;\n        }\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n        if (self.config.altInput) {\n            self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n            self._input = self.altInput;\n            self.altInput.placeholder = self.input.placeholder;\n            self.altInput.disabled = self.input.disabled;\n            self.altInput.required = self.input.required;\n            self.altInput.tabIndex = self.input.tabIndex;\n            self.altInput.type = \"text\";\n            self.input.setAttribute(\"type\", \"hidden\");\n            if (!self.config.static && self.input.parentNode)\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n        if (!self.config.allowInput)\n            self._input.setAttribute(\"readonly\", \"readonly\");\n        self._positionElement = self.config.positionElement || self._input;\n    }\n    function setupMobile() {\n        const inputType = self.config.enableTime\n            ? self.config.noCalendar\n                ? \"time\"\n                : \"datetime-local\"\n            : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr =\n            inputType === \"datetime-local\"\n                ? \"Y-m-d\\\\TH:i:S\"\n                : inputType === \"date\"\n                    ? \"Y-m-d\"\n                    : \"H:i:S\";\n        if (self.selectedDates.length > 0) {\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n        if (self.config.minDate)\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate)\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        if (self.input.getAttribute(\"step\"))\n            self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined)\n            self.altInput.type = \"hidden\";\n        try {\n            if (self.input.parentNode)\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        }\n        catch (_a) { }\n        bind(self.mobileInput, \"change\", (e) => {\n            self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n            triggerEvent(\"onChange\");\n            triggerEvent(\"onClose\");\n        });\n    }\n    function toggle(e) {\n        if (self.isOpen === true)\n            return self.close();\n        self.open(e);\n    }\n    function triggerEvent(event, data) {\n        if (self.config === undefined)\n            return;\n        const hooks = self.config[event];\n        if (hooks !== undefined && hooks.length > 0) {\n            for (let i = 0; hooks[i] && i < hooks.length; i++)\n                hooks[i](self.selectedDates, self.input.value, self, data);\n        }\n        if (event === \"onChange\") {\n            self.input.dispatchEvent(createEvent(\"change\"));\n            self.input.dispatchEvent(createEvent(\"input\"));\n        }\n    }\n    function createEvent(name) {\n        const e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n    }\n    function isDateSelected(date) {\n        for (let i = 0; i < self.selectedDates.length; i++) {\n            if (compareDates(self.selectedDates[i], date) === 0)\n                return \"\" + i;\n        }\n        return false;\n    }\n    function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n            return false;\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\n            compareDates(date, self.selectedDates[1]) <= 0);\n    }\n    function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\n            return;\n        self.yearElements.forEach((yearElement, i) => {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                self.monthElements[i].textContent =\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n            }\n            else {\n                self.monthsDropdownContainer.value = d.getMonth().toString();\n            }\n            yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow =\n            self.config.minDate !== undefined &&\n                (self.currentYear === self.config.minDate.getFullYear()\n                    ? self.currentMonth <= self.config.minDate.getMonth()\n                    : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow =\n            self.config.maxDate !== undefined &&\n                (self.currentYear === self.config.maxDate.getFullYear()\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                    : self.currentYear > self.config.maxDate.getFullYear());\n    }\n    function getDateStr(format) {\n        return self.selectedDates\n            .map((dObj) => self.formatDate(dObj, format))\n            .filter((d, i, arr) => self.config.mode !== \"range\" ||\n            self.config.enableTime ||\n            arr.indexOf(d) === i)\n            .join(self.config.mode !== \"range\"\n            ? self.config.conjunction\n            : self.l10n.rangeSeparator);\n    }\n    function updateValue(triggerChange = true) {\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n            self.mobileInput.value =\n                self.latestSelectedDateObj !== undefined\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                    : \"\";\n        }\n        self.input.value = getDateStr(self.config.dateFormat);\n        if (self.altInput !== undefined) {\n            self.altInput.value = getDateStr(self.config.altFormat);\n        }\n        if (triggerChange !== false)\n            triggerEvent(\"onValueUpdate\");\n    }\n    function onMonthNavClick(e) {\n        const eventTarget = getEventTarget(e);\n        const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n        const isNextMonth = self.nextMonthNav.contains(eventTarget);\n        if (isPrevMonth || isNextMonth) {\n            changeMonth(isPrevMonth ? -1 : 1);\n        }\n        else if (self.yearElements.indexOf(eventTarget) >= 0) {\n            eventTarget.select();\n        }\n        else if (eventTarget.classList.contains(\"arrowUp\")) {\n            self.changeYear(self.currentYear + 1);\n        }\n        else if (eventTarget.classList.contains(\"arrowDown\")) {\n            self.changeYear(self.currentYear - 1);\n        }\n    }\n    function timeWrapper(e) {\n        e.preventDefault();\n        const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            self.amPM.textContent =\n                self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n        const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n            (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n        let newValue = curValue + step * delta;\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n            const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n            if (newValue < min) {\n                newValue =\n                    max +\n                        newValue +\n                        int(!isHourElem) +\n                        (int(isHourElem) && int(!self.amPM));\n                if (isMinuteElem)\n                    incrementNumInput(undefined, -1, self.hourElement);\n            }\n            else if (newValue > max) {\n                newValue =\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                if (isMinuteElem)\n                    incrementNumInput(undefined, 1, self.hourElement);\n            }\n            if (self.amPM &&\n                isHourElem &&\n                (step === 1\n                    ? newValue + curValue === 23\n                    : Math.abs(newValue - curValue) > step)) {\n                self.amPM.textContent =\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            input.value = pad(newValue);\n        }\n    }\n    init();\n    return self;\n}\nfunction _flatpickr(nodeList, config) {\n    const nodes = Array.prototype.slice\n        .call(nodeList)\n        .filter((x) => x instanceof HTMLElement);\n    const instances = [];\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        try {\n            if (node.getAttribute(\"data-fp-omit\") !== null)\n                continue;\n            if (node._flatpickr !== undefined) {\n                node._flatpickr.destroy();\n                node._flatpickr = undefined;\n            }\n            node._flatpickr = FlatpickrInstance(node, config || {});\n            instances.push(node._flatpickr);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    return instances.length === 1 ? instances[0] : instances;\n}\nif (typeof HTMLElement !== \"undefined\" &&\n    typeof HTMLCollection !== \"undefined\" &&\n    typeof NodeList !== \"undefined\") {\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n    HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n    };\n}\nvar flatpickr = function (selector, config) {\n    if (typeof selector === \"string\") {\n        return _flatpickr(window.document.querySelectorAll(selector), config);\n    }\n    else if (selector instanceof Node) {\n        return _flatpickr([selector], config);\n    }\n    else {\n        return _flatpickr(selector, config);\n    }\n};\nflatpickr.defaultConfig = {};\nflatpickr.l10ns = {\n    en: Object.assign({}, English),\n    default: Object.assign({}, English),\n};\nflatpickr.localize = (l10n) => {\n    flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n};\nflatpickr.setDefaults = (config) => {\n    flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n};\nflatpickr.parseDate = createDateParser({});\nflatpickr.formatDate = createDateFormatter({});\nflatpickr.compareDates = compareDates;\nif (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n    jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n}\nDate.prototype.fp_incr = function (days) {\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n};\nif (typeof window !== \"undefined\") {\n    window.flatpickr = flatpickr;\n}\nexport default flatpickr;\n","import flatpickr from \"flatpickr\";\r\n\r\nflatpickr(\".form__date\", {\r\n    dateFormat: \"d-m-Y\",\r\n    disableMobile: \"true\",\r\n});\r\n\r\nflatpickr(\".form__time\", {\r\n  enableTime: true,\r\n  noCalendar: true,\r\n  dateFormat: \"H-i\",\r\n  disableMobile: \"true\",\r\n});\r\n","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\ncustom-select\nlightweight JS script for custom select creation.\needs no dependencies.\nnv0.0.1\nhttps://github.com/custom-select/custom-select)\nnopyright (c) 2016 Gionatan Lombardi & Marco Nucara\nicense\nn\nexports.default = customSelect;\n\nrequire('custom-event-polyfill');\n\nvar defaultParams = {\n  containerClass: 'custom-select-container',\n  openerClass: 'custom-select-opener',\n  panelClass: 'custom-select-panel',\n  optionClass: 'custom-select-option',\n  optgroupClass: 'custom-select-optgroup',\n  isSelectedClass: 'is-selected',\n  hasFocusClass: 'has-focus',\n  isDisabledClass: 'is-disabled',\n  isOpenClass: 'is-open'\n};\n\nfunction builder(el, builderParams) {\n  var containerClass = 'customSelect';\n  var isOpen = false;\n  var uId = '';\n  var select = el;\n  var container = void 0;\n  var opener = void 0;\n  var focusedElement = void 0;\n  var selectedElement = void 0;\n  var panel = void 0;\n  var currLabel = void 0;\n\n  var resetSearchTimeout = void 0;\n  var searchKey = '';\n\n  //\n  // Inner Functions\n  //\n\n  // Sets the focused element with the neccessary classes substitutions\n  function setFocusedElement(cstOption) {\n    if (focusedElement) {\n      focusedElement.classList.remove(builderParams.hasFocusClass);\n    }\n    if (typeof cstOption !== 'undefined') {\n      focusedElement = cstOption;\n      focusedElement.classList.add(builderParams.hasFocusClass);\n      // Offset update: checks if the focused element is in the visible part of the panelClass\n      // if not dispatches a custom event\n      if (isOpen) {\n        if (cstOption.offsetTop < cstOption.offsetParent.scrollTop || cstOption.offsetTop > cstOption.offsetParent.scrollTop + cstOption.offsetParent.clientHeight - cstOption.clientHeight) {\n          cstOption.dispatchEvent(new CustomEvent('custom-select:focus-outside-panel', { bubbles: true }));\n        }\n      }\n    } else {\n      focusedElement = undefined;\n    }\n  }\n\n  // Reassigns the focused and selected custom option\n  // Updates the opener text\n  // IMPORTANT: the setSelectedElement function doesn't change the select value!\n  function setSelectedElement(cstOption) {\n    if (selectedElement) {\n      selectedElement.classList.remove(builderParams.isSelectedClass);\n      selectedElement.removeAttribute('id');\n      opener.removeAttribute('aria-activedescendant');\n    }\n    if (typeof cstOption !== 'undefined') {\n      cstOption.classList.add(builderParams.isSelectedClass);\n      cstOption.setAttribute('id', containerClass + '-' + uId + '-selectedOption');\n      opener.setAttribute('aria-activedescendant', containerClass + '-' + uId + '-selectedOption');\n      selectedElement = cstOption;\n      opener.children[0].textContent = selectedElement.customSelectOriginalOption.text;\n    } else {\n      selectedElement = undefined;\n      opener.children[0].textContent = '';\n    }\n    setFocusedElement(cstOption);\n  }\n\n  function setValue(value) {\n    // Gets the option with the provided value\n    var toSelect = select.querySelector('option[value=\\'' + value + '\\']');\n    // If no option has the provided value get the first\n    if (!toSelect) {\n      var _select$options = _slicedToArray(select.options, 1);\n\n      toSelect = _select$options[0];\n    }\n    // The option with the provided value becomes the selected one\n    // And changes the select current value\n    toSelect.selected = true;\n\n    setSelectedElement(select.options[select.selectedIndex].customSelectCstOption);\n  }\n\n  function moveFocuesedElement(direction) {\n    // Get all the .custom-select-options\n    // Get the index of the current focused one\n    var currentFocusedIndex = [].indexOf.call(select.options, focusedElement.customSelectOriginalOption);\n    // If the next or prev custom option exist\n    // Sets it as the new focused one\n    if (select.options[currentFocusedIndex + direction]) {\n      setFocusedElement(select.options[currentFocusedIndex + direction].customSelectCstOption);\n    }\n  }\n\n  // Open/Close function (toggle)\n  function open(bool) {\n    // Open\n    if (bool || typeof bool === 'undefined') {\n      // If present closes an opened instance of the plugin\n      // Only one at time can be open\n      var openedCustomSelect = document.querySelector('.' + containerClass + '.' + builderParams.isOpenClass);\n      if (openedCustomSelect) {\n        openedCustomSelect.customSelect.open = false;\n      }\n\n      // Opens only the clicked one\n      container.classList.add(builderParams.isOpenClass);\n\n      // aria-expanded update\n      container.classList.add(builderParams.isOpenClass);\n      opener.setAttribute('aria-expanded', 'true');\n\n      // Updates the scrollTop position of the panel in relation with the focused option\n      if (selectedElement) {\n        panel.scrollTop = selectedElement.offsetTop;\n      }\n\n      // Dispatches the custom event open\n      container.dispatchEvent(new CustomEvent('custom-select:open'));\n\n      // Sets the global state\n      isOpen = true;\n\n      // Close\n    } else {\n      // Removes the css classes\n      container.classList.remove(builderParams.isOpenClass);\n\n      // aria-expanded update\n      opener.setAttribute('aria-expanded', 'false');\n\n      // Sets the global state\n      isOpen = false;\n\n      // When closing the panel the focused custom option must be the selected one\n      setFocusedElement(selectedElement);\n\n      // Dispatches the custom event close\n      container.dispatchEvent(new CustomEvent('custom-select:close'));\n    }\n    return isOpen;\n  }\n\n  function clickEvent(e) {\n    // Opener click\n    if (e.target === opener || opener.contains(e.target)) {\n      if (isOpen) {\n        open(false);\n      } else {\n        open();\n      }\n      // Custom Option click\n    } else if (e.target.classList && e.target.classList.contains(builderParams.optionClass) && panel.contains(e.target)) {\n      setSelectedElement(e.target);\n      // Sets the corrisponding select's option to selected updating the select's value too\n      selectedElement.customSelectOriginalOption.selected = true;\n      open(false);\n      // Triggers the native change event of the select\n      select.dispatchEvent(new CustomEvent('change'));\n      // click on label or select (click on label corrispond to select click)\n    } else if (e.target === select) {\n      // if the original select is focusable (for any external reason) let the focus\n      // else trigger the focus on opener\n      if (opener !== document.activeElement && select !== document.activeElement) {\n        opener.focus();\n      }\n      // Click outside the container closes the panel\n    } else if (isOpen && !container.contains(e.target)) {\n      open(false);\n    }\n  }\n\n  function mouseoverEvent(e) {\n    // On mouse move over and options it bacames the focused one\n    if (e.target.classList && e.target.classList.contains(builderParams.optionClass)) {\n      setFocusedElement(e.target);\n    }\n  }\n\n  function keydownEvent(e) {\n    if (!isOpen) {\n      // On \"Arrow down\", \"Arrow up\" and \"Space\" keys opens the panel\n      if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32) {\n        open();\n      }\n    } else {\n      switch (e.keyCode) {\n        case 13:\n        case 32:\n          // On \"Enter\" or \"Space\" selects the focused element as the selected one\n          setSelectedElement(focusedElement);\n          // Sets the corrisponding select's option to selected updating the select's value too\n          selectedElement.customSelectOriginalOption.selected = true;\n          // Triggers the native change event of the select\n          select.dispatchEvent(new CustomEvent('change'));\n          open(false);\n          break;\n        case 27:\n          // On \"Escape\" closes the panel\n          open(false);\n          break;\n\n        case 38:\n          // On \"Arrow up\" set focus to the prev option if present\n          moveFocuesedElement(-1);\n          break;\n        case 40:\n          // On \"Arrow down\" set focus to the next option if present\n          moveFocuesedElement(+1);\n          break;\n        default:\n          // search in panel (autocomplete)\n          if (e.keyCode >= 48 && e.keyCode <= 90) {\n            // clear existing reset timeout\n            if (resetSearchTimeout) {\n              clearTimeout(resetSearchTimeout);\n            }\n\n            // reset timeout for empty search key\n            resetSearchTimeout = setTimeout(function () {\n              searchKey = '';\n            }, 1500);\n\n            // update search keyword appending the current key\n            searchKey += String.fromCharCode(e.keyCode);\n\n            // search the element\n            for (var i = 0, l = select.options.length; i < l; i++) {\n              // removed cause not supported by IE:\n              // if (options[i].text.startsWith(searchKey))\n              if (select.options[i].text.toUpperCase().substr(0, searchKey.length) === searchKey) {\n                setFocusedElement(select.options[i].customSelectCstOption);\n                break;\n              }\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  function changeEvent() {\n    var index = select.selectedIndex;\n    var element = index === -1 ? undefined : select.options[index].customSelectCstOption;\n\n    setSelectedElement(element);\n  }\n\n  // When the option is outside the visible part of the opened panel, updates the scrollTop position\n  // This is the default behaviour\n  // To block it the plugin user must\n  // add a \"custom-select:focus-outside-panel\" eventListener on the panel\n  // with useCapture set to true\n  // and stopPropagation\n  function scrollToFocused(e) {\n    var currPanel = e.currentTarget;\n    var currOption = e.target;\n    // Up\n    if (currOption.offsetTop < currPanel.scrollTop) {\n      currPanel.scrollTop = currOption.offsetTop;\n      // Down\n    } else {\n      currPanel.scrollTop = currOption.offsetTop + currOption.clientHeight - currPanel.clientHeight;\n    }\n  }\n\n  function addEvents() {\n    document.addEventListener('click', clickEvent);\n    panel.addEventListener('mouseover', mouseoverEvent);\n    panel.addEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.addEventListener('change', changeEvent);\n    container.addEventListener('keydown', keydownEvent);\n  }\n\n  function removeEvents() {\n    document.removeEventListener('click', clickEvent);\n    panel.removeEventListener('mouseover', mouseoverEvent);\n    panel.removeEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.removeEventListener('change', changeEvent);\n    container.removeEventListener('keydown', keydownEvent);\n  }\n\n  function disabled(bool) {\n    if (bool && !select.disabled) {\n      container.classList.add(builderParams.isDisabledClass);\n      select.disabled = true;\n      opener.removeAttribute('tabindex');\n      container.dispatchEvent(new CustomEvent('custom-select:disabled'));\n      removeEvents();\n    } else if (!bool && select.disabled) {\n      container.classList.remove(builderParams.isDisabledClass);\n      select.disabled = false;\n      opener.setAttribute('tabindex', '0');\n      container.dispatchEvent(new CustomEvent('custom-select:enabled'));\n      addEvents();\n    }\n  }\n\n  // Form a given select children DOM tree (options and optgroup),\n  // Creates the corresponding custom HTMLElements list (divs with different classes and attributes)\n  function parseMarkup(children) {\n    var nodeList = children;\n    var cstList = [];\n\n    if (typeof nodeList.length === 'undefined') {\n      throw new TypeError('Invalid Argument');\n    }\n\n    for (var i = 0, li = nodeList.length; i < li; i++) {\n      if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTGROUP') {\n        var cstOptgroup = document.createElement('div');\n        cstOptgroup.classList.add(builderParams.optgroupClass);\n        cstOptgroup.setAttribute('data-label', nodeList[i].label);\n\n        // IMPORTANT: Stores in a property of the created custom option group\n        // a hook to the the corrisponding select's option group\n        cstOptgroup.customSelectOriginalOptgroup = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option group\n        // a hook to the created custom option group\n        nodeList[i].customSelectCstOptgroup = cstOptgroup;\n\n        var subNodes = parseMarkup(nodeList[i].children);\n        for (var j = 0, lj = subNodes.length; j < lj; j++) {\n          cstOptgroup.appendChild(subNodes[j]);\n        }\n\n        cstList.push(cstOptgroup);\n      } else if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTION') {\n        var cstOption = document.createElement('div');\n        cstOption.classList.add(builderParams.optionClass);\n        cstOption.textContent = nodeList[i].text;\n        cstOption.setAttribute('data-value', nodeList[i].value);\n        cstOption.setAttribute('role', 'option');\n\n        // IMPORTANT: Stores in a property of the created custom option\n        // a hook to the the corrisponding select's option\n        cstOption.customSelectOriginalOption = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option\n        // a hook to the created custom option\n        nodeList[i].customSelectCstOption = cstOption;\n\n        // If the select's option is selected\n        if (nodeList[i].selected) {\n          setSelectedElement(cstOption);\n        }\n        cstList.push(cstOption);\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n    }\n    return cstList;\n  }\n\n  function _append(nodePar, appendIntoOriginal, targetPar) {\n    var target = void 0;\n    if (typeof targetPar === 'undefined' || targetPar === select) {\n      target = panel;\n    } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // If the node provided is a single HTMLElement it is stored in an array\n    var node = nodePar instanceof HTMLElement ? [nodePar] : nodePar;\n\n    // Injects the options|optgroup in the select\n    if (appendIntoOriginal) {\n      for (var i = 0, l = node.length; i < l; i++) {\n        if (target === panel) {\n          select.appendChild(node[i]);\n        } else {\n          target.customSelectOriginalOptgroup.appendChild(node[i]);\n        }\n      }\n    }\n\n    // The custom markup to append\n    var markupToInsert = parseMarkup(node);\n\n    // Injects the created DOM content in the panel\n    for (var _i = 0, _l = markupToInsert.length; _i < _l; _i++) {\n      target.appendChild(markupToInsert[_i]);\n    }\n\n    return node;\n  }\n\n  function _insertBefore(node, targetPar) {\n    var target = void 0;\n    if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTION' && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOption;\n    } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === 'OPTGROUP' && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // The custom markup to append\n    var markupToInsert = parseMarkup(node.length ? node : [node]);\n\n    target.parentNode.insertBefore(markupToInsert[0], target);\n\n    // Injects the option or optgroup node in the original select and returns the injected node\n    return targetPar.parentNode.insertBefore(node.length ? node[0] : node, targetPar);\n  }\n\n  function remove(node) {\n    var cstNode = void 0;\n    if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTION' && select.contains(node)) {\n      cstNode = node.customSelectCstOption;\n    } else if (node instanceof HTMLElement && node.tagName.toUpperCase() === 'OPTGROUP' && select.contains(node)) {\n      cstNode = node.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n    cstNode.parentNode.removeChild(cstNode);\n    var removedNode = node.parentNode.removeChild(node);\n    changeEvent();\n    return removedNode;\n  }\n\n  function empty() {\n    var removed = [];\n    while (select.children.length) {\n      panel.removeChild(panel.children[0]);\n      removed.push(select.removeChild(select.children[0]));\n    }\n    setSelectedElement();\n    return removed;\n  }\n\n  function destroy() {\n    for (var i = 0, l = select.options.length; i < l; i++) {\n      delete select.options[i].customSelectCstOption;\n    }\n    var optGroup = select.getElementsByTagName('optgroup');\n    for (var _i2 = 0, _l2 = optGroup.length; _i2 < _l2; _i2++) {\n      delete optGroup.customSelectCstOptgroup;\n    }\n\n    removeEvents();\n\n    return container.parentNode.replaceChild(select, container);\n  }\n  //\n  // Custom Select DOM tree creation\n  //\n\n  // Creates the container/wrapper\n  container = document.createElement('div');\n  container.classList.add(builderParams.containerClass, containerClass);\n\n  // Creates the opener\n  opener = document.createElement('span');\n  opener.className = builderParams.openerClass;\n  opener.setAttribute('role', 'combobox');\n  opener.setAttribute('aria-autocomplete', 'list');\n  opener.setAttribute('aria-expanded', 'false');\n  opener.innerHTML = '<span>\\n   ' + (select.selectedIndex !== -1 ? select.options[select.selectedIndex].text : '') + '\\n   </span>';\n\n  // Creates the panel\n  // and injects the markup of the select inside\n  // with some tag and attributes replacement\n  panel = document.createElement('div');\n  // Create random id\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (var i = 0; i < 5; i++) {\n    uId += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  panel.id = containerClass + '-' + uId + '-panel';\n  panel.className = builderParams.panelClass;\n  panel.setAttribute('role', 'listbox');\n  opener.setAttribute('aria-owns', panel.id);\n\n  _append(select.children, false);\n\n  // Injects the container in the original DOM position of the select\n  container.appendChild(opener);\n  select.parentNode.replaceChild(container, select);\n  container.appendChild(select);\n  container.appendChild(panel);\n\n  // ARIA labelledby - label\n  if (document.querySelector('label[for=\"' + select.id + '\"]')) {\n    currLabel = document.querySelector('label[for=\"' + select.id + '\"]');\n  } else if (container.parentNode.tagName.toUpperCase() === 'LABEL') {\n    currLabel = container.parentNode;\n  }\n  if (typeof currLabel !== 'undefined') {\n    currLabel.setAttribute('id', containerClass + '-' + uId + '-label');\n    opener.setAttribute('aria-labelledby', containerClass + '-' + uId + '-label');\n  }\n\n  // Event Init\n  if (select.disabled) {\n    container.classList.add(builderParams.isDisabledClass);\n  } else {\n    opener.setAttribute('tabindex', '0');\n    select.setAttribute('tabindex', '-1');\n    addEvents();\n  }\n\n  // Stores the plugin public exposed methods and properties, directly in the container HTMLElement\n  container.customSelect = {\n    get pluginOptions() {\n      return builderParams;\n    },\n    get open() {\n      return isOpen;\n    },\n    set open(bool) {\n      open(bool);\n    },\n    get disabled() {\n      return select.disabled;\n    },\n    set disabled(bool) {\n      disabled(bool);\n    },\n    get value() {\n      return select.value;\n    },\n    set value(val) {\n      setValue(val);\n    },\n    append: function append(node, target) {\n      return _append(node, true, target);\n    },\n    insertBefore: function insertBefore(node, target) {\n      return _insertBefore(node, target);\n    },\n    remove: remove,\n    empty: empty,\n    destroy: destroy,\n    opener: opener,\n    select: select,\n    panel: panel,\n    container: container\n  };\n\n  // Stores the plugin directly in the original select\n  select.customSelect = container.customSelect;\n\n  // Returns the plugin instance, with the public exposed methods and properties\n  return container.customSelect;\n}\n\nfunction customSelect(element, customParams) {\n  // Overrides the default options with the ones provided by the user\n  var nodeList = [];\n  var selects = [];\n\n  return function init() {\n    // The plugin is called on a single HTMLElement\n    if (element && element instanceof HTMLElement && element.tagName.toUpperCase() === 'SELECT') {\n      nodeList.push(element);\n      // The plugin is called on a selector\n    } else if (element && typeof element === 'string') {\n      var elementsList = document.querySelectorAll(element);\n      for (var i = 0, l = elementsList.length; i < l; ++i) {\n        if (elementsList[i] instanceof HTMLElement && elementsList[i].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(elementsList[i]);\n        }\n      }\n      // The plugin is called on any HTMLElements list (NodeList, HTMLCollection, Array, etc.)\n    } else if (element && element.length) {\n      for (var _i3 = 0, _l3 = element.length; _i3 < _l3; ++_i3) {\n        if (element[_i3] instanceof HTMLElement && element[_i3].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(element[_i3]);\n        }\n      }\n    }\n\n    // Launches the plugin over every HTMLElement\n    // And stores every plugin instance\n    for (var _i4 = 0, _l4 = nodeList.length; _i4 < _l4; ++_i4) {\n      selects.push(builder(nodeList[_i4], _extends({}, defaultParams, customParams)));\n    }\n\n    // Returns all plugin instances\n    return selects;\n  }();\n}\n\n//# sourceMappingURL=index.js.map","import customSelect from 'custom-select';\n\ncustomSelect('select');\n","/*\r\n  @ Add body class if:\r\n  - scroll started\r\n  - scrolled to bottom\r\n*/\r\n\r\nconst START_OFFSET = 34;\r\nconst START_CLASS = \"is-scrolled\";\r\nconst BOTTOM_OFFSET = 10;\r\nconst BOTTOM_CLASS = \"is-scrolled-bottom\";\r\n\r\nconst UP_DOWN_CLASSES = false;\r\nconst UP_CLASS = \"scrolling-up\";\r\nconst DOWN_CLASS = \"scrolling-down\";\r\n\r\nclass ScrollClass {\r\n  constructor() {\r\n    document.addEventListener(\"scroll\", this.scrollHandler, {passive: true});\r\n  }\r\n\r\n  scrollHandler = () => {\r\n    const top = document.documentElement.scrollTop;\r\n\r\n    document.body.classList.toggle(START_CLASS, top >= START_OFFSET);\r\n    document.body.classList.toggle(\r\n      BOTTOM_CLASS,\r\n      window.innerHeight + top >= document.body.offsetHeight - BOTTOM_OFFSET\r\n    );\r\n\r\n    if (UP_DOWN_CLASSES) {\r\n      if(this.oldScroll > top){\r\n        document.body.classList.add(UP_CLASS)\r\n        document.body.classList.remove(DOWN_CLASS);\r\n      } else {\r\n        document.body.classList.add(DOWN_CLASS)\r\n        document.body.classList.remove(UP_CLASS);\r\n      }\r\n    }\r\n\r\n    this.oldScroll = top;\r\n\r\n  };\r\n}\r\n\r\nnew ScrollClass();\r\n"]}