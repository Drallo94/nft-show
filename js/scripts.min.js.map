{"version":3,"sources":["scripts.js","src/scripts/modules/Animate.js","node_modules/@splidejs/splide/dist/js/splide.esm.js","src/scripts/modules/Carousel.js","src/scripts/modules/ToggleNav.js","node_modules/simplelightbox/dist/simple-lightbox.modules.js","src/scripts/modules/Lightbox.js","node_modules/sticky-sidebar-v2/src/sticky-sidebar.js","src/scripts/modules/Sticky.js","node_modules/just-extend/index.esm.js","node_modules/dropzone/dist/dropzone.mjs","src/scripts/modules/Dropzone.js","node_modules/flatpickr/dist/esm/types/options.js","node_modules/flatpickr/dist/esm/l10n/default.js","node_modules/flatpickr/dist/esm/utils/index.js","node_modules/flatpickr/dist/esm/utils/dom.js","node_modules/flatpickr/dist/esm/utils/formatting.js","node_modules/flatpickr/dist/esm/utils/dates.js","node_modules/flatpickr/dist/esm/utils/polyfills.js","node_modules/flatpickr/dist/esm/index.js","src/scripts/modules/Flatpicker.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","ISMOBILE","window","matchMedia","matches","VISIBLE_CLASS","Animate","_this","this","entries","map","entry","section","delay","getDelay","sectionBodyClass","getAttribute","isIntersecting","classList","add","bodyClass","setTimeout","includes","parseInt","htmlclass","type","document","body","remove","sections","querySelectorAll","THRESHOLD","LOAD_THRESHOLD","forEach","el","BoundingClientRect","getBoundingClientRect","height","innerHeight","loadObserver","IntersectionObserver","observeCallback","threshold","observe","disconnect","observerThreshold","PROJECT_CODE","DATA_ATTRIBUTE","STATES","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","empty","array","isObject","subject","isNull","isArray","Array","isString","isUndefined","isHTMLElement","HTMLElement","toArray","values","iteratee","indexOf","push","items","arrayProto","prototype","slice","arrayLike","start","end","call","toggleClass","elm","classes","name","addClass","split","append","parent","children","appendChild","bind","before","nodes","ref","node","parentNode","insertBefore","selector","filter","child","firstElementChild","forOwn","object","right","keys","reverse","assign","arguments","source","merge","removeAttribute","attrs","attr","setAttribute","value2","String","create","tag","createElement","style","prop","getComputedStyle","style2","display","display2","hasClass","className","contains","rect","removeChild","parseHtml","html","DOMParser","parseFromString","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","removeClass","unit","assert","condition","message","Error","nextTick","callback","noop","raf","func","requestAnimationFrame","min","max","floor","ceil","abs","Math","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","x","y","sign","format","string","replacements","replacement","replace","pad","ids","EVENT_MOUNTED","EVENT_READY","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_REPOSITIONED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","event","listeners","unbind","targets","events","forEachEvent","event2","listener","removeEventListener","destroy","data","offBy","on","priority","off","emit","options","addEventListener","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","id","rate","paused","count","update","elapsed","pause","cancel","cancelAnimationFrame","resume","rewind","isPaused","Throttle","duration","apply","TTB","ORIENTATION_MAP","marginRight","autoWidth","fixedWidth","paddingLeft","paddingRight","width","left","X","Y","ArrowLeft","ArrowRight","CLASS_SLIDE","CLASS_CLONE","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","STATUS_CLASSES","CLASSES","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","ROLE","ARIA_CONTROLS","ARIA_CURRENT","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","ARIA_ORIENTATION","ALL_ATTRIBUTES","SLIDE","LOOP","FADE","Slide$1","index","slideIndex","destroyEvents","Components","root","isNavigation","updateOnMove","resolve","Direction","styles","isClone","container","focusableNodes","destroyed","onMove","dest","updateActivity","currIndex","isActive","updateVisibility","is","trackRect","Elements","track","slideRect","isVisible","active","visible","ariaHidden","slideFocus","mount","idx","label","i18n","slideX","controls","splides","splide","join","init","useContainer","isWithin","from","distance","diff","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","IE_ARROW_KEYS","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","ComponentConstructors","freeze","__proto__","Options","Components2","throttledObserve","initialOptions","points","currPoint","completely","item","predicate","item2","point","newOptions","breakpoints","state","onMatch","setup","JSON","parse","isMin","mediaQuery","sort","n","m","axisOnly","direction","orient","elements","slides","slider","list","autoplay","find","bar","play","collect","prefix","identify","getClasses","refresh","drag","DEFAULT_EVENT_PRIORITY","Slides","Slides2","register","forEach$1","Slide2","get","excludeClones","matcher","Slide1","getIn","Controller","toIndex","hasFocus","perPage","getAt","images","img","observeImages","getLength","isEnough","Layout","vertical","rootRect","cssPadding","resize","newRect","cssHeight","cssTrackHeight","gap","cssSlideSize","fixedHeight","autoHeight","padding","heightRatio","totalSize","withoutGap","Slide","getGap","parseFloat","listSize","slideSize","sliderSize","getPadding","Clones","clones","cloneCount","computeCloneCount","isHead","cloneNode","cloneDeep","generate","clones2","fixedSize","div","measure","flickMaxPages","Move","waiting","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","transform","getPosition","exceededMin","exceededLimit","exceededMax","shift","loop","backwards","excess","getLimit","size","trimming","focus","offset","trimSpace","trim","getEnd","move","set","looping","waitForTransition","Transition","go","minDistance","Infinity","isLoop","isSlide","slideCount","perMove","prevIndex","scroll","destination","useIndex","snap","toDest","setIndex","getNext","getAdjacent","getPrev","computeDestIndex","epsilon","incremental","toPage","closest","control","allowSameIndex","indicator","match","useScroll","speed","getIndex","Arrows","created","wrapper","createArrow","listen","prev2","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","Autoplay","hovered","focused","initButton","forPause","button","resetProgress","manual","autoToggle","pauseOnHover","pauseOnFocus","Cover","cover","src","toggle","scrollCallback","suppressConstraint","friction","clear","onScrolled","t","easingFunc","pow","easing","Drag","listenerOptions","passive","capture","basePosition","baseEvent","prevBaseEvent","lastEvent","isFree","dragging","clickPrevented","hasExceeded","disable","onPointerDown","noDrag","isTouch","isTouchEvent","onPointerMove","onPointerUp","save","cancelable","coordOf","constrain","expired","timeOf","exceeded","dragMinThreshold","thresholds","mouse","touch","isSliderDirection","velocity","base","diffCoord","diffTime","isFlick","computeVelocity","flickPower","computeDestination","onClick","orthogonal","touches","timeStamp","TouchEvent","isDragging","Keyboard","keyboard","onKeydown","normalizedKey","LazyLoad","isSequential","lazyLoad","preloadPages","_Slide","load","_img","error","_spinner","loadNext","onLoad","srcset","parentElement","Pagination","li","class","text","pageX","createPagination","preventScroll","curr","Sync","navigate","processed","concat","instances","index2","sync","Wheel","onWheel","deltaY","wheel","DEFAULTS","Fade","done","endCallback","transition","rewindSpeed","getSpeed","_Splide","[object Object]","handlers","namespace","eventHandlers","handler","_key","_namespace","eventNS","fragments","_event","_callback","_priority","handler1","handler2","EventBus","initialState","states","State","_options","_Extensions","defaults","Extensions","_Components","_Transition","Component","component","Splide","500","767","1024","1400","ToggleNav","toggleNav","protoProps","staticProps","commonjsGlobal","globalThis","global","self","module","simpleLightbox_modules","exports","_typeof","Symbol","iterator","constructor","_createForOfIteratorHelper","o","allowArrayLike","it","minLen","_arrayLikeToArray","toString","test","_unsupportedIterableToArray","F","s","_e","f","err","normalCompletion","didErr","step","_e2","arr","len","arr2","SimpleLightbox","sourceAttr","overlay","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","rel","docClose","swipeTolerance","widthRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","scrollZoom","scrollZoomFactor","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","relatedElements","transitionPrefix","calculateTransitionPrefix","transitionCapable","initialLocationHash","hash","getRelated","imgArr","element","createDomNodes","domNodes","closeButton","navigation","eventNamespace","isValidLink","currentTarget","isAnimating","initialImageIndex","openImage","isOpen","throttle","controlCoordinates","currentImage","loadImage","addEvents","supportsPassive","opts","dataset","opacityTarget","innerHTML","counter","caption","image","inThrottle","RegExp","documentElement","scrollbarWidth","fixedElements","fullWindowWidth","innerWidth","documentElementRect","clientWidth","isAppleDevice","scrollDiv","offsetWidth","originalPaddingRight","actualPadding","calculatedPadding","_this2","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","fadeOut","toggleScrollbar","minMax","location","substring","_this3","nextImage","Image","prevImage","loadedImages","_this4","slideDirection","newIndex","show","adjustImage","preload","_this5","tmpImage","windowWidth","windowHeight","scale","translateX","translateY","zoomPanElement","dirIsDefined","alert","updateURL","captionContainer","captionText","imageWidth","imageHeight","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","hide","setCaption","_this6","hashchangeHandler","getElementsByTagName","tagName","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","pageY","opacity","setZoomData","clientX","clientY","sqrt","isTouchDevice","possibleDir","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","newHash","newURL","href","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","clearTimeout","historyUpdateTimeout","updateHash","_this7","pos","_this8","targetURL","_this9","wrap","_step","_iterator","namespaces","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_step5","_this10","_iterator5","isFadeIn","fade","currentOpacity","_step6","_iterator6","_step7","_iterator7","_step8","_this11","_iterator8","_step10","_iterator10","_step9","_iterator9","_step11","_iterator11","initialDisplay","_step12","_iterator12","input","_step13","_iterator13","fullyNamespacedEvents","_step14","_iterator14","_step15","_iterator15","_step16","_iterator16","elem","jQuery","_default","fn","__esModule","hasOwnProperty","StickySidebar","EVENT_KEY","topSpacing","bottomSpacing","containerSelector","scrollContainer","innerWrapperSelector","stickyClass","minWidth","sidebar","extend","sidebarInner","affixedType","support","transform3d","_initialized","_reStyle","_breakpoint","dimensions","maxTranslateY","lastTopSpacing","lastBottomSpacing","sidebarHeight","sidebarWidth","containerTop","viewportHeight","viewportTop","lastViewportTop","method","initialize","_setSupportFeatures","firstChild","containers","_widthBreakpoint","calcDimensions","stickyPosition","bindEvents","eventTarget","ResizeObserver","resizeObserver","handleEvent","updateSticky","dims","offsetRelative","clientHeight","containerBottom","_calcDimensionsWithScroll","sidebarLeft","scrollTop","viewportLeft","scrollLeft","viewportBottom","furthest","colliderTop","affixType","_getAffixTypeScrollingUp","_getAffixTypeScrollingDown","round","sidebarBottom","colliderBottom","isSidebarFitsViewport","inner","outer","bottom","_getTranslate","force","getAffixType","_getStyle","affixEvent","toLowerCase","eventTrigger","affixedEvent","_running","eventType","observeScrollDir","supportTransform","z","minHeight","styleReset","resizeSensor","ResizeSensor","detach","result","property","upper","charAt","toUpperCase","eventName","CustomEvent","createEvent","initCustomEvent","results","isNaN","offsetParent","objectExtend","args","deep","isUnextendable","extenders","extender","isCloneable","val","$parcel$interopDefault","a","default","$4040acfd8584338d$export$2e2bcd8739ae039","_callbacks","callbacks","makeEvent","params","bubbles","evt","splice","$4ca367182776f80b$export$2e2bcd8739ae039","url","withCredentials","timeout","parallelUploads","uploadMultiple","chunking","forceChunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","maxFilesize","paramName","createImageThumbnails","maxThumbnailFilesize","thumbnailWidth","thumbnailHeight","thumbnailMethod","resizeWidth","resizeHeight","resizeMimeType","resizeQuality","resizeMethod","filesizeBase","maxFiles","headers","defaultHeaders","clickable","ignoreHiddenFiles","acceptedFiles","acceptedMimeTypes","autoProcessQueue","autoQueue","addRemoveLinks","previewsContainer","disablePreviews","hiddenInputContainer","renameFilename","renameFile","forceFallback","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictUploadCanceled","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","dictFileSizeUnits","tb","gb","mb","kb","b","files","xhr","chunk","dzuuid","file","upload","uuid","dzchunkindex","dztotalfilesize","dzchunksize","dztotalchunkcount","totalChunkCount","dzchunkbyteoffset","accept","chunksUploaded","binaryBody","messageElement","$3ed269f2f0fb224b$export$2e2bcd8739ae039","span","textContent","innerText","getFallbackForm","info","srcX","srcY","srcWidth","srcHeight","srcRatio","trgRatio","trgWidth","trgHeight","resizeImage","previewTemplate","previewElement","filesize","_removeLink","removeFileEvent","status","UPLOADING","confirm","removeFile","removeLink","_updateMaxFilesReachedClass","dataUrl","thumbnailElement","alt","progress","bytesSent","nodeName","Emitter","_thumbnailQueue","_processingThumbnail","accepted","getFilesWithStatus","QUEUED","ADDED","clickableElements","setupHiddenFileInput","hiddenFileInput","visibility","getElement","addFile","URL","webkitURL","updateTotalUploadProgress","getAddedFiles","getUploadingFiles","getQueuedFiles","noPropagation","dataTransfer","types","containsFiles","returnValue","dragstart","dragenter","dragover","efct","effectAllowed","dropEffect","dragleave","drop","dragend","clickableElement","click","elementInside","enable","removeAllFiles","dropzone","totalUploadProgress","totalBytesSent","totalBytes","getActiveFiles","total","existingFallback","form","getExistingFallback","fieldsString","_getParamName","fields","getFallback","fallback","elementListeners","removeEventListeners","cancelUpload","setupEventListeners","selectedSize","selectedUnit","units","getAcceptedFiles","webkitGetAsEntry","_addFilesFromItems","handleFiles","clipboardData","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","path","dirReader","createReader","errorHandler","$3ed269f2f0fb224b$var$__guardMethod__","console","methodName","log","readEntries","fullPath","isValidFile","uuidv4","filename","_renameFile","_enqueueThumbnail","_errorProcessing","enqueueFile","processQueue","_processThumbnailQueue","createThumbnail","$3ed269f2f0fb224b$var$without","cancelIfNecessary","canvas","resizedDataURL","toDataURL","$3ed269f2f0fb224b$var$ExifRestore","restore","dataURL","dataURItoBlob","fixOrientation","fileReader","FileReader","onload","createThumbnailFromUrl","readAsDataURL","mockFile","imageUrl","crossOrigin","resizeThumbnail","onDone","thumbnail","loadExif","EXIF","getData","getTag","orientation","resizeInfo","ctx","getContext","rotate","PI","$3ed269f2f0fb224b$var$drawImageIOSFix","trgX","trgY","onerror","processingLength","queuedFiles","processFiles","processFile","processing","uploadFiles","groupedFiles","_getFilesWithXhr","groupedFile","CANCELED","abort","groupedFile1","option","_transformFiles","transformedFiles","transformedFile","chunked","chunks","handleNextChunk","chunkIndex","dataBlock","webkitSlice","retries","_uploadData","finishedChunkUpload","response","allFinished","SUCCESS","responseText","responseHeaders","getAllResponseHeaders","_finished","dataBlocks","XMLHttpRequest","resolveOption","open","_finishedUploading","ontimeout","_handleUploadError","onprogress","_updateFilesUploadProgress","Accept","Cache-Control","X-Requested-With","$ewBKy$justextend","headerName","headerValue","setRequestHeader","submitRequest","formData","FormData","additionalParams","_getChunk","_addFormElementData","doneCounter","transformFile","inputName","inputType","hasAttribute","selected","checked","loaded","readyState","responseType","getResponseHeader","warn","send","ERROR","c","r","random","super","nodeType","elementOptions","optionsForElement","isBrowserSupported","getElements","initClass","$3ed269f2f0fb224b$var$camelize","forElement","discover","dropzones","checkElements","blockedBrowsers","capableBrowser","File","FileList","Blob","blacklistedBrowsers","regex","userAgent","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","asc","charCodeAt","rejectedItem","str","childNodes","els","question","rejected","mimeType","baseMimeType","validType","each","ACCEPTED","PROCESSING","sx","sy","sw","sh","dx","dy","dw","dh","vertSquashRatio","naturalWidth","ih","naturalHeight","drawImage","getImageData","ey","py","$3ed269f2f0fb224b$var$detectVerticalSquash","KEY_STR","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","encode64","exifArray","getExifArray","newImageArray","insertExif","seg","imageData","buf","separatePoint","mae","ato","rawImageArray","head","endPoint","exec","Dropzone","HOOKS","_disable","allowInput","allowInvalidPreload","altFormat","altInput","altInputClass","animate","ariaDateFormat","autoFillDefaultTime","clickOpens","closeOnSelect","conjunction","dateFormat","defaultHour","defaultMinute","defaultSeconds","disableMobile","enableSeconds","enableTime","getWeek","givenDate","date","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","hourIncrement","ignoredFocusElements","inline","locale","minuteIncrement","mode","monthSelectorType","nextArrow","noCalendar","onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","plugins","positionElement","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","english","weekdays","shorthand","longhand","months","daysInMonth","firstDayOfWeek","ordinal","nth","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","amPM","yearAriaLabel","monthAriaLabel","hourAriaLabel","minuteAriaLabel","int","bool","debounce","wait","arrayify","content","clearNode","findParent","createNumberInput","inputClassName","numInput","arrowUp","arrowDown","pattern","getEventTarget","composedPath","doNothing","monthToStr","monthNumber","revFormat","D","dateObj","monthName","setMonth","G","hour","H","J","day","K","getHours","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","W","weekNum","weekNumber","year","setFullYear","Z","ISODate","d","h","minutes","setMinutes","j","l","month","u","unixMillSeconds","w","tokenRegex","formats","toISOString","getMonth","getSeconds","getMinutes","createDateFormatter","config","l10n","isMobile","frmt","overrideLocale","formatDate","createDateParser","givenFormat","timeless","customLocale","parsedDate","dateOrig","toFixed","datestr","parseDate","matched","ops","matchIndex","regexStr","token","isBackSlash","escaped","compareDates","date1","date2","getDefaultHours","hours","minDate","minHour","minMinutes","minSeconds","maxDate","maxHr","maxMinutes","FlatpickrInstance","instanceConfig","flatpickr","defaultConfig","English","bindToInstance","setCalendarWidth","calendarContainer","daysContainer","daysWidth","days","weekWrapper","removeProperty","updateTime","selectedDates","defaultDate","getMilliseconds","latestSelectedDateObj","isKeyDown","curValue","which","newValue","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","secondElement","limitMinHours","minTime","minDateHasTime","maxTime","maxDateHasTime","setHoursFromDate","onYearInput","changeYear","ev","_handlers","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","oldYear","currentYear","oldMonth","currentMonth","buildMonthSwitch","redraw","timeIncrement","inputElem","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","todayDateElem","tabIndex","isDateSelected","selectedDateElem","isDateInRange","insertAdjacentHTML","focusOnDayElem","targetNode","onMouseOver","getFirstAvailableDay","startMonth","endMonth","startIndex","endIndex","focusOnDay","current","dayFocused","isInView","activeElement","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","shouldBuildMonth","monthsDropdownContainer","buildMonth","monthNavFragment","monthElement","selectedMonth","yearInput","tabindex","yearElement","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","isOffset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isCalendarElement","isInput","lostFocus","relatedTarget","isIgnored","some","timeContainer","newYear","newYearNum","isNewYear","_a","dateToCheck","parsed","to","onBlur","allowKeydown","allowInlineKeydown","keyCode","blur","isTimeObj","focusAndClose","selectDate","ctrlKey","currentYearElement","elems","pluginElements","shiftKey","hoverDate","initialDate","rangeStartDate","rangeEndDate","containsDisabled","minRange","maxRange","dayElem","timestamp","outOfRange","ts1","ts2","ts","onResize","positionCalendar","minMaxDateSetter","inverseDateObj","getInputElem","setupLocale","l10ns","stringify","customPositionElement","_positionElement","calendarHeight","reduce","acc","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","distanceFromBottom","showOnTop","pageYOffset","pageXOffset","isCenter","isRight","rightMost","centerMost","doc","editableSheet","styleSheets","sheet","cssRules","createStyleSheet","getDocumentStyleSheet","bodyWidth","centerLeft","centerBefore","centerAfter","centerIndex","centerStyle","insertRule","msMaxTouchPoints","selectedDate","shouldChangeMonth","selectedIndex","single","range","loadedPlugins","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","toInitial","mobileInput","_initialDate","_createElement","lastChild","_type","k","wasOpen","select","CALLBACKS","setSelectedDate","inputDate","dates","parseDateRules","rule","hooks","initEvent","getDateStr","dObj","mobileFormatStr","onMonthNavClick","isPrevMonth","isNextMonth","boolOpts","userConfig","_enable","timeMode","defaultDateFormat","defaultAltFormat","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","pluginConf","parseConfig","placeholder","required","nextSibling","setupInputs","preloadedDate","setupDates","yr","fragment","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","buildWeeks","rContainer","separator","hourInput","aria-label","minuteInput","military2ampm","secondInput","buildTime","customAppend","build","defaultValue","setupMobile","debouncedResize","ontouchstart","selText","isSafari","_flatpickr","nodeList","HTMLCollection","NodeList","Node","en","localize","setDefaults","fp_incr"],"mappings":"CAAC,WACC,aAEA,SAASA,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAIxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAUlD,SAASO,EAAgBC,EAAKF,EAAKG,GAYjC,OAXIH,KAAOE,EACTJ,OAAOC,eAAeG,EAAKF,EAAK,CAC9BG,MAAOA,EACPR,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZK,EAAIF,GAAOG,EAGND,EC5BV,IAAME,EAAWC,OAAOC,WAAW,sCAAsCC,QAInEC,EAAgB,mBA+FtB,IA5FE,SAAAC,IAAc,IAAAC,EAAAC,KAAA1B,EAAA0B,KAAAF,GAAAR,EAAAU,KAAA,mBAwCK,SAACC,GACjBA,EAAQC,KAAI,SAACC,GACX,IAAMC,EAAUD,EAAMxB,OAChB0B,EAAQN,EAAKO,SAASF,GACtBG,EAAmBH,EAAQI,aAAa,sBAE1CL,EAAMM,eACLhB,GAAYW,EAAQI,aAAa,0BAClCJ,EAAQM,UAAUC,IAAId,GAEtBE,EAAKa,UAAUL,EAAkB,QAEjCM,YAAW,WACTT,EAAQM,UAAUC,IAAId,GACtBE,EAAKa,UAAUL,EAAkB,SAChCF,GAGLN,EAAKa,UAAUL,EAAkB,gBA1D1BjB,EAAAU,KAAA,YA+DH,SAACI,GACZ,IAAIC,EAAQD,EAAQI,aAAa,iBAEjC,IAAIf,GAAYW,EAAQI,aAAa,yBAC/BH,EAAQD,EAAQI,aAAa,yBAGnC,OAAc,OAAVH,EACK,EACEA,EAAMS,SAAS,KACjBC,SAAiB,IAARV,GAETU,SAASV,MA3EJf,EAAAU,KAAA,aA+EF,SAACgB,EAAWC,GAClBD,IAIQ,OAARC,EACDC,SAASC,KAAKT,UAAUC,IAAIK,GAE5BE,SAASC,KAAKT,UAAUU,OAAOJ,OAtFnChB,KAAKqB,SAAWH,SAASI,iBALX,YAMdtB,KAAKuB,UARU,OASfvB,KAAKwB,eARe,MAUf,yBAA0B9B,OAC3BM,KAAKqB,SAASI,SAAQ,SAACC,GACtB,IAAMC,EAAqBD,EAAGE,wBACRD,EAAmBE,OAASnC,OAAOoC,YAEvC,MAChB/B,EAAKwB,UAAa7B,OAAOoC,YAAcH,EAAmBE,OAAS,IAAM,GACzE9B,EAAKyB,eAAiB9B,OAAOoC,YAAcH,EAAmBE,OAAS,IAAM,IAI9E,IAAME,EAAe,IAAIC,qBAAqBjC,EAAKkC,gBAAiB,CAClEC,UAAWnC,EAAKyB,iBAElBO,EAAaI,QAAQT,GAGrBb,YAAW,WACTkB,EAAaK,eACZ,KAGH,IAAMC,EAAoBX,EAAGlB,aAAa,qBAAuBkB,EAAGlB,aAAa,qBAAuBT,EAAKwB,UAC5F,IAAIS,qBAAqBjC,EAAKkC,gBAAiB,CAC9DC,UAAWG,IAEJF,QAAQT,MAGnB1B,KAAKqB,SAASI,SAAQ,SAACC,GACrBA,EAAGhB,UAAUC,IAAId;;;;;;;AC7C3B,MAAMyC,EAAe,SACfC,EAAiB,cAOjBC,EAAS,CACbC,QANc,EAOdC,QANc,EAOdC,KANW,EAOXC,OANa,EAObC,UANgB,GAYlB,SAASC,EAAMC,GACbA,EAAMjE,OAAS,EAGjB,SAASkE,EAASC,GAChB,OAAQC,EAAOD,IAA+B,iBAAZA,EAEpC,SAASE,EAAQF,GACf,OAAOG,MAAMD,QAAQF,GAKvB,SAASI,EAASJ,GAChB,MAA0B,iBAAZA,EAEhB,SAASK,EAAYL,GACnB,YAA0B,IAAZA,EAEhB,SAASC,EAAOD,GACd,OAAmB,OAAZA,EAET,SAASM,EAAcN,GACrB,OAAOA,aAAmBO,YAG5B,SAASC,EAAQjE,GACf,OAAO2D,EAAQ3D,GAASA,EAAQ,CAACA,GAGnC,SAASiC,EAAQiC,EAAQC,GACvBF,EAAQC,GAAQjC,QAAQkC,GAG1B,SAAS7C,EAASiC,EAAOvD,GACvB,OAAOuD,EAAMa,QAAQpE,IAAU,EAGjC,SAASqE,EAAKd,EAAOe,GAEnB,OADAf,EAAMc,QAAQJ,EAAQK,IACff,EAGT,MAAMgB,EAAaX,MAAMY,UAEzB,SAASC,EAAMC,EAAWC,EAAOC,GAC/B,OAAOL,EAAWE,MAAMI,KAAKH,EAAWC,EAAOC,GAOjD,SAASE,EAAYC,EAAKC,EAAS7D,GAC7B4D,GACF9C,EAAQ+C,GAAUC,IACZA,GACFF,EAAI7D,UAAUC,EAAM,MAAQ,UAAU8D,MAM9C,SAASC,EAASH,EAAKC,GACrBF,EAAYC,EAAKlB,EAASmB,GAAWA,EAAQG,MAAM,KAAOH,GAAS,GAGrE,SAASI,EAAOC,EAAQC,GACtBrD,EAAQqD,EAAUD,EAAOE,YAAYC,KAAKH,IAG5C,SAASI,EAAOC,EAAOC,GACrB1D,EAAQyD,GAAQE,IACd,MAAMP,EAASM,EAAIE,WACfR,GACFA,EAAOS,aAAaF,EAAMD,MAKhC,SAASvF,EAAQ2E,EAAKgB,GACpB,OAAQhB,EAAuB,mBAAKA,EAAI3E,SAASyE,KAAKE,EAAKgB,GAG7D,SAAST,EAASD,EAAQU,GACxB,OAAOV,EAASZ,EAAMY,EAAOC,UAAUU,QAAQC,GAAU7F,EAAQ6F,EAAOF,KAAa,GAGvF,SAASE,EAAMZ,EAAQU,GACrB,OAAOA,EAAWT,EAASD,EAAQU,GAAU,GAAKV,EAAOa,kBAG3D,SAASC,EAAOC,EAAQjC,EAAUkC,GAChC,GAAID,EAAQ,CACV,IAAIE,EAAO3G,OAAO2G,KAAKF,GACvBE,EAAOD,EAAQC,EAAKC,UAAYD,EAChC,IAAK,IAAIjH,EAAI,EAAGA,EAAIiH,EAAKhH,OAAQD,IAAK,CACpC,MAAMQ,EAAMyG,EAAKjH,GACjB,GAAY,cAARQ,IACiC,IAA/BsE,EAASiC,EAAOvG,GAAMA,GACxB,OAKR,OAAOuG,EAGT,SAASI,EAAOJ,GAMd,OALA3B,EAAMgC,UAAW,GAAGxE,SAASyE,IAC3BP,EAAOO,GAAQ,CAAC1G,EAAOH,KACrBuG,EAAOvG,GAAO6G,EAAO7G,SAGlBuG,EAGT,SAASO,EAAMP,EAAQM,GAUrB,OATAP,EAAOO,GAAQ,CAAC1G,EAAOH,KACjB8D,EAAQ3D,GACVoG,EAAOvG,GAAOG,EAAMyE,QACXjB,EAASxD,GAClBoG,EAAOvG,GAAO8G,EAAMnD,EAAS4C,EAAOvG,IAAQuG,EAAOvG,GAAO,GAAIG,GAE9DoG,EAAOvG,GAAOG,KAGXoG,EAGT,SAASQ,EAAgB7B,EAAK8B,GACxB9B,GACF9C,EAAQ4E,GAAQC,IACd/B,EAAI6B,gBAAgBE,MAK1B,SAASC,EAAahC,EAAK8B,EAAO7G,GAC5BwD,EAASqD,GACXV,EAAOU,GAAO,CAACG,EAAQ/B,KACrB8B,EAAahC,EAAKE,EAAM+B,MAG1BtD,EAAO1D,GAAS4G,EAAgB7B,EAAK8B,GAAS9B,EAAIgC,aAAaF,EAAOI,OAAOjH,IAIjF,SAASkH,EAAOC,EAAKN,EAAOxB,GAC1B,MAAMN,EAAMrD,SAAS0F,cAAcD,GAKnC,OAJIN,IACFhD,EAASgD,GAAS3B,EAASH,EAAK8B,GAASE,EAAahC,EAAK8B,IAE7DxB,GAAUD,EAAOC,EAAQN,GAClBA,EAGT,SAASsC,EAAMtC,EAAKuC,EAAMtH,GACxB,GAAI8D,EAAY9D,GACd,OAAOuH,iBAAiBxC,GAAKuC,GAE/B,IAAK5D,EAAO1D,GAAQ,CAClB,MAAQqH,MAAOG,GAAWzC,EAC1B/E,EAAQ,GAAGA,IACPwH,EAAOF,KAAUtH,IACnBwH,EAAOF,GAAQtH,IAKrB,SAASyH,EAAQ1C,EAAK2C,GACpBL,EAAMtC,EAAK,UAAW2C,GAOxB,SAAS1G,EAAa+D,EAAK+B,GACzB,OAAO/B,EAAI/D,aAAa8F,GAG1B,SAASa,EAAS5C,EAAK6C,GACrB,OAAO7C,GAAOA,EAAI7D,UAAU2G,SAASD,GAGvC,SAASE,EAAK3I,GACZ,OAAOA,EAAOiD,wBAGhB,SAASR,EAAO8D,GACdzD,EAAQyD,GAAQE,IACVA,GAAQA,EAAKC,YACfD,EAAKC,WAAWkC,YAAYnC,MAclC,SAASoC,EAAUC,GACjB,OAAOhC,GAAM,IAAIiC,WAAYC,gBAAgBF,EAAM,aAAatG,MAGlE,SAASyG,EAAQC,EAAGC,GAClBD,EAAEE,iBACED,IACFD,EAAEC,kBACFD,EAAEG,4BAIN,SAASC,EAAMpD,EAAQU,GACrB,OAAOV,GAAUA,EAAOqD,cAAc3C,GAGxC,SAAS4C,EAAStD,EAAQU,GACxB,OAAOtB,EAAMY,EAAOvD,iBAAiBiE,IAGvC,SAAS6C,EAAY7D,EAAKC,GACxBF,EAAYC,EAAKC,GAAS,GAG5B,SAAS6D,EAAK7I,GACZ,OAAO6D,EAAS7D,GAASA,EAAQA,EAAQ,GAAGA,MAAY,GAG1D,SAAS8I,EAAOC,EAAWC,EAAU,IACnC,IAAKD,EACH,MAAM,IAAIE,MAAM,YAAqBD,KAIzC,SAASE,EAASC,GAChB9H,WAAW8H,GAGb,MAAMC,EAAO,OAGb,SAASC,EAAIC,GACX,OAAOC,sBAAsBD,GAG/B,MAAME,IAAEA,EAAGC,IAAEA,EAAGC,MAAEA,EAAKC,KAAEA,EAAIC,IAAEA,IAAQC,KAMvC,SAASC,GAAQC,EAAQC,EAAUC,EAAUC,GAC3C,MAAMC,EAAUX,EAAIQ,EAAUC,GACxBG,EAAUX,EAAIO,EAAUC,GAC9B,OAAOC,EAAYC,EAAUJ,GAAUA,EAASK,EAAUD,GAAWJ,GAAUA,GAAUK,EAG3F,SAASC,GAAMN,EAAQO,EAAGC,GACxB,MAAMJ,EAAUX,EAAIc,EAAGC,GACjBH,EAAUX,EAAIa,EAAGC,GACvB,OAAOf,EAAIC,EAAIU,EAASJ,GAASK,GAGnC,SAASI,GAAKF,GACZ,QAASA,EAAI,KAAOA,EAAI,GAO1B,SAASG,GAAOC,EAAQC,GAItB,OAHA1I,EAAQ0I,GAAeC,IACrBF,EAASA,EAAOG,QAAQ,KAAM,GAAGD,QAE5BF,EAGT,SAASI,GAAIf,GACX,OAAOA,EAAS,GAAK,IAAIA,IAAW,GAAGA,IAGzC,MAAMgB,GAAM,GAuDZ,MAAMC,GAAgB,UAChBC,GAAc,QACdC,GAAa,OACbC,GAAc,QACdC,GAAc,QAKdC,GAAsB,gBACtBC,GAAgB,UAChBC,GAAgB,UAChBC,GAAe,SACfC,GAAgB,UAChBC,GAAqB,eAIrBC,GAAe,SACfC,GAAiB,WACjBC,GAAgB,UAKhBC,GAA2B,qBAI3BC,GAAwB,kBAE9B,SAASC,GAAeC,GACtB,MAAMC,MAAEA,GAAUD,EACZpM,EAAM,GACZ,IAAIsM,EAAY,GAahB,SAASC,EAAOC,EAASC,EAAQnD,GAC/BoD,EAAaF,EAASC,GAAQ,CAACnN,EAAQqN,KACrCL,EAAYA,EAAUnG,QAAQyG,MACxBA,EAAS,KAAOtN,GAAUsN,EAAS,KAAOD,GAAYrD,GAAYsD,EAAS,KAAOtD,KACpFhK,EAAOuN,oBAAoBF,EAAQC,EAAS,GAAIA,EAAS,KAClD,QAMf,SAASF,EAAaF,EAASC,EAAQnI,GACrClC,EAAQoK,GAAUlN,IACZA,GACFmN,EAAOnH,MAAM,KAAKlD,QAAQkC,EAASqB,KAAK,KAAMrG,OAIpD,SAASwN,IACPR,EAAYA,EAAUnG,QAAQ4G,GAASR,EAAOQ,EAAK,GAAIA,EAAK,MAC5DV,EAAMW,MAAMhN,GAGd,OADAqM,EAAMY,GAAGjB,GAAec,EAAS9M,GAC1B,CACLiN,GApCF,SAAYR,EAAQnD,EAAU4D,GAC5Bb,EAAMY,GAAGR,EAAQnD,EAAUtJ,EAAKkN,IAoChCC,IAlCF,SAAaV,GACXJ,EAAMc,IAAIV,EAAQzM,IAkClBoN,KAAMf,EAAMe,KACZzH,KAjCF,SAAc6G,EAASC,EAAQnD,EAAU+D,GACvCX,EAAaF,EAASC,GAAQ,CAACnN,EAAQqN,KACrCL,EAAU9H,KAAK,CAAClF,EAAQqN,EAAQrD,EAAU+D,IAC1C/N,EAAOgO,iBAAiBX,EAAQrD,EAAU+D,OA+B5Cd,OAAAA,EACAO,QAAAA,GAIJ,SAASS,GAAgBC,EAAUC,EAAYC,EAAUC,GACvD,MAAMC,IAAEA,GAAQC,KAChB,IAAIC,EAEAC,EADAC,EAAO,EAEPC,GAAS,EACTC,EAAQ,EACZ,SAASC,IACP,IAAKF,EAAQ,CACX,MAAMG,EAAUR,IAAQE,EAUxB,GATIM,GAAWZ,GACbQ,EAAO,EACPF,EAAYF,KAEZI,EAAOI,EAAUZ,EAEfE,GACFA,EAASM,GAEE,IAATA,IACFP,IACIE,KAAWO,GAASP,GACtB,OAAOU,IAGX7E,EAAI2E,IASR,SAASE,IACPJ,GAAS,EASX,SAASK,IACPC,qBAAqBR,GACrBC,EAAO,EACPD,EAAK,EACLE,GAAS,EAKX,MAAO,CACLnJ,MA1BF,SAAe0J,IACZA,GAAUF,IACXR,EAAYF,KAASY,EAASR,EAAOR,EAAW,GAChDS,GAAS,EACTzE,EAAI2E,IAuBJM,OAlBF,WACEX,EAAYF,IACZI,EAAO,EACHN,GACFA,EAASM,IAeXK,MAAAA,EACAC,OAAAA,EACAI,SARF,WACE,OAAOT,IAsBX,SAASU,GAASlF,EAAMmF,GACtB,IAAIpB,EAUJ,OATA,WACOA,IACHA,EAAWD,GAAgBqB,GAAY,GAAG,KACxCnF,EAAKoF,MAAMlO,KAAMiG,WACjB4G,EAAW,OACV,KAAM,GACTA,EAAS1I,UAgEf,MACMgK,GAAM,MAENC,GAAkB,CACtBC,YAAa,CAAC,eAAgB,cAC9BC,UAAW,CAAC,cACZC,WAAY,CAAC,eACbC,YAAa,CAAC,aAAc,gBAC5BC,aAAc,CAAC,gBAAiB,eAChCC,MAAO,CAAC,UACRC,KAAM,CAAC,MAAO,SACd9I,MAAO,CAAC,SAAU,QAClBiE,EAAG,CAAC,KACJ8E,EAAG,CAAC,KACJC,EAAG,CAAC,KACJC,UAAW,CAAC,UAAW,cACvBC,WAAY,CAAC,YAAa,cAiB5B,MAIMC,GAAc,gBACdC,GAAc,uBAEdC,GAAe,iBACfC,GAAc,gBACdC,GAAmB,sBACnBC,GAAmB,sBACnBC,GAAmB,qBASnBC,GAAe,YACfC,GAAa,UACbC,GAAa,UACbC,GAAgB,aAChBC,GAAgB,aAChBC,GAAiB,CAACL,GAAcG,GAAeF,GAAYC,GAAYE,IACvEE,GAAU,CACdC,MAAOd,GACPe,MAAOd,GACPe,OAAQd,GACRe,MAAOd,GACPe,KAAMd,GACNe,KAAMd,GACNe,WAAYd,GACZe,KAtB4B,2BAuB5BC,QAjBoB,mBAqGtB,MAAMC,GAAO,OACPC,GAAgB,gBAChBC,GAAe,eACfC,GAAa,aACbC,GAAc,cACdC,GAAY,WAEZC,GAAmB,mBACnBC,GAAiB,CACrBP,GACAC,GACAC,GACAC,GACAC,GACAE,GACAD,GATe,YAaXG,GAAQ,QACRC,GAAO,OACPC,GAAO,OAEb,SAASC,GAAQzF,EAAS0F,EAAOC,EAAYtB,GAC3C,MAAMxD,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,EAAMmH,QAASkF,GAAkB7F,GAAeC,IAC5D6F,WAAEA,EAAUC,KAAEA,EAAI7E,QAAEA,GAAYjB,GAChC+F,aAAEA,EAAYC,aAAEA,GAAiB/E,GACjCgF,QAAEA,GAAYJ,EAAWK,UACzBC,EAASpR,EAAasP,EAAO,SAC7B+B,EAAUT,GAAc,EACxBU,EAAYrM,EAAMqK,EAAO,6BACzBiC,EAAiBrF,EAAQqF,gBAAkB5J,EAAS2H,EAAOpD,EAAQqF,gBACzE,IAAIC,EA+BJ,SAASC,EAAO9B,EAAMD,EAAMgC,GACrBF,IACHxE,EAAOnJ,KAAKrE,MACRkS,IAASf,GACXgB,EAAe9N,KAAKrE,MAAM,IAIhC,SAASwN,IACP,IAAKwE,EAAW,CACd,MAAQb,MAAOiB,GAAc3G,EAC7B0G,EAAe9N,KAAKrE,KAAMqS,KAC1BC,EAAiBjO,KAAKrE,KAkC1B,WACE,GAAIyL,EAAQ8G,GAAGtB,IACb,OAAOoB,IAET,MAAMG,EAAYlL,EAAKgK,EAAWmB,SAASC,OACrCC,EAAYrL,EAAKwI,GACjBnB,EAAO+C,EAAQ,QACf7L,EAAQ6L,EAAQ,SACtB,OAAOxI,EAAMsJ,EAAU7D,KAAUxF,EAAKwJ,EAAUhE,KAAUzF,EAAMyJ,EAAU9M,KAAWsD,EAAKqJ,EAAU3M,IA1CtE+M,IAC5BtO,EAAYwL,EAAON,GAAY2B,IAAUiB,EAAY,GACrD9N,EAAYwL,EAAOL,GAAY0B,IAAUiB,EAAY,IAGzD,SAASD,EAAeU,GAClBA,IAAW1L,EAAS2I,EAAOP,MAC7BjL,EAAYwL,EAAOP,GAAcsD,GAC7BrB,GACFjL,EAAauJ,EAAOW,GAAcoC,GAAU,MAE9CpG,EAAKoG,EA1cU,SACE,WAyc4B7S,OAGjD,SAASsS,EAAiBQ,GACxB,MAAMC,GAAcD,IAAYT,IAChC9L,EAAauJ,EAAOa,GAAaoC,GAAc,MAC/CxM,EAAauJ,EAAOc,IAAYmC,GAAcrG,EAAQsG,WAAa,EAAI,MACnEjB,GACFA,EAAetQ,SAAS2D,IACtBmB,EAAanB,EAAMwL,GAAWmC,GAAc,EAAI,SAGhDD,IAAY3L,EAAS2I,EAAOJ,MAC9BpL,EAAYwL,EAAOJ,GAAeoD,GAClCrG,EAAKqG,EAtdW,UACD,SAqd8B9S,OAMjD,SAASqS,IACP,OAAO5G,EAAQ0F,QAAUA,EAmB3B,MAAO,CACLA,MAAAA,EACAC,WAAAA,EACAtB,MAAAA,EACAgC,UAAAA,EACAD,QAAAA,EACAoB,MAnGF,YAUA,WACOpB,IACH/B,EAAM1C,GAAK,GAAGmE,EAAKnE,WAAW9C,GAAI6G,EAAQ,MAE5C,GAAIK,EAAc,CAChB,MAAM0B,EAAMrB,EAAUT,EAAaD,EAC7BgC,EAAQlJ,GAAOyC,EAAQ0G,KAAKC,OAAQH,EAAM,GAC1CI,EAAW7H,EAAQ8H,QAAQrT,KAAKsT,GAAWA,EAAOjC,KAAKnE,KAAIqG,KAAK,KACtElN,EAAauJ,EAAOY,GAAYyC,GAChC5M,EAAauJ,EAAOU,GAAe8C,GACnC/M,EAAauJ,EAAOS,GAAM,aAnB5BmD,GACA1O,EAAK8K,EAAO,iBAAkBjI,IAC5B4E,EAAgB,UAAX5E,EAAE5G,KAAmB2J,GAAcC,GAAqB7K,KAAM6H,MAErEyE,EAAG,CAACxB,GAAeI,GAAoBP,GAAaS,IAAiBoC,EAAOxI,KAAKhF,OAC7EyR,GACFnF,EAAG5B,GAAYuH,EAAOjN,KAAKhF,QA6F7BmM,QA7EF,WACE6F,GAAY,EACZX,IACAjJ,EAAY0H,EAAOF,IACnBxJ,EAAgB0J,EAAOgB,IACvBvK,EAAauJ,EAAO,QAAS8B,IAyE7B/K,MA/BF,SAAiBC,EAAMtH,EAAOmU,GAC5B9M,EAAM8M,GAAgB7B,GAAahC,EAAOhJ,EAAMtH,IA+BhDoU,SAhBF,SAAkBC,EAAMC,GACtB,IAAIC,EAAO3K,GAAIyK,EAAO1C,GAItB,OAHKU,IAAYnF,EAAQoB,SAAUrC,EAAQ8G,GAAGvB,MAC5C+C,EAAO/K,EAAI+K,EAAMtI,EAAQ3M,OAASiV,IAE7BA,GAAQD,IA21BnB,MAGME,GAAsB,sBACtBC,GAAoB,+BA4J1B,MAAMC,GAAgB,CAAC,OAAQ,QAAS,KAAM,QA8C9C,MAAMC,GAAqB,mBACrBC,GAAwB,0BACxBC,GAAiB,gDAoKvB,MAAMC,GAAe,CAAC,IAAK,QAAS,YAyEpC,IAAIC,GAAqCpV,OAAOqV,OAAO,CACrDC,UAAW,KACXC,QAxmDF,SAAiBjJ,EAASkJ,EAAajI,GACrC,MAAMkI,EAAmB5G,GAAS7L,GAClC,IAAI0S,EACAC,EACAC,EAuBJ,SAAS5I,EAAQ6I,GACXA,GACF9I,oBAAoB,SAAU0I,GAGlC,SAASzS,IACP,MAAM8S,GA/eeC,EA+eMC,GAAUA,EAAM,GAAGvV,QA9ezCqE,EA8ea6Q,GA9eItP,OAAO0P,GAAW,IA8ekB,IA/e9D,IAAyBA,EAgfjBD,EAAK,KAAOF,GAIlB,SAAiBK,GACf,MAAMC,EAAa3I,EAAQ4I,YAAYF,IAAUP,EAC7CQ,EAAWlJ,SACbV,EAAQiB,QAAUmI,EAClBpJ,EAAQU,QAA+B,eAAvBkJ,EAAWlJ,WAEvBV,EAAQ8J,MAAMhD,GAvjBN,KAwjBVpG,GAAQ,GACRV,EAAQwH,SAEVxH,EAAQiB,QAAU2I,GAblBG,CAAQT,EAAYE,EAAK,IAgB7B,MAAO,CACLQ,MA/CF,WACE,IACEtP,EAAMuG,EAASgJ,KAAKC,MAAMnV,EAAaiL,EAAQ8F,KAAMhP,KACrD,MAAOsF,GACPS,GAAO,EAAOT,EAAEW,SAElBqM,EAAiB1O,EAAM,GAAIuG,GAC3B,MAAM4I,YAAEA,GAAgB5I,EACxB,GAAI4I,EAAa,CACf,MAAMM,EAA+B,QAAvBlJ,EAAQmJ,WACtBf,EAAS3V,OAAO2G,KAAKwP,GAAaQ,MAAK,CAACC,EAAGC,IAAMJ,GAASI,GAAKD,GAAKA,GAAKC,IAAG9V,KAAKkV,GAAU,CACzFA,EACAzV,WAAW,IAAIiW,EAAQ,MAAQ,eAAeR,WAEhDjT,MAkCF8Q,MA/BF,WACM6B,GACFnI,iBAAiB,SAAUiI,IA8B7BzI,QAAAA,IAmjDFwF,UA7hDF,SAAmBlG,EAASkJ,EAAajI,GASvC,MAAO,CACLgF,QATF,SAAiB5K,EAAMmP,GACrB,MAAMC,UAAEA,GAAcxJ,EAEtB,OAAO0B,GAAgBtH,GAtBf,QAqBMoP,GAAsBD,EAAeC,IAAc/H,GAAM,GAAK,EAA7B,IACRrH,GAOvCqP,OALF,SAAgB3W,GACd,OAAOA,GAzBC,QAyBQkN,EAAQwJ,UAAoB,GAAK,MAuhDnDzD,SAz+CF,SAAkBhH,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,GAAOd,GAAeC,IACxB8F,KAAEA,GAAS9F,EACX2K,EAAW,GACXC,EAAS,GACf,IAAI7R,EACA8R,EACA5D,EACA6D,EACJ,SAASd,KAwBT,WACEa,EAAS7Q,EAAM8L,EAAM,mBACrBmB,EAAQzK,EAAMsJ,EAAM,kBACpBgF,EAAO9Q,EAAMiN,EAAO,iBACpBpK,EAAOoK,GAAS6D,EAAM,oCACtB1S,EAAKwS,EAAQvR,EAASyR,EAAM,uBAAwBtH,QACpD,MAAMuH,EAAWC,EAAK,qBAChBzG,EAASyG,EAAK,mBACpBzQ,EAAOoQ,EAAU,CACf7E,KAAAA,EACA+E,OAAAA,EACA5D,MAAAA,EACA6D,KAAAA,EACAF,OAAAA,EACArG,OAAAA,EACAwG,SAAAA,EACAtG,KAAMjI,EAAM+H,EAAQ,wBACpBG,KAAMlI,EAAM+H,EAAQ,wBACpB0G,IAAKzO,EAAMwO,EAAK,qBAAuB,0BACvCE,KAAM1O,EAAMuO,EAAU,iBACtB9I,MAAOzF,EAAMuO,EAAU,oBA3CzBI,GA8CF,WACE,MAAMxJ,EAAKmE,EAAKnE,KAvZFyJ,EAuZiBvU,EAtZ1B,GAAGuU,IAASvM,GAAIC,GAAIsM,IAAWtM,GAAIsM,IAAW,GAAK,MAD5D,IAAkBA,EAwZdtF,EAAKnE,GAAKA,EACVsF,EAAMtF,GAAKsF,EAAMtF,IAAM,GAAGA,UAC1BmJ,EAAKnJ,GAAKmJ,EAAKnJ,IAAM,GAAGA,SAjDxB0J,GACApS,EAAS6M,EAAM/M,EAAUuS,KAM3B,SAAS5K,IACP,CAACoF,EAAMmB,EAAO6D,GAAM9U,SAAS8C,IAC3B6B,EAAgB7B,EAAK,YAEvBzB,EAAMuT,GACNjO,EAAYmJ,EAAM/M,GAEpB,SAASwS,IACP7K,IACAsJ,IAEF,SAASjI,IACPpF,EAAYmJ,EAAM/M,GAClBE,EAAS6M,EAAM/M,EAAUuS,KA+B3B,SAASN,EAAKlR,GACZ,OAAOE,EAAM8L,EAAMhM,IAAaE,EAAM6Q,EAAQ/Q,GAEhD,SAASwR,IACP,MAAO,CACL,WAAkBrK,EAAQzL,OAC1B,WAAkByL,EAAQwJ,YAC1BxJ,EAAQuK,MAAQ,oBAChBvK,EAAQ8E,cAAgB,cACxBjC,IAGJ,OAAOvJ,EAAOoQ,EAAU,CACtBX,MAAAA,EACAxC,MA9DF,WACE3G,EAAGxB,GAAekM,EAASE,GAC3B5K,EAAGvB,GAAeyC,IA6DlBrB,QAAAA,KA65CFgL,OA9wCF,SAAgB1L,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,GAASwG,GAAeC,IACpC4K,OAAEA,EAAME,KAAEA,GAAS5B,EAAYlC,SAC/B2E,EAAU,GAQhB,SAAS1D,IACP2C,EAAO5U,SAAQ,CAACqO,EAAOqB,KACrBkG,EAASvH,EAAOqB,GAAQ,MAG5B,SAAShF,IACPmL,GAAWC,IACTA,EAAOpL,aAETrJ,EAAMsU,GAER,SAASJ,IACP7K,IACAuH,IAEF,SAAS2D,EAASvH,EAAOqB,EAAOC,GAC9B,MAAMxL,EAASsL,GAAQzF,EAAS0F,EAAOC,EAAYtB,GACnDlK,EAAOqN,QACPmE,EAAQvT,KAAK+B,GAEf,SAAS4R,EAAIC,GACX,OAAOA,EAAgBjS,GAAQ+R,IAAYA,EAAO1F,UAAWuF,EA6B/D,SAASE,EAAU3T,EAAU8T,GAC3BD,EAAIC,GAAehW,QAAQkC,GAE7B,SAAS6B,EAAOkS,GACd,OAAON,EAAQ5R,OAl5BS,mBAk5BSkS,EAAWA,EAAWH,GAAWlU,EAASqU,GAAW9X,EAAQ2X,EAAOzH,MAAO4H,GAAW5W,EAAS2C,EAAQiU,GAAUH,EAAOpG,QA4B3J,MAAO,CACL8B,MA1FF,WACES,IACApH,EAAGxB,GAAekM,GAClB1K,EAAG,CAAC9B,GAAeM,KAAgB,KACjCsM,EAAQtB,MAAK,CAAC6B,EAAQJ,IAAWI,EAAOxG,MAAQoG,EAAOpG,YAuFzDhF,QAAAA,EACAkL,SAAAA,EACAG,IAAAA,EACAI,MAhEF,SAAevH,GACb,MAAMwH,WAAEA,GAAelD,EACjBxD,EAAQ0G,EAAWC,QAAQzH,GAC3BpH,EAAM4O,EAAWE,WAAa,EAAIrL,EAAQsL,QAChD,OAAOxS,GAAQ+R,GAAWjO,GAAQiO,EAAOpG,MAAOA,EAAOA,EAAQlI,EAAM,MA6DrEgP,MA3DF,SAAe9G,GACb,OAAO3L,EAAO2L,GAAO,IA2DrBxQ,IAzDF,SAAamD,EAAOqN,GAClB1P,EAAQqC,GAAQgM,IAId,GAHIzM,EAASyM,KACXA,EAAQtI,EAAUsI,IAEhBvM,EAAcuM,GAAQ,CACxB,MAAM3K,EAAMkR,EAAOlF,GACnBhM,EAAMF,EAAO6K,EAAO3K,GAAOP,EAAO2R,EAAMzG,GACxCpL,EAASoL,EAAOpD,EAAQlI,QAAQsL,OAqBtC,SAAuBvL,EAAKoE,GAC1B,MAAMuP,EAAS/P,EAAS5D,EAAK,OAC7B,IAAIzF,OAAEA,GAAWoZ,EACbpZ,EACFoZ,EAAOzW,SAAS0W,IACdnT,EAAKmT,EAAK,cAAc,OACfrZ,GACL6J,UAKNA,IAhCEyP,CAActI,EAAOrD,EAAKzH,KAAK,KAAMgG,SAGzCyB,EAAK3B,KA8CL1J,OA5CF,SAAkBsW,GAChBtW,EAAOoE,EAAOkS,GAASxX,KAAKqX,GAAWA,EAAOzH,SAC9CrD,EAAK3B,KA2CLrJ,QAAS6V,EACT9R,OAAAA,EACAqB,MArCF,SAAeC,EAAMtH,EAAOmU,GAC1B2D,GAAWC,IACTA,EAAO1Q,MAAMC,EAAMtH,EAAOmU,OAoC5B0E,UAlBF,SAAmBZ,GACjB,OAAOA,EAAgBpB,EAAOvX,OAASsY,EAAQtY,QAkB/CwZ,SAhBF,WACE,OAAOlB,EAAQtY,OAAS4N,EAAQsL,WAorClCO,OAjqCF,SAAgB9M,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,IACpC0L,OAAEA,GAAWxC,GACbjD,QAAEA,GAAYiD,EAAYhD,WAC1BJ,KAAEA,EAAImB,MAAEA,EAAK6D,KAAEA,GAAS5B,EAAYlC,UACpCwF,MAAEA,GAAUd,EAClB,IAAIqB,EACAC,EAOJ,SAAS/E,IACP+E,EAAW,KACXD,EAAW9L,EAAQwJ,YAAc/H,GACjCtH,EAAM0K,EAAM,WAAYlJ,EAAKqE,EAAQgC,QACrC7H,EAAM6L,EAAOhB,EAAQ,eAAgBgH,GAAW,IAChD7R,EAAM6L,EAAOhB,EAAQ,gBAAiBgH,GAAW,IACjDC,IAEF,SAASA,IACP,MAAMC,EAAUtR,EAAKiK,GAChBkH,GAAYA,EAAS/J,QAAUkK,EAAQlK,OAAS+J,EAAS5W,SAAW+W,EAAQ/W,SAC/EgF,EAAM6L,EAAO,SAgBjB,WACE,IAAI7Q,EAAS,GACT2W,IACF3W,EAASgX,IACTvQ,EAAOzG,EAAQ,qCACfA,EAAS,QAAQA,OAAY6W,GAAW,QAAYA,GAAW,OAEjE,OAAO7W,EAvBkBiX,IACvB3B,EAAOtQ,MAAM6K,EAAQ,eAAgBrJ,EAAKqE,EAAQqM,MAClD5B,EAAOtQ,MAAM,SA2BR6F,EAAQ4B,UAAY,GAAKjG,EAAKqE,EAAQ6B,cAAgBiK,EAAW,GAAKQ,OA3BlC,MAO3C7B,EAAOtQ,MAAM,SAuBNwB,EAAKqE,EAAQuM,eAAiBT,EAAW9L,EAAQwM,WAAa,GAAKF,IAAiBH,MAvBhD,MAAM,GAL/CJ,EAAWG,EACXnM,EAAKxB,KAMT,SAASyN,EAAW7S,GAClB,MAAMsT,QAAEA,GAAYzM,EACd5F,EAAO4K,EAAQ7L,EAAQ,QAAU,QACvC,OAAOsT,GAAW9Q,EAAK8Q,EAAQrS,KAAU9D,EAASmW,GAAW,EAAIA,KAAa,MAWhF,SAASN,IACP,OAAOxQ,EAAKqE,EAAQ7K,QAAUyF,EAAKiP,GAAM7H,MAAQhC,EAAQ0M,aAQ3D,SAASJ,IACP,MAAMD,EAAM1Q,EAAKqE,EAAQqM,KACzB,MAAO,aAAaA,GAAO,MAAMA,QAAUrM,EAAQsL,SAAW,IAAIe,GAAO,MAAMA,OASjF,SAASM,EAAUlI,EAAOmI,GACxB,MAAMC,EAAQtB,EAAM9G,GACpB,GAAIoI,EAAO,CACT,MAAM1T,EAAQyB,EAAKiS,EAAMzJ,OAAO4B,EAAQ,UAClC/C,EAAOrH,EAAKiP,GAAM7E,EAAQ,SAChC,OAAOtI,GAAIvD,EAAQ8I,IAAS2K,EAAa,EAAIE,KAE/C,OAAO,EAKT,SAASA,IACP,MAAMD,EAAQtB,EAAM,GACpB,OAAOsB,GAASE,WAAW5S,EAAM0S,EAAMzJ,MAAO4B,EAAQ,kBAAoB,EAK5E,MAAO,CACLuB,MAlFF,WACES,IACA1O,EAAKtF,OAAQ,cAAesO,GAASvB,EAAKzH,KAAKhF,KAAMgL,MACrDsB,EAAG,CAACvB,GAAeD,IAAgB4I,GACnCpH,EAAGtB,GAAc2N,IA+EjBe,SA5BF,WACE,OAAOpS,EAAKiP,GAAM7E,EAAQ,WA4B1BiI,UA1BF,SAAmBxI,EAAOmI,GACxB,MAAMC,EAAQtB,EAAM9G,GAAS,GAC7B,OAAOoI,EAAQjS,EAAKiS,EAAMzJ,OAAO4B,EAAQ,WAAa4H,EAAa,EAAIE,KAAY,GAyBnFI,WAdF,WACE,OAAOP,EAAU5N,EAAQ3M,OAAS,GAAG,GAAQua,GAAW,GAAG,IAc3DA,UAAAA,EACAQ,WATF,SAAoBhU,GAClB,OAAO4T,WAAW5S,EAAM6L,EAAOhB,EAAQ,WAAU7L,EAAQ,QAAU,YAAe,KA2kCpFiU,OA/jCF,SAAgBrO,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,IAC9BgH,SAAEA,EAAQ0E,OAAEA,GAAWxC,GACvBjD,QAAEA,GAAYiD,EAAYhD,UAC1BoI,EAAS,GACf,IAAIC,EAMJ,SAAStG,KACHsG,EAAaC,QAkBnB,SAAkB1M,GAChB,MAAM8I,EAASc,EAAOK,MAAMvT,SACtBnF,OAAEA,GAAWuX,EACnB,GAAIvX,EAAQ,CACV,KAAOuX,EAAOvX,OAASyO,GACrB1J,EAAKwS,EAAQA,GAEfxS,EAAKwS,EAAOpS,OAAOsJ,GAAQ8I,EAAOpS,MAAM,EAAGsJ,IAAQ9L,SAAQ,CAAC8X,EAAOpI,KACjE,MAAM+I,EAAS/I,EAAQ5D,EACjBwC,EAOZ,SAAmBxL,EAAK4M,GACtB,MAAMpB,EAAQxL,EAAI4V,WAAU,GAG5B,OAFAzV,EAASqL,EAAOrD,EAAQlI,QAAQuL,OAChCA,EAAM3C,GAAK,GAAG3B,EAAQ8F,KAAKnE,WAAW9C,GAAI6G,EAAQ,KAC3CpB,EAXWqK,CAAUb,EAAMzJ,MAAOqB,GACrC+I,EAASjV,EAAO8K,EAAOsG,EAAO,GAAGvG,OAASlL,EAAO6N,EAAS8D,KAAMxG,GAChElM,EAAKkW,EAAQhK,GACboH,EAAOE,SAAStH,EAAOoB,EAAQ5D,GAAS2M,EAAS,EAAIpb,GAASya,EAAMpI,WA7BtEkJ,CAASL,GACTvN,EAAKzB,KAGT,SAASmB,IACP/K,EAAO2Y,GACPjX,EAAMiX,GAER,SAAS/C,IACP7K,IACAuH,IAEF,SAASvR,IACH6X,EAAaC,KACfxN,EAAK3B,IAyBT,SAASmP,IACP,IAAMF,OAAQO,GAAY5N,EAC1B,GAAKjB,EAAQ8G,GAAGvB,KAET,IAAKsJ,EAAS,CACnB,MAAMC,EAh6BZ,SAAiB1V,EAAQrF,GACvB,GAAI6D,EAAS7D,GAAQ,CACnB,MAAMgb,EAAM9T,EAAO,MAAO,CAAEG,MAAO,UAAUrH,0BAAgCqF,GAC7ErF,EAAQ8H,EAAKkT,GAAK9L,MAClBtN,EAAOoZ,GAET,OAAOhb,EA05Beib,CAAQhI,EAAS8D,KAAM7J,EAAQgF,EAAQ,gBAGzD4I,GAFmBC,GAAapR,EAAK7B,EAAKmL,EAASC,OAAOhB,EAAQ,UAAY6I,IAC9C7N,EAAQgF,EAAQ,eAAiBjG,EAAQ3M,QAAU4N,EAAQsL,UACpEtL,EAAQuK,MAAQvK,EAAQgO,eAAiB,GAAK,EAAI,SALzEJ,EAAU,EAOZ,OAAOA,EAET,MAAO,CACLrH,MA3DF,WACES,IACApH,EAAGxB,GAAekM,GAClB1K,EAAG,CAACvB,GAAeC,IAAe7I,IAyDlCgK,QAAAA,IA8/BFwO,KA1/BF,SAAclP,EAASkJ,EAAajI,GAClC,MAAMJ,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,IAC9BkO,UAAEA,EAASE,WAAEA,EAAUR,UAAEA,EAASK,SAAEA,EAAQE,WAAEA,GAAejF,EAAY4D,QACzE7G,QAAEA,EAAOyE,OAAEA,GAAWxB,EAAYhD,WAClC4E,KAAEA,EAAI7D,MAAEA,GAAUiC,EAAYlC,SACpC,IAAImI,EAOJ,SAASC,IACFC,MACHnG,EAAYoG,OAAOpN,SACnBqN,EAAKvP,EAAQ0F,OACb1E,EAAKvB,KAwBT,SAAS8P,EAAK7J,GACZ8J,EAAUC,EAAW/J,GAAO,IAE9B,SAAS8J,EAAUE,EAAUC,GACtB3P,EAAQ8G,GAAGtB,MACdsF,EAAK1P,MAAMwU,UAAY,YAAY3J,EAAQ,QAAQ0J,EAAcD,EAGrE,SAAcA,GACZ,IAAKP,GAAWnP,EAAQ8G,GAAGvB,IAAO,CAChC,MAAM+C,EAAOoC,EAAOgF,EAAWG,KACzBC,EAAcC,GAAc,EAAOL,IAAapH,EAAO,EACvD0H,EAAcD,GAAc,EAAML,IAAapH,EAAO,GACxDwH,GAAeE,KACjBN,EAAWO,EAAMP,EAAUM,IAG/B,OAAON,EAZuEQ,CAAKR,SAcrF,SAASO,EAAMP,EAAUS,GACvB,MAAMC,EAASV,EAAWW,EAASF,GAC7BG,EAAOnC,IAEb,OADAuB,GAAYnR,GAAK6R,GAAUE,EAAO5S,EAAKC,GAAIyS,GAAUE,GAwBvD,SAASb,EAAW/J,EAAO6K,GACzB,MAAMb,EAAWhF,EAAOkD,EAAUlI,EAAQ,GAa5C,SAAgBA,GACd,MAAM8K,MAAEA,GAAUvP,EAClB,MAAiB,WAAVuP,GAAsBvC,IAAaC,EAAUxI,GAAO,IAAS,GAAK8K,EAAQtC,EAAUxI,IAAU,EAftD+K,CAAO/K,IACtD,OAAO6K,EAMT,SAAcb,GACRzO,EAAQyP,WAAa1Q,EAAQ8G,GAAGxB,MAClCoK,EAAWtR,GAAMsR,EAAU,EAAGhF,EAAOyD,IAAeF,OAEtD,OAAOyB,EAVWiB,CAAKjB,GAAYA,EAErC,SAASG,IACP,MAAM3M,EAAO+C,EAAQ,QACrB,OAAOpK,EAAKiP,GAAM5H,GAAQrH,EAAKoL,GAAO/D,GAAQwH,EAAO0D,GAAW,IAYlE,SAASiC,EAAS7S,GAChB,OAAOiS,EAAWjS,EAAM0L,EAAYkD,WAAWwE,SAAW,IAAK3P,EAAQyP,WAEzE,SAASrB,IACP,QAASF,EAEX,SAASY,EAAcvS,EAAKkS,GAC1BA,EAAW7X,EAAY6X,GAAYG,IAAgBH,EACnD,MAAMI,GAAsB,IAARtS,GAAgBkN,EAAOgF,GAAYhF,EAAO2F,GAAS,IACjEL,GAAsB,IAARxS,GAAiBkN,EAAOgF,GAAYhF,EAAO2F,GAAS,IACxE,OAAOP,GAAeE,EAExB,MAAO,CACLxI,MA/GF,WACE3G,EAAG,CAAC9B,GAAeS,GAAeF,GAAeD,IAAgB+P,IA+GjE1O,QA7GF,WACE/F,EAAgBmQ,EAAM,UA6GtB+F,KApGF,SAAcpK,EAAMf,EAAOjB,EAAMvH,GAC/B,IAAKmS,IAAU,CACb,MAAMyB,IAAEA,GAAQ9Q,EAAQ8J,MAClB4F,EAAWG,IACXkB,EAAUtK,IAASf,EACzByJ,EAAU4B,GAAW9P,EAAQ+P,kBAC7BF,EAzpCS,GA0pCT9P,EAAK/B,GAAYyG,EAAOjB,EAAMgC,GAC9ByC,EAAY+H,WAAWvY,MAAM+N,GAAM,KACjCsK,GAAWxB,EAAK7J,GAChByJ,GAAU,EACV2B,EA/pCK,GAgqCL9P,EAAK9B,GAAawG,EAAOjB,EAAMgC,GACL,SAAtBxF,EAAQyP,WAAwBjK,IAAShC,GAAQiL,IAAaG,IAChE3G,EAAYkD,WAAW8E,GAAGzK,EAAOhC,EAAO,IAAM,KAAK,EAAOvH,GAE1DA,GAAYA,SAqFlBqS,KAAAA,EACAC,UAAAA,EACAS,MAAAA,EACA/N,OA1DF,WACEiN,GAAU,EACVK,EAAUK,KACV3G,EAAY+H,WAAW/O,UAwDvBmK,QAtDF,SAAiBqD,GACf,MAAMhE,EAASxC,EAAYwC,OAAOK,MAClC,IAAIrG,EAAQ,EACRyL,EAAcC,EAAAA,EAClB,IAAK,IAAIhe,EAAI,EAAGA,EAAIsY,EAAOrY,OAAQD,IAAK,CACtC,MAAMuS,EAAa+F,EAAOtY,GAAGsS,MACvB2C,EAAW1K,GAAI8R,EAAW9J,GAAY,GAAQ+J,GACpD,KAAIrH,GAAY8I,GAId,MAHAA,EAAc9I,EACd3C,EAAQC,EAKZ,OAAOD,GAyCP+J,WAAAA,EACAI,YAAAA,EACAQ,SAAAA,EACAhB,OAAAA,EACAU,cAAAA,IA03BF3D,WAt3BF,SAAoBpM,EAASkJ,EAAajI,GACxC,MAAMJ,GAAEA,GAAOd,GAAeC,IACxBkP,KAAEA,GAAShG,GACX2G,YAAEA,EAAWQ,SAAEA,GAAanB,GAC5BrC,SAAEA,EAAQD,UAAEA,GAAc1D,EAAYwC,OACtC2F,EAASrR,EAAQ8G,GAAGvB,IACpB+L,EAAUtR,EAAQ8G,GAAGxB,IAC3B,IAEIiM,EACAC,EACAjF,EAJA5F,EAAY1F,EAAQvI,OAAS,EAC7B+Y,EAAY9K,EAQhB,SAASsB,IACPsJ,EAAa3E,GAAU,GACvB4E,EAAUvQ,EAAQuQ,QAClBjF,EAAUtL,EAAQsL,QAClB5F,EAAYvI,GAAMuI,EAAW,EAAG4K,EAAa,GAc/C,SAASG,EAAOC,EAAaC,EAAUC,EAAMrP,EAAUtF,GACrD,MAAMuJ,EAAOmL,EAAWD,EAAcG,EAAOH,GAC7CzI,EAAYoG,OAAOoC,OAAOE,GAAYC,EAAO3C,EAAKO,WAAWhJ,GAAM,GAAQkL,EAAanP,GAAU,KAChGuP,EAAS7C,EAAK7C,QAAQ6C,EAAKW,gBAC3B3S,GAAYA,OAuBhB,SAAS8U,EAAQL,GACf,OAAOM,GAAY,EAAON,GAE5B,SAASO,EAAQP,GACf,OAAOM,GAAY,EAAMN,GAE3B,SAASM,EAAYxN,EAAMkN,GACzB,MAAM7T,EAAS0T,IAAYlF,IAAa,EAAIC,GACtC9F,EAAO0L,EAAiBxL,EAAY7I,GAAU2G,GAAQ,EAAI,GAAIkC,GACpE,OAAc,IAAVF,IAAe6K,IAhkCKjT,EAikCEwR,IAjkCCvR,EAikCc+R,GAAU5L,GAjkCrB2N,EAikC4B,EAhkCrDzU,GAAIU,EAAIC,GAAK8T,GAokCXT,EAAclL,EAAOyJ,EAAKzJ,GAHtBhC,EAAO,EAAImM,IAlkC1B,IAA4BvS,EAAGC,EAAG8T,EAukChC,SAASD,EAAiB1L,EAAM2B,EAAMiK,GACpC,GAAIxF,IAAY,CACd,MAAMlU,EAAMiY,IACRnK,EAAO,GAAKA,EAAO9N,EAEnB8N,EADE5I,GAAQ,EAAG4I,EAAM2B,GAAM,IAASvK,GAAQlF,EAAKyP,EAAM3B,GAAM,GACpD4F,EAAQiG,EAAO7L,IAElB4K,EACKG,EAAU/K,EAAOA,EAAO,IAAM8K,EAAahF,GAAWA,GAAWgF,EAC/DtQ,EAAQoB,OACVoE,EAAO,EAAI9N,EAAM,GAEhB,EAIP0Z,GAAe5L,IAAS2B,IAC3B3B,EAAO+K,EAAU/K,EAAO4F,EAAQiG,EAAOlK,IAAS3B,EAAO2B,GAAQ,EAAI,UAIvE3B,GAAQ,EAEV,OAAOA,EAET,SAASmK,IACP,IAAIjY,EAAM4Y,EAAahF,EAIvB,OAHID,KAAc+E,GAAUG,KAC1B7Y,EAAM4Y,EAAa,GAEd/T,EAAI7E,EAAK,GAElB,SAASuX,EAAKxK,GACZ,OAAI2L,EACKxE,IAAanH,EAAQ6L,GAAc7L,EAAQ,EAAI6L,EAAa,IAAM,EAEpE7L,EAET,SAAS2G,EAAQzH,GACf,OAAOxG,GAAMkO,IAAa1H,EAAO2H,EAAU3H,EAAM,EAAGgM,KAEtD,SAAS0B,EAAO5M,GAKd,OAJK4G,MACH5G,EAAQ7H,GAAQ6H,EAAO6L,EAAahF,EAASgF,EAAa,GAAKA,EAAa,EAAI7L,EAChFA,EAAQjI,EAAMiI,EAAQ6G,IAEjB7G,EAET,SAASoM,EAAOH,GACd,MAAMY,EAAUrD,EAAK7C,QAAQsF,GAC7B,OAAOL,EAAUlT,GAAMmU,EAAS,EAAG3B,KAAY2B,EAEjD,SAASR,EAASrM,GACZA,IAAUiB,IACZ8K,EAAY9K,EACZA,EAAYjB,GAMhB,SAAS4G,IACP,OAAQzU,EAAYoJ,EAAQuP,QAAUvP,EAAQ8E,aAEhD,MAAO,CACLyB,MAlIF,WACES,IACApH,EAAG,CAACvB,GAAeD,IAAgB4I,EAAMwD,IAiIzCyF,GAzHF,SAAYsB,EAASC,EAAgBvV,GACnC,MAAMuJ,EAkBR,SAAe+L,GACb,IAAI9M,EAAQiB,EACZ,GAAI/O,EAAS4a,GAAU,CACrB,MAAM,CAAGE,EAAW5U,GAAU0U,EAAQG,MAAM,oBAAsB,GAChD,MAAdD,GAAmC,MAAdA,EACvBhN,EAAQyM,EAAiBxL,IAAa,GAAG+L,KAAa5U,GAAU,IAAK6I,GAAW,GACzD,MAAd+L,EACThN,EAAQ5H,EAASuO,GAASvO,GAAUkU,GAAQ,GACrB,MAAdU,IACThN,EAAQwM,GAAQ,SAIhBxM,EADE2L,EACMjT,GAAMoU,GAAUjG,EAASgF,EAAahF,EAAU,GAEhDnO,GAAMoU,EAAS,EAAG5B,KAG9B,OAAOlL,EApCMwE,CAAMsI,GACnB,GAAIvR,EAAQ2R,UACVlB,EAAOjL,GAAM,GAAM,EAAMxF,EAAQ4R,MAAO3V,OACnC,CACL,MAAMwI,EAAQwK,EAAKzJ,GACff,GAAS,IAAMwJ,EAAKG,WAAaoD,GAAkB/M,IAAUiB,KAC/DoL,EAASrM,GACTwJ,EAAK2B,KAAKpK,EAAMf,EAAO+L,EAAWvU,MAkHtCwU,OAAAA,EACAM,QAAAA,EACAE,QAAAA,EACAtB,OAAAA,EACAmB,SAAAA,EACAe,SAdF,SAAkBrO,GAChB,OAAOA,EAAOgN,EAAY9K,GAc1B0F,QAAAA,EACAiG,OAAAA,EACAR,OAAAA,EACAxF,SAAAA,IA8tBFyG,OAttBF,SAAgB/S,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,IACpCjH,QAAEA,EAAO4O,KAAEA,GAAS1G,GACpB+F,SAAEA,EAAQoF,WAAEA,GAAelD,EACjC,IAGI8J,EAHAC,EAAUjM,EAASzC,OACnBE,EAAOuC,EAASvC,KAChBC,EAAOsC,EAAStC,KAEpB,MAAMH,EAAS,GAKf,SAAS0D,IAMP,GALIhH,EAAQsD,SACLE,GAASC,IAqChBuO,EAAUhY,EAAO,MAAOlC,EAAQwL,QAChCE,EAAOyO,GAAY,GACnBxO,EAAOwO,GAAY,GACnBF,GAAU,EACV7Z,EAAO8Z,EAAS,CAACxO,EAAMC,IACvBlL,EAAOyZ,EAASjZ,EAAyB,WAAnBiH,EAAQsD,QAAuByC,EAAS6D,QAAU7K,EAAQ8F,SAtC5ErB,GAAQC,EACV,GAAKH,EAAOE,KASVjJ,EAAQyX,GAA4B,IAAnBhS,EAAQsD,OAAmB,OAAS,QATrC,CAChB,MAAM5C,GAAEA,GAAOqF,EAASC,MACxBnM,EAAa2J,EAAMM,GAAepD,GAClC7G,EAAa4J,EAAMK,GAAepD,GAClC4C,EAAOE,KAAOA,EACdF,EAAOG,KAAOA,EAgBpB,WACE,MAAMwM,GAAEA,GAAO9E,EACfvL,EAAG,CAAC9B,GAAeG,GAAaI,GAAeD,GAAeM,IAAiBoC,GAC/ExI,EAAKmL,EAAM,SAAS,KAClBwM,EAAG,KAAK,MAEV3X,EAAKkL,EAAM,SAAS,KAClByM,EAAG,KAAK,MAtBNiC,GACAnS,EAvkCqB,iBAukCMyD,EAAMC,IAgCvC,SAASwO,EAAYE,GAEnB,OAAOrX,EADO,kBAAkBhD,EAAQyL,SAAS4O,EAAQra,EAAQ0L,KAAO1L,EAAQ2L,mHAA8HzD,EAAQoS,WA/D7M,+FAkEX,SAAStR,IACP,MAAM2D,EAAQ1F,EAAQ0F,MAChB+L,EAAYrF,EAAW8F,UACvBoB,EAAYlH,EAAW4F,UACvBuB,EAAY9B,GAAa,GAAK/L,EAAQ+L,EAAY9J,EAAK6L,KAAO7L,EAAKlD,KACnEgP,EAAYH,GAAa,GAAK5N,EAAQ4N,EAAY3L,EAAK+L,MAAQ/L,EAAKjD,KAC1ED,EAAKkP,SAAWlC,EAAY,EAC5B/M,EAAKiP,SAAWL,EAAY,EAC5BxY,EAAa2J,EAAMQ,GAAYsO,GAC/BzY,EAAa4J,EAAMO,GAAYwO,GAC/BzS,EApnCyB,iBAonCEyD,EAAMC,EAAM+M,EAAW6B,GAEpD,MAAO,CACL/O,OAAAA,EACAiD,MApEF,WACES,IACApH,EAAGvB,GAAe2I,IAmElBvH,QA7CF,WACMsS,EACFrd,EAAOsd,IAEPtY,EAAgB8J,EAAMY,IACtB1K,EAAgB+J,EAAMW,QAirB1BuO,SAroBF,SAAkB5T,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,IACpCgH,SAAEA,GAAakC,EACf9H,EAAWD,GAAgBF,EAAQG,SAAUpB,EAAQkR,GAAG3X,KAAKyG,EAAS,MAgE5E,SAAgB4B,GACd,MAAMqJ,IAAEA,GAAQjE,EACZiE,GACF7P,EAAM6P,EAAK,QAAmB,IAAPrJ,EAAH,KAEtBZ,EAhsC2B,mBAgsCEY,OApEzBU,SAAEA,GAAalB,EACrB,IAAIyS,EACAC,EACAjS,EAYJ,SAASkS,EAAWC,GAClB,MAAM3Y,EAAO2Y,EAAW,QAAU,OAC5BC,EAASjN,EAAS3L,GACpB4Y,IACFnZ,EAAamZ,EAAQlP,GAAeiC,EAASC,MAAMtF,IACnD7G,EAAamZ,EAAQhP,GAAYhE,EAAQ0G,KAAKtM,IAC9C9B,EAAK0a,EAAQ,QAASD,EAAW/R,EAAQiJ,IAmB7C,SAASA,IACH5I,KAAc4G,EAAYwC,OAAOmB,aACnCzL,EAAS1I,OAAOuI,EAAQiT,eACxBJ,EAAUD,EAAUhS,GAAS,EAC7Bb,EAzqCsB,kBA4qC1B,SAASiB,EAAMkS,GAAS,GACjB7R,MACHlB,EAASa,QACTjB,EA7qCuB,mBA+qCzBa,EAASsS,EAEX,SAASC,IACFvS,IACEgS,GAAYC,EAGf7R,GAAM,GAFNiJ,KAaN,MAAO,CACL1D,MAnEF,WACE,MAAMuD,SAAEA,GAAa9J,EACjB8J,IACFgJ,GAAW,GACXA,GAAW,GAgBf,WACE,MAAMjO,KAAEA,GAASkB,EACb/F,EAAQoT,cACV9a,EAAKuM,EAAM,yBAA0B1J,IACnCyX,EAAqB,eAAXzX,EAAE5G,KACZ4e,OAGAnT,EAAQqT,cACV/a,EAAKuM,EAAM,oBAAqB1J,IAC9B0X,EAAqB,YAAX1X,EAAE5G,KACZ4e,OAGJvT,EAAG,CAAC5B,GAAYS,GAAcL,IAAgB+B,EAASiB,QA7BrD8Q,GACiB,UAAbpI,GACFG,MA6DJxK,QAASU,EAASc,OAClBgJ,KAAAA,EACAjJ,MAAAA,EACAK,SAAAA,IAujBFiS,MAnjBF,SAAevU,EAASkJ,EAAajI,GACnC,MAAMJ,GAAEA,GAAOd,GAAeC,GAY9B,SAASyC,EAAM+R,GACbtL,EAAYwC,OAAO1V,SAAS8X,IAC1B,MAAMpB,EAAM1S,EAAM8T,EAAMzH,WAAayH,EAAMzJ,MAAO,OAC9CqI,GAAOA,EAAI+H,KACbC,EAAOF,EAAO9H,EAAKoB,MAIzB,SAAS4G,EAAOF,EAAO9H,EAAKoB,GAC1BA,EAAM1S,MAAM,aAAcoZ,EAAQ,+BAA+B9H,EAAI+H,QAAU,IAAI,GACnFjZ,EAAQkR,EAAK8H,EAAQ,OAAS,IAEhC,MAAO,CACLhN,MAxBF,WACMvG,EAAQuT,QACV3T,EAAGf,IAAuB,CAAC4M,EAAKoB,KAC9B4G,GAAO,EAAMhI,EAAKoB,MAEpBjN,EAAG,CAAC9B,GAAeO,GAAeD,IAAgBoD,EAAMlJ,KAAK,MAAM,MAoBrEmH,QAjBF,WACE+B,GAAM,MAyiBR6M,OA/gBF,SAAgBtP,EAASkJ,EAAajI,GACpC,MAAMJ,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,IAC9BkP,KAAEA,GAAShG,GACX2G,YAAEA,EAAWQ,SAAEA,EAAQN,cAAEA,GAAkBb,EACjD,IAAI9N,EACAuT,EAKJ,SAASjD,EAAOC,EAAanP,EAAUtF,EAAU0X,GAC/C,MAAMlc,EAAQmX,IACd,IAAIgF,EAAW,EA+BjB,IAAyBxM,EA9BvB7F,EAAWA,IA8BY6F,EA9BgB1K,GAAIgU,EAAcjZ,GA+BlD8E,EAAI6K,EA/CO,IACD,MAgBjBsM,EAAiBzX,EACjB4X,IACA1T,EAAWD,GAAgBqB,EAAUuS,GAAanT,IAChD,MAAM8N,EAAWG,IAEXvH,GADS5P,GAASiZ,EAAcjZ,GAuC1C,SAAgBsc,GACd,MAAMC,WAAEA,GAAehU,EACvB,OAAOgU,EAAaA,EAAWD,GAAK,EAAIpX,KAAKsX,IAAI,EAAIF,EAAG,GAzCPG,CAAOvT,GAC/BiO,KAAiBgF,EAY5C,IAAgB1E,EAXZjB,EAAKM,UAAUE,EAAWpH,GACtBtI,EAAQ8G,GAAGxB,MAAWsP,GAAsB7E,MAC9C8E,GA1BgB,GA2BZlX,GAAI2K,GA7Bc,KAqCZ6H,EAPDJ,GAAc,GAQ3B2B,EAAOrB,GAAUF,GArCG,IAqC0B,MAAM,OALjD,GACHnP,EAAKtB,IACL0B,EAAS1I,QAKX,SAASqc,IACP,MAAMrF,EAAWG,IACXnK,EAAQwJ,EAAK7C,QAAQqD,GACtB7R,GAAQ6H,EAAO,EAAG1F,EAAQ3M,OAAS,IACtC6b,EAAKM,UAAUN,EAAKe,MAAMP,EAAUhK,EAAQ,IAAI,GAElDiP,GAAkBA,IAClB3T,EAAKrB,IAKP,SAASmV,IACH1T,GACFA,EAASc,SAGb,SAASA,IACHd,IAAaA,EAASkB,aACxBwS,IACAC,KAOJ,MAAO,CACLvN,MAxDF,WACE3G,EAAG5B,GAAY6V,GACfjU,EAAG,CAACvB,GAAeD,IAAgB6C,IAuDnCxB,QAASoU,EACTpD,OAAAA,EACAxP,OAAAA,IA+cFkT,KArcF,SAAcpV,EAASkJ,EAAajI,GAClC,MAAMJ,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,EAAI4G,OAAEA,GAAWJ,GAAeC,IAC5CkP,KAAEA,EAAII,OAAEA,EAAMlD,WAAEA,GAAelD,GAC/BjC,MAAEA,GAAUiC,EAAYlC,UACxBf,QAAEA,EAAOyE,OAAEA,GAAWxB,EAAYhD,WAClC2J,YAAEA,EAAWE,cAAEA,GAAkBb,EACjCmG,EAAkB,CAAEC,SAAS,EAAOC,SAAS,GACnD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAnC,EACAzgB,EAHA6iB,GAAc,EAYlB,SAAS9N,IACP,MAAMuD,KAAEA,GAASvK,EACjB+U,GAASxK,GACToK,EAAkB,SAATpK,EAEX,SAASyK,EAAc7Z,GACrB,IAAKuX,EAAU,CACb,MAAMuC,OAAEA,GAAWjV,EACbkV,EAAUC,EAAaha,MACR8Z,GAAUpe,EAAcsE,EAAElJ,UAAYiB,EAAQiI,EAAElJ,OAAQgjB,MACzDC,GAAY/Z,EAAE6X,SAC3B/E,EAAKG,SAWRlT,EAAQC,GAAG,IAVXlJ,EAASijB,EAAUlP,EAAQhT,OAC3ByhB,EAAgB,KAChBC,EAAY,KACZG,GAAiB,EACjBvc,EAAKrG,EAAQqV,GAAqB8N,EAAehB,GACjD9b,EAAKrG,EAAQsV,GAAmB8N,EAAajB,GAC7CnG,EAAKhN,SACLoN,EAAOpN,SACPqU,EAAKna,MAOb,SAASia,EAAcja,GAKrB,GAJKuZ,GACH3U,EA73Ca,QA+3Cf2U,EAAYvZ,EACRA,EAAEoa,WAAY,CAChB,MAAMlO,EAAOmO,EAAQra,GAAKqa,EAAQhB,GAClC,GAAII,EAAU,CACZ3G,EAAKM,UAAUgG,EA2ErB,SAAmBlN,GACjB,OAAOA,GAAQyN,GAAe/V,EAAQ8G,GAAGxB,IA9I5B,EA8IgD,GA5E3BoR,CAAUpO,IACxC,MAAMqO,EAAUC,EAAOxa,GAAKwa,EAAOnB,GAlEtB,IAmEPoB,EAAWd,KAAiBA,EAAchG,MAC5C4G,GAAWE,IACbN,EAAKna,GAEP4E,EAx4Ce,YAy4Cf8U,GAAiB,EACjB3Z,EAAQC,OACH,CACL,IAAM0a,iBAAkBC,GAAe9V,EACvC8V,EAAaxf,EAASwf,GAAcA,EAAa,CAAEC,MAAO,EAAGC,OAAQF,GAAc,IACnFlB,EAAWlY,GAAI2K,IAAS8N,EAAaha,GAAK2a,EAAWE,MAAQF,EAAWC,OACpEE,KACF/a,EAAQC,KAKhB,SAASka,EAAYla,GAGnB,GAFA+D,EAAOjN,EAAQqV,GAAqB8N,GACpClW,EAAOjN,EAAQsV,GAAmB8N,GAC9BX,EAAW,CACb,GAAIE,GAAYzZ,EAAEoa,YAAcU,IAAqB,CACnD,MAAMC,EA8BZ,SAAyB/a,GACvB,GAAI4D,EAAQ8G,GAAGvB,MAAUwQ,EAAa,CACpC,MAAMqB,EAAO3B,IAAcE,GAAaD,GAAiBD,EACnD4B,EAAYZ,EAAQd,GAAac,EAAQW,GACzCE,EAAWV,EAAOxa,GAAKwa,EAAOQ,GAC9BG,EAAUX,EAAOxa,GAAKwa,EAAOjB,GA5HpB,IA6Hf,GAAI2B,GAAYC,EACd,OAAOF,EAAYC,EAGvB,OAAO,EAxCcE,CAAgBpb,GAC3BuV,EAyCZ,SAA4BwF,GAC1B,OAAOtH,IAAgBtR,GAAK4Y,GAAY5Z,EAAII,GAAIwZ,IAAalW,EAAQwW,YAAc,KAAM7B,EAASxE,EAAAA,EAAWlI,EAAY4D,OAAOmB,YAAchN,EAAQgO,eAAiB,IA1C/IyI,CAAmBP,GACnCvB,EACFxJ,EAAWsF,OAAOC,GACT3R,EAAQ8G,GAAGtB,IACpB4G,EAAW8E,GAAGlR,EAAQ0F,MAAQgF,EAAOnM,GAAK4Y,KAE1C/K,EAAW8E,GAAG9E,EAAW0F,OAAOH,IAAc,GAEhDxV,EAAQC,GAEV4E,EAp6CgB,WAs6ClB6U,GAAW,EAEb,SAASU,EAAKna,GACZsZ,EAAgBD,EAChBA,EAAYrZ,EACZoZ,EAAe3F,IAEjB,SAAS8H,EAAQvb,IACVuX,GAAYmC,GACf3Z,EAAQC,GAAG,GAGf,SAAS8a,IAGP,OAFcvZ,GAAI8Y,EAAQd,GAAac,EAAQhB,IACjC9X,GAAI8Y,EAAQd,GAAW,GAAQc,EAAQhB,GAAW,IAkBlE,SAASgB,EAAQra,EAAGwb,GAClB,OAAQxB,EAAaha,GAAKA,EAAEyb,QAAQ,GAAKzb,GAAG,OAAO6J,EAAQ2R,EAAa,IAAM,QAEhF,SAAShB,EAAOxa,GACd,OAAOA,EAAE0b,UAKX,SAAS1B,EAAaha,GACpB,MAA6B,oBAAf2b,YAA8B3b,aAAa2b,WAK3D,SAAS/B,EAAQjiB,GACf4f,EAAW5f,EAEb,MAAO,CACLyT,MAnIF,WACEjO,EAAK0N,EAAOsB,GAAqBpL,EAAMkY,GACvC9b,EAAK0N,EAAOuB,GAAmBrL,EAAMkY,GACrC9b,EAAK0N,EAxBmB,uBAwBSgP,EAAeZ,GAChD9b,EAAK0N,EAAO,QAAS0Q,EAAS,CAAEpC,SAAS,IACzChc,EAAK0N,EAAO,YAAa9K,GACzB0E,EAAG,CAAC9B,GAAeO,IAAgB2I,IA8HnC+N,QAAAA,EACAgC,WATF,WACE,OAAOnC,KAwTToC,SA3SF,SAAkBjY,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,EAAEtH,KAAEA,EAAI4G,OAAEA,GAAWJ,GAAeC,IACtC8F,KAAEA,GAASoD,EAAYlC,UACvBf,QAAEA,GAAYiD,EAAYhD,UAChC,IAAIhT,EAQJ,SAAS+U,IACP,MAAMiQ,SAAEA,EAAW,UAAajX,EAC5BiX,IACe,YAAbA,GACFhlB,EAAS4S,EACThL,EAAagL,EAAMX,GAAW,IAE9BjS,EAASe,OAEXsF,EAAKrG,EAAQ,UAAWilB,IAG5B,SAASzX,IACPP,EAAOjN,EAAQ,WACX4E,EAAc5E,IAChByH,EAAgBzH,EAAQiS,IAG5B,SAASgT,EAAU/b,GACjB,MAAMxI,IAAEA,GAAQwI,EACVgc,EAAgB/iB,EAASoT,GAAe7U,GAAO,QAAQA,IAAQA,EACjEwkB,IAAkBnS,EAAQ,aAC5BjG,EAAQkR,GAAG,KACFkH,IAAkBnS,EAAQ,eACnCjG,EAAQkR,GAAG,KAGf,MAAO,CACL1J,MAnCF,WACES,IACApH,EAAGvB,IAAe,KAChBoB,IACAuH,QAgCFvH,QAAAA,IAmQF2X,SA3PF,SAAkBrY,EAASkJ,EAAajI,GACtC,MAAMJ,GAAEA,EAAEE,IAAEA,EAAGxH,KAAEA,EAAIyH,KAAEA,GAASjB,GAAeC,GACzCsY,EAAoC,eAArBrX,EAAQsX,SAC7B,IAAI9L,EAAS,GACT/G,EAAQ,EA6BZ,SAAShF,IACPgF,EAAQ,EACR+G,EAAS,GAEX,SAAS/V,IACP+V,EAASA,EAAO1S,QAAQ4G,IACtB,MAAM0H,EAAWpH,EAAQsL,UAAYtL,EAAQuX,cAAgB,GAAK,GAAK,EACvE,OAAI7X,EAAK8X,OAAOtQ,SAASnI,EAAQ0F,MAAO2C,IAC/BqQ,EAAK/X,MAIX8L,EAAOpZ,QACV0N,EAAI7B,IAGR,SAASwZ,EAAK/X,GACZ,MAAMgY,KAAEA,GAAShY,EACjB1H,EAAS0H,EAAK8X,OAAOpU,MAAOH,IAC5B3K,EAAKof,EAAM,cAAevc,KAU5B,SAAgBuE,EAAMiY,GACpB,MAAMH,OAAEA,GAAW9X,EACnBhE,EAAY8b,EAAOpU,MAAOH,IACrB0U,IACHjjB,EAAOgL,EAAKkY,UACZrd,EAAQmF,EAAKgY,KAAM,IACnB3X,EAAKlB,GAAuBa,EAAKgY,KAAMF,GACvCzX,EAAKzB,KAEH+Y,GACFQ,IAnBAC,CAAOpY,EAAiB,UAAXvE,EAAE5G,SAEjB,CAAC,MAAO,UAAUQ,SAASgD,IACrB2H,EAAK3H,KACP8B,EAAa6d,EAAM3f,EAAM2H,EAAK3H,IAC9B2B,EAAgBge,EAAe,QAAT3f,EAAiB0P,GAAqBC,QAiBlE,SAASmQ,IACHpT,EAAQ+G,EAAOpZ,QACjBqlB,EAAKjM,EAAO/G,MAGhB,MAAO,CACL8B,MA5EF,WACMvG,EAAQsX,WACV1X,EAAG,CAAC9B,GAAeM,KAAgB,KACjCqB,IASJwI,EAAYwC,OAAO1V,SAASyiB,IAC1B/b,EAAS+b,EAAOpU,MAAOuE,IAAgB5S,SAAS2iB,IAC9C,MAAMlE,EAAM1f,EAAa4jB,EAAMjQ,IACzBsQ,EAASjkB,EAAa4jB,EAAMhQ,IAClC,GAAI8L,IAAQkE,EAAKlE,KAAOuE,IAAWL,EAAKK,OAAQ,CAC9C,MAAMH,EAAW5d,EAAO,OAAQgG,EAAQlI,QAAQ8L,QAAS8T,EAAKM,eAC9Dne,EAAa+d,EAAU/T,GAAM,gBAC7B2H,EAAOrU,KAAK,CAAEugB,KAAAA,EAAMF,OAAAA,EAAQhE,IAAAA,EAAKuE,OAAAA,EAAQH,SAAAA,KACxCF,EAAKlE,KAAOjZ,EAAQmd,EAAM,eAI7BL,GACFQ,OAnBKR,GACHzX,EAAG,CAAC9B,GAAeM,GAAeH,IAAcxI,KAsEpDgK,QAAAA,IA0KFwY,WAtKF,SAAoBlZ,EAASkJ,EAAajI,GACxC,MAAMJ,GAAEA,EAAEG,KAAEA,EAAIzH,KAAEA,EAAI4G,OAAEA,GAAWJ,GAAeC,IAC5C0L,OAAEA,EAAM1E,SAAEA,EAAQoF,WAAEA,GAAelD,GACnCoD,SAAEA,EAAQwG,SAAEA,GAAa1G,EACzB/T,EAAQ,GACd,IAAIyS,EAMJ,SAAS7C,IACPvH,IACIO,EAAQ0D,YAAc+G,EAAOmB,cAgBnC,WACE,MAAMxZ,OAAEA,GAAW2M,GACbjH,QAAEA,EAAO4O,KAAEA,EAAI4E,QAAEA,GAAYtL,EAC7B7H,EAAgC,WAAvB6H,EAAQ0D,YAA2BqC,EAAS6D,QAAU7D,EAASlB,KACxEtI,EAAM8O,IAAajZ,EAASqK,EAAKrK,EAASkZ,GAChDzB,EAAO7P,EAAO,KAAMlC,EAAQ4L,WAAYvL,GACxC,IAAK,IAAIhG,EAAI,EAAGA,EAAIoK,EAAKpK,IAAK,CAC5B,MAAM+lB,EAAKle,EAAO,KAAM,KAAM6P,GACxBmJ,EAAShZ,EAAO,SAAU,CAAEme,MAAOrgB,EAAQ6L,KAAMpP,KAAM,UAAY2jB,GACnEtR,EAAW6D,EAAOS,MAAM/Y,GAAGqB,KAAKqZ,GAAUA,EAAMzJ,MAAM1C,KACtD0X,GAAQ/M,KAAcC,EAAU,EAAI5E,EAAK2R,MAAQ3R,EAAKC,OAC5DrO,EAAK0a,EAAQ,QAAS0D,EAAQpe,KAAK,KAAMnG,IACzC0H,EAAamZ,EAAQlP,GAAe8C,EAASG,KAAK,MAClDlN,EAAamZ,EAAQhP,GAAYzG,GAAO6a,EAAMjmB,EAAI,IAClDiF,EAAMD,KAAK,CAAE+gB,GAAAA,EAAIlF,OAAAA,EAAQrP,KAAMxR,KA7B/BmmB,GACAvY,EAhnD2B,qBAgnDI,CAAE8J,KAAAA,EAAMzS,MAAAA,GAASmU,EAAMxM,EAAQ0F,QAC9D3D,KAGJ,SAASrB,IACHoK,IACFnV,EAAOmV,GACPzS,EAAMrC,SAASwT,IACbrJ,EAAOqJ,EAAKyK,OAAQ,YAEtB5c,EAAMgB,GACNyS,EAAO,MAoBX,SAAS6M,EAAQ/S,GACfwH,EAAW8E,GAAG,IAAItM,KAAQ,GAAM,KAC9B,MAAMkJ,EAAQpC,EAAOc,MAAMJ,EAAWC,QAAQzH,IAl1DpD,IAAe9L,EAm1DTgV,KAn1DShV,EAm1DMgV,EAAMzJ,OAl1DV,WAAKvL,EAAe,aAAOA,EAAI0X,MAAM,CAAEgJ,eAAe,QAq1DrE,SAAShN,EAAM9G,GACb,OAAOrN,EAAM+T,EAAWkG,OAAO5M,IAEjC,SAAS3D,IACP,MAAM0C,EAAO+H,EAAMsG,GAAS,IACtB2G,EAAOjN,EAAMsG,KACfrO,IACF9H,EAAY8H,EAAKwP,OAAQnQ,IACzBnJ,EAAgB8J,EAAKwP,OAAQjP,KAE3ByU,IACFxgB,EAASwgB,EAAKxF,OAAQnQ,IACtBhJ,EAAa2e,EAAKxF,OAAQjP,IAAc,IAE1ChE,EAlqD6B,qBAkqDE,CAAE8J,KAAAA,EAAMzS,MAAAA,GAASoM,EAAMgV,GAExD,MAAO,CACLphB,MAAAA,EACAmP,MAhEF,WACES,IACApH,EAAG,CAACvB,GAAeD,IAAgB4I,GACnCpH,EAAG,CAAC5B,GAAYU,IAAiBoC,IA8DjCrB,QAAAA,EACA8L,MAAAA,IA+FFkN,KA1FF,SAAc1Z,EAASkJ,EAAajI,GAClC,MAAM6G,QAAEA,GAAY9H,GACd8K,KAAEA,GAAS5B,EAAYlC,SAiC7B,SAASjF,IACPjH,EAAagQ,EAAM1F,GAAkBnE,EAAQwJ,YAAc/H,GAAM,aAAe,MAElF,SAASiV,EAAQ7J,GACf9N,EAAQkR,GAAGpD,EAAMpI,OAEnB,SAASyS,EAAUrK,EAAO1R,GACpB/G,EAASwT,GAAczM,EAAExI,OAC3B+jB,EAAQ7J,GACR3R,EAAQC,IAGZ,MAAO,CACLoL,MA7CF,WACMvG,EAAQ8E,aAuBd,WACE,MAAMlF,GAAEA,EAAEG,KAAEA,GAASjB,GAAeC,GACpCa,EAAG1B,GAAawY,GAChB9W,EAAGzB,GAAqB+Y,GACxBtX,EAAG,CAAC9B,GAAeO,IAAgByC,GACnCjH,EAAagQ,EAAMhG,GAAM,QACzB9D,EAAKnB,GAA0BG,EAAQ8H,SA5BrC6R,GAQJ,WACE,MAAMC,EAAY,GAClB9R,EAAQ+R,OAAO7Z,GAAShK,SAAQ,CAAC+R,EAAQrC,EAAOoU,KAC9C/Z,GAAegI,GAAQlH,GAAG5B,IAAY,CAAC8a,EAAQtV,EAAMgC,KACnDqT,EAAU9jB,SAASlD,IACbA,IAAaiV,GAAW1S,EAASukB,EAAW7R,KAC9C6R,EAAUxhB,KAAKtF,GACfA,EAASoe,GAAGpe,EAASgU,GAAGvB,IAAQkB,EAAOsT,OAG3C1iB,EAAMuiB,SAhBRI,IA0CFtZ,QAvCF,WACE/F,EAAgBmQ,EAAMzF,OAgFxB4U,MAtCF,SAAeja,EAASkJ,EAAajI,GACnC,MAAM1H,KAAEA,GAASwG,GAAeC,GAMhC,SAASka,EAAQ9d,GACf,MAAM+d,OAAEA,GAAW/d,EACf+d,IACFna,EAAQkR,GAAGiJ,EAAS,EAAI,IAAM,KAC9Bhe,EAAQC,IAGZ,MAAO,CACLoL,MAbF,WACMvG,EAAQmZ,OACV7gB,EAAK2P,EAAYlC,SAASC,MAAO,QAASiT,EAAS,CAAE5E,SAAS,EAAOC,SAAS,SAqCpF,MAWM8E,GAAW,CACf7kB,KAAM,QACNqd,MAAO,IACP7B,mBAAmB,EACnBzE,QAAS,EACThI,QAAQ,EACRI,YAAY,EACZvD,SAAU,IACViT,cAAc,EACdC,cAAc,EACdJ,eAAe,EACfiB,OAAQ,gCACR3J,MAAM,EACNf,UAAW,MACXlD,YAAY,EACZmJ,WAAW,EACXpK,eAAgB,6CAChBvN,QAASqL,GACTuD,KA7BW,CACXlD,KAAM,iBACNC,KAAM,aACNgP,MAAO,oBACPF,KAAM,mBACN5L,OAAQ,iBACR0R,MAAO,gBACPpO,KAAM,iBACNjJ,MAAO,mBAwBT,SAASqY,GAAKta,EAASkJ,EAAajI,GAClC,MAAMJ,GAAEA,GAAOd,GAAeC,GAgB9B,MAAO,CACLwH,MAhBF,WACE3G,EAAG,CAAC9B,GAAeM,KAAgB,KACjCpC,GAAS,KACPiM,EAAYwC,OAAOtQ,MAAM,aAAc,WAAW6F,EAAQ4R,WAAW5R,EAAQkU,iBAcjFzc,MAVF,SAAegN,EAAO6U,GACpB,MAAMtT,MAAEA,GAAUiC,EAAYlC,SAC9B5L,EAAM6L,EAAO,SAAUrK,EAAKf,EAAKoL,GAAO7Q,SACxC6G,GAAS,KACPsd,IACAnf,EAAM6L,EAAO,SAAU,QAMzB/E,OAAQ/E,GAIZ,SAAS2Q,GAAM9N,EAASkJ,EAAajI,GACnC,MAAM1H,KAAEA,GAASwG,GAAeC,IAC1BkP,KAAEA,EAAI9C,WAAEA,GAAelD,GACvB4B,KAAEA,GAAS5B,EAAYlC,SAC7B,IAAIwT,EAsBJ,SAAStY,IACPO,EAAM,IAaR,SAASA,EAAMgY,GACbrf,EAAM0P,EAAM,aAAc2P,GAE5B,MAAO,CACLjT,MAvCF,WACEjO,EAAKuR,EAAM,iBAAkB1O,IACvBA,EAAElJ,SAAW4X,GAAQ0P,IACvBtY,IACAsY,SAoCJ9hB,MAhCF,SAAegN,EAAO6U,GACpB,MAAM5I,EAAczC,EAAKO,WAAW/J,GAAO,GACrCgK,EAAWR,EAAKW,cAChBgD,EAaR,SAAkBnN,GAChB,MAAMgV,YAAEA,GAAgBzZ,EACxB,GAAIjB,EAAQ8G,GAAGxB,KAAUoV,EAAa,CACpC,MAAMjW,EAAO2H,EAAW0G,UAAS,GAC3Bna,EAAMyT,EAAWwE,SACvB,GAAa,IAATnM,GAAciB,GAAS/M,GAAO8L,GAAQ9L,GAAiB,IAAV+M,EAC/C,OAAOgV,EAGX,OAAOzZ,EAAQ4R,MAtBD8H,CAASjV,GACnB/H,GAAIgU,EAAcjC,IAAa,GAAKmD,GAAS,GAC/CpQ,EAAM,aAAaoQ,OAAW5R,EAAQkU,UACtCjG,EAAKM,UAAUmC,GAAa,GAC5B6I,EAAcD,IAEdrL,EAAKK,KAAK7J,GACV6U,MAuBFrY,OAAAA,GAIJ,MAAM0Y,GAAU,MACdC,YAAY3nB,EAAQ+N,GAClB1M,KAAK0L,MAj8DT,WACE,IAAI6a,EAAW,GAaf,SAAS/Z,EAAIV,EAAQzM,GACnB0M,EAAaD,GAAQ,CAACJ,EAAO8a,KAC3B,MAAMC,EAAgBF,EAAS7a,GAC/B6a,EAAS7a,GAAS+a,GAAiBA,EAAcjhB,QAAQkhB,GAChDA,EAAQC,KAAOD,EAAQC,OAAStnB,EAAMA,GAAOqnB,EAAQE,aAAeJ,OAiBjF,SAASza,EAAaD,EAAQnI,GAC5BF,EAAQqI,GAAQ2H,KAAK,KAAK9O,MAAM,KAAKlD,SAASolB,IAC5C,MAAMC,EAAYD,EAAQliB,MAAM,KAChChB,EAASmjB,EAAU,GAAIA,EAAU,OAGrC,MAAO,CACLxa,GAxCF,SAAYR,EAAQnD,EAAUtJ,EAAKkN,EA3SN,IA4S3BR,EAAaD,GAAQ,CAACJ,EAAO8a,KAC3BD,EAAS7a,GAAS6a,EAAS7a,IAAU,GACrC7H,EAAK0iB,EAAS7a,GAAQ,CACpBqb,OAAQrb,EACRsb,UAAWre,EACXie,WAAYJ,EACZS,UAAW1a,EACXoa,KAAMtnB,IACLyW,MAAK,CAACoR,EAAUC,IAAaD,EAASD,UAAYE,EAASF,gBAgChEza,IAAAA,EACAH,MAtBF,SAAehN,GACbsG,EAAO4gB,GAAU,CAACE,EAAe/a,KAC/Bc,EAAId,EAAOrM,OAqBboN,KAlBF,SAAcf,IACX6a,EAAS7a,IAAU,IAAIjK,SAASilB,IAC/BA,EAAQM,UAAU9Y,MAAMwY,EAASziB,EAAMgC,UAAW,QAiBpDkG,QAdF,WACEoa,EAAW,KAg6DEa,GACbpnB,KAAKsR,WAAa,GAClBtR,KAAKuV,MAnwDT,SAAe8R,GACb,IAAI9R,EAAQ8R,EAOZ,MAAO,CAAE9K,IANT,SAAa/c,GACX+V,EAAQ/V,GAKI+S,GAHd,SAAY+U,GACV,OAAOxmB,EAAS2C,EAAQ6jB,GAAS/R,KA6vDpBgS,CAzvED,GA0vEZvnB,KAAKuT,QAAU,GACfvT,KAAKwnB,SAAW,GAChBxnB,KAAKynB,YAAc,GACnB,MAAMlW,EAAOlO,EAAS1E,GAAUsJ,EAAM/G,SAAUvC,GAAUA,EAC1D2J,EAAOiJ,EAAM,GAAGA,iBAChBvR,KAAKuR,KAAOA,EACZpL,EAAM2f,GAAUO,GAAQqB,UACxBvhB,EAAMA,EAAMnG,KAAKwnB,SAAU1B,IAAWpZ,GAAW,IAEnD4Z,MAAMqB,EAAYjL,GAChB,MAAMnH,MAAEA,EAAOjE,WAAYqD,GAAgB3U,KAC3CsI,EAAOiN,EAAMhD,GAAG,CArwEJ,EAIE,IAiwEyB,oBACvCgD,EAAMgH,IAtwEM,GAuwEZvc,KAAK4nB,YAAcjT,EACnB3U,KAAK6nB,YAAcnL,GAAc1c,KAAK6nB,cAAgB7nB,KAAKuS,GAAGtB,IAAQ8U,GAAOxM,IAC7EvZ,KAAKynB,YAAcE,GAAc3nB,KAAKynB,YActC,OAZA9hB,EADqBK,EAAO,GAAIuO,GAAuBvU,KAAKynB,YAAa,CAAE/K,WAAY1c,KAAK6nB,eACvE,CAACC,EAAWzoB,KAC/B,MAAM0oB,EAAYD,EAAU9nB,KAAM2U,EAAa3U,KAAKwnB,UACpD7S,EAAYtV,GAAO0oB,EACnBA,EAAUtS,OAASsS,EAAUtS,WAE/B9P,EAAOgP,GAAcoT,IACnBA,EAAU9U,OAAS8U,EAAU9U,WAE/BjT,KAAKyM,KAAKjC,IACV9F,EAAS1E,KAAKuR,KAvpDQ,kBAwpDtBgE,EAAMgH,IAnxEG,GAoxETvc,KAAKyM,KAAKhC,IACHzK,KAETsmB,KAAK9S,GAGH,OAFAxT,KAAKuT,QAAQ1P,KAAK2P,GAClBA,EAAOD,QAAQ1P,KAAK7D,MACbA,KAETsmB,GAAGrI,GAED,OADAje,KAAK4nB,YAAY/P,WAAW8E,GAAGsB,GACxBje,KAETsmB,GAAGxa,EAAQnD,GAET,OADA3I,KAAK0L,MAAMY,GAAGR,EAAQnD,EAAU,KArxEA,IAsxEzB3I,KAETsmB,IAAIxa,GAEF,OADA9L,KAAK0L,MAAMc,IAAIV,GACR9L,KAETsmB,KAAK5a,GAEH,OADA1L,KAAK0L,MAAMe,KAAKf,KAAUzH,EAAMgC,UAAW,IACpCjG,KAETsmB,IAAIjQ,EAAQlF,GAEV,OADAnR,KAAK4nB,YAAYzQ,OAAOxW,IAAI0V,EAAQlF,GAC7BnR,KAETsmB,OAAO5O,GAEL,OADA1X,KAAK4nB,YAAYzQ,OAAO/V,OAAOsW,GACxB1X,KAETsmB,GAAGrlB,GACD,OAAOjB,KAAKwnB,SAASvmB,OAASA,EAEhCqlB,UAEE,OADAtmB,KAAKyM,KAAK3B,IACH9K,KAETsmB,QAAQtR,GAAa,GACnB,MAAMtJ,MAAEA,EAAK6J,MAAEA,GAAUvV,KAYzB,OAXIuV,EAAMhD,GA/zEE,GAg0EV7G,EAAMY,GAAG7B,GAAazK,KAAKmM,QAAQnH,KAAKhF,KAAMgV,GAAahV,OAE3D2F,EAAO3F,KAAK4nB,aAAcG,IACxBA,EAAU5b,SAAW4b,EAAU5b,QAAQ6I,MACtC,GACHtJ,EAAMe,KAAKpB,IACXK,EAAMS,UACN6I,GAAclS,EAAM9C,KAAKuT,SACzBgC,EAAMgH,IAp0EM,IAs0EPvc,KAET0M,cACE,OAAO1M,KAAKwnB,SAEd9a,YAAYA,GACV,MAAM8a,SAAEA,GAAaxnB,KACrBmG,EAAMqhB,EAAU9a,GACX1M,KAAKuV,MAAMhD,GAl1EJ,IAm1EVvS,KAAKyM,KAAK1B,GAAeyc,GAG7B1oB,aACE,OAAOkB,KAAK4nB,YAAYzQ,OAAOkB,WAAU,GAE3ClH,YACE,OAAOnR,KAAK4nB,YAAY/P,WAAW0G,aAGvC,IAAIyJ,GAAS3B,GACb2B,GAAON,SAAW,GAClBM,GAAOxlB,OAASA,ECr2EZtB,SAASgH,cAAc,cACzB,IAAI8f,GAAQ,YAAa,CACvB5X,YAAY,EACZnP,KAAM,QACN+W,QAAS,EACTiF,QAAS,EACTlE,IAAK,GACLzD,YAAa,CACX2S,IAAK,CACHjQ,QAAS,EACTe,IAAK,IAEPmP,IAAK,CACHlQ,QAAS,EACTe,IAAK,IAEPoP,KAAM,CACJnQ,QAAS,EACTe,IAAK,IAEPqP,KAAM,CACJpQ,QAAS,EACTe,IAAK,OAGP9F,QAGF/R,SAASgH,cAAc,kBACzB,IAAI8f,GAAQ,gBAAiB,CAC3B5X,YAAY,EACZnP,KAAM,QACN+W,QAAS,EACTiF,QAAS,EACTlE,IAAK,GACLzD,YAAa,CACX2S,IAAK,CACHjQ,QAAS,EACTe,IAAK,IAEPmP,IAAK,CACHlQ,QAAS,EACTe,IAAK,IAEPoP,KAAM,CACJnQ,QAAS,EACTe,IAAK,IAEPqP,KAAM,CACJpQ,QAAS,EACTe,IAAK,OAGP9F,QC1BN,IArBMoV,WACJ,SAAAA,IAAc,IAAAtoB,EAAAC,KAGZ,GAHY1B,EAAA0B,KAAAqoB,GACZroB,KAAKoW,SAAWlV,SAASI,iBALZ,uBAORtB,KAAKoW,SACR,OAAO,EAGTpW,KAAKoW,SAAS3U,SAAQ,SAACC,GACrBA,EAAGiL,iBAAiB,QAAS5M,EAAKuoB,WAAW,MJCjD,IAAsB9pB,EAAa+pB,EAAYC,EAokF7C,OApkFoBhqB,EA2jFP6pB,GA3jFoBE,EA2jFT,CAAC,CACvBlpB,IAAK,YACLG,MI1jFJ,SAAUqI,GACR3G,SAASC,KAAKT,UAAUyf,OAhBP,eAiBjBjf,SAASC,KAAKT,UAAUyf,OAAO,QAE/BtY,EAAEE,sBJNcrJ,EAAkBF,EAAYwF,UAAWukB,GACrDC,GAAa9pB,EAAkBF,EAAagqB,GAkkFzCH,EI9kFLA,IJmlFJ,IAAII,GAAuC,oBAAfC,WAA6BA,WAA+B,oBAAXhpB,OAAyBA,OAA2B,oBAAXipB,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAO,GAU7L,IAJkCC,GAJV/e,GAQpBgf,IAA8C,SAAUD,EAAQE,GKzlFtE,SAASC,EAAQzpB,GAAmV,OAAtOypB,EAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiB3pB,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAX0pB,QAAyB1pB,EAAI4pB,cAAgBF,QAAU1pB,IAAQ0pB,OAAOjlB,UAAY,gBAAkBzE,IAAyBA,GAEnX,SAAS6pB,EAA2BC,EAAGC,GAAkB,IAAIC,EAAuB,oBAAXN,QAA0BI,EAAEJ,OAAOC,WAAaG,EAAE,cAAe,IAAKE,EAAI,CAAE,GAAInmB,MAAMD,QAAQkmB,KAAOE,EAE9K,SAAqCF,EAAGG,GAAU,GAAKH,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOI,EAAkBJ,EAAGG,GAAS,IAAIzT,EAAI5W,OAAO6E,UAAU0lB,SAASrlB,KAAKglB,GAAGplB,MAAM,GAAI,GAAiE,MAAnD,WAAN8R,GAAkBsT,EAAEF,cAAapT,EAAIsT,EAAEF,YAAY1kB,MAAgB,QAANsR,GAAqB,QAANA,EAAoB3S,MAAMyQ,KAAKwV,GAAc,cAANtT,GAAqB,2CAA2C4T,KAAK5T,GAAW0T,EAAkBJ,EAAGG,QAAzG,GAF1HI,CAA4BP,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAEvqB,OAAqB,CAAMyqB,IAAIF,EAAIE,GAAI,IAAI1qB,EAAI,EAAOgrB,EAAI,aAAiB,MAAO,CAAEC,EAAGD,EAAG9T,EAAG,WAAe,OAAIlX,GAAKwqB,EAAEvqB,OAAe,CAAEknB,MAAM,GAAe,CAAEA,MAAM,EAAOxmB,MAAO6pB,EAAExqB,OAAWgJ,EAAG,SAAWkiB,GAAM,MAAMA,GAAOC,EAAGH,GAAO,MAAM,IAAIprB,UAAU,yIAA4I,IAA6CwrB,EAAzCC,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEL,EAAG,WAAeP,EAAKA,EAAGllB,KAAKglB,IAAOtT,EAAG,WAAe,IAAIqU,EAAOb,EAAGpZ,OAAsC,OAA9B+Z,EAAmBE,EAAKpE,KAAaoE,GAASviB,EAAG,SAAWwiB,GAAOF,GAAS,EAAMF,EAAMI,GAAQL,EAAG,WAAe,IAAWE,GAAoC,MAAhBX,EAAW,QAAWA,EAAW,SAAM,QAAW,GAAIY,EAAQ,MAAMF,KAI/9B,SAASR,EAAkBa,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAIxrB,UAAQyrB,EAAMD,EAAIxrB,QAAQ,IAAK,IAAID,EAAI,EAAG2rB,EAAO,IAAIpnB,MAAMmnB,GAAM1rB,EAAI0rB,EAAK1rB,IAAO2rB,EAAK3rB,GAAKyrB,EAAIzrB,GAAM,OAAO2rB,EAIhL,SAAS9rB,EAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAI7S,SAASO,EAAgBC,EAAKF,EAAKG,GAAiK,OAApJH,KAAOE,EAAOJ,OAAOC,eAAeG,EAAKF,EAAK,CAAEG,MAAOA,EAAOR,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBK,EAAIF,GAAOG,EAAgBD,EAnB3MJ,OAAOC,eAAe2pB,EAAS,aAAc,CAC3CvpB,OAAO,IAETupB,EAAiB,aAAI,EAkBrB,IAAI0B,EAA8B,WAChC,SAASA,EAAerU,EAAU1J,GAChC,IAAI3M,EAAQC,KAiKZ,GA3KJ,SAAyBzB,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAY5GH,CAAgB0B,KAAMyqB,GAEtBnrB,EAAgBU,KAAM,iBAAkB,CACtC0qB,WAAY,OACZC,SAAS,EACTra,SAAS,EACTsa,KAAK,EACLC,QAAS,CAAC,WAAY,YACtBC,UAAU,EACVC,aAAc,EACdC,gBAAiB,MACjBC,YAAa,OACbC,aAAc,QACdC,gBAAiB,SACjBC,aAAc,GACdC,OAAO,EACPC,UAAW,UACXC,YAAY,EACZC,aAAa,EACbC,QAAS,wBACTC,gBAAgB,EAChBC,eAAgB,IAChBC,YAAY,EACZC,gBAAgB,EAChBlQ,MAAM,EACNmQ,KAAK,EACLC,UAAU,EACVC,eAAgB,GAChB5kB,UAAW,kBACX6kB,WAAY,GACZ7S,YAAa,GACb8S,mBAAmB,EACnBC,mBAAmB,EACnBC,eAAe,EACfC,YAAY,EACZC,kBAAmB,6CACnBC,gBAAgB,EAChBC,SAAS,EACTC,iBAAkB,EAClBC,cAAe,EACfC,QAAS,GACTC,UAAW,eACXC,KAAK,EACLC,WAAY,WACZC,UAAW,IACXC,cAAc,EACd/Q,OAAO,EACPgR,YAAY,EACZC,iBAAkB,KAGpB5tB,EAAgBU,KAAM,wBAAoB,GAE1CV,EAAgBU,KAAM,gCAA4B,GAElDV,EAAgBU,KAAM,qBAAqB,GAE3CV,EAAgBU,KAAM,gBAAiB,iBAAkBN,QAEzDJ,EAAgBU,KAAM,gBAAiB,0BAA0B2pB,KAAKwD,UAAUC,WAEhF9tB,EAAgBU,KAAM,2BAAuB,GAE7CV,EAAgBU,KAAM,mBAAoB,cAAewsB,SAEzDltB,EAAgBU,KAAM,UAAU,GAEhCV,EAAgBU,KAAM,eAAe,GAErCV,EAAgBU,KAAM,aAAa,GAEnCV,EAAgBU,KAAM,YAAY,GAElCV,EAAgBU,KAAM,kBAAkB,GAExCV,EAAgBU,KAAM,eAAe,GAErCV,EAAgBU,KAAM,qBAAqB,GAE3CV,EAAgBU,KAAM,uBAAwB,MAE9CV,EAAgBU,KAAM,oBAAgB,GAEtCV,EAAgBU,KAAM,iBAAkB,kBAExCV,EAAgBU,KAAM,WAAY,IAElCV,EAAgBU,KAAM,eAAgB,IAEtCV,EAAgBU,KAAM,oBAAqB,GAE3CV,EAAgBU,KAAM,oBAAqB,GAE3CV,EAAgBU,KAAM,kBAAmB,MAEzCV,EAAgBU,KAAM,uBAAwB,GAE9CV,EAAgBU,KAAM,qBAAsB,CAC1CqtB,UAAW,EACXC,WAAY,EACZC,WAAY,EACZC,SAAU,EACVC,YAAa,EACbC,UAAW,EACXC,WAAW,EACXC,UAAW,EACXC,QAAQ,EACRC,gBAAiB,EACjBC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,EAClBC,UAAW,EACXC,SAAU,EACVnN,SAAS,EACToN,eAAgB,EAChBC,eAAgB,EAChBC,sBAAuB,EACvBC,sBAAuB,EACvBC,uBAAwB,EACxBC,uBAAwB,EACxBC,aAAc,EACdC,qBAAsB,EACtBC,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,cAAe,EACfC,cAAe,EACfC,YAAa,EACbC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,gBAAiB,EACjBC,oBAAqB,EACrBC,WAAY,EACZC,cAAc,EACdC,eAAgB,IAGlB3vB,KAAK0M,QAAUvN,OAAO6G,OAAOhG,KAAK4vB,eAAgBljB,GAClD1M,KAAK6vB,yBAA2B7vB,KAAK8vB,4BAEb,iBAAb1Z,GACTpW,KAAK+vB,gBAAkB3Z,EACvBpW,KAAKoW,SAAWhT,MAAMyQ,KAAK3S,SAASI,iBAAiB8U,KAErDpW,KAAKoW,cAAsC,IAApBA,EAAStX,QAA0BsX,EAAStX,OAAS,EAAIsE,MAAMyQ,KAAKuC,GAAY,CAACA,GAG1GpW,KAAKgwB,gBAAkB,GACvBhwB,KAAKiwB,iBAAmBjwB,KAAKkwB,4BAC7BlwB,KAAKmwB,mBAA8C,IAA1BnwB,KAAKiwB,iBAC9BjwB,KAAKowB,oBAAsBpwB,KAAKqwB,KAE5BrwB,KAAK0M,QAAQof,MACf9rB,KAAKoW,SAAWpW,KAAKswB,WAAWtwB,KAAK0M,QAAQof,MAG3C9rB,KAAK0M,QAAQsgB,aAAc,CAC7B,IAAIuD,EAAS,GACbvwB,KAAKoW,SAAWhT,MAAMyQ,KAAK7T,KAAKoW,UAAU5Q,QAAO,SAAUgrB,GACzD,IAAItQ,EAAMsQ,EAAQhwB,aAAaT,EAAM2M,QAAQge,YAE7C,OAA6B,IAAzB6F,EAAO3sB,QAAQsc,KACjBqQ,EAAO1sB,KAAKqc,IACL,MAOblgB,KAAKywB,iBAEDzwB,KAAK0M,QAAQ2e,OACfrrB,KAAK0wB,SAAShS,QAAQ3Z,YAAY/E,KAAK0wB,SAASC,aAG9C3wB,KAAK0M,QAAQke,KACf5qB,KAAK0wB,SAAShS,QAAQ3Z,YAAY/E,KAAK0wB,SAASE,YAG9C5wB,KAAK0M,QAAQ4D,SACftQ,KAAK0wB,SAAShS,QAAQ3Z,YAAY/E,KAAK0wB,SAASpgB,SAGlDtQ,KAAK2M,iBAAiB3M,KAAKoW,SAAU,SAAWpW,KAAK6wB,gBAAgB,SAAUnlB,GAC7E,GAAI3L,EAAM+wB,YAAYplB,EAAMqlB,eAAgB,CAG1C,GAFArlB,EAAM3D,iBAEFhI,EAAMixB,YACR,OAAO,EAGTjxB,EAAMkxB,kBAAoBlxB,EAAMqW,SAASxS,QAAQ8H,EAAMqlB,eAEvDhxB,EAAMmxB,UAAUxlB,EAAMqlB,mBAItB/wB,KAAK0M,QAAQqf,UACf/rB,KAAK2M,iBAAiB3M,KAAK0wB,SAAShS,QAAS,CAAC,SAAW1e,KAAK6wB,eAAgB,cAAgB7wB,KAAK6wB,iBAAiB,SAAUnlB,GACxH3L,EAAMoxB,QAAUzlB,EAAM/M,SAAW+M,EAAMqlB,eACzChxB,EAAMsrB,WAMRrrB,KAAK0M,QAAQyf,mBACfnsB,KAAK2M,iBAAiBzL,SAASC,KAAM,eAAiBnB,KAAK6wB,gBAAgB,SAAUnlB,GAC/EA,EAAM/M,OAAO+lB,cAAchkB,UAAU2G,SAAS,aAChDqE,EAAM3D,oBAMR/H,KAAK0M,QAAQmf,gBACf7rB,KAAK2M,iBAAiBzL,SAASC,KAAM,SAAWnB,KAAK6wB,eAAgB7wB,KAAKoxB,UAAS,SAAU1lB,GAG3F,GAFA3L,EAAMsxB,mBAAmBhE,UAAY,EAEjCttB,EAAMixB,aAA6B,WAAdtlB,EAAMrM,IAI7B,OAHAU,EAAMuxB,aAAa/qB,aAAa,MAAO,IAEvCxG,EAAMixB,aAAc,EACbjxB,EAAMsrB,QAGXtrB,EAAMoxB,SACRzlB,EAAM3D,iBAEY,WAAd2D,EAAMrM,KACRU,EAAMsrB,SAGHtrB,EAAMixB,aAAe,CAAC,YAAa,cAAcptB,QAAQ8H,EAAMrM,MAAQ,GAC1EU,EAAMwxB,UAAwB,eAAd7lB,EAAMrM,IAAuB,GAAK,MAGrDW,KAAK0M,QAAQ+f,mBAGlBzsB,KAAKwxB,YA5PT,IAAsBhzB,EAAa+pB,EAAYC,EA+sD7C,OA/sDoBhqB,EA+PPisB,GA/PoBlC,EA+PJ,CAAC,CAC5BlpB,IAAK,4BACLG,MAAO,WAGL,IAAIiyB,GAAkB,EAEtB,IACE,IAAIC,EAAOvyB,OAAOC,eAAe,GAAI,UAAW,CAC9CoY,IAAK,WACHia,GAAkB,KAGtB/xB,OAAOiN,iBAAiB,cAAe,KAAM+kB,GAC7ChyB,OAAOwM,oBAAoB,cAAe,KAAMwlB,GAChD,MAAO7pB,IAET,OAAO4pB,IAER,CACDpyB,IAAK,iBACLG,MAAO,WACLQ,KAAK0wB,SAAS/F,QAAUzpB,SAAS0F,cAAc,OAC/C5G,KAAK0wB,SAAS/F,QAAQjqB,UAAUC,IAAI,cACpCX,KAAK0wB,SAAS/F,QAAQgH,QAAQC,cAAgB,KAC9C5xB,KAAK0wB,SAASC,YAAczvB,SAAS0F,cAAc,UACnD5G,KAAK0wB,SAASC,YAAYjwB,UAAUC,IAAI,YACxCX,KAAK0wB,SAASC,YAAYkB,UAAY7xB,KAAK0M,QAAQ4e,UACnDtrB,KAAK0wB,SAASpgB,QAAUpP,SAAS0F,cAAc,OAC/C5G,KAAK0wB,SAASpgB,QAAQ5P,UAAUC,IAAI,cACpCX,KAAK0wB,SAASpgB,QAAQuhB,UAAY,cAClC7xB,KAAK0wB,SAASE,WAAa1vB,SAAS0F,cAAc,OAClD5G,KAAK0wB,SAASE,WAAWlwB,UAAUC,IAAI,iBACvCX,KAAK0wB,SAASE,WAAWiB,UAAY,2BAA6BvM,OAAOtlB,KAAK0M,QAAQme,QAAQ,GAAI,qCAAuCvF,OAAOtlB,KAAK0M,QAAQme,QAAQ,GAAI,aACzK7qB,KAAK0wB,SAASoB,QAAU5wB,SAAS0F,cAAc,OAC/C5G,KAAK0wB,SAASoB,QAAQpxB,UAAUC,IAAI,cACpCX,KAAK0wB,SAASoB,QAAQD,UAAY,kEAClC7xB,KAAK0wB,SAASqB,QAAU7wB,SAAS0F,cAAc,OAC/C5G,KAAK0wB,SAASqB,QAAQrxB,UAAUC,IAAI,aAAc,OAASX,KAAK0M,QAAQye,iBAEpEnrB,KAAK0M,QAAQ0e,cACfprB,KAAK0wB,SAASqB,QAAQrxB,UAAUC,IAAIX,KAAK0M,QAAQ0e,cAGnDprB,KAAK0wB,SAASsB,MAAQ9wB,SAAS0F,cAAc,OAC7C5G,KAAK0wB,SAASsB,MAAMtxB,UAAUC,IAAI,YAClCX,KAAK0wB,SAAShS,QAAUxd,SAAS0F,cAAc,OAC/C5G,KAAK0wB,SAAShS,QAAQhe,UAAUC,IAAI,cACpCX,KAAK0wB,SAAShS,QAAQnY,aAAa,YAAa,GAChDvG,KAAK0wB,SAAShS,QAAQnY,aAAa,OAAQ,UAC3CvG,KAAK0wB,SAAShS,QAAQnY,aAAa,eAAe,GAE9CvG,KAAK0M,QAAQtF,WACfpH,KAAK0wB,SAAShS,QAAQhe,UAAUC,IAAIX,KAAK0M,QAAQtF,WAG/CpH,KAAK0M,QAAQmgB,KACf7sB,KAAK0wB,SAAShS,QAAQhe,UAAUC,IAAI,gBAGvC,CACDtB,IAAK,WACLG,MAAO,SAAkBsJ,EAAMkE,GAC7B,IAAIilB,EACJ,OAAO,WACAA,IACHnpB,EAAKoF,MAAMlO,KAAMiG,WACjBgsB,GAAa,EACbpxB,YAAW,WACT,OAAOoxB,GAAa,IACnBjlB,OAIR,CACD3N,IAAK,cACLG,MAAO,SAAqBgxB,GAC1B,OAAQxwB,KAAK0M,QAAQ+e,SAAW+E,EAAQhwB,aAAaR,KAAK0M,QAAQge,aAAe,IAAIwH,OAAO,IAAMlyB,KAAK0M,QAAQ+e,QAAU,KAAM,KAAK9B,KAAK6G,EAAQhwB,aAAaR,KAAK0M,QAAQge,eAE5K,CACDrrB,IAAK,4BACLG,MAAO,WACL,IAAIsqB,GAAK5oB,SAASC,MAAQD,SAASixB,iBAAiBtrB,MACpD,MAAO,eAAgBijB,EAAI,GAAK,qBAAsBA,EAAI,WAAa,kBAAmBA,EAAI,QAAU,gBAAiBA,GAAI,OAE9H,CACDzqB,IAAK,kBACLG,MAAO,SAAyByB,GAC9B,IAAImxB,EAAiB,EACjBC,EAAgB,GAAGpuB,MAAMI,KAAKnD,SAASI,iBAAiB,IAAMtB,KAAK0M,QAAQogB,aAE/E,GAAa,SAAT7rB,EAAiB,CACnB,IAAIqxB,EAAkB5yB,OAAO6yB,WAE7B,IAAKD,EAAiB,CACpB,IAAIE,EAAsBtxB,SAASixB,gBAAgBvwB,wBACnD0wB,EAAkBE,EAAoB3sB,MAAQwD,KAAKD,IAAIopB,EAAoB7jB,MAG7E,GAAIzN,SAASC,KAAKsxB,YAAcH,GAAmBtyB,KAAK0yB,cAAe,CACrE,IAAIC,EAAYzxB,SAAS0F,cAAc,OACnC6H,EAAe1N,SAASG,SAASC,KAAK0F,MAAM4H,cAAgB,EAAG,IACnEkkB,EAAUjyB,UAAUC,IAAI,wBACxBO,SAASC,KAAK4D,YAAY4tB,GAC1BP,EAAiBO,EAAUC,YAAcD,EAAUF,YACnDvxB,SAASC,KAAKoG,YAAYorB,GAC1BzxB,SAASC,KAAKwwB,QAAQkB,qBAAuBpkB,GAEzC2jB,EAAiB,GAAuB,GAAlBA,GAAuBpyB,KAAK0yB,iBACpDxxB,SAASC,KAAKT,UAAUC,IAAI,iBAC5BO,SAASC,KAAK0F,MAAM4H,aAAeA,EAAe2jB,EAAiB,KACnEC,EAAc5wB,SAAQ,SAAU+uB,GAC9B,IAAIsC,EAAgBtC,EAAQ3pB,MAAM4H,aAC9BskB,EAAoBrzB,OAAOqH,iBAAiBypB,GAAS,iBACzDA,EAAQmB,QAAQkB,qBAAuBC,EACvCtC,EAAQ3pB,MAAM4H,aAAe,GAAG6W,OAAO7L,WAAWsZ,GAAqBX,EAAgB,gBAK7FlxB,SAASC,KAAKT,UAAUU,OAAO,iBAC/BF,SAASC,KAAK0F,MAAM4H,aAAevN,SAASC,KAAKwwB,QAAQkB,qBACzDR,EAAc5wB,SAAQ,SAAU+uB,GAC9B,IAAIrX,EAAUqX,EAAQmB,QAAQkB,0BAEP,IAAZ1Z,IACTqX,EAAQ3pB,MAAM4H,aAAe0K,MAKnC,OAAOiZ,IAER,CACD/yB,IAAK,QACLG,MAAO,WACL,IAAIwzB,EAAShzB,KAEb,IAAKA,KAAKmxB,QAAUnxB,KAAKgxB,aAAehxB,KAAKizB,UAC3C,OAAO,EAGTjzB,KAAKizB,WAAY,EACjB,IAAIzC,EAAUxwB,KAAKgwB,gBAAgBhwB,KAAKkzB,mBA+BxC,IAAK,IAAI7zB,KA9BTmxB,EAAQ2C,cAAc,IAAIC,MAAM,yBAE5BpzB,KAAK0M,QAAQ8f,UACfxsB,KAAKqzB,mBAAoB,EAEpBrzB,KAAKszB,aACRtzB,KAAKuzB,aAITvzB,KAAKkM,oBAAoBhL,SAAU,WAAalB,KAAK6wB,gBACrD7wB,KAAKwzB,QAAQtyB,SAASI,iBAAiB,6FAA8FtB,KAAK0M,QAAQqgB,WAAW,WACvJiG,EAAOtmB,QAAQ0f,eACjB4G,EAAOS,gBAAgB,QAGrBT,EAAOtmB,QAAQkgB,WAA0C,KAA7BoG,EAAOtmB,QAAQkgB,WAC7C1rB,SAASgH,cAAc,QAAQxH,UAAUU,OAAO4xB,EAAOtmB,QAAQkgB,WAGjE1rB,SAASC,KAAKoG,YAAYyrB,EAAOtC,SAAShS,SAC1Cxd,SAASC,KAAKoG,YAAYyrB,EAAOtC,SAAS/F,SAC1CqI,EAAOtC,SAASnE,eAAiB,KACjCiE,EAAQ2C,cAAc,IAAIC,MAAM,0BAChCJ,EAAOC,WAAY,KAErBjzB,KAAKsxB,aAAe,KACpBtxB,KAAKmxB,QAAS,EACdnxB,KAAKgxB,aAAc,EAEHhxB,KAAKqxB,mBACnBrxB,KAAKqxB,mBAAmBhyB,GAAO,EAGjCW,KAAKqxB,mBAAmB1D,WAAY,EACpC3tB,KAAKqxB,mBAAmBxD,QAAS,EACjC7tB,KAAKqxB,mBAAmBrQ,SAAU,EAClChhB,KAAKqxB,mBAAmB3C,aAAe1uB,KAAK0zB,OAAO,EAAG,EAAG1zB,KAAK0M,QAAQigB,SACtE3sB,KAAKqxB,mBAAmB3B,cAAe,IAExC,CACDrwB,IAAK,OACLmY,IAAK,WACH,OAAO9X,OAAOi0B,SAAStD,KAAKuD,UAAU,KAEvC,CACDv0B,IAAK,UACLG,MAAO,WACL,IAAIq0B,EAAS7zB,KAETmR,EAAQnR,KAAKkzB,kBACbp0B,EAASkB,KAAKgwB,gBAAgBlxB,OAC9BqR,EAAOgB,EAAQ,EAAI,EAAIrS,EAAS,EAAIqS,EAAQ,GAAKrS,EAAS,EAAI,EAAIqS,EAAQ,EAC1EjB,EAAOiB,EAAQ,EAAI,EAAIrS,EAAS,EAAIqS,EAAQ,GAAKrS,EAAS,EAAI,EAAIqS,EAAQ,EAC1E2iB,EAAY,IAAIC,MAChBC,EAAY,IAAID,MACpBD,EAAUnnB,iBAAiB,QAAQ,SAAUjB,GAC3C,IAAIwU,EAAMxU,EAAM/M,OAAO6B,aAAa,QAEM,IAAtCqzB,EAAOI,aAAarwB,QAAQsc,IAE9B2T,EAAOI,aAAapwB,KAAKqc,GAG3B2T,EAAO7D,gBAAgB7e,GAAOgiB,cAAc,IAAIC,MAAM,mBAAqBS,EAAOhD,oBAEpFiD,EAAUvtB,aAAa,MAAOvG,KAAKgwB,gBAAgB7f,GAAM3P,aAAaR,KAAK0M,QAAQge,aACnFsJ,EAAUrnB,iBAAiB,QAAQ,SAAUjB,GAC3C,IAAIwU,EAAMxU,EAAM/M,OAAO6B,aAAa,QAEM,IAAtCqzB,EAAOI,aAAarwB,QAAQsc,IAC9B2T,EAAOI,aAAapwB,KAAKqc,GAG3B2T,EAAO7D,gBAAgB7e,GAAOgiB,cAAc,IAAIC,MAAM,mBAAqBS,EAAOhD,oBAEpFmD,EAAUztB,aAAa,MAAOvG,KAAKgwB,gBAAgB9f,GAAM1P,aAAaR,KAAK0M,QAAQge,eAEpF,CACDrrB,IAAK,YACLG,MAAO,SAAmB0W,GACxB,IAAIge,EAASl0B,KAETm0B,EAAiBje,EAEjBlW,KAAK0M,QAAQmgB,MACf3W,GAAaA,GAGflW,KAAKgwB,gBAAgBhwB,KAAKkzB,mBAAmBC,cAAc,IAAIC,MAAM,UAAYpzB,KAAK6wB,iBACtF7wB,KAAKgwB,gBAAgBhwB,KAAKkzB,mBAAmBC,cAAc,IAAIC,OAAqB,IAAdld,EAAkB,OAAS,QAAU,IAAMlW,KAAK6wB,iBACtH,IAAIuD,EAAWp0B,KAAKkzB,kBAAoBhd,EAExC,GAAIlW,KAAKgxB,cAAgBoD,EAAW,GAAKA,GAAYp0B,KAAKgwB,gBAAgBlxB,UAAiC,IAAtBkB,KAAK0M,QAAQiP,KAChG,OAAO,EAGT3b,KAAKkzB,kBAAoBkB,EAAW,EAAIp0B,KAAKgwB,gBAAgBlxB,OAAS,EAAIs1B,EAAWp0B,KAAKgwB,gBAAgBlxB,OAAS,EAAI,EAAIs1B,EAC3Hp0B,KAAK0wB,SAASoB,QAAQ5pB,cAAc,eAAe2pB,UAAY7xB,KAAKkzB,kBAAoB,EAEpFlzB,KAAK0M,QAAQgf,gBACf1rB,KAAK8P,MAAM9P,KAAK0M,QAAQif,eAAiB,KAAO,IAAMwI,EAAiBn0B,KAAKqxB,mBAAmBhE,UAAY,MAG7GrtB,KAAKwzB,QAAQxzB,KAAK0wB,SAASsB,MAAOhyB,KAAK0M,QAAQqgB,WAAW,WACxDmH,EAAOlD,aAAc,EAEhBkD,EAAOjB,UAmBViB,EAAOlD,aAAc,EAlBrBnwB,YAAW,WACT,IAAI2vB,EAAU0D,EAAOlE,gBAAgBkE,EAAOhB,mBAE5CgB,EAAO5C,aAAa/qB,aAAa,MAAOiqB,EAAQhwB,aAAa0zB,EAAOxnB,QAAQge,cAEU,IAAlFwJ,EAAOD,aAAarwB,QAAQ4sB,EAAQhwB,aAAa0zB,EAAOxnB,QAAQge,cAClEwJ,EAAOG,KAAKH,EAAOxD,SAASpgB,SAG1B4jB,EAAOxD,SAASsB,MAAM3qB,SAAS6sB,EAAOxD,SAASqB,UACjDmC,EAAOxD,SAASsB,MAAMzqB,YAAY2sB,EAAOxD,SAASqB,SAGpDmC,EAAOI,YAAYH,GAEfD,EAAOxnB,QAAQkf,YAAYsI,EAAOK,YACrC,UAMR,CACDl1B,IAAK,cACLG,MAAO,SAAqB0W,GAC1B,IAAIse,EAASx0B,KAEb,IAAKA,KAAKsxB,aACR,OAAO,EAGT,IAAImD,EAAW,IAAIV,MACfW,EAAch1B,OAAO6yB,WAAavyB,KAAK0M,QAAQuf,WAC/C0I,EAAej1B,OAAOoC,YAAc9B,KAAK0M,QAAQ0M,YACrDqb,EAASluB,aAAa,MAAOvG,KAAKsxB,aAAa9wB,aAAa,QAC5DR,KAAKsxB,aAAaK,QAAQiD,MAAQ,EAClC50B,KAAKsxB,aAAaK,QAAQkD,WAAa,EACvC70B,KAAKsxB,aAAaK,QAAQmD,WAAa,EACvC90B,KAAK+0B,eAAe,EAAG,EAAG,GAC1BN,EAAS9nB,iBAAiB,SAAS,SAAUjB,GAC3C8oB,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBC,cAAc,IAAIC,MAAM,SAAWoB,EAAO3D,iBAE3F2D,EAAOxD,aAAc,EACrBwD,EAAOrD,QAAS,EAChBqD,EAAO9D,SAASpgB,QAAQzJ,MAAMI,QAAU,OACxC,IAAI+tB,EAA6B,IAAd9e,IAAkC,IAAfA,EAEtC,GAAIse,EAAOvD,oBAAsBuD,EAAOtB,mBAAqB8B,EAC3D,OAAOR,EAAOnJ,QAGZmJ,EAAO9nB,QAAQ2f,YACjB4I,MAAMT,EAAO9nB,QAAQ4f,mBAGvBkI,EAAOjD,UAAUyD,EAAe9e,EAAY,MAE9Cue,EAAS9nB,iBAAiB,QAAQ,SAAUjB,QACjB,IAAdwK,IACTse,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBC,cAAc,IAAIC,MAAM,WAAaoB,EAAO3D,iBAE7F2D,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBC,cAAc,IAAIC,OAAqB,IAAdld,EAAkB,WAAa,YAAc,IAAMse,EAAO3D,kBAIlI2D,EAAO9nB,QAAQ8f,SACjBgI,EAAOU,aAGqE,IAA1EV,EAAOP,aAAarwB,QAAQ4wB,EAAOlD,aAAa9wB,aAAa,SAC/Dg0B,EAAOP,aAAapwB,KAAK2wB,EAAOlD,aAAa9wB,aAAa,QAG5D,IA0BI20B,EAAkBC,EA1BlBC,EAAa3pB,EAAM/M,OAAO+P,MAC1B4mB,EAAc5pB,EAAM/M,OAAOkD,OAE/B,GAAI2yB,EAAO9nB,QAAQwf,mBAAqBmJ,EAAaX,GAAeY,EAAcX,EAAc,CAC9F,IAAIY,EAAQF,EAAaC,EAAcZ,EAAcC,EAAeU,EAAaX,EAAcY,EAAcX,EAC7GU,GAAcE,EACdD,GAAeC,EAGjBf,EAAO9D,SAASsB,MAAMnrB,MAAM2uB,KAAO91B,OAAOoC,YAAcwzB,GAAe,EAAI,KAC3Ed,EAAO9D,SAASsB,MAAMnrB,MAAM8H,MAAQjP,OAAO6yB,WAAa8C,EAAab,EAAOiB,sBAAwB,EAAI,KACxGjB,EAAO9D,SAASsB,MAAMnrB,MAAM6H,MAAQ2mB,EAAa,KACjDb,EAAO9D,SAASsB,MAAMnrB,MAAMhF,OAASyzB,EAAc,KACnDd,EAAO9D,SAASpgB,QAAQzJ,MAAMI,QAAU,OAEpCutB,EAAO9nB,QAAQuP,OACjBuY,EAAOkB,aAGTlB,EAAOmB,OAAOnB,EAAOlD,aAAckD,EAAO9nB,QAAQqgB,WAAW,WACvDyH,EAAO9nB,QAAQuP,OACjBuY,EAAO9D,SAAShS,QAAQzC,WAI5BuY,EAAOrD,QAAS,EAG8B,iBAAnCqD,EAAO9nB,QAAQse,gBACxBmK,EAAsD,SAAnCX,EAAO9nB,QAAQse,gBAA6BwJ,EAAOxE,gBAAgBwE,EAAOtB,mBAAqBsB,EAAOxE,gBAAgBwE,EAAOtB,mBAAmBhrB,cAAcssB,EAAO9nB,QAAQse,iBAC7I,mBAAnCwJ,EAAO9nB,QAAQse,kBAC/BmK,EAAmBX,EAAO9nB,QAAQse,gBAAgBwJ,EAAOxE,gBAAgBwE,EAAOtB,qBAG9EsB,EAAO9nB,QAAQoe,UAAYqK,IAE3BC,EADiC,SAA/BZ,EAAO9nB,QAAQue,YACHkK,EAAiBxD,QAAQ6C,EAAO9nB,QAAQwe,cACd,SAA/BsJ,EAAO9nB,QAAQue,YACVkK,EAAiBtD,UAEjBsD,EAAiB30B,aAAag0B,EAAO9nB,QAAQwe,eAI1DsJ,EAAO9nB,QAAQiP,KAiBoB,IAAlC6Y,EAAOxE,gBAAgBlxB,OACzB01B,EAAOoB,KAAKpB,EAAO9D,SAASE,WAAWtvB,iBAAiB,uBAExDkzB,EAAOH,KAAKG,EAAO9D,SAASE,WAAWtvB,iBAAiB,wBAnBzB,IAA7BkzB,EAAOtB,mBACTsB,EAAOoB,KAAKpB,EAAO9D,SAASE,WAAW1oB,cAAc,aAGnDssB,EAAOtB,mBAAqBsB,EAAOxE,gBAAgBlxB,OAAS,GAC9D01B,EAAOoB,KAAKpB,EAAO9D,SAASE,WAAW1oB,cAAc,aAGnDssB,EAAOtB,kBAAoB,GAC7BsB,EAAOH,KAAKG,EAAO9D,SAASE,WAAW1oB,cAAc,aAGnDssB,EAAOtB,kBAAoBsB,EAAOxE,gBAAgBlxB,OAAS,GAC7D01B,EAAOH,KAAKG,EAAO9D,SAASE,WAAW1oB,cAAc,cAUvC,IAAdgO,IAAkC,IAAfA,GACjBse,EAAO9nB,QAAQgf,iBACjB8I,EAAO1kB,MAAM,EAAG,IAAMoG,EAAY,MAElCrV,YAAW,WACT2zB,EAAO1kB,MAAM0kB,EAAO9nB,QAAQif,eAAiB,IAAM,SAClD,KAGL6I,EAAOmB,OAAOnB,EAAO9D,SAASsB,MAAOwC,EAAO9nB,QAAQqgB,WAAW,WAC7DyH,EAAOxD,aAAc,EAErBwD,EAAOqB,WAAWT,EAAaC,QAGjCb,EAAOxD,aAAc,EAErBwD,EAAOqB,WAAWT,EAAaC,IAG7Bb,EAAO9nB,QAAQ6f,iBAAmBiI,EAAO9D,SAASnE,iBACpDiI,EAAO9D,SAASnE,eAAiBrrB,SAAS0F,cAAc,OAExD4tB,EAAO9D,SAASnE,eAAe7rB,UAAUC,IAAI,sBAE7C6zB,EAAO9D,SAASnE,eAAesF,UAAY2C,EAAO9nB,QAAQ6f,eAE1DiI,EAAO9D,SAASsB,MAAMjtB,YAAYyvB,EAAO9D,SAASnE,sBAIvD,CACDltB,IAAK,iBACLG,MAAO,SAAwBwvB,EAAeC,EAAeC,GAC3DlvB,KAAKsxB,aAAazqB,MAAM7G,KAAKiwB,iBAAmB,aAAe,aAAejB,EAAgB,IAAMC,EAAgB,WAAaC,EAAc,MAEhJ,CACD7vB,IAAK,SACLG,MAAO,SAAgBA,EAAOwJ,EAAKC,GACjC,OAAOzJ,EAAQwJ,EAAMA,EAAMxJ,EAAQyJ,EAAMA,EAAMzJ,IAEhD,CACDH,IAAK,cACLG,MAAO,SAAqBkvB,EAAcM,EAAeC,GACvDjvB,KAAKsxB,aAAaK,QAAQiD,MAAQlG,EAClC1uB,KAAKsxB,aAAaK,QAAQkD,WAAa7F,EACvChvB,KAAKsxB,aAAaK,QAAQmD,WAAa7F,IAExC,CACD5vB,IAAK,oBACLG,MAAO,WACDQ,KAAKmxB,QAAUnxB,KAAKqwB,OAASrwB,KAAKowB,sBACpCpwB,KAAKszB,aAAc,EACnBtzB,KAAKqrB,WAGR,CACDhsB,IAAK,YACLG,MAAO,WACL,IAAIs2B,EAAS91B,KAgCb,GA7BAA,KAAK2M,iBAAiBjN,OAAQ,UAAYM,KAAK6wB,gBAAgB,SAAUnlB,GAEnEoqB,EAAO3E,QACT2E,EAAOxB,iBAGXt0B,KAAK2M,iBAAiB3M,KAAK0wB,SAASC,YAAa,CAAC,SAAW3wB,KAAK6wB,eAAgB,cAAgB7wB,KAAK6wB,gBAAiB7wB,KAAKqrB,MAAMrmB,KAAKhF,OAEpIA,KAAK0M,QAAQ8f,SACf3rB,YAAW,WACTi1B,EAAOnpB,iBAAiBjN,OAAQ,cAAgBo2B,EAAOjF,gBAAgB,SAAUnlB,GAC3EoqB,EAAO3E,QACT2E,EAAOC,yBAGV,IAGL/1B,KAAK2M,iBAAiB3M,KAAK0wB,SAASE,WAAWoF,qBAAqB,UAAW,SAAWh2B,KAAK6wB,gBAAgB,SAAUnlB,GACvH,IAAKA,EAAMqlB,cAAckF,QAAQ7X,MAAM,WACrC,OAAO,EAGT1S,EAAM3D,iBACN+tB,EAAOzE,mBAAmBhE,UAAY,EAEtCyI,EAAOvE,UAAU7lB,EAAMqlB,cAAcrwB,UAAU2G,SAAS,WAAa,GAAK,MAGxErH,KAAK0M,QAAQugB,WAAY,CAC3B,IAAI2H,EAAQ,EACZ50B,KAAK2M,iBAAiB3M,KAAK0wB,SAASsB,MAAO,CAAC,aAAc,mBAAmB,SAAUtmB,GACrF,GAAIoqB,EAAOzE,mBAAmB1D,WAAamI,EAAO9E,aAAe8E,EAAO7C,YAAc6C,EAAO3E,OAC3F,OAAO,EAGwC,GAA7C2E,EAAOzE,mBAAmBvD,kBAC5BgI,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOnwB,OACxFi0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOtjB,MACvFonB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAczvB,OAChFi0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAc5iB,MAC/EonB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UACnEN,EAAOzE,mBAAmBjD,eAAiB3U,WAAWqc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiB5U,WAAWqc,EAAOxE,aAAaK,QAAQmD,aAGpFppB,EAAM3D,iBACN,IAAIsuB,EAAQ3qB,EAAM2qB,OAAS3qB,EAAM4qB,gBAEnBC,IAAVF,IAEFA,EAAQ3qB,EAAM8qB,QAGhBH,EAAQhtB,KAAKJ,KAAK,EAAGI,KAAKL,IAAI,EAAGqtB,IAGjCzB,GAASyB,EAAQP,EAAOppB,QAAQwgB,iBAAmB0H,EACnDA,EAAQvrB,KAAKJ,IAAI,EAAGI,KAAKL,IAAI8sB,EAAOppB,QAAQigB,QAASiI,IACrDkB,EAAOzE,mBAAmBnC,YAAc0F,EACxCkB,EAAOzE,mBAAmBlC,aAAezjB,EAAMqZ,MAC/C+Q,EAAOzE,mBAAmBjC,aAAe1jB,EAAM+qB,MAC/CX,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmB9B,gBAAkBuG,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAC9GoH,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBjD,gBAAkB0H,EAAOzE,mBAAmBlC,aAAe2G,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOzE,mBAAmBjD,iBAAmB0H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cAC1lByG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBhD,gBAAkByH,EAAOzE,mBAAmBjC,aAAe0G,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOzE,mBAAmBhD,iBAAmByH,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAE7lBwG,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,aAE5I4G,EAAOzE,mBAAmBnC,YAAc,GAC1C4G,EAAOzE,mBAAmBxD,QAAS,EAE9BiI,EAAOpF,SAASqB,QAAQlrB,MAAM6vB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQlrB,MAAMI,SAC1E6uB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOppB,QAAQqgB,aAGV,IAA3C+I,EAAOzE,mBAAmB3C,eAC5BoH,EAAOzE,mBAAmBxD,QAAS,EAEW,SAA1CiI,EAAOpF,SAASqB,QAAQlrB,MAAMI,SAChC6uB,EAAOH,OAAOG,EAAOpF,SAASqB,QAAS+D,EAAOppB,QAAQqgB,YAI1D+I,EAAOzE,mBAAmB1C,qBAAuB,KACjDmH,EAAOzE,mBAAmBrQ,SAAU,GAGtC8U,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,oBAC3EsG,EAAOzE,mBAAmB3C,aAAeoH,EAAOzE,mBAAmBnC,YACnE4G,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,cAErE6G,EAAOa,YAAYb,EAAOzE,mBAAmBnC,YAAa4G,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAE7H6G,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,gBAIpJlvB,KAAK2M,iBAAiB3M,KAAK0wB,SAASsB,MAAO,CAAC,cAAgBhyB,KAAK6wB,eAAgB,aAAe7wB,KAAK6wB,iBAAiB,SAAUnlB,GAC9H,GAA6B,MAAzBA,EAAM/M,OAAOs3B,SAAkC,eAAfvqB,EAAMzK,KACxC,OAAO,EAGT,GAAmB,cAAfyK,EAAMzK,KACRyK,EAAM3D,iBACN+tB,EAAOzE,mBAAmB/C,sBAAwB5iB,EAAMkrB,QACxDd,EAAOzE,mBAAmB9C,sBAAwB7iB,EAAMmrB,QACxDf,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOnwB,OACxFi0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOtjB,MACvFonB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAczvB,OAChFi0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAc5iB,MAC/EonB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UACnEN,EAAOzE,mBAAmBjD,eAAiB3U,WAAWqc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiB5U,WAAWqc,EAAOxE,aAAaK,QAAQmD,YAClFgB,EAAOzE,mBAAmBrQ,SAAU,MAC/B,CAWL,GAVA8U,EAAOzE,mBAAmB5B,WAAa/jB,EAAM4X,QAAQxkB,OACrDg3B,EAAOzE,mBAAmB/C,sBAAwB5iB,EAAM4X,QAAQ,GAAGsT,QACnEd,EAAOzE,mBAAmB9C,sBAAwB7iB,EAAM4X,QAAQ,GAAGuT,QACnEf,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOnwB,OACxFi0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOtjB,MACvFonB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAczvB,OAChFi0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAc5iB,MAC/EonB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UAEtB,IAAzCN,EAAOzE,mBAAmB5B,WAE5B,CACE,GAAKqG,EAAOzE,mBAAmB3B,aAmC7B,OA7BAoG,EAAOxE,aAAa5wB,UAAUC,IAAI,iBAE7Bm1B,EAAOzE,mBAAmBxD,QAa7BiI,EAAOzE,mBAAmB3C,aAAe,EAEzCoH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAEpEoH,EAAOzE,mBAAmBxD,QAAS,IAlBnCiI,EAAOzE,mBAAmB3C,aAAeoH,EAAOppB,QAAQggB,cAExDoJ,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAE/DoH,EAAOpF,SAASqB,QAAQlrB,MAAM6vB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQlrB,MAAMI,SAC1E6uB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOppB,QAAQqgB,WAGzD+I,EAAOzE,mBAAmBxD,QAAS,GAWrChtB,YAAW,WACLi1B,EAAOxE,cACTwE,EAAOxE,aAAa5wB,UAAUU,OAAO,mBAEtC,MACI,EAlCP00B,EAAOzE,mBAAmB3B,cAAe,EACzC7uB,YAAW,WACTi1B,EAAOzE,mBAAmB3B,cAAe,IACxC,KAkCLoG,EAAOzE,mBAAmBjD,eAAiB3U,WAAWqc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiB5U,WAAWqc,EAAOxE,aAAaK,QAAQmD,iBAChC,IAAzCgB,EAAOzE,mBAAmB5B,aAGnCqG,EAAOzE,mBAAmB7C,uBAAyB9iB,EAAM4X,QAAQ,GAAGsT,QACpEd,EAAOzE,mBAAmB5C,uBAAyB/iB,EAAM4X,QAAQ,GAAGuT,QACpEf,EAAOzE,mBAAmBjD,eAAiB3U,WAAWqc,EAAOxE,aAAaK,QAAQkD,YAClFiB,EAAOzE,mBAAmBhD,eAAiB5U,WAAWqc,EAAOxE,aAAaK,QAAQmD,YAClFgB,EAAOzE,mBAAmBlC,cAAgB2G,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmB7C,wBAA0B,EAChJsH,EAAOzE,mBAAmBjC,cAAgB0G,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmB5C,wBAA0B,EAChJqH,EAAOzE,mBAAmB1C,qBAAuBtlB,KAAKytB,MAAMhB,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmB7C,yBAA2BsH,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmB7C,yBAA2BsH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmB5C,yBAA2BqH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmB5C,0BAGjcqH,EAAOzE,mBAAmBrQ,SAAU,EAGtC,QAAI8U,EAAOzE,mBAAmB1D,YAE1BmI,EAAO3F,oBACT2F,EAAOzE,mBAAmBzD,UAAY7sB,SAAS+0B,EAAOpF,SAASsB,MAAMnrB,MAAM8H,KAAM,KAGnFmnB,EAAOzE,mBAAmB1D,WAAY,EACtCmI,EAAOzE,mBAAmBhE,UAAY,EACtCyI,EAAOzE,mBAAmB/D,WAAa,EACvCwI,EAAOzE,mBAAmB9D,WAAa7hB,EAAMqZ,OAASrZ,EAAM4X,QAAQ,GAAGyB,MACvE+Q,EAAOzE,mBAAmB5D,YAAc/hB,EAAM+qB,OAAS/qB,EAAM4X,QAAQ,GAAGmT,OACjE,MAETz2B,KAAK2M,iBAAiB3M,KAAK0wB,SAASsB,MAAO,CAAC,aAAehyB,KAAK6wB,eAAgB,aAAe7wB,KAAK6wB,eAAgB,kBAAkB,SAAUnlB,GAC9I,IAAKoqB,EAAOzE,mBAAmB1D,UAC7B,OAAO,EAGT,GAAmB,cAAfjiB,EAAMzK,KAAsB,CAC9B,IAA0C,IAAtC60B,EAAOzE,mBAAmBrQ,QAC5B,OAAO,EAGT8U,EAAOzE,mBAAmBzC,eAAiBljB,EAAM4X,QAAQ,GAAGsT,QAC5Dd,EAAOzE,mBAAmBxC,eAAiBnjB,EAAM4X,QAAQ,GAAGuT,QAC5Df,EAAOzE,mBAAmB5B,WAAa/jB,EAAM4X,QAAQxkB,OACrDg3B,EAAOzE,mBAAmB1B,iBAEtBmG,EAAOzE,mBAAmB5B,WAAa,GAGvCqG,EAAOzE,mBAAmBvC,gBAAkBpjB,EAAM4X,QAAQ,GAAGsT,QAC7Dd,EAAOzE,mBAAmBtC,gBAAkBrjB,EAAM4X,QAAQ,GAAGuT,QAC7Df,EAAOzE,mBAAmB7B,oBAAsBnmB,KAAKytB,MAAMhB,EAAOzE,mBAAmBzC,eAAiBkH,EAAOzE,mBAAmBvC,kBAAoBgH,EAAOzE,mBAAmBzC,eAAiBkH,EAAOzE,mBAAmBvC,kBAAoBgH,EAAOzE,mBAAmBxC,eAAiBiH,EAAOzE,mBAAmBtC,kBAAoB+G,EAAOzE,mBAAmBxC,eAAiBiH,EAAOzE,mBAAmBtC,kBAEpV,OAAnD+G,EAAOzE,mBAAmB1C,uBAC5BmH,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,qBAGzEnmB,KAAKD,IAAI0sB,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,sBAAwB,IAE9GsG,EAAOzE,mBAAmBnC,YAAc4G,EAAOpC,OAAOoC,EAAOzE,mBAAmB7B,oBAAsBsG,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB3C,aAAc,EAAGoH,EAAOppB,QAAQigB,SACjNmJ,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmB9B,gBAAkBuG,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAC9GoH,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBjD,gBAAkB0H,EAAOzE,mBAAmBlC,aAAe2G,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOzE,mBAAmBjD,iBAAmB0H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cAC1lByG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBhD,gBAAkByH,EAAOzE,mBAAmBjC,aAAe0G,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOzE,mBAAmBhD,iBAAmByH,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB9B,iBAAmBuG,EAAOzE,mBAAmB9B,iBAA2D,EAA1CuG,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAE7lBwG,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,aAE5I4G,EAAOzE,mBAAmBnC,YAAc,IAC1C4G,EAAOzE,mBAAmBxD,QAAS,EAE9BiI,EAAOpF,SAASqB,QAAQlrB,MAAM6vB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQlrB,MAAMI,SAC1E6uB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOppB,QAAQqgB,YAI3D+I,EAAOzE,mBAAmB1C,qBAAuBmH,EAAOzE,mBAAmB7B,oBAC3EsG,EAAOzE,mBAAmB3C,aAAeoH,EAAOzE,mBAAmBnC,YACnE4G,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,iBAGzE6G,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAClEoH,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBzC,gBAAkBkH,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBjD,iBAA2D,EAA1C0H,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cACrYyG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBxC,gBAAkBiH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBhD,iBAA2D,EAA1CyH,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAEnYjmB,KAAKD,IAAI0sB,EAAOzE,mBAAmBrC,iBAAmB3lB,KAAKD,IAAI0sB,EAAOzE,mBAAmBhC,gBAC3FyG,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBzC,gBAG1EvlB,KAAKD,IAAI0sB,EAAOzE,mBAAmBpC,iBAAmB5lB,KAAKD,IAAI0sB,EAAOzE,mBAAmB/B,gBAC3FwG,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,cACrE6G,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBxC,gBAG9EiH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAcoH,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAE9H6G,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,cAMpJ,GAAmB,cAAfxjB,EAAMzK,MAAwB60B,EAAOzE,mBAAmB1D,UAAW,CACrE,GAAkB,aAAdjiB,EAAMzK,KAAqB,OAAO,EAEtC,GADAyK,EAAM3D,kBACoC,IAAtC+tB,EAAOzE,mBAAmBrQ,QAAmB,OAAO,EACxD8U,EAAOzE,mBAAmBzC,eAAiBljB,EAAMkrB,QACjDd,EAAOzE,mBAAmBxC,eAAiBnjB,EAAMmrB,QACjDf,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmB3C,aAClEoH,EAAOzE,mBAAmBhC,cAAgByG,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBtD,gBAAkB,EACnK+H,EAAOzE,mBAAmB/B,cAAgBwG,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,YAAc4G,EAAOzE,mBAAmBvD,iBAAmB,EACrKgI,EAAOzE,mBAAmBrC,cAAgB8G,EAAOzE,mBAAmBlD,SAAW2H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBtD,eAAiB,EAAI+H,EAAOpC,OAAOoC,EAAOzE,mBAAmBzC,gBAAkBkH,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBjD,iBAA2D,EAA1C0H,EAAOzE,mBAAmBhC,aAAmByG,EAAOzE,mBAAmBhC,cACrYyG,EAAOzE,mBAAmBpC,cAAgB6G,EAAOzE,mBAAmBnD,UAAY4H,EAAOzE,mBAAmBnC,aAAe4G,EAAOzE,mBAAmBvD,gBAAkB,EAAIgI,EAAOpC,OAAOoC,EAAOzE,mBAAmBxC,gBAAkBiH,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBhD,iBAA2D,EAA1CyH,EAAOzE,mBAAmB/B,aAAmBwG,EAAOzE,mBAAmB/B,cAEnYjmB,KAAKD,IAAI0sB,EAAOzE,mBAAmBrC,iBAAmB3lB,KAAKD,IAAI0sB,EAAOzE,mBAAmBhC,gBAC3FyG,EAAOzE,mBAAmBjD,eAAiB0H,EAAOzE,mBAAmBrC,cACrE8G,EAAOzE,mBAAmB/C,sBAAwBwH,EAAOzE,mBAAmBzC,gBAG1EvlB,KAAKD,IAAI0sB,EAAOzE,mBAAmBpC,iBAAmB5lB,KAAKD,IAAI0sB,EAAOzE,mBAAmB/B,gBAC3FwG,EAAOzE,mBAAmBhD,eAAiByH,EAAOzE,mBAAmBpC,cACrE6G,EAAOzE,mBAAmB9C,sBAAwBuH,EAAOzE,mBAAmBxC,gBAG9EiH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAcoH,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAE9H6G,EAAOf,eAAee,EAAOzE,mBAAmBrC,cAAgB,KAAM8G,EAAOzE,mBAAmBpC,cAAgB,KAAM6G,EAAOzE,mBAAmBnC,aAG7I4G,EAAOzE,mBAAmBxD,SAC7BiI,EAAOzE,mBAAmB7D,SAAW9hB,EAAMqZ,OAASrZ,EAAM4X,QAAQ,GAAGyB,MACrE+Q,EAAOzE,mBAAmB3D,UAAYhiB,EAAM+qB,OAAS/qB,EAAM4X,QAAQ,GAAGmT,MACtEX,EAAOzE,mBAAmBhE,UAAYyI,EAAOzE,mBAAmB9D,WAAauI,EAAOzE,mBAAmB7D,SACvGsI,EAAOzE,mBAAmB/D,WAAawI,EAAOzE,mBAAmB5D,YAAcqI,EAAOzE,mBAAmB3D,UAErGoI,EAAOppB,QAAQgf,gBACjBoK,EAAOhmB,MAAM,GAAIgmB,EAAOzE,mBAAmBhE,UAAY,UAI7DrtB,KAAK2M,iBAAiB3M,KAAK0wB,SAASsB,MAAO,CAAC,YAAchyB,KAAK6wB,eAAgB,WAAa7wB,KAAK6wB,eAAgB,eAAiB7wB,KAAK6wB,eAAgB,cAAgB7wB,KAAK6wB,eAAgB,YAAa,gBAAiB,cAAe,oBAAoB,SAAUnlB,GAkCrQ,GAjCIoqB,EAAOiB,eAAgC,aAAfrrB,EAAMzK,OAChC60B,EAAOzE,mBAAmB5B,WAAa/jB,EAAM4X,QAAQxkB,OAER,IAAzCg3B,EAAOzE,mBAAmB5B,YAItBqG,EAAOxE,cACTwE,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAcoH,EAAOzE,mBAAmBrC,cAAe8G,EAAOzE,mBAAmBpC,eAGjF,IAA3C6G,EAAOzE,mBAAmB3C,eAC5BoH,EAAOzE,mBAAmBxD,QAAS,EAEW,SAA1CiI,EAAOpF,SAASqB,QAAQlrB,MAAMI,SAChC6uB,EAAOH,OAAOG,EAAOpF,SAASqB,QAAS+D,EAAOppB,QAAQqgB,YAI1D+I,EAAOzE,mBAAmB1C,qBAAuB,KACjDmH,EAAOzE,mBAAmBrQ,SAAU,GACc,IAAzC8U,EAAOzE,mBAAmB5B,YAGnCqG,EAAOzE,mBAAmB/C,sBAAwB5iB,EAAM4X,QAAQ,GAAGsT,QACnEd,EAAOzE,mBAAmB9C,sBAAwB7iB,EAAM4X,QAAQ,GAAGuT,SAC1Df,EAAOzE,mBAAmB5B,WAAa,IAGhDqG,EAAOzE,mBAAmB1C,qBAAuB,OAInDmH,EAAOzE,mBAAmB1D,UAAW,CACvCmI,EAAOzE,mBAAmB1D,WAAY,EACtC,IAAIqJ,GAAc,EAEblB,EAAOppB,QAAQiP,OACe,IAA7Bma,EAAO5C,mBAA2B4C,EAAOzE,mBAAmBhE,UAAY,IAC1E2J,GAAc,GAGZlB,EAAO5C,mBAAqB4C,EAAO9F,gBAAgBlxB,OAAS,GAAKg3B,EAAOzE,mBAAmBhE,UAAY,IACzG2J,GAAc,IAId3tB,KAAKD,IAAI0sB,EAAOzE,mBAAmBhE,WAAayI,EAAOppB,QAAQsf,gBAAkBgL,EACnFlB,EAAOvE,UAAUuE,EAAOzE,mBAAmBhE,UAAY,EAAI,GAAK,GACvDyI,EAAOppB,QAAQgf,gBACxBoK,EAAOhmB,MAAMgmB,EAAOppB,QAAQif,eAAiB,IAAM,OAGjDmK,EAAOppB,QAAQ6e,YAAcliB,KAAKD,IAAI0sB,EAAOzE,mBAAmB/D,YAAc,IAAMjkB,KAAKD,IAAI0sB,EAAOzE,mBAAmBhE,WAAayI,EAAOppB,QAAQsf,gBACrJ8J,EAAOzK,YAIbrrB,KAAK2M,iBAAiB3M,KAAK0wB,SAASsB,MAAO,CAAC,aAAa,SAAUtmB,GACjE,IAAIoqB,EAAOiB,cA8CX,OA7CAjB,EAAOzE,mBAAmB/C,sBAAwB5iB,EAAMkrB,QACxDd,EAAOzE,mBAAmB9C,sBAAwB7iB,EAAMmrB,QACxDf,EAAOzE,mBAAmBvD,gBAAkBgI,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOnwB,OACxFi0B,EAAOzE,mBAAmBtD,eAAiB+H,EAAOI,cAAcJ,EAAOpF,SAASsB,OAAOtjB,MACvFonB,EAAOzE,mBAAmBnD,UAAY4H,EAAOI,cAAcJ,EAAOxE,cAAczvB,OAChFi0B,EAAOzE,mBAAmBlD,SAAW2H,EAAOI,cAAcJ,EAAOxE,cAAc5iB,MAC/EonB,EAAOzE,mBAAmBrD,iBAAmB8H,EAAOpF,SAASsB,MAAMmE,WACnEL,EAAOzE,mBAAmBpD,iBAAmB6H,EAAOpF,SAASsB,MAAMoE,UAEnEN,EAAOxE,aAAa5wB,UAAUC,IAAI,iBAE7Bm1B,EAAOzE,mBAAmBxD,QAa7BiI,EAAOzE,mBAAmB3C,aAAe,EAEzCoH,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAEpEoH,EAAOzE,mBAAmBxD,QAAS,EAEW,SAA1CiI,EAAOpF,SAASqB,QAAQlrB,MAAMI,SAChC6uB,EAAOH,OAAOG,EAAOpF,SAASqB,QAAS+D,EAAOppB,QAAQqgB,aArBxD+I,EAAOzE,mBAAmB3C,aAAeoH,EAAOppB,QAAQggB,cAExDoJ,EAAOa,YAAYb,EAAOzE,mBAAmB3C,aAAc,EAAG,GAE9DoH,EAAOf,eAAe,MAAU,MAAUe,EAAOzE,mBAAmB3C,cAE/DoH,EAAOpF,SAASqB,QAAQlrB,MAAM6vB,SAAqD,SAA1CZ,EAAOpF,SAASqB,QAAQlrB,MAAMI,SAC1E6uB,EAAOtC,QAAQsC,EAAOpF,SAASqB,QAAS+D,EAAOppB,QAAQqgB,WAGzD+I,EAAOzE,mBAAmBxD,QAAS,GAerChtB,YAAW,WACLi1B,EAAOxE,eACTwE,EAAOxE,aAAa5wB,UAAUU,OAAO,iBAErC00B,EAAOxE,aAAazqB,MAAMivB,EAAO7F,iBAAmB,oBAAsB,QAE3E,KACH6F,EAAOzE,mBAAmBrQ,SAAU,GAC7B,OAGV,CACD3hB,IAAK,gBACLG,MAAO,SAAuBgxB,GAC5B,IAAI5e,EAASlS,OAAOqH,iBAAiBypB,GACjC3uB,EAAS2uB,EAAQyG,aACjBvoB,EAAQ8hB,EAAQoC,YAChBsE,EAAiBzd,WAAW7H,EAAOslB,gBAQvC,MAAO,CACLr1B,OAAQA,EARc4X,WAAW7H,EAAOulB,mBAQHD,EAPtBzd,WAAW7H,EAAOwlB,YACf3d,WAAW7H,EAAOylB,eAOpC3oB,MAAOA,EANa+K,WAAW7H,EAAO0lB,iBACjB7d,WAAW7H,EAAO2lB,kBACvB9d,WAAW7H,EAAOpD,aACjBiL,WAAW7H,EAAOnD,iBAMtC,CACDpP,IAAK,aACLG,MAAO,WACL,IAAIg4B,EAAU,QAAUx3B,KAAKkzB,kBAAoB,GAC7CuE,EAAS/3B,OAAOi0B,SAAS+D,KAAK/yB,MAAM,KAAK,GAAK,IAAM6yB,EACxDx3B,KAAKszB,aAAc,EAEftzB,KAAK23B,iBACPj4B,OAAO8sB,QAAQxsB,KAAKqzB,kBAAoB,eAAiB,aAAa,GAAInyB,SAAS02B,MAAOH,GAGtFz3B,KAAKqzB,kBACP3zB,OAAOi0B,SAAStpB,QAAQotB,GAExB/3B,OAAOi0B,SAAStD,KAAOmH,EAItBx3B,KAAKqzB,oBACRrzB,KAAK63B,gBAAiB,GAGxB73B,KAAKqzB,mBAAoB,IAE1B,CACDh0B,IAAK,YACLG,MAAO,WACLQ,KAAKszB,aAAc,EAEftzB,KAAK63B,eACPrL,QAAQsL,OAEJ93B,KAAK23B,iBACPnL,QAAQuL,UAAU,GAAI72B,SAAS02B,MAAOl4B,OAAOi0B,SAASqE,SAAWt4B,OAAOi0B,SAASsE,QAEjFv4B,OAAOi0B,SAAStD,KAAO,GAM3B6H,aAAal4B,KAAKm4B,wBAEnB,CACD94B,IAAK,YACLG,MAAO,WACL04B,aAAal4B,KAAKm4B,sBAEbn4B,KAAKqzB,kBAGRrzB,KAAKm4B,qBAAuBt3B,WAAWb,KAAKo4B,WAAWpzB,KAAKhF,MAAO,KAFnEA,KAAKo4B,eAKR,CACD/4B,IAAK,aACLG,MAAO,SAAoB41B,EAAaC,GACtC,IAAIgD,EAASr4B,KAETA,KAAK0M,QAAQoe,UAAYsK,GAA+B,KAAhBA,QAA6C,IAAhBA,IACvEp1B,KAAK41B,KAAK51B,KAAK0wB,SAASqB,SACxB/xB,KAAK0wB,SAASqB,QAAQlrB,MAAM6H,MAAQ2mB,EAAa,KACjDr1B,KAAK0wB,SAASqB,QAAQF,UAAYuD,EAClCp1B,KAAK0wB,SAASsB,MAAMjtB,YAAY/E,KAAK0wB,SAASqB,SAC9ClxB,YAAW,WACTw3B,EAAO1C,OAAO0C,EAAO3H,SAASqB,QAASsG,EAAO3rB,QAAQqgB,aACrD/sB,KAAK0M,QAAQqe,iBAGnB,CACD1rB,IAAK,QACLG,MAAO,SAAe8e,EAAOga,GAC3B,IAAKt4B,KAAKmwB,kBACR,OAAOnwB,KAAK0wB,SAASsB,MAAMnrB,MAAM8H,KAAO2pB,EAG1Ct4B,KAAK0wB,SAASsB,MAAMnrB,MAAM7G,KAAKiwB,iBAAmB,aAAe,cAAgBqI,EAAM,IACvFt4B,KAAK0wB,SAASsB,MAAMnrB,MAAM7G,KAAKiwB,iBAAmB,cAAgBjwB,KAAKiwB,iBAAmB,aAAe3R,EAAQ,aAElH,CACDjf,IAAK,aACLG,MAAO,SAAoBssB,GAWzB,OARIA,IAAe,IAARA,GAAyB,aAARA,EAClB1oB,MAAMyQ,KAAK7T,KAAKoW,UAAU5Q,QAAO,SAAUgrB,GACjD,OAAOA,EAAQhwB,aAAa,SAAWsrB,KAGjC9rB,KAAKoW,WAKhB,CACD/W,IAAK,YACLG,MAAO,SAAmBgxB,GACxB,IAAI+H,EAASv4B,KAEbwwB,EAAQ2C,cAAc,IAAIC,MAAM,QAAUpzB,KAAK6wB,iBAE3C7wB,KAAK0M,QAAQ0f,gBACfpsB,KAAKy1B,qBAAuBz1B,KAAKyzB,gBAAgB,SAG/CzzB,KAAK0M,QAAQkgB,WAAwC,KAA3B5sB,KAAK0M,QAAQkgB,WACzC1rB,SAASgH,cAAc,QAAQxH,UAAUC,IAAIX,KAAK0M,QAAQkgB,WAG5D1rB,SAASC,KAAK4D,YAAY/E,KAAK0wB,SAAShS,SACxC1e,KAAK0wB,SAAShS,QAAQ3Z,YAAY/E,KAAK0wB,SAASsB,OAE5ChyB,KAAK0M,QAAQie,SACfzpB,SAASC,KAAK4D,YAAY/E,KAAK0wB,SAAS/F,SAG1C3qB,KAAKgwB,gBAAkBhwB,KAAKswB,WAAWE,EAAQ1E,KAE3C9rB,KAAK0M,QAAQ8e,cACoB,GAA/BxrB,KAAKgwB,gBAAgBlxB,QAAekB,KAAK0wB,SAAShS,QAAQrX,SAASrH,KAAK0wB,SAASoB,SACnF9xB,KAAK0wB,SAAShS,QAAQnX,YAAYvH,KAAK0wB,SAASoB,SACvC9xB,KAAKgwB,gBAAgBlxB,OAAS,IAAMkB,KAAK0wB,SAAShS,QAAQrX,SAASrH,KAAK0wB,SAASoB,UAC1F9xB,KAAK0wB,SAAShS,QAAQ3Z,YAAY/E,KAAK0wB,SAASoB,UAIpD9xB,KAAKgxB,aAAc,EACnBhxB,KAAKkzB,kBAAoBlzB,KAAKgwB,gBAAgBpsB,QAAQ4sB,GACtD,IAAIgI,EAAYhI,EAAQhwB,aAAaR,KAAK0M,QAAQge,YAClD1qB,KAAKsxB,aAAepwB,SAAS0F,cAAc,OAC3C5G,KAAKsxB,aAAazqB,MAAMI,QAAU,OAClCjH,KAAKsxB,aAAa/qB,aAAa,MAAOiyB,GACtCx4B,KAAKsxB,aAAaK,QAAQiD,MAAQ,EAClC50B,KAAKsxB,aAAaK,QAAQkD,WAAa,EACvC70B,KAAKsxB,aAAaK,QAAQmD,WAAa,GAEO,IAA1C90B,KAAKi0B,aAAarwB,QAAQ40B,IAC5Bx4B,KAAKi0B,aAAapwB,KAAK20B,GAGzBx4B,KAAK0wB,SAASsB,MAAMH,UAAY,GAChC7xB,KAAK0wB,SAASsB,MAAMzrB,aAAa,QAAS,IAC1CvG,KAAK0wB,SAASsB,MAAMjtB,YAAY/E,KAAKsxB,cACrCtxB,KAAK21B,OAAO31B,KAAK0wB,SAAS/F,QAAS3qB,KAAK0M,QAAQqgB,WAChD/sB,KAAK21B,OAAO,CAAC31B,KAAK0wB,SAASoB,QAAS9xB,KAAK0wB,SAASE,WAAY5wB,KAAK0wB,SAASC,aAAc3wB,KAAK0M,QAAQqgB,WACvG/sB,KAAKq0B,KAAKr0B,KAAK0wB,SAASpgB,SACxBtQ,KAAK0wB,SAASoB,QAAQ5pB,cAAc,eAAe2pB,UAAY7xB,KAAKkzB,kBAAoB,EACxFlzB,KAAK0wB,SAASoB,QAAQ5pB,cAAc,aAAa2pB,UAAY7xB,KAAKgwB,gBAAgBlxB,OAClFkB,KAAKs0B,cAEDt0B,KAAK0M,QAAQkf,YACf5rB,KAAKu0B,UAGP1zB,YAAW,WACT2vB,EAAQ2C,cAAc,IAAIC,MAAM,SAAWmF,EAAO1H,mBACjD7wB,KAAK0M,QAAQif,kBAEjB,CACDtsB,IAAK,aACLG,MAAO,WACL,IAAIi5B,EAASz4B,KAEbA,KAAKkM,oBAAoBhL,SAAU,WAAalB,KAAK6wB,gBACrD7wB,KAAK2M,iBAAiBzL,SAAU,WAAalB,KAAK6wB,gBAAgB,SAAUnlB,GACtExK,WAAawK,EAAM/M,QAAU85B,EAAO/H,SAAShS,UAAYhT,EAAM/M,QAAW85B,EAAO/H,SAAShS,QAAQrX,SAASqE,EAAM/M,SACnH85B,EAAO/H,SAAShS,QAAQzC,aAK7B,CACD5c,IAAK,mBACLG,MAAO,SAA0B4W,EAAUtK,EAAQnD,EAAU+oB,GAC3Dtb,EAAWpW,KAAK04B,KAAKtiB,GACrBtK,EAAS9L,KAAK04B,KAAK5sB,GAEnB,IACI6sB,EADAC,EAAYxP,EAA2BhT,GAG3C,IACE,IAAKwiB,EAAU9O,MAAO6O,EAAQC,EAAU7iB,KAAKiQ,MAAO,CAClD,IAAIwK,EAAUmI,EAAMn5B,MAEfgxB,EAAQqI,aACXrI,EAAQqI,WAAa,IAIvB,IACIC,EADAC,EAAa3P,EAA2Btd,GAG5C,IACE,IAAKitB,EAAWjP,MAAOgP,EAASC,EAAWhjB,KAAKiQ,MAAO,CACrD,IAAIta,EAAQotB,EAAOt5B,MACfkN,EAAUglB,IAAQ,EACA,CAAC,aAAc,aAAa9tB,QAAQ8H,EAAM/G,MAAM,KAAK,KAAO,GAE3D3E,KAAK6vB,2BACD,WAArB7G,EAAQtc,GACVA,EAAQqU,SAAU,EAElBrU,EAAU,CACRqU,SAAS,IAKfyP,EAAQqI,WAAWntB,GAAS/C,EAC5B6nB,EAAQ7jB,iBAAiBjB,EAAM/G,MAAM,KAAK,GAAIgE,EAAU+D,IAE1D,MAAOud,GACP8O,EAAWlxB,EAAEoiB,GACd,QACC8O,EAAW/O,MAGf,MAAOC,GACP2O,EAAU/wB,EAAEoiB,GACb,QACC2O,EAAU5O,OAGb,CACD3qB,IAAK,sBACLG,MAAO,SAA6B4W,EAAUtK,GAC5CsK,EAAWpW,KAAK04B,KAAKtiB,GACrBtK,EAAS9L,KAAK04B,KAAK5sB,GAEnB,IACIktB,EADAC,EAAa7P,EAA2BhT,GAG5C,IACE,IAAK6iB,EAAWnP,MAAOkP,EAASC,EAAWljB,KAAKiQ,MAAO,CACrD,IAGIkT,EAHA1I,EAAUwI,EAAOx5B,MAEjB25B,EAAa/P,EAA2Btd,GAG5C,IACE,IAAKqtB,EAAWrP,MAAOoP,EAASC,EAAWpjB,KAAKiQ,MAAO,CACrD,IAAIta,EAAQwtB,EAAO15B,MAEfgxB,EAAQqI,YAAcrI,EAAQqI,WAAWntB,KAC3C8kB,EAAQtkB,oBAAoBR,EAAM/G,MAAM,KAAK,GAAI6rB,EAAQqI,WAAWntB,WAC7D8kB,EAAQqI,WAAWntB,KAG9B,MAAOue,GACPkP,EAAWtxB,EAAEoiB,GACd,QACCkP,EAAWnP,MAGf,MAAOC,GACPgP,EAAWpxB,EAAEoiB,GACd,QACCgP,EAAWjP,OAGd,CACD3qB,IAAK,UACLG,MAAO,SAAiB4W,EAAUnI,EAAUtF,GAC1C,IAKIywB,EALAC,EAAUr5B,KAIVs5B,EAAalQ,EAFjBhT,EAAWpW,KAAK04B,KAAKtiB,IAKrB,IACE,IAAKkjB,EAAWxP,MAAOsP,EAASE,EAAWvjB,KAAKiQ,MAChCoT,EAAO55B,MACbqH,MAAM6vB,QAAU,EAE1B,MAAOzM,GACPqP,EAAWzxB,EAAEoiB,GACd,QACCqP,EAAWtP,IAGbhqB,KAAKu5B,UAAW,EAEhB,IAAInP,EAAO,UAAYnc,GAAYjO,KAAK0M,QAAQqgB,YACrC,SAASyM,IAClB,IAAIC,EAAiBhgB,WAAWrD,EAAS,GAAGvP,MAAM6vB,SAElD,IAAK+C,GAAkBrP,GAAQ,EAAG,CAChC,IACIsP,EADAC,EAAavQ,EAA2BhT,GAG5C,IACE,IAAKujB,EAAW7P,MAAO4P,EAASC,EAAW5jB,KAAKiQ,MAAO,CACrD,IAAIwK,EAAUkJ,EAAOl6B,MACrBgxB,EAAQ3pB,MAAMI,QAAU,OAExBupB,EAAQ3pB,MAAM6vB,QAAU,GAE1B,MAAOzM,GACP0P,EAAW9xB,EAAEoiB,GACd,QACC0P,EAAW3P,IAGbrhB,GAAYA,EAAStE,KAAKg1B,EAASjjB,OAC9B,CACL,IACIwjB,EADAC,EAAazQ,EAA2BhT,GAG5C,IACE,IAAKyjB,EAAW/P,MAAO8P,EAASC,EAAW9jB,KAAKiQ,MAC/B4T,EAAOp6B,MACbqH,MAAM6vB,QAAU+C,EAE3B,MAAOxP,GACP4P,EAAWhyB,EAAEoiB,GACd,QACC4P,EAAW7P,IAGbjhB,sBAAsBywB,IAI1BA,KAED,CACDn6B,IAAK,SACLG,MAAO,SAAgB4W,EAAUnI,EAAUtF,EAAU1B,GACnD,IAKI6yB,EALAC,EAAU/5B,KAIVg6B,EAAa5Q,EAFjBhT,EAAWpW,KAAK04B,KAAKtiB,IAKrB,IACE,IAAK4jB,EAAWlQ,MAAOgQ,EAASE,EAAWjkB,KAAKiQ,MAAO,CACrD,IAAIwK,EAAUsJ,EAAOt6B,MACrBgxB,EAAQ3pB,MAAM6vB,QAAU,EACxBlG,EAAQ3pB,MAAMI,QAAUA,GAAW,SAErC,MAAOgjB,GACP+P,EAAWnyB,EAAEoiB,GACd,QACC+P,EAAWhQ,IAGbhqB,KAAKu5B,UAAW,EAEhB,IAAI3H,EAAgBnY,WAAWrD,EAAS,GAAGub,QAAQC,eAAiB,GAChExH,EAAO,SAAWwH,GAAiB3jB,GAAYjO,KAAK0M,QAAQqgB,YACrD,SAASyM,IAClB,IAAIC,EAAiBhgB,WAAWrD,EAAS,GAAGvP,MAAM6vB,SAElD,IAAO+C,GAAkBrP,GAAQwH,EAiB1B,CACL,IACIqI,EADAC,EAAc9Q,EAA2BhT,GAG7C,IACE,IAAK8jB,EAAYpQ,MAAOmQ,EAAUC,EAAYnkB,KAAKiQ,MACjCiU,EAAQz6B,MACdqH,MAAM6vB,QAAU,GAE5B,MAAOzM,GACPiQ,EAAYryB,EAAEoiB,GACf,QACCiQ,EAAYlQ,IAGdrhB,GAAYA,EAAStE,KAAK01B,EAAS3jB,OAhCY,CAC/C,IACI+jB,EADAC,EAAahR,EAA2BhT,GAG5C,IACE,IAAKgkB,EAAWtQ,MAAOqQ,EAASC,EAAWrkB,KAAKiQ,MAChCmU,EAAO36B,MACbqH,MAAM6vB,QAAU+C,EAE1B,MAAOxP,GACPmQ,EAAWvyB,EAAEoiB,GACd,QACCmQ,EAAWpQ,IAGb,IAAK+P,EAAQR,SAAU,OACvBxwB,sBAAsBywB,IAoB1BA,KAED,CACDn6B,IAAK,OACLG,MAAO,SAAc4W,GAGnB,IACIikB,EADAC,EAAclR,EAFlBhT,EAAWpW,KAAK04B,KAAKtiB,IAKrB,IACE,IAAKkkB,EAAYxQ,MAAOuQ,EAAUC,EAAYvkB,KAAKiQ,MAAO,CACxD,IAAIwK,EAAU6J,EAAQ76B,MAEO,QAAzBgxB,EAAQ3pB,MAAMI,UAChBupB,EAAQmB,QAAQ4I,eAAiB/J,EAAQ3pB,MAAMI,SAGjDupB,EAAQ3pB,MAAMI,QAAU,QAE1B,MAAOgjB,GACPqQ,EAAYzyB,EAAEoiB,GACf,QACCqQ,EAAYtQ,OAGf,CACD3qB,IAAK,OACLG,MAAO,SAAc4W,EAAUnP,GAG7B,IACIuzB,EADAC,EAAcrR,EAFlBhT,EAAWpW,KAAK04B,KAAKtiB,IAKrB,IACE,IAAKqkB,EAAY3Q,MAAO0Q,EAAUC,EAAY1kB,KAAKiQ,MAAO,CACxD,IAAIwK,EAAUgK,EAAQh7B,MACtBgxB,EAAQ3pB,MAAMI,QAAUupB,EAAQmB,QAAQ4I,gBAAkBtzB,GAAW,SAEvE,MAAOgjB,GACPwQ,EAAY5yB,EAAEoiB,GACf,QACCwQ,EAAYzQ,OAGf,CACD3qB,IAAK,OACLG,MAAO,SAAck7B,GACnB,MAAyC,mBAA3BA,EAAMzR,OAAOC,WAA6C,iBAAVwR,EAAqBA,EAAQ,CAACA,KAE7F,CACDr7B,IAAK,KACLG,MAAO,SAAYsM,EAAQnD,GACzBmD,EAAS9L,KAAK04B,KAAK5sB,GAEnB,IACI6uB,EADAC,EAAcxR,EAA2BppB,KAAKoW,UAGlD,IACE,IAAKwkB,EAAY9Q,MAAO6Q,EAAUC,EAAY7kB,KAAKiQ,MAAO,CACxD,IAAIwK,EAAUmK,EAAQn7B,MAEjBgxB,EAAQqK,wBACXrK,EAAQqK,sBAAwB,IAGlC,IACIC,EADAC,EAAc3R,EAA2Btd,GAG7C,IACE,IAAKivB,EAAYjR,MAAOgR,EAAUC,EAAYhlB,KAAKiQ,MAAO,CACxD,IAAIta,EAAQovB,EAAQt7B,MACpBgxB,EAAQqK,sBAAsBnvB,GAAS/C,EACvC6nB,EAAQ7jB,iBAAiBjB,EAAO/C,IAElC,MAAOshB,GACP8Q,EAAYlzB,EAAEoiB,GACf,QACC8Q,EAAY/Q,MAGhB,MAAOC,GACP2Q,EAAY/yB,EAAEoiB,GACf,QACC2Q,EAAY5Q,IAGd,OAAOhqB,OAER,CACDX,IAAK,MACLG,MAAO,SAAasM,GAClBA,EAAS9L,KAAK04B,KAAK5sB,GAEnB,IACIkvB,EADAC,EAAc7R,EAA2BppB,KAAKoW,UAGlD,IACE,IAAK6kB,EAAYnR,MAAOkR,EAAUC,EAAYllB,KAAKiQ,MAAO,CACxD,IAGIkV,EAHA1K,EAAUwK,EAAQx7B,MAElB27B,EAAc/R,EAA2Btd,GAG7C,IACE,IAAKqvB,EAAYrR,MAAOoR,EAAUC,EAAYplB,KAAKiQ,MAAO,CACxD,IAAIta,EAAQwvB,EAAQ17B,WAEyB,IAAlCgxB,EAAQqK,uBAAyCnvB,KAAS8kB,EAAQqK,uBAC3ErK,EAAQtkB,oBAAoBR,EAAO8kB,EAAQqK,sBAAsBnvB,KAGrE,MAAOue,GACPkR,EAAYtzB,EAAEoiB,GACf,QACCkR,EAAYnR,MAGhB,MAAOC,GACPgR,EAAYpzB,EAAEoiB,GACf,QACCgR,EAAYjR,IAGd,OAAOhqB,OAGR,CACDX,IAAK,OACLG,MAAO,SAAc47B,GACnBA,EAAOA,GAAQp7B,KAAKoW,SAAS,GAEP,oBAAXilB,QAA0BD,aAAgBC,SACnDD,EAAOA,EAAK5jB,IAAI,IAGlBxX,KAAKixB,kBAAoBjxB,KAAKoW,SAASxS,QAAQw3B,GAE3Cp7B,KAAKixB,mBAAqB,GAC5BjxB,KAAKkxB,UAAUkK,KAGlB,CACD/7B,IAAK,OACLG,MAAO,WACLQ,KAAKuxB,UAAU,KAEhB,CACDlyB,IAAK,OACLG,MAAO,WACLQ,KAAKuxB,WAAW,KAGjB,CACDlyB,IAAK,iBACLG,MAAO,WACL,MAAO,CACL0zB,kBAAmBlzB,KAAKkzB,kBACxB5B,aAActxB,KAAKsxB,aACnBmE,qBAAsBz1B,KAAKy1B,wBAI9B,CACDp2B,IAAK,UACLG,MAAO,WAELQ,KAAKwM,IAAI,CAAC,SAAWxM,KAAK6wB,eAAgB,UAAY7wB,KAAK6wB,eAAgB,mBAAqB7wB,KAAK6wB,eAAgB,mBAAqB7wB,KAAK6wB,eAAgB,UAAY7wB,KAAK6wB,eAAgB,YAAc7wB,KAAK6wB,eAAgB,YAAc7wB,KAAK6wB,eAAgB,SAAW7wB,KAAK6wB,eAAgB,WAAa7wB,KAAK6wB,eAAgB,QAAU7wB,KAAK6wB,eAAgB,QAAU7wB,KAAK6wB,eAAgB,QAAU7wB,KAAK6wB,eAAgB,SAAW7wB,KAAK6wB,iBACrb7wB,KAAKkM,oBAAoBlM,KAAKoW,SAAU,SAAWpW,KAAK6wB,gBACxD7wB,KAAKkM,oBAAoBhL,SAAU,WAAalB,KAAK6wB,gBACrD7wB,KAAKkM,oBAAoBhL,SAASC,KAAM,eAAiBnB,KAAK6wB,gBAC9D7wB,KAAKkM,oBAAoBhL,SAASC,KAAM,SAAWnB,KAAK6wB,gBACxD7wB,KAAKkM,oBAAoBlM,KAAK0wB,SAASE,WAAWoF,qBAAqB,UAAW,SAAWh2B,KAAK6wB,gBAClG7wB,KAAKkM,oBAAoBlM,KAAK0wB,SAASC,YAAa,SAAW3wB,KAAK6wB,gBACpE7wB,KAAKkM,oBAAoBxM,OAAQ,UAAYM,KAAK6wB,gBAClD7wB,KAAKkM,oBAAoBxM,OAAQ,cAAgBM,KAAK6wB,gBACtD7wB,KAAKqrB,QAEDrrB,KAAKmxB,SACPjwB,SAASC,KAAKoG,YAAYvH,KAAK0wB,SAAShS,SACxCxd,SAASC,KAAKoG,YAAYvH,KAAK0wB,SAAS/F,UAG1C3qB,KAAKoW,SAAW,OAEjB,CACD/W,IAAK,UACLG,MAAO,WACL,IAAKQ,KAAK+vB,gBACR,KAAM,8DAGR,IAAIrjB,EAAU1M,KAAK0M,QACfnH,EAAWvF,KAAK+vB,gBAGpB,OAFA/vB,KAAKmM,UACLnM,KAAKmpB,YAAY5jB,EAAUmH,GACpB1M,UA3sDiEtB,EAAkBF,EAAYwF,UAAWukB,GAAiBC,GAAa9pB,EAAkBF,EAAagqB,GA+sD3KiC,EA3sDyB,GA8sD9B6Q,EAAW7Q,EACf1B,EAAiB,QAAIuS,EACrB3S,GAAO8B,eAAiBA,ELs3BY8Q,CAA1B1S,GAAS,CAAEE,QAAS,IAAiBF,GAAOE,SAAUF,GAAOE,SMjmFvE,KN4lF0Bjf,GAkvDWgf,KAjvDtBhf,GAAE0xB,YAAcr8B,OAAO6E,UAAUy3B,eAAep3B,KAAKyF,GAAG,WAAaA,GAAW,QAAIA,IM7lFhF,qBAAsB;;;;;;;ACIzC,MAAM4xB,GAAgB,MAMlB,MAAMC,EAAY,iBAGZ7V,EAAW,CAKf8V,WAAY,EAMZC,cAAe,EAMfC,mBAAmB,EAKnBC,iBAAiB,EAMjBC,qBAAsB,wBAMtBC,YAAa,aAMbC,UAAU,GAWZ,MAAMR,EAQJpV,YAAY6V,EAASzvB,EAAU,IAK7B,GAJA1M,KAAK0M,QAAUgvB,EAAcU,OAAOtW,EAAUpZ,GAG9C1M,KAAKm8B,QAAW,iBAAoBA,EAAYj7B,SAASgH,cAAci0B,GAAWA,OAC9E,IAAuBn8B,KAAKm8B,QAC9B,MAAM,IAAI1zB,MAAM,yCAElBzI,KAAKq8B,cAAe,EACpBr8B,KAAK8R,UAAY9R,KAAKm8B,QAAQzX,cAG9B1kB,KAAKs8B,YAAc,SACnBt8B,KAAKkW,UAAY,OACjBlW,KAAKu8B,QAAU,CACblhB,WAAa,EACbmhB,aAAa,GAGfx8B,KAAKy8B,cAAe,EACpBz8B,KAAK08B,UAAW,EAChB18B,KAAK28B,aAAc,EAGnB38B,KAAK48B,WAAa,CAChB9H,WAAY,EACZ+H,cAAe,EACfjB,WAAY,EACZkB,eAAgB,EAChBjB,cAAe,EACfkB,kBAAmB,EACnBC,cAAe,EACfC,aAAc,EACdC,aAAc,EACdpP,gBAAiB,EACjBqP,eAAgB,EAChBC,YAAa,EACbC,gBAAiB,GAInB,CAAC,eAAe57B,SAAU67B,IACxBt9B,KAAKs9B,GAAUt9B,KAAKs9B,GAAQt4B,KAAKhF,SAInCA,KAAKu9B,aAQPjX,aAWE,GAVAtmB,KAAKw9B,sBAGDx9B,KAAK0M,QAAQsvB,uBACfh8B,KAAKq8B,aAAer8B,KAAKm8B,QAAQj0B,cAAclI,KAAK0M,QAAQsvB,sBAExD,OAASh8B,KAAKq8B,eAChBr8B,KAAKq8B,cAAe,KAGlBr8B,KAAKq8B,aAAc,CACvB,IAAI3d,EAAUxd,SAAS0F,cAAc,OAIrC,IAHA8X,EAAQnY,aAAa,QAAS,wBAC9BvG,KAAKm8B,QAAQp3B,YAAY2Z,GAElB1e,KAAKm8B,QAAQsB,YAAc/e,GAChCA,EAAQ3Z,YAAY/E,KAAKm8B,QAAQsB,YAEnCz9B,KAAKq8B,aAAer8B,KAAKm8B,QAAQj0B,cAAc,yBAIjD,GAAIlI,KAAK0M,QAAQovB,kBAAmB,CAClC,IAAI4B,EAAax8B,SAASI,iBAAiBtB,KAAK0M,QAAQovB,mBAQxD,GAPA4B,EAAat6B,MAAMY,UAAUC,MAAMI,KAAKq5B,GAExCA,EAAWj8B,SAAQ,CAACqQ,EAAWmD,KACvBnD,EAAUzK,SAASrH,KAAKm8B,WAC9Bn8B,KAAK8R,UAAYA,OAGb4rB,EAAW5+B,OACf,MAAM,IAAI2J,MAAM,mDAIpBzI,KAAK+7B,gBAAkB/7B,KAAK0M,QAAQqvB,gBAAkB76B,SAASgH,cAAclI,KAAK0M,QAAQqvB,sBAAmBxF,EAGzG,mBAAsBv2B,KAAK0M,QAAQkvB,aACrC57B,KAAK0M,QAAQkvB,WAAa76B,SAASf,KAAK0M,QAAQkvB,aAAe,GAE7D,mBAAsB57B,KAAK0M,QAAQmvB,gBACrC77B,KAAK0M,QAAQmvB,cAAgB96B,SAASf,KAAK0M,QAAQmvB,gBAAkB,GAGvE77B,KAAK29B,mBAGL39B,KAAK49B,iBAGL59B,KAAK69B,iBAGL79B,KAAK89B,aAGL99B,KAAKy8B,cAAe,EAOtBnW,aAQE,GAPAtmB,KAAK+9B,YAAc/9B,KAAK+7B,gBAAkB/7B,KAAK+7B,gBAAkBr8B,OAEjEM,KAAK+9B,YAAYpxB,iBAAiB,SAAU3M,KAAM,CAAE+gB,SAAS,EAAMC,SAAS,IAC5EhhB,KAAK+9B,YAAYpxB,iBAAiB,SAAU3M,KAAM,CAAE+gB,SAAS,EAAMC,SAAS,IAE5EhhB,KAAKm8B,QAAQxvB,iBAAiB,SAAWgvB,EAAW37B,MAEhD,oBAAuBg+B,eAAgB,CACzC,MAAMC,EAAiB,IAAID,gBAAe,IAAMh+B,KAAKk+B,gBACrDD,EAAe97B,QAAQnC,KAAKq8B,cAC5B4B,EAAe97B,QAAQnC,KAAK8R,YAQhCwU,YAAY5a,GACV1L,KAAKm+B,aAAazyB,GAOpB4a,iBACE,IAAItmB,KAAK28B,YAAT,CACA,IAAIyB,EAAOp+B,KAAK48B,WAGhBwB,EAAKlB,aAAkBxB,EAAc2C,eAAer+B,KAAK8R,WAAW0jB,IACpE4I,EAAKtQ,gBAAkB9tB,KAAK8R,UAAUwsB,aACtCF,EAAKG,gBAAkBH,EAAKlB,aAAekB,EAAKtQ,gBAGhDsQ,EAAKpB,cAAgBh9B,KAAKq8B,aAAapF,aACvCmH,EAAKnB,aAAgBj9B,KAAKq8B,aAAazJ,YAGvCwL,EAAKjB,eAAiBz9B,OAAOoC,YAG7Bs8B,EAAKvB,cAAgBuB,EAAKtQ,gBAAkBsQ,EAAKpB,cAEjDh9B,KAAKw+B,6BAOPlY,4BACE,IAAI8X,EAAOp+B,KAAK48B,WAEhBwB,EAAKK,YAAc/C,EAAc2C,eAAer+B,KAAKm8B,SAASxtB,KAE1D3O,KAAK+7B,iBACPqC,EAAKhB,YAAcp9B,KAAK+7B,gBAAgB2C,UACxCN,EAAKO,aAAe3+B,KAAK+7B,gBAAgB6C,aAEzCR,EAAKhB,YAAcl8B,SAASixB,gBAAgBuM,WAAax9B,SAASC,KAAKu9B,UACvEN,EAAKO,aAAez9B,SAASixB,gBAAgByM,YAAc19B,SAASC,KAAKy9B,YAE3ER,EAAKS,eAAiBT,EAAKhB,YAAcgB,EAAKjB,eAE9CiB,EAAKxC,WAAgB57B,KAAK0M,QAAQkvB,WAClCwC,EAAKvC,cAAgB77B,KAAK0M,QAAQmvB,cAE9B,mBAAsBuC,EAAKxC,aAC3BwC,EAAKxC,WAAa76B,SAASq9B,EAAKxC,WAAW57B,KAAKm8B,WAAa,GAE7D,mBAAsBiC,EAAKvC,gBAC3BuC,EAAKvC,cAAgB96B,SAASq9B,EAAKvC,cAAc77B,KAAKm8B,WAAa,GAEnE,iBAAmBn8B,KAAKs8B,YAEtB8B,EAAKxC,WAAawC,EAAKtB,iBACzBsB,EAAKtJ,YAAcsJ,EAAKtB,eAAiBsB,EAAKxC,WAC9C57B,KAAK08B,UAAW,GAET,oBAAsB18B,KAAKs8B,aAEhC8B,EAAKvC,cAAgBuC,EAAKrB,oBAC5BqB,EAAKtJ,YAAcsJ,EAAKrB,kBAAoBqB,EAAKvC,cACjD77B,KAAK08B,UAAW,GAIpB0B,EAAKtB,eAAoBsB,EAAKxC,WAC9BwC,EAAKrB,kBAAoBqB,EAAKvC,cAQhCvV,wBACE,OAAOtmB,KAAK48B,WAAWO,gBACrBn9B,KAAK48B,WAAWG,kBAChB/8B,KAAK48B,WAAWE,eAChB98B,KAAK48B,WAAWI,cAOpB1W,mBACE,IAAI8X,EAAOp+B,KAAK48B,WAChB,GAAIwB,EAAKf,kBAAoBe,EAAKhB,YAAlC,CAEA,IAAI0B,EAAW,SAAW9+B,KAAKkW,UAAY7M,KAAKL,IAAMK,KAAKJ,IAGvDm1B,EAAKhB,cAAgB0B,EAASV,EAAKhB,YAAagB,EAAKf,mBACvDr9B,KAAKkW,UAAY,SAAWlW,KAAKkW,UAAa,KAAO,SAQzDoQ,eACEtmB,KAAKw+B,4BACL,IAAIJ,EAAOp+B,KAAK48B,WACZmC,EAAcX,EAAKhB,YAAcgB,EAAKxC,WACtCoD,EAAYh/B,KAAKs8B,YAgBrB,OAdGyC,GAAeX,EAAKlB,cAAgBkB,EAAKtQ,iBAAmBsQ,EAAKpB,eAClEoB,EAAKtJ,WAAa,EAClBkK,EAAY,UAEZA,EAAc,OAASh/B,KAAKkW,UAC1BlW,KAAKi/B,2BAA6Bj/B,KAAKk/B,6BAI3Cd,EAAKtJ,WAAazrB,KAAKJ,IAAI,EAAGm1B,EAAKtJ,YACnCsJ,EAAKtJ,WAAazrB,KAAKL,IAAIo1B,EAAKtQ,gBAAiBsQ,EAAKtJ,YACtDsJ,EAAKtJ,WAAazrB,KAAK81B,MAAMf,EAAKtJ,YAElCsJ,EAAKf,gBAAkBe,EAAKhB,YACrB4B,EAQT1Y,6BACE,IAAI8X,EAAOp+B,KAAK48B,WACZwC,EAAgBhB,EAAKpB,cAAgBoB,EAAKlB,aAC1C6B,EAAcX,EAAKhB,YAAcgB,EAAKxC,WACtCyD,EAAiBjB,EAAKS,eAAiBT,EAAKvC,cAC5CmD,EAAYh/B,KAAKs8B,YA0BrB,OAxBIt8B,KAAKs/B,wBACHlB,EAAKpB,cAAgB+B,GAAeX,EAAKG,iBAC3CH,EAAKtJ,WAAasJ,EAAKG,gBAAkBa,EACzCJ,EAAY,oBAEHD,GAAeX,EAAKlB,eAC7BkB,EAAKtJ,WAAaiK,EAAcX,EAAKlB,aACrC8B,EAAY,gBAGVZ,EAAKG,iBAAmBc,GAC1BjB,EAAKtJ,WAAasJ,EAAKG,gBAAkBa,EACzCJ,EAAY,oBAEHI,EAAgBhB,EAAKtJ,YAAcuK,GAC5CjB,EAAKtJ,WAAauK,EAAiBD,EACnCJ,EAAY,mBAEHZ,EAAKlB,aAAekB,EAAKtJ,YAAciK,GAC/C,IAAMX,EAAKtJ,YAAcsJ,EAAKvB,gBAAkBuB,EAAKtJ,aACtDkK,EAAY,qBAITA,EAQT1Y,2BACE,IAAI8X,EAAOp+B,KAAK48B,WACZwC,EAAgBhB,EAAKpB,cAAgBoB,EAAKlB,aAC1C6B,EAAcX,EAAKhB,YAAcgB,EAAKxC,WACtCyD,EAAiBjB,EAAKS,eAAiBT,EAAKvC,cAC5CmD,EAAYh/B,KAAKs8B,YAkBrB,OAhBIyC,GAAeX,EAAKtJ,WAAasJ,EAAKlB,cACxCkB,EAAKtJ,WAAaiK,EAAcX,EAAKlB,aACrC8B,EAAY,gBAEHZ,EAAKG,iBAAmBc,GACjCjB,EAAKtJ,WAAasJ,EAAKG,gBAAkBa,EACzCJ,EAAY,oBAEDh/B,KAAKs/B,yBAEZlB,EAAKlB,cAAgB6B,GACpB,IAAMX,EAAKtJ,YAAcsJ,EAAKvB,gBAAkBuB,EAAKtJ,aACxDkK,EAAY,qBAITA,EAUT1Y,UAAU0Y,GACR,QAAI,IAAuBA,EAA3B,CAEA,IAAIn4B,EAAQ,CAAC04B,MAAO,GAAIC,MAAO,IAC3BpB,EAAOp+B,KAAK48B,WAEhB,OAAQoC,GACN,IAAK,eACHn4B,EAAM04B,MAAQ,CAACpkB,SAAU,QAASqa,IAAK4I,EAAKxC,WACtCjtB,KAAMyvB,EAAKK,YAAcL,EAAKO,aAAcjwB,MAAO0vB,EAAKnB,cAC9D,MACF,IAAK,kBACHp2B,EAAM04B,MAAQ,CAACpkB,SAAU,QAASqa,IAAK,OAAQ7mB,KAAMyvB,EAAKK,YACpDgB,OAAQrB,EAAKvC,cAAentB,MAAO0vB,EAAKnB,cAC9C,MACF,IAAK,mBACL,IAAK,oBACH,IAAIhiB,EAAYjb,KAAK0/B,cAAc,EAAGtB,EAAKtJ,WAAa,MAGtDjuB,EAAM04B,MADJtkB,EACY,CAACI,UAAWJ,GAEZ,CAACE,SAAU,WAAYqa,IAAK4I,EAAKtJ,WAAYpmB,MAAO0vB,EAAKnB,cAI7E,OAAQ+B,GACN,IAAK,eACL,IAAK,kBACL,IAAK,oBACL,IAAK,mBACHn4B,EAAM24B,MAAQ,CAAC39B,OAAQu8B,EAAKpB,cAAe7hB,SAAU,YAQzD,OAJAtU,EAAM24B,MAAQ9D,EAAcU,OAAO,CAACv6B,OAAQ,GAAIsZ,SAAU,IAAKtU,EAAM24B,OACrE34B,EAAM04B,MAAQ7D,EAAcU,OAAO,CAACjhB,SAAU,WAAYqa,IAAK,GAAI7mB,KAAM,GACrE8wB,OAAQ,GAAI/wB,MAAO,GAAK2M,UAAW,IAAKxU,EAAM04B,OAE3C14B,GAUTyf,eAAeqZ,GACb,IAAI3/B,KAAK28B,YAAT,CAEAgD,EAAQ3/B,KAAK08B,UAAYiD,IAAS,EAElB3/B,KAAK0M,QAAQkvB,WACV57B,KAAK0M,QAAQmvB,cAEhC,IAAImD,EAAYh/B,KAAK4/B,eACjB/4B,EAAQ7G,KAAK6/B,UAAUb,GAE3B,IAAKh/B,KAAKs8B,aAAe0C,GAAaW,IAAUX,EAAW,CACzD,IAAIc,EAAa,SAAWd,EAAUe,cAAc11B,QAAQ,YAAa,IAAMsxB,EAC/ED,EAAcsE,aAAahgC,KAAKm8B,QAAS2D,GAErC,WAAad,EACftD,EAActzB,YAAYpI,KAAKm8B,QAASn8B,KAAK0M,QAAQuvB,aAErDP,EAAch3B,SAAS1E,KAAKm8B,QAASn8B,KAAK0M,QAAQuvB,aAEpD,IAAK,IAAI58B,KAAOwH,EAAM24B,MAAO,CAC3B,IAAIn3B,EAAQ,iBAAoBxB,EAAM24B,MAAMngC,GAAQ,KAAO,GAC3DW,KAAKm8B,QAAQt1B,MAAMxH,GAAOwH,EAAM24B,MAAMngC,GAAOgJ,EAG/C,IAAK,IAAIhJ,KAAOwH,EAAM04B,MAAO,CAC3B,IAAIl3B,EAAQ,iBAAoBxB,EAAM04B,MAAMlgC,GAAQ,KAAO,GAC3DW,KAAKq8B,aAAax1B,MAAMxH,GAAOwH,EAAM04B,MAAMlgC,GAAOgJ,EAGpD,IAAI43B,EAAe,WAAYjB,EAAUe,cAAc11B,QAAQ,YAAa,IAAMsxB,EAClFD,EAAcsE,aAAahgC,KAAKm8B,QAAS8D,QAErCjgC,KAAKy8B,eAAez8B,KAAKq8B,aAAax1B,MAAM8H,KAAO9H,EAAM04B,MAAM5wB,MAGrE3O,KAAKs8B,YAAc0C,GAOrB1Y,mBAEM5mB,OAAO6yB,YAAcvyB,KAAK0M,QAAQwvB,UACpCl8B,KAAK28B,aAAc,EACnB38B,KAAKs8B,YAAc,SAEnBt8B,KAAKm8B,QAAQ/1B,gBAAgB,SAC7Bs1B,EAActzB,YAAYpI,KAAKm8B,QAASn8B,KAAK0M,QAAQuvB,aACrDj8B,KAAKq8B,aAAaj2B,gBAAgB,UAElCpG,KAAK28B,aAAc,EASvBrW,aAAa5a,EAAQ,IACf1L,KAAKkgC,WACTlgC,KAAKkgC,UAAW,EAEhB,CAAEC,IACAp3B,uBAAsB,KACpB,OAAQo3B,GAGN,IAAK,SACHngC,KAAKw+B,4BACLx+B,KAAKogC,mBACLpgC,KAAK69B,iBACL,MAIF,IAAK,SACL,QACE79B,KAAK29B,mBACL39B,KAAK49B,iBACL59B,KAAK69B,gBAAe,GAGxB79B,KAAKkgC,UAAW,MApBpB,CAsBGx0B,EAAMzK,OAOXqlB,sBACE,IAAIiW,EAAUv8B,KAAKu8B,QAEnBA,EAAQlhB,UAAYqgB,EAAc2E,mBAClC9D,EAAQC,YAAcd,EAAc2E,kBAAiB,GAWvD/Z,cAAcvc,EAAI,EAAGD,EAAI,EAAGw2B,EAAI,GAC9B,OAAItgC,KAAKu8B,QAAQC,YAAqB,eAAiBzyB,EAAG,KAAMD,EAAG,KAAMw2B,EAAG,MACnEtgC,KAAKu8B,QAAQthB,WAAmB,aAAclR,EAAG,KAAMD,EAAG,IAQrEwc,UACE5mB,OAAOwM,oBAAoB,SAAUlM,KAAM,CAACghB,SAAS,IACrDthB,OAAOwM,oBAAoB,SAAUlM,KAAM,CAACghB,SAAS,IAErDhhB,KAAKm8B,QAAQz7B,UAAUU,OAAOpB,KAAK0M,QAAQuvB,aAC3Cj8B,KAAKm8B,QAAQt1B,MAAM05B,UAAY,GAE/BvgC,KAAKm8B,QAAQjwB,oBAAoB,SAAWyvB,EAAW37B,MAEvD,IAAIwgC,EAAa,CAACjB,MAAO,GAAIC,MAAO,IAEpCgB,EAAWjB,MAAQ,CAACpkB,SAAU,GAAIqa,IAAK,GAAI7mB,KAAM,GAAI8wB,OAAQ,GAAI/wB,MAAO,GAAK2M,UAAW,IACxFmlB,EAAWhB,MAAQ,CAAC39B,OAAQ,GAAIsZ,SAAU,IAE1C,IAAK,IAAI9b,KAAOmhC,EAAWhB,MACzBx/B,KAAKm8B,QAAQt1B,MAAMxH,GAAOmhC,EAAWhB,MAAMngC,GAE7C,IAAK,IAAIA,KAAOmhC,EAAWjB,MACzBv/B,KAAKq8B,aAAax1B,MAAMxH,GAAOmhC,EAAWjB,MAAMlgC,GAE9CW,KAAK0M,QAAQ+zB,cAAgB,oBAAuBC,eACtDA,aAAaC,OAAO3gC,KAAKq8B,aAAcr8B,KAAKk+B,aAC5CwC,aAAaC,OAAO3gC,KAAK8R,UAAW9R,KAAKk+B,cAW7C5X,wBAAwBkW,GACtB,IAAIoE,GAAS,EACTC,EAAW,EAAgB,cAAgB,YAC3CC,EAAQD,EAASE,OAAO,GAAGC,cAAgBH,EAAS58B,MAAM,GAG1D4C,EADU3F,SAAS0F,cAAc,WACjBC,MAQpB,OANCg6B,EAAW,IAJG,CAAC,SAAU,MAAO,IAAK,MAIXptB,KAAKqtB,EAAQ,KAAOA,GAAOn8B,MAAM,KAAKlD,SAAQ,SAASo/B,EAAUhiC,GAC1F,QAAwB03B,IAApB1vB,EAAMg6B,GAER,OADAD,EAASC,GACF,KAGJD,EAUTta,oBAAoBkK,EAASyQ,EAAW70B,GACtC,IACE,IAAIV,EAAQ,IAAIw1B,YAAYD,EAAW,CAACzK,OAAQpqB,IAChD,MAAMvE,IACF6D,EAAQxK,SAASigC,YAAY,gBAC3BC,gBAAgBH,GAAW,GAAM,EAAM70B,GAE/CokB,EAAQ2C,cAAcznB,GAQxB4a,cAAcoB,EAAUhb,GACtB,IAAI20B,EAAU,GACd,IAAK,IAAIhiC,KAAOqoB,OACV,IAAuBhb,EAAQrN,GAAOgiC,EAAQhiC,GAAOqN,EAAQrN,GAC5DgiC,EAAQhiC,GAAOqoB,EAASroB,GAE/B,OAAOgiC,EAOT/a,sBAAsBkK,GACpB,IAAIoQ,EAAS,CAACjyB,KAAM,EAAG6mB,IAAK,GAE5B,EAAE,CACA,IAAIY,EAAY5F,EAAQ4F,UACpBD,EAAa3F,EAAQ2F,WAEnBmL,MAAMlL,KACVwK,EAAOpL,KAAOY,GAEVkL,MAAMnL,KACVyK,EAAOjyB,MAAQwnB,GAEjB3F,EAAY,SAAWA,EAAQyF,QACnBzF,EAAQ9L,cAAgB8L,EAAQ+Q,mBACtC/Q,GACR,OAAOoQ,EASTta,gBAAgBkK,EAASppB,GACjBs0B,EAAcv0B,SAASqpB,EAASppB,KAChCopB,EAAQ9vB,UACV8vB,EAAQ9vB,UAAUC,IAAIyG,GAEtBopB,EAAQppB,WAAa,IAAMA,GAUjCkf,mBAAmBkK,EAASppB,GACtBs0B,EAAcv0B,SAASqpB,EAASppB,KAC9BopB,EAAQ9vB,UACV8vB,EAAQ9vB,UAAUU,OAAOgG,GAEzBopB,EAAQppB,UAAYopB,EAAQppB,UAAUiD,QAAQ,IAAI6nB,OAAO,UAAY9qB,EAAUzC,MAAM,KAAK8O,KAAK,KAAO,UAAW,MAAO,MAU9H6S,gBAAgBkK,EAASppB,GACvB,OAAIopB,EAAQ9vB,UACH8vB,EAAQ9vB,UAAU2G,SAASD,GAE3B,IAAI8qB,OAAO,QAAU9qB,EAAY,QAAS,MAAMuiB,KAAK6G,EAAQppB,WAQxEsgB,sBACE,OAAO5B,GAIX,OAAO4V,GApuBW,GA2uBpBh8B,OAAOg8B,cAAgBA,GC/uBrBx6B,SAASgH,cAAc,aACX,IAAIwzB,GAAc,WAAY,CACpCI,kBAAmB,UACnBE,qBAAsB,kBACtBJ,WAAY,GACZC,cAAe,KCPzB,IAAI2F,GA8BJ,SAASpF,IACP,IAAIqF,EAAO,GAAGx9B,MAAMI,KAAK4B,WACrBy7B,GAAO,EACW,kBAAXD,EAAK,KACdC,EAAOD,EAAK/lB,SAEd,IAAIklB,EAASa,EAAK,GAClB,GAAIE,GAAef,GACjB,MAAM,IAAIn4B,MAAM,8BAIlB,IAFA,IAAIm5B,EAAYH,EAAKx9B,MAAM,GACvBsmB,EAAMqX,EAAU9iC,OACXD,EAAI,EAAGA,EAAI0rB,EAAK1rB,IAAK,CAC5B,IAAIgjC,EAAWD,EAAU/iC,GACzB,IAAK,IAAIQ,KAAOwiC,EACd,GAAI1iC,OAAO6E,UAAUy3B,eAAep3B,KAAKw9B,EAAUxiC,GAAM,CACvD,IAAIG,EAAQqiC,EAASxiC,GACrB,GAAIqiC,GAAQI,GAAYtiC,GAAQ,CAC9B,IAAIqjB,EAAOzf,MAAMD,QAAQ3D,GAAS,GAAK,GACvCohC,EAAOvhC,GAAO+8B,GACZ,EACAj9B,OAAO6E,UAAUy3B,eAAep3B,KAAKu8B,EAAQvhC,KAASsiC,GAAef,EAAOvhC,IACxEuhC,EAAOvhC,GACPwjB,EACJrjB,QAGFohC,EAAOvhC,GAAOG,GAKtB,OAAOohC,GAGT,SAASkB,GAAYviC,GACnB,OAAO6D,MAAMD,QAAQ5D,IAAiC,mBAAzB,GAAGmqB,SAASrlB,KAAK9E,GAGhD,SAASoiC,GAAeI,GACtB,OAAQA,GAAsB,iBAAPA,GAAiC,mBAAPA,ECpEnD,SAASC,GAAuBC,GAC9B,OAAOA,GAAKA,EAAEzG,WAAayG,EAAEC,QAAUD,EAGzC,MAAME,GAEF7b,GAAG5a,EAAO6vB,GAMN,OALAv7B,KAAKoiC,WAAapiC,KAAKoiC,YAAc,GAGhCpiC,KAAKoiC,WAAW12B,KAAQ1L,KAAKoiC,WAAW12B,GAAS,IACtD1L,KAAKoiC,WAAW12B,GAAO7H,KAAK03B,GACrBv7B,KAEXsmB,KAAK5a,KAAU+1B,GACXzhC,KAAKoiC,WAAapiC,KAAKoiC,YAAc,GAErC,IAAIC,EAAYriC,KAAKoiC,WAAW12B,GAChC,GAAI22B,EAAW,IAAK,IAAI15B,KAAY05B,EAAU15B,EAASuF,MAAMlO,KAAMyhC,GAKnE,OAHIzhC,KAAKwwB,SAASxwB,KAAKwwB,QAAQ2C,cAAcnzB,KAAKsiC,UAAU,YAAc52B,EAAO,CAC7E+1B,KAAMA,KAEHzhC,KAEXsmB,UAAU2a,EAAWzK,GACjB,IAAI+L,EAAS,CACTC,SAAS,EACTvgB,YAAY,EACZuU,OAAQA,GAEZ,GAAkC,mBAAvB92B,OAAOwhC,YAA4B,OAAO,IAAIA,YAAYD,EAAWsB,GAI5E,IAAIE,EAAMvhC,SAASigC,YAAY,eAE/B,OADAsB,EAAIrB,gBAAgBH,EAAWsB,EAAOC,QAASD,EAAOtgB,WAAYsgB,EAAO/L,QAClEiM,EAMfnc,IAAI5a,EAAO6vB,GACP,IAAKv7B,KAAKoiC,YAAmC,IAArBn8B,UAAUnH,OAG9B,OAFAkB,KAAKoiC,WAAa,GAEXpiC,KAGX,IAAIqiC,EAAYriC,KAAKoiC,WAAW12B,GAChC,IAAK22B,EAAW,OAAOriC,KAEvB,GAAyB,IAArBiG,UAAUnH,OAEV,cADOkB,KAAKoiC,WAAW12B,GAChB1L,KAGX,IAAI,IAAInB,EAAI,EAAGA,EAAIwjC,EAAUvjC,OAAQD,IAAI,CAErC,GADewjC,EAAUxjC,KACR08B,EAAI,CACjB8G,EAAUK,OAAO7jC,EAAG,GACpB,OAGR,OAAOmB,MAojBf,IAAI2iC,GA1iBuC,CAOrCC,IAAK,KAILtF,OAAQ,OAGRuF,iBAAiB,EAIjBC,QAAS,KAITC,gBAAiB,EAOjBC,gBAAgB,EAMhBC,UAAU,EAKVC,eAAe,EAGfC,UAAW,QAGXC,sBAAsB,EAGtBC,aAAa,EAGbC,iBAAkB,EAGlBC,YAAa,IAKbC,UAAW,OAGXC,uBAAuB,EAGvBC,qBAAsB,GAGtBC,eAAgB,IAGhBC,gBAAiB,IAIjBC,gBAAiB,OAQjBC,YAAa,KAGbC,aAAc,KAKdC,eAAgB,KAGhBC,cAAe,GAIfC,aAAc,UAOdC,aAAc,IAMdC,SAAU,KAIVC,QAAS,KAMTC,gBAAgB,EAQhBC,WAAW,EAGXC,mBAAmB,EAWnBC,cAAe,KAIfC,kBAAmB,KAUnBC,kBAAkB,EAIlBC,WAAW,EAKXC,gBAAgB,EAMhBC,kBAAmB,KAGnBC,iBAAiB,EAOjBC,qBAAsB,OAQtBhkB,QAAS,KAGTikB,eAAgB,KAKhBC,WAAY,KAMZC,eAAe,EAGfC,mBAAoB,4BAGpBC,oBAAqB,0DAKrBC,iBAAkB,kFAIlBC,eAAgB,uEAGhBC,oBAAqB,uCAIrBC,kBAAmB,6CAGnBC,iBAAkB,gBAGlBC,mBAAoB,mBAGpBC,6BAA8B,+CAG9BC,eAAgB,cAGhBC,2BAA4B,KAI5BC,qBAAsB,qCAItBC,kBAAmB,CACjBC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,KAKL/f,SAWAA,OAAQggB,EAAOC,EAAKC,GAClB,GAAIA,EAAO,MAAO,CACdC,OAAQD,EAAME,KAAKC,OAAOC,KAC1BC,aAAcL,EAAMr1B,MACpB21B,gBAAiBN,EAAME,KAAK3qB,KAC5BgrB,YAAa/mC,KAAK0M,QAAQy2B,UAC1B6D,kBAAmBR,EAAME,KAAKC,OAAOM,gBACrCC,kBAAmBV,EAAMr1B,MAAQnR,KAAK0M,QAAQy2B,YAWpDgE,OAAO,CAACT,EAAM1gB,IACLA,IAOTohB,eAAgB,SAASV,EAAM1gB,GAC7BA,KAOFqhB,YAAY,EAKZ/gB,WAEE,IAAIghB,EACJtnC,KAAKwwB,QAAQppB,UAAY,GAAGpH,KAAKwwB,QAAQppB,qCACzC,IAAK,IAAI3B,KAASzF,KAAKwwB,QAAQwF,qBAAqB,OAAO,GAAI,uBAAuBrM,KAAKlkB,EAAM2B,WAAY,CACzGkgC,EAAiB7hC,EACjBA,EAAM2B,UAAY,aAClB,MAECkgC,IACDA,EAAiBC,GAAyC3gC,cAAc,+CACxE5G,KAAKwwB,QAAQzrB,YAAYuiC,IAE7B,IAAIE,EAAOF,EAAetR,qBAAqB,QAAQ,GAKvD,OAJIwR,IACwB,MAApBA,EAAKC,YAAqBD,EAAKC,YAAcznC,KAAK0M,QAAQ24B,oBACnC,MAAlBmC,EAAKE,YAAmBF,EAAKE,UAAY1nC,KAAK0M,QAAQ24B,sBAE5DrlC,KAAKwwB,QAAQzrB,YAAY/E,KAAK2nC,oBAavCrhB,OAAQogB,EAAMh4B,EAAO7M,EAAQqiC,GAC3B,IAAI0D,EAAO,CACPC,KAAM,EACNC,KAAM,EACNC,SAAUrB,EAAKh4B,MACfs5B,UAAWtB,EAAK7kC,QAEhBomC,EAAWvB,EAAKh4B,MAAQg4B,EAAK7kC,OAEpB,MAAT6M,GAA2B,MAAV7M,GACjB6M,EAAQk5B,EAAKG,SACblmC,EAAS+lC,EAAKI,WACE,MAATt5B,EAAeA,EAAQ7M,EAASomC,EACxB,MAAVpmC,IAAgBA,EAAS6M,EAAQu5B,GAI1C,IAAIC,GAFJx5B,EAAQrF,KAAKL,IAAI0F,EAAOk5B,EAAKG,YAC7BlmC,EAASwH,KAAKL,IAAInH,EAAQ+lC,EAAKI,YAE/B,GAAIJ,EAAKG,SAAWr5B,GAASk5B,EAAKI,UAAYnmC,EAE1C,GAAqB,SAAjBqiC,EACI+D,EAAWC,GACXN,EAAKI,UAAYtB,EAAK7kC,OACtB+lC,EAAKG,SAAWH,EAAKI,UAAYE,IAEjCN,EAAKG,SAAWrB,EAAKh4B,MACrBk5B,EAAKI,UAAYJ,EAAKG,SAAWG,OAElC,CAAA,GAAqB,YAAjBhE,EAIJ,MAAM,IAAIz7B,MAAM,yBAAyBy7B,MAFxC+D,EAAWC,EAAUrmC,EAAS6M,EAAQu5B,EACrCv5B,EAAQ7M,EAASomC,EAO9B,OAJAL,EAAKC,MAAQnB,EAAKh4B,MAAQk5B,EAAKG,UAAY,EAC3CH,EAAKE,MAAQpB,EAAK7kC,OAAS+lC,EAAKI,WAAa,EAC7CJ,EAAKO,SAAWz5B,EAChBk5B,EAAKQ,UAAYvmC,EACV+lC,GAUTthB,cAAeogB,EAAM1gB,GACnB,OAAKhmB,KAAK0M,QAAQo3B,aAAe9jC,KAAK0M,QAAQq3B,eAAiB2C,EAAKzlC,KAAKmd,MAAM,WAAmBpe,KAAKqoC,YAAY3B,EAAM1mC,KAAK0M,QAAQo3B,YAAa9jC,KAAK0M,QAAQq3B,aAAc/jC,KAAK0M,QAAQw3B,aAAcle,GAC7LA,EAAK0gB,IAenB4B,gBAA+BtG,GAzZT,u9DAkaxB1b,KAAMze,GACF,OAAO7H,KAAKwwB,QAAQ9vB,UAAUU,OAAO,kBAEzCklB,UAAWze,KAEXye,QAASze,GACL,OAAO7H,KAAKwwB,QAAQ9vB,UAAUU,OAAO,kBAEzCklB,UAAWze,GACP,OAAO7H,KAAKwwB,QAAQ9vB,UAAUC,IAAI,kBAEtC2lB,SAAUze,GACN,OAAO7H,KAAKwwB,QAAQ9vB,UAAUC,IAAI,kBAEtC2lB,UAAWze,GACP,OAAO7H,KAAKwwB,QAAQ9vB,UAAUU,OAAO,kBAEzCklB,MAAOze,KAIPye,QACI,OAAOtmB,KAAKwwB,QAAQ9vB,UAAUU,OAAO,eAIzCklB,UAAWogB,GAEP,GADI1mC,KAAKwwB,UAAYxwB,KAAK8kC,mBAAmB9kC,KAAKwwB,QAAQ9vB,UAAUC,IAAI,cACpEX,KAAK8kC,oBAAsB9kC,KAAK0M,QAAQq4B,gBAAiB,CAIzD,IAAK,IAAI3/B,KAHTshC,EAAK6B,eAAiBhB,GAAyC3gC,cAAc5G,KAAK0M,QAAQ47B,gBAAgBlsB,QAC1GsqB,EAAK4B,gBAAkB5B,EAAK6B,eAC5BvoC,KAAK8kC,kBAAkB//B,YAAY2hC,EAAK6B,gBACvB7B,EAAK6B,eAAejnC,iBAAiB,mBAAkB8D,EAAKqiC,YAAcf,EAAKjiC,KAChG,IAAKW,KAAQshC,EAAK6B,eAAejnC,iBAAiB,kBAAkB8D,EAAKysB,UAAY7xB,KAAKwoC,SAAS9B,EAAK3qB,MACpG/b,KAAK0M,QAAQm4B,iBACb6B,EAAK+B,YAAclB,GAAyC3gC,cAAc,oEAAoE5G,KAAK0M,QAAQm5B,sBAC3Ja,EAAK6B,eAAexjC,YAAY2hC,EAAK+B,cAEzC,IAAIC,EAAmB7gC,IACnBA,EAAEE,iBACFF,EAAEC,kBACE4+B,EAAKiC,SAAWpB,GAAyCqB,UAAkBrB,GAAyCsB,QAAQ7oC,KAAK0M,QAAQk5B,8BAA8B,IAAI5lC,KAAK8oC,WAAWpC,KAGvL1mC,KAAK0M,QAAQo5B,2BAAmCyB,GAAyCsB,QAAQ7oC,KAAK0M,QAAQo5B,4BAA4B,IAAI9lC,KAAK8oC,WAAWpC,KAEtJ1mC,KAAK8oC,WAAWpC,IAGpC,IAAK,IAAIqC,KAAcrC,EAAK6B,eAAejnC,iBAAiB,oBAAoBynC,EAAWp8B,iBAAiB,QAAS+7B,KAI7HpiB,YAAaogB,GAET,OAD2B,MAAvBA,EAAK6B,gBAA4D,MAAlC7B,EAAK6B,eAAeljC,YAAoBqhC,EAAK6B,eAAeljC,WAAWkC,YAAYm/B,EAAK6B,gBACpHvoC,KAAKgpC,+BAIhB1iB,UAAWogB,EAAMuC,GACb,GAAIvC,EAAK6B,eAAgB,CACrB7B,EAAK6B,eAAe7nC,UAAUU,OAAO,mBACrC,IAAK,IAAI8nC,KAAoBxC,EAAK6B,eAAejnC,iBAAiB,uBAC9D4nC,EAAiBC,IAAMzC,EAAKjiC,KAC5BykC,EAAiBhpB,IAAM+oB,EAE3B,OAAOpoC,YAAW,IAAI6lC,EAAK6B,eAAe7nC,UAAUC,IAAI,qBACtD,KAKV2lB,MAAOogB,EAAMl+B,GACT,GAAIk+B,EAAK6B,eAAgB,CACrB7B,EAAK6B,eAAe7nC,UAAUC,IAAI,YACX,iBAAZ6H,GAAwBA,EAAQ6b,QAAO7b,EAAUA,EAAQ6b,OACpE,IAAK,IAAIjf,KAAQshC,EAAK6B,eAAejnC,iBAAiB,0BAA0B8D,EAAKqiC,YAAcj/B,IAG3G8d,kBAKAA,WAAYogB,GACR,GAAIA,EAAK6B,iBACL7B,EAAK6B,eAAe7nC,UAAUC,IAAI,iBAC9B+lC,EAAK+B,aAAa,OAAO/B,EAAK+B,YAAY5W,UAAY7xB,KAAK0M,QAAQg5B,kBAG/Epf,uBAKAA,eAAgBogB,EAAM0C,EAAUC,GAC5B,GAAI3C,EAAK6B,eAAgB,IAAK,IAAInjC,KAAQshC,EAAK6B,eAAejnC,iBAAiB,4BAA8C,aAAlB8D,EAAKkkC,SAA0BlkC,EAAK5F,MAAQ4pC,EAAWhkC,EAAKyB,MAAM6H,MAAQ,GAAG06B,MAI5L9iB,wBAKAA,YAEAA,oBAIAA,QAASogB,GACL,GAAIA,EAAK6B,eAAgB,OAAO7B,EAAK6B,eAAe7nC,UAAUC,IAAI,eAEtE2lB,oBAGAA,SAAUogB,GACN,OAAO1mC,KAAKyM,KAAK,QAASi6B,EAAM1mC,KAAK0M,QAAQi5B,qBAEjDrf,qBAIAA,SAAUogB,GAEN,GADIA,EAAK+B,cAAa/B,EAAK+B,YAAY5W,UAAY7xB,KAAK0M,QAAQm5B,gBAC5Da,EAAK6B,eAAgB,OAAO7B,EAAK6B,eAAe7nC,UAAUC,IAAI,gBAEtE2lB,qBAEAA,qBAEAA,oBAEAA,kBAEAA,gBAMJ,MAAMihB,WAAiDpF,GACnD7b,mBAEItmB,KAAKgE,UAAUulC,QAAUpH,GAQzBniC,KAAKgE,UAAU8H,OAAS,CACpB,OACA,YACA,UACA,YACA,WACA,YACA,YACA,aACA,cACA,YACA,QACA,gBACA,aACA,qBACA,iBACA,sBACA,UACA,kBACA,UACA,kBACA,WACA,mBACA,WACA,mBACA,QACA,mBACA,kBACA,iBAEJ9L,KAAKgE,UAAUwlC,gBAAkB,GACjCxpC,KAAKgE,UAAUylC,sBAAuB,EAG1CnjB,mBACI,OAAOtmB,KAAKsmC,MAAM9gC,QAAQkhC,GAAOA,EAAKgD,WACpCxpC,KAAKwmC,GAAOA,IAKlBpgB,mBACI,OAAOtmB,KAAKsmC,MAAM9gC,QAAQkhC,IAAQA,EAAKgD,WACrCxpC,KAAKwmC,GAAOA,IAGlBpgB,mBAAmBqiB,GACf,OAAO3oC,KAAKsmC,MAAM9gC,QAAQkhC,GAAOA,EAAKiC,SAAWA,IAC/CzoC,KAAKwmC,GAAOA,IAIlBpgB,iBACI,OAAOtmB,KAAK2pC,mBAAmBpC,GAAyCqC,QAE5EtjB,oBACI,OAAOtmB,KAAK2pC,mBAAmBpC,GAAyCqB,WAE5EtiB,gBACI,OAAOtmB,KAAK2pC,mBAAmBpC,GAAyCsC,OAG5EvjB,iBACI,OAAOtmB,KAAKsmC,MAAM9gC,QAAQkhC,GAAOA,EAAKiC,SAAWpB,GAAyCqB,WAAalC,EAAKiC,SAAWpB,GAAyCqC,SAC9J1pC,KAAKwmC,GAAOA,IAKlBpgB,OAII,GAF6B,SAAzBtmB,KAAKwwB,QAAQyF,SAAoBj2B,KAAKwwB,QAAQjqB,aAAa,UAAW,uBACtEvG,KAAKwwB,QAAQ9vB,UAAU2G,SAAS,cAAgBrH,KAAKwwB,QAAQtoB,cAAc,gBAAgBlI,KAAKwwB,QAAQzrB,YAAYwiC,GAAyC3gC,cAAc,8EAA8E5G,KAAK0M,QAAQ04B,sCACtQplC,KAAK8pC,kBAAkBhrC,OAAQ,CAC/B,IAAIirC,EAAuB,KACnB/pC,KAAKgqC,iBAAiBhqC,KAAKgqC,gBAAgB3kC,WAAWkC,YAAYvH,KAAKgqC,iBAC3EhqC,KAAKgqC,gBAAkB9oC,SAAS0F,cAAc,SAC9C5G,KAAKgqC,gBAAgBzjC,aAAa,OAAQ,SACZ,OAA1BvG,KAAK0M,QAAQ03B,UAAqBpkC,KAAK0M,QAAQ03B,SAAW,IAAGpkC,KAAKgqC,gBAAgBzjC,aAAa,WAAY,YAC/GvG,KAAKgqC,gBAAgB5iC,UAAY,kBACE,OAA/BpH,KAAK0M,QAAQ+3B,eAAwBzkC,KAAKgqC,gBAAgBzjC,aAAa,SAAUvG,KAAK0M,QAAQ+3B,eACrE,OAAzBzkC,KAAK0M,QAAQsU,SAAkBhhB,KAAKgqC,gBAAgBzjC,aAAa,UAAWvG,KAAK0M,QAAQsU,SAE7FhhB,KAAKgqC,gBAAgBzjC,aAAa,WAAY,MAG9CvG,KAAKgqC,gBAAgBnjC,MAAMojC,WAAa,SACxCjqC,KAAKgqC,gBAAgBnjC,MAAMsU,SAAW,WACtCnb,KAAKgqC,gBAAgBnjC,MAAM2uB,IAAM,IACjCx1B,KAAKgqC,gBAAgBnjC,MAAM8H,KAAO,IAClC3O,KAAKgqC,gBAAgBnjC,MAAMhF,OAAS,IACpC7B,KAAKgqC,gBAAgBnjC,MAAM6H,MAAQ,IACnC64B,GAAyC2C,WAAWlqC,KAAK0M,QAAQs4B,qBAAsB,wBAAwBjgC,YAAY/E,KAAKgqC,iBAChIhqC,KAAKgqC,gBAAgBr9B,iBAAiB,UAAU,KAC5C,IAAM25B,MAAOA,GAAWtmC,KAAKgqC,gBAC7B,GAAI1D,EAAMxnC,OAAQ,IAAK,IAAI4nC,KAAQJ,EAAMtmC,KAAKmqC,QAAQzD,GACtD1mC,KAAKyM,KAAK,aAAc65B,GACxByD,QAGRA,IAEJ/pC,KAAKoqC,IAAqB,OAAf1qC,OAAO0qC,IAAe1qC,OAAO0qC,IAAM1qC,OAAO2qC,UAIrD,IAAK,IAAIpJ,KAAajhC,KAAK8L,OAAO9L,KAAKsM,GAAG20B,EAAWjhC,KAAK0M,QAAQu0B,IAClEjhC,KAAKsM,GAAG,kBAAkB,IAAItM,KAAKsqC,8BAEnCtqC,KAAKsM,GAAG,eAAe,IAAItM,KAAKsqC,8BAEhCtqC,KAAKsM,GAAG,YAAao6B,GAAO1mC,KAAKyM,KAAK,WAAYi6B,KAGlD1mC,KAAKsM,GAAG,YAAao6B,IACjB,GAAoC,IAAhC1mC,KAAKuqC,gBAAgBzrC,QAAoD,IAApCkB,KAAKwqC,oBAAoB1rC,QAAiD,IAAjCkB,KAAKyqC,iBAAiB3rC,OACxG,OAAO+B,YAAW,IAAIb,KAAKyM,KAAK,kBAC9B,MAWN,IAAIi+B,EAAgB,SAAS7iC,GAIzB,GAbkB,SAASA,GAC3B,GAAIA,EAAE8iC,aAAaC,MAGnB,IAAI,IAAI/rC,EAAI,EAAGA,EAAIgJ,EAAE8iC,aAAaC,MAAM9rC,OAAQD,IAC5C,GAAgC,UAA5BgJ,EAAE8iC,aAAaC,MAAM/rC,GAAgB,OAAO,EAEpD,OAAO,EAMFgsC,CAAchjC,GAEnB,OADAA,EAAEC,kBACED,EAAEE,eAAuBF,EAAEE,iBACnBF,EAAEijC,aAAc,GAqDhC,OAlDA9qC,KAAK2L,UAAY,CACb,CACI6kB,QAASxwB,KAAKwwB,QACd1kB,OAAQ,CACJi/B,UAAYljC,GACD7H,KAAKyM,KAAK,YAAa5E,GAElCmjC,UAAYnjC,IACR6iC,EAAc7iC,GACP7H,KAAKyM,KAAK,YAAa5E,IAElCojC,SAAWpjC,IAIP,IAAIqjC,EACJ,IACIA,EAAOrjC,EAAE8iC,aAAaQ,cACxB,MAAO9mB,IAIT,OAFAxc,EAAE8iC,aAAaS,WAAa,SAAWF,GAAQ,aAAeA,EAAO,OAAS,OAC9ER,EAAc7iC,GACP7H,KAAKyM,KAAK,WAAY5E,IAEjCwjC,UAAYxjC,GACD7H,KAAKyM,KAAK,YAAa5E,GAElCyjC,KAAOzjC,IACH6iC,EAAc7iC,GACP7H,KAAKsrC,KAAKzjC,IAErB0jC,QAAU1jC,GACC7H,KAAKyM,KAAK,UAAW5E,MAK5C7H,KAAK8pC,kBAAkBroC,SAAS+pC,GACrBxrC,KAAK2L,UAAU9H,KAAK,CACvB2sB,QAASgb,EACT1/B,OAAQ,CACJ2/B,MAAQhJ,KAEA+I,IAAqBxrC,KAAKwwB,SAAWiS,EAAI9jC,SAAWqB,KAAKwwB,SAAW+W,GAAyCmE,cAAcjJ,EAAI9jC,OAAQqB,KAAKwwB,QAAQtoB,cAAc,kBAAiBlI,KAAKgqC,gBAAgByB,SACrM,QAKvBzrC,KAAK2rC,SACE3rC,KAAK0M,QAAQgH,KAAKrP,KAAKrE,MAGlCsmB,UAQI,OAPAtmB,KAAKyhB,UACLzhB,KAAK4rC,gBAAe,IACQ,MAAxB5rC,KAAKgqC,gBAA0BhqC,KAAKgqC,gBAAgB3kC,gBAAakxB,KACjEv2B,KAAKgqC,gBAAgB3kC,WAAWkC,YAAYvH,KAAKgqC,iBACjDhqC,KAAKgqC,gBAAkB,aAEpBhqC,KAAKwwB,QAAQqb,SACbtE,GAAyChiB,UAAUmd,OAAO6E,GAAyChiB,UAAU3hB,QAAQ5D,MAAO,GAEvIsmB,4BACI,IAAIwlB,EACAC,EAAiB,EACjBC,EAAa,EAEjB,GADkBhsC,KAAKisC,iBACPntC,OAAQ,CACpB,IAAK,IAAI4nC,KAAQ1mC,KAAKisC,iBAClBF,GAAkBrF,EAAKC,OAAO0C,UAC9B2C,GAActF,EAAKC,OAAOuF,MAE9BJ,EAAsB,IAAMC,EAAiBC,OAC1CF,EAAsB,IAC7B,OAAO9rC,KAAKyM,KAAK,sBAAuBq/B,EAAqBE,EAAYD,GAI7EzlB,cAAcvQ,GACV,MAAsC,mBAA3B/V,KAAK0M,QAAQ82B,UAAiCxjC,KAAK0M,QAAQ82B,UAAUztB,GACpE,GAAG/V,KAAK0M,QAAQ82B,YAAYxjC,KAAK0M,QAAQs2B,eAAiB,IAAIjtB,KAAO,KAIrFuQ,YAAYogB,GACR,MAAuC,mBAA5B1mC,KAAK0M,QAAQw4B,WAAkCwB,EAAKjiC,KACxDzE,KAAK0M,QAAQw4B,WAAWwB,GAMnCpgB,kBACI,IAAI6lB,EAAkBC,EACtB,GAAID,EAAmBnsC,KAAKqsC,sBAAuB,OAAOF,EAC1D,IAAIG,EAAe,4BACftsC,KAAK0M,QAAQ44B,mBAAkBgH,GAAgB,MAAMtsC,KAAK0M,QAAQ44B,wBACtEgH,GAAgB,4BAA4BtsC,KAAKusC,cAAc,OAAOvsC,KAAK0M,QAAQs2B,eAAiB,2BAAwBzM,kDAC5H,IAAIiW,EAASjF,GAAyC3gC,cAAc0lC,GASpE,MAR6B,SAAzBtsC,KAAKwwB,QAAQyF,SACbmW,EAAO7E,GAAyC3gC,cAAc,iBAAiB5G,KAAK0M,QAAQk2B,8CAA8C5iC,KAAK0M,QAAQ4wB,mBACvJ8O,EAAKrnC,YAAYynC,KAGjBxsC,KAAKwwB,QAAQjqB,aAAa,UAAW,uBACrCvG,KAAKwwB,QAAQjqB,aAAa,SAAUvG,KAAK0M,QAAQ4wB,SAEtC,MAAR8O,EAAeA,EAAOI,EAKjClmB,sBACI,IAAImmB,EAAc,SAASr2B,GACvB,IAAK,IAAI1U,KAAM0U,EACX,GAAI,qBAAqBuT,KAAKjoB,EAAG0F,WAAY,OAAO1F,GAG5D,IAAK,IAAIu0B,IAAW,CAChB,MACA,QACF,CACE,IAAIyW,EACJ,GAAIA,EAAWD,EAAYzsC,KAAKwwB,QAAQwF,qBAAqBC,IAAW,OAAOyW,GAIvFpmB,sBACI,OAAOtmB,KAAK2L,UAAUzL,KAAKysC,GAAmB,MACtC,IAAI/L,EAAS,GACb,IAAI,IAAIl1B,KAASihC,EAAiB7gC,OAAO,CACrC,IAAIG,EAAW0gC,EAAiB7gC,OAAOJ,GACvCk1B,EAAO/8B,KAAK8oC,EAAiBnc,QAAQ7jB,iBAAiBjB,EAAOO,GAAU,IAE3E,OAAO20B,GAN+B,KAWlDta,uBACI,OAAOtmB,KAAK2L,UAAUzL,KAAKysC,GAAmB,MACtC,IAAI/L,EAAS,GACb,IAAI,IAAIl1B,KAASihC,EAAiB7gC,OAAO,CACrC,IAAIG,EAAW0gC,EAAiB7gC,OAAOJ,GACvCk1B,EAAO/8B,KAAK8oC,EAAiBnc,QAAQtkB,oBAAoBR,EAAOO,GAAU,IAE9E,OAAO20B,GAN+B,KAWlDta,UAKI,OAJAtmB,KAAK8pC,kBAAkBroC,SAAS+uB,GAAUA,EAAQ9vB,UAAUU,OAAO,kBAEnEpB,KAAK4sC,uBACL5sC,KAAKof,UAAW,EACTpf,KAAKsmC,MAAMpmC,KAAKwmC,GAAO1mC,KAAK6sC,aAAanG,KAGpDpgB,SAII,cAHOtmB,KAAKof,SACZpf,KAAK8pC,kBAAkBroC,SAAS+uB,GAAUA,EAAQ9vB,UAAUC,IAAI,kBAEzDX,KAAK8sC,sBAGhBxmB,SAASvK,GACL,IAAIgxB,EAAe,EACfC,EAAe,IACnB,GAAIjxB,EAAO,EAAG,CACV,IAAIkxB,EAAQ,CACR,KACA,KACA,KACA,KACA,KAEJ,IAAI,IAAIpuC,EAAI,EAAGA,EAAIouC,EAAMnuC,OAAQD,IAAI,CACjC,IAAIwJ,EAAO4kC,EAAMpuC,GAEjB,GAAIkd,GADS1S,KAAKsX,IAAI3gB,KAAK0M,QAAQy3B,aAAc,EAAItlC,GAAK,GACtC,CAChBkuC,EAAehxB,EAAO1S,KAAKsX,IAAI3gB,KAAK0M,QAAQy3B,aAAc,EAAItlC,GAC9DmuC,EAAe3kC,EACf,OAGR0kC,EAAe1jC,KAAK81B,MAAM,GAAK4N,GAAgB,GAEnD,MAAO,WAAWA,cAAyB/sC,KAAK0M,QAAQs5B,kBAAkBgH,KAG9E1mB,8BACI,OAA6B,MAAzBtmB,KAAK0M,QAAQ03B,UAAoBpkC,KAAKktC,mBAAmBpuC,QAAUkB,KAAK0M,QAAQ03B,UAC5EpkC,KAAKktC,mBAAmBpuC,SAAWkB,KAAK0M,QAAQ03B,UAAUpkC,KAAKyM,KAAK,kBAAmBzM,KAAKsmC,OACzFtmC,KAAKwwB,QAAQ9vB,UAAUC,IAAI,yBACxBX,KAAKwwB,QAAQ9vB,UAAUU,OAAO,wBAEhDklB,KAAKze,GACD,IAAKA,EAAE8iC,aAAc,OACrB3qC,KAAKyM,KAAK,OAAQ5E,GAGlB,IAAIy+B,EAAQ,GACZ,IAAI,IAAIznC,EAAI,EAAGA,EAAIgJ,EAAE8iC,aAAarE,MAAMxnC,OAAQD,IAAIynC,EAAMznC,GAAKgJ,EAAE8iC,aAAarE,MAAMznC,GAEpF,GAAIynC,EAAMxnC,OAAQ,CACd,IAAMgF,MAAOA,GAAW+D,EAAE8iC,aACtB7mC,GAASA,EAAMhF,QAAuC,MAA7BgF,EAAM,GAAGqpC,iBACtCntC,KAAKotC,mBAAmBtpC,GACnB9D,KAAKqtC,YAAY/G,GAE1BtmC,KAAKyM,KAAK,aAAc65B,GAE5BhgB,MAAMze,GACF,GACK,OA6kC4BrI,EA9kCQ,MAALqI,EAAYA,EAAEylC,mBAAgB/W,EA8kC1Blb,EA9kCsCvR,GAAIA,EAAEhG,MA+kCjF,MAAOtE,EAA0C6b,EAAU7b,QAAS+2B,GA9kC5D,OA6kCnB,IAAyC/2B,EAAO6b,EA5kCxCrb,KAAKyM,KAAK,QAAS5E,GACnB,IAAM/D,MAAOA,GAAW+D,EAAEylC,cAC1B,OAAIxpC,EAAMhF,OAAekB,KAAKotC,mBAAmBtpC,QAAjD,EAEJwiB,YAAYggB,GACR,IAAK,IAAII,KAAQJ,EAAMtmC,KAAKmqC,QAAQzD,GAIxCpgB,mBAAmBxiB,GACf,MAAO,MACH,IAAI88B,EAAS,GACb,IAAK,IAAI3rB,KAAQnR,EAAM,CACnB,IAAI3D,EACyB,MAAzB8U,EAAKk4B,mBAA6BhtC,EAAQ8U,EAAKk4B,oBAC3ChtC,EAAMotC,OAAQ3M,EAAO/8B,KAAK7D,KAAKmqC,QAAQl1B,EAAKu4B,cACvCrtC,EAAMstC,YACf7M,EAAO/8B,KAAK7D,KAAK0tC,uBAAuBvtC,EAAOA,EAAMsE,OAChDm8B,EAAO/8B,UAAK0yB,GACQ,MAAlBthB,EAAKu4B,YACK,MAAbv4B,EAAK04B,MAA8B,SAAd14B,EAAK04B,MAAiB/M,EAAO/8B,KAAK7D,KAAKmqC,QAAQl1B,EAAKu4B,cAE1E5M,EAAO/8B,UAAK0yB,GAEvB,OAAOqK,GAdJ,GAkBXta,uBAAuBsnB,EAAWC,GAC9B,IAAIC,EAAYF,EAAUG,eACtBC,EAAgB3pB,IAAQ4pB,OAijCW1uC,EAjjC2B2uC,QAijCtBC,EAjjC+B,MAijCnB9yB,EAjjC2BgO,GAAIA,EAAE+kB,IAAI/pB,GAkjC7F,MAAO9kB,GAAkE,mBAApBA,EAAI4uC,GAAmC9yB,EAAU9b,EAAK4uC,QAC1G,EAFT,IAA+C5uC,EAAK4uC,EAAY9yB,GA9iCxD,IAAIgzB,EAAc,IACPP,EAAUO,aAAapuC,IAC1B,GAAIA,EAAQnB,OAAS,EAAG,CACpB,IAAK,IAAIqB,KAASF,EACVE,EAAMotC,OAAQptC,EAAMumC,MAAMA,IAC1B,IAAI1mC,KAAK0M,QAAQ83B,mBAAmD,MAA9BkC,EAAKjiC,KAAKmvB,UAAU,EAAG,GAE7D,OADA8S,EAAK4H,SAAW,GAAGT,KAAQnH,EAAKjiC,OACzBzE,KAAKmqC,QAAQzD,MAEfvmC,EAAMstC,aAAaztC,KAAK0tC,uBAAuBvtC,EAAO,GAAG0tC,KAAQ1tC,EAAMsE,QAKpF4pC,IAEJ,OAAO,OACRL,GAEP,OAAOK,IAQX/nB,OAAOogB,EAAM1gB,GACLhmB,KAAK0M,QAAQ62B,aAAemD,EAAK3qB,KAAkC,QAA3B/b,KAAK0M,QAAQ62B,YAAuBvd,EAAKhmB,KAAK0M,QAAQ64B,eAAel7B,QAAQ,eAAgBhB,KAAK81B,MAAMuH,EAAK3qB,KAAO,KAAO,OAAS,KAAK1R,QAAQ,kBAAmBrK,KAAK0M,QAAQ62B,cACnNgE,GAAyCgH,YAAY7H,EAAM1mC,KAAK0M,QAAQ+3B,eAChD,MAAzBzkC,KAAK0M,QAAQ03B,UAAoBpkC,KAAKktC,mBAAmBpuC,QAAUkB,KAAK0M,QAAQ03B,UACrFpe,EAAKhmB,KAAK0M,QAAQq5B,qBAAqB17B,QAAQ,eAAgBrK,KAAK0M,QAAQ03B,WAC5EpkC,KAAKyM,KAAK,mBAAoBi6B,IAC3B1mC,KAAK0M,QAAQy6B,OAAO9iC,KAAKrE,KAAM0mC,EAAM1gB,GAJsDA,EAAKhmB,KAAK0M,QAAQ84B,qBAMxHlf,QAAQogB,GACJA,EAAKC,OAAS,CACVC,KAAMW,GAAyCiH,SAC/CpF,SAAU,EAGV8C,MAAOxF,EAAK3qB,KACZstB,UAAW,EACXoF,SAAUzuC,KAAK0uC,YAAYhI,IAE/B1mC,KAAKsmC,MAAMziC,KAAK6iC,GAChBA,EAAKiC,OAASpB,GAAyCsC,MACvD7pC,KAAKyM,KAAK,YAAai6B,GACvB1mC,KAAK2uC,kBAAkBjI,GACvB1mC,KAAKmnC,OAAOT,GAAOriB,IACXA,GACAqiB,EAAKgD,UAAW,EAChB1pC,KAAK4uC,iBAAiB,CAClBlI,GACDriB,KAEHqiB,EAAKgD,UAAW,EACZ1pC,KAAK0M,QAAQk4B,WAAW5kC,KAAK6uC,YAAYnI,IAGjD1mC,KAAKgpC,iCAIb1iB,aAAaggB,GACT,IAAK,IAAII,KAAQJ,EAAMtmC,KAAK6uC,YAAYnI,GACxC,OAAO,KAEXpgB,YAAYogB,GACR,GAAIA,EAAKiC,SAAWpB,GAAyCsC,QAA2B,IAAlBnD,EAAKgD,SAIpE,MAAM,IAAIjhC,MAAM,oFAFnB,GADAi+B,EAAKiC,OAASpB,GAAyCqC,OACnD5pC,KAAK0M,QAAQi4B,iBAAkB,OAAO9jC,YAAW,IAAIb,KAAK8uC,gBAC5D,GAGVxoB,kBAAkBogB,GACd,GAAI1mC,KAAK0M,QAAQ+2B,uBAAyBiD,EAAKzlC,KAAKmd,MAAM,YAAcsoB,EAAK3qB,MAA4C,QAApC/b,KAAK0M,QAAQg3B,qBAE9F,OADA1jC,KAAKwpC,gBAAgB3lC,KAAK6iC,GACnB7lC,YAAW,IAAIb,KAAK+uC,0BACzB,GAGVzoB,yBACI,GAAItmB,KAAKypC,sBAAwD,IAAhCzpC,KAAKwpC,gBAAgB1qC,OAAc,OACpEkB,KAAKypC,sBAAuB,EAC5B,IAAI/C,EAAO1mC,KAAKwpC,gBAAgB9tB,QAChC,OAAO1b,KAAKgvC,gBAAgBtI,EAAM1mC,KAAK0M,QAAQi3B,eAAgB3jC,KAAK0M,QAAQk3B,gBAAiB5jC,KAAK0M,QAAQm3B,iBAAiB,GAAOoF,IAC9HjpC,KAAKyM,KAAK,YAAai6B,EAAMuC,GAC7BjpC,KAAKypC,sBAAuB,EACrBzpC,KAAK+uC,4BAIpBzoB,WAAWogB,GAIP,GAHIA,EAAKiC,SAAWpB,GAAyCqB,WAAW5oC,KAAK6sC,aAAanG,GAC1F1mC,KAAKsmC,MAAQ2I,GAA8BjvC,KAAKsmC,MAAOI,GACvD1mC,KAAKyM,KAAK,cAAei6B,GACC,IAAtB1mC,KAAKsmC,MAAMxnC,OAAc,OAAOkB,KAAKyM,KAAK,SAGlD6Z,eAAe4oB,GAEc,MAArBA,IAA2BA,GAAoB,GACnD,IAAK,IAAIxI,KAAQ1mC,KAAKsmC,MAAMriC,SAAYyiC,EAAKiC,SAAWpB,GAAyCqB,WAAasG,IAAmBlvC,KAAK8oC,WAAWpC,GACjJ,OAAO,KAKXpgB,YAAYogB,EAAMh4B,EAAO7M,EAAQqiC,EAAcv7B,GAC3C,OAAO3I,KAAKgvC,gBAAgBtI,EAAMh4B,EAAO7M,EAAQqiC,GAAc,GAAM,CAAC+E,EAASkG,KAC3E,GAAc,MAAVA,EACJ,OAAOxmC,EAAS+9B,GACX,CACD,IAAM1C,eAAgBA,GAAoBhkC,KAAK0M,QACzB,MAAlBs3B,IAAwBA,EAAiB0C,EAAKzlC,MAClD,IAAImuC,EAAiBD,EAAOE,UAAUrL,EAAgBhkC,KAAK0M,QAAQu3B,eAGnE,MAFuB,eAAnBD,GAAsD,cAAnBA,IACvCoL,EAAiBE,GAAkCC,QAAQ7I,EAAK8I,QAASJ,IAClEzmC,EAAS4+B,GAAyCkI,cAAcL,QAInF9oB,gBAAgBogB,EAAMh4B,EAAO7M,EAAQqiC,EAAcwL,EAAgB/mC,GAC/D,IAAIgnC,EAAa,IAAIC,WACrBD,EAAWE,OAAS,KAChBnJ,EAAK8I,QAAUG,EAAW/O,OAER,kBAAd8F,EAAKzlC,KAITjB,KAAK8vC,uBAAuBpJ,EAAMh4B,EAAO7M,EAAQqiC,EAAcwL,EAAgB/mC,GAH3D,MAAZA,GAAkBA,EAASgnC,EAAW/O,SAKlD+O,EAAWI,cAAcrJ,GAQ7BpgB,oBAAoB0pB,EAAUC,EAAUtnC,EAAUunC,EAAaC,GAAkB,GAG7E,GAFAnwC,KAAKyM,KAAK,YAAaujC,GACvBhwC,KAAKyM,KAAK,WAAYujC,GACjBG,EAGE,CACH,IAAIC,EAAUC,IACVrwC,KAAKyM,KAAK,YAAaujC,EAAUK,GAC7B1nC,GAAUA,KAElBqnC,EAASR,QAAUS,EACnBjwC,KAAK8vC,uBAAuBE,EAAUhwC,KAAK0M,QAAQi3B,eAAgB3jC,KAAK0M,QAAQk3B,gBAAiB5jC,KAAK0M,QAAQm3B,gBAAiB7jC,KAAK0M,QAAQgjC,eAAgBU,EAAQF,QARpKlwC,KAAKyM,KAAK,YAAaujC,EAAUC,GAC7BtnC,GAAUA,IAUtB2d,uBAAuBogB,EAAMh4B,EAAO7M,EAAQqiC,EAAcwL,EAAgB/mC,EAAUunC,GAGhF,IAAI/3B,EAAMjX,SAAS0F,cAAc,OAoEjC,OAnEIspC,IAAa/3B,EAAI+3B,YAAcA,GAEnCR,EAAwE,cAAvD3oC,iBAAiB7F,SAASC,MAAwB,kBAA4BuuC,EAC/Fv3B,EAAI03B,OAAS,KACT,IAAIS,EAAY3nC,GAAWA,EAAS,GAMpC,MAJoB,oBAAT4nC,MAAiC,OAATA,MAAiBb,IAAgBY,EAAY3nC,GAAW4nC,KAAKC,QAAQr4B,GAAK,WACrG,OAAOxP,EAAS4nC,KAAKE,OAAOzwC,KAAM,oBAGnCswC,GAAUI,IACbhK,EAAKh4B,MAAQyJ,EAAIzJ,MACjBg4B,EAAK7kC,OAASsW,EAAItW,OAClB,IAAI8uC,EAAa3wC,KAAK0M,QAAQiM,OAAOtU,KAAKrE,KAAM0mC,EAAMh4B,EAAO7M,EAAQqiC,GACjEiL,EAASjuC,SAAS0F,cAAc,UAChCgqC,EAAMzB,EAAO0B,WAAW,MAO5B,OANA1B,EAAOzgC,MAAQiiC,EAAWxI,SAC1BgH,EAAOttC,OAAS8uC,EAAWvI,UACvBsI,EAAc,IACdvB,EAAOzgC,MAAQiiC,EAAWvI,UAC1B+G,EAAOttC,OAAS8uC,EAAWxI,UAExBuI,GACH,KAAK,EAEDE,EAAI31B,UAAUk0B,EAAOzgC,MAAO,GAC5BkiC,EAAIhc,OAAO,EAAG,GACd,MACJ,KAAK,EAEDgc,EAAI31B,UAAUk0B,EAAOzgC,MAAOygC,EAAOttC,QACnC+uC,EAAIE,OAAOznC,KAAK0nC,IAChB,MACJ,KAAK,EAEDH,EAAI31B,UAAU,EAAGk0B,EAAOttC,QACxB+uC,EAAIhc,MAAM,GAAI,GACd,MACJ,KAAK,EAEDgc,EAAIE,OAAO,GAAMznC,KAAK0nC,IACtBH,EAAIhc,MAAM,GAAI,GACd,MACJ,KAAK,EAEDgc,EAAIE,OAAO,GAAMznC,KAAK0nC,IACtBH,EAAI31B,UAAU,GAAIk0B,EAAOzgC,OACzB,MACJ,KAAK,EAEDkiC,EAAIE,OAAO,GAAMznC,KAAK0nC,IACtBH,EAAI31B,UAAUk0B,EAAOttC,QAASstC,EAAOzgC,OACrCkiC,EAAIhc,OAAO,EAAG,GACd,MACJ,KAAK,EAEDgc,EAAIE,QAAQ,GAAMznC,KAAK0nC,IACvBH,EAAI31B,WAAWk0B,EAAOttC,OAAQ,GAItCmvC,GAAsCJ,EAAKz4B,EAAwB,MAAnBw4B,EAAW9I,KAAe8I,EAAW9I,KAAO,EAAsB,MAAnB8I,EAAW7I,KAAe6I,EAAW7I,KAAO,EAAG6I,EAAW5I,SAAU4I,EAAW3I,UAA8B,MAAnB2I,EAAWM,KAAeN,EAAWM,KAAO,EAAsB,MAAnBN,EAAWO,KAAeP,EAAWO,KAAO,EAAGP,EAAWxI,SAAUwI,EAAWvI,WACvT,IAAIiI,EAAYlB,EAAOE,UAAU,aACjC,GAAgB,MAAZ1mC,EAAkB,OAAOA,EAAS0nC,EAAWlB,OAGzC,MAAZxmC,IAAkBwP,EAAIg5B,QAAUxoC,GAC7BwP,EAAI+H,IAAMwmB,EAAK8I,QAG1BlpB,eACI,IAAMyc,gBAAiBA,GAAqB/iC,KAAK0M,QAC7C0kC,EAAmBpxC,KAAKwqC,oBAAoB1rC,OAC5CD,EAAIuyC,EAER,GAAIA,GAAoBrO,EAAiB,OACzC,IAAIsO,EAAcrxC,KAAKyqC,iBACvB,GAAM4G,EAAYvyC,OAAS,EAA3B,CACA,GAAIkB,KAAK0M,QAAQs2B,eACjB,OAAOhjC,KAAKsxC,aAAaD,EAAYptC,MAAM,EAAG8+B,EAAkBqO,IAC3D,KAAMvyC,EAAIkkC,GAAgB,CAC3B,IAAKsO,EAAYvyC,OAAQ,OAEzBkB,KAAKuxC,YAAYF,EAAY31B,SAC7B7c,MAIRynB,YAAYogB,GACR,OAAO1mC,KAAKsxC,aAAa,CACrB5K,IAIRpgB,aAAaggB,GACT,IAAK,IAAII,KAAQJ,EACbI,EAAK8K,YAAa,EAClB9K,EAAKiC,OAASpB,GAAyCqB,UACvD5oC,KAAKyM,KAAK,aAAci6B,GAG5B,OADI1mC,KAAK0M,QAAQs2B,gBAAgBhjC,KAAKyM,KAAK,qBAAsB65B,GAC1DtmC,KAAKyxC,YAAYnL,GAE5BhgB,iBAAiBigB,GAEb,OAAevmC,KAAKsmC,MAAM9gC,QAAQkhC,GAAOA,EAAKH,MAAQA,IACpDrmC,KAAKwmC,GAAOA,IAOlBpgB,aAAaogB,GACT,GAAIA,EAAKiC,SAAWpB,GAAyCqB,UAAW,CACpE,IAAI8I,EAAe1xC,KAAK2xC,iBAAiBjL,EAAKH,KAC9C,IAAK,IAAIqL,KAAeF,EAAaE,EAAYjJ,OAASpB,GAAyCsK,cAC3E,IAAbnL,EAAKH,KAAqBG,EAAKH,IAAIuL,QAC9C,IAAK,IAAIC,KAAgBL,EAAa1xC,KAAKyM,KAAK,WAAYslC,GACxD/xC,KAAK0M,QAAQs2B,gBAAgBhjC,KAAKyM,KAAK,mBAAoBilC,QACxDhL,EAAKiC,SAAWpB,GAAyCsC,OAASnD,EAAKiC,SAAWpB,GAAyCqC,SAClIlD,EAAKiC,OAASpB,GAAyCsK,SACvD7xC,KAAKyM,KAAK,WAAYi6B,GAClB1mC,KAAK0M,QAAQs2B,gBAAgBhjC,KAAKyM,KAAK,mBAAoB,CAC3Di6B,KAGR,GAAI1mC,KAAK0M,QAAQi4B,iBAAkB,OAAO3kC,KAAK8uC,eAEnDxoB,cAAc0rB,KAAWvQ,GACrB,MAAsB,mBAAXuQ,EAA8BA,EAAO9jC,MAAMlO,KAAMyhC,GACrDuQ,EAEX1rB,WAAWogB,GACP,OAAO1mC,KAAKyxC,YAAY,CACpB/K,IAGRpgB,YAAYggB,GACRtmC,KAAKiyC,gBAAgB3L,GAAQ4L,IACzB,GAAIlyC,KAAK0M,QAAQu2B,SAAU,CAGvB,IAAIkP,EAAkBD,EAAiB,GACvC5L,EAAM,GAAGK,OAAOyL,QAAUpyC,KAAK0M,QAAQu2B,WAAajjC,KAAK0M,QAAQw2B,eAAiBiP,EAAgBp2B,KAAO/b,KAAK0M,QAAQy2B,WACtHmD,EAAM,GAAGK,OAAOM,gBAAkB59B,KAAKF,KAAKgpC,EAAgBp2B,KAAO/b,KAAK0M,QAAQy2B,WAEpF,GAAImD,EAAM,GAAGK,OAAOyL,QAAS,CAIzB,IAAI1L,EAAOJ,EAAM,GACb6L,EAAkBD,EAAiB,GAEvCxL,EAAKC,OAAO0L,OAAS,GACrB,IAAIC,EAAkB,KAClB,IAAIC,EAAa,EAEjB,UAAyChc,IAAnCmQ,EAAKC,OAAO0L,OAAOE,IAA0BA,IAEnD,GAAIA,GAAc7L,EAAKC,OAAOM,gBAAiB,OAE/C,IAAI9iC,EAAQouC,EAAavyC,KAAK0M,QAAQy2B,UAClC/+B,EAAMiF,KAAKL,IAAI7E,EAAQnE,KAAK0M,QAAQy2B,UAAWgP,EAAgBp2B,MAC/Dy2B,EAAY,CACZ/tC,KAAMzE,KAAKusC,cAAc,GACzBngC,KAAM+lC,EAAgBM,YAAcN,EAAgBM,YAAYtuC,EAAOC,GAAO+tC,EAAgBluC,MAAME,EAAOC,GAC3GqqC,SAAU/H,EAAKC,OAAO8H,SACtB8D,WAAYA,GAEhB7L,EAAKC,OAAO0L,OAAOE,GAAc,CAC7B7L,KAAMA,EACNv1B,MAAOohC,EACPC,UAAWA,EACX7J,OAAQpB,GAAyCqB,UACjDQ,SAAU,EACVsJ,QAAS,GAEb1yC,KAAK2yC,YAAYrM,EAAO,CACpBkM,KAoBR,GAjBA9L,EAAKC,OAAOiM,oBAAsB,CAACpM,EAAOqM,KACtC,IAAIC,GAAc,EAClBtM,EAAMmC,OAASpB,GAAyCwL,QAExDvM,EAAMgM,UAAY,KAClBhM,EAAMqM,SAAWrM,EAAMD,IAAIyM,aAC3BxM,EAAMyM,gBAAkBzM,EAAMD,IAAI2M,wBAElC1M,EAAMD,IAAM,KACZ,IAAI,IAAI1nC,EAAI,EAAGA,EAAI6nC,EAAKC,OAAOM,gBAAiBpoC,IAAI,CAChD,QAA8B03B,IAA1BmQ,EAAKC,OAAO0L,OAAOxzC,GAAkB,OAAOyzC,IAC5C5L,EAAKC,OAAO0L,OAAOxzC,GAAG8pC,SAAWpB,GAAyCwL,UAASD,GAAc,GAErGA,GAAa9yC,KAAK0M,QAAQ06B,eAAeV,GAAM,KAC/C1mC,KAAKmzC,UAAU7M,EAAOuM,EAAU,UAGpC7yC,KAAK0M,QAAQ02B,qBAAsB,IAAI,IAAIvkC,EAAI,EAAGA,EAAI6nC,EAAKC,OAAOM,gBAAiBpoC,IAAIyzC,SACtFA,QACF,CACH,IAAIc,EAAa,GACjB,IAAI,IAAIv0C,EAAI,EAAGA,EAAIynC,EAAMxnC,OAAQD,IAAIu0C,EAAWv0C,GAAK,CACjD4F,KAAMzE,KAAKusC,cAAc1tC,GACzBuN,KAAM8lC,EAAiBrzC,GACvB4vC,SAAUnI,EAAMznC,GAAG8nC,OAAO8H,UAE9BzuC,KAAK2yC,YAAYrM,EAAO8M,OAKpC9sB,UAAUogB,EAAMH,GACZ,IAAI,IAAI1nC,EAAI,EAAGA,EAAI6nC,EAAKC,OAAOM,gBAAiBpoC,IAC5C,QAA8B03B,IAA1BmQ,EAAKC,OAAO0L,OAAOxzC,IAAoB6nC,EAAKC,OAAO0L,OAAOxzC,GAAG0nC,MAAQA,EAAK,OAAOG,EAAKC,OAAO0L,OAAOxzC,GAQhHynB,YAAYggB,EAAO8M,GACf,IAAI7M,EAAM,IAAI8M,eAEd,IAAK,IAAI3M,KAAQJ,EAAMI,EAAKH,IAAMA,EAC9BD,EAAM,GAAGK,OAAOyL,UAEpB9L,EAAM,GAAGK,OAAO0L,OAAOe,EAAW,GAAGb,YAAYhM,IAAMA,GACvD,IAAIjJ,EAASt9B,KAAKszC,cAActzC,KAAK0M,QAAQ4wB,OAAQgJ,EAAO8M,GACxDxQ,EAAM5iC,KAAKszC,cAActzC,KAAK0M,QAAQk2B,IAAK0D,EAAO8M,GACtD7M,EAAIgN,KAAKjW,EAAQsF,GAAK,GAER5iC,KAAKszC,cAActzC,KAAK0M,QAAQo2B,QAASwD,KAC1CC,EAAIzD,QAAU9iC,KAAKszC,cAActzC,KAAK0M,QAAQo2B,QAASwD,IAEpEC,EAAI1D,kBAAoB7iC,KAAK0M,QAAQm2B,gBACrC0D,EAAIsJ,OAAUhoC,IACV7H,KAAKwzC,mBAAmBlN,EAAOC,EAAK1+B,IAExC0+B,EAAIkN,UAAY,KACZzzC,KAAK0zC,mBAAmBpN,EAAOC,EAAK,0BAA0BvmC,KAAK0M,QAAQo2B,QAAU,gBAEzFyD,EAAI4K,QAAU,KACVnxC,KAAK0zC,mBAAmBpN,EAAOC,KAGH,MAAdA,EAAII,OAAiBJ,EAAII,OAASJ,GACxCoN,WAAc9rC,GAAI7H,KAAK4zC,2BAA2BtN,EAAOC,EAAK1+B,GAE1E,IAAIw8B,EAAUrkC,KAAK0M,QAAQ43B,eAAiB,CACxCuP,OAAQ,mBACRC,gBAAiB,WACjBC,mBAAoB,kBACpB,GAEA/zC,KAAK0M,QAAQ26B,aAAYhD,EAAQ,gBAAkBiC,EAAM,GAAGrlC,MAC5DjB,KAAK0M,QAAQ23B,SAAS2P,GAAkB3P,EAASrkC,KAAK0M,QAAQ23B,SAClE,IAAI,IAAI4P,KAAc5P,EAAQ,CAC1B,IAAI6P,EAAc7P,EAAQ4P,GACtBC,GAAa3N,EAAI4N,iBAAiBF,EAAYC,GAEtD,GAAIl0C,KAAK0M,QAAQ26B,WAAY,CAGzB,IAAK,IAAIX,KAAQJ,EAAMtmC,KAAKyM,KAAK,UAAWi6B,EAAMH,GAC9CvmC,KAAK0M,QAAQs2B,gBAAgBhjC,KAAKyM,KAAK,kBAAmB65B,EAAOC,GACrEvmC,KAAKo0C,cAAc7N,EAAK,KAAMD,OAC3B,CACH,IAAI+N,EAAW,IAAIC,SAEnB,GAAIt0C,KAAK0M,QAAQ61B,OAAQ,CACrB,IAAIgS,EAAmBv0C,KAAK0M,QAAQ61B,OACJ,mBAArBgS,IAAiCA,EAAmBA,EAAiBlwC,KAAKrE,KAAMsmC,EAAOC,EAAKD,EAAM,GAAGK,OAAOyL,QAAUpyC,KAAKw0C,UAAUlO,EAAM,GAAIC,GAAO,OACjK,IAAI,IAAIlnC,KAAOk1C,EAAiB,CAC5B,IAAI/0C,EAAQ+0C,EAAiBl1C,GAC7B,GAAI+D,MAAMD,QAAQ3D,GAGlB,IAAI,IAAIX,EAAI,EAAGA,EAAIW,EAAMV,OAAQD,IAAIw1C,EAASzvC,OAAOvF,EAAKG,EAAMX,SAC3Dw1C,EAASzvC,OAAOvF,EAAKG,IAIlC,IAAK,IAAIknC,KAAQJ,EAAMtmC,KAAKyM,KAAK,UAAWi6B,EAAMH,EAAK8N,GACnDr0C,KAAK0M,QAAQs2B,gBAAgBhjC,KAAKyM,KAAK,kBAAmB65B,EAAOC,EAAK8N,GAC1Er0C,KAAKy0C,oBAAoBJ,GAGzB,IAAI,IAAIx1C,EAAI,EAAGA,EAAIu0C,EAAWt0C,OAAQD,IAAI,CACtC,IAAI2zC,EAAYY,EAAWv0C,GAC3Bw1C,EAASzvC,OAAO4tC,EAAU/tC,KAAM+tC,EAAUpmC,KAAMomC,EAAU/D,UAE9DzuC,KAAKo0C,cAAc7N,EAAK8N,EAAU/N,IAI1ChgB,gBAAgBggB,EAAOtgB,GACnB,IAAIksB,EAAmB,GAEnBwC,EAAc,EAClB,IAAI,IAAI71C,EAAI,EAAGA,EAAIynC,EAAMxnC,OAAQD,IAAImB,KAAK0M,QAAQioC,cAActwC,KAAKrE,KAAMsmC,EAAMznC,IAAKszC,IAClFD,EAAiBrzC,GAAKszC,IAChBuC,IAAgBpO,EAAMxnC,QAAQknB,EAAKksB,MAIjD5rB,oBAAoB+tB,GAEhB,GAA6B,SAAzBr0C,KAAKwwB,QAAQyF,QAAoB,IAAK,IAAIyE,KAAS16B,KAAKwwB,QAAQlvB,iBAAiB,mCAAmC,CACpH,IAAIszC,EAAYla,EAAMl6B,aAAa,QAC/Bq0C,EAAYna,EAAMl6B,aAAa,QAGnC,GAFIq0C,IAAWA,EAAYA,EAAU9U,eAEjC,MAAO6U,EACX,GAAsB,WAAlBla,EAAMzE,SAAwByE,EAAMoa,aAAa,YAEjD,IAAK,IAAI9C,KAAUtX,EAAMhuB,QAAYslC,EAAO+C,UAAUV,EAASzvC,OAAOgwC,EAAW5C,EAAOxyC,aAChFq1C,GAA2B,aAAdA,GAA0C,UAAdA,GAAyBna,EAAMsa,UAASX,EAASzvC,OAAOgwC,EAAWla,EAAMl7B,QAKtI8mB,2BAA2BggB,EAAOC,EAAK1+B,GACnC,GAAKy+B,EAAM,GAAGK,OAAOyL,QAchB,CAID,IAAI1L,EAAOJ,EAAM,GAGbE,EAAQxmC,KAAKw0C,UAAU9N,EAAMH,GAC7B1+B,GACA2+B,EAAM4C,SAAW,IAAMvhC,EAAEotC,OAASptC,EAAEqkC,MACpC1F,EAAM0F,MAAQrkC,EAAEqkC,MAChB1F,EAAM6C,UAAYxhC,EAAEotC,SAGpBzO,EAAM4C,SAAW,IACjB5C,EAAM6C,UAAY7C,EAAM0F,OAG5BxF,EAAKC,OAAOyC,SAAW,EACvB1C,EAAKC,OAAOuF,MAAQ,EACpBxF,EAAKC,OAAO0C,UAAY,EACxB,IAAI,IAAIxqC,EAAI,EAAGA,EAAI6nC,EAAKC,OAAOM,gBAAiBpoC,IAAQ6nC,EAAKC,OAAO0L,OAAOxzC,SAAgD,IAAnC6nC,EAAKC,OAAO0L,OAAOxzC,GAAGuqC,WAC1G1C,EAAKC,OAAOyC,UAAY1C,EAAKC,OAAO0L,OAAOxzC,GAAGuqC,SAC9C1C,EAAKC,OAAOuF,OAASxF,EAAKC,OAAO0L,OAAOxzC,GAAGqtC,MAC3CxF,EAAKC,OAAO0C,WAAa3C,EAAKC,OAAO0L,OAAOxzC,GAAGwqC,WAInD3C,EAAKC,OAAOyC,SAAW1C,EAAKC,OAAOyC,SAAW1C,EAAKC,OAAOM,gBAC1DjnC,KAAKyM,KAAK,iBAAkBi6B,EAAMA,EAAKC,OAAOyC,SAAU1C,EAAKC,OAAO0C,gBA1CxE,IAAK,IAAI3C,KAAQJ,EACTI,EAAKC,OAAOuF,OAASxF,EAAKC,OAAO0C,WAAa3C,EAAKC,OAAO0C,WAAa3C,EAAKC,OAAOuF,QACnFrkC,GACA6+B,EAAKC,OAAOyC,SAAW,IAAMvhC,EAAEotC,OAASptC,EAAEqkC,MAC1CxF,EAAKC,OAAOuF,MAAQrkC,EAAEqkC,MACtBxF,EAAKC,OAAO0C,UAAYxhC,EAAEotC,SAG1BvO,EAAKC,OAAOyC,SAAW,IACvB1C,EAAKC,OAAO0C,UAAY3C,EAAKC,OAAOuF,OAExClsC,KAAKyM,KAAK,iBAAkBi6B,EAAMA,EAAKC,OAAOyC,SAAU1C,EAAKC,OAAO0C,YAkC5E/iB,mBAAmBggB,EAAOC,EAAK1+B,GAC3B,IAAIgrC,EACJ,GAAIvM,EAAM,GAAGqC,SAAWpB,GAAyCsK,UAC1C,IAAnBtL,EAAI2O,WAAR,CACA,GAAyB,gBAArB3O,EAAI4O,cAAuD,SAArB5O,EAAI4O,eAC1CtC,EAAWtM,EAAIyM,aACXzM,EAAI6O,kBAAkB,kBAAoB7O,EAAI6O,kBAAkB,gBAAgBxxC,QAAQ,qBAAqB,IAC7GivC,EAAWn9B,KAAKC,MAAMk9B,GACxB,MAAOxuB,GACLxc,EAAIwc,EACJwuB,EAAW,qCAGnB7yC,KAAK4zC,2BAA2BtN,EAAOC,GACjC,KAAOA,EAAIoC,QAAUpC,EAAIoC,OAAS,IAC/BrC,EAAM,GAAGK,OAAOyL,QAAS9L,EAAM,GAAGK,OAAOiM,oBAAoB5yC,KAAKw0C,UAAUlO,EAAM,GAAIC,GAAMsM,GAChG7yC,KAAKmzC,UAAU7M,EAAOuM,EAAUhrC,GAFS7H,KAAK0zC,mBAAmBpN,EAAOC,EAAKsM,IAItFvsB,mBAAmBggB,EAAOC,EAAKsM,GAC3B,GAAIvM,EAAM,GAAGqC,SAAWpB,GAAyCsK,SAAjE,CACA,GAAIvL,EAAM,GAAGK,OAAOyL,SAAWpyC,KAAK0M,QAAQ22B,YAAa,CACrD,IAAImD,EAAQxmC,KAAKw0C,UAAUlO,EAAM,GAAIC,GACrC,GAAKC,EAAMkM,UAAa1yC,KAAK0M,QAAQ42B,iBAIjC,YAHAtjC,KAAK2yC,YAAYrM,EAAO,CACpBE,EAAMgM,YAGPtE,QAAQmH,KAAK,4CAExBr1C,KAAK4uC,iBAAiBtI,EAAOuM,GAAY7yC,KAAK0M,QAAQ+4B,kBAAkBp7B,QAAQ,iBAAkBk8B,EAAIoC,QAASpC,IAEnHjgB,cAAcigB,EAAK8N,EAAU/N,GACzB,GAAsB,GAAlBC,EAAI2O,WAIR,GAAIl1C,KAAK0M,QAAQ26B,WACb,GAAIf,EAAM,GAAGK,OAAOyL,QAAS,CACzB,MAAM5L,EAAQxmC,KAAKw0C,UAAUlO,EAAM,GAAIC,GACvCA,EAAI+O,KAAK9O,EAAMgM,UAAUpmC,WACtBm6B,EAAI+O,KAAKhP,EAAM,SACnBC,EAAI+O,KAAKjB,QARZnG,QAAQmH,KAAK,iFAYrB/uB,UAAUggB,EAAO0M,EAAcnrC,GAC3B,IAAK,IAAI6+B,KAAQJ,EACbI,EAAKiC,OAASpB,GAAyCwL,QACvD/yC,KAAKyM,KAAK,UAAWi6B,EAAMsM,EAAcnrC,GACzC7H,KAAKyM,KAAK,WAAYi6B,GAM1B,GAJI1mC,KAAK0M,QAAQs2B,iBACbhjC,KAAKyM,KAAK,kBAAmB65B,EAAO0M,EAAcnrC,GAClD7H,KAAKyM,KAAK,mBAAoB65B,IAE9BtmC,KAAK0M,QAAQi4B,iBAAkB,OAAO3kC,KAAK8uC,eAInDxoB,iBAAiBggB,EAAO99B,EAAS+9B,GAC7B,IAAK,IAAIG,KAAQJ,EACbI,EAAKiC,OAASpB,GAAyCgO,MACvDv1C,KAAKyM,KAAK,QAASi6B,EAAMl+B,EAAS+9B,GAClCvmC,KAAKyM,KAAK,WAAYi6B,GAM1B,GAJI1mC,KAAK0M,QAAQs2B,iBACbhjC,KAAKyM,KAAK,gBAAiB65B,EAAO99B,EAAS+9B,GAC3CvmC,KAAKyM,KAAK,mBAAoB65B,IAE9BtmC,KAAK0M,QAAQi4B,iBAAkB,OAAO3kC,KAAK8uC,eAEnDxoB,gBACI,MAAO,uCAAuCjc,QAAQ,SAAS,SAASmrC,GACpE,IAAIC,EAAoB,GAAhBpsC,KAAKqsC,SAAgB,EAC7B,OAD0C,MAANF,EAAYC,EAAQ,EAAJA,EAAQ,GACnD/rB,SAAS,OAG1BpD,YAAY5kB,EAAIgL,GAEZ,IAAIggC,EAAU/9B,EAOd,GARAgnC,QAEA31C,KAAKwwB,QAAU9uB,EACf1B,KAAK8pC,kBAAoB,GACzB9pC,KAAK2L,UAAY,GACjB3L,KAAKsmC,MAAQ,GACe,iBAAjBtmC,KAAKwwB,UAAsBxwB,KAAKwwB,QAAUtvB,SAASgH,cAAclI,KAAKwwB,WAE5ExwB,KAAKwwB,SAAoC,MAAzBxwB,KAAKwwB,QAAQolB,SAAkB,MAAM,IAAIntC,MAAM,6BACpE,GAAIzI,KAAKwwB,QAAQqb,SAAU,MAAM,IAAIpjC,MAAM,8BAE3C8+B,GAAyChiB,UAAU1hB,KAAK7D,MAExDA,KAAKwwB,QAAQqb,SAAW7rC,KACxB,IAAI61C,EAAsG,OAApFlnC,EAAO44B,GAAyCuO,kBAAkB91C,KAAKwwB,UAAoB7hB,EAAO,GAOxH,GALA3O,KAAK0M,QAAUsnC,IAAkB,EAAM,GACpCrR,GAA0CkT,EAA2B,MAAXnpC,EAAkBA,EAAU,IAEzF1M,KAAK0M,QAAQ47B,gBAAkBtoC,KAAK0M,QAAQ47B,gBAAgBj+B,QAAQ,OAAQ,IAExErK,KAAK0M,QAAQy4B,gBAAkBoC,GAAyCwO,qBAAsB,OAAO/1C,KAAK0M,QAAQggC,SAASroC,KAAKrE,MAGpI,GADwB,MAApBA,KAAK0M,QAAQk2B,MAAa5iC,KAAK0M,QAAQk2B,IAAM5iC,KAAKwwB,QAAQhwB,aAAa,YACtER,KAAK0M,QAAQk2B,IAAK,MAAM,IAAIn6B,MAAM,oBACvC,GAAIzI,KAAK0M,QAAQ+3B,eAAiBzkC,KAAK0M,QAAQg4B,kBAAmB,MAAM,IAAIj8B,MAAM,sGAClF,GAAIzI,KAAK0M,QAAQs2B,gBAAkBhjC,KAAK0M,QAAQu2B,SAAU,MAAM,IAAIx6B,MAAM,qDAC1E,GAAIzI,KAAK0M,QAAQ26B,YAAcrnC,KAAK0M,QAAQs2B,eAAgB,MAAM,IAAIv6B,MAAM,uDAExEzI,KAAK0M,QAAQg4B,oBACb1kC,KAAK0M,QAAQ+3B,cAAgBzkC,KAAK0M,QAAQg4B,yBACnC1kC,KAAK0M,QAAQg4B,mBAGW,MAA/B1kC,KAAK0M,QAAQu4B,iBAAwBjlC,KAAK0M,QAAQw4B,WAAcwB,GAAO1mC,KAAK0M,QAAQu4B,eAAe5gC,KAAKrE,KAAM0mC,EAAKjiC,KAAMiiC,IAE1F,iBAAxB1mC,KAAK0M,QAAQ4wB,SAAqBt9B,KAAK0M,QAAQ4wB,OAASt9B,KAAK0M,QAAQ4wB,OAAO0D,gBAClF0L,EAAW1sC,KAAKqsC,wBAA0BK,EAASrnC,YACxDqnC,EAASrnC,WAAWkC,YAAYmlC,IAEO,IAAnC1sC,KAAK0M,QAAQo4B,oBACT9kC,KAAK0M,QAAQo4B,kBAAmB9kC,KAAK8kC,kBAAoByC,GAAyC2C,WAAWlqC,KAAK0M,QAAQo4B,kBAAmB,qBAC5I9kC,KAAK8kC,kBAAoB9kC,KAAKwwB,SAEnCxwB,KAAK0M,QAAQ63B,aACkB,IAA3BvkC,KAAK0M,QAAQ63B,UAAoBvkC,KAAK8pC,kBAAoB,CAC1D9pC,KAAKwwB,SAEJxwB,KAAK8pC,kBAAoBvC,GAAyCyO,YAAYh2C,KAAK0M,QAAQ63B,UAAW,cAE/GvkC,KAAK0T,QAGb6zB,GAAyC0O,YAWzC1O,GAAyC76B,QAAU,GAGnD66B,GAAyCuO,kBAAoB,SAAStlB,GAElE,OAAIA,EAAQhwB,aAAa,MAAc+mC,GAAyC76B,QAAQwpC,GAA+B1lB,EAAQhwB,aAAa,aACvI,GAGT+mC,GAAyChiB,UAAY,GAErDgiB,GAAyC4O,WAAa,SAAS3lB,GAE3D,GADuB,iBAAZA,IAAsBA,EAAUtvB,SAASgH,cAAcsoB,IACV,OAAxC,MAAXA,EAAkBA,EAAQqb,cAAWtV,GAAoB,MAAM,IAAI9tB,MAAM,kNAC9E,OAAO+nB,EAAQqb,UAGnBtE,GAAyC6O,SAAW,WAChD,IAAIC,EACJ,GAAIn1C,SAASI,iBAAkB+0C,EAAYn1C,SAASI,iBAAiB,iBAChE,CACD+0C,EAAY,GAEZ,IAAIC,EAAiBlgC,GAAW,MACxB,IAAIwqB,EAAS,GACb,IAAK,IAAIl/B,KAAM0U,EAAa,qBAAqBuT,KAAKjoB,EAAG0F,WAAYw5B,EAAO/8B,KAAKwyC,EAAUxyC,KAAKnC,IAC3Fk/B,EAAO/8B,UAAK0yB,GACjB,OAAOqK,GAJiB,GAOhC0V,EAAcp1C,SAAS80B,qBAAqB,QAC5CsgB,EAAcp1C,SAAS80B,qBAAqB,SAEhD,MAAO,MACH,IAAI4K,EAAS,GACb,IAAK,IAAIiL,KAAYwK,GACwD,IAAzE9O,GAAyCuO,kBAAkBjK,GAAqBjL,EAAO/8B,KAAK,IAAI0jC,GAAyCsE,IACxIjL,EAAO/8B,UAAK0yB,GACjB,OAAOqK,GALJ,IAkBX2G,GAAyCgP,gBAAkB,CAEvD,kDAGJhP,GAAyCwO,mBAAqB,WAC1D,IAAIS,GAAiB,EACrB,GAAI92C,OAAO+2C,MAAQ/2C,OAAOkwC,YAAclwC,OAAOg3C,UAAYh3C,OAAOi3C,MAAQj3C,OAAO40C,UAAYpzC,SAASgH,cAClG,GAAM,cAAehH,SAAS0F,cAAc,KACvC,MACoE2vB,IAAjEgR,GAAyCqP,sBAE7CrP,GAAyCgP,gBAAkBhP,GAAyCqP,qBAEpG,IAAK,IAAIC,KAAStP,GAAyCgP,gBAAgB,GAAIM,EAAMltB,KAAKwD,UAAU2pB,WAAY,CAC5GN,GAAiB,EACjB,eAR2CA,GAAiB,OAWjEA,GAAiB,EACxB,OAAOA,GAEXjP,GAAyCkI,cAAgB,SAASsH,GAG9D,IAAIC,EAAaC,KAAKF,EAAQpyC,MAAM,KAAK,IAErCuyC,EAAaH,EAAQpyC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAE5DwyC,EAAK,IAAIC,YAAYJ,EAAWl4C,QAChCu4C,EAAK,IAAIC,WAAWH,GACxB,IAAI,IAAIt4C,EAAI,EAAGuF,EAAM4yC,EAAWl4C,OAAQy4C,EAAM,GAAKnzC,EAAKmzC,EAAM14C,GAAKuF,EAAMvF,GAAKuF,EAAKmzC,EAAM14C,IAAMA,IAAIw4C,EAAGx4C,GAAKm4C,EAAWQ,WAAW34C,GAEjI,OAAO,IAAI83C,KAAK,CACZQ,GACD,CACCl2C,KAAMi2C,KAId,MAAMjI,GAAgC,CAAC14B,EAAMkhC,IAAelhC,EAAK/Q,QAAQyP,GAAOA,IAASwiC,IACnFv3C,KAAK+U,GAAOA,IAIZihC,GAAkCwB,GAAMA,EAAIrtC,QAAQ,cAAe+T,GAAQA,EAAM2iB,OAAO,GAAGC,gBAIjGuG,GAAyC3gC,cAAgB,SAASsD,GAC9D,IAAIsQ,EAAMtZ,SAAS0F,cAAc,OAEjC,OADA4T,EAAIqX,UAAY3nB,EACTsQ,EAAIm9B,WAAW,IAG1BpQ,GAAyCmE,cAAgB,SAASlb,EAAS1e,GACvE,GAAI0e,IAAY1e,EAAW,OAAO,EAElC,KAAM0e,EAAUA,EAAQnrB,YACpB,GAAImrB,IAAY1e,EAAW,OAAO,EAEtC,OAAO,GAEXy1B,GAAyC2C,WAAa,SAASxoC,EAAI+C,GAC/D,IAAI+rB,EAGJ,GAFkB,iBAAP9uB,EAAiB8uB,EAAUtvB,SAASgH,cAAcxG,GACrC,MAAfA,EAAGk0C,WAAkBplB,EAAU9uB,GACzB,MAAX8uB,EAAiB,MAAM,IAAI/nB,MAAM,aAAahE,+EAClD,OAAO+rB,GAEX+W,GAAyCyO,YAAc,SAAS4B,EAAKnzC,GACjE,IAAI/C,EAAI0U,EACR,GAAIwhC,aAAex0C,MAAO,CACtBgT,EAAW,GACX,IACI,IAAK1U,KAAMk2C,EAAIxhC,EAASvS,KAAK7D,KAAKkqC,WAAWxoC,EAAI+C,IACnD,MAAOoD,GACLuO,EAAW,WAEZ,GAAmB,iBAARwhC,EAEd,IAAKl2C,KADL0U,EAAW,GACAlV,SAASI,iBAAiBs2C,IAAKxhC,EAASvS,KAAKnC,QACjC,MAAhBk2C,EAAIhC,WAAkBx/B,EAAW,CACxCwhC,IAEJ,GAAgB,MAAZxhC,IAAqBA,EAAStX,OAAQ,MAAM,IAAI2J,MAAM,aAAahE,gGACvE,OAAO2R,GAMXmxB,GAAyCsB,QAAU,SAASgP,EAAUnO,EAAUoO,GAC5E,OAAIp4C,OAAOmpC,QAAQgP,GAAkBnO,IAChB,MAAZoO,EAAyBA,SAA7B,GAKTvQ,GAAyCgH,YAAc,SAAS7H,EAAMjC,GAClE,IAAKA,EAAe,OAAO,EAE3BA,EAAgBA,EAAc9/B,MAAM,KACpC,IAAIozC,EAAWrR,EAAKzlC,KAChB+2C,EAAeD,EAAS1tC,QAAQ,QAAS,IAC7C,IAAK,IAAI4tC,KAAaxT,EAElB,GADAwT,EAAYA,EAAU77B,OACM,MAAxB67B,EAAUlX,OAAO,IACjB,IAAuG,IAAnG2F,EAAKjiC,KAAKs7B,cAAcn8B,QAAQq0C,EAAUlY,cAAe2G,EAAKjiC,KAAK3F,OAASm5C,EAAUn5C,QAAgB,OAAO,OAC9G,GAAI,QAAQ6qB,KAAKsuB,IAEpB,GAAID,IAAiBC,EAAU5tC,QAAQ,QAAS,IAAK,OAAO,OAE5D,GAAI0tC,IAAaE,EAAW,OAAO,EAG3C,OAAO,GAGW,oBAAX5c,QAAqC,OAAXA,SAAiBA,OAAOE,GAAGsQ,SAAW,SAASn/B,GAChF,OAAO1M,KAAKk4C,MAAK,WACb,OAAO,IAAI3Q,GAAyCvnC,KAAM0M,QAIlE66B,GAAyCsC,MAAQ,QACjDtC,GAAyCqC,OAAS,SAGlDrC,GAAyC4Q,SAAW5Q,GAAyCqC,OAC7FrC,GAAyCqB,UAAY,YACrDrB,GAAyC6Q,WAAa7Q,GAAyCqB,UAC/FrB,GAAyCsK,SAAW,WACpDtK,GAAyCgO,MAAQ,QACjDhO,GAAyCwL,QAAU,UAmCnD,IAAI/B,GAAwC,SAASJ,EAAKz4B,EAAKkgC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvF,IAAIC,EA1ByC,SAAS1gC,GAC7CA,EAAI2gC,aACb,IAAIC,EAAK5gC,EAAI6gC,cACT7J,EAASjuC,SAAS0F,cAAc,UACpCuoC,EAAOzgC,MAAQ,EACfygC,EAAOttC,OAASk3C,EAChB,IAAInI,EAAMzB,EAAO0B,WAAW,MAC5BD,EAAIqI,UAAU9gC,EAAK,EAAG,GACtB,IAAM/L,KAAMA,GAAUwkC,EAAIsI,aAAa,EAAG,EAAG,EAAGH,GAE5CT,EAAK,EACLa,EAAKJ,EACLK,EAAKL,EACT,KAAMK,EAAKd,GAEO,IADFlsC,EAAgB,GAAVgtC,EAAK,GAAS,GACfD,EAAKC,EACjBd,EAAKc,EACVA,EAAKD,EAAKb,GAAM,EAEpB,IAAI/iB,EAAQ6jB,EAAKL,EACjB,OAAc,IAAVxjB,EAAoB,EACZA,EAKU8jB,CAA2ClhC,GACjE,OAAOy4B,EAAIqI,UAAU9gC,EAAKkgC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,IAK/D,MAAMvJ,GACFhpB,mBACItmB,KAAKs5C,QAAU,oEAEnBhzB,gBAAgBoU,GACZ,IACI6e,EACAC,EAEAC,EACAC,EACAC,EANAC,EAAS,GAGTC,EAAO,GAIPC,EAAO,GACPj7C,EAAI,EACR,KACI06C,EAAO7e,EAAM77B,KACb26C,EAAO9e,EAAM77B,KACbg7C,EAAOnf,EAAM77B,KACb46C,EAAOF,GAAQ,EACfG,GAAe,EAAPH,IAAa,EAAIC,GAAQ,EACjCG,GAAe,GAAPH,IAAc,EAAIK,GAAQ,EAClCC,EAAc,GAAPD,EACHvY,MAAMkY,GAAOG,EAAOG,EAAO,GACtBxY,MAAMuY,KAAOC,EAAO,IAC7BF,EAASA,EAAS55C,KAAKs5C,QAAQvY,OAAO0Y,GAAQz5C,KAAKs5C,QAAQvY,OAAO2Y,GAAQ15C,KAAKs5C,QAAQvY,OAAO4Y,GAAQ35C,KAAKs5C,QAAQvY,OAAO+Y,GAC1HP,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,GACtBj7C,EAAI67B,EAAM57B,SAEpB,OAAO86C,EAEXtzB,eAAeyzB,EAAgBC,GAC3B,IAAKD,EAAe37B,MAAM,2BAA4B,OAAO47B,EAC7D,IAAIC,EAAWj6C,KAAKk6C,SAASH,EAAe1vC,QAAQ,0BAA2B,KAC3E8vC,EAAWn6C,KAAKo6C,eAAeH,GAC/BjoB,EAAQhyB,KAAKq6C,iBAAiBL,EAAmBG,GACrD,MAAO,0BAA0Bn6C,KAAKs6C,SAAStoB,KAEnD1L,wBAAwB0zB,EAAmBG,GACvC,IAAII,EAAYv6C,KAAKw6C,aAAaL,GAC9BM,EAAgBz6C,KAAK06C,WAAWV,EAAmBO,GAEvD,OADc,IAAIjD,WAAWmD,GAGjCn0B,oBAAoB6zB,GAChB,IAAIQ,EACA7wC,EAAI,EACR,KAAMA,EAAIqwC,EAASr7C,QAAO,CAEtB,GADA67C,EAAMR,EAASrwC,GACA,MAAX6wC,EAAI,GAAwB,MAAXA,EAAI,GAAY,OAAOA,EAC5C7wC,IAEJ,MAAO,GAEXwc,kBAAkB0zB,EAAmBO,GACjC,IAAIK,EAAYZ,EAAkB3vC,QAAQ,0BAA2B,IACjEwwC,EAAM76C,KAAKk6C,SAASU,GACpBE,EAAgBD,EAAIj3C,QAAQ,IAAK,GACjCm3C,EAAMF,EAAI52C,MAAM,EAAG62C,GACnBE,EAAMH,EAAI52C,MAAM62C,GAChB/3C,EAAQg4C,EAGZ,OAFAh4C,EAAQA,EAAMuiB,OAAOi1B,GACrBx3C,EAAQA,EAAMuiB,OAAO01B,GACdj4C,EAEXujB,sBAAsB20B,GAClB,IAAIC,EAAO,EACPf,EAAW,GACf,OAAW,CAEP,GAA4B,MAAxBc,EAAcC,GAA4C,MAA5BD,EAAcC,EAAO,GAAY,MACnE,GAA4B,MAAxBD,EAAcC,GAA4C,MAA5BD,EAAcC,EAAO,GAAYA,GAAQ,MACtE,CAED,IAAIC,EAAWD,GADoB,IAA1BD,EAAcC,EAAO,GAAWD,EAAcC,EAAO,IAC/B,EAC3BP,EAAMM,EAAch3C,MAAMi3C,EAAMC,GACpChB,EAASt2C,KAAK82C,GACdO,EAAOC,EAEX,GAAID,EAAOD,EAAcn8C,OAAQ,MAErC,OAAOq7C,EAEX7zB,gBAAgBoU,GAEZ,IAAI6e,EACAC,EAEAC,EACAC,EACAC,EAHAE,EAAO,GAIPC,EAAO,GACPj7C,EAAI,EACJg8C,EAAM,GAKV,IAHiB,sBACFO,KAAK1gB,IAAQwT,QAAQmH,KAAK,oJACzC3a,EAAQA,EAAMrwB,QAAQ,sBAAuB,IAEzCovC,EAAOz5C,KAAKs5C,QAAQ11C,QAAQ82B,EAAMqG,OAAOliC,MACzC66C,EAAO15C,KAAKs5C,QAAQ11C,QAAQ82B,EAAMqG,OAAOliC,MACzC86C,EAAO35C,KAAKs5C,QAAQ11C,QAAQ82B,EAAMqG,OAAOliC,MACzCi7C,EAAO95C,KAAKs5C,QAAQ11C,QAAQ82B,EAAMqG,OAAOliC,MACzC06C,EAAOE,GAAQ,EAAIC,GAAQ,EAC3BF,GAAe,GAAPE,IAAc,EAAIC,GAAQ,EAClCE,GAAe,EAAPF,IAAa,EAAIG,EACzBe,EAAIh3C,KAAK01C,GACI,KAATI,GAAakB,EAAIh3C,KAAK21C,GACb,KAATM,GAAae,EAAIh3C,KAAKg2C,GAC1BN,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,GACtBj7C,EAAI67B,EAAM57B,SAEpB,OAAO+7C,GAGfvL,GAAkC2G,YChgE9B/0C,SAASgH,cAAc,uBACR,IAAImzC,GAAS,qBAAsB,CAClDzY,IAAK,aACLa,uBAAuB,EACvB2B,mBAAoB,SCNjB,MAAMkW,GAAQ,CACjB,WACA,UACA,cACA,YACA,YACA,gBACA,SACA,gBACA,UACA,gBACA,eACA,yBAES5zB,GAAW,CACpB6zB,SAAU,GACVC,YAAY,EACZC,qBAAqB,EACrBC,UAAW,SACXC,UAAU,EACVC,cAAe,qBACfC,QAA2B,iBAAXn8C,SACoC,IAAhDA,OAAOytB,UAAU2pB,UAAUlzC,QAAQ,QACvCk4C,eAAgB,SAChBC,qBAAqB,EACrBC,YAAY,EACZC,eAAe,EACfC,YAAa,KACbC,WAAY,QACZC,YAAa,GACbC,cAAe,EACfC,eAAgB,EAChB76B,QAAS,GACT86B,eAAe,EACfC,eAAe,EACfC,YAAY,EACZzO,aAAe/jB,GAA2B,oBAAZikB,SAA2BA,QAAQmH,KAAKprB,GACtEyyB,QAAUC,IACN,MAAMC,EAAO,IAAI1vC,KAAKyvC,EAAUE,WAChCD,EAAKE,SAAS,EAAG,EAAG,EAAG,GACvBF,EAAKG,QAAQH,EAAKI,UAAY,GAAMJ,EAAKK,SAAW,GAAK,GACzD,IAAIC,EAAQ,IAAIhwC,KAAK0vC,EAAKO,cAAe,EAAG,GAC5C,OAAQ,EACJ9zC,KAAK81B,QAAQyd,EAAKC,UAAYK,EAAML,WAAa,MAC7C,GACEK,EAAMD,SAAW,GAAK,GACxB,IAEZG,cAAe,EACfC,qBAAsB,GACtBC,QAAQ,EACRC,OAAQ,UACRC,gBAAiB,EACjBC,KAAM,SACNC,kBAAmB,WACnBC,UAAW,yOACXC,YAAY,EACZ3wC,IAAK,IAAIC,KACT2wC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXC,UAAW,GACXC,cAAe,GACfC,OAAQ,GACRC,cAAe,GACfC,QAAS,GACTC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,QAAS,GACTtjC,SAAU,OACVujC,qBAAiBnoB,EACjBooB,UAAW,uOACXC,uBAAuB,EACvBC,WAAY,EACZC,QAAQ,EACRC,WAAW,EACXC,aAAa,EACbtmB,MAAM,GC/EGumB,GAAU,CACnBC,SAAU,CACNC,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,SAAU,CACN,SACA,SACA,UACA,YACA,WACA,SACA,aAGRC,OAAQ,CACJF,UAAW,CACP,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,SAAU,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAGRE,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1DC,eAAgB,EAChBC,QAAUC,IACN,MAAM31B,EAAI21B,EAAM,IAChB,GAAI31B,EAAI,GAAKA,EAAI,GACb,MAAO,KACX,OAAQA,EAAI,IACR,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,QACI,MAAO,OAGnB41B,eAAgB,OAChBC,iBAAkB,KAClBC,YAAa,sBACbC,YAAa,kBACbC,KAAM,CAAC,KAAM,MACbC,cAAe,OACfC,eAAgB,QAChBC,cAAe,OACfC,gBAAiB,SACjBnB,WAAW,GCrEFz0C,GAAM,CAACf,EAAQzK,EAAS,IAAM,MAAMyK,IAAStF,OAAgB,EAAVnF,GACnDqhD,GAAOC,IAAmB,IAATA,EAAgB,EAAI,EAC3C,SAASC,GAAS9kB,EAAI+kB,GACzB,IAAI7/B,EACJ,OAAO,WACHyX,aAAazX,GACbA,EAAI5f,YAAW,IAAM06B,EAAGrtB,MAAMlO,KAAMiG,YAAYq6C,IAGjD,MAAMC,GAAYhhD,GAAQA,aAAe6D,MAAQ7D,EAAM,CAACA,GCTxD,SAAS+E,GAAY82B,EAAMh0B,EAAWg5C,GACzC,IAAa,IAATA,EACA,OAAOhlB,EAAK16B,UAAUC,IAAIyG,GAC9Bg0B,EAAK16B,UAAUU,OAAOgG,GAEnB,SAASR,GAAcD,EAAKS,EAAWo5C,GAC1C,MAAM34C,EAAInI,OAAOwB,SAAS0F,cAAcD,GAMxC,OALAS,EAAYA,GAAa,GACzBo5C,EAAUA,GAAW,GACrB34C,EAAET,UAAYA,OACEmvB,IAAZiqB,IACA34C,EAAE4/B,YAAc+Y,GACb34C,EAEJ,SAAS44C,GAAUr7C,GACtB,KAAOA,EAAKq4B,YACRr4B,EAAKmC,YAAYnC,EAAKq4B,YAEvB,SAASijB,GAAWt7C,EAAMmD,GAC7B,OAAIA,EAAUnD,GACHA,EACFA,EAAKC,WACHq7C,GAAWt7C,EAAKC,WAAYkD,QADlC,EAIF,SAASo4C,GAAkBC,EAAgBlvB,GAC9C,MAAMhT,EAAU9X,GAAc,MAAO,mBAAoBi6C,EAAWj6C,GAAc,QAAS,YAAcg6C,GAAiBE,EAAUl6C,GAAc,OAAQ,WAAYm6C,EAAYn6C,GAAc,OAAQ,aAQxM,IAPiD,IAA7CumB,UAAU2pB,UAAUlzC,QAAQ,YAC5Bi9C,EAAS5/C,KAAO,UAGhB4/C,EAAS5/C,KAAO,OAChB4/C,EAASG,QAAU,aAEVzqB,IAAT7E,EACA,IAAK,MAAMryB,KAAOqyB,EACdmvB,EAASt6C,aAAalH,EAAKqyB,EAAKryB,IAIxC,OAHAqf,EAAQ3Z,YAAY87C,GACpBniC,EAAQ3Z,YAAY+7C,GACpBpiC,EAAQ3Z,YAAYg8C,GACbriC,EAEJ,SAASuiC,GAAev1C,GAC3B,IACI,GAAkC,mBAAvBA,EAAMw1C,aAA6B,CAE1C,OADax1C,EAAMw1C,eACP,GAEhB,OAAOx1C,EAAM/M,OAEjB,MAAO0lB,GACH,OAAO3Y,EAAM/M,QClDrB,MAAMwiD,GAAY,OACLC,GAAa,CAACC,EAAalC,EAAW5B,IAAWA,EAAO8B,OAAOF,EAAY,YAAc,YAAYkC,GACrGC,GAAY,CACrBC,EAAGJ,GACHt3B,EAAG,SAAU23B,EAASC,EAAWlE,GAC7BiE,EAAQE,SAASnE,EAAO8B,OAAOD,SAASx7C,QAAQ69C,KAEpDE,EAAG,CAACH,EAASI,KACTJ,EAAQ1E,SAASrjC,WAAWmoC,KAEhCC,EAAG,CAACL,EAASI,KACTJ,EAAQ1E,SAASrjC,WAAWmoC,KAEhCE,EAAG,CAACN,EAASO,KACTP,EAAQzE,QAAQtjC,WAAWsoC,KAE/BC,EAAG,CAACR,EAAS1B,EAAMvC,KACfiE,EAAQ1E,SAAU0E,EAAQS,WAAa,GACnC,GAAK9B,GAAI,IAAIjuB,OAAOqrB,EAAOuC,KAAK,GAAI,KAAKn2B,KAAKm2B,MAEtDoC,EAAG,SAAUV,EAASW,EAAY5E,GAC9BiE,EAAQE,SAASnE,EAAO8B,OAAOF,UAAUv7C,QAAQu+C,KAErDC,EAAG,CAACZ,EAASa,KACTb,EAAQc,WAAW7oC,WAAW4oC,KAElCE,EAAG,CAACC,EAAGC,IAAgB,IAAIv1C,KAA+B,IAA1BuM,WAAWgpC,IAC3CC,EAAG,SAAUlB,EAASmB,EAASpF,GAC3B,MAAMqF,EAAa7hD,SAAS4hD,GACtB/F,EAAO,IAAI1vC,KAAKs0C,EAAQrE,cAAe,EAAG,EAAuB,GAAlByF,EAAa,GAAQ,EAAG,EAAG,EAAG,GAEnF,OADAhG,EAAKG,QAAQH,EAAKI,UAAYJ,EAAKK,SAAWM,EAAOgC,gBAC9C3C,GAEX/tC,EAAG,CAAC2yC,EAASqB,KACTrB,EAAQsB,YAAYrpC,WAAWopC,KAEnCE,EAAG,CAACP,EAAGQ,IAAY,IAAI91C,KAAK81C,GAC5BC,EAAG,CAACzB,EAASO,KACTP,EAAQzE,QAAQtjC,WAAWsoC,KAE/BmB,EAAG,CAAC1B,EAASI,KACTJ,EAAQ1E,SAASrjC,WAAWmoC,KAEhC/iD,EAAG,CAAC2iD,EAAS2B,KACT3B,EAAQ4B,WAAW3pC,WAAW0pC,KAElCE,EAAG,CAAC7B,EAASO,KACTP,EAAQzE,QAAQtjC,WAAWsoC,KAE/BuB,EAAGnC,GACHnrC,EAAG,CAACwrC,EAAS+B,KACT/B,EAAQE,SAASjoC,WAAW8pC,GAAS,IAEzCxtC,EAAG,CAACyrC,EAAS+B,KACT/B,EAAQE,SAASjoC,WAAW8pC,GAAS,IAEzCz5B,EAAG,CAAC03B,EAASa,KACTb,EAAQc,WAAW7oC,WAAW4oC,KAElCmB,EAAG,CAAChB,EAAGiB,IAAoB,IAAIv2C,KAAKuM,WAAWgqC,IAC/CC,EAAGvC,GACHp3C,EAAG,CAACy3C,EAASqB,KACTrB,EAAQsB,YAAY,IAAOrpC,WAAWopC,MAGjCc,GAAa,CACtBpC,EAAG,SACH13B,EAAG,SACH83B,EAAG,eACHE,EAAG,eACHC,EAAG,mBACHE,EAAG,GACHE,EAAG,SACHE,EAAG,eACHG,EAAG,OACHG,EAAG,eACH7zC,EAAG,WACHk0C,EAAG,OACHE,EAAG,eACHC,EAAG,eACHrkD,EAAG,eACHwkD,EAAG,eACHC,EAAG,SACHttC,EAAG,eACHD,EAAG,eACH+T,EAAG,eACH05B,EAAG,OACHE,EAAG,eACH35C,EAAG,YAEM65C,GAAU,CACnBb,EAAInG,GAASA,EAAKiH,cAClBtC,EAAG,SAAU3E,EAAMW,EAAQ7wC,GACvB,OAAO6wC,EAAO2B,SAASC,UAAUyE,GAAQF,EAAE9G,EAAMW,EAAQ7wC,KAE7Dmd,EAAG,SAAU+yB,EAAMW,EAAQ7wC,GACvB,OAAO00C,GAAWwC,GAAQ7tC,EAAE6mC,EAAMW,EAAQ7wC,GAAW,GAAG,EAAO6wC,IAEnEoE,EAAG,SAAU/E,EAAMW,EAAQ7wC,GACvB,OAAOpC,GAAIs5C,GAAQV,EAAEtG,EAAMW,EAAQ7wC,KAEvCm1C,EAAIjF,GAAStyC,GAAIsyC,EAAKqF,YACtBH,EAAG,SAAUlF,EAAMW,GACf,YAA0BhnB,IAAnBgnB,EAAOiC,QACR5C,EAAKI,UAAYO,EAAOiC,QAAQ5C,EAAKI,WACrCJ,EAAKI,WAEfgF,EAAG,CAACpF,EAAMW,IAAWA,EAAOuC,KAAKK,GAAIvD,EAAKqF,WAAa,KACvDC,EAAG,SAAUtF,EAAMW,GACf,OAAO6D,GAAWxE,EAAKkH,YAAY,EAAMvG,IAE7C6E,EAAIxF,GAAStyC,GAAIsyC,EAAKmH,cACtBxB,EAAI3F,GAASA,EAAKC,UAAY,IAC9B6F,EAAG,SAAU9F,EAAM4F,EAAG91C,GAClB,OAAOA,EAAQgwC,QAAQE,IAE3B/tC,EAAI+tC,GAAStyC,GAAIsyC,EAAKO,cAAe,GACrC8F,EAAIrG,GAAStyC,GAAIsyC,EAAKI,WACtBkG,EAAItG,GAAUA,EAAKqF,WAAa,GAAKrF,EAAKqF,WAAa,GAAK,GAC5DpjD,EAAI+9C,GAAStyC,GAAIsyC,EAAKoH,cACtBX,EAAIzG,GAASA,EAAKI,UAClBsG,EAAG,SAAU1G,EAAMW,GACf,OAAOA,EAAO2B,SAASE,SAASxC,EAAKK,WAEzCjnC,EAAI4mC,GAAStyC,GAAIsyC,EAAKkH,WAAa,GACnC/tC,EAAI6mC,GAASA,EAAKkH,WAAa,EAC/Bh6B,EAAI8yB,GAASA,EAAKmH,aAClBP,EAAI5G,GAASA,EAAKC,UAClB6G,EAAI9G,GAASA,EAAKK,SAClBlzC,EAAI6yC,GAASn2C,OAAOm2C,EAAKO,eAAevpB,UAAU,IC/HzCqwB,GAAsB,EAAGC,OAAAA,EAASx8B,GAAUy8B,KAAAA,EAAOlF,GAASmF,SAAAA,GAAW,KAAa,CAAC5C,EAAS6C,EAAMC,KAC7G,MAAM/G,EAAS+G,GAAkBH,EACjC,YAA0B5tB,IAAtB2tB,EAAOK,YAA6BH,EAGjCC,EACF1/C,MAAM,IACNzE,KAAI,CAACs1C,EAAG32C,EAAGyrB,IAAQs5B,GAAQpO,IAAqB,OAAflrB,EAAIzrB,EAAI,GACxC+kD,GAAQpO,GAAGgM,EAASjE,EAAQ2G,GACtB,OAAN1O,EACIA,EACA,KACL/hC,KAAK,IATCywC,EAAOK,WAAW/C,EAAS6C,EAAM9G,IAWnCiH,GAAmB,EAAGN,OAAAA,EAASx8B,GAAUy8B,KAAAA,EAAOlF,MAAc,CAACrC,EAAM6H,EAAaC,EAAUC,KACrG,GAAa,IAAT/H,IAAeA,EACf,OACJ,MAAMW,EAASoH,GAAgBR,EAC/B,IAAIS,EACJ,MAAMC,EAAWjI,EACjB,GAAIA,aAAgB1vC,KAChB03C,EAAa,IAAI13C,KAAK0vC,EAAKC,gBAC1B,GAAoB,iBAATD,QACKrmB,IAAjBqmB,EAAKkI,QACLF,EAAa,IAAI13C,KAAK0vC,QACrB,GAAoB,iBAATA,EAAmB,CAC/B,MAAM3yC,EAASw6C,IAAgBP,GAAUx8B,IAAUy0B,WAC7C4I,EAAUt+C,OAAOm2C,GAAMxgC,OAC7B,GAAgB,UAAZ2oC,EACAH,EAAa,IAAI13C,KACjBw3C,GAAW,OAEV,GAAI,KAAK/6B,KAAKo7B,IACf,OAAOp7B,KAAKo7B,GACZH,EAAa,IAAI13C,KAAK0vC,QACrB,GAAIsH,GAAUA,EAAOc,UACtBJ,EAAaV,EAAOc,UAAUpI,EAAM3yC,OACnC,CACD26C,EACKV,GAAWA,EAAOtG,WAEb,IAAI1wC,MAAK,IAAIA,MAAO4vC,SAAS,EAAG,EAAG,EAAG,IADtC,IAAI5vC,MAAK,IAAIA,MAAOiwC,cAAe,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5D,IAAI8H,EAASC,EAAM,GACnB,IAAK,IAAIrmD,EAAI,EAAGsmD,EAAa,EAAGC,EAAW,GAAIvmD,EAAIoL,EAAOnL,OAAQD,IAAK,CACnE,MAAMwmD,EAAQp7C,EAAOpL,GACfymD,EAAwB,OAAVD,EACdE,EAA4B,OAAlBt7C,EAAOpL,EAAI,IAAeymD,EAC1C,GAAI3B,GAAW0B,KAAWE,EAAS,CAC/BH,GAAYzB,GAAW0B,GACvB,MAAMjnC,EAAQ,IAAI8T,OAAOkzB,GAAUhK,KAAKwB,GACpCx+B,IAAU6mC,GAAU,IACpBC,EAAc,MAAVG,EAAgB,OAAS,WAAW,CACpC9pB,GAAI+lB,GAAU+D,GACdtjB,IAAK3jB,IAAQ+mC,UAIfG,IACNF,GAAY,KAChBF,EAAIzjD,SAAQ,EAAG85B,GAAAA,EAAIwG,IAAAA,KAAW6iB,EAAarpB,EAAGqpB,EAAY7iB,EAAKwb,IAAWqH,IAE9EA,EAAaK,EAAUL,OAAaruB,GAG5C,GAAMquB,aAAsB13C,OAASo0B,MAAMsjB,EAAW/H,WAMtD,OAFiB,IAAb6H,GACAE,EAAW9H,SAAS,EAAG,EAAG,EAAG,GAC1B8H,EALHV,EAAOlW,aAAa,IAAIvlC,MAAM,0BAA0Bo8C,OAOzD,SAASW,GAAaC,EAAOC,EAAOhB,GAAW,GAClD,OAAiB,IAAbA,EACQ,IAAIx3C,KAAKu4C,EAAM5I,WAAWC,SAAS,EAAG,EAAG,EAAG,GAChD,IAAI5vC,KAAKw4C,EAAM7I,WAAWC,SAAS,EAAG,EAAG,EAAG,GAE7C2I,EAAM5I,UAAY6I,EAAM7I,UAQ5B,MAGM5uC,GACJ,MAEF,SAAS03C,GAAgBzB,GAC5B,IAAI0B,EAAQ1B,EAAO9H,YACf+G,EAAUe,EAAO7H,cACjBgG,EAAU6B,EAAO5H,eACrB,QAAuB/lB,IAAnB2tB,EAAO2B,QAAuB,CAC9B,MAAMC,EAAU5B,EAAO2B,QAAQ5D,WACzB8D,EAAa7B,EAAO2B,QAAQ7B,aAC5BgC,EAAa9B,EAAO2B,QAAQ9B,aAC9B6B,EAAQE,IACRF,EAAQE,GAERF,IAAUE,GAAW3C,EAAU4C,IAC/B5C,EAAU4C,GAEVH,IAAUE,GAAW3C,IAAY4C,GAAc1D,EAAU2D,IACzD3D,EAAU6B,EAAO2B,QAAQ9B,cAEjC,QAAuBxtB,IAAnB2tB,EAAO+B,QAAuB,CAC9B,MAAMC,EAAQhC,EAAO+B,QAAQhE,WACvBkE,EAAajC,EAAO+B,QAAQjC,aAClC4B,EAAQv8C,KAAKL,IAAI48C,EAAOM,GACpBN,IAAUM,IACV/C,EAAU95C,KAAKL,IAAIm9C,EAAYhD,IAC/ByC,IAAUM,GAAS/C,IAAYgD,IAC/B9D,EAAU6B,EAAO+B,QAAQlC,cAEjC,MAAO,CAAE6B,MAAAA,EAAOzC,QAAAA,EAASd,QAAAA,GCvHA,mBAAlBljD,OAAO6G,SACd7G,OAAO6G,OAAS,SAAUrH,KAAW8iC,GACjC,IAAK9iC,EACD,MAAMF,UAAU,8CAEpB,IAAK,MAAMyH,KAAUu7B,EACbv7B,GACA/G,OAAO2G,KAAKI,GAAQzE,SAASpC,GAASV,EAAOU,GAAO6G,EAAO7G,KAGnE,OAAOV,ICHf,SAASynD,GAAkB51B,EAAS61B,GAChC,MAAMz9B,EAAO,CACTs7B,OAAQ/kD,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAI4pB,IAAiB02B,GAAUC,eACnEpC,KAAMqC,IAuDV,SAASC,EAAelrB,GACpB,OAAOA,EAAGv2B,KAAK4jB,GAEnB,SAAS89B,IACL,MAAMxC,EAASt7B,EAAKs7B,QACO,IAAvBA,EAAOlF,aAA+C,IAAtBkF,EAAOrF,aAGZ,IAAtBqF,EAAOtG,YACZl+C,OAAOqJ,uBAAsB,WAKzB,QAJ+BwtB,IAA3B3N,EAAK+9B,oBACL/9B,EAAK+9B,kBAAkB9/C,MAAMojC,WAAa,SAC1CrhB,EAAK+9B,kBAAkB9/C,MAAMI,QAAU,cAEhBsvB,IAAvB3N,EAAKg+B,cAA6B,CAClC,MAAMC,GAAaj+B,EAAKk+B,KAAKl0B,YAAc,GAAKsxB,EAAOrF,WACvDj2B,EAAKg+B,cAAc//C,MAAM6H,MAAQm4C,EAAY,KAC7Cj+B,EAAK+9B,kBAAkB9/C,MAAM6H,MACzBm4C,QAC0BtwB,IAArB3N,EAAKm+B,YACAn+B,EAAKm+B,YAAYn0B,YACjB,GACN,KACRhK,EAAK+9B,kBAAkB9/C,MAAMmgD,eAAe,cAC5Cp+B,EAAK+9B,kBAAkB9/C,MAAMmgD,eAAe,eAK5D,SAASC,EAAWp/C,GAChB,GAAkC,IAA9B+gB,EAAKs+B,cAAcpoD,OAAc,CACjC,MAAMqoD,OAAsC5wB,IAAxB3N,EAAKs7B,OAAO2B,SAC5BL,GAAa,IAAIt4C,KAAQ0b,EAAKs7B,OAAO2B,UAAY,EAC/C,IAAI34C,KACJ,IAAIA,KAAK0b,EAAKs7B,OAAO2B,QAAQhJ,WAC7Bn1B,EAAWi+B,GAAgB/8B,EAAKs7B,QACtCiD,EAAYrK,SAASp1B,EAASk+B,MAAOl+B,EAASy7B,QAASz7B,EAAS26B,QAAS8E,EAAYC,mBACrFx+B,EAAKs+B,cAAgB,CAACC,GACtBv+B,EAAKy+B,sBAAwBF,OAEvB5wB,IAAN1uB,GAA8B,SAAXA,EAAE5G,MA+tD7B,SAAqB4G,GACjBA,EAAEE,iBACF,MAAMu/C,EAAuB,YAAXz/C,EAAE5G,KAAoB88B,EAAckjB,GAAep5C,GAAI6yB,EAAQqD,OAC/DxH,IAAd3N,EAAKk3B,MAAsB/hB,IAAgBnV,EAAKk3B,OAChDl3B,EAAKk3B,KAAKrY,YACN7e,EAAKu7B,KAAKrE,KAAKK,GAAIv3B,EAAKk3B,KAAKrY,cAAgB7e,EAAKu7B,KAAKrE,KAAK,MAEpE,MAAM92C,EAAMyQ,WAAWihB,EAAMl6B,aAAa,QAASyI,EAAMwQ,WAAWihB,EAAMl6B,aAAa,QAAS4pB,EAAO3Q,WAAWihB,EAAMl6B,aAAa,SAAU+mD,EAAWxmD,SAAS25B,EAAMl7B,MAAO,IAAK62B,EAAQxuB,EAAEwuB,QAC1LixB,EAAyB,KAAZz/C,EAAE2/C,MAAe,GAAK,EAAK,GAC7C,IAAIC,EAAWF,EAAWn9B,EAAOiM,EACjC,QAA2B,IAAhBqE,EAAMl7B,OAAgD,IAAvBk7B,EAAMl7B,MAAMV,OAAc,CAChE,MAAM4oD,EAAahtB,IAAU9R,EAAK++B,YAAaC,EAAeltB,IAAU9R,EAAKi/B,cACzEJ,EAAWz+C,GACXy+C,EACIx+C,EACIw+C,EACAtH,IAAKuH,IACJvH,GAAIuH,IAAevH,IAAKv3B,EAAKk3B,OAClC8H,GACAE,OAAkBvxB,GAAY,EAAG3N,EAAK++B,cAErCF,EAAWx+C,IAChBw+C,EACI/sB,IAAU9R,EAAK++B,YAAcF,EAAWx+C,EAAMk3C,IAAKv3B,EAAKk3B,MAAQ92C,EAChE4+C,GACAE,OAAkBvxB,EAAW,EAAG3N,EAAK++B,cAEzC/+B,EAAKk3B,MACL4H,IACU,IAATt9B,EACKq9B,EAAWF,IAAa,GACxBl+C,KAAKD,IAAIq+C,EAAWF,GAAYn9B,KACtCxB,EAAKk3B,KAAKrY,YACN7e,EAAKu7B,KAAKrE,KAAKK,GAAIv3B,EAAKk3B,KAAKrY,cAAgB7e,EAAKu7B,KAAKrE,KAAK,MAEpEplB,EAAMl7B,MAAQ8K,GAAIm9C,IAjwDlBM,CAAYlgD,GAEhB,MAAMmgD,EAAYp/B,EAAKq/B,OAAOzoD,MAC9B0oD,IACAC,IACIv/B,EAAKq/B,OAAOzoD,QAAUwoD,GACtBp/B,EAAKw/B,mBAeb,SAASF,IACL,QAAyB3xB,IAArB3N,EAAK++B,kBAAoDpxB,IAAvB3N,EAAKi/B,cACvC,OACJ,IAAIjC,GAAS7kD,SAAS6nB,EAAK++B,YAAYnoD,MAAMyE,OAAO,GAAI,KAAO,GAAK,GAAIk/C,GAAWpiD,SAAS6nB,EAAKi/B,cAAcroD,MAAO,KAAO,GAAK,GAAI6iD,OAAiC9rB,IAAvB3N,EAAKy/B,eAC9ItnD,SAAS6nB,EAAKy/B,cAAc7oD,MAAO,KAAO,GAAK,GAChD,EAjBV,IAAuBoiD,EAAM9B,OAkBPvpB,IAAd3N,EAAKk3B,OAlBU8B,EAmBOgE,EAnBD9F,EAmBQl3B,EAAKk3B,KAAKrY,YAAvCme,EAlBIhE,EAAO,GAAM,GAAKzB,GAAIL,IAASl3B,EAAKu7B,KAAKrE,KAAK,KAoBtD,MAAMwI,OAAwC/xB,IAAxB3N,EAAKs7B,OAAOqE,SAC7B3/B,EAAKs7B,OAAO2B,SACTj9B,EAAK4/B,gBACL5/B,EAAKy+B,uBAED,IADJ7B,GAAa58B,EAAKy+B,sBAAuBz+B,EAAKs7B,OAAO2B,SAAS,GAQtE,QAN8CtvB,IAAxB3N,EAAKs7B,OAAOuE,SAC7B7/B,EAAKs7B,OAAO+B,SACTr9B,EAAK8/B,gBACL9/B,EAAKy+B,uBAED,IADJ7B,GAAa58B,EAAKy+B,sBAAuBz+B,EAAKs7B,OAAO+B,SAAS,GAEnD,CACf,MAAMwC,OAAkClyB,IAAxB3N,EAAKs7B,OAAOuE,QACtB7/B,EAAKs7B,OAAOuE,QACZ7/B,EAAKs7B,OAAO+B,QAClBL,EAAQv8C,KAAKL,IAAI48C,EAAO6C,EAAQxG,YAC5B2D,IAAU6C,EAAQxG,aAClBkB,EAAU95C,KAAKL,IAAIm6C,EAASsF,EAAQzE,eACpCb,IAAYsF,EAAQzE,eACpB3B,EAAUh5C,KAAKL,IAAIq5C,EAASoG,EAAQ1E,eAE5C,GAAIuE,EAAe,CACf,MAAMC,OAAkChyB,IAAxB3N,EAAKs7B,OAAOqE,QACtB3/B,EAAKs7B,OAAOqE,QACZ3/B,EAAKs7B,OAAO2B,QAClBD,EAAQv8C,KAAKJ,IAAI28C,EAAO2C,EAAQtG,YAC5B2D,IAAU2C,EAAQtG,YAAckB,EAAUoF,EAAQvE,eAClDb,EAAUoF,EAAQvE,cAClBb,IAAYoF,EAAQvE,eACpB3B,EAAUh5C,KAAKJ,IAAIo5C,EAASkG,EAAQxE,eAE5CjH,EAAS8I,EAAOzC,EAASd,GAE7B,SAASsG,EAAiBnH,GACtB,MAAM5E,EAAO4E,GAAW54B,EAAKy+B,sBACzBzK,GACAE,EAASF,EAAKqF,WAAYrF,EAAKoH,aAAcpH,EAAKmH,cAG1D,SAASjH,EAAS8I,EAAOzC,EAASd,QACK9rB,IAA/B3N,EAAKy+B,uBACLz+B,EAAKy+B,sBAAsBvK,SAAS8I,EAAQ,GAAIzC,EAASd,GAAW,EAAG,GAEtEz5B,EAAK++B,aAAgB/+B,EAAKi/B,gBAAiBj/B,EAAKw7B,WAErDx7B,EAAK++B,YAAYnoD,MAAQ8K,GAAKse,EAAKs7B,OAAOnF,UAEpC6G,GADE,GAAKA,GAAS,GAAM,GAAKzF,GAAIyF,EAAQ,IAAO,IAEpDh9B,EAAKi/B,cAAcroD,MAAQ8K,GAAI64C,QACb5sB,IAAd3N,EAAKk3B,OACLl3B,EAAKk3B,KAAKrY,YAAc7e,EAAKu7B,KAAKrE,KAAKK,GAAIyF,GAAS,WAC7BrvB,IAAvB3N,EAAKy/B,gBACLz/B,EAAKy/B,cAAc7oD,MAAQ8K,GAAI+3C,KAEvC,SAASuG,EAAYl9C,GACjB,MAAMqyB,EAAckjB,GAAev1C,GAC7Bm3C,EAAO9hD,SAASg9B,EAAYv+B,QAAUkM,EAAM2qB,OAAS,IACvDwsB,EAAO,IAAO,GACC,UAAdn3C,EAAMrM,MAAoB,QAAQsqB,KAAKk5B,EAAKn5B,cAC7Cm/B,EAAWhG,GAGnB,SAAS79C,EAAKwrB,EAAS9kB,EAAOgb,EAASha,GACnC,OAAIhB,aAAiBtI,MACVsI,EAAMjK,SAASqnD,GAAO9jD,EAAKwrB,EAASs4B,EAAIpiC,EAASha,KACxD8jB,aAAmBptB,MACZotB,EAAQ/uB,SAASC,GAAOsD,EAAKtD,EAAIgK,EAAOgb,EAASha,MAC5D8jB,EAAQ7jB,iBAAiBjB,EAAOgb,EAASha,QACzCkc,EAAKmgC,UAAUllD,KAAK,CAChBzC,OAAQ,IAAMovB,EAAQtkB,oBAAoBR,EAAOgb,MAGzD,SAASsiC,IACLC,EAAa,YAyDjB,SAASC,EAAWC,EAAUH,GAC1B,MAAMI,OAAsB7yB,IAAb4yB,EACTvgC,EAAKo8B,UAAUmE,GACfvgC,EAAKy+B,wBACFz+B,EAAKs7B,OAAO2B,SAAWj9B,EAAKs7B,OAAO2B,QAAUj9B,EAAK3b,IAC7C2b,EAAKs7B,OAAO2B,QACZj9B,EAAKs7B,OAAO+B,SAAWr9B,EAAKs7B,OAAO+B,QAAUr9B,EAAK3b,IAC9C2b,EAAKs7B,OAAO+B,QACZr9B,EAAK3b,KACjBo8C,EAAUzgC,EAAK0gC,YACfC,EAAW3gC,EAAK4gC,aACtB,SACmBjzB,IAAX6yB,IACAxgC,EAAK0gC,YAAcF,EAAOjM,cAC1Bv0B,EAAK4gC,aAAeJ,EAAOtF,YAGnC,MAAOj8C,GACHA,EAAEW,QAAU,0BAA4B4gD,EACxCxgC,EAAKs7B,OAAOlW,aAAanmC,GAEzBmhD,GAAiBpgC,EAAK0gC,cAAgBD,IACtCJ,EAAa,gBACbQ,MAEAT,GACCpgC,EAAK0gC,cAAgBD,GAAWzgC,EAAK4gC,eAAiBD,GACvDN,EAAa,iBAEjBrgC,EAAK8gC,SAET,SAASC,EAAc9hD,GACnB,MAAMk2B,EAAckjB,GAAep5C,IAC9Bk2B,EAAY32B,UAAUxD,QAAQ,UAC/BkkD,EAAkBjgD,EAAGk2B,EAAYr9B,UAAU2G,SAAS,WAAa,GAAK,GAE9E,SAASygD,EAAkBjgD,EAAGwuB,EAAOuzB,GACjC,MAAMjrD,EAASkJ,GAAKo5C,GAAep5C,GAC7B6yB,EAAQkvB,GACTjrD,GAAUA,EAAO0G,YAAc1G,EAAO0G,WAAWo4B,WAChD/xB,EAAQy1B,EAAY,aAC1Bz1B,EAAM2qB,MAAQA,EACdqE,GAASA,EAAMvH,cAAcznB,GA0DjC,SAASm+C,EAAUziD,EAAWw1C,EAAMkN,EAAWjrD,GAC3C,MAAMkrD,EAAgBC,EAAUpN,GAAM,GAAOqN,EAAarjD,GAAc,OAAQ,iBAAmBQ,EAAWw1C,EAAKI,UAAUtzB,YAuC7H,OAtCAugC,EAAWzI,QAAU5E,EACrBqN,EAAWC,GAAKrrD,EAChBorD,EAAW1jD,aAAa,aAAcqiB,EAAK27B,WAAW3H,EAAMh0B,EAAKs7B,OAAOpI,kBACnC,IAAjC10C,EAAUxD,QAAQ,WACe,IAAjC4hD,GAAa5I,EAAMh0B,EAAK3b,OACxB2b,EAAKuhC,cAAgBF,EACrBA,EAAWvpD,UAAUC,IAAI,SACzBspD,EAAW1jD,aAAa,eAAgB,SAExCwjD,GACAE,EAAWG,UAAY,EACnBC,EAAezN,KACfqN,EAAWvpD,UAAUC,IAAI,YACzBioB,EAAK0hC,iBAAmBL,EACC,UAArBrhC,EAAKs7B,OAAOzG,OACZn5C,GAAY2lD,EAAY,aAAcrhC,EAAKs+B,cAAc,IACD,IAApD1B,GAAa5I,EAAMh0B,EAAKs+B,cAAc,IAAI,IAC9C5iD,GAAY2lD,EAAY,WAAYrhC,EAAKs+B,cAAc,IACC,IAApD1B,GAAa5I,EAAMh0B,EAAKs+B,cAAc,IAAI,IAC5B,iBAAd9/C,GACA6iD,EAAWvpD,UAAUC,IAAI,cAKrCspD,EAAWvpD,UAAUC,IAAI,sBAEJ,UAArBioB,EAAKs7B,OAAOzG,MAk3CpB,SAAuBb,GACnB,QAAyB,UAArBh0B,EAAKs7B,OAAOzG,MAAoB70B,EAAKs+B,cAAcpoD,OAAS,KAExD0mD,GAAa5I,EAAMh0B,EAAKs+B,cAAc,KAAO,GACjD1B,GAAa5I,EAAMh0B,EAAKs+B,cAAc,KAAO,GAr3CzCqD,CAAc3N,KAAUyN,EAAezN,IACvCqN,EAAWvpD,UAAUC,IAAI,WAE7BioB,EAAKo2B,aACsB,IAA3Bp2B,EAAKs7B,OAAOrF,YACE,iBAAdz3C,GACA0iD,EAAY,GAAM,GAClBlhC,EAAKo2B,YAAYwL,mBAAmB,YAAa,+BAAiC5hC,EAAKs7B,OAAOxH,QAAQE,GAAQ,WAElHqM,EAAa,cAAegB,GACrBA,EAEX,SAASQ,EAAeC,GACpBA,EAAWzuC,QACc,UAArB2M,EAAKs7B,OAAOzG,MACZkN,EAAYD,GAEpB,SAASE,EAAqBv0B,GAC1B,MAAMw0B,EAAax0B,EAAQ,EAAI,EAAIzN,EAAKs7B,OAAOrF,WAAa,EACtDiM,EAAWz0B,EAAQ,EAAIzN,EAAKs7B,OAAOrF,YAAc,EACvD,IAAK,IAAI7oC,EAAI60C,EAAY70C,GAAK80C,EAAU90C,GAAKqgB,EAAO,CAChD,MAAMktB,EAAQ36B,EAAKg+B,cAAc9hD,SAASkR,GACpC+0C,EAAa10B,EAAQ,EAAI,EAAIktB,EAAMz+C,SAAShG,OAAS,EACrDksD,EAAW30B,EAAQ,EAAIktB,EAAMz+C,SAAShG,QAAU,EACtD,IAAK,IAAID,EAAIksD,EAAYlsD,GAAKmsD,EAAUnsD,GAAKw3B,EAAO,CAChD,MAAMmf,EAAI+N,EAAMz+C,SAASjG,GACzB,IAAuC,IAAnC22C,EAAEpuC,UAAUxD,QAAQ,WAAoBomD,EAAUxU,EAAEgM,SACpD,OAAOhM,IA+BvB,SAASyV,EAAWC,EAAShvC,GACzB,MAAMivC,EAAaC,EAASlqD,SAASmqD,eAAiBnqD,SAASC,MACzDmqD,OAAwB/0B,IAAZ20B,EACZA,EACAC,EACIjqD,SAASmqD,mBACiB90B,IAA1B3N,EAAK0hC,kBAAkCc,EAASxiC,EAAK0hC,kBACjD1hC,EAAK0hC,sBACkB/zB,IAAvB3N,EAAKuhC,eAA+BiB,EAASxiC,EAAKuhC,eAC9CvhC,EAAKuhC,cACLS,EAAqB1uC,EAAS,EAAI,GAAK,QACvCqa,IAAd+0B,EACA1iC,EAAKq/B,OAAOhsC,QAENkvC,EAxCd,SAA6BD,EAAS70B,GAClC,MAAMk1B,GAAqD,IAAxCL,EAAQ9jD,UAAUxD,QAAQ,SACvCsnD,EAAQ1J,QAAQsC,WAChBl7B,EAAK4gC,aACLsB,EAAWz0B,EAAQ,EAAIzN,EAAKs7B,OAAOrF,YAAc,EACjD2M,EAAYn1B,EAAQ,EAAI,GAAK,EACnC,IAAK,IAAIrgB,EAAIu1C,EAAa3iC,EAAK4gC,aAAcxzC,GAAK80C,EAAU90C,GAAKw1C,EAAW,CACxE,MAAMjI,EAAQ36B,EAAKg+B,cAAc9hD,SAASkR,GACpC+0C,EAAaQ,EAAa3iC,EAAK4gC,eAAiBxzC,EAChDk1C,EAAQhB,GAAK7zB,EACbA,EAAQ,EACJktB,EAAMz+C,SAAShG,OAAS,EACxB,EACJ2sD,EAAelI,EAAMz+C,SAAShG,OACpC,IAAK,IAAID,EAAIksD,EAAYlsD,GAAK,GAAKA,EAAI4sD,GAAgB5sD,IAAMw3B,EAAQ,EAAIo1B,GAAgB,GAAI5sD,GAAK2sD,EAAW,CACzG,MAAMhW,EAAI+N,EAAMz+C,SAASjG,GACzB,IAAuC,IAAnC22C,EAAEpuC,UAAUxD,QAAQ,WACpBomD,EAAUxU,EAAEgM,UACZn4C,KAAKD,IAAI8hD,EAAQhB,GAAKrrD,IAAMwK,KAAKD,IAAIitB,GACrC,OAAOo0B,EAAejV,IAGlC5sB,EAAK8iC,YAAYF,GACjBP,EAAWL,EAAqBY,GAAY,GAqBxCG,CAAoBL,EAAWpvC,GAH/BuuC,EAAea,GAMvB,SAASM,EAAe/I,EAAMU,GAC1B,MAAMsI,GAAgB,IAAI3+C,KAAK21C,EAAMU,EAAO,GAAGtG,SAAWr0B,EAAKu7B,KAAK5E,eAAiB,GAAK,EACpFuM,EAAgBljC,EAAKmjC,MAAMC,gBAAgBzI,EAAQ,EAAI,IAAM,GAAIV,GACjEvD,EAAc12B,EAAKmjC,MAAMC,eAAezI,EAAOV,GAAOiE,EAAOpnD,OAAOwB,SAAS+qD,yBAA0BC,EAAetjC,EAAKs7B,OAAOrF,WAAa,EAAGsN,EAAoBD,EAAe,sBAAwB,eAAgBE,EAAoBF,EAAe,sBAAwB,eAC9R,IAAIpC,EAAYgC,EAAgB,EAAID,EAAcQ,EAAW,EAC7D,KAAOvC,GAAagC,EAAehC,IAAauC,IAC5CvF,EAAK/hD,YAAY8kD,EAAUsC,EAAmB,IAAIj/C,KAAK21C,EAAMU,EAAQ,EAAGuG,GAAYA,EAAWuC,IAEnG,IAAKvC,EAAY,EAAGA,GAAaxK,EAAawK,IAAauC,IACvDvF,EAAK/hD,YAAY8kD,EAAU,GAAI,IAAI38C,KAAK21C,EAAMU,EAAOuG,GAAYA,EAAWuC,IAEhF,IAAK,IAAIC,EAAShN,EAAc,EAAGgN,GAAU,GAAKT,IAClB,IAA3BjjC,EAAKs7B,OAAOrF,YAAoBwN,EAAW,GAAM,GAAIC,IAAUD,IAChEvF,EAAK/hD,YAAY8kD,EAAUuC,EAAmB,IAAIl/C,KAAK21C,EAAMU,EAAQ,EAAG+I,EAAShN,GAAcgN,EAAQD,IAE3G,MAAME,EAAe3lD,GAAc,MAAO,gBAE1C,OADA2lD,EAAaxnD,YAAY+hD,GAClByF,EAEX,SAASC,IACL,QAA2Bj2B,IAAvB3N,EAAKg+B,cACL,OAEJnG,GAAU73B,EAAKg+B,eACXh+B,EAAKo2B,aACLyB,GAAU73B,EAAKo2B,aACnB,MAAMyN,EAAOvrD,SAAS+qD,yBACtB,IAAK,IAAIptD,EAAI,EAAGA,EAAI+pB,EAAKs7B,OAAOrF,WAAYhgD,IAAK,CAC7C,MAAMokD,EAAI,IAAI/1C,KAAK0b,EAAK0gC,YAAa1gC,EAAK4gC,aAAc,GACxDvG,EAAEvB,SAAS94B,EAAK4gC,aAAe3qD,GAC/B4tD,EAAK1nD,YAAY6mD,EAAe3I,EAAE9F,cAAe8F,EAAEa,aAEvDl7B,EAAKg+B,cAAc7hD,YAAY0nD,GAC/B7jC,EAAKk+B,KAAOl+B,EAAKg+B,cAAcnpB,WACN,UAArB7U,EAAKs7B,OAAOzG,MAAkD,IAA9B70B,EAAKs+B,cAAcpoD,QACnD6rD,IAGR,SAASlB,IACL,GAAI7gC,EAAKs7B,OAAOrF,WAAa,GACS,aAAlCj2B,EAAKs7B,OAAOxG,kBACZ,OACJ,MAAMgP,EAAmB,SAAUnJ,GAC/B,aAA4BhtB,IAAxB3N,EAAKs7B,OAAO2B,SACZj9B,EAAK0gC,cAAgB1gC,EAAKs7B,OAAO2B,QAAQ1I,eACzCoG,EAAQ36B,EAAKs7B,OAAO2B,QAAQ/B,oBAGCvtB,IAAxB3N,EAAKs7B,OAAO+B,SACjBr9B,EAAK0gC,cAAgB1gC,EAAKs7B,OAAO+B,QAAQ9I,eACzCoG,EAAQ36B,EAAKs7B,OAAO+B,QAAQnC,aAEpCl7B,EAAK+jC,wBAAwBvC,UAAY,EACzCxhC,EAAK+jC,wBAAwB96B,UAAY,GACzC,IAAK,IAAIhzB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAK6tD,EAAiB7tD,GAClB,SACJ,MAAM0kD,EAAQ38C,GAAc,SAAU,iCACtC28C,EAAM/jD,MAAQ,IAAI0N,KAAK0b,EAAK0gC,YAAazqD,GAAGilD,WAAWp6B,WACvD65B,EAAM9b,YAAc2Z,GAAWviD,EAAG+pB,EAAKs7B,OAAOtF,sBAAuBh2B,EAAKu7B,MAC1EZ,EAAM6G,UAAY,EACdxhC,EAAK4gC,eAAiB3qD,IACtB0kD,EAAMxO,UAAW,GAErBnsB,EAAK+jC,wBAAwB5nD,YAAYw+C,IAGjD,SAASqJ,IACL,MAAM96C,EAAYlL,GAAc,MAAO,mBACjCimD,EAAmBntD,OAAOwB,SAAS+qD,yBACzC,IAAIa,EACAlkC,EAAKs7B,OAAOrF,WAAa,GACS,WAAlCj2B,EAAKs7B,OAAOxG,kBACZoP,EAAelmD,GAAc,OAAQ,cAGrCgiB,EAAK+jC,wBAA0B/lD,GAAc,SAAU,kCACvDgiB,EAAK+jC,wBAAwBpmD,aAAa,aAAcqiB,EAAKu7B,KAAKnE,gBAClEh7C,EAAK4jB,EAAK+jC,wBAAyB,UAAW9kD,IAC1C,MAAMlJ,EAASsiD,GAAep5C,GACxBklD,EAAgBhsD,SAASpC,EAAOa,MAAO,IAC7CopB,EAAK8iC,YAAYqB,EAAgBnkC,EAAK4gC,cACtCP,EAAa,oBAEjBQ,IACAqD,EAAelkC,EAAK+jC,yBAExB,MAAMK,EAAYrM,GAAkB,WAAY,CAAEsM,SAAU,OACtDC,EAAcF,EAAUh3B,qBAAqB,SAAS,GAC5Dk3B,EAAY3mD,aAAa,aAAcqiB,EAAKu7B,KAAKpE,eAC7Cn3B,EAAKs7B,OAAO2B,SACZqH,EAAY3mD,aAAa,MAAOqiB,EAAKs7B,OAAO2B,QAAQ1I,cAAczzB,YAElEd,EAAKs7B,OAAO+B,UACZiH,EAAY3mD,aAAa,MAAOqiB,EAAKs7B,OAAO+B,QAAQ9I,cAAczzB,YAClEwjC,EAAY9tC,WACNwJ,EAAKs7B,OAAO2B,SACVj9B,EAAKs7B,OAAO2B,QAAQ1I,gBAAkBv0B,EAAKs7B,OAAO+B,QAAQ9I,eAEtE,MAAMqM,EAAe5iD,GAAc,MAAO,2BAK1C,OAJA4iD,EAAazkD,YAAY+nD,GACzBtD,EAAazkD,YAAYioD,GACzBH,EAAiB9nD,YAAYykD,GAC7B13C,EAAU/M,YAAY8nD,GACf,CACH/6C,UAAAA,EACAo7C,YAAAA,EACAJ,aAAAA,GAGR,SAASK,IACL1M,GAAU73B,EAAKwkC,UACfxkC,EAAKwkC,SAASroD,YAAY6jB,EAAKykC,cAC3BzkC,EAAKs7B,OAAOrF,aACZj2B,EAAK0kC,aAAe,GACpB1kC,EAAK2kC,cAAgB,IAEzB,IAAK,IAAIv3C,EAAI4S,EAAKs7B,OAAOrF,WAAY7oC,KAAM,CACvC,MAAMutC,EAAQqJ,IACdhkC,EAAK0kC,aAAazpD,KAAK0/C,EAAM2J,aAC7BtkC,EAAK2kC,cAAc1pD,KAAK0/C,EAAMuJ,cAC9BlkC,EAAKwkC,SAASroD,YAAYw+C,EAAMzxC,WAEpC8W,EAAKwkC,SAASroD,YAAY6jB,EAAK4kC,cA+FnC,SAASC,IACA7kC,EAAK8kC,iBAGNjN,GAAU73B,EAAK8kC,kBAFf9kC,EAAK8kC,iBAAmB9mD,GAAc,MAAO,sBAGjD,IAAK,IAAI/H,EAAI+pB,EAAKs7B,OAAOrF,WAAYhgD,KAAM,CACvC,MAAMiT,EAAYlL,GAAc,MAAO,8BACvCgiB,EAAK8kC,iBAAiB3oD,YAAY+M,GAGtC,OADA67C,IACO/kC,EAAK8kC,iBAEhB,SAASC,IACL,IAAK/kC,EAAK8kC,iBACN,OAEJ,MAAMnO,EAAiB32B,EAAKu7B,KAAK5E,eACjC,IAAIL,EAAW,IAAIt2B,EAAKu7B,KAAKjF,SAASC,WAClCI,EAAiB,GAAKA,EAAiBL,EAASpgD,SAChDogD,EAAW,IACJA,EAASxc,OAAO6c,EAAgBL,EAASpgD,WACzCogD,EAASxc,OAAO,EAAG6c,KAG9B,IAAK,IAAI1gD,EAAI+pB,EAAKs7B,OAAOrF,WAAYhgD,KACjC+pB,EAAK8kC,iBAAiB5oD,SAASjG,GAAGgzB,UAAY,qDAEhDqtB,EAASzrC,KAAK,oEAgBpB,SAASi4C,EAAYlsD,EAAOouD,GAAW,GACnC,MAAMv3B,EAAQu3B,EAAWpuD,EAAQA,EAAQopB,EAAK4gC,aACzCnzB,EAAQ,IAAkC,IAA7BzN,EAAKilC,qBAClBx3B,EAAQ,IAAkC,IAA7BzN,EAAKklC,sBAEvBllC,EAAK4gC,cAAgBnzB,GACjBzN,EAAK4gC,aAAe,GAAK5gC,EAAK4gC,aAAe,MAC7C5gC,EAAK0gC,aAAe1gC,EAAK4gC,aAAe,GAAK,GAAK,EAClD5gC,EAAK4gC,cAAgB5gC,EAAK4gC,aAAe,IAAM,GAC/CP,EAAa,gBACbQ,KAEJ+C,IACAvD,EAAa,iBACb8E,KA2GJ,SAASC,EAAe5yB,GACpB,SAAIxS,EAAKs7B,OAAO+J,WAAYrlC,EAAKs7B,OAAO+J,SAAS5mD,SAAS+zB,KAEnDxS,EAAK+9B,kBAAkBt/C,SAAS+zB,GAE3C,SAAS8yB,EAAcrmD,GACnB,GAAI+gB,EAAKuI,SAAWvI,EAAKs7B,OAAO5G,OAAQ,CACpC,MAAMvf,EAAckjB,GAAep5C,GAC7BsmD,EAAoBH,EAAejwB,GACnCqwB,EAAUrwB,IAAgBnV,EAAK8R,OACjCqD,IAAgBnV,EAAK+yB,UACrB/yB,EAAK4H,QAAQnpB,SAAS02B,IACrBl2B,EAAEgmC,MACChmC,EAAEgmC,KAAKjqC,WACLiE,EAAEgmC,KAAKjqC,QAAQglB,EAAK8R,SACjB7yB,EAAEgmC,KAAKjqC,QAAQglB,EAAK+yB,WAC3B0S,EAAuB,SAAXxmD,EAAE5G,KACdmtD,GACEvmD,EAAEymD,gBACDN,EAAenmD,EAAEymD,gBACnBF,IACED,IACAH,EAAenmD,EAAEymD,eACpBC,GAAa3lC,EAAKs7B,OAAO7G,qBAAqBmR,MAAMpzB,GAASA,EAAK/zB,SAAS02B,KAC7EswB,GAAaE,SACch4B,IAAvB3N,EAAK6lC,oBACkBl4B,IAAvB3N,EAAKi/B,oBACgBtxB,IAArB3N,EAAK++B,aACgB,KAArB/+B,EAAK8R,MAAMl7B,YACU+2B,IAArB3N,EAAK8R,MAAMl7B,OACXynD,IAEJr+B,EAAKyC,QACDzC,EAAKs7B,QACgB,UAArBt7B,EAAKs7B,OAAOzG,MACkB,IAA9B70B,EAAKs+B,cAAcpoD,SACnB8pB,EAAKrI,OAAM,GACXqI,EAAK8gC,YAKrB,SAASb,EAAW6F,GAChB,IAAKA,GACA9lC,EAAKs7B,OAAO2B,SAAW6I,EAAU9lC,EAAKs7B,OAAO2B,QAAQ1I,eACrDv0B,EAAKs7B,OAAO+B,SAAWyI,EAAU9lC,EAAKs7B,OAAO+B,QAAQ9I,cACtD,OACJ,MAAMwR,EAAaD,EAASE,EAAYhmC,EAAK0gC,cAAgBqF,EAC7D/lC,EAAK0gC,YAAcqF,GAAc/lC,EAAK0gC,YAClC1gC,EAAKs7B,OAAO+B,SACZr9B,EAAK0gC,cAAgB1gC,EAAKs7B,OAAO+B,QAAQ9I,cACzCv0B,EAAK4gC,aAAengD,KAAKL,IAAI4f,EAAKs7B,OAAO+B,QAAQnC,WAAYl7B,EAAK4gC,cAE7D5gC,EAAKs7B,OAAO2B,SACjBj9B,EAAK0gC,cAAgB1gC,EAAKs7B,OAAO2B,QAAQ1I,gBACzCv0B,EAAK4gC,aAAengD,KAAKJ,IAAI2f,EAAKs7B,OAAO2B,QAAQ/B,WAAYl7B,EAAK4gC,eAElEoF,IACAhmC,EAAK8gC,SACLT,EAAa,gBACbQ,KAGR,SAASO,EAAUpN,EAAM8H,GAAW,GAChC,IAAImK,EACJ,MAAMC,EAAclmC,EAAKo8B,UAAUpI,OAAMrmB,EAAWmuB,GACpD,GAAK97B,EAAKs7B,OAAO2B,SACbiJ,GACAtJ,GAAasJ,EAAalmC,EAAKs7B,OAAO2B,aAAsBtvB,IAAbmuB,EAAyBA,GAAY97B,EAAK4/B,gBAAkB,GAC1G5/B,EAAKs7B,OAAO+B,SACT6I,GACAtJ,GAAasJ,EAAalmC,EAAKs7B,OAAO+B,aAAsB1vB,IAAbmuB,EAAyBA,GAAY97B,EAAK8/B,gBAAkB,EAC/G,OAAO,EACX,IAAK9/B,EAAKs7B,OAAOvY,QAAyC,IAA/B/iB,EAAKs7B,OAAOziC,QAAQ3iB,OAC3C,OAAO,EACX,QAAoBy3B,IAAhBu4B,EACA,OAAO,EACX,MAAM1O,IAASx3B,EAAKs7B,OAAOvY,OAAQ5oC,EAAsC,QAA7B8rD,EAAKjmC,EAAKs7B,OAAOvY,cAA2B,IAAPkjB,EAAgBA,EAAKjmC,EAAKs7B,OAAOziC,QAClH,IAAK,IAAWwhC,EAAPpkD,EAAI,EAAMA,EAAIkE,EAAMjE,OAAQD,IAAK,CAEtC,GADAokD,EAAIlgD,EAAMlE,GACO,mBAANokD,GACPA,EAAE6L,GACF,OAAO1O,EACN,GAAI6C,aAAa/1C,WACFqpB,IAAhBu4B,GACA7L,EAAEpG,YAAciS,EAAYjS,UAC5B,OAAOuD,EACN,GAAiB,iBAAN6C,EAAgB,CAC5B,MAAM8L,EAASnmC,EAAKo8B,UAAU/B,OAAG1sB,GAAW,GAC5C,OAAOw4B,GAAUA,EAAOlS,YAAciS,EAAYjS,UAC5CuD,GACCA,EAEN,GAAiB,iBAAN6C,QACI1sB,IAAhBu4B,GACA7L,EAAEpvC,MACFovC,EAAE+L,IACFF,EAAYjS,WAAaoG,EAAEpvC,KAAKgpC,WAChCiS,EAAYjS,WAAaoG,EAAE+L,GAAGnS,UAC9B,OAAOuD,EAEf,OAAQA,EAEZ,SAASgL,EAAShwB,GACd,YAA2B7E,IAAvB3N,EAAKg+B,iBACyC,IAAtCxrB,EAAKh0B,UAAUxD,QAAQ,YACuB,IAAlDw3B,EAAKh0B,UAAUxD,QAAQ,uBACvBglB,EAAKg+B,cAAcv/C,SAAS+zB,IAGxC,SAAS6zB,EAAOpnD,KACIA,EAAElJ,SAAWiqB,EAAKq/B,WAE7Br/B,EAAKs+B,cAAcpoD,OAAS,GAAK8pB,EAAKq/B,OAAOzoD,MAAMV,OAAS,IAC3D+I,EAAEymD,eAAiBN,EAAenmD,EAAEymD,gBACtC1lC,EAAKm0B,QAAQn0B,EAAKq/B,OAAOzoD,OAAO,EAAMqI,EAAElJ,SAAWiqB,EAAK+yB,SAClD/yB,EAAKs7B,OAAOxI,UACZ9yB,EAAKs7B,OAAO/H,YAG1B,SAAS8B,EAAUp2C,GACf,MAAMk2B,EAAckjB,GAAep5C,GAC7BumD,EAAUxlC,EAAKs7B,OAAOxrB,KACtBlI,EAAQnpB,SAAS02B,GACjBA,IAAgBnV,EAAKq/B,OACrBzM,EAAa5yB,EAAKs7B,OAAO1I,WACzB0T,EAAetmC,EAAKuI,UAAYqqB,IAAe4S,GAC/Ce,EAAqBvmC,EAAKs7B,OAAO5G,QAAU8Q,IAAY5S,EAC7D,GAAkB,KAAd3zC,EAAEunD,SAAkBhB,EAAS,CAC7B,GAAI5S,EAIA,OAHA5yB,EAAKm0B,QAAQn0B,EAAKq/B,OAAOzoD,OAAO,EAAMu+B,IAAgBnV,EAAK+yB,SACrD/yB,EAAKs7B,OAAOxI,UACZ9yB,EAAKs7B,OAAO/H,YACXpe,EAAYsxB,OAGnBzmC,EAAK2qB,YAGR,GAAIya,EAAejwB,IACpBmxB,GACAC,EAAoB,CACpB,MAAMG,IAAc1mC,EAAK6lC,eACrB7lC,EAAK6lC,cAAcpnD,SAAS02B,GAChC,OAAQl2B,EAAEunD,SACN,KAAK,GACGE,GACAznD,EAAEE,iBACFk/C,IACAsI,KAGAC,EAAW3nD,GACf,MACJ,KAAK,GACDA,EAAEE,iBACFwnD,IACA,MACJ,KAAK,EACL,KAAK,GACGnB,IAAYxlC,EAAKs7B,OAAO1I,aACxB3zC,EAAEE,iBACF6gB,EAAKrI,SAET,MACJ,KAAK,GACL,KAAK,GACD,GAAK+uC,GAAclB,EAeVxlC,EAAK++B,aACV/+B,EAAK++B,YAAY1rC,aAdjB,GADApU,EAAEE,sBACyBwuB,IAAvB3N,EAAKg+B,iBACW,IAAfpL,GACIt6C,SAASmqD,eAAiBD,EAASlqD,SAASmqD,gBAAkB,CACnE,MAAMh1B,EAAsB,KAAdxuB,EAAEunD,QAAiB,GAAK,EACjCvnD,EAAE4nD,SAGH5nD,EAAEC,kBACF4jD,EAAYr1B,GACZ40B,EAAWL,EAAqB,GAAI,IAJpCK,OAAW10B,EAAWF,GAUlC,MACJ,KAAK,GACL,KAAK,GACDxuB,EAAEE,iBACF,MAAMsuB,EAAsB,KAAdxuB,EAAEunD,QAAiB,GAAK,EACjCxmC,EAAKg+B,oBACarwB,IAAnBwH,EAAYmsB,IACZnsB,IAAgBnV,EAAK8R,OACrBqD,IAAgBnV,EAAK+yB,SACjB9zC,EAAE4nD,SACF5nD,EAAEC,kBACF+gD,EAAWjgC,EAAK0gC,YAAcjzB,GAC9B40B,EAAWL,EAAqB,GAAI,IAE9B0E,GACNrE,OAAW10B,EAAmB,EAARF,GAErB0H,IAAgBnV,EAAK8mC,mBAC1B7G,EAAWjgC,EAAK0gC,YAAcjzB,GAEzBzN,EAAKs7B,OAAOzH,cACZ6S,GAAa1mC,EAAK++B,aACnB/+B,EAAK++B,YAAY1rC,QACrBgrC,EAAWp/C,GACX+gB,EAAKw/B,oBAET,MACJ,KAAK,EACD,GAAIkH,EAAW,CACX,MAAMK,EAAQ,CACV/mC,EAAK++B,YACL/+B,EAAKi/B,cACLj/B,EAAKy/B,cACLz/B,EAAKk3B,MAEJx6B,OAAOsD,EAAKgnC,gBACZpqD,QAAQsE,GAAMA,IACbjL,EAAI8wD,EAAM/rD,QAAQm6B,GACxB,IAAW,IAAPl/B,EAAU,CACV,MAAMF,EAASgxD,EAAM9wD,GAAKgJ,EAAEgoD,UAAY,EAAI,IAC5ChoD,EAAEE,kBACDpJ,GAAUiqB,EAAKq/B,QAAQhsC,cAGtB2M,EAAKs7B,OAAOtG,YAClBh1B,EAAKg+B,eACLh+B,EAAKg+B,cAAcv/C,SAAS02B,IAC5Bl2B,EAAEgoD,WACFhoD,EAAEE,iBACF6gB,EAAKq/B,OAAOhsC,UAO5B,QAAkBsa,IAAd3N,EAAKk3B,MAAsB/hB,IAAgBnV,EAAKk3B,KAChD,OAAQj4C,EAAExI,KACN,KAAKupB,EAAKu7B,KAAKrE,KAAK,GAAG/e,OAAO,GAC9B,KAAKnY,EAAKu7B,KAAKrE,KAAK,GAAG/e,OAAO,GAAGhB,cAC7BnX,EAAKk3B,KAAKrY,YAAc7e,EAAKu7B,KAAKrE,KAAK,GACvCoI,IACAC,IACA,MACJ,KAAKv/B,EAAKu7B,KAAKrE,KAAK,GAAG/e,OAAO,GAC9B,KAAKnY,EAAKu7B,KAAKrE,KAAK,GAAG/e,OAAO,GAAGhB,cAC7BnX,EAAKk3B,KAAKrY,YAAc7e,EAAKu7B,KAAKrE,KAAK,GACvCoI,IACAC,KAIRiG,GAAWJ,EAAejwB,KAC1BkrB,EAAa,YAAaphD,GAGlC,SAAS8iD,EAAYvvB,GACjB,GAAkC,IAA9BxS,EAAKs+B,cAAcpoD,QAClBs8B,KACKA,EAAK16B,UAAU2G,SAAS,kBACtB+zB,EAAK16B,UAAU2G,SAAS,uBAChC,OACJ,MAAMyoD,EAAY10B,EACZA,EAAKomB,QAAQ3E,UACbj0B,EAAKk+B,KAAKphD,kBAAkB87C,QAAQ3E,UAAWkT,EAAcnnC,EAAKo8B,UAAUp8B,EAAKs+B,cAAc,QAAI3wB,GAAW,GAAMsmB,UAAWmT,EAAiB3mD,KAAKL,IAAI8mD,EAAWlnC,EAAKs+B,cAAc,GAAGrK,WAAYoT,EAAe5mD,KAAKJ,IAAI6mD,EAAWlnC,EAAKs+B,cAAc,GAAGrK,WACrQ,IAAIqT,GAAmB,EACnBC,EAAW,EAAGC,EAAW,EAC7B,IAAK,IAAI3vC,EAAIuvC,EAAgBvvC,EAAIwvC,EAAcxvC,GAAKxS,GAC3C+7C,EAAU,IAAI98C,KAAKuT,IAAI,KACxByvC,EACIA,GAAqBzvC,EAAIuvC,GAAkBvvC,EAAIwvC,EAC/CxvC,EAAIsvC,KAAiBI,GAAY1vC,EAAI0vC,GACrCA,EAAW1vC,EACNA,EAAIsvC,KAAiBK,GAAY3vC,EAAI2vC,KAC1CA,EAAW3vC,IAGvB,IAAK,IAAIzK,EAAI,EAAGA,EAAI4S,EAAKs7B,OAAOrF,WAAY7oC,IAAK,CAC7C,MAAMutC,EAAQ36B,EAAKg+B,cAAc9hD,SAASkR,GAC1C,IAAK,IAAInX,EAAI,EAAGykD,EAAIC,EAAMz+C,SAAShG,OAAQD,EAAIykD,EAAGzkD,IAAK,CACnD,MAAMwxD,EAAU9M,EAAMz+C,SAASjG,GACzByxD,EADoCD,EAAQ7O,QAC3B3E,UACjB0T,EAAcJ,EAAW,GAAKG,EAAYH,GAC3CC,EAAW,GAAKE,EAAYF,EAC7BG,GACAF,EAAQ3vD,UAAUC,IAAI,cACtB,CAAC,UAAW,aAAc,YAAYc,SAAS+zC,IAC3C6a,EAAQ3vD,UAAUU,OAAOo0C,OAIxB0a,IAAqBK,IAE9B,CAAC,aAAc,UAAW,WAAY,cAAc9uD,SAAS+zC,IACzD6a,EAAQ3vD,UAAUU,OAAOo0C,WAEhBjf,IAAT6E,IACAA,EAAK16B,UAAUC,IAAImvD,GAAalnC,EAAKs+B,cAAc,GAAGrK,UAChD,aACA,YACFkT,EAAcD,GAAaQ,IAAcP,EACzCM,EAAQ3vD,UAAUC,IAAI,cACjBovD,EAAcD,GAAaQ,IAAcP,GAC9CM,EAAQ3vD,UAAUC,IAAI,YACtB2vD,GAAaH,IACC,IAAbC,GAAkBE,GAAaF,KFxjC1BI,EEyjCeT,EFzjCVU,EEyjCuBX,GFzjChCY,EEyjCQJ,GFxjClBjnD,KAAKL,IAAIwnD,EAAKC,IAAQC,EAAKrnD,KAAKJ,IAAIunD,EAAKC,KEyjCjCJ,EAAQ3vD,UAAUC,IAAI,cF1jCrB,IAAC+vD,EAAIF,EAAKC,EE+jC/B,SAASE,KACD/nC,EAAKuI,QAAWvI,EAAKs7B,OAAOpF,QAAWl2B,EAAKs7B,OAAO5G,QACnDsT,IAqCR,SAASC,EAAiB5vD,GACtB,OAAQ27C,IACJ,MAAM4E,EAAW54B,EAAKs7B,OAAO,IAAIjjD,SAAc2nB,EAAKo8B,UAAUpI,EAAMh0B,EAAKs7B,OAAO/H,YAC1E2U,EAAiBloC,EAAKs7B,OAAO,IAAa,QAATjjD,EAAiB,MAAQ,kBAChDs1B,IAAZirB,IACA54B,EAAc,QAAT3nB,EAAiB,iBAAmB,kBACrCugD,EAAQS,WAAa,GACjBT,EAAQwC,aAAe,GACvBxC,EAAQuC,aAAe,GAE/Bn7B,EAAKs+B,gBACLt+B,EAAKs+B,cAAgBt+B,EAAKs+B,cAAc1hD,QAAQy9C,GAAM+G,EAAU/G,KAC3Dr6B,EAAKs+B,cAAcpoD,QAAmB,QAATmC,GAC9B0nD,EAAiBnH,GACrB2G,KAEAv/B,EAAKg+B,gBACL8C,SACgBnzB,IAAZirB,EACA54B,EAAK8mC,mBAAmBzuD,GAAQugD,EAAQrE,cAAczzB,WAEtDd,EAAK8mC,mBAAmBtpD,gBAAgBnF,GAC5C2nB,EAAK8mC,mBAAmBtwC,WAClB0xC,QACcv6B,IAAZirB,GACAsP,EAAe3T,gBAAkBqE,EAAQrE,gBA+G7D,SAAS4T,IACL,OAAOnoC,EAAKs7B,OAAOxrB,KACblI,EAAQtoB,cAAc,gBACtBsoB,EAEV,SAASwgC,IAC6B,iBAAvBpoC,EAAKs7B,OAAO3G,aAC4B,IAAxC+I,GAAU2K,MAAMroC,EAAKs7B,OAAO3G,SACnC30B,EAAKs7B,OAAOlW,aAAa,IAAIvlC,MAAM,6BAA6BmgB,EAAKs7B,OAAO3G,WAChF30B,EAAKu7B,KAAOhlD,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIsgD,GAAU2K,MAAM/uB,SAAyC,iBAAvBtZ,EAAKs7B,OAAO3G,OACpF30B,EAAKs7B,OAAO3G,OACW,YAAvB30B,EAAKs7B,OAAO3G,OACR+I,GAAU2K,MAAMroC,EAAKs7B,OAAO3G,aAC5BhnB,GACVotB,GAAW3B,EAAI,IAAIp5B,EAAKu7B,KAAKrE,KAAK,MAAMl3B,EAAKu7B,KAAKrE,KAAK,MAAMl3B,EAAKu7B,KAAKrE,KAAK,GAAG/f,iBAAiBnX,EAAKu7B,KAAKrE,KAAK,GAAG/f,sBAErFxJ,IADVp3B,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIqgD,GAAiB3wC,KAAKC,MAAMD,KAAKw7C,UAAU1gC,EAAQmB,SAAW,MAClGotB,gBAC2BxoB,IAAtC+vB,GAAUC,cAAcxH,YACxBn2B,EAAKs7B,OAAOnF,UAAYn2B,EAAKu7B,KAAKpF,WAEtCn2B,EAAK27B,WAAaN,GAAoBr7B,GACtCA,EAAKo8B,UAAYR,GAAiB,CAAEN,OAAQt7B,EAAKs7B,OAAQC,KAAMv7B,EAAKu7B,OAExE,SAASyM,EAAiBO,GACtB,GAAoC,mBAAzBvoC,EAAKs7B,OAAO/oC,SACnB,YAAYyN,EAAKs7B,OAAO/oC,SAASyN,EAAMuoC,GAE3C,QAA+B56B,IAA3B3N,EAAK+9B,kBACL,OACJsC,EAAa,yBACb,MAAMvK,EAAkByS,GAAyBvoC,EAAKwoC,iBAChDC,EAAiBjuD,MAAMY,UAAUstD,OAAOjtD,KAAKukB,EAAK+9B,kBAAkB7hD,UAAQ,CAAIysD,EAAK9rD,IAAU8rD,EAAM9rD,EAAMwxB,cAAe,GAAIu6B,EAAgB5oC,EAAK+9B,kBAAkB/zB,YAAa6+B,EAAY7oC,EAAKs7B,OAAO/oC,SAASxW,MAAM,KAAM+sD,EAAoBD,EAAU,GAAIE,EAAsBF,EAAU3yD,OAAS,EAAI2yD,EAAU,GAAK,KAAMG,EAAclT,EAAgB98C,wBAAyBiwD,EAAqBnyD,OAAOoC,YAAc8vD,EAAYnyB,OAAQqyB,EAAkC,UAAtBJ,GAC/a,UAAtBA,GACGG,EAAqBR,GACrBO,EAAYp8B,IAAM67B,EACpB77B,EAAM91B,OAAOqyD,YACfH,EAAYp8B,KACVs8B,GAAgDT,EAAiB,EAArD3S,EAAgBznB,aAAe,GAGjD,GAFA3yB,GAAYskB,EAAK+9B,kBAAmB,YAAamL,GACjDxtD,GAAYskB,EAAK+9B,kBAAmB,cAAemL,GAC/ClpC,EAAKs7B,OAAO5G,OACZ,OACJ,IAAI3uC,EAAOjP,OAAOsyD,YAAcJ,EAAYjjD,KACxCsjD,GAAW,EACXC,GAAU,EACc,WAAxBP,GACAhjD,IAAS6iD,EAAgBI,EAAYljD,OAAS,EAC9CujD,GAAW,GAEkB,UAAxBN,IACLhjD,GAAQ6iD,EAAgBI,EAAYljD,MACpCwjD,GAAU,GAEd5tD,GAAYskB,EAAK+9B,kBAAmB,aAAcsL,IAAaC,GAC/D5tD,GAAYskB,EAAK+9B,kBAAmB,cAAesL,GACnD3tD,GAAYskB,EAAK+9B,kBAAmB,aAAcuL,GAClD,MAAMrsD,EAAQnG,OAAOwB,SAASC,KAAKyxB,aAC9BlzB,OAAOsyD,YAAcJ,EAAY/rD,OAChCssD,EAAYxjD,EAAO6iD,EAAgB9xD,OAAOwB,SAASC,KAAKyxB,YACxDw/B,EAAavsD,EAAQ2rD,EAAgB9xD,OAAOwB,SAASC,KAAKyxB,YAEhE,GADAtuB,GAAYskB,EAAK+9B,kBAAmB,YAAawL,IAC7CvpC,EAAKs7B,OAAOpF,OAGhB,GADAl2B,EAAK+9B,kBAAkB9/C,MAAM2uB,IAAM,GAAGA,MACjC28B,EAIA,GAAKC,EAIL,CACD,MAAMC,EAgBd,WACI,IAAIC,EAAgB,KACpB,IAAK,IAAIzzD,EAAI,EAAGA,EAAIqC,SAASqxD,YAAYzzD,OAAQD,IAAK,CAClD,MAAM2zD,EAAQtxD,SAASqxD,YAAY1zD,GACnC,IACI2zD,EAAMC,SAEV,MAAOxoC,GACH,SAEJqoC,EAAgBE,EAChB,MAEJ,OAAwB,MAAjBF,EAAwBA,EAEnC,WACI,MAAMzrD,EAAQ3F,SAAS0F,cAAc,SAErC,OADA1F,SAASg6C,KAAKn2C,YAAY8B,GACnBA,EAAM2rD,MALkCE,GA7B/BC,GACZ,QAAYp8B,IAAR87B,EACA,OACJ,MAAMO,EAAYlzD,OAAOwB,SAASC,KAAKyxB,YACjCigC,EAAaxpD,KAAKJ,IAAI,EAAG2pD,EAAY,EAAIpB,EAAgB,GACzDsB,EAAe,wCACfC,EAAc,uCACdC,EAAcX,EAAII,SAAS3zD,OAC3Bm0D,EAAc,SAASrB,EAAYjjD,sBACzCrK,GAAYskB,EAAK+9B,kBAAmB,aAAa,GACjDriD,GAAYskB,EAAK+9B,kBAAmB,cAAc,GAClD0L,EAAIa,WAAW,GAAGJ,KAAgBC,IAAcE,IAAeD,GAC/DpqC,EAAK+9B,kBAAkB9/C,MAAM8H,KAAO,GAAGkkD,MACvCjqC,EAAK+9B,kBAAkB9/C,MAAMhB,MAAQ,YAjBrC+iB,EAAK+9B,kBAAkB9/C,MAAM8H,KAAO,OACpCia,EAAK+9B,kBAAkB9/C,MAAMhB,MAAQ,GAAGA,WALxC+iB,EAAK+9B,kBAAkB9/C,MAAM8H,KAAO,GAAGA,MACvCia,EAAK+9B,kBAAkB9/C,MAAMhB,MAAQ,OA2C7C,SAAS6jD,IACD9gC,EAAKs7B,OAAOtG,YAAch1B,EAAKw7B,WAEnCqF,IACAsE,IACAvB,KAEJ,SAAS+C,IACL3mC,EAAKq/B,OAAOhsC,SACwC,IAAhDvc,OAAOytB,UAAU2pB,UAAUlzC,QAAQ,cACJ2yB,IAA/BpJ,UAAUgmC,iBACVtyD,WAAW+nB,EAAKyC,MAAO,GAGvBzC,EAAKyC,QAGb,SAASmkC,EAAW3nD,GAChBA,EAAEE,iBACFF,EAAEC,kBACF,MAIM2Y,EAAIigC,GAAWO,GAAep5C,IAJdk6C,GAAQA,EAAIrhD,WAC9BqhD,EAAIrhD,UAAU2G,SAAS,mBACtB06C,EAAIrhD,UAAU2G,SAAS,wBACvB06C,EAAIrhD,UAAU2G,SAAS,gBAE5B,QAAUkvB,IAAN9V,EACA,OACJ,MAAM9hB,EAAS8hB,EACT2yC,EAAgBxqC,EAAKy+B,sBAAwB,IAAIn6C,KAAKvO,EAAO6iD,QAAQ3E,WACrEwW,GAAqBD,EAAatP,WAAal7B,EAAK4gC,cACtD4J,EAAatP,WACTl7B,EAAK4gC,aAAe5gC,EAAKs7B,OAAOrF,WAAa,IAC5B,UAArBj2B,EAAKs7B,OAAOzG,KAEhB,GADA70B,EAAK0hC,iBAAmB3rD,EACC,WAArBiqB,EAAKs7B,OAAOzG,KACZ70B,EAAKs+B,cAAgB,CAACkM,QACrB,GAAyB,aAArBxqC,EAAKs7B,OAAOzG,KAAqB,CACtC,MAAM6V,EAAgBjJ,EAAe+I,GACjCE,EACA1qC,EAAKs+B,cAAcxkB,OAAO3hC,SAASuyD,GAAgB,GAEnD1qC,EAAKs+B,cAAcrjD,KAAKuvD,OAEF,UAArBxqC,EAAKs7B,OAAOzG,OACiB,IAA9B70B,EAAKs+B,cAAcpoD,QACnB8pB,EAAKrI,OAAM,GAAO,GAEtBqI,EAAKy+B,sBAAwB+L,EAC7BxqC,EAAKs+B,cAAcrjD,KAAKuvD,GACwC,IAA5D5N,GAAa4N,EAAcxqC,EAAKs+B,cAAc,IAAI,IAClDt+B,EAAKs+B,cAAcpxC,MAAK,CAACmsB,EAAGoE,IAAMpE,EAAE4a,UAAYxW,EAAEwW,aAG1D,GADAqL,IACImL,EAAmB,CACnB,MAAMzE,EAAYhmC,EAAK0gC,cAAgB8J,EAAajW,cACpDv0B,EAAK0gC,YAAc8J,EAAajW,cAChCv0B,EAAK4gC,aAAe4J,EAAatP,WAC7B8K,IACA3F,EAAa,gBACbQ,KAEJR,EAAa,iBAejB,GAbA8E,IACAvB,IACArE,IACKkL,GACoB,UAArBzqC,EAAKs7B,OAAOzG,MACe,IAA3B70B,EAAKs7B,OAAOrF,gBAEmBtoB,IAA1B3N,EAAK0hC,uBACW/zB,IAArB3N,EAAK++B,aACL/+B,EAAK0hC,kBAAoB1hC,EAAK0hC,iBAAiBruC,QAH/CwuC,EAAe9rD,QAKM43B,IAArB3N,EAAK++B,kBACgBpxB,IAArB3N,EAAK++B,aAA6B/+B,EAAK++B,YAAY1rC,QACnD2M,EAAKs7B,OAAOjI,cAAe,CAC3B,MAAMsX,EAA8B,WAArB3qC,EAAKs7B,OAAOzG,OAAsB70B,EAAKs7B,OAAOzH,WACvD+W,EAA6B,UAArB5qC,EAAKs7B,OAAOzG,MACQ,IAA9B70B,EAAKs+B,cAAcpoD,SAClB8pB,EAAKs7B,OAAOzH,YACb8W,GAAUC,IACVjE,IAGRvG,IA3/CJpgC,EAAKo8B,UAAYR,GAAiB,CAAEN,OAAQt7B,EAAKs7B,OAAQC,KAAMv7B,EAAKu7B,OACpEv7B,EAAKmgC,UAAY,GACjBngC,EAAKgnC,eAAiB,GACtBhnC,EAAK6qC,cAAgB,GACrB7qC,EAAK8qC,MAAQ1uD,EACb4jB,EAAK+qC,kBAAoBhL,EACzB//B,EAAKgrC,kBAAoBhD,EACzBhoC,EAAK8iC,YAAcA,EACnB9iC,EAAKigC,WAAaA,EAClBjgC,EAAKrI,MA4tBL,SAAeszC,GAAqB,EAAMC,GAAY,GAClDlrC,EAAK8R,MAAMl7B,MAAQ,QACG+2B,IAAlB3N,EAAK+yB,WACL/yB,EAAK+yB,SAASn8C,MAAQ,SACD+2B,IAArB3N,EAAKmrC,cACLnrC,EAAKmrC,YAAYv0D,MAAQ,IAC7BopB,EAAKs+B,cAAgB,GACrBt+B,EAAKy+B,2BAAwB9wB,GACX,IAAdu9B,IACAlrC,EAAK0gC,YAAc1gC,EAAKorC,aAAa7W,cACrCv0B,EAAK4gC,aAAe5gC,EAAKorC,aAAalQ,YAE1C,IAA+B,IAA3Bl7B,EAAKs7B,OAAOzH,WAAqB,CACjC,MAAMmJ,MAAEA,EAAKzC,QAAEA,EAAOd,QAAEA,GAAYsD,GAAgB/8B,EAAKs7B,QACzDpH,EAAS8I,EAAOzC,EAASd,GAE7Bz5B,EAAK8gC,SACDmK,GACA5K,EAAa,aA7uBrBrgC,EAAKyC,MA+uBL,WACIzC,EAAKuI,QAAS,EACTvI,EAAKw7B,gBACyB7tB,IAA3B3N,EAAK+9B,mBACL/9B,EAAK+9B,kBAAkBjmD,UAAUU,OAAO,aAExBm1B,IAAhB3N,EAAKq/B,QACLr/B,EAAKq/B,OAAOvnD,UAAUU,OAAO,WAGrC6nD,EAAa,YAxvBjBrgC,EAAKqrC,eAAiBrtD,GACtBgiB,EAAKzc,QAyvBL,gBACwBoqB,IAAhB3N,EAAKs7B,QACL+E,EAAa,aACjB,IAAK,IAAIpqD,EAAI+pB,EAAKmgC,UAAUjqD,OAAQD,KAChC+pB,EAAKmgC,UAAUlqD,GAAGuC,SAGtB,GADAwnB,EAAKmgC,UAAY,GACbngC,EAAKmrC,YACDnrC,EAAKmrC,YAAY1uD,YACjBujB,EAAKmrC,YAAY1uD,WAAWkC,YAAYqhB,EAAKmrC,aACjDnrC,EAAKmrC,iBAAcx9B,OAElB,GAAI3N,EAAK+9B,mBAAqB/9B,EAAK+9B,kBAAkBthD,WACtD,GAAIujB,EAAKs7B,OAAOpF,QAAUl2B,EAAK+9B,kBAAkBthD,WAAY,CACzD,MAAMqZ,EAAUkK,EAAK+9B,kBAAkBthD,WAEvC,GADAqZ,EAAQw1C,WAAax1C,EAAQnX,YAAYmX,EAAQw1C,WAC7Cx1C,EAAQrZ,WAAY,CACpB,KAAOqZ,EAAQ+e,YACX/e,EAAQrZ,WAAWC,aAAaoZ,EAAQ+e,WAAY/e,GACxDA,EAAQrZ,WAAWkC,YAAYmX,SAInCkK,EAAK+9B,kBAAkBthD,WAAWkC,YAAYqhB,EAAK+9B,mBAEvD/9B,EAAK+yB,WACL/yB,EAAK8R,MAAMz5B,KAAO,OACd2nB,EAAK+yB,SAASt2C,YACdujB,EAAK+yB,SAASt2C,WAAWkC,YAAYqhB,EAAK+yB,iBACvC/yB,EAAK+yB,UAEZ/yB,EAAK8R,QACL9R,EAAK8R,MAAMz5B,KAAO2nB,EAAK8R,MAAMy5B,MAC7BvrC,EAAK8R,MAAMh6B,UAAUU,OAAO,mBAC5BwnB,EAAK8R,MAAMt0B,gBAAgB,aAE/B,CACI,iBACA,wBACA,sBACA,sBACA,uBACA,uBACA,WACA,SACA,mBACA,iBACA,iBACA,OACA,gBACA,SACA,mBACA,iBACA,aACA,WACA,gBACA,oBACA,mBACA,eACA,eACA,0BACA,sBACA,qBACA,yBACA,mBACA,UACF3E,SAAS2yD,IACP,WACWxrC,EAAKwrC,GAEhB,MAAO5R,SA9zBf55B,EAAKohC,UAAYA,EACjBphC,EAAKsgC,WAAaA,EAClBtgC,EAAK2qB,KA+nCL,SAAc1rC,EAAG62C,EAAkB91B,EAAKwoC,kBACpC,IAAsB,IAAlBxoC,EAAKw7B,SAAmB,CACxB,GAAIv8C,EAAG,CACHA,EAAEE,iBACF,MAAMg2B,EAAckjB,GAAep5C,GAC/Bk2B,GACAA,EAAYsxB,OAQpB,YALyB94B,IAArB3N,EAAKmrC,cACLnrC,EAAKmrC,YAAY93C,QACjB2M,EAAKmrC,YAAYtoB,cAErBwd,EAAa,UAGZ,GAAIrgC,EAAKq/B,OAAO7oC,UAAYwJ,EAAKs7B,OAAO5G,OACzC,OAEJ,MAAM+W,EAAUzrC,EAAKuI,OACrBvI,EAAKuI,QAAS,EACTkjC,IACDzrC,EAAK+9B,kBAAkBjmD,UAAUC,IAAI,QACrCioB,EAAKq/B,OAAOvnD,UAAUC,IAAI,UAC1BsoD,EAAa,UACb2H,EAAiBlS,KAEU,IAA3B91B,EAAKs7B,OAAOzH,aAAkD,IAA3B7zB,EAAKs7B,OAAOtG,cAChB,IAA3Bh1B,EAAKs7B,OAAO1I,iBACLjlB,IAAN1uB,GACI+gB,EAAK6lC,cAAcpnD,SAASQ,EAAEymD,gBACnCztD,YAAW,IAAM+nB,EAAK++B,YAAY2M,UAAU,MA7pCxD1rC,EAAK8gC,OAASA,EACd9gC,EAAKrM,IA8/CL,SAAay1B,EAAQxyC,GACjB,GAAe,OAAXwyC,GAAqC,iBAAXA,EAAqB,CAC/C7yC,OAAO6G,OAAO4iB,EAAKs7B,OAAQlS,GAC3B,IAAK,MAAM3yC,KAAO2yC,OACSzb,IAAnBg+B,EAAUl1D,IACVk1D,EAAUl1D,GAAKoC,SAASqI,GAAMA,WAItC8e,EAAKs7B,OAAOlS,GAAUxyC,OACI+2B,IAAtBg+B,EAAUviB,GACVuiB,EAAUviB,GAAQvwC,SAASqI,GAAMA,MAC5BwxC,GAAM13C,QAAQouC,IAAW,IAC9BppB,EAAKs7B,OAAOlS,GAAUuO,GAAS/gD,IAEvCopB,EAAK8gC,SACLvB,GAAY,IA7gDhBv/B,EAAKm0B,QAijDL,SAAiBH,EAAMoM,GAAgB,EAAO/+C,EAAS2e,EAAKs7B,OAAO/H,YAC/D,GAAc,IAATS,IAAeA,GAAUA,aAAgBx5C,OAAyB,IAAhBw5C,EAAK99C,OACxD,OAAO8pB,EAAKrI,MAAMyoC,GACtBwL,EAAgB5X,EAAM3yC,GACtB2e,EAAKy+B,sBACDz+B,EAAKs+B,cAAct+B,EAAKs+B,cAAcpoD,OAAS,GACnD8pB,EAAK8gC,SACLR,OAAW3yB,EAAWyyB,GACtBL,IACkC,IAA9B//B,EAAKs+B,cAAcpoD,QACnB8pB,EAAKrI,OAAM,GAEf4nC,EAAYa,GACRA,GACAC,EAAa,aA9jDrBrgC,EAAKzI,OAisDL,SAAgBtY,GACZ,IAAoB,IAAhB+gB,EAAKuI,OACL,OAAOvI,EAAKyC,QAChBzC,EAAK2qB,KAAK1rC,IA1Nd,MAAM0sD,EAAY,CACdhX,OAAQ,CAACyT,EAAarD,GACtB9O,WAAY,CAACsO,EAAazG,EAAkB+G,GAC5C5H,QAAS,CAACqD,GACVjD,QAAS,CAACiD,GACVlN,WAAY,CACR,MACmC,IAA3BpzB,EAAKs7B,OAAOlI,YACZh3C,EAAK4jB,EAAKq/B,OAAQ,QAASr/B,EAAK2qB,MAChCvuC,EAAK4jB,EAAKq/B,OAAQ,QAASr/B,EAAK2qB,QAGhC3qB,EAAKq/B,OAAO/7C,oBAAoB,QAAS0c,EAAK2qB,MAC9C3qB,EAAKq/B,OAAO/7C,oBAAoB,QAAS0c,EAAK2qB,UAuB9D,SAASihB,EAAgBC,EAAWxqD,GAChC,IAAIyqD,EAAQ,GACZ,GAAID,aAAqBrxD,MACrBsxD,EAAQD,EAAUv0D,KAAK+iD,GAAMr6B,EAAKo8B,UAAU/B,EAAGh5C,UAC9C,GAAIwqD,aAAqBvnD,MAA6B,iBAAdunD,EACzCC,EAAQ,CAAC9rC,EAAKo8B,UAAUyP,EAAWxqD,SAClC,GAAyB,iBAAdwqD,EACZ,OAAQ7rC,EAAKs7B,OAAOzG,MAChB,IAAK,SACL,IAAK,OACDiX,EAAQ,CAAC9rC,EAAKo8B,UAAUyP,EAAWxqD,IACnC,MACJ,IAAK,WACDyqD,EAAQD,EACH9vD,MAAMikB,EAAKs7B,OAAOhI,aAClBh8C,KAAK08C,GAASh0B,EAAKo8B,UAAUpI,EAAM3yC,KACxC,MACJ,IAAK,QACDyqD,EAAQD,EACH9vD,MAAMikB,EAAKu7B,KAAKzE,gBAChBx/C,KAAK08C,GAASh0B,EAAKo8B,UAAUpI,EAAM3yC,UAOhD2e,EAAKs7B,OAAOlW,aAAa,IAAIvlC,MAAM,0BAA0BiN,KAAKw7C,UAAUuD,OAChF7rC,EAAKs+B,cAAiBt+B,EAAKs7B,OAAOzI,oBAC5BiZ,EACAA,EAAMlvD,QAAQy9C,GAAMA,aAAa/1C,MAAQ88C,EAAU/G,GAAG,KACnC,UAArBr6B,EAAKs7B,OAAOzG,MACZ70B,EAAKs+B,cAAcpxC,MAAK,CAACmsB,EAAGoE,IAAMpE,EAAE4a,UAAYxW,EAAEwW,YAkB1D,SAAS8X,EAAerqC,GACpB,OAAOA,EACFrmB,QACA/D,KAAK00D,GACc,iBAATA,GACS,iBAATA,GACPA,aAAgB1nD,KACT0b,EAAKo8B,UAAU4P,OAAMr+B,GAAW,GAElCq+B,GACW,iBAATA,GACPA,EAAK/gD,MACL+gD,EAAK5F,GACE,CACHn7C,KAAM+U,EAAKo8B,UAAU4P,EAAK/gD,UAAM0iB,GAChCy4B,GAAIpmC,EAAKo8B,UAAU4P,EAAK5F,QAAIz4B,IAE7Bq+B,IAENpvD,QAAQsE,GAAMA,IAmHvB,SAASm/C,EAAav9C,EAAOU,GACzB,QAAoBmqB,IAAhB3N,EAAKs7B,OACL,OACJ,MAAM2Q,EAAQjsC,EAAKs7B,OAAOx4C,GAC1B,QAAc6qB,IAAVs+B,GAAuBA,EAAM/1D,OAAS,EACtC,IAAK,IAAID,EAAI,EAAGg2D,EAAMh2D,IAAMA,EAAIg2D,EAAM/1D,OAAQD,IAC1Cg2D,EAAMh2D,GAAG+pB,EAAKs+B,cAAet+B,EAAK8R,MAAMl7B,MAAOopB,EAAMxc,GAE/C,aAAVV,IACAkd,EAAK8R,MAAMvH,cAAcgO,EAAY,WACrCvY,EAAK8R,MAAMvH,cAAcgO,EAAY,WAG7C,SAASA,EAAY18B,GACjB,MAAMoD,EAAI3G,SAASigC,YAAY,SAE/B,OADAt5B,EAAEitD,UAAUrwD,GAAM,GAAM,GACjBoD,EAEX,SAASwiD,EAAezN,GACpB,IAAK,IAAI/9C,EAAI,EAAGA,EAAI+pB,EAAKs+B,cAAcpoD,OAAQD,IAC3C,GAAkD,IAA9C2mD,GAAa58B,EAAKs+B,cAAcroD,GAAI+9C,GACpC,MAAO,GAAK/9C,EAEpB,OAAO,EAQX,SAASkvD,IACDnlC,EAAKs7B,OAAOtG,YAAch1B,EAAKw7B,WAAax7B,EAAKwkC,WAErDxkC,EAAK0kC,aAAa7rD,SAAQ,CAACyrD,EAAaruD,KACpC,MAAMokD,EAAI,IAAI/1C,KAAK0b,EAAK0gC,YAAa1gC,EAAK4gC,aAAc,GACxDvG,EAAEvB,SAAS94B,EAAK4gC,aAAe3qD,GAC3B+pB,EAAKs7B,OAAOrF,WAAa,GACS,WAAlCj2B,EAAKs7B,OAAOxG,kBACZ90B,EAAK2kC,cAAc1uD,GAAG4oC,YAClB2Z,GAAW6B,EAAEa,WAAYl7B,EAAKs7B,OAAOtF,sBAAuBh2B,EAAKu7B,MAAQ,IAG7Ev7B,EAAK+jC,wBAAwBntD,MAAQyjD,EAAEa,WAAWp6B,WAEtDwjC,EAAY1tD,MAAQyjD,EAAE9F,cAAczzB,cAExCd,EAAKilC,yBACuBt3B,IAAxB3N,EAAKs7B,OAAO2B,UACPj9B,EAAK0gC,cAAgB1gC,EAAKs7B,OAAO2B,QAAQ1I,cACpCv0B,EAAK4gC,cAAgB5gC,EAAKs7B,OAAO2B,QAAQ/B,WACzCl7B,EAAK0gC,YAAc1gC,EAAKs7B,OAAO2B,QAAQ1I,eACrDv0B,EAAKklC,yBACuBv3B,IAAxB3N,EAAKs7B,OAAO+B,UACPr9B,EAAK0gC,cAAgB1gC,EAAKs7B,OAAO+B,QAAQ9I,cACpCv0B,EAAK4gC,aAAe,EAAI5gC,EAAKs7B,OAAO+B,QAAQnC,WAC5Cl7B,EAAK0gC,YAAc1gC,EAAKs7B,OAAO+B,QAAQ9I,gBAEzD,SAAS4X,EAAW9qD,GAChB,OAAO2e,EAAKs+B,cACPhnD,KAAK80D,GAASpsC,EAAK27B,WAAWyQ,EAAM/qD,KACpCzE,QAAO,CAACy9C,EAAGpkD,EAAGyrB,IAA6B,UAArB1B,EAAKs7B,OAAOzG,MACnC70B,EAAKs7B,OAAOzH,YACZnyB,EAAI1mB,QAAQq/C,KAAOpkD,IAClB4U,KAA0B,UAArBmV,EAAKs7B,OAAOzG,KAChB70B,EAAKs7B,OAAOhI,YACZtzB,EAAKu7B,KAAKzE,gBAEpB,SAASyI,EAAYa,GAAgB,QACRzyB,IAArB3N,EAAKmrC,aAA6BnrC,EAAKqsC,kBACvCrsC,EAAKmrC,YAAYv0D,WACkB+2B,IAA/B3N,EAAKy+B,sBACCz+B,EAAK27B,WAAW37B,EAAKy+B,sBAAuBz+B,EAAKqsC,iBACjD,IAEdrsC,EAAK8R,MAAMl7B,MAAQu1D,EAAWnsC,EAAKs7B,OAAO/H,iBACpB5lB,IAAlB3N,EAAK+yB,WACL/yB,EAAK+yB,SAASn8C,MAAQu1D,EAAWnsC,EAAKs7B,OAAOxI,aAE3B,IAAlBsN,GACAC,EAAa,iBAErB,SAASiM,EAAgBrtD,GACrB,MAAMk2B,EAAckjB,GAAep5C,GAC7BstD,EAAcvsC,EAAKykC,aAAahmD,SAAS02B,GACzCq3B,EAAcxsC,EAAK4kC,aAAanmD,SAAS02B,GAC3Co3B,GAAeC,EACf1J,EAAYyJ,GAAe,EAAI,GAE1BvsC,EAAK0kC,aAAa1pD,QAAQm6B,IAAgB,EAC/CA,EAAYu2B,SAEPv2B,EAAYr9B,UAAU2G,SAAS,WACpCuhB,EAAKigC,WAAWjgC,EAAK0gC,YAAc,GAE9BvrB,EAAYr9B,UAAU2G,SAAS,cACpCuhB,EAAKigC,WAAWjgC,EAAK0gC,YAAc,GA0C3C,OAt0DA,WACI1gC,EAAK4H,QAAU5H,EAAK8R,MAAQlK,EAC5B5H,EAAKuI,QAAS,EA+qClB,WACI,MAAMkkC,EAAW,CACb,OACA,cACA,aACA,sBACA,aACA,YACA,aACA,aACA,WACA,wBACA,SACA,SACA,gBACA,iBAEEC,EAAan2D,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAI0P,KAAKC,MAAMD,KAAKw7C,UAAU1gC,EAAQmB,SAAW,MAAO00B,GACjGzC,EAAU,GAChBh7B,EAAKs7B,OAAOc,UAAYsQ,EAAWtQ,UACnCp8B,EAAKs7B,OAAOK,WAAa+Q,EAAW/Q,WACpCplD,OAAOC,eAAewpB,EAAKs7B,OAAQ,SAAU,CACzC1sC,IAAK,IAAMoR,EAAKs7B,OAAOqR,QACvBh5C,IAAMm4C,IACF9rC,EAAKs7B,OAAOqR,QAAUZ,EAAeD,MAG7Cv1D,OAAOC,eAAewpB,EAAKs7B,OAAQ,UAAW,CAC1C1sC,IAAK,IAAMoR,EAAKs7B,OAAO3I,SACvBh/B,IAAMm4C,IACF9rC,EAAKs7B,OAAO3I,SAAWoZ,EAAeD,MAG9C,MAAMc,EAA+B,SAApBF,EAAW7X,KAC5B,IAAK6X,EAAWnZ,aAAemZ,EAAW7Y,YAAc+Y,GAAW,CAC/D,MAAMC,EAAoBnP,GAAUC,cAAcpK,YAAcvsB,GAAeusB,WAC/EyH,EAAQzH,WACJmZ,EAAW1X,YAAc4X,EACnB,OAASF,EAAW9Y,cAAgB,KAAO,IAC3CiZ,EAAoB,QAAUH,EAAW9Y,cAAgB,KAAO,IAE9E,GAAI8Y,EAAW3Z,WACV2Z,EAAW7Y,YAAc+Y,KACzBF,EAAW5Z,UAAW,CACvB,MAAMga,EAAmBpP,GAAUC,cAAc7K,WAAa9rB,GAAe8rB,UAC7EkI,EAAQlI,UACJ4Z,EAAW1X,YAAc4X,EACnB,OAASF,EAAW9Y,cAAgB,OAAS,MAC7CkZ,EAAmB,OAAOJ,EAAW9Y,cAAgB,KAAO,OAE1Er9C,OAAOC,eAAewpB,EAAKs7B,OAAQ,UAAW,CAC1C1sC,IAAK,IAAMoR,EAAKs7B,OAAOyR,SACvBp5C,IAAKs0C,EAAiB,SAE1B1xD,OAAOC,eAAewpB,EAAKs7B,OAAQ,UAAW,CAC1C1sC,IAAK,IAAMoR,EAAKs7B,OAAO0R,SACvBr5C,IAAKs0C,EAAiB,SAE1B,MAAMgF,EAAoB50D,GAAU8gC,IAChCnZ,EAAKs7B,OAAgB,QAATjjD,EAAiB,WAAa,YAAc2nB,EAAKo8B,UAAUjjB,EAAK,UAEhF5iC,OAAOC,eAAewpB,EAAKs7B,OAAQ,UAAW,CAC1C1sC,IAAK,IAAMoR,EAAKs7B,OAAO4R,SACvBv5C,IAAKs5C,EAAiB,SAE1B12D,OAAOC,eAAewpB,EAAKs7B,OAAQ,UAAW,CAC1C1sC,IAAK,IAAMoR,EAAKs7B,OAAO6R,SACvBx5C,IAAKs5C,EAAiB,SAEF,SAApBP,EAAW7X,OACX70B,EAAKs7B,OAAOtG,YAAa,EACzBh1B,EAAKs7B,OAAOzH,YAAa,GAE7Bt9C,OAAO6G,OAAO4iB,EAAKs7B,OAAQN,EAAS0R,GACpC,IAAK,IAAIz2D,EAAI,EAAGA,EAAIw2D,EAASv2D,OAAQD,IACjC+pB,EAAKs7B,OAAOmR,EAASx2D,KACY,IAA7B+pB,EAAKs7B,OAAOmR,EAASx2D,KACY,SAA7B+pB,EAAKs7B,OAAOmR,EAASx2D,IACjCy8C,GAAM91C,QAAQwwD,QAA+Bz/B,IAAtB3N,EAAKs7B,OAAO8R,KAAqBv0D,SAASu0D,IAC7DptC,EAAKs7B,OAAO8R,GAAQzV,GAAS33B,EAAKs7B,OAAO8R,IAAS,IAAI91D,IAAIumD,MAE9D79B,EAAKw7B,UACAx7B,EAAKs7B,OAAO3H,gBACR3zB,EAAKs7B,OAAO5G,QACQ,WAArB10B,EAAKs7B,OAAOzG,OACX70B,EAAKs7B,OAAOziC,QAAQ3iB,SACpB8pB,EAAKs7B,OAAOvY,SACZ/iB,EAAKs7B,OAAOlF,aACb,iEAAiEr1B,KAAKwD,UAAU2pB,WACxF,IAAK,IAAIj4C,EAAI,EAAGA,EAAI+pB,EAAKs7B,OAAOzF,QAAQ3/C,OAAQD,IAAK,CACjD,MAAMo3D,EAAartC,EAAKs7B,OAAOzF,QAAQ5/C,GAAG+pB,IAAS,GACnD,IAAK,MAAMvpB,KAAO42D,EACV3a,GAAM13C,QAAQvE,IAAQ,EACtBupB,EAAKs7B,OAAO7kD,GAAOkhD,GAAS0V,EAAW52D,IAClCa,IAAIumD,GACJnhC,OAAOsD,EAAKs7B,OAAO7kD,SAEQ,IAApBi2D,EAAWj2D,KACvBupB,EAAKs7B,OAAO7kD,GAAO42D,EAAW52D,IAGrCi2D,EAAW1Z,gBACZhzB,EAAKs7B,OAAOtI,cACRmV,IAAe3pD,UAAY,IAAMwhB,EAAKs7B,OAAOtI,eAErDqN,EAAa,iBAvxCbiN,GACAlF,IAgnDJ,WAEI,GADApoC,EAAK8R,MAAQq2B,KACRnoC,EAAK8R,MAEN,YADA9R,EAAKs7B,OAAOlW,aAAa,IAAIvlC,MAAM,oCAGvCmgB,EAAK8R,MAAMy5B,MAAQvrC,EAAK8R,MAAMz5B,KAC9B2nB,EAAK8R,MAAMz5B,KAAO,OAClB2nB,EAAK8R,MAAMh6B,UAAUC,IAAI,mBACzBioB,EAAKq/B,OAASr/B,EAAK8R,MACf9R,EAAKs7B,OAAOvI,WACZ/yB,EAAK+yB,SAAW/0C,GAAcgiB,EAAK8R,MAAM4O,SAAU1gB,EAAKs7B,OAAOtI,eAC/DhzB,EAAKq/B,OAASr/B,EAAK+yB,SACnB/yB,EAAK+yB,SAASwa,YAAcvtC,EAAK8R,MAAMy7B,YACvCvtC,EAAK+yB,SAASv8B,SAAWwJ,EAAK8R,MAAMtb,SACpCwJ,EAAK+yB,SAASya,SAAWxtC,EAAK8R,MAAM07B,SACpCxtC,EAAK+yB,SAASyO,SAAWxhC,EAAK8R,MAAM0vB,SACpCxhC,EAAK+yB,SAAS16C,KAAO,OACrB2nB,EAAK8R,MAAMn0B,aAAa,OAAQ,WAC3BqiB,EAAKs7B,OAAOpF,QAAUl2B,EAAK8R,MAAMr1B,YAClCujB,EAAK8R,MAAMr1B,WAAWC,aAAasjB,EAAK+yB,SAAU/yB,EAAK8R,MAAM27B,cAEhEztC,EAAKs7B,OAAO1I,YACb5yB,EAAKq/B,OAAO1hD,aAAa,WAAY,YACzCqiB,EAAKwoC,iBAAmBxoC,EAAKs7B,OAAOxF,iBAAmB91B,EAAKq/B,OAvoD5DqO,GAskDJ,WACI1tC,EAAKs+B,cAAgB,GACrBt+B,EAAK3b,IAAM2b,EAAKo8B,UAAUp8B,EAAKs7B,OAAOj3C,MAAQ,IAAIC,KAClD,MAAMqpD,EAAgB3tC,EAAKs7B,OAAOiD,cACJ,UAAxBv+B,EAAK8R,MAAM4O,UACe,aAAxB1gB,EAAK8R,MAAM4O,WACX1gB,EAAK8R,MAAMy7B,aACXvtC,EAAK8R,MAAMl7B,QAAUopB,EAAK8R,MAAMy7B,YAE9BvtC,EAAK8R,MAAMl7B,MADX,MAEN+2D,GACA/B,EAAgB+B,EAAe3tC,EAAKs7B,OAAO/H,YAC/CvzB,EAAKorC,aACDprC,EAAKs+B,cAAcpoD,OAAS,EACtB8pB,EAAKs+B,cAAc,GACnBt+B,EAAKs7B,OAAO2B,SACVj9B,EAAKs7B,OAAO2B,QAAQhJ,UAAYj0B,EAAK3b,IAAI4vC,UACvCj0B,EAAKs7B,OAAO2B,QACZj9B,EAAKs7B,OAAO+B,SACVr9B,EAAKs7B,OAAO+B,QAAQpJ,UAAYj0B,EAAK3b,IAAI4vC,UACvCj0B,EAAKs7B,OAAO+B,QACZr9B,EAAK3b,IACvB2b,EAAK0gC,YAAc1gC,EAAKorC,aAAa7W,cACrCv0B,EAAK4gC,aAAe5gC,EAAKorC,aAAalQ,WAClCl7B,EAAKs+B,cAAcpoD,OAAS,IAC5B8pB,EAAKy+B,sBAAwBz+B,EAAKs+B,cAAc,SACxB3wB,IAAxB3N,EAAKs7B,OAAOqE,UACZ3/B,EAAKs7B,OAAOqE,QAAU3/B,EAAKo8B,UAAUp8B,EAAKs7B,OAAOqE,QAAS,aAClChyB,IAAxB3N,EAAKs7B,OAAOuE,UACZ7/B,EAAKs7B,OAAOuE,QAAU7/B,EAAKo8B,UAAUp8B,EAAKs7B,OAAOuE,QAAS,QAC9D7/B,EAAK4/B,iBACC5/B,EAAKs7B,OAAO2B,UACTj9B,EAAKs7B,OAAO2B,QAAQ5D,WAAa,GAC9Br5B,EAAKs7B,OAAO2B,QAAQ7B,aAAe,GACnCp7B,EAAKs7B,OAAO2B,QAAQ9B,aAAe,GAC/Cn7B,EAAK8/B,iBACC9/B,EAAKs7B,OAAO+B,UACTr9B,EAAKs7B,OAAO+B,QAAQhE,WAAa,GAC9Br5B,EAAKs7B,OAAO+B,QAAQjC,aAAe,GACnCp7B,EAAKs7B,OAAO+B,QAAQlC,aAAe,GA5mD/CyS,GAdA5tC,EAAKmjC,MAAQ,CACTC,eAAc,CAACzI,EAAQ36B,EAAK4gC,aAAciN,EAAK7tC,EAAK0gC,cAClC,IAAV/F,IAAiBkT,EAAK,GAAM,GAAKA,EAAK,KAAQ,GAAMA,EAAK,KAAQ,GAC1D,GACJ7tC,EAAKu7B,KAAK7E,YAAYiE,IAYhC36B,EAAKw7B,UAsQd,WACI,MAAMsS,EAAWh3D,OAAOwB,SAAS+qD,yBAGjC,GAFArjC,EAAK+9B,kBAAoB//C,GAAc,MAAO,sBAC9CgiB,EAAK+9B,kBAAkByD,UAAY,GAC9BxhC,EAAKs7B,OAAOtG,WAAY,CAGzB,GAFA8Y,EAAS3xD,aA8Rb6jB,EAAKwkC,SAAWxmD,GAAc,MAAO,oBACrCgiB,EAAK0kC,aAAe,GACpB1kC,EAAK2kC,cAAgB,GACrB3kC,EAAKykC,aAAezmD,GAAc,OAAQ,wBAC1CgiB,EAAKykC,aAAax7B,UAAYjJ,EAAKs7B,OAAOvF,UAC1C/1B,EAAK4kC,aAAe5mD,GAAc,OAAQ,wBAC1CgiB,EAAK4kC,aAAa37B,UAAYjJ,EAAKs7B,OAAOvG,UAC1CwP,IACAhuD,OAAOC,eAAewpB,EAAM,sBAAuB,CAC/CpR,IAAK,IAAMoR,EAAK+tC,qBAChBrwC,IAAI85B,GACIx3B,EAAK+tC,uBAAyBvW,IAC9B97C,GAAYskB,EAAKykC,aAAc,qBAAsBjN,GACrDx3B,EAAK+tC,qBAAuBvW,MAIxCjhD,OAAOC,eAAewpB,EAAM,sBAAuB,CAC/CpR,IAAK,IAAMoR,EAAKguC,qBAChBtwC,IAAI85B,GACIx3B,EAAKguC,uBAAyBxW,IAC9B97C,GAAYskB,EAAK4kC,aAAc,qBAAsBpN,GACrDx3B,EAAKguC,qBAAuBxW,MAIxCx3B,EAAK8mC,mBAAqB9mC,EAAK0kC,aAAa,GAC5CS,IACOnlC,EAAKwkC,WAzTRxkC,EAAKiuC,eAAiBjwD,GAAc,MAAO,4BACvCgiB,EAAKs7B,OAAOlF,YAAa,CACzB,MAAM+H,YAAEA,EAAW/H,YAAEA,GAuZjC,WACIp2B,EAAK+9B,kBAAkBjmD,UAAUC,IAAI,YACrC,MAAMomD,EAAcngD,GAAc,MAAO,yBACzCmgD,EAAYhiD,YAAY6B,GAAc,OAAQ,oBAAqBgiB,EAAKu7B,KAAKxE,mBAC7E,MAAMX,EAAcp4C,GAAc,MAAO,mBAEzC,OADAmgD,EAAYhiD,YAAYi6C,GACjB,CACH+H,YAAAA,EACA/H,YAAAA,GA/ZyC8X,GACrCluC,EAAKiuC,eAAe9xD,YAAYgiD,GAChCn+B,EAAKo2B,YAAcA,EACnBp2B,EAAKm+B,YAAcA,EAEvBn+B,EAAKmuC,WAAanwD,GAAc,MAAO,wBACvCgiB,EAAKmuC,WAAWhyD,YAAY0oD,KACvB7kC,EAAKg+B,gBACNh+B,EAAKg+B,cAAgBhgD,GAAc,MAAO,kBAC1CgiB,EAAKg+B,cAAcwD,UAAY,GAEnCoC,IACA5jC,EAAKmuC,WAAWhyD,YAAY6jB,EAAKg+B,eACjCh+B,EAAKiuC,eAAe9xD,YAAY6jB,EAAKmuC,YACrCL,EAAS3xD,YAAY6jB,EAAKiuC,gBAE1BjuC,EAAKs7B,OAAOzH,YACZia,EAAS3xD,YAwSjB,WACI6jB,EAAK+9B,kBAAkBjmD,UAAUC,IAAI,WACjCioB,EAAKs7B,OAAOtG,YACZh1B,EAAK+9B,kBAAkBjmD,UAAUC,IAAI,cACzC,MAAM+mB,EAAWi+B,GAAgB/8B,EAAKs7B,QACtCt7B,EAAK6lC,cAAgB7nD,GAAc,MAAO,kBAC1CgiB,EAAK6lC,cAAcrE,UAAY,EAC/B,MAAM4M,EAAYpwD,GAAc,OAAQ,2BAA4B,KAC9DqwD,EAAYtW,GAAkB,iBAAkB,CAClDuW,aAActuC,EAAKu7B,KAAKlE,gBAE5Br3B,EAAK++B,YAAcsP,EAAUjhC,qBAAqB,SAAS,GAC3D,MAAMmhC,EAAcxW,GAAkB,mBAAoB,CACtDuW,aAActuC,EAAKu7B,KAAKjE,kBAE5Bt3B,EAAKi/B,cAAgBsP,EAAYnhC,qBAAqB,SAAS,GAC/DpN,EAAK++B,YAAYyC,SAAWxhC,EAAKi/B,cAAcuC,UAAY,EAC3DxhC,EAAK++B,YAAYnoD,MAAQ8K,GAAIse,EAAKy+B,sBAC5Bz+B,EAAKy+B,sBAAsBpF,WAC3Br5B,EAAKs7B,OAAOnF,UACRr3B,EAASk+B,MAthBvB,SAAuBhE,GACnB,OAAQA,EAAO,IACX,KAAK,EACL,KAAK,GACD,OAAO,GACX,QACI,OAAOA,EAAO,IAihBZwV,CAAc1vC,EAASk+B,QACjCh9B,EAAKi/B,cAAcroD,MAAQ8K,GAAIse,EAAKy+B,sBAC9Bz+B,EAAKy+B,sBAAsBrD,aAC3Bt8B,EAASy7B,SACfv6B,EAAK++B,YAAYphD,aAAa,OAAQqiB,EAAKs7B,OAAO9G,cAAc1zB,YAChEd,EAAKi/B,cAActhD,aAAa,OAAQqiB,EAAKs7B,OAAO1G,gBAAgB9zB,YACpEd,EAAK++B,YAAYphD,aAAa,MAAOqiB,EAAKs7B,OAAOnF,UAAY,IAAM,KACnEn2B,EAAK++B,YAAYphD,aAAa,MAAOqiB,EAAKs7B,OAAOnF,UAAY,KAAO,MACpEn2B,EAAK++B,YAAYphD,aAAa,YAAa,KAC3CqiB,EAAKi/B,cAActhD,aAAa,MAAO,KACvCqiB,EAAKi/B,cAActhD,aAAa,MAAO,MACvCqiB,EAAKi/B,cAActhD,aAAa,YAAa,KAC7CqiB,EAAK6lC,cAAc1pD,YAAYkyD,GAC/BruC,EAAK6lC,cAAc1pD,YAAYiyD,GAC/BpuC,EAAK6lC,cAAc1pD,YAAYoyD,GAC3BvuC,EAAKs7B,OAAOnF,WACZn2B,EAAK6lC,cAAc/tD,UAAUC,IAAI,YACrC,GAAIioB,EAAKs7B,OAAO1H,cAAe,CAC3B5zB,EAAK6lC,cAAc/tD,UAAUC,IAAI,cACjC,MAAM02D,EAAc1W,GAAkB,oBACtC/3B,EAAKy/B,cAAgBgP,EAAYrhC,qBAAqB,SAAS,GAC/DpN,EAAKy/B,cAAc7oD,MAAQ8K,GAAIse,EAAKy+B,sBAC9Bz+B,EAAKy+B,sBAAsBtD,aAC3Br8B,EAAS26B,SACfz5B,EAAKy/B,cAAc9hD,aAAa,OAAQqiB,EAAKi/B,cAAcrnD,aAAa,SACxEooB,EAAKy/B,cAAc9hD,aAAa,MAAO,KACvCqiB,EAAKy/B,cAAc9hD,aAAa,MAAO,MACvCqiB,EAAKy/B,cAAc9hD,aAAa,YAAa,KAC7CqiB,EAAK6lC,cAAc1pD,YAAY6B,GAAc,OAAQ,2BAA4B,MACjFgiB,EAAK6lC,cAAc1pD,YAAYsyD,GAE9BzuC,EAAKs7B,OAAOnF,YACbn2B,EAAKk3B,KAAOl5C,GAAc,OAAQ,kBAAmBgiB,EAAKu7B,KAAKrE,KAAKK,IAAKv3B,EAAKy+B,sBACxEz+B,EAAK++B,YAAYnoD,MACjBopB,EAAKs7B,OAAO9H,aAAe,MACjCxzB,EAAKk3B,KAAKloB,MAAQhP,EAAKu7B,KAAKtE,YAC5Bj3B,EAAKk3B,KAAKsK,UAAY,EACtBxhC,EAAK6lC,cAAc1pD,YAAY6jB,EAAKk3B,OAExC,OAAOl3B,EAAK6lC,cApWa6I,IAEzBhzD,GAAYskB,EAAK+9B,kBAAmB,YAAkC,UAArB/9B,EAAKs7B,OAAOzG,MAC7Dn5C,GAAYskB,EAAK+9B,kBAAmB,WAAmC,IAAxB/9B,EAAKs7B,OAAOrI,SAC3Dv3C,GAAYskB,EAAK+9B,kBAAmB,aAAc/9B,EAAKs7B,OAAOrF,WAAa,GAC3Ej2B,EAAK+9B,kBAAkB5hD,YAAY2xD,GACnC,MAAMa,OAAwChhC,IAAzB3N,EAAKs7B,OAAO+J,eACK13B,IAAlC3N,EAAKs7B,OAAO+J,SAASrY,SACzB,IAAIhtB,EAAKs7B,OAAO5G,QAAU10B,EAAKs7B,OAAOpF,UAClCl2B,EAAK+9B,kBAAkBjmD,UAAUC,IAAIioB,EAAKs7B,OAAO5G,OAAS,SAAW,UACjE10B,EAAKs7B,OAAO5G,UACPia,GAAgB3uC,EAAK4H,QAAQnrB,WAC9BujB,EAAK4H,QAAQnrB,WAAWC,aAAasjB,EAAK+9B,kBAAmB/9B,EAAKq/B,OAAOoO,kBAC3C9/B,IAAzB3N,EAAKs7B,OAAO+J,UACjBrlC,EAAKs7B,OAAO+J,SAASlpD,YAAY6jB,EAAK+9B,oBAE1C/9B,EAAKs7B,OAAOpF,QAAQ,CACpB,MAAMpgC,EAAU9X,GAAc,MAAO,qBACjCgiB,EAAK4H,QAAQnrB,YACbujB,EAAK4H,QAAQnrB,WAAWC,aAAaoZ,EAASkK,EAAK4H,SACvD9R,EAAQ3Z,YAAY6jB,EAAK4H,SACrB5H,EAAK+yB,UACLj9B,EAAQ3Z,YAAY6jB,EAAK+yB,UAC7Bj9B,EAAQ3Z,YAAY6jB,EAAK+9B,mBAG5B/9B,EAAKs7B,OAAOpF,QAAWl2B,EAAKs7B,OAAO5G,cACV/mB,IAAzB3N,EAAKs7B,OAAO+J,SACPrlC,EAAKs7B,OAAO+J,SACZvuD,OAAOwB,SAASC,MAAM4D,YAAY6jB,EAAK+9B,mBA3T7C6Q,GAkKR,WACQ5uC,EAAKs7B,OAAOxrB,MACZ,CAAC,OAAQ,QAAS,SAAU,SAASj3B,SAASghC,IAC1Cr/B,MAAMY,UAAUvC,QAAQ4C,KAAKukB,EAAK4H,QAAQlvB,iBAAiB,SAASmhC,OAAU/gC,GAAOsD,EAAKtD,EAAI,QAASknB,EAAK6Z,SAGpH,GAAI7Z,EAAKw7B,SAEL,YA29CR,WACI,MAAMvP,EAAYjsB,EAAKs7B,OAAOzH,WACxB7zB,EAAKs7B,OAAOtG,WACR,OACA,iBACJ,OACNh1B,EAAKmrC,YAAcntD,GAAc,QAASgiB,EAAK8R,MAAMtzB,UAAY,qBACjEwhB,EAAKmrC,YAAY3J,SAAW,EAC5BxhC,EAAKmrC,YAAY9yD,KAAO4zC,EACxBjsB,EAAKmrC,YAAY30C,SAAWwJ,EAAK8R,MAAMtb,SACvCwJ,EAAKmrC,YAAYqC,SAAWxtC,EAAK8R,MAAM07B,SACvCxtC,EAAKmrC,YAAYoC,YAAcvtC,EAAK8R,MAAMy7B,YAC1CvtC,EAAKqsC,gBACa,mBAAdpgB,EACM,gBACc,SAAdA,EACI,QACA,QACVjsB,EAAKs+B,cAAcpoD,OAAS,IAC5B8pB,EAAKmrC,YAAY0D,aAAe7uC,EAAKmrC,YAAYv0D,MAAQopB,EAAK27B,WAAW37B,EAAKs+B,cAAc,GAAIt+B,EAAKqsC,kBAErGrsC,EAAKs7B,OAAO2B,UACZj9B,EAAKmrC,YAAY/qD,IAAM4f,EAAK27B,WAAW37B,EAAKs7B,OAAO2B,QAAS,UAC5Dj9B,EAAKs7B,OAAO+B,UACZr9B,EAAKmrC,YAAY9qD,IAAM2f,EAAK27B,WAAW37B,EAAKs7B,OAAO+B,QAAS,UAC5Dr9B,EAAK8R,MAAMl6B,aAAa,UACxBooB,EAAKmrC,YAAY3pC,KAAO3jB,OAAOmiB,EAAK8R,MAAMl6B,aAAa,UAC3DooB,EAAK8R,MAAMz5B,KAAO,cACIs1B,IAAlB3N,EAAK+yB,WACL/yB,EAAK+yB,SAAS16C,KAAO,UACzB,IACQ2nB,EAAK8R,MAAMr1B,YACXujB,EAAK8R,MAAMr1B,WAAWC,aAAasjB,EAAKmrC,YAAanrC,EAAK8R,MAAM27B,aAExE,MAAOxH,IACP7pD,EAAK4jB,EAAKmrC,YAAa,UAAWlsD,IAC9B+gB,EAAKm0B,QAAQkE,GAAep5C,GAAGrI,OAAO,EAAOopB,EAAKqsC,iBAClDhM,EAAa,YACbA,EAAa,cAlgDbyO,GAGJ,MAAMC,EAAkBtX,GAASsQ,EAAU,IAC3C/nC,EAAKw/B,iBAAmB/H,GAAS2I,EAzNb,KA0NhBpgC,EAAKg+B,gBAAkB,oBAAoBj9B,KAAKwD,UAAU2pB,YAC1D9xC,EAAK4jB,EAAKg+B,cAAe,aAAc/+C,IACV,UAArB+gB,EAAKs7B,OAAOzG,MACZkN,EAAY1J,GAAep5C,OAEvC7C,EAAKtF,OAAOwB,SAASC,KAAM,UAAW88C,GACjCr1B,EAAKs7B,OAAO5G,QAAW10B,EAAKs7B,OAAOpF,QACpC95C,EAAKtF,OAAQ,SAAUi4D,QACCphC,IAAxB72B,OAAOk4D,aACP5yD,EAAKtF,OAAOwB,SAAU,aAAcgtD,GAEpClpD,EAAKtF,OAAOwB,SAAU,YAAagtD,GACvClpD,EAAKtF,OAAOwB,SAAU,QAASgtD,EAAe,CAAEltC,SAAS,KAC1B,IAA3B4H,EAAKs7B,OAAOlI,aACZh3C,EAAK4jB,EAAKq/B,OAAQ,QAASr/B,EAAK2qB,MAChCvuC,EAAK4jB,EAAKq/B,OAAQ,QAASr/B,EAAK2qB,YAEThd,IAAvB3N,EAAKg+B,gBACL5hD,EAAK4jB,EAAKwkC,SAAU,QAAS8H,GAC7BlwD,EAAK4jB,EAAKwkC,SAAU,CAAC,QAAS,aAAcxE,GAC5C5jD,EAAK4jB,EAAKg+B,cAAe,QAAS4I,IAEtC,QAA2Bj5B,IAAvB3N,EAAK6lC,oBACkBl4B,IAAvB3N,EAAKi/B,oBACgBtxB,IAArB3N,EAAK++B,YAA2B,CAChC,MAAMkQ,EAAWhwD,GAAMo5C,GAAep5C,GAAGysD,SACzCtvD,EAAK4jB,EAAK6lC,cAAe,CAAC,aAAcxH,GACxCjiD,EAAK4jB,EAAK6lC,cAAe,OAAQxH,EAAY,CAAEjmC,SAAS,IACxDhc,EAAK4jB,EAAK6lC,cAAe,QAAS9E,GAClC3kD,EAAK,CAAC4jB,EAAK++B,YAAa/+B,EAAKi/B,eAAgB,CAAC,QAAS,SAAUgQ,QACtCthC,IAAvB3N,EAAKy/B,eACLrjD,EAAK4jB,EAAKy/B,cAAe,SAAS,IAAMz/B,EAAKy/B,eAAiBz/B,EAAKy/B,cAAciM,gBACnE/9B,IAAd3N,EAAKk3B,MACL96C,EAAK4jB,EAAKk3B,KAAM,SAAUj4C,IACtBo/C,EAAWp/C,GACXmhD,OAIRpgC,EAAKs7B,OAAO1I,YACZx2C,EAAK4jB,EAAKq/B,OAAQ,OAAQgH,GArN9BnxB,IACIlV,EAAKs+B,cAAcpoD,QAAU8pB,EAAKs7B,OAAOtG,cACrCh1B,EAAKs7B,OAAOzH,YACZkM,EAAiB//B,EAAKs7B,OAAOtG,WAAah1B,EAAKy+B,2BAAwB9wB,GAE3E4xB,GAAY,IAEhBzB,IACA,MAAMoR,EAAW,iCAAiCnuC,KAAKwD,UAAU2pB,YAC5DluB,EAAKw7B,UAAY0T,GAClBlH,IAEJ3H,EAAa,WA+yDjBv1C,GACOkV,EAEX,SAASmvC,GAAWC,EAAU9T,GAC1B,MAAMh/C,EAAQ9B,MAAMY,UAAUC,MACzBI,KAAK2zD,GACLxyD,QAAQsE,GAAMA,aAAatG,cAC1B+hB,EAAY,GAClB,IAAK,IAAI1mB,EAAI,EAAGA,EAAIqG,EAAMpG,OAAQD,IAAK,CACnC,MAAMuG,EAAOF,EAAMrG,GACnB,IACI,GAA0C,OAAtCuG,EAAK5E,aAAa,gBAClB,cACoB+1B,IAApBnxB,EAAK2yD,aACL3yD,EAAK2yD,WAAW5rD,UAChB/G,EAAK2yD,gBAAaxhC,GAEtBnxB,EAAK2yD,WAAa3R,GAAkBhhD,EAAM8+C,GAAU,IACpD3+B,EAAU1hB,KAAKuB,EAAK2yD,YAExB,MAAOlwD,GACHqmC,QAAQ7pB,MAAMxc,IAGtB,OAA4B,IAArB0d,EAAUzmB,OAAeymB,EAAU,GAAKA,EAExB,oBAAhB/hB,aACmB,oBAAnBy0D,gBACa,oBAAbC,WACPD,eAAej0D,UAAUsiD,UAAY4R,SAASl0D,UAAUsiD,UAAY,SAAUpC,GAC1E,OAAO6T,GAAW/3D,KAAMkkD,IAE5B1gD,YAAYQ,UAAUsiD,UAAY,SAAUpC,GACxC,OAAO6T,GAAW,CAAC/3D,MAAOkkD,KAGlC,IAAIoC,GAAY,SAAU/gD,EAAU2+C,GAChC,MAAwB,iBAAb3+C,EACAwyD,GAAWr4D,OAAOwB,SAASI,iBAAiBiE,GAAW2+C,GAEzD3+C,aAAoB4yD,KAClBJ,GAAW,CAACxyD,GAAW2+C,GAGvB6T,GAAWxyD,EAAU2+C,IAGpCoC,GAAUC,cAAgB,GAC1BD,GAAU2K,MAAQ,CACdmH,GAAIj5D,OAAO6G,OAAO,GAAIwgD,IACtBtkB,QAAS/iC,OAAO6G,OAAO,GAAIwgD,KAE/BF,GAAU+R,SAAYlU,IAClBmC,GAAU2K,MAAM/uB,QAAU/iC,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIsgD,GAAU2K,MAAM/uB,SAAUiiB,IAExFmC,GAAUgS,YAAepU,IACrBoC,GAAUC,cAAgBpnD,OAAO6G,OAAO7G,OAAO6G,OAAO,GAAIsgD,GAAUC,eAAgBrC,IAExFoC,GAAUtB,UAAYR,GAAiB,IACvC8B,GAAU/B,WAAaN,GAAoB,IAC3CqC,GAAUd,aAAeA,GACH,oBAAXnqB,aAA+C,IAAdA,OAAOE,KAC/CF,OAAOE,GAAG+qB,UAAY,SAAUpC,GAC5B,OAAO6T,GAAW/3D,KAAMkkD,KAGhCh3C,KAAKlJ,UAAUu0D,QAAU,SAAUzR,GAC/B,OAAO,IAAI55C,KAAKlN,KAAKm9C,cAAen9C,KAAK8jD,WAAY9jD,KAAKg9C,WAA6B,iBAAT8J,EAAoB/lD,SAAS+lD,EAAM,IAAMA,KAErG,oBAAXpnD,SACPA,OAAO4mD,UAAYA,ICn7DvBA,GAAU,cAAe,CACrBnK,WAAY,QACZI,cAAe,SAGnB+J,GAAU,cAAe,CACvB7J,YAAY,EACZmB,YAAY,EACZzB,WAAY,MACZI,cAAe,SpBXjB","file":"scripts.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  /**\r\n   * Animate\r\n   * ======================================\r\n   * - add class to element in viewport\r\n   * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n   * - set animation delay via [animate-delay] html attribute\r\n   * - set visible threshold via [animate-threshold] html attribute\r\n   */\n  var ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches;\n  var THRESHOLD = '0.75';\n  var LOAD_THRESHOLD = '0.2';\n  var ELEMENTS$1 = '.animate';\n  var VISIBLE_CLASS = 'animate--visible';\n\n  var Animate = function Animate() {\n    var _this = this;\n\n    _classCallCheck(this, Animate);\n\n    _defineProperty(this, \"observeCallback\", function (entries) {\n      entries.map(function (entry) {\n        var section = entry.target;\n\n        var delay = _this.getDelay(section);\n\n        var sectionBodyClass = section.getAttribute('animate-body-class');\n\n        if (entry.isIntersecting) {\n          if (ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n            section.classList.add(VISIBLE_CLASS);\n\n            _this.bodyClass(sectionBodyClass, 'add');\n          } else {\n            setTimeout(function () {\n              section.classList.add(VISIBLE_CLASS);\n\n              _this.bodyClass(sectionBodyClass, 'add');\n            }, delay);\n          }\n        } else {\n          _this.bodyClass(sectionBodyClass, 'remove');\n        }\n      });\n    });\n\n    _defineProperty(this, \"getDelay\", function (section) {\n      var delay = section.getAttribute('animate-delay');\n\n      if (!ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n        var delay = section.getAttribute('animate-delay-desktop');\n      }\n\n      if (delay === null) {\n        return 0;\n      } else if (delay.includes('.')) {\n        return parseInt(delay * 1000);\n      } else {\n        return parseInt(delay);\n      }\n    });\n\n    _defineProperty(this, \"bodyClass\", function (htmlclass, type) {\n      if (!htmlclass) {\n        return;\n      }\n\n      if (type == 'add') {\n        document.body.classList.add(htmlclass);\n      } else {\n        document.body.classList.remove(htmlclass);\n      }\n    });\n\n    this.sections = document.querySelectorAll(ELEMENTS$1);\n    this.THRESHOLD = THRESHOLD;\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD;\n\n    if ('IntersectionObserver' in window) {\n      this.sections.forEach(function (el) {\n        var BoundingClientRect = el.getBoundingClientRect();\n        var visibleRatio = BoundingClientRect.height / window.innerHeight;\n\n        if (visibleRatio > 0.95) {\n          _this.THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 30;\n          _this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20;\n        } // observe on page load\n\n\n        var loadObserver = new IntersectionObserver(_this.observeCallback, {\n          threshold: _this.LOAD_THRESHOLD\n        });\n        loadObserver.observe(el);\n        setTimeout(function () {\n          loadObserver.disconnect();\n        }, 100); // observe\n\n        var observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : _this.THRESHOLD;\n        var observer = new IntersectionObserver(_this.observeCallback, {\n          threshold: observerThreshold\n        });\n        observer.observe(el);\n      });\n    } else {\n      this.sections.forEach(function (el) {\n        el.classList.add(VISIBLE_CLASS);\n      });\n    }\n  };\n\n  new Animate();\n\n  /*!\n   * Splide.js\n   * Version  : 3.2.5\n   * License  : MIT\n   * Copyright: 2021 Naotoshi Fujita\n   */\n  const PROJECT_CODE = \"splide\";\n  const DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\n  const CREATED = 1;\n  const MOUNTED = 2;\n  const IDLE = 3;\n  const MOVING = 4;\n  const DESTROYED = 5;\n  const STATES = {\n    CREATED,\n    MOUNTED,\n    IDLE,\n    MOVING,\n    DESTROYED\n  };\n\n  const DEFAULT_EVENT_PRIORITY = 10;\n  const DEFAULT_USER_EVENT_PRIORITY = 20;\n\n  function empty(array) {\n    array.length = 0;\n  }\n\n  function isObject(subject) {\n    return !isNull(subject) && typeof subject === \"object\";\n  }\n  function isArray(subject) {\n    return Array.isArray(subject);\n  }\n  function isFunction(subject) {\n    return typeof subject === \"function\";\n  }\n  function isString(subject) {\n    return typeof subject === \"string\";\n  }\n  function isUndefined(subject) {\n    return typeof subject === \"undefined\";\n  }\n  function isNull(subject) {\n    return subject === null;\n  }\n  function isHTMLElement(subject) {\n    return subject instanceof HTMLElement;\n  }\n\n  function toArray(value) {\n    return isArray(value) ? value : [value];\n  }\n\n  function forEach(values, iteratee) {\n    toArray(values).forEach(iteratee);\n  }\n\n  function includes(array, value) {\n    return array.indexOf(value) > -1;\n  }\n\n  function push(array, items) {\n    array.push(...toArray(items));\n    return array;\n  }\n\n  const arrayProto = Array.prototype;\n\n  function slice(arrayLike, start, end) {\n    return arrayProto.slice.call(arrayLike, start, end);\n  }\n\n  function find(arrayLike, predicate) {\n    return slice(arrayLike).filter(predicate)[0];\n  }\n\n  function toggleClass$1(elm, classes, add) {\n    if (elm) {\n      forEach(classes, (name) => {\n        if (name) {\n          elm.classList[add ? \"add\" : \"remove\"](name);\n        }\n      });\n    }\n  }\n\n  function addClass(elm, classes) {\n    toggleClass$1(elm, isString(classes) ? classes.split(\" \") : classes, true);\n  }\n\n  function append(parent, children) {\n    forEach(children, parent.appendChild.bind(parent));\n  }\n\n  function before(nodes, ref) {\n    forEach(nodes, (node) => {\n      const parent = ref.parentNode;\n      if (parent) {\n        parent.insertBefore(node, ref);\n      }\n    });\n  }\n\n  function matches(elm, selector) {\n    return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n  }\n\n  function children(parent, selector) {\n    return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n  }\n\n  function child(parent, selector) {\n    return selector ? children(parent, selector)[0] : parent.firstElementChild;\n  }\n\n  function forOwn(object, iteratee, right) {\n    if (object) {\n      let keys = Object.keys(object);\n      keys = right ? keys.reverse() : keys;\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \"__proto__\") {\n          if (iteratee(object[key], key) === false) {\n            break;\n          }\n        }\n      }\n    }\n    return object;\n  }\n\n  function assign(object) {\n    slice(arguments, 1).forEach((source) => {\n      forOwn(source, (value, key) => {\n        object[key] = source[key];\n      });\n    });\n    return object;\n  }\n\n  function merge(object, source) {\n    forOwn(source, (value, key) => {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n    return object;\n  }\n\n  function removeAttribute(elm, attrs) {\n    if (elm) {\n      forEach(attrs, (attr) => {\n        elm.removeAttribute(attr);\n      });\n    }\n  }\n\n  function setAttribute(elm, attrs, value) {\n    if (isObject(attrs)) {\n      forOwn(attrs, (value2, name) => {\n        setAttribute(elm, name, value2);\n      });\n    } else {\n      isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    }\n  }\n\n  function create(tag, attrs, parent) {\n    const elm = document.createElement(tag);\n    if (attrs) {\n      isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n    }\n    parent && append(parent, elm);\n    return elm;\n  }\n\n  function style(elm, prop, value) {\n    if (isUndefined(value)) {\n      return getComputedStyle(elm)[prop];\n    }\n    if (!isNull(value)) {\n      const { style: style2 } = elm;\n      value = `${value}`;\n      if (style2[prop] !== value) {\n        style2[prop] = value;\n      }\n    }\n  }\n\n  function display(elm, display2) {\n    style(elm, \"display\", display2);\n  }\n\n  function focus(elm) {\n    elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n  }\n\n  function getAttribute(elm, attr) {\n    return elm.getAttribute(attr);\n  }\n\n  function hasClass(elm, className) {\n    return elm && elm.classList.contains(className);\n  }\n\n  function rect(target) {\n    return target.getBoundingClientRect();\n  }\n\n  function remove(nodes) {\n    forEach(nodes, (node) => {\n      if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n  }\n\n  function measure(parent, value) {\n    if (isString(value)) {\n      const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n      value = rect(div).width;\n      remove(div);\n    }\n    return value;\n  }\n\n  function parseHtml(html) {\n    return child(new DOMParser().parseFromString(html, \"text/html\").body);\n  }\n\n  function prevent(e, stopPropagation) {\n    e.preventDefault();\n    if (stopPropagation) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function query(parent, selector) {\n    return parent && parent.querySelector(selector);\n  }\n\n  function queryAll(parent, selector) {\n    return slice(parent.querySelectorAll(selector));\n  }\n\n  function removeClass(elm, classes) {\n    toggleClass$1(elm, classes, false);\n  }\n\n  function unit(value) {\n    return isString(value) ? value : value ? `${value}px` : \"\";\n  }\n\n  function assert(condition, message = \"\") {\n    if (!condition) {\n      throw new Error(`[${PROJECT_CODE}] ${message}`);\n    }\n  }\n\n  function nextTick(callback) {\n    setTimeout(callback);\n  }\n\n  const noop = () => {\n  };\n\n  function raf(func) {\n    return requestAnimationFrame(func);\n  }\n\n  const { min, max, floor, ceil, abs } = Math;\n\n  function approximatelyEqual(x, y, epsilon) {\n    return abs(x - y) < epsilon;\n  }\n\n  function between(number, minOrMax, maxOrMin, exclusive) {\n    const minimum = min(minOrMax, maxOrMin);\n    const maximum = max(minOrMax, maxOrMin);\n    return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n  }\n\n  function clamp(number, x, y) {\n    const minimum = min(x, y);\n    const maximum = max(x, y);\n    return min(max(minimum, number), maximum);\n  }\n\n  function sign(x) {\n    return +(x > 0) - +(x < 0);\n  }\n\n  function format(string, replacements) {\n    forEach(replacements, (replacement) => {\n      string = string.replace(\"%s\", `${replacement}`);\n    });\n    return string;\n  }\n\n  function pad$1(number) {\n    return number < 10 ? `0${number}` : `${number}`;\n  }\n\n  const ids = {};\n  function uniqueId(prefix) {\n    return `${prefix}${pad$1(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n  }\n\n  function EventBus() {\n    let handlers = {};\n    function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n      forEachEvent(events, (event, namespace) => {\n        handlers[event] = handlers[event] || [];\n        push(handlers[event], {\n          _event: event,\n          _callback: callback,\n          _namespace: namespace,\n          _priority: priority,\n          _key: key\n        }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n      });\n    }\n    function off(events, key) {\n      forEachEvent(events, (event, namespace) => {\n        const eventHandlers = handlers[event];\n        handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n          return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n        });\n      });\n    }\n    function offBy(key) {\n      forOwn(handlers, (eventHandlers, event) => {\n        off(event, key);\n      });\n    }\n    function emit(event) {\n      (handlers[event] || []).forEach((handler) => {\n        handler._callback.apply(handler, slice(arguments, 1));\n      });\n    }\n    function destroy() {\n      handlers = {};\n    }\n    function forEachEvent(events, iteratee) {\n      toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n        const fragments = eventNS.split(\".\");\n        iteratee(fragments[0], fragments[1]);\n      });\n    }\n    return {\n      on,\n      off,\n      offBy,\n      emit,\n      destroy\n    };\n  }\n\n  const EVENT_MOUNTED = \"mounted\";\n  const EVENT_READY = \"ready\";\n  const EVENT_MOVE = \"move\";\n  const EVENT_MOVED = \"moved\";\n  const EVENT_CLICK = \"click\";\n  const EVENT_ACTIVE = \"active\";\n  const EVENT_INACTIVE = \"inactive\";\n  const EVENT_VISIBLE = \"visible\";\n  const EVENT_HIDDEN = \"hidden\";\n  const EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\n  const EVENT_REFRESH = \"refresh\";\n  const EVENT_UPDATED = \"updated\";\n  const EVENT_RESIZE = \"resize\";\n  const EVENT_RESIZED = \"resized\";\n  const EVENT_REPOSITIONED = \"repositioned\";\n  const EVENT_DRAG = \"drag\";\n  const EVENT_DRAGGING = \"dragging\";\n  const EVENT_DRAGGED = \"dragged\";\n  const EVENT_SCROLL = \"scroll\";\n  const EVENT_SCROLLED = \"scrolled\";\n  const EVENT_DESTROY = \"destroy\";\n  const EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\n  const EVENT_ARROWS_UPDATED = \"arrows:updated\";\n  const EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\n  const EVENT_PAGINATION_UPDATED = \"pagination:updated\";\n  const EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\n  const EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\n  const EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\n  const EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\n  const EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\n  function EventInterface(Splide2) {\n    const { event } = Splide2;\n    const key = {};\n    let listeners = [];\n    function on(events, callback, priority) {\n      event.on(events, callback, key, priority);\n    }\n    function off(events) {\n      event.off(events, key);\n    }\n    function bind(targets, events, callback, options) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners.push([target, event2, callback, options]);\n        target.addEventListener(event2, callback, options);\n      });\n    }\n    function unbind(targets, events, callback) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners = listeners.filter((listener) => {\n          if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n            target.removeEventListener(event2, listener[2], listener[3]);\n            return false;\n          }\n          return true;\n        });\n      });\n    }\n    function forEachEvent(targets, events, iteratee) {\n      forEach(targets, (target) => {\n        if (target) {\n          events.split(\" \").forEach(iteratee.bind(null, target));\n        }\n      });\n    }\n    function destroy() {\n      listeners = listeners.filter((data) => unbind(data[0], data[1]));\n      event.offBy(key);\n    }\n    event.on(EVENT_DESTROY, destroy, key);\n    return {\n      on,\n      off,\n      emit: event.emit,\n      bind,\n      unbind,\n      destroy\n    };\n  }\n\n  function RequestInterval(interval, onInterval, onUpdate, limit) {\n    const { now } = Date;\n    let startTime;\n    let rate = 0;\n    let id;\n    let paused = true;\n    let count = 0;\n    function update() {\n      if (!paused) {\n        const elapsed = now() - startTime;\n        if (elapsed >= interval) {\n          rate = 1;\n          startTime = now();\n        } else {\n          rate = elapsed / interval;\n        }\n        if (onUpdate) {\n          onUpdate(rate);\n        }\n        if (rate === 1) {\n          onInterval();\n          if (limit && ++count >= limit) {\n            return pause();\n          }\n        }\n        raf(update);\n      }\n    }\n    function start(resume) {\n      !resume && cancel();\n      startTime = now() - (resume ? rate * interval : 0);\n      paused = false;\n      raf(update);\n    }\n    function pause() {\n      paused = true;\n    }\n    function rewind() {\n      startTime = now();\n      rate = 0;\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n    }\n    function cancel() {\n      cancelAnimationFrame(id);\n      rate = 0;\n      id = 0;\n      paused = true;\n    }\n    function isPaused() {\n      return paused;\n    }\n    return {\n      start,\n      rewind,\n      pause,\n      cancel,\n      isPaused\n    };\n  }\n\n  function State(initialState) {\n    let state = initialState;\n    function set(value) {\n      state = value;\n    }\n    function is(states) {\n      return includes(toArray(states), state);\n    }\n    return { set, is };\n  }\n\n  function Throttle(func, duration) {\n    let interval;\n    function throttled() {\n      if (!interval) {\n        interval = RequestInterval(duration || 0, () => {\n          func.apply(this, arguments);\n          interval = null;\n        }, null, 1);\n        interval.start();\n      }\n    }\n    return throttled;\n  }\n\n  function Options(Splide2, Components2, options) {\n    const throttledObserve = Throttle(observe);\n    let initialOptions;\n    let points;\n    let currPoint;\n    function setup() {\n      try {\n        merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n      } catch (e) {\n        assert(false, e.message);\n      }\n      initialOptions = merge({}, options);\n      const { breakpoints } = options;\n      if (breakpoints) {\n        const isMin = options.mediaQuery === \"min\";\n        points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n          point,\n          matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n        ]);\n        observe();\n      }\n    }\n    function mount() {\n      if (points) {\n        addEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function destroy(completely) {\n      if (completely) {\n        removeEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function observe() {\n      const item = find(points, (item2) => item2[1].matches) || [];\n      if (item[0] !== currPoint) {\n        onMatch(currPoint = item[0]);\n      }\n    }\n    function onMatch(point) {\n      const newOptions = options.breakpoints[point] || initialOptions;\n      if (newOptions.destroy) {\n        Splide2.options = initialOptions;\n        Splide2.destroy(newOptions.destroy === \"completely\");\n      } else {\n        if (Splide2.state.is(DESTROYED)) {\n          destroy(true);\n          Splide2.mount();\n        }\n        Splide2.options = newOptions;\n      }\n    }\n    return {\n      setup,\n      mount,\n      destroy\n    };\n  }\n\n  const RTL = \"rtl\";\n  const TTB = \"ttb\";\n\n  const ORIENTATION_MAP = {\n    marginRight: [\"marginBottom\", \"marginLeft\"],\n    autoWidth: [\"autoHeight\"],\n    fixedWidth: [\"fixedHeight\"],\n    paddingLeft: [\"paddingTop\", \"paddingRight\"],\n    paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n    width: [\"height\"],\n    left: [\"top\", \"right\"],\n    right: [\"bottom\", \"left\"],\n    x: [\"y\"],\n    X: [\"Y\"],\n    Y: [\"X\"],\n    ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n    ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n  };\n  function Direction(Splide2, Components2, options) {\n    function resolve(prop, axisOnly) {\n      const { direction } = options;\n      const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n      return ORIENTATION_MAP[prop][index] || prop;\n    }\n    function orient(value) {\n      return value * (options.direction === RTL ? 1 : -1);\n    }\n    return {\n      resolve,\n      orient\n    };\n  }\n\n  const CLASS_ROOT = PROJECT_CODE;\n  const CLASS_SLIDER = `${PROJECT_CODE}__slider`;\n  const CLASS_TRACK = `${PROJECT_CODE}__track`;\n  const CLASS_LIST = `${PROJECT_CODE}__list`;\n  const CLASS_SLIDE = `${PROJECT_CODE}__slide`;\n  const CLASS_CLONE = `${CLASS_SLIDE}--clone`;\n  const CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\n  const CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\n  const CLASS_ARROW = `${PROJECT_CODE}__arrow`;\n  const CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\n  const CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\n  const CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\n  const CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\n  const CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\n  const CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\n  const CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\n  const CLASS_PLAY = `${PROJECT_CODE}__play`;\n  const CLASS_PAUSE = `${PROJECT_CODE}__pause`;\n  const CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\n  const CLASS_INITIALIZED = \"is-initialized\";\n  const CLASS_ACTIVE = \"is-active\";\n  const CLASS_PREV = \"is-prev\";\n  const CLASS_NEXT = \"is-next\";\n  const CLASS_VISIBLE = \"is-visible\";\n  const CLASS_LOADING = \"is-loading\";\n  const STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\n  const CLASSES = {\n    slide: CLASS_SLIDE,\n    clone: CLASS_CLONE,\n    arrows: CLASS_ARROWS,\n    arrow: CLASS_ARROW,\n    prev: CLASS_ARROW_PREV,\n    next: CLASS_ARROW_NEXT,\n    pagination: CLASS_PAGINATION,\n    page: CLASS_PAGINATION_PAGE,\n    spinner: CLASS_SPINNER\n  };\n\n  function Elements(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { root } = Splide2;\n    const elements = {};\n    const slides = [];\n    let classes;\n    let slider;\n    let track;\n    let list;\n    function setup() {\n      collect();\n      identify();\n      addClass(root, classes = getClasses());\n    }\n    function mount() {\n      on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n      on(EVENT_UPDATED, update);\n    }\n    function destroy() {\n      [root, track, list].forEach((elm) => {\n        removeAttribute(elm, \"style\");\n      });\n      empty(slides);\n      removeClass(root, classes);\n    }\n    function refresh() {\n      destroy();\n      setup();\n    }\n    function update() {\n      removeClass(root, classes);\n      addClass(root, classes = getClasses());\n    }\n    function collect() {\n      slider = child(root, `.${CLASS_SLIDER}`);\n      track = query(root, `.${CLASS_TRACK}`);\n      list = child(track, `.${CLASS_LIST}`);\n      assert(track && list, \"A track/list element is missing.\");\n      push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n      const autoplay = find(`.${CLASS_AUTOPLAY}`);\n      const arrows = find(`.${CLASS_ARROWS}`);\n      assign(elements, {\n        root,\n        slider,\n        track,\n        list,\n        slides,\n        arrows,\n        autoplay,\n        prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n        next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n        bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n        play: query(autoplay, `.${CLASS_PLAY}`),\n        pause: query(autoplay, `.${CLASS_PAUSE}`)\n      });\n    }\n    function identify() {\n      const id = root.id || uniqueId(PROJECT_CODE);\n      root.id = id;\n      track.id = track.id || `${id}-track`;\n      list.id = list.id || `${id}-list`;\n    }\n    function find(selector) {\n      return child(root, selector) || child(slider, selector);\n    }\n    function getClasses() {\n      return [\n        `${CLASS_ROOT}--${options.type}`,\n        `${CLASS_ROOT}--${options.direction}`,\n        options.drag && `${CLASS_ROOT}--draggable`,\n        options.isNavigation && `${CLASS_ROOT}--nav`,\n        CLASS_ACTIVE\n      ];\n    }\n    return assign(elements, {\n      setup,\n      mount,\n      destroy\n    });\n  }\n\n  const ROLE = \"role\";\n  const ARIA_CONTROLS = \"aria-controls\";\n  const ARIA_CURRENT = \"aria-current\";\n  const ARIA_LABEL = \"aria-label\";\n  const ARIA_HIDDEN = \"aria-hidden\";\n  const TAB_INDEX = \"tabindex\";\n  const DISABLED = \"disabled\";\n  const ARIA_ORIENTATION = \"aria-orientation\";\n  const ALL_ATTRIBUTES = [\n    ROLE,\n    ARIA_CONTROLS,\n    ARIA_CURRENT,\n    ARIA_LABEL,\n    ARIA_HIDDEN,\n    ARIA_ORIENTATION,\n    TAB_INDEX,\n    DISABLED\n  ];\n\n  const SLIDE = \"slide\";\n  const LOOP = \"loop\";\n  const FADE = \"fade\";\n\n  function Slide$1(Splide2, index, slideIndex, slide) {\n    const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n    const { Components, root, options } = Splide2;\n    const { isNavigation, updateOnMove } = options;\n    const { resolve } = Components.Direction;\n    const styles = getAttribute(slide, \"style\");\n    const isClone = slideIndex > -1;\n    const container = child(slide, `.${CLASS_CONTAINER}`);\n    const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n    let destroyed;\n    function mount() {\n      init();\n      bind(slide, \"click keydown\", (e) => {\n        emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n      });\n      on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n      if (updateOnMove) {\n        on(EVENT_MOVE, onMove.bind(this));\n      }\n    }\n    function init() {\n      if (!isClone) {\n        slide.id = `${root.id}-slide${pad$1(index + 1)}`;\n      }\n      if (isNavigation) {\n        const idx = isClone ? slideIndex : index;\n        const label = format(options.i18n.slideX, idx + 1);\n        const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n        setAttribute(slide, ARIA_LABEL, label);\n        setAttribute(slide, ARIA_CONTROLS, controls);\n        setAttribute(slide, ROLE, \"menuitem\");\n      }\n    }\n    function destroy() {\n      destroyed = true;\n      destroyEvents();\n      removeClass(slide, STATUS_CLASSES);\n      removeAttribute(slide, ALL_ATTRIBUTES);\n      setAttribute(slide, \"style\", styles);\n    }\n    function onMove(next, prev, dest) {\n      if (!destroyed) {\n        update.call(this);\n        if (dest === index) {\n          updateActivity.call(this, true);\n        }\n      }\n    }\n    function update() {\n      if (!destroyed) {\n        const { index: currIndex } = Splide2;\n        updateActivity.call(this, isActive());\n        updateVisibility.call(this, isVisible());\n        toggleClass$1(slide, CLASS_PREV, index === currIndex - 1);\n        toggleClass$1(slide, CLASS_NEXT, index === currIndex + 1);\n      }\n    }\n    function updateActivity(active) {\n      if (active !== hasClass(slide, CLASS_ACTIVE)) {\n        toggleClass$1(slide, CLASS_ACTIVE, active);\n        if (isNavigation) {\n          setAttribute(slide, ARIA_CURRENT, active || null);\n        }\n        emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n      }\n    }\n    function updateVisibility(visible) {\n      const ariaHidden = !visible && !isActive();\n      setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n      setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n      if (focusableNodes) {\n        focusableNodes.forEach((node) => {\n          setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n        });\n      }\n      if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n        toggleClass$1(slide, CLASS_VISIBLE, visible);\n        emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n      }\n    }\n    function style$1(prop, value, useContainer) {\n      style(useContainer && container || slide, prop, value);\n    }\n    function isActive() {\n      return Splide2.index === index;\n    }\n    function isVisible() {\n      if (Splide2.is(FADE)) {\n        return isActive();\n      }\n      const trackRect = rect(Components.Elements.track);\n      const slideRect = rect(slide);\n      const left = resolve(\"left\");\n      const right = resolve(\"right\");\n      return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n    }\n    function isWithin(from, distance) {\n      let diff = abs(from - index);\n      if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n        diff = min(diff, Splide2.length - diff);\n      }\n      return diff <= distance;\n    }\n    return {\n      index,\n      slideIndex,\n      slide,\n      container,\n      isClone,\n      mount,\n      destroy,\n      style: style$1,\n      isWithin\n    };\n  }\n\n  function Slides(Splide2, Components2, options) {\n    const { on, emit, bind } = EventInterface(Splide2);\n    const { slides, list } = Components2.Elements;\n    const Slides2 = [];\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n      });\n    }\n    function init() {\n      slides.forEach((slide, index) => {\n        register(slide, index, -1);\n      });\n    }\n    function destroy() {\n      forEach$1((Slide2) => {\n        Slide2.destroy();\n      });\n      empty(Slides2);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function register(slide, index, slideIndex) {\n      const object = Slide$1(Splide2, index, slideIndex, slide);\n      object.mount();\n      Slides2.push(object);\n    }\n    function get(excludeClones) {\n      return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n    }\n    function getIn(page) {\n      const { Controller } = Components2;\n      const index = Controller.toIndex(page);\n      const max = Controller.hasFocus() ? 1 : options.perPage;\n      return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n    }\n    function getAt(index) {\n      return filter(index)[0];\n    }\n    function add(items, index) {\n      forEach(items, (slide) => {\n        if (isString(slide)) {\n          slide = parseHtml(slide);\n        }\n        if (isHTMLElement(slide)) {\n          const ref = slides[index];\n          ref ? before(slide, ref) : append(list, slide);\n          addClass(slide, options.classes.slide);\n          observeImages(slide, emit.bind(null, EVENT_RESIZE));\n        }\n      });\n      emit(EVENT_REFRESH);\n    }\n    function remove$1(matcher) {\n      remove(filter(matcher).map((Slide2) => Slide2.slide));\n      emit(EVENT_REFRESH);\n    }\n    function forEach$1(iteratee, excludeClones) {\n      get(excludeClones).forEach(iteratee);\n    }\n    function filter(matcher) {\n      return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n    }\n    function style(prop, value, useContainer) {\n      forEach$1((Slide2) => {\n        Slide2.style(prop, value, useContainer);\n      });\n    }\n    function observeImages(elm, callback) {\n      const images = queryAll(elm, \"img\");\n      let { length } = images;\n      if (length) {\n        images.forEach((img) => {\n          bind(img, \"load error\", () => {\n            if (!--length) {\n              callback();\n            }\n          });\n        });\n      } else {\n        callback();\n      }\n    }\n    function getLength(excludeClones) {\n      return excludeClones ? slides.length : Slides2.length;\n    }\n    function isEnough() {\n      return Slides2.length > options.perPage;\n    }\n    return {\n      mount,\n      destroy,\n      register,\n      get,\n      getIn,\n      getAt,\n      add,\n      remove: remove$1,\n      forEach: forEach$1,\n      filter,\n      style,\n      getLength,\n      isEnough\n    };\n  }\n\n  function Layout(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const { root, track, list } = Components2.Elements;\n    const { getAt } = Slides;\n    let vertical;\n    let rootRect;\n    function mount() {\n      init();\n      bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on(EVENT_RESIZE, resize);\n    }\n    function init() {\n      rootRect = null;\n      vertical = options.direction === TTB;\n      style(root, \"maxWidth\", unit(options.width));\n      style(track, resolve(\"paddingLeft\"), cssPadding(false));\n      style(track, resolve(\"paddingRight\"), cssPadding(true));\n      resize();\n    }\n    function resize() {\n      const newRect = rect(root);\n      if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n        style(track, \"height\", cssTrackHeight());\n        Slides.style(resolve(\"marginRight\"), unit(options.gap));\n        Slides.style(\"width\", cssSlideWidth() || null);\n        setSlidesHeight();\n        rootRect = newRect;\n        emit(EVENT_RESIZED);\n      }\n    }\n    function setSlidesHeight() {\n      Slides.style(\"height\", cssSlideHeight() || null, true);\n    }\n    function cssPadding(right) {\n      const { padding } = options;\n      const prop = resolve(right ? \"right\" : \"left\");\n      return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n    }\n    function cssTrackHeight() {\n      let height = \"\";\n      if (vertical) {\n        height = cssHeight();\n        assert(height, \"height or heightRatio is missing.\");\n        height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n      }\n      return height;\n    }\n    function cssHeight() {\n      return unit(options.height || rect(list).width * options.heightRatio);\n    }\n    function cssSlideWidth() {\n      return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n    }\n    function cssSlideHeight() {\n      return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n    }\n    function cssSlideSize() {\n      const gap = unit(options.gap);\n      return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n    }\n    function listSize() {\n      return rect(list)[resolve(\"width\")];\n    }\n    function slideSize(index, withoutGap) {\n      const Slide = getAt(index || 0);\n      return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n    }\n    function totalSize(index, withoutGap) {\n      const Slide = getAt(index);\n      if (Slide) {\n        const right = rect(Slide.slide)[resolve(\"right\")];\n        const left = rect(list)[resolve(\"left\")];\n        return abs(right - left) + (withoutGap ? 0 : getGap());\n      }\n      return 0;\n    }\n    function sliderSize() {\n      return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n    }\n    function getGap() {\n      const Slide = getAt(0);\n      return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n    }\n    function getPadding(right) {\n      return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n    }\n    return {\n      mount,\n      listSize,\n      slideSize,\n      sliderSize,\n      totalSize,\n      getPadding\n    };\n  }\n\n  function Clones(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Elements, Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const clones = [];\n    let cloneCount;\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_UPDATED, EVENT_RESIZE], observe);\n    }\n    function init() {\n      if (cloneCount = computeCloneCount()) {\n        generate(cloneCount);\n        emit(EVENT_RESIZE);\n      }\n    }\n    function destroy() {\n      remove(clones);\n      empty(clones);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function observe() {\n      if (cloneCount < computeCloneCount()) {\n        emit(EVENT_REFRESH);\n      }\n    }\n    function generate(count) {\n      const slides = Slides.get().slice();\n      const { length } = slides;\n      if (length) {\n        while (slides.length < count) {\n          push(slides, slides);\n        }\n        push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n          const isHead = index < count;\n          const clone = cloneDeep(Slide.slide, index);\n          isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n          push(clones, clone);\n          Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n        });\n      }\n    }\n    function cloneDeep(elm, index) {\n      const clone = elm.cloneNode(true);\n      addClass(clone, options.classes.clone);\n      clone.id = `${Splide2.root.id}-clone${pad$1(index + 1)}`;\n      return clone;\n    }\n    function computeCloneCount() {\n      let { clones: clones2 } = options;\n      if (!Splide2.is(LOOP)) {\n        clones2 = 0;\n      } else if (!clones2) {\n        const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n        const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n        const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n        clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n      }\n      return clones2;\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Move(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n    const { resolve, orient } = Components2.Direction;\n    const { list, track } = Components2.Elements;\n    let waiting;\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n    }\n    function destroy() {\n      removeAttribute(list, \"style\");\n    }\n    function reposition() {\n      if (!isBusy()) {\n        Components2.Scroll.cancel();\n        jump(Splide2.index);\n        emit(EVENT_REPOSITIONED);\n      }\n    }\n    function move(dest, index, prev, callback) {\n      if (!isBusy()) {\n        const { set } = Splide2.state;\n        const position = getPosition();\n        const looping = dest !== index;\n        waiting = looping || options.waitForTransition;\n        set(MOVING);\n        emit(EVENT_MOVE, index, prev, dest);\n        Components2.Transition.start(dest, () => {\n          looping && jump(index);\n          waiting = false;\n          set(IDLE);\n          emit(EVENT_MOVED, index, prev, dest);\n          if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n            Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n          } else {\n            callback && callback();\n          }\n        });\n      }\n    }\n    function jump(index) {\n      translate(toPosition(index, true));\n    }\n    function translate(position, preventLoop) {\n      if (!Splide2.is(FADE)) {\n        list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n      }\n    }\n    function loop(position) {\n      if (!waiting && Splide2.is(LOOP)) {\n        const diff = orient(position - getPosition());\n        const exceededMin = exceededLimit(false, position) && diff < 0;\n        const exceededMax = exceededLimit(true, position) && diff > 0;\n        if (exceededMin || exceededMax) {\n          position = shift(position, exceededMax);\n        }\n      }\n      return position;\n    }\n    function shift(position, backwards) {\n      const excess = position - getLimit(backwards);\n      const size = sliderSize();\n      position -= sign(excess) * size * ceil(abs(excess) / size);\n      return position;\n    }\n    function cancel() {\n      waiting = false;\n      translate(getPosition());\n      Components2.Transition.cancel();\n    }\n    function toIndex(position) {\n      const Slides = Components2.Slides.get();\n      let index = 0;\n      let minDistance = Infinity;\n      for (let i = 0; i < Slides.length; i++) {\n        const slideIndex = Slides[i].index;\n        const distance = abs(toPosition(slideIndex, true) - position);\n        if (distance <= minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        } else {\n          break;\n        }\n      }\n      return index;\n    }\n    function toPosition(index, trimming) {\n      const position = orient(totalSize(index - 1) - offset(index));\n      return trimming ? trim(position) : position;\n    }\n    function getPosition() {\n      const left = resolve(\"left\");\n      return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n    }\n    function trim(position) {\n      if (options.trimSpace && Splide2.is(SLIDE)) {\n        position = clamp(position, 0, orient(sliderSize() - listSize()));\n      }\n      return position;\n    }\n    function offset(index) {\n      const { focus } = options;\n      return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n    }\n    function getLimit(max) {\n      return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n    }\n    function isBusy() {\n      return !!waiting;\n    }\n    function exceededLimit(max, position) {\n      position = isUndefined(position) ? getPosition() : position;\n      const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n      const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n      return exceededMin || exceededMax;\n    }\n    return {\n      mount,\n      destroy,\n      move,\n      jump,\n      translate,\n      shift,\n      cancel,\n      toIndex,\n      toPosition,\n      getPosition,\n      getLimit,\n      isBusy,\n      exceededLimit\n    };\n  }\n\n  function Controller(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit } = Move;\n    const { isEnough, getLength } = Components2.Slides;\n    const isLoop = Splide2.is(LOOP);\n    const isSlide = Splide2.is(SLIDE);\n    let currIndex = options.start || 0;\n    let prevIndex = currIndex;\n    let slideCount;\n    let perMove;\n    let perPage;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n    }\n    function init() {\n      slideCount = getLength(true);\n      perMove = options.perMove;\n      perPage = options.perPage;\n      currIndex = clamp(currIndex, 0, slideCount - 1);\n    }\n    function go(control, allowSameIndex, callback) {\n      const dest = parse(control);\n      if (options.useScroll) {\n        scroll(dest, true, true, options.speed, callback);\n      } else {\n        const index = loop(dest);\n        if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n          setIndex(index);\n          Move.move(dest, index, prevIndex, callback);\n        }\n      }\n    }\n    function scroll(destination, useIndex, snap, duration, callback) {\n      const dest = useIndex ? destination : toDest(destination);\n      Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n        setIndex(Move.toIndex(Move.getPosition()));\n        callback && callback();\n      });\n    }\n    function parse(control) {\n      let index = currIndex;\n      if (isString(control)) {\n        const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n        if (indicator === \"+\" || indicator === \"-\") {\n          index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n        } else if (indicator === \">\") {\n          index = number ? toIndex(+number) : getNext(true);\n        } else if (indicator === \"<\") {\n          index = getPrev(true);\n        }\n      } else {\n        if (isLoop) {\n          index = clamp(control, -perPage, slideCount + perPage - 1);\n        } else {\n          index = clamp(control, 0, getEnd());\n        }\n      }\n      return index;\n    }\n    function getNext(destination) {\n      return getAdjacent(false, destination);\n    }\n    function getPrev(destination) {\n      return getAdjacent(true, destination);\n    }\n    function getAdjacent(prev, destination) {\n      const number = perMove || (hasFocus() ? 1 : perPage);\n      const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n      if (dest === -1 && isSlide) {\n        if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n          return prev ? 0 : getEnd();\n        }\n      }\n      return destination ? dest : loop(dest);\n    }\n    function computeDestIndex(dest, from, incremental) {\n      if (isEnough()) {\n        const end = getEnd();\n        if (dest < 0 || dest > end) {\n          if (between(0, dest, from, true) || between(end, from, dest, true)) {\n            dest = toIndex(toPage(dest));\n          } else {\n            if (isLoop) {\n              dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n            } else if (options.rewind) {\n              dest = dest < 0 ? end : 0;\n            } else {\n              dest = -1;\n            }\n          }\n        } else {\n          if (!incremental && dest !== from) {\n            dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n          }\n        }\n      } else {\n        dest = -1;\n      }\n      return dest;\n    }\n    function getEnd() {\n      let end = slideCount - perPage;\n      if (hasFocus() || isLoop && perMove) {\n        end = slideCount - 1;\n      }\n      return max(end, 0);\n    }\n    function loop(index) {\n      if (isLoop) {\n        return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n      }\n      return index;\n    }\n    function toIndex(page) {\n      return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n    }\n    function toPage(index) {\n      if (!hasFocus()) {\n        index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n        index = floor(index / perPage);\n      }\n      return index;\n    }\n    function toDest(destination) {\n      const closest = Move.toIndex(destination);\n      return isSlide ? clamp(closest, 0, getEnd()) : closest;\n    }\n    function setIndex(index) {\n      if (index !== currIndex) {\n        prevIndex = currIndex;\n        currIndex = index;\n      }\n    }\n    function getIndex(prev) {\n      return prev ? prevIndex : currIndex;\n    }\n    function hasFocus() {\n      return !isUndefined(options.focus) || options.isNavigation;\n    }\n    return {\n      mount,\n      go,\n      scroll,\n      getNext,\n      getPrev,\n      getEnd,\n      setIndex,\n      getIndex,\n      toIndex,\n      toPage,\n      toDest,\n      hasFocus\n    };\n  }\n\n  const XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\n  const PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\n  const SIZE = 40;\n\n  function Arrows(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { classes, i18n } = options;\n    const { Elements, Controller } = Components2;\n    let wrapper = Elements.arrows;\n    let prev = Elements.prev;\n    let next = Elements.next;\n    let created;\n    const arrows = {};\n    function mount() {\n      init();\n      on(EVENT_UPDATED, init);\n    }\n    function init() {\n      if (options.arrows) {\n        if (!prev || !next) {\n          createArrows();\n        }\n      }\n      if (prev && next) {\n        if (!arrows.prev) {\n          const { id } = Elements.track;\n          setAttribute(prev, ARIA_CONTROLS, id);\n          setAttribute(next, ARIA_CONTROLS, id);\n          arrows.prev = prev;\n          arrows.next = next;\n          listen();\n          emit(EVENT_ARROWS_MOUNTED, prev, next);\n        } else {\n          display(wrapper, options.arrows === false ? \"none\" : \"\");\n        }\n      }\n    }\n    function destroy() {\n      if (created) {\n        remove(wrapper);\n      } else {\n        removeAttribute(prev, ALL_ATTRIBUTES);\n        removeAttribute(next, ALL_ATTRIBUTES);\n      }\n    }\n    function listen() {\n      const { go } = Controller;\n      on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n      bind(next, \"click\", () => {\n        go(\">\", true);\n      });\n      bind(prev, \"click\", () => {\n        go(\"<\", true);\n      });\n    }\n    function createArrows() {\n      wrapper = create(\"div\", classes.arrows);\n      prev = createArrow(true);\n      next = createArrow(false);\n      created = true;\n      append(wrapper, [prev, next]);\n      before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n    }\n    function createArrow(prev2) {\n      const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n      return parseHtml(arrow);\n    }\n    function update() {\n      const index = Splide2.index;\n      const prevIndex = Controller.getPrev();\n      const nextIndex = Controller.getNext();\n      const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n      prev.disabled = prevIndex < 0;\n      next.disabled = nextIndex < 0;\n      setAttribute(prev, ARIA_LABEL, prevLabel);\n      setAttribute(next, ARIA_LABEL, nextLabel);\n      emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n    }\n    return {\n      arrows,\n      mount,\n      destroy\n    };\n  }\n\n  function Autoplay(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Elements } = Components2;\n    const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n    const { isPaused } = interval;\n    let hovered;\n    let focused;\n    let paused;\n    function mount() {\n      const { autoplay } = options;\n      if (autoplay) {\n        initButton(true);\n        initButton(false);\n        listen();\n        if (autoplay !== \"pause\") {\n          play();\n        }\n      }\n    }\n    function initButton(forPause) {\n      const prop = forPause ? \"pause\" : \"play\";\n      const button = Elements[prop];\n      if (button) {\n        setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n        setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n        bind(button, \"click\", forPause ? pause : play);\n      }\n    }\n    function listen() {\n      const { root } = Elements;\n      if (options.pauseOnHover) {\n        bind(root, \"mouseenter mouseleave\", (e) => {\n          hovered = e.type === \"mouseenter\";\n          autoToggle();\n        });\n      }\n      if (options.pauseOnFocus) {\n        bind(root, \"focusin focusout\", (e) => {\n          focused = e.type === \"focusin\";\n          autoToggle();\n        });\n      }\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    }\n    function play() {\n      if (isPaused() && Components2.Slides.isEnough()) {\n        interval.start(!options.resetProgress);\n        focused = hovered = paused = false;\n        emit(EVENT_AUTOPLAY_PLAY);\n      }\n    }\n    function pause(manual = true) {\n      if (!isPaused()) {\n        interval.pause();\n        emit(EVENT_AUTOPLAY_PAUSE);\n      }\n      paused = manual;\n    }\n    function autoToggle() {\n      if (!paused) {\n        if (!hovered && !focused) {\n          play();\n        } else {\n          pause(false);\n        }\n      }\n    }\n    function update(rate) {\n      const { bar } = Elements;\n      if (bar) {\n        style(bar, \"width\", `${rate * 100}%`);\n      }\n      emit(EVENT_AUTOPLAY_PLAYING, rate);\n    }\n    return {\n      mount,\n      destroy: interval.cancel,\n      play,\n      pause,\n      isPaused\n    };\n  }\n\n  function Cover(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      if (options.cover) {\n        on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n          toggle(true, img, Slide);\n        });\n        on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n      }\n    }\n    function destroy() {\n      apply(false);\n    }\n    function apply(cover) {\n      Components2.Slides.forEach((Slide) => {\n        const img = child(Slide.container || Slide.slide, \"img\");\n        if (img && img.src) {\n          toggle(cover, img, Slide);\n        }\n      });\n    }\n    function toggle(cover, img, Slide) {\n      Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n      display(img, cover ? \"none\" : \"\");\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const BOUNCE_DIFF_THRESHOLD = 10;\n  const BOUNCE_DURATION = 600;\n  const FRICTION_FACTOR = 0.6;\n  const BASE_VELOCITY = 1.5;\n  const MIN_DURATION = 800;\n\n  function Scroll(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit, exceededLimit } = Move;\n    let interval;\n    let scrollCallback;\n    function mount() {\n      on(EVENT_MOVE, clear);\n      on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n    }\n    function scroll(destination, duration, callback, suppressConstraint) {\n      const start = getPosition();\n      let friction = 1;\n      duration = duration || computeDuration(abs(destination - start));\n      scrollCallback = callback;\n      clear();\n      interval = RequestInterval(duration, onScrolled, (rate) => {\n        const position = getPosition();\n        const target = start + (destination - start) * easing(rate);\n        const diff = (target - getPosition()) * friction;\n        Move.translate(position + diff);\n        if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n          friction *= FRICTION_FACTOR;\n          if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n            bounce(exceededLimit(false));\n          }\n        }\n      }, 1);\n      emit(EVENT_SCROLL);\n      interval.start();\n    }\n    function bounce(backwards) {\n      scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n    }\n    function onScrolled() {\n      const position = getPosition();\n      const index = Move.toIndex(position);\n      if (!between(index, 0, Splide2.length - 1)) {\n        Move.translate(Move.shift(position, index > 0), true);\n      }\n      scrollCallback && scrollCallback();\n      emit(EVENT_SCROLLED);\n    }\n    function computeDuration(distance) {\n      return max(distance / BASE_VELOCITY, MIN_DURATION);\n    }\n    function clear() {\n      if (interval) {\n        interval.cancel();\n      }\n    }\n    function cancel() {\n      if (interval && !interval.isPaused()) {\n        clear();\n        onScrolled();\n      }\n    }\n    function easing(t) {\n      const { easingFunc } = options;\n      return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n    }\n    return {\n      mount,\n      destroy: clear,\n      scroll,\n      cancel\n    };\n  }\n\n  const FRICTION = 5;\n  const LOG_INTERVAL = 200;\n  const POINTER_DOWN_EVENTS = \"touchstart mousedown\";\n  const POINTER_MOVE_EVENTS = \"touchmove mousemove\";\n  const POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\n  function Drag(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Move, Scroll, Controller } = Components2;\n    const { track } = Components2.Elements;\n    const { resolve, orient } = Components2.Direction;\n    const { getPosition, exceededLimit } = Move;\n    const listenerOptions = { passive: false, capture: true };\n    let basePosition;\n    let baseEvent;\n    let prevBaseEvent;\n    let lastEvent;\n    let isFree;\n    let dragging;\n    let hasExceeded = false;\n    let clickPrevented;\n    let disabled;\n    let target;\n    function mount() {\n      bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n      bind(track, \"click\", onClick, { capture: true });\n      bind(track, \"dragstart\", prevent);\n      on([EVENT_MOUNTED, EVENT_UPDATED], init);\n    }\n    function init() {\n      const { drag } = options;\n      disable(!drag);\n      isFree = drag === \"free\";\n    }\n    function onPointerDown(e) {\n      if (!disabled) {\n        const { noDrag } = options;\n        const isTouch = isTouchEvent(e);\n        const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n        if (isDraggable && (isTouch || !e.button)) {\n          if (!Move.isBusy()) {\n            target = isTouch ? track : window;\n            prevBaseEvent = null;\n            lastEvent = null;\n            clickPrevented = false;\n            bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n            bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n            Move.cancel();\n            Scroll.cancel();\n            save(e);\n          } else {\n            prevent(e, true);\n          }\n        }\n      }\n    }\n    function onPointerMove(e) {\n      if (!lastEvent) {\n        emit(EVENT_DRAG);\n      }\n      lastEvent = e;\n      if (e.cancelable) {\n        const diff = coordOf(e) - coordOf(baseEvent);\n        if (dragging) {\n          Move.translate(basePosition + constrain(diff));\n          const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n          const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n          if (expired || exceeded) {\n            save(e);\n          }\n          emit(EVENT_DRAGGING);\n          clickPrevented = true;\n          prevent(e);\n        } else {\n          let { dragMinThreshold: thresholds } = options;\n          thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n          dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n          if (isSliderDirection()) {\n            prevent(e);\n          }\n        }\n      }\n    }\n    function onPointerUp(e) {\n      unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n      unbind(target, POINTER_UP_EVENTS, onPointerUp);\n      if (lastEvent) {\n        if (dragging || e.cancelable && isSliderDirection()) {\n          const velocity = computeVelocity(e);\n          const destination = computeDestination(velocity);\n          if (isFree) {\n            Controller.scroll(destination);\n          } else if (Splide2.is(FADE)) {\n            Controller.go(Splide2.index + orient(sign(velocity)));\n          } else {\n            Controller.go(Controller.toDest(destination), true);\n          }\n          prevent(e);\n        }\n        emit(EVENT_DRAGGED);\n      }\n      dragging = false;\n    }\n    function save(e) {\n      prevBaseEvent = baseEvent;\n      baseEvent = e;\n      basePosition = getPosition();\n    }\n    function onClick(e) {\n      if (!disabled && clickPrevented) {\n        prevent(e, true);\n      }\n    }\n    function isSliderDirection() {\n      const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n      const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n      return diffX > diffY;\n    }\n    function computeVelocity(e) {\n      if (Splide2.is(LOOP) || !hasExceeded) {\n        const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n        const diffCoord = coordOf(lastEvent) - coordOf(base);\n        const diffTime = timeOf(e) - timeOf(base);\n        const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n        if (diffTime && isFlick) {\n          return diffCoord / diffTime;\n        }\n      }\n      return 0;\n    }\n    function computeDestination(velocity) {\n      return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n    }\n    function coordOf(e, orthogonal) {\n      return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n    }\n    function timeOf(e) {\n      return e.timeStamp;\n    }\n    function constrain(diff) {\n      return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n    }\n    function isTouchEvent(e) {\n      return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n    }\n    function isDragging() {\n      return dragging;\n    }\n    function disable(value) {\n      disabled = value;\n    }\n    return {\n      mount,\n      disable,\n      isDragging\n    };\n  }\n\n  const IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\n  function Keyboard(Splide2, Components2, options) {\n    const { on, bind, unbind } = EventInterface(Splide2);\n    const { root } = Components2.Elements;\n    const { resolve } = Components2.Direction;\n    let target;\n    function mount() {\n      init();\n      on(EVENT_UPDATED, () => {\n        destroy();\n        init();\n      });\n    }\n    function init() {\n      const { keyboard = \"global\" } = options;\n      if (keyboard) {\n        if (keyboard === \"focused\") {\n          target = root;\n          setAttribute(root, TAB_INDEX, 0);\n        } else {\n          target = window;\n        }\n        bind(target, \"keydown\", onKeydown);\n      }\n    }\n    function destroy() {\n      unbind(target, \"keydown\");\n      if (isHTMLElement(target)) {\n        removeAttribute(target, TAB_INDEX);\n      }\n    }\n    function onKeydown(e) {\n      const { key } = e;\n      const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n      if (normalizedKey === resolve(\"ArrowLeft\")) {\n        Splide2.go(\"<\");\n      } else if (normalizedKey === resolve(\"ArrowRight\")) {\n        Splide2.go(\">\");\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\n  const SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\n  const IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\n  function LazyLoad(Splide2, Components2, options) {\n    const { on, off, bind, emit } = EventInterface(Splide2);\n    const isSequential = options.lazyLoad === \"sequential\";\n    let images = [];\n    let index = 0;\n    function mount() {\n      if (options.lazyLoad) {\n        on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n          destroy();\n          init();\n        });\n        if (!isSequential) {\n          on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n        }\n      }\n    }\n    function init() {\n      Components2.Slides.forEach((_Slide) => {\n        queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n          const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n          const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n          if (src !== _img.src || srcset !== _img.srcset) {\n            const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n            setAttribute(_spinner, ROLE, \"presentation\");\n            images.push({ _img, _Slide, src, srcset, _spinner });\n            !_img.src && display(_img, \"none\");\n          }\n        });\n      });\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function destroy() {\n      index = 0;\n      images = [];\n    }\n    function observe() {\n      images = images.filter((data) => {\n        const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n        if (data._Slide.isWithin(Splide2.index, distance)) {\n          return load(data);\n        }\n        return true;\n      });\n      if (!images.length) {\n        off(EVENT_MOVED);\n      }\n    }\n    function load(data) {\n      const { _img } = data;\n      addClass(data._Slide.slide, CLASS_LOADING);\n      bind(_img, \"load error\", (e) => {\n        onLoad(data, e.type === \"error\");\n      });\n      [\"src\", \"srcset\"].forEach((name) => {\n        if (data[name]) {\n          setAttribute(_img, name, data[name]);\n          removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n        }\n      });\n    }\n    function onLoad(data, error) {\n      const { _Slide } = data;\n      removeClass(_Slide.slide, CLASS_LOADING);\n      if (!error) {\n        remove(data._spinner);\n        display(data._img, \"\");\n        emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n        emit(EVENT_RESIZE);\n      }\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function loadNext() {\n      if (index < images.length) {\n        load(images[index++]);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Pagination(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Slides, Elements, Controller } = Components2;\n    const { hasFocus, getIndex } = Controller;\n    const items = [];\n    let list;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on([EVENT_MOVE, EVENT_SCROLLED], update);\n    }\n    function init() {\n      destroy();\n      if (options.pagination && Slides.isEnough()) {\n        createPagination();\n        emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n        update();\n      }\n    }\n    function destroy() {\n      if (list) {\n        remove(list);\n        items.forEach((item) => {\n          unbind(item.button, \"click\");\n        });\n        empty(items);\n        list = null;\n      }\n    }\n    function createPagination() {\n      const { length } = Splide2;\n      const { classes, i18n, perPage } = options;\n      const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n      const max = hasFocus() ? length : ceil(length / perPage);\n      list = create(\"ul\", classes.pagination, parent);\n      for (let i = 0; i < max; i++) {\n        const li = create(\"li\", null, list);\n        const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n        const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n        const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n        bind(button, \"click\", onClick.bind(null, i));\n        setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n        setAttribute(button, ARIA_LABEL, format(text, i + 1));\n        items.push({ li, button, page: i });\n      }\n    }\n    function onClick(page) {\n      Controller.go(`>${page}`, true, () => {\n        const Slide = Slides.getAt(Controller.toIndex(page));\n        Slide && focus(Slide.slide);\n      });\n    }\n    function getAt(index) {\n      return items[Controller.toPage(index)];\n    }\n    function update() {\n      const prev = getAt(getIndex(true));\n      const curr = getAt(getIndex());\n      if (prev) {\n        removeClass(prev.button, CLASS_ACTIVE);\n        removeAttribute(prev.button, ARIA_CURRENT);\n      }\n      if (curr) {\n        addClass(curr.button, CLASS_ACTIVE);\n        setAttribute(curr.button, ARIA_CURRENT, true);\n      }\n      emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n    }\n    return {\n      items,\n      mount,\n      destroy,\n      getAt\n    };\n  }\n\n  const TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\n  function Sync(Splide2, Components2, options) {\n    const { splides } = Splide2;\n    const { list } = Components2.Elements;\n    function mount() {\n      if (options.isNavigation) {\n        navigate();\n      } else {\n        sync();\n      }\n    }\n    function destroy() {\n      removeAttribute(list, ALL_ATTRIBUTES);\n    }\n    function sync() {\n      const processed = [];\n      splides.concat(Splide2).forEach((splide, index, instances) => {\n        EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n          instances.forEach((instance) => {\n            if (instance !== splide && !includes(processed, splide)) {\n              processed.push(instance);\n              instance.go(instance.is(LOOP) ? dest : index2);\n            }\n          });\n          empty(processed);\n        });\n      });\n    }\n    function navigate() {\n      const { on, emit } = EventInterface(Splide2);\n      on(EVENT_CLICK, onClick);\n      on(EVENT_SLIDE_KEYDOWN, onKeydown);\n      on([EVENT_MOUNTED, EVENT_UPDATED], update);\n      setAttribute(list, ROLE, \"menu\");\n      emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n    }\n    function update() {\n      setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n    }\n    function onClick(Slide) {\n      Splide2.go(Slide.index);\n    }\n    function onKeydown(Slide, e) {\n      if (includes(TRIGGER_KEYS, e.key)) {\n        onClick(Slide);\n        prevent(e);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Wheel(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    function mount() {\n      if (options.wheel) {\n        bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n      }\n    }\n    function onWheel(e) {\n      const { deltaY } = e;\n      if (deltaY) {\n        Splide2.go(deltaY < 0 ? \"<\" : \">\");\n        prevent(e);\n      }\n    }\n    return {\n      mount\n    };\n  }\n\n  var ComponentConstructors = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Options: Options,\n    Direction: Direction,\n    Elements: Elements,\n    Slides: Slides,\n    Layout: Layout,\n    Clones: Clones,\n    Move: Move,\n    Controller: Controller,\n    Arrows: Arrows,\n    Autoplay: Autoplay,\n    Cover: Cover,\n    Scroll: Scroll,\n    Drag: Drag,\n    Keyboard: Keyboard,\n    LazyLoad: LazyLoad,\n    Pagination: Pagination,\n    Sync: Sync,\n    Wheel: Wheel\n  });\n\n  const I18N = {\n    prev: \"Previous slide\",\n    next: \"Next slide\",\n    first: \"Go to first slide\",\n    last: \"Go to last slide\",\n    slideX: \"Go to slide %s\",\n    pageX: \"Go to page %s\",\n    play: \"Start autoplay\",\n    pause: \"Pause autoplay\"\n  };\n\n  const DEFAULTS = {\n    type: \"slide\",\n    speed: 400,\n    waitForTransition: true,\n    perPage: 1,\n    arrows: true,\n    pagination: true,\n    interval: 5e3,\n    pauseOnHover: true,\n    pauseOnFocus: true,\n    resetProgress: true,\n    easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n    drag: true,\n    direction: \"ltr\",\n    slideFocus: true,\n    trimSpace: true,\n    focusableNodes: \"a, button, textarea, input, select, iframe\",\n    classes: CLASSES,\n    i18n: I18N\n  };\n\n  function Fade(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        nextTick(() => {\n          Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n        });\n      });\n    }\n    function start(index, done) {\n      const { track } = Components2.Elements;\n      style(track, \"height\", unit(rect(track).height));\n      nextTick(() => {\n        done();\n        style(track, \"height\", \"\");\n      });\n    }\n    return {\n      mount,\n      start,\n      cancel: noop\n    };\n  }\n\n  function Slide(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    const { Move, Controller } = Components2;\n    const { list } = Components2.Elements;\n    let endCallback;\n    function mount() {\n      bind(list, \"transitionend\", (e) => {\n        if (e.target === list && endCallback) {\n          cancel();\n          endCallback();\n        }\n      });\n    }\n    function start(index, done) {\n      const destination = Move.toPosition(index, true);\n      const position = Move.getPosition();\n      const speed = getSpeed(index);\n      if (abs(destination - position) >= 1 && speed >= 1) {\n        apply(`transform ${speed}ms ${options.easing}`);\n        Move.translate(destination, true);\n        endCallback = done;\n      } else {\n        Move.jump(index);\n        done();\n      }\n    }\n    function cancel() {\n      apply(\"\");\n    }\n    function getSpeed(index) {\n      const { rewindSpeed } = options;\n      if (Splide2.is(SLIDE) && rewindSpeed) {\n        const prev = Controller.getIndex(true);\n        const end = Controller.getEnd();\n        if (prev === 0 && index >= end || prev >= end && index === 0) {\n          return rewindSpeed;\n        }\n      }\n      return options.speed;\n    }\n    function apply(transition) {\n      style(list, \"transition\", transition);\n    }\n    return {\n      mount,\n      start,\n      cancel\n    };\n  }\n\n  const _Splide = class {\n    constructor(target, options) {\n      this.event = EventBus();\n      this.Components = {};\n      this.state = State(CREATED);\n      this.splides = [];\n      this._options = {};\n      this._Extensions = {};\n      const root = isString(target) ? query(document, target) : target;\n      assert(root, `${root} is invalid.`);\n      this.root = root;\n      merge(DEFAULTS, _Splide.defaults);\n      merge(merge(this._options, DEFAULTS), options || {});\n    }\n    mount(Extensions, Transition) {\n      const { state, Components: Components2 } = this;\n      assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n      state.set(CREATED);\n      this._Components = Components2;\n      this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n      this._Extensions = Extensions || this._Extensions;\n      const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n      forOwn(Constructors, (Component, key) => {\n        const component = Component(this, Components2, this._options);\n        Components2[key] = component;\n        component.setup && component.setup();\n      });\n      forOwn(Components2, (component) => {\n        component.mount && component.mount();\n      });\n      this.emit(EVENT_MOUNTED);\n      addClass(this.root, CLASS_INITIALIZED);\n      state.set(IDLE);\n      this.emit(EVENT_READY);\n      return this;\n    }\n    sync(splide) {\n      this.splides.push(splide);\n      splide.splides.push(this);\n      return this;\n    }\n    go(control) {\n      this._Components.Controller.go(control);\n      return this;\n    }\n    on(events, callback) {\n      this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n      return this;\n    }\n    off(events) {\n      this.event.off(events);\n      return this;\n    }\n    emit(event) {\n      this.event.emit(event, ...slice(arguments, 1));\n      return this;\n    }\n    add(slides, index) {\n      this._Components.Slides.add(slides, index);\n      return this;\n    }\n    remove(matcher) {\n      this._Components.Slides.remove(matcher);\n      return this;\n    }\n    is(type) {\n      return this._options.type === type;\n    }\n    refresh() {\n      this.emit(EVENT_REFRESH);\n      return this;\n    }\n    destroy(completely = true) {\n      const { event, state } = this;\n      if (state.is(CREATED)) {\n        event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n      } else {\n        forOwn(this._Components, (component) => {\n          component.destroy && component.destroy(completely);\n        }, true);\n        event.emit(EVENT_DESTROY);\n        event.destroy();\n        completely && empty(this.splides);\n        state.set(DESTROYED);\n      }\n      return this;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      const { _options } = this;\n      merge(_options, options);\n      if (!this.state.is(CREATED)) {\n        this.emit(EVENT_UPDATED, _options);\n      }\n    }\n    get length() {\n      return this._Components.Slides.getLength(true);\n    }\n    get index() {\n      return this._Components.Controller.getIndex();\n    }\n  };\n  let Splide = _Splide;\n  Splide.defaults = {};\n  Splide.STATES = STATES;\n\n  if (document.querySelector('#carousel')) {\n    new Splide('#carousel', {\n      pagination: false,\n      type: 'slide',\n      perPage: 4,\n      perMove: 1,\n      gap: 32,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10\n        },\n        767: {\n          perPage: 2,\n          gap: 10\n        },\n        1024: {\n          perPage: 2,\n          gap: 16\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  if (document.querySelector('#testimonials')) {\n    new Splide('#testimonials', {\n      pagination: false,\n      type: 'slide',\n      perPage: 3,\n      perMove: 1,\n      gap: 28,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10\n        },\n        767: {\n          perPage: 2,\n          gap: 10\n        },\n        1024: {\n          perPage: 2,\n          gap: 16\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  /**\r\n   * Toggle Nav\r\n   * ======================================\r\n   * - toggle class on body\r\n   */\n  var ELEMENTS = '.togglenav__button';\n  var TOGGLE_CLASS = 'nav-is-open';\n\n  var ToggleNav = /*#__PURE__*/function () {\n    function ToggleNav() {\n      var _this = this;\n\n      _classCallCheck(this, ToggleNav);\n\n      this.elements = document.querySelectorAll(ELEMENTS);\n\n      if (!this.elements) {\n        return false;\n      }\n\n      this.elements.forEach(function (el) {\n        el.addEventListener('click', _this.toggleNav, false);\n      });\n    }\n\n    _createClass(ToggleNav, [{\n      key: \"toggleNav\",\n      value: function toggleNav(e) {\n        document.body.classList.toggle(TOGGLE_CLASS);\n        document.body.classList.toggle('lock');\n        e.preventDefault();\n      }\n    }]);\n\n    return ToggleNav;\n  }();\n\n  new ToggleNav();\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var simpleLightbox_modules = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports[\"default\"] = void 0;\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var SimpleLightbox = /*#__PURE__*/function () {\n    function SimpleLightbox(elements, options) {\n      var _this = this;\n\n      _classCallCheck(this, SimpleLightbox);\n\n      _defineProperty(this, \"defaultOptions\", {\n        sourceAttr: 'href',\n        overlay: true,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n      });\n\n      _defineProperty(this, \"transitionPrefix\", void 0);\n\n      _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n      _defineProperty(this, \"transitionCapable\", false);\n\n      _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n      _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n      _defineProperty(this, \"initialLocationHash\", void 0);\n\n      _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n      _defineProperty(this, \"isOpen\", false);\n\n      _defineProperty(this, \"isAnimating\", false);\n\n      _defineProperty(this, \"isClosing\", false);\n\n      _defineProperty(this, \"isFadeIn\", false);\n\n      _defineProperty(this, \"urlChangedOnce\", false);\n\n      _defineProperty(this, \"hashReseted\", false);\n\n      _defineProperty(this, \"historyHasChanges\", false);\n\n      _defineProperty(this, \"historyUpdateTimeout\", null);\n\n      _defineProperty(this, \"currentImage\", void 0);\n\n      _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n      _defineProperty(this, \"domNodes\", {});\n\n      _defineProperty(this, \"loadedImages\", []);\n\n      _defineProperty(this, \"initialImageIndex\", 0);\n\n      _defineProperty(this, \"currentImageIndex\", 0);\n\n      _defineProperty(this, \"initialSelector\", null);\n\n      _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n      _defineProperty(this, \"controlCoordinates\", {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n      });\n\n      this.options = Object.assign(this.defaultOptions, options);\n      this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n      if (typeof elements === 'string') {\n        this.initialSelector = elements;\n        this.elements = Array.from(document.querySelectorAll(elements));\n      } else {\n        this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n      }\n\n      this.relatedElements = [];\n      this.transitionPrefix = this.calculateTransitionPrefix();\n      this.transitionCapable = this.transitionPrefix !== false;\n      this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n      if (this.options.rel) {\n        this.elements = this.getRelated(this.options.rel);\n      }\n\n      if (this.options.uniqueImages) {\n        var imgArr = [];\n        this.elements = Array.from(this.elements).filter(function (element) {\n          var src = element.getAttribute(_this.options.sourceAttr);\n\n          if (imgArr.indexOf(src) === -1) {\n            imgArr.push(src);\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      this.createDomNodes();\n\n      if (this.options.close) {\n        this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n      }\n\n      if (this.options.nav) {\n        this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n      }\n\n      if (this.options.spinner) {\n        this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n      }\n\n      this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n        if (_this.isValidLink(event.currentTarget)) {\n          event.preventDefault();\n\n          if (_this.isAnimating) {\n            return false;\n          }\n\n          _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n          _this.openImage(event.currentTarget);\n        }\n      }); // close addEventListener click addEventListener doc\n\n      if (this.options.docClose) {\n        this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n          if (_this.isOpen && event.target === event.currentTarget) {\n            _this.close();\n          }\n        });\n      } // disable rightclick\n\n\n      if (this.options.disableRightClick) {\n        this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n          if (event.target.parentElement.classList.contains(\"sl-image\")) {\n            event.preventDefault();\n          }\n        });\n      } // keyboard-control\n\n\n      if (this.options.enableKeyboard) {\n        this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n          _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n          if (_this.isAnimating && event.key === 'Escape') {\n            _this.currentImage.setAttribute('src', '');\n\n            _this.isAnimating = false;\n            return _this.close();\n          }\n\n          if (_this.isOpen) {\n            event.preventDefault();\n\n            if (event.key === 'Escape') {\n              _this.close();\n            }\n\n            if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n              _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n            }\n          }\n        }, this.options.throttleInterval));\n      }\n\n      this.addEvents();\n    }\n\n    _createClass(SimpleLightbox, [{\n      key: \"checkPassiveEventsSupport\",\n      value: function checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          window.addEventListener(\"testPassive\", null, opts);\n          window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n\n        return supportsPassive;\n      }\n    }, {\n      key: \"createDomNodes\",\n      value: function createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = \".7\";\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n        if (this.options.captionClass) {\n          this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex', -1);\n        this.domNodes.wrapper.setAttribute('role', 'dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n        if (this.options.className) {\n          this.domNodes.wrapper.classList.add(this.options.className);\n        }\n\n        if (this.options.rtl) {\n          this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n      }\n    }, {\n      key: \"throttle\",\n      value: function throttle(func, limit) {\n        var inThrottle;\n        return function () {\n          if (!inThrottle) {\n            func.apply(this, arguments);\n            inThrottle = true;\n            setTimeout(function () {\n              return inThrottle = false;\n            }, limit);\n          }\n        };\n      }\n    }, {\n      key: \"isValidLink\",\n      value: function isValidLink(element) {\n        return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"calculateTransitionPrefix\",\n      value: function calculateTransitionPrefix() {\n        var s = (document.body || document.documentElement).style;\n        return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n      }\n    }, {\n      key: \"toggleScrollbar\",\n      value: function toggleScrollbar(type) {\n        var scrollbarWidth = 0;\n        var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n        if (type === 'hide') {\n          var fullWindowWidth = window.innerWidth;\n\n          if (!fullWindowWidth) {\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n\n          if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n            var scrollDiv = document.createElement('div'),\n                paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n            scrollDiv.classList.add('sl-scrollbar-measure');\n            document.body.appendChild(scrollDiv);\n            scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            document.body.dataset.originalPaddingRight = paddingRight;\n\n            if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n              document.body.classList.add('hidden-scroll');\n              document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n              fixedElements.forEach(function (element) {\n                var actualPadding = element.style.paddingRight;\n                var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n                element.dataset.originalPaddingRight = actualPadding;\n                element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n              });\n            }\n          }\n        } else {\n          document.body.classList.remove('hidden-scroll');\n          document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n          fixedElements.forEach(function (element) {\n            var padding = element.dataset.originalPaddingRight;\n\n            if (typeof padding !== 'undefined') {\n              element.style.paddingRight = padding;\n            }\n          });\n        }\n\n        return scrollbarWidth;\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        var _this2 = this;\n\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n          return false;\n        }\n\n        this.isClosing = true;\n        var element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n          this.historyHasChanges = false;\n\n          if (!this.hashReseted) {\n            this.resetHash();\n          }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n          if (_this2.options.disableScroll) {\n            _this2.toggleScrollbar('show');\n          }\n\n          if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n            document.querySelector('html').classList.remove(_this2.options.htmlClass);\n          }\n\n          document.body.removeChild(_this2.domNodes.wrapper);\n          document.body.removeChild(_this2.domNodes.overlay);\n          _this2.domNodes.additionalHtml = null;\n          element.dispatchEvent(new Event('closed.simplelightbox'));\n          _this2.isClosing = false;\n        });\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false; // reset touchcontrol coordinates\n\n        for (var key in this.controlCoordinates) {\n          this.controlCoordinates[key] = 0;\n        }\n\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        return window.location.hash.substring(1);\n      }\n    }, {\n      key: \"preload\",\n      value: function preload() {\n        var _this3 = this;\n\n        var index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n            prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n        nextImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            //is this condition even required... setting multiple times will not change usage...\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n        prevImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"loadImage\",\n      value: function loadImage(direction) {\n        var _this4 = this;\n\n        var slideDirection = direction;\n\n        if (this.options.rtl) {\n          direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n        var newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n          return false;\n        }\n\n        this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n        if (this.options.animationSlide) {\n          this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n        }\n\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n          _this4.isAnimating = true;\n\n          if (!_this4.isClosing) {\n            setTimeout(function () {\n              var element = _this4.relatedElements[_this4.currentImageIndex];\n\n              _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n              if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n                _this4.show(_this4.domNodes.spinner);\n              }\n\n              if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n                _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n              }\n\n              _this4.adjustImage(slideDirection);\n\n              if (_this4.options.preloading) _this4.preload();\n            }, 100);\n          } else {\n            _this4.isAnimating = false;\n          }\n        });\n      }\n    }, {\n      key: \"adjustImage\",\n      value: function adjustImage(direction) {\n        var _this5 = this;\n\n        if (!this.currentImage) {\n          return false;\n        }\n\n        var tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n        tmpImage.addEventListener('error', function (event) {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n          _this5.isAnimating = false;\n          _this5.isOpen = true;\n          _this5.domNodes.spinner.style.display = 'none';\n          var dirIsDefined = direction === 1 || direction === -1;\n\n          if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n            return _this5.close();\n          }\n\n          if (_this5.options.alertError) {\n            alert(_this5.options.alertErrorMessage);\n          }\n\n          _this5.loadImage(dirIsDefined ? direction : 1);\n        });\n        tmpImage.addEventListener('load', function (event) {\n          if (typeof direction !== 'undefined') {\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n          } // history\n\n\n          if (_this5.options.history) {\n            _this5.updateURL();\n          }\n\n          if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n            _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n          }\n\n          var imageWidth = event.target.width,\n              imageHeight = event.target.height;\n\n          if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n            var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n            imageWidth /= ratio;\n            imageHeight /= ratio;\n          }\n\n          _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n          _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n          _this5.domNodes.image.style.width = imageWidth + 'px';\n          _this5.domNodes.image.style.height = imageHeight + 'px';\n          _this5.domNodes.spinner.style.display = 'none';\n\n          if (_this5.options.focus) {\n            _this5.forceFocus();\n          }\n\n          _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n            if (_this5.options.focus) {\n              _this5.domNodes.wrapper.focus();\n            }\n          });\n\n          _this5.isOpen = true;\n          var captionContainer, captionText;\n\n          if (typeof _this5.options.captionSelector === 'string') {\n            captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n          } else if (typeof _this5.options.captionSelector === 'function') {\n            captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n          }\n\n          if (_this5.options.captions && captionContainer) {\n            if (_this5.options.captionType === 'data') {\n              captionText = captionContainer.dataset[_this5.options.captionsData];\n            } else if (_this5.options.captionType === 'text') {\n              captionText = captionContainer.innerHTML;\n            } else {\n              captionText = captionContainer.getAttribute(_this5.options.captionsData);\n            }\n          }\n\n          if (!_this5.options.loop) {\n            if (_this5.currentImageIndex === 0) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n\n            if (_this5.currentImageIndex > 0) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n          } else {\n            if (_this5.relatedElements.length === 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            } else {\n              _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            }\n          }\n\n          if (direction === 1 || direction === -1) {\n            if (_this5.options.animationSlide) {\n              _this5.slide(0, 100 * direction + 'px');\n\n              setTimeout(function () {\n                _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n              }, 50);\n            }\n\n            _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n              _this5.isAnimating = false;\n\n              _this5.setCaption(captionText, imageWidth);\n            });\n          } else {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          }\n\n          if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n            _this5.domNodes.additionalHtml = document.createElement('div');\n\n            _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n            _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n            _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n          }\n        });\n      }\n    }, {\n      key: \"zoomPanElement\",\n      value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n      }\n    }, {\n      key: \"minMax\",\n      value: function minMax(value, min, max) {\n        return value < min ? min : value > max ? max : value;\n      }\n    }, {\n      key: \"setZoomData\",\n      value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n      }\n    }, {\n      key: \"hashchangeHandler\",\n      value: function hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n          this.hashReseted = true;\n          this.close();\n        }\n      }\n    }, {\n      key: \"addEvents\",\n      value: function addEvents() {\n        var _this6 = this;\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n          //this.adjustImage.bind(this)\n          if (_this6.isOpen) {\n            _this6.adjustImage();\n          }\n        });\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n          setTimeout(function () {\n            _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n              if (_this6.isOpen) {\n                _this6.hashchangeHandler();\n              }\n            });\n          }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n          if (!event.currentTarget.tagName.match(/button/i)) {\n            return true;\n          }\n\n          event.preventDefault();\n          _this6.controlCoordinates.swipeDiff = 0;\n\n          _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n          var scale = 1;\n          this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n            if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n              return true;\n            }\n\n            if (_this6.controlCoordinates.containerHeight == 0) {\n              _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n              _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n              _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n              _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n              _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n              _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            }\n\n            event.preventDefault();\n            var delta = event.delta || event.wheelDelta;\n\n            if (delta === undefined) {\n              //we are on firefox\n              delta = event.detail;\n            }\n\n            delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n            // apply zoom\n\n            scale += delta * _this6.options.scrollZoomFactor * scale;\n            scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n            _this6.controlCoordinates.targetScale = scale;\n            _this6.controlCoordinates.pinchOffsetX = event.pageX;\n            _this6.controlCoordinates.pinchOffsetY = event.pageY;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n            if (_this6.controlCoordinates.targetScale > 1) {\n              _this6.controlCoordinates.zoomed = true;\n\n              if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            } else {\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n            _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n            _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n          if (event.target.tagName === 'A' && event.type === 'touchstart') {\n            return true;\n          }\n\n          if (event.type === 'mousedown') {\n            event.preventDefault();\n            _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            _this6.controlCoordinates.capture = true;\n          } else {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n            if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                if (!_this6.controlCoordinates.doubleTapped) {\n                  _this6.controlCoordinates.doubleTapped = true;\n                  setTimeout(function () {\n                    _this6.controlCoordinates.doubleTapped = false;\n                  }, 300);\n                } else {\n                  _this6.currentImage.classList.add('sl-transition');\n\n                  if (!_this6.controlCoordinates.zoomed) {\n                    _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n\n                    _this6.controlCoordinates.zoomed = true;\n                  } else {\n                    _this6.controlCoordinates.initialScale = 1;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    _this6.controlCoordinates.zoomed = false;\n                  }\n\n                  setTimeout(function () {\n                    if (_this6.currentImage) {\n                      _this6.currentImage.classList.remove('sl-transition');\n                    }\n                  }, 200);\n                  return false;\n                }\n\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              } else if (_this6.controlCoordinates.touchCount === 2)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n                _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n                _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n                _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n              }\n\n            _this6.controlCoordinates.capture = true;\n          }\n\n          if (_this6.controlCoordinates.mousedown) return true;\n\n          if (_this6.transitionCapable) {\n            _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n          }\n\n          _this6.controlCoordinates.mousedown = true;\n          _this6.controlCoordinates.swipeDiff = 0;\n          _this6.controlCoordinates.swipeYDiff = 0;\n          _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n          return false;\n        });\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n          if (!_this6.controlCoordinates.mousedown) {\n            return true;\n          }\n\n          if (event.type === 'touchmove') {\n            if (_this6.controlCoordinates.capture === false) {\n              return false;\n            }\n\n            _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.touchmoveCount++;\n\n            if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n                if (_this6.controlCoordinates.initialPinchDistance === null) {\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                }\n\n                if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                  /* Initialize helpers */\n                  _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                  _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                  _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                  _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                  _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                  _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                  _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                  if (_this6.controlCoordinates.targetScale > 1) {\n                    _this6.controlCoordinates.zoomed = true;\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n                  }\n\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                  _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                  _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                  _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                }\n              } else {\n              _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n              _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n              _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n              _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n              _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n              }\n\n              _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n              _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n            }\n          }\n          /* Mouse Move implementation */\n\n\n          if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n            if (event.type == 'touchmove') return true;\n            event.preventDefault();\n            if (_this6.controlCoordinates.capture === false) return false;\n            _this6.controlCoordinates.pointerOffsetX = event.clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.clientY;\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n            _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n            _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n            _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n            if (_this6.options.animationSlide) {\n              _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n          if (_this6.isTouchDevice && event.type === 'touchend') {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n\n            if (_this6.controlCoordinates.touchCount === 0)\n              /* No touch */\n              {\n                /* Set attributes */\n                if (_this6.currentImage) {\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n                }\n\n                if (_this6.controlCoordinates.initialScale === 1) {\n                  _this6.controlCoordinates.zoomed = false;\n\n                  if (_this6.domNodes.caption.style.display === 'none') {\n                    _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = null;\n                _this6.controlCoordinates.capture = false;\n              } else if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n              } else if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPinchDistance = null;\n              }\n          }\n\n          if (_this6.controlCoordinates.mousedown) {\n            _this6.controlCoordinates.mousedown = false;\n            var possibleDir = true;\n\n            if (!_this6.options.loop) {\n              if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n                possibleDir = false;\n              }\n\n              if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n                possibleDir = false;\n              }\n            }\n\n            if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n              _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n            } else if (_this6.options.animationSlide) {\n              _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n            }\n\n            if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n              _this6.close();\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n          if (_this6.isTouchDevice) return;\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          _this6.currentImage.classList.add('sl-transition');\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n\n            _this6.controlCoordinates.zoomed = true;\n          } else {\n            _this6.controlCoordinates.initialScale = 1;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            _this6.controlCoordinates.zoomed = false;\n\n            if (_this6.domNodes.caption.style.display === 'none') {\n              _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          }\n\n          setTimeout(function () {\n            if (_this6.currentImage) {\n              _this6.currentImage.classList.remove('sl-transition');\n\n              _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n            }\n          }, 200);\n          _this6.controlCoordinates.capture = true;\n          return false;\n        });\n      }\n    }, {\n      key: \"getDimensions\",\n      value: function getDimensions(element) {\n        var styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n          height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n          width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n      }\n    }, {\n      key: \"updateHash\",\n      value: function updateHash() {\n        var newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n          window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n          // what is the browser target of this?\n          if (this.historyHasChanges) {\n            window.location.replace(newURL);\n          } else {\n            window.location.hash = newHash;\n          }\n        }\n\n        if (!this.historyHasChanges) {\n          this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n      }\n    }, {\n      key: \"resetHash\",\n      value: function resetHash() {\n        this.hashReseted = true;\n\n        if (this.urlChangedOnce) {\n          history.back();\n        } else {\n          if (this.pushStateSupport) {\n            history.pushState('', document.title, window.location.pathname + window.location.search);\n          } else {\n            window.location.hash = '';\n          }\n        } //\n        //in case an history operation is still pending\n\n\n        clearTimeout(this.historyUpdateTimeout);\n      }\n    }, {\n      key: \"updateURL\",\n      value: function updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n\n        if (!this.historyHasChanges) {\n          this.updateHash(); // first time\n        } else {\n          this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n      }\n    }, {\n      key: \"setCaption\",\n      value: function setCaption(captionText, imageWidth) {\n        var _this7 = this;\n\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n          this.hide(this.domNodes.caption);\n          this.domNodes.caption.style.width = imageWidth + 'px';\n          this.domNodes.caption.innerHTML = captionText;\n          this.domNodes.image.appendChild(this.domNodes.caption);\n          setTimeout(function () {\n            _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n          }, this.options.captionDelay);\n        }\n      }\n    }, {\n      key: \"slide\",\n      value: function slide(speed, pos) {\n        if (!this.transitionCapable) {\n          return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n      }\n    }, {\n      key: \"getRelated\",\n      value: function getRelated(rel) {\n        var elems;\n\n        if (rel && rel !== false && rel !== 'nofollow') {\n          elems = Array.from(this.elements).filter(function (element) {\n            return element.getAttribute('rel') === rel;\n          });\n        } else {\n          elems = this.elements;\n        }\n\n        return elems;\n      }\n    }, {\n      key: \"openImage\",\n      value: function openImage(element) {\n        var _this8 = this;\n\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n          this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n          document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n        if (this.options.overlay) {\n          document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n          if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.removeChild(this.domNodes.counter);\n          } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.appendChild(this.domNodes.counter);\n          }\n        }\n\n        this.isAnimating = true;\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n        var targetURL = element.getAttribute(this.options.sourceAttr);\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n          this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n        this.domNodes.image.appendChild(this.currentImage);\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n        this.adjustImage();\n\n        if (this.options.preloading) {\n          this.preload();\n        }\n\n        setTimeout(function () {\n          element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n        }, this.options.animationSpeed);\n      }\n    }, {\n      key: \"forceFocus\",\n      value: function forceFocus() {\n        var _this9 = this;\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n          if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n            _this9.domNodes.wrapper.focus();\n          }\n        });\n      } // utility\n\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator = _createForOfIteratorHelper(elements),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var element = _step.value;\n\n            if (!element.namespaces) {\n              element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n\n            var _iterator2 = _createForOfIteratorHelper(events),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var event = _step2.value;\n                var options = opts || false;\n                var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                  if (_typeof(options) === 'object') {\n                    options.passive = true;\n                  } else {\n                    options = {\n                      passive: true\n                    };\n                  }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator3 = _createForOfIteratorHelper(elements),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var element = _step3.value;\n\n            var _iterator4 = _createForOfIteratorHelper(events),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var event = _step4.value;\n\n                if (element.namespaces && element.namespaces[event]) {\n                  element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                  delete element.namespaces[event];\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }, {\n      key: \"fadeOut\",\n      value: function fadeOut(elements, duration, callback) {\n        var _this10 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator5 = _createForOfIteratorHelper(elements),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var element = _step5.value;\n            element.style.opacity = 1;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        this.isFadeIn = false;\n\n        var step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if ((currentOpacity -= step) < 0) {\n            var _iterator6 = _createForOfIteratorHelper(elements),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var element = _step6.value;\n                element.style.display = \"none\"; // element.style.opacity = '';\n\n                element.style.opacity = 1;\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            callback && callback.call(_this10, elements);\n          } else {\n            var _iterator7 = _createForOfIteratorHelper(elements),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _element = _step7.value;\n                _element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n\n            requestAnimationFrame(fade);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"fadeIn\",\n      value: function fadeIn(elements, duration, callback, display) {\n        var _this11 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator8 = _createForOfIteratorHelper(elements),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var element = _step8.value;\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        this.isFadeIn = true;\n\n        var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if (!((currentOpacity += step) > opacityTarget)) {\n            var _iterator9 = _createForOfIteratorHelper(elements),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var element = _step9.value;\n                element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n\n            if (!_this11.isFadeIn) return;\n            requestAnimationFrame(fade);\n          } else {\n            var _iterator10 = _createForOfIteratorHelper(elements),\n                _step10;\n\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var _element2 = _step10.value;\n                _element2.style.opacity = '';\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n\n            callback && callback.call(_this11, elements);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"hide\",\n      value: function hide(elements) {\n        elements = this.wrap(elements);\n\n        var _iterator11 = _createForOfIteratorHelper(elements),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var element = _step11.value;\n\n            if (element.style.display != 'none') {\n              element.dataset.initialDisplay = element.style.display;\n            }\n\n            element.style.display = 'none';\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n    }, {\n      key: \"show\",\n      value: function show(elements, display) {\n        elements = this.wrap(elements);\n\n        var _iterator12 = _createForOfIteratorHelper(elements),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var element = _step12.value;\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      }\n    }, {\n      key: \"wrap\",\n      value: function wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n      }\n    }, {\n      key: \"on\",\n      value: function on(events, callback) {\n        events = this.wrap(events);\n\n        var _iterator13 = _createForOfIteratorHelper(this.elements),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var element = _step13.value;\n\n            if (!element.fullyNamespacedEvents) {\n              element.fullyNamespacedEvents = {};\n            }\n\n            var _iterator14 = _createForOfIteratorHelper(events),\n                _step14;\n\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var event = _step14.value;\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n\n        return this;\n      }\n    }, {\n      key: \"off\",\n      value: function off(events) {\n        events = this.wrap(events);\n\n        var _iterator15 = _createForOfIteratorHelper(this.elements),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var element = _step15.value;\n\n            var _iterator16 = _createForOfIteratorHelper(events),\n                _step16;\n\n            try {\n              for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                var event = _step16.value;\n\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                  element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n              }\n            } catch (err) {\n              _iterator16.e(err);\n            } finally {\n              _iterator16.f();\n            }\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n\n        return this;\n      } // api\n\n    }, {\n      key: \"open\",\n      value: function open(elem) {\n        elem = elem || this.elements[0];\n\n        if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n          elem = elem.get(0);\n        }\n\n        this.initialImageIndex = this.elements.indexOf(elem);\n\n        if (this.initialImageIndex > -1) {\n          this.openImage(elem);\n        }\n      }\n    }, {\n      key: \"next\",\n      value: function next() {\n        this.loadImage(1);\n      }\n    }, {\n      key: \"prev\",\n      value: function prev() {\n        this.loadImage(-1);\n      } // get some useful data\n\n    }, {\n      key: \"getLighboxData\",\n      value: function getLighboxData() {\n        return {\n          currentImageIndex: this.currentImageIndex,\n          currentImage: this.currentImage,\n          globalScrollbarWidth: this.globalScrollbarWidth\n        };\n      } //close is exposed anyways..\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        //remove all custom event listeners from elements\n        this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n        this.close();\n\n        if (this.isOpen) {\n          document.body.removeChild(this.domNodes.wrapper);\n          document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n      }\n    }, {\n      key: \"refresh\",\n      value: function refresh() {\n        if (!this.initialSelector) {\n          throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        var options = this.options,\n            selector = this.initialSelector;\n        this.destroy();\n        this.constructor(selector, options);\n        return this;\n      }\n    }]);\n\n    return SimpleLightbox;\n  }();\n\n  var _default = SimpleLightbox;\n  exports[\"default\"] = _default;\n  commonjsGlobal.SimpleLightbox = SimpleLightbox;\n  });\n\n  var SimpleLightbox = unwrapExports(simpleLightbox_modules);\n\n  new SimpleLightbox('.gallery__fancybox', {\n    /* options */\n  });\n\n  /**\n   * Sticky Sidebar v2 JavaScript Plugin.\n   * @version 1.0.1\n   * @author Øystein Blixhavn <oystein@blixhavn.no>\n   * @license The MIT License (MIT)\n   */\n  const StickySidebar = (() => {\n\n      // ---------------------------------\n      // # Define Constants\n      // ---------------------------------\n      //\n      const EVENT_KEY = '.stickySidebar';\n\n      const DEFAULTS = {\n        /**\n         * Additional top spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        topSpacing: 0,\n\n        /**\n         * Additional bottom spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        bottomSpacing: 0,\n\n        /**\n         * Container sidebar selector to know what the beginning and end of sticky element.\n         * @type {String|False}\n         */\n        containerSelector: false,\n\n        /**\n         * Parent element where the scrolling happens.\n         */\n        scrollContainer: false,\n\n        /**\n         * Inner wrapper selector.\n         * @type {String}\n         */\n        innerWrapperSelector: '.inner-wrapper-sticky',\n\n        /**\n         * The name of CSS class to apply to elements when they have become stuck.\n         * @type {String|False}\n         */\n        stickyClass: 'is-affixed',\n\n        /**\n         * The sidebar returns to its normal position if its width below this value.\n         * @type {Numeric}\n         */\n        minWidth: false\n      };\n\n      // ---------------------------------\n      // # Class Definition\n      // ---------------------------------\n      //\n      /**\n       * Sticky Sidebar Class.\n       * @public\n       */\n      class StickySidebar{\n\n        /**\n         * Sticky Sidebar Constructor.\n         * @constructor\n         * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n         * @param {Object} options - The options of sticky sidebar.\n         */\n        constructor(sidebar, options = {}){\n          this.options = StickySidebar.extend(DEFAULTS, options);\n\n          // Sidebar element query if there's no one, throw error.\n          this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n          if( 'undefined' === typeof this.sidebar )\n            throw new Error(\"There is no specific sidebar element.\");\n\n          this.sidebarInner = false;\n          this.container = this.sidebar.parentElement;\n\n          // Current Affix Type of sidebar element.\n          this.affixedType = 'STATIC';\n          this.direction = 'down';\n          this.support = {\n            transform:   false,\n            transform3d: false\n          };\n\n          this._initialized = false;\n          this._reStyle = false;\n          this._breakpoint = false;\n\n          // Dimensions of sidebar, container and screen viewport.\n          this.dimensions = {\n            translateY: 0,\n            maxTranslateY: 0,\n            topSpacing: 0,\n            lastTopSpacing: 0,\n            bottomSpacing: 0,\n            lastBottomSpacing: 0,\n            sidebarHeight: 0,\n            sidebarWidth: 0,\n            containerTop: 0,\n            containerHeight: 0,\n            viewportHeight: 0,\n            viewportTop: 0,\n            lastViewportTop: 0,\n          };\n\n          // Bind event handlers for referencability.\n          ['handleEvent'].forEach( (method) => {\n            this[method] = this[method].bind(this);\n          });\n\n          // Initialize sticky sidebar for first time.\n          this.initialize();\n        }\n\n        /**\n         * Initializes the sticky sidebar by adding inner wrapper, define its container,\n         * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n         * @private\n         */\n        initialize(){\n          this._setSupportFeatures();\n\n          // Get sticky sidebar inner wrapper, if not found, will create one.\n          if( this.options.innerWrapperSelector ){\n            this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n            if( null === this.sidebarInner )\n              this.sidebarInner = false;\n          }\n\n          if( ! this.sidebarInner ){\n            let wrapper = document.createElement('div');\n            wrapper.setAttribute('class', 'inner-wrapper-sticky');\n            this.sidebar.appendChild(wrapper);\n\n            while( this.sidebar.firstChild != wrapper )\n              wrapper.appendChild(this.sidebar.firstChild);\n\n            this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n          }\n\n          // Container wrapper of the sidebar.\n          if( this.options.containerSelector ){\n            let containers = document.querySelectorAll(this.options.containerSelector);\n            containers = Array.prototype.slice.call(containers);\n\n            containers.forEach((container, item) => {\n              if( ! container.contains(this.sidebar) ) return;\n              this.container = container;\n            });\n\n            if( ! containers.length )\n              throw new Error(\"The container does not contains on the sidebar.\");\n          }\n\n          // Get scroll container, if provided\n          this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n          // If top/bottom spacing is not function parse value to integer.\n          if( 'function' !== typeof this.options.topSpacing )\n            this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n          if( 'function' !== typeof this.options.bottomSpacing )\n            this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n          // Breakdown sticky sidebar if screen width below `options.minWidth`.\n          this._widthBreakpoint();\n\n          // Calculate dimensions of sidebar, container and viewport.\n          this.calcDimensions();\n\n          // Affix sidebar in proper position.\n          this.stickyPosition();\n\n          // Bind all events.\n          this.bindEvents();\n\n          // Inform other properties the sticky sidebar is initialized.\n          this._initialized = true;\n        }\n\n        /**\n         * Bind all events of sticky sidebar plugin.\n         * @protected\n         */\n        bindEvents(){\n          this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n          this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n          this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n          this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n          if( 'undefined' !== typeof ResizeObserver ){\n            const resizeObserver = new ResizeObserver(() => this.handleEvent());\n            resizeObserver.observe(this.sidebarInner);\n            resizeObserver.observe(this.container);\n          }\n        }\n\n        /**\n         * Handles all events of the plugin.\n         * @param {Object} event - Event object passed from listener.\n         */\n        handleEvent(event){\n          this.updateSticky(event);\n        }\n\n        /**\n         * Calculates dimensions of sidebar, container and screen viewpoint\n         * @public\n         */\n        calcDimensions(){\n          if( this._breakpoint ) return;\n          var dims = this.dimensions;\n\n          // Container of sticky sidebar dimensions.\n          dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n          dims.containerHeight = this.container.clientHeight;\n          dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n          // Sidebar dimensions.\n          dims.sidebarHeight = this.sidebarInner.offsetHeight;\n          dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n          // Screen viewport dimensions.\n          dims.viewportHeight = window.innerHeight;\n\n          // Maximum sidebar translate Y.\n          dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n          this._calcDimensionsWithScroll();\n        }\n\n        /**\n         * Some dimensions values need to be up-to-date when scrolling the page.\n         * @private\n         */\n        _calcDimensionsWithScroll(){\n          var dims = this.dimensions;\n\n          dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n          if (this.scrollContainer) {\n            dims.viewportTop = this.scrollContainer.scrollTop;\n            dims.viewportLeft = this.scrollContainer.scrollLeft;\n          } else {\n            dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n            dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n          }\n          dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n          dims.topSpacing    = this.options.topSpacing;\n          dims.bottomSpacing = this.options.bottomSpacing;\n\n          if( 'function' === typeof dims.topSpacing )\n              dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n          if( 'function' === typeof dims.bottomSpacing )\n              dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n          if( 'VIEWPORT-TOP' === this.affixedType ){\n            // Adjust translate Y in the case decrease top spacing value.\n            if( dims.topSpacing < dims.lastTopSpacing ){\n              dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n              this._reStyle = true;\n            }\n          } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n            // Adjust translate Y in the case decrease bottom spacing value.\n            if( dims.bottomSpacing < dims.lastBottomSpacing ){\n              dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n              this._reStyle = true;\n            }\n          }\n\n          dims.lastTopSpacing    = dims.topSpacing;\n          dims.lastBottomSpacing = dims.bottomSpacing;\n        }\n\n        /**\n         * Determine whether the sidebar is bigger than viewport.\n         * @public\n         * @return {Boolean}\n         */\n        isSidebarFitsViewport() {\n          return this.dimensions.viewportHeight >= (\n            this.dimensions.lastBottomSpacing +\n            this.dimensions.lastTopSpacing +\n            this.dimensions.sidebarHeight\n          );\n        }\n\n        /**\n         * Observe browser scrolling direction top and down.\n         */\n        observeScrollDir(){\n          var dims = this.dimensions;\n          if( dims.lastViewportTop === dims.viewportTop ) return;\n\n          var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n          // If the browser is scrolling not in the same direction.\n          if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n            this.direction = 'down' === this.direction ?  'up' : 'down';\n        }\n\n        /**\n         * Gets affix type of sidebar according to current scroll top and scrolling direction.\n         * @public\n         * @return {String|False} - Proper affix type.\n         */\n        getAffixType(){\n          this._calcDimensionsWithScroll();\n          var dims = this.dimensions;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var affixType = this.affixedType;\n\n         if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n            dims.translateY = 0;\n            affixType = 'STATIC';\n          } else {\n            affixType = ( 'up' === this.direction ) ?\n              this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n          }\n\n          // Make sure the translate Y is not bigger than container height.\n          dims.translateY = Math.max(0, dims.translateY);\n          dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n          dims.translateY = Math.round(dims.translateY);\n\n          dims.lastViewportTop = dims.viewportTop;\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling down.\n         * @private\n         * @return {String} - Proper affix type of scrolling down direction.\n         */\n        _getAffixTypeScrollingDown(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( this.isSidebarFitsViewport() ){\n            if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( colliderTop >= dims.containerTop ){\n              dims.translateY = colliderTop - dims.containerTop;\n              affixType = 'VIEWPORT-TOP';\n            }\n          } else {\n            if( dims.containerBottom <= colliderBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n              dims.translateY = colliderBottom - sidebarBottom;\n              affixType = 'VIEWPORT-BOTTOM';\n\n            } else if( dims.containerTop + dims.translateY <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling up.\n         * @private\n         * @return {String} - Proper affix type of scrolling up direction.\n         */\n        _getAffixTypeScrollingUp(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( colliderTop <= dims.translateY + dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n\n          } else if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( ! this.isSidebarFitsViewport() ){\n\n            if( dims.containerTop <= colliderTop &&\n                (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Gets inline style of sticky sidebar wrapper and inner wrapper according\n         * to its affix type.\n         * @private\n         * @param {String} affixType - Affix type of sticky sidebar.\n         * @return {Object}\n         */\n        _getStyle(affixType){\n          if( 'undefined' === typeof affixType ) return;\n\n          var style = {inner: {}, outer: {}};\n          var dims = this.dimensions;\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n              style.inner = {position: 'fixed', top: dims.topSpacing,\n                    left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n              break;\n            case 'VIEWPORT-BOTTOM':\n              style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                    bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n              break;\n            case 'CONTAINER-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n              let translate = this._getTranslate(0, dims.translateY + 'px');\n\n              if( translate )\n                style.inner = {transform: translate};\n              else\n                style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n              break;\n          }\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n            case 'VIEWPORT-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n            case 'CONTAINER-BOTTOM':\n              style.outer = {height: dims.sidebarHeight, position: 'relative'};\n              break;\n          }\n\n          style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n          style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n              bottom: '', width: '',  transform: ''}, style.inner);\n\n          return style;\n        }\n\n        /**\n         * Cause the sidebar to be sticky according to affix type by adding inline\n         * style, adding helper class and trigger events.\n         * @function\n         * @protected\n         * @param {string} force - Update sticky sidebar position by force.\n         */\n        stickyPosition(force){\n          if( this._breakpoint ) return;\n\n          force = this._reStyle || force || false;\n\n          this.options.topSpacing;\n          this.options.bottomSpacing;\n\n          var affixType = this.getAffixType();\n          var style = this._getStyle(affixType);\n\n          if( (this.affixedType != affixType || force) && affixType ){\n            let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n            if( 'STATIC' === affixType )\n              StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            else\n              StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n            for( let key in style.outer ){\n              let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n              this.sidebar.style[key] = style.outer[key] + unit;\n            }\n\n            for( let key in style.inner ){\n              let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n              this.sidebarInner.style[key] = style.inner[key] + unit;\n            }\n\n            let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n          } else {\n            if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n          }\n\n          this.affixedType = affixType;\n        }\n\n        /**\n         * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n         * @protected\n         */\n        _widthBreakpoint(){\n\n          if( window.innerWidth <= this.options.minWidth ){\n            this._breakpoint = true;\n            this.affixedType = 'STATIC';\n\n            this.sidebar.removeAttribute('style');\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            this.sidebarInner.removeAttribute('style');\n          } else {\n            this._breakpoint = false;\n          }\n        }\n\n        /**\n         * Switches between functions stack for each event type, if there's no\n         * event, it will re-initialize sticky sidebar.\n         * @public\n         */\n        updateSticky(event = {}){\n          if( this._running ) return;\n          this._running = true;\n\n          ((eventType) => {\n            requestAnimationFrame(() => {\n              switch( eventType ){\n                // When browser is scrolling and re-calculate just dimensions\n                // within scroll.\n                case 'scroll':\n                  this._calcDimensionsWithScroll();\n                  this.observeScrollDir();\n                  this.stickyPosition();\n                  break;\n\n                // When browser is resizing or there's no event, observe width\n                // breakpoint and re-calculate dimensions.\n                case 'resize':\n                default:\n                  this._widthBreakpoint();\n                  this.calcDimensions();\n                  this.stickyPosition(true);\n                  break;\n              }\n              this._running = false;\n            });\n          })(event.type);\n        }\n\n        /**\n         * Set browser support features to the public property.\n         * @private\n         */\n        _setSupportFeatures(){\n          var support = this.support;\n\n          support.transform = StickySidebar.supportTransform();\n          support.transform3d = StickySidebar.supportTransform(true);\n        }\n\n        /**\n         * Get translate value, if the browser supports transfrom3d, it will adopt it.\n         * and the same with translate. if browser doesn't support both return false.\n         * @param {Number} y - Value of Y-axis.\n         * @param {Number} x - Value of X-axis.\n         * @param {Number} z - Value of Z-axis.\n         * @return {String|False}\n         */\n        _getTranslate(y = 0, x = 0, z = 0){\n          if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n          else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n          else return false;\n        }\n\n        /**\n         * Destroy sticky sidebar plugin.\n         * @public\n         */\n        destroy(){\n          window.removeEventListener('resize', this, {capture: false});\n          window.removeEventListener('scroll', this, {capture: false});\n\n          this.sidebar.classList.remove(this.options.stickyClass);\n          this.sidebar.style.minHeight = '';\n\n          this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n          var styleReset = {inner: {}, outer: {}};\n\n          styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n          styleReset.outer = {height: '', position: ''};\n\n          for( let key in styleReset.outer )\n            this.sidebar.style[key] = styleReset.outer[key];\n\n          for( let key in styleReset.inner )\n            this.sidebarInner.style[key] = styleReset.inner[key];\n\n          if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n            ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n            ResizeSensor.detach(this.container, this.handleEvent);\n          }\n        }\n\n        /**\n         * Determine if the browser supports CSS transform feature.\n         * @function\n         * @static\n         * @param {Boolean} transform3d - Detect transform with translate3d.\n         * @return {String}\n         */\n        static supportTransform(transform3d){\n          var result = false,\n              property = (transform3d) ? 'perspective' : 'transform',\n              upper = property.charAt(0).toUpperCase() + property.slice(1),\n              prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n              support = document.createElement('support'),\n              style = support.style;\n\n          (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n            if (style[property] !== undefined) {\n              result = property;\n              return false;\n            }\n          });\n          return result;\n        }\n\n        /**\n         * Trigger custom event.\n         * @static\n         * @param {DOMObject} element - Target element on the DOM.\n         * @param {String} eventName - Event name.\n         * @param {Object} data -\n         */\n        static eventTrigger(element, eventName, data){\n          try{\n            var event = new CustomEvent(eventName, {detail: data});\n          } catch(e){\n            var event = document.createEvent('CustomEvent');\n            event.initCustomEvent(eventName, true, true, data);\n          }\n          element.dispatchEvent(event);\n        }\n\n        /**\n         * Extend options object with defaults.\n         * @function\n         * @static\n         */\n        static extend(defaults, options){\n          var results = {};\n          for( let key in defaults ){\n            if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n            else results[key] = defaults[key];\n          }\n          return results;\n        }\n\n        /**\n         * Get current coordinates left and top of specific element.\n         * @static\n         */\n        static offsetRelative(element){\n          var result = {left: 0, top: 0};\n\n          do{\n            let offsetTop = element.offsetTop;\n            let offsetLeft = element.offsetLeft;\n\n            if( ! isNaN(offsetTop) )\n              result.top += offsetTop;\n\n            if( ! isNaN(offsetLeft) )\n              result.left += offsetLeft;\n\n            element = ( 'BODY' === element.tagName ) ?\n                        element.parentElement : element.offsetParent;\n          } while(element)\n          return result;\n        }\n\n        /**\n         * Add specific class name to specific element.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static addClass(element, className){\n          if( ! StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.add(className);\n            else\n              element.className += ' ' + className;\n          }\n        }\n\n        /**\n         * Remove specific class name to specific element\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static removeClass(element, className){\n          if( StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.remove(className);\n            else\n              element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n          }\n        }\n\n        /**\n         * Determine weather the element has specific class name.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static hasClass(element, className){\n          if (element.classList)\n            return element.classList.contains(className);\n          else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n\n        /**\n         * Gets default values of configuration options.\n         * @static\n         * @return {Object}\n         */\n        static get defaults(){\n          return DEFAULTS;\n        }\n      }\n\n      return StickySidebar;\n    })();\n\n    // Global\n    // -------------------------\n    window.StickySidebar = StickySidebar;\n\n  if (document.querySelector('.sidebar')) {\n    new StickySidebar('.sidebar', {\n      containerSelector: '.layout',\n      innerWrapperSelector: '.sidebar__inner',\n      topSpacing: 30,\n      bottomSpacing: 20\n    });\n  }\n\n  var objectExtend = extend;\n\n  /*\n    var obj = {a: 3, b: 5};\n    extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 4, b: 5, c: 8}\n\n    var obj = {a: 3, b: 5};\n    extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 3, b: 5}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n    extend({a: 4, b: 5}); // {a: 4, b: 5}\n    extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n    extend({a: 4, b: 5}, true); {a: 4, b: 5}\n    extend('hello', {a: 4, b: 5}); // throws\n    extend(3, {a: 4, b: 5}); // throws\n  */\n\n  function extend(/* [deep], obj1, obj2, [objn] */) {\n    var args = [].slice.call(arguments);\n    var deep = false;\n    if (typeof args[0] == 'boolean') {\n      deep = args.shift();\n    }\n    var result = args[0];\n    if (isUnextendable(result)) {\n      throw new Error('extendee must be an object');\n    }\n    var extenders = args.slice(1);\n    var len = extenders.length;\n    for (var i = 0; i < len; i++) {\n      var extender = extenders[i];\n      for (var key in extender) {\n        if (Object.prototype.hasOwnProperty.call(extender, key)) {\n          var value = extender[key];\n          if (deep && isCloneable(value)) {\n            var base = Array.isArray(value) ? [] : {};\n            result[key] = extend(\n              true,\n              Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n                ? result[key]\n                : base,\n              value\n            );\n          } else {\n            result[key] = value;\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  function isCloneable(obj) {\n    return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n  }\n\n  function isUnextendable(val) {\n    return !val || (typeof val != 'object' && typeof val != 'function');\n  }\n\n  function $parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n  }\n\n  class $4040acfd8584338d$export$2e2bcd8739ae039 {\n      // Add an event listener for given event\n      on(event, fn) {\n          this._callbacks = this._callbacks || {\n          };\n          // Create namespace for this event\n          if (!this._callbacks[event]) this._callbacks[event] = [];\n          this._callbacks[event].push(fn);\n          return this;\n      }\n      emit(event, ...args) {\n          this._callbacks = this._callbacks || {\n          };\n          let callbacks = this._callbacks[event];\n          if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n          // trigger a corresponding DOM event\n          if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n              args: args\n          }));\n          return this;\n      }\n      makeEvent(eventName, detail) {\n          let params = {\n              bubbles: true,\n              cancelable: true,\n              detail: detail\n          };\n          if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n          else {\n              // IE 11 support\n              // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n              var evt = document.createEvent(\"CustomEvent\");\n              evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n              return evt;\n          }\n      }\n      // Remove event listener for given event. If fn is not provided, all event\n      // listeners for that event will be removed. If neither is provided, all\n      // event listeners will be removed.\n      off(event, fn) {\n          if (!this._callbacks || arguments.length === 0) {\n              this._callbacks = {\n              };\n              return this;\n          }\n          // specific event\n          let callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n          // remove all handlers\n          if (arguments.length === 1) {\n              delete this._callbacks[event];\n              return this;\n          }\n          // remove specific handler\n          for(let i = 0; i < callbacks.length; i++){\n              let callback = callbacks[i];\n              if (callback === fn) {\n                  callbacks.splice(i, 1);\n                  break;\n              }\n          }\n          return this;\n      }\n  }\n\n\n\n  var $fd6031f88dce2e32$exports = {};\n  $fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\n  let $4ca367182776f80b$var$defaultOptions = {\n      /**\n     * Has to be specified on elements other than form (or when the form doesn't\n     * have an `action` attribute).\n     *\n     * You can also provide a function that will be called with `files` and\n     * `dataBlocks`  and must return the url as string.\n     */ url: null,\n      /**\n     * Can be changed to `\"put\"` if necessary. You can also provide a function\n     * that will be called with `files` and must return the method (since `v3.12.0`).\n     */ method: \"post\",\n      /**\n     * Will be set on the XHRequest.\n     */ withCredentials: false,\n      /**\n     * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n     * If set to null or 0, no timeout is going to be set.\n     */ timeout: null,\n      /**\n     * How many file uploads to process in parallel (See the\n     * Enqueuing file uploads documentation section for more info)\n     */ parallelUploads: 2,\n      /**\n     * Whether to send multiple files in one request. If\n     * this it set to true, then the fallback file input element will\n     * have the `multiple` attribute as well. This option will\n     * also trigger additional events (like `processingmultiple`). See the events\n     * documentation section for more information.\n     */ uploadMultiple: false,\n      /**\n     * Whether you want files to be uploaded in chunks to your server. This can't be\n     * used in combination with `uploadMultiple`.\n     *\n     * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n     */ chunking: false,\n      /**\n     * If `chunking` is enabled, this defines whether **every** file should be chunked,\n     * even if the file size is below chunkSize. This means, that the additional chunk\n     * form data will be submitted and the `chunksUploaded` callback will be invoked.\n     */ forceChunking: false,\n      /**\n     * If `chunking` is `true`, then this defines the chunk size in bytes.\n     */ chunkSize: 2097152,\n      /**\n     * If `true`, the individual chunks of a file are being uploaded simultaneously.\n     */ parallelChunkUploads: false,\n      /**\n     * Whether a chunk should be retried if it fails.\n     */ retryChunks: false,\n      /**\n     * If `retryChunks` is true, how many times should it be retried.\n     */ retryChunksLimit: 3,\n      /**\n     * The maximum filesize (in MiB) that is allowed to be uploaded.\n     */ maxFilesize: 256,\n      /**\n     * The name of the file param that gets transferred.\n     * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n     * Dropzone will append `[]` to the name.\n     */ paramName: \"file\",\n      /**\n     * Whether thumbnails for images should be generated\n     */ createImageThumbnails: true,\n      /**\n     * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n     */ maxThumbnailFilesize: 10,\n      /**\n     * If `null`, the ratio of the image will be used to calculate it.\n     */ thumbnailWidth: 120,\n      /**\n     * The same as `thumbnailWidth`. If both are null, images will not be resized.\n     */ thumbnailHeight: 120,\n      /**\n     * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ thumbnailMethod: \"crop\",\n      /**\n     * If set, images will be resized to these dimensions before being **uploaded**.\n     * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n     * ratio of the file will be preserved.\n     *\n     * The `options.transformFile` function uses these options, so if the `transformFile` function\n     * is overridden, these options don't do anything.\n     */ resizeWidth: null,\n      /**\n     * See `resizeWidth`.\n     */ resizeHeight: null,\n      /**\n     * The mime type of the resized image (before it gets uploaded to the server).\n     * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n     * See `resizeWidth` for more information.\n     */ resizeMimeType: null,\n      /**\n     * The quality of the resized images. See `resizeWidth`.\n     */ resizeQuality: 0.8,\n      /**\n     * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ resizeMethod: \"contain\",\n      /**\n     * The base that is used to calculate the **displayed** filesize. You can\n     * change this to 1024 if you would rather display kibibytes, mebibytes,\n     * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n     * not `1 kilobyte`. You can change this to `1024` if you don't care about\n     * validity.\n     */ filesizeBase: 1000,\n      /**\n     * If not `null` defines how many files this Dropzone handles. If it exceeds,\n     * the event `maxfilesexceeded` will be called. The dropzone element gets the\n     * class `dz-max-files-reached` accordingly so you can provide visual\n     * feedback.\n     */ maxFiles: null,\n      /**\n     * An optional object to send additional headers to the server. Eg:\n     * `{ \"My-Awesome-Header\": \"header value\" }`\n     */ headers: null,\n      /**\n     * Should the default headers be set or not?\n     * Accept: application/json <- for requesting json response\n     * Cache-Control: no-cache <- Request shouldnt be cached\n     * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n     */ defaultHeaders: true,\n      /**\n     * If `true`, the dropzone element itself will be clickable, if `false`\n     * nothing will be clickable.\n     *\n     * You can also pass an HTML element, a CSS selector (for multiple elements)\n     * or an array of those. In that case, all of those elements will trigger an\n     * upload when clicked.\n     */ clickable: true,\n      /**\n     * Whether hidden files in directories should be ignored.\n     */ ignoreHiddenFiles: true,\n      /**\n     * The default implementation of `accept` checks the file's mime type or\n     * extension against this list. This is a comma separated list of mime\n     * types or file extensions.\n     *\n     * Eg.: `image/*,application/pdf,.psd`\n     *\n     * If the Dropzone is `clickable` this option will also be used as\n     * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n     * parameter on the hidden file input as well.\n     */ acceptedFiles: null,\n      /**\n     * **Deprecated!**\n     * Use acceptedFiles instead.\n     */ acceptedMimeTypes: null,\n      /**\n     * If false, files will be added to the queue but the queue will not be\n     * processed automatically.\n     * This can be useful if you need some additional user input before sending\n     * files (or if you want want all files sent at once).\n     * If you're ready to send the file simply call `myDropzone.processQueue()`.\n     *\n     * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n     * section for more information.\n     */ autoProcessQueue: true,\n      /**\n     * If false, files added to the dropzone will not be queued by default.\n     * You'll have to call `enqueueFile(file)` manually.\n     */ autoQueue: true,\n      /**\n     * If `true`, this will add a link to every file preview to remove or cancel (if\n     * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n     * and `dictRemoveFile` options are used for the wording.\n     */ addRemoveLinks: false,\n      /**\n     * Defines where to display the file previews – if `null` the\n     * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n     * selector. The element should have the `dropzone-previews` class so\n     * the previews are displayed properly.\n     */ previewsContainer: null,\n      /**\n     * Set this to `true` if you don't want previews to be shown.\n     */ disablePreviews: false,\n      /**\n     * This is the element the hidden input field (which is used when clicking on the\n     * dropzone to trigger file selection) will be appended to. This might\n     * be important in case you use frameworks to switch the content of your page.\n     *\n     * Can be a selector string, or an element directly.\n     */ hiddenInputContainer: \"body\",\n      /**\n     * If null, no capture type will be specified\n     * If camera, mobile devices will skip the file selection and choose camera\n     * If microphone, mobile devices will skip the file selection and choose the microphone\n     * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n     * On apple devices multiple must be set to false.  AcceptedFiles may need to\n     * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n     */ capture: null,\n      /**\n     * **Deprecated**. Use `renameFile` instead.\n     */ renameFilename: null,\n      /**\n     * A function that is invoked before the file is uploaded to the server and renames the file.\n     * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n     * file that gets used during the upload can be accessed through `file.upload.filename`.\n     */ renameFile: null,\n      /**\n     * If `true` the fallback will be forced. This is very useful to test your server\n     * implementations first and make sure that everything works as\n     * expected without dropzone if you experience problems, and to test\n     * how your fallbacks will look.\n     */ forceFallback: false,\n      /**\n     * The text used before any files are dropped.\n     */ dictDefaultMessage: \"Drop files here to upload\",\n      /**\n     * The text that replaces the default message text it the browser is not supported.\n     */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      /**\n     * The text that will be added before the fallback form.\n     * If you provide a  fallback element yourself, or if this option is `null` this will\n     * be ignored.\n     */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      /**\n     * If the filesize is too big.\n     * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n     */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      /**\n     * If the file doesn't match the file type.\n     */ dictInvalidFileType: \"You can't upload files of this type.\",\n      /**\n     * If the server response was invalid.\n     * `{{statusCode}}` will be replaced with the servers status code.\n     */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n     */ dictCancelUpload: \"Cancel upload\",\n      /**\n     * The text that is displayed if an upload was manually canceled\n     */ dictUploadCanceled: \"Upload canceled.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n     */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used to remove a file.\n     */ dictRemoveFile: \"Remove file\",\n      /**\n     * If this is not null, then the user will be prompted before removing a file.\n     */ dictRemoveFileConfirmation: null,\n      /**\n     * Displayed if `maxFiles` is st and exceeded.\n     * The string `{{maxFiles}}` will be replaced by the configuration value.\n     */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n      /**\n     * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n     * `b` for bytes.\n     */ dictFileSizeUnits: {\n          tb: \"TB\",\n          gb: \"GB\",\n          mb: \"MB\",\n          kb: \"KB\",\n          b: \"b\"\n      },\n      /**\n     * Called when dropzone initialized\n     * You can add event listeners here\n     */ init () {\n      },\n      /**\n     * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n     * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n     * of a function, this needs to return a map.\n     *\n     * The default implementation does nothing for normal uploads, but adds relevant information for\n     * chunked uploads.\n     *\n     * This is the same as adding hidden input fields in the form element.\n     */ params (files, xhr, chunk) {\n          if (chunk) return {\n              dzuuid: chunk.file.upload.uuid,\n              dzchunkindex: chunk.index,\n              dztotalfilesize: chunk.file.size,\n              dzchunksize: this.options.chunkSize,\n              dztotalchunkcount: chunk.file.upload.totalChunkCount,\n              dzchunkbyteoffset: chunk.index * this.options.chunkSize\n          };\n      },\n      /**\n     * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n     * and a `done` function as parameters.\n     *\n     * If the done function is invoked without arguments, the file is \"accepted\" and will\n     * be processed. If you pass an error message, the file is rejected, and the error\n     * message will be displayed.\n     * This function will not be called if the file is too big or doesn't match the mime types.\n     */ accept (file, done) {\n          return done();\n      },\n      /**\n     * The callback that will be invoked when all chunks have been uploaded for a file.\n     * It gets the file for which the chunks have been uploaded as the first parameter,\n     * and the `done` function as second. `done()` needs to be invoked when everything\n     * needed to finish the upload process is done.\n     */ chunksUploaded: function(file, done) {\n          done();\n      },\n      /**\n     * Sends the file as binary blob in body instead of form data.\n     * If this is set, the `params` option will be ignored.\n     * It's an error to set this to `true` along with `uploadMultiple` since\n     * multiple files cannot be in a single binary body.\n     */ binaryBody: false,\n      /**\n     * Gets called when the browser is not supported.\n     * The default implementation shows the fallback input field and adds\n     * a text.\n     */ fallback () {\n          // This code should pass in IE7... :(\n          let messageElement;\n          this.element.className = `${this.element.className} dz-browser-not-supported`;\n          for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n              messageElement = child;\n              child.className = \"dz-message\"; // Removes the 'dz-default' class\n              break;\n          }\n          if (!messageElement) {\n              messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n              this.element.appendChild(messageElement);\n          }\n          let span = messageElement.getElementsByTagName(\"span\")[0];\n          if (span) {\n              if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n              else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n          }\n          return this.element.appendChild(this.getFallbackForm());\n      },\n      /**\n     * Gets called to calculate the thumbnail dimensions.\n     *\n     * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n     *\n     *  - `srcWidth` & `srcHeight` (required)\n     *  - `trgWidth` & `trgHeight` (required)\n     *  - `srcX` & `srcY` (optional, default `0`)\n     *  - `trgX` & `trgY` (optional, default `0`)\n     *\n     * Those values are going to be used by `ctx.drawImage()`.\n     */ resize (file, width, height, resizeMethod) {\n          let info = {\n              srcX: 0,\n              srcY: 0,\n              srcWidth: file.width,\n              srcHeight: file.height\n          };\n          let srcRatio = file.width / file.height;\n          // Automatically calculate dimensions if not specified\n          if (width == null && height == null) {\n              width = info.srcWidth;\n              height = info.srcHeight;\n          } else if (width == null) width = height * srcRatio;\n          else if (height == null) height = width / srcRatio;\n          // Make sure images aren't upscaled\n          width = Math.min(width, info.srcWidth);\n          height = Math.min(height, info.srcHeight);\n          let trgRatio = width / height;\n          if (info.srcWidth > width || info.srcHeight > height) {\n              // Image is bigger and needs rescaling\n              if (resizeMethod === \"crop\") {\n                  if (srcRatio > trgRatio) {\n                      info.srcHeight = file.height;\n                      info.srcWidth = info.srcHeight * trgRatio;\n                  } else {\n                      info.srcWidth = file.width;\n                      info.srcHeight = info.srcWidth / trgRatio;\n                  }\n              } else if (resizeMethod === \"contain\") {\n                  // Method 'contain'\n                  if (srcRatio > trgRatio) height = width / srcRatio;\n                  else width = height * srcRatio;\n              } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n          }\n          info.srcX = (file.width - info.srcWidth) / 2;\n          info.srcY = (file.height - info.srcHeight) / 2;\n          info.trgWidth = width;\n          info.trgHeight = height;\n          return info;\n      },\n      /**\n     * Can be used to transform the file (for example, resize an image if necessary).\n     *\n     * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n     * images according to those dimensions.\n     *\n     * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n     * to be invoked with the file when the transformation is done.\n     */ transformFile (file, done) {\n          if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n          else return done(file);\n      },\n      /**\n     * A string that contains the template used for each dropped\n     * file. Change it to fulfill your needs but make sure to properly\n     * provide all elements.\n     *\n     * If you want to use an actual HTML element instead of providing a String\n     * as a config option, you could create a div with the id `tpl`,\n     * put the template inside it and provide the element like this:\n     *\n     *     document\n     *       .querySelector('#tpl')\n     *       .innerHTML\n     *\n     */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n      /*\n     Those functions register themselves to the events on init and handle all\n     the user interface specific stuff. Overwriting them won't break the upload\n     but can break the way it's displayed.\n     You can overwrite them if you don't like the default behavior. If you just\n     want to add an additional event handler, register it on the dropzone object\n     and don't overwrite those options.\n     */ // Those are self explanatory and simply concern the DragnDrop.\n      drop (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart (e) {\n      },\n      dragend (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste (e) {\n      },\n      // Called whenever there are no files left in the dropzone anymore, and the\n      // dropzone should be displayed as if in the initial state.\n      reset () {\n          return this.element.classList.remove(\"dz-started\");\n      },\n      // Called when a file is added to the queue\n      // Receives `file`\n      addedfile (file) {\n          if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n          if (this.previewsContainer && !this.options.disablePreviews) {\n              file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n              file.previewTemplate = file.previewElement; // Backwards compatibility\n              this.previewsContainer.appendChild(file.previewElement);\n              for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n              for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n              if (this.options.addRemoveLinks) {\n                  file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                  file.previewElement.appendChild(file._removeLink);\n              }\n              let removeFileEvent = (e)=>{\n                  e.preventDefault();\n                  e.stopPropagation();\n                  if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                  );\n                  else {\n                      if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                      );\n                      else return this.removeFile(file);\n                  }\n              };\n              for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n          }\n      },\n      // Called whenever a file is removed.\n      removedfile (file) {\n          if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n          return this._updateMaxFilesReachedClass();\n      },\n      // Called when a thumbnail has been generated\n      // Receives `file` and `dataUrl`\n      thumbnail (file, dataUrl) {\n          if (file.previewElement) {\n              file.previewElement.classList.remove(\"dz-file-preview\");\n              for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                  thumbnailElement.alt = file.name;\n                  thumbnailElement.src = dataUrl;\n              }\n              return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n              , 1);\n          }\n      },\n      // Called whenever an error occurs\n      // Receives `file` and `message`\n      error (file, message) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-error\");\n              if (typeof message !== \"string\" && message.error) message = message.error;\n              for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n          }\n      },\n      errormultiple () {\n      },\n      // Called when a file gets processed. Since there is a cue, not all added\n      // files are processed immediately.\n      // Receives `file`\n      processing (file) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-processing\");\n              if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n          }\n      },\n      processingmultiple () {\n      },\n      // Called whenever the upload progress gets updated.\n      // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n      // To get the total number of bytes of the file, use `file.size`\n      uploadprogress (file, progress, bytesSent) {\n          if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n      },\n      // Called whenever the total upload progress gets updated.\n      // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n      totaluploadprogress () {\n      },\n      // Called just before the file is sent. Gets the `xhr` object as second\n      // parameter, so you can modify it (for example to add a CSRF token) and a\n      // `formData` object to add additional information.\n      sending () {\n      },\n      sendingmultiple () {\n      },\n      // When the complete upload is finished and successful\n      // Receives `file`\n      success (file) {\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n      },\n      successmultiple () {\n      },\n      // When the upload is canceled.\n      canceled (file) {\n          return this.emit(\"error\", file, this.options.dictUploadCanceled);\n      },\n      canceledmultiple () {\n      },\n      // When the upload is finished, either with success or an error.\n      // Receives `file`\n      complete (file) {\n          if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n      },\n      completemultiple () {\n      },\n      maxfilesexceeded () {\n      },\n      maxfilesreached () {\n      },\n      queuecomplete () {\n      },\n      addedfiles () {\n      }\n  };\n  var $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\n  class $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n      static initClass() {\n          // Exposing the emitter class, mainly for tests\n          this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n          /*\n       This is a list of all available events you can register on a dropzone object.\n\n       You can register an event handler like this:\n\n       dropzone.on(\"dragEnter\", function() { });\n\n       */ this.prototype.events = [\n              \"drop\",\n              \"dragstart\",\n              \"dragend\",\n              \"dragenter\",\n              \"dragover\",\n              \"dragleave\",\n              \"addedfile\",\n              \"addedfiles\",\n              \"removedfile\",\n              \"thumbnail\",\n              \"error\",\n              \"errormultiple\",\n              \"processing\",\n              \"processingmultiple\",\n              \"uploadprogress\",\n              \"totaluploadprogress\",\n              \"sending\",\n              \"sendingmultiple\",\n              \"success\",\n              \"successmultiple\",\n              \"canceled\",\n              \"canceledmultiple\",\n              \"complete\",\n              \"completemultiple\",\n              \"reset\",\n              \"maxfilesexceeded\",\n              \"maxfilesreached\",\n              \"queuecomplete\", \n          ];\n          this.prototype._thumbnailQueue = [];\n          this.prototype._processingThumbnail = false;\n      }\n      // Returns all files that have been accepted\n      getAcceptedFiles() {\n          return this.files.filter((file)=>file.accepted\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that have been rejected\n      // Not sure when that's going to be useful, but added for completeness.\n      getRejectedFiles() {\n          return this.files.filter((file)=>!file.accepted\n          ).map((file)=>file\n          );\n      }\n      getFilesWithStatus(status) {\n          return this.files.filter((file)=>file.status === status\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that are in the queue\n      getQueuedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n      }\n      getUploadingFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n      }\n      getAddedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n      }\n      // Files that are either queued or uploading\n      getActiveFiles() {\n          return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n          ).map((file)=>file\n          );\n      }\n      // The function that gets called when Dropzone is initialized. You\n      // can (and should) setup event listeners inside this function.\n      init() {\n          // In case it isn't set already\n          if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n          if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n          if (this.clickableElements.length) {\n              let setupHiddenFileInput = ()=>{\n                  if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                  this.hiddenFileInput = document.createElement(\"input\");\n                  this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                  if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                  this.hiddenFileInput.className = \"dz-hidden-input\";\n                  if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                  if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                  // Making sure that no one can \"tab\" into this field.\n                  this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                  // Not setting `display=\"none\"` because some browsers don't accept clicks\n                  // on elements that aren't displayed.\n                  this.hiddenFileInput.style.visibility = \"hidden\";\n                  this.hiddenFileInput.style.position = \"absolute\";\n                  this.hiddenFileInput.style.top = \"0\";\n                  this.hiddenFileInput.style.left = \"0\";\n                  this.hiddenFileInput.style.height = \"0\";\n                  this.hiddenFileInput.style.width = \"0\";\n                  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                  this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                      let { files: files  } = this.hiddenFileInput;\n                      if (files.length) for (let file of files)this.addFile(file);\n                      this.emit(\"addedfiles\", files);\n                      setupHiddenFileInput();\n                  });\n              };\n              setupHiddenFileInput();\n          }\n          this.URL = window.URL !== null ? window.URL : window.webkitURL;\n          // Setup all event listeners on the Dropzone object itself.\n          // They're not in @setupEventListeners() because they shouldn't be removed\n          // again when the dropzone gets disabled.\n          for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n          this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n          );\n          // Emit a `queuecomplete` event if all files finished uploading.\n          this.on(\"complete\", (file)=>{\n              if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n              return setTimeout(()=>this.emit(\"queuecomplete\")\n              , 0);\n          });\n          const containsFiles = function(e) {\n              if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n              // IE, we need to iterate like this instead of\n              // using e.dataTransfer.types.some()\n              for(var i = 0; i < e.dataTransfer.types.length; i++){\n                  if (e.dataTransfer.types[i] === \"Files\") return true;\n              }\n              return false;\n          };\n          let noPropagation = function(e) {\n              // If there are no files, we don't want to stop\n              // propagation so we don't interfere with other\n              // drag and drop behaviour.\n              if (!containsFiles(e)) return;\n              e.stopPropagation();\n              if (e.preventDefault) return e.preventDefault();\n              else return e.returnValue = false;\n          };\n          // Create the listeners\n          this.listeners = [\n              {\n                  element: this.element,\n                  events: {\n                      dragstart: (e)=>{\n                          return this.emit(\"dragstart\", e);\n                      },\n                      dragenter: (e)=>{\n                          noPropagation(e);\n                          return this.emit(\"dragenter\", e);\n                      },\n                      dragover: (e)=>{\n                          // Makes it possible to drag files from chrome's download bar\n                          // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                          // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                          let efct;\n                          try {\n                              efct = e.dataTransfer.effectAllowed;\n                          } catch (error) {\n                          }\n                          e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                          noPropagation(e);\n                          return this.emit(\"dragover\", e);\n                      },\n                      dragleave: (e)=>{\n                          return this.emit(\"dragleave\", e);\n                      },\n                      drop: (e)=>{\n                          noPropagation(e);\n                          return this.drop(e);\n                      },\n                      dragend: (e)=>{\n                          return this.emit(\"dragend\", e);\n                      }\n                  }\n              }, \n          ];\n          this.clickableElements.forEach((clickableElement)=>{\n              return this.listeners.push({\n                  element: clickableElement,\n                  events: {\n                      click: (evt)=>{\n                          // Only the actual dropzone or the message element should trigger file selection\n                          if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                          return true;\n                      }\n                  }\n              });\n          });\n          this.enable();\n          return this.options.init.call(this);\n      }\n      // Not fully tested yet\n      destroy() {\n          this.disable();\n          this.removeAllFiles(true);\n          if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n              this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n              this.hiddenFileInput = null;\n          }\n          delete this.element.dropzone;\n          return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n      }\n      updateTotalUploadProgress() {\n          let totalUploadProgress;\n          let totalBytesSent = 0;\n          let totalBytes = 0;\n          let activeFiles = this.getActiveFiles();\n          if (activeFiles.length) {\n              for (let file of this.getActiveFiles()){\n                  totalBytesSent += file.upload.bytesSent;\n                  totalBytes += file.upload.total;\n              }\n              totalUploadProgress = 100 * totalBytesSent / totalBytes;\n          } else totalUploadProgress = 100;\n          return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n      }\n      // @options.paramName can be a function taking one parameter rather than a string.\n      // A parameter name for a file is obtained simply by calling this with an index number.\n      _getParamName(n) {\n          if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n          else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n      }\n      // If @options.renameFile is a function,\n      // the function will be used to rename the file.name before appending it to the formData\n      _renameFile(file) {\n          if (typeof this.options.renameFile !== \"function\") return file.name;\n          return this.options.renameFile(file);\n      }\n      // Returns a form that can be used as fallback if the browser does not support DragnDrop\n      //\n      // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n      // This code has to pass in IE7 :(\n      getFallbackForm() {\n          let existingFallback, form;\n          if (existingFallback = this.getExistingFallback()) return existingFallback;\n          let fieldsString = '<div class=\"dz-fallback\">';\n          if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n          fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n          let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n          if (this.element.tagName !== \"FORM\") {\n              form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n              form.appendChild(fields);\n          } else {\n              // Make sure that the enctype and method attributes are set properly\n              this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n              this.element.setAttribute(\"method\", this.options.method);\n          }\n          return form != null ? form : fields;\n      }\n      // Returns the fallback elements if they exist already\n      //\n      // This code has to pass in IE7 :(\n      getExistingFallback() {\n          let getFallback = function(elements) {\n              for (let el of elements){\n                  if (/(^| )fallback($| )/.test(el.className)) return el;\n              }\n          };\n          for (let tagName of [\n              \"div\",\n              \"form\"\n          ]){\n              var fallback;\n              if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n          }\n      }\n      // Activates all listeners stored in @listeners\n      setupEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.addEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Deactivates all listeners stored in @listeners\n      removeEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.removeEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Removes all event listeners and cancels all files in the queue or being processed.\n      disable() {\n          this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n          );\n          this.removeEventListeners();\n          this.disabled = true;\n          return this.files.map((file)=>this.cancelUpload(file)\n          );\n      }\n      enable() {\n          delete this.disabled;\n          this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n          );\n          return this.setupEventListeners();\n      }\n      // Returns a nicely formatted filesize\n      filesize(size) {\n          let selectedSize = 0;\n          let selectedUnit = \"b\";\n          if (size > 0) {\n              let units = [\n                  \"tb\",\n                  \"gb\",\n                  \"mb\",\n                  \"kb\",\n                  \"b\"\n              ];\n              for(let i = 0; i < units.length; i++){\n                  let unit = units[i];\n                  let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                  if (size >= cutoff) {\n                      selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                      selectedUnit = unit;\n                      break;\n                  }\n              }\n              selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n          }\n          return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n      }\n      // Adds or removes the `dz-max-files-reached` class from the form.\n      _updateMaxFilesReachedClass() {\n          if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n              return this.element.classList.add(\"dz-max-files-reached\");\n          } else return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n      drop(e) {\n          if (!e.dataTransfer) return;\n          this.emit(\"drop\", e);\n          // Convert the FileList to an Array\n          // This is necessary for IE11\n          let files = [];\n          for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n          // Even if it's a folder, files.length will contain the folders.\n          if (files.length) {\n              let { items: items  } = e.dataTransfer;\n              if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n              this._addFilesFromItems(items);\n              else this.handleFiles(files);\n          }\n          this.emit(\"addedfiles\", files);\n      }\n      paste(e) {\n          if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n          ) == null) return;\n          this.emit(\"paste\", e);\n          let { items: items  } = e.clipboardData;\n          if (items.length) return this._addFilesFromItems(items);\n      }\n      handleFiles(files) {\n          for (let file of files)this.addFile(file);\n      }\n      // When a folder is dropped (or files are pasted), items must be handled\n      // instead of files.\n      _addFilesFromItems(items) {\n          return (()=>{\n              let result = [];\n              for (let item of items){\n                  var entry;\n                  if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                      if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                      else if (entry.isDirectory) // Append all files from that directory to files\n                      result.push(this._addFilesFromDirectory(entry, entry.name));\n                      else result.push(undefined);\n                  } else if (item.getAsFile != null) {\n                      if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                      else result.push(undefined);\n                  } else result.push(undefined);\n              }\n              return result;\n          })();\n      }\n      // Goes through the directory, and adds each file it finds recursively\n      _addFilesFromDirectory(directory, path) {\n          let dirReader = directory.createReader();\n          let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n              )\n          ;\n          var readEntries = ()=>{\n              return dirReader.readEntries((entries)=>{\n                  if (entries.length > 0) {\n                      for (let entry of entries){\n                          if (entry.isFile) entry.file((file)=>{\n                              if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                              file.fullPath = `${path}/${file.name}`;\n                              return this.addFile(file);\n                          });\n                          else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                      }\n                      // Recursively call readEntries() again, since browser only handle\n                      // the first 100 entries.\n                      // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                      readEntries();\n                  }\n                  return null;\n              }, errorHandler);\n          };\n          return readEntries();\n      }\n      // If `done()` is called without argument the file is accepted\n      // If you call it with an error message, the file is rejected\n      // (This allows for asynchronous validation)\n      //\n      // This function checks the filesize, and if the file.type passes the\n      // `acceptedFiles` check.\n      accept(file, done) {\n          if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n          else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n          else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n              this.emit(\"maxfilesexceeded\", file);\n          } else this.options.accept.call(this, file, done);\n      }\n      addFile(file) {\n          file.upload = {\n              uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n              progress: 0,\n              // Setting the total upload size to file.size for the beginning\n              // It's actual different than the size to be transmitted.\n              total: file.size,\n              bytesSent: 0,\n              filename: this._renameFile(file)\n          };\n          this.files.push(file);\n          file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n          this.emit(\"addedfile\", file);\n          this._enqueueThumbnail(file);\n          this.accept(file, (error)=>{\n              if (error) {\n                  file.accepted = false;\n                  this._errorProcessing([\n                      file\n                  ], error); // Will set the file.status\n              } else {\n                  file.accepted = true;\n                  if (this.options.autoQueue) this.enqueueFile(file);\n                   // Will set .accepted = true\n              }\n              this._updateMaxFilesReachedClass();\n          });\n      }\n      // Wrapper for enqueueFile\n      enqueueFiles(files) {\n          for (let file of files)this.enqueueFile(file);\n          return null;\n      }\n      enqueueFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n              if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n              , 0); // Deferring the call\n          } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n      _enqueueThumbnail(file) {\n          if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n              this._thumbnailQueue.push(file);\n              return setTimeout(()=>this._processThumbnailQueue()\n              , 0); // Deferring the call\n          }\n      }\n      _processThumbnailQueue() {\n          if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n          this._processingThumbnail = true;\n          let file = this._thumbnailQueue.shift();\n          return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n              this.emit(\"thumbnail\", file, dataUrl);\n              this._processingThumbnail = false;\n              return this._processThumbnailQueue();\n          });\n      }\n      // Can be called by the user to remove a file\n      removeFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n          this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n          this.emit(\"removedfile\", file);\n          if (this.files.length === 0) return this.emit(\"reset\");\n      }\n      // Removes all files that aren't currently processed from the list\n      removeAllFiles(cancelIfNecessary) {\n          // Create a copy of files since removeFile() changes the @files array.\n          if (cancelIfNecessary == null) cancelIfNecessary = false;\n          for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n          return null;\n      }\n      // Resizes an image before it gets sent to the server. This function is the default behavior of\n      // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n      // the resized blob.\n      resizeImage(file, width, height, resizeMethod, callback) {\n          return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n              if (canvas == null) // The image has not been resized\n              return callback(file);\n              else {\n                  let { resizeMimeType: resizeMimeType  } = this.options;\n                  if (resizeMimeType == null) resizeMimeType = file.type;\n                  let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                  if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                  resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                  return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n              }\n          });\n      }\n      createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n          let fileReader = new FileReader();\n          fileReader.onload = ()=>{\n              file.dataURL = fileReader.result;\n              // Don't bother creating a thumbnail for SVG images since they're vector\n              if (file.type === \"image/svg+xml\") {\n                  if (callback != null) callback(fileReader.result);\n                  return;\n              }\n              this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n          };\n          fileReader.readAsDataURL(file);\n      }\n      // `mockFile` needs to have these attributes:\n      //\n      //     { name: 'name', size: 12345, imageUrl: '' }\n      //\n      // `callback` will be invoked when the image has been downloaded and displayed.\n      // `crossOrigin` will be added to the `img` tag when accessing the file.\n      displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n          this.emit(\"addedfile\", mockFile);\n          this.emit(\"complete\", mockFile);\n          if (!resizeThumbnail) {\n              this.emit(\"thumbnail\", mockFile, imageUrl);\n              if (callback) callback();\n          } else {\n              let onDone = (thumbnail)=>{\n                  this.emit(\"thumbnail\", mockFile, thumbnail);\n                  if (callback) callback();\n              };\n              mockFile.dataURL = imageUrl;\n              this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n          }\n      }\n      createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n          // Not using `new Image` here because of a bug in latest Chrome versions.\n          // See https://github.com/enyo/dropzone/pull/226\n          let img = document.createElement(\"img\");\n          if (crossOrigin) img.crossOrigin = crossOrigin;\n          // fixOrientation is not needed anymore with browsers handling imageOrientation\n          fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n          img.onload = ()=>{\n              let loadExif = (callback)=>callback(1)\n              ;\n              if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                      return callback(EXIF.getTag(this, \"Orientation\"));\n                  })\n              ;\n              return loadExif((orientation)=>{\n                  file.width = img.width;\n                  file.height = img.height;\n                  let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                  let canvas = document.createElement(\"canvas\");\n                  let ctx = canvas.getContext(\"2d\");\n                  canvas.width = resizeInfo.trgWidth;\n                  canvas.height = resizeInfo.trgHeight;\n                  if (orientation > 4) {\n                      canvas.width = resizeInfo.trgHeight;\n                      canvas.height = resizeInfo.trgWidth;\n                  }\n                  switch(orientation){\n                      case 2:\n                          // horizontal flip\n                          ctx.translate(canvas.width, 0);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 3:\n                          // 180° rotate left\n                          ctx.translate(canvas.width, canvas.height);\n                          ctx.rotate(Math.PI);\n                          break;\n                      case 4:\n                          // vertical flip\n                          ctx.translate(0, canvas.height);\n                          ctx.scale(1, -1);\n                          break;\n                      case 5:\n                          // vertical flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.scale(1, -1);\n                          break;\n                      case 6:\n                          // 90° rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(0, -canvas.width);\n                          break;\n                      case 7:\n                          // horizontal flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(canvas.height, -canvas.width);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 8:\n                          // 90° rotate left\n                          ctx.rotate(-0.5 * Math.PI);\n                          ctx.translate(-canvas.height, 0);\n                          break;\n                  }\n                  // This is a bugfix for iOS' scaling bug.\n                  $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                  let thumbnail = canvas.toDataURL(\"image/png\");\n                  if (callback != null) return callback(thumbnail, canvas);\n              });\n          };\n          if (callback != null) img.onerror = callback;\n          return img.src = file.dataURL;\n      }\n      // Goes through the queue and processes files if there aren't too many already.\n      processQueue() {\n          let { parallelUploads: parallelUploads  } = this.options;\n          let processingLength = this.getUploadingFiles().length;\n          let i = processingLength;\n          // There are already at least as many files uploading than should be\n          if (processingLength >= parallelUploads) return;\n          let queuedFiles = this.getQueuedFiles();\n          if (!(queuedFiles.length > 0)) return;\n          if (this.options.uploadMultiple) // The files should be uploaded in one request\n          return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n          else while(i < parallelUploads){\n              if (!queuedFiles.length) return;\n               // Nothing left to process\n              this.processFile(queuedFiles.shift());\n              i++;\n          }\n      }\n      // Wrapper for `processFiles`\n      processFile(file) {\n          return this.processFiles([\n              file\n          ]);\n      }\n      // Loads the file, then calls finishedLoading()\n      processFiles(files) {\n          for (let file of files){\n              file.processing = true; // Backwards compatibility\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n              this.emit(\"processing\", file);\n          }\n          if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n          return this.uploadFiles(files);\n      }\n      _getFilesWithXhr(xhr) {\n          return this.files.filter((file)=>file.xhr === xhr\n          ).map((file)=>file\n          );\n      }\n      // Cancels the file upload and sets the status to CANCELED\n      // **if** the file is actually being uploaded.\n      // If it's still in the queue, the file is being removed from it and the status\n      // set to CANCELED.\n      cancelUpload(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n              let groupedFiles = this._getFilesWithXhr(file.xhr);\n              for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n              for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n          } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              this.emit(\"canceled\", file);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                  file\n              ]);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      resolveOption(option, ...args) {\n          if (typeof option === \"function\") return option.apply(this, args);\n          return option;\n      }\n      uploadFile(file) {\n          return this.uploadFiles([\n              file\n          ]);\n      }\n      uploadFiles(files) {\n          this._transformFiles(files, (transformedFiles)=>{\n              if (this.options.chunking) {\n                  // Chunking is not allowed to be used with `uploadMultiple` so we know\n                  // that there is only __one__file.\n                  let transformedFile = transformedFiles[0];\n                  files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                  files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n              }\n              if (files[0].upload.chunked) {\n                  // This file should be sent in chunks!\n                  // If the chunking option is set, we **know** that there can only be **one** file, since\n                  // uploadMultiple is not allowed with this option.\n                  let file = files[0];\n                  let transformedFile = transformedFiles[0];\n                  file.upload.chunks = [];\n                  let handleNextChunk = ()=>{\n                      let chunkIndex = 0;\n                      // Find the next item in file.upload.chunks that is not defined yet.\n                      while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                      // This means, that all chunks have already been started.\n                      if (chunkIndex >= file.upload.totalChunkCount) return;\n                      let start = chunkIndex * this.options.chunkSize;\n                      let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                      let dataBlock = {\n                          name: this._getParamName(0),\n                          data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                          filename: file.upload.filename,\n                          chunkIndex: chunkIndex\n                      };\n                      file.upload.chunks[chunkIndex] = {\n                          file: file,\n                          index: chunkIndex,\n                          dataBlock: dataBlock,\n                          status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                          progress: 0,\n                          retries: 0\n                      };\n                      this._uploadData(files, [\n                          dataBlock\n                      ]);\n                  };\n                  file.upload.finishedChunkUpload = (chunk, response)=>{\n                      let allFinished = true;\n                      chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                      // Clear the data from the chunk\n                      chunk.dataBlock = null;\n                      chunk.response = chunk.xhr.responseText;\n                      chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                      // Leaving this reference to xhr will cause memory leaks.\n                      chunk.xhr = null;\n                      for(let i = 0; i < file.upload.totalChunkCount; i++){\n                          if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                          if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                      }\n                      if (allFinished) this.options.chunksUploaded(file, ()=>{\n                          this._finished(files, response, null);\n                      });\n                  };\n                  if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                  else handleNextChunk();\n              } else {\n                  let dataBlocks = [];\n                  for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                      name: this._getParamName(i),\n                      data: transformedFiles[i],\n                      filename: files[i].upload.filename\n                  };\n                  this._uploadData(files, dataBlocks);\n              }\n          });\n      }\n      /// Returns the right chunk for given file and xhr\n      _getChunk(file, xhr) {\n          for(let i = 0; i < file.upload.totalChunkCount; i++){\n              if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n          }\n      }\n      // This function actually uploads the file(s) to the server.\n      //\n      //  If dataBlocks contains the actual data to upload (meaning, that this could\n      // either be transformed files, or individual chunks for chunked upload) then\n      // they will be used for the actual data to upload.\n      _uploadData(files, dataBlocks) {\n          let xhr = new XMLHttpRequest();\n          // Put the xhr object in the file objects to be able to reference it later.\n          for (let file of files)file.xhr = xhr;\n          if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n          // later, and found with _getChunk.\n          files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n          let method = this.resolveOption(this.options.method, files, dataBlocks);\n          let url = this.resolveOption(this.options.url, files, dataBlocks);\n          xhr.open(method, url, true);\n          // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n          let timeout = this.resolveOption(this.options.timeout, files);\n          if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n          // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n          xhr.withCredentials = !!this.options.withCredentials;\n          xhr.onload = (e)=>{\n              this._finishedUploading(files, xhr, e);\n          };\n          xhr.ontimeout = ()=>{\n              this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n          };\n          xhr.onerror = ()=>{\n              this._handleUploadError(files, xhr);\n          };\n          // Some browsers do not have the .upload property\n          let progressObj = xhr.upload != null ? xhr.upload : xhr;\n          progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n          ;\n          let headers = this.options.defaultHeaders ? {\n              Accept: \"application/json\",\n              \"Cache-Control\": \"no-cache\",\n              \"X-Requested-With\": \"XMLHttpRequest\"\n          } : {\n          };\n          if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n          if (this.options.headers) objectExtend(headers, this.options.headers);\n          for(let headerName in headers){\n              let headerValue = headers[headerName];\n              if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n          }\n          if (this.options.binaryBody) {\n              // Since the file is going to be sent as binary body, it doesn't make\n              // any sense to generate `FormData` for it.\n              for (let file of files)this.emit(\"sending\", file, xhr);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n              this.submitRequest(xhr, null, files);\n          } else {\n              let formData = new FormData();\n              // Adding all @options parameters\n              if (this.options.params) {\n                  let additionalParams = this.options.params;\n                  if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                  for(let key in additionalParams){\n                      let value = additionalParams[key];\n                      if (Array.isArray(value)) // The additional parameter contains an array,\n                      // so lets iterate over it to attach each value\n                      // individually.\n                      for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                      else formData.append(key, value);\n                  }\n              }\n              // Let the user add additional data if necessary\n              for (let file of files)this.emit(\"sending\", file, xhr, formData);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n              this._addFormElementData(formData);\n              // Finally add the files\n              // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n              for(let i = 0; i < dataBlocks.length; i++){\n                  let dataBlock = dataBlocks[i];\n                  formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n              }\n              this.submitRequest(xhr, formData, files);\n          }\n      }\n      // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n      _transformFiles(files, done) {\n          let transformedFiles = [];\n          // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n          let doneCounter = 0;\n          for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n              transformedFiles[i] = transformedFile;\n              if (++doneCounter === files.length) done(transformedFiles);\n          });\n      }\n      // Takes care of adding other input elements of the form to the AJAX request\n      _addFormElementData(formData) {\n          // Take care of other input elements\n          if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n              let inputName = input.getAttribute(\"name\");\n              let inputType = input.getAttribute(\"type\");\n              if (inputType) inputType = inputType.toLowerCase();\n              // If the input doesn't have a name, we can't use it.\n              if (typeof inputName === \"undefined\" || inputName === null) continue;\n              if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                  // Possibly multiple values\n                  for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n              } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n          }\n      }\n      // Invoked when there is new progress information about given files.\n      // If e is not provided, it is assumed that the upload is finished.\n      _updateFilesUploadProgress(files, xhr, e) {\n          if (!files[0].upload.chunked) // Handle file uploads without chunking\n          for (let file of files){\n              if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n              if (e) {\n                  file.upload.progress = 100 * e.loaded / e.total;\n                  file.upload.total = e.total;\n                  file.upload.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  file.upload.progress = 100;\n                  file.upload.bytesSent = file.upload.total;\n              }\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n          else {\n              // Handle chunked file uploads\n              // Chunked upload is not compatible with uploading multiple files in one\n              // request, so we know there's only one file.\n              let file = files[0];\n              // Since this is a chunked upload, we need to update the appropriate chunk\n              // progress.\n              let chunk = this._getChunk(file, xhr);\n              if (e) {\n                  chunk.progress = 100 * e.loaded / e.total;\n                  chunk.total = e.total;\n                  chunk.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  chunk.progress = 100;\n                  chunk.bytesSent = chunk.total;\n              }\n              // Now tally the *file* upload progress from its individual chunks\n              file.upload.progress = 0;\n              file.upload.total = 0;\n              file.upload.bytesSent = 0;\n              for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                  file.upload.progress += file.upload.chunks[i].progress;\n                  file.upload.total += file.upload.chunks[i].total;\n                  file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n              }\n              // Since the process is a percentage, we need to divide by the amount of\n              // chunks we've used.\n              file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n      }\n      _finishedUploading(files, xhr, e) {\n          let response;\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (xhr.readyState !== 4) return;\n          if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n              response = xhr.responseText;\n              if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                  response = JSON.parse(response);\n              } catch (error) {\n                  e = error;\n                  response = \"Invalid JSON response from server.\";\n              }\n          }\n          this._updateFilesUploadProgress(files, xhr);\n          if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n          else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n          else this._finished(files, response, e);\n      }\n      _handleUploadError(files, xhr, response) {\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (files[0].upload.chunked && this.options.retryChunks) {\n              let chunk = this._getChunk(files[0], xhr);\n              if ((chunk.retries++) < this.options.retryChunksLimit) {\n                  this._uploadData(files, [\n                      chunk.dataBlock\n                  ]);\n                  return;\n              } else console.warn(\"Retried this chunk too often. Giving up.\");\n          }\n          this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n      }\n      submitRequest(xhr, formData, files) {\n          if (xhr.readyState != 1) {\n              console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n              return;\n          }\n          if (this.options.binaryBody) {\n              if (files[0].upload.chunked) {\n                  const chunk = this._getChunk(files[0], xhr);\n                  xhr.send(chunk.dataBlock.data);\n              } else xhr.send(files[0]);\n          } else xhr.send(formData);\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _finished(files, responseText, e) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n              this.emit(\"success\", file, responseText, e);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"successmultiple\", files, responseText, e);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _errorProcessing(files, message, xhr) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n              this.emit(\"error\", file, message, xhr);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"errormultiple\", files, message, xhr);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      static uuidv4() {\n          return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n              let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n              return v.toString(16);\n          });\n      }\n      constructor(el, options){\n          super();\n          let fallback, left;\n          this.element = el;\n          this.clickableElements = [];\n          this.listeners = [];\n          this.files = []; // All files\n          if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n          // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n          if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n          if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n          // Now add this dropzone to the instances.\n          $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n          // Put the dropzone inside the element itself.\n          this.element.dropzone = this;\n          let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n          };\n          this.options = objectExtend(true, {\n          }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n          });\n          this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n          // If the browser failed, just call the fallback and leave\n          if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n          // @options.url = @element.getAttribute \"action\" unless @options.url?\n          if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n          if (!this.options.url) throw new Error(\"No URL provided.\");\n          if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n          if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n          if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n          // Backwards compatibility\n          if (this.options.acceptedMimeTypes) {\n              this.options.acceptedFiles = this.options.acceptedMimeTypes;\n              delete this.options.acceptedMimeTypes;\n          }\n          // Backwards compatibility\n          if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n          ;\n          if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n          if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n          fallback.parentNode.removeChild(fallback);\n          // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n          if (this.options.previewsContainer !== false) {\n              if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n              else this.previewsContainer = this.element;\n          }\n          if (this.options.clickable) {\n              if (this.options.clickable === true) this.clickableElements = [\n                  this.element\n              ];\n              else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n          }\n          this.init();\n      }\n  }\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n  // This is a map of options for your different dropzones. Add configurations\n  // to this object for your different dropzone elemens.\n  //\n  // Example:\n  //\n  //     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n  //\n  // And in html:\n  //\n  //     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n  };\n  // Returns the options for an element or undefined if none available.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n      // Get the `Dropzone.options.elementId` for this element if it exists\n      if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n      else return undefined;\n  };\n  // Holds a list of all dropzone instances\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n  // Returns the dropzone for given element if any\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n      if (typeof element === \"string\") element = document.querySelector(element);\n      if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n      return element.dropzone;\n  };\n  // Looks for all .dropzone elements and creates a dropzone for them\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n      let dropzones;\n      if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n      else {\n          dropzones = [];\n          // IE :(\n          let checkElements = (elements)=>(()=>{\n                  let result = [];\n                  for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                  else result.push(undefined);\n                  return result;\n              })()\n          ;\n          checkElements(document.getElementsByTagName(\"div\"));\n          checkElements(document.getElementsByTagName(\"form\"));\n      }\n      return (()=>{\n          let result = [];\n          for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n          if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n          else result.push(undefined);\n          return result;\n      })();\n  };\n  // Some browsers support drag and drog functionality, but not correctly.\n  //\n  // So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n  // But what to do when browsers *theoretically* support an API, but crash\n  // when using it.\n  //\n  // This is a list of regular expressions tested against navigator.userAgent\n  //\n  // ** It should only be used on browser that *do* support the API, but\n  // incorrectly **\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n      // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n      /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n  ];\n  // Checks if the browser is supported\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n      let capableBrowser = true;\n      if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n          if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n          else {\n              if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n              // configuration.\n              $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n              // The browser supports the API, but may be blocked.\n              for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                  capableBrowser = false;\n                  continue;\n              }\n          }\n      } else capableBrowser = false;\n      return capableBrowser;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n      // convert base64 to raw binary data held in a string\n      // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n      let byteString = atob(dataURI.split(\",\")[1]);\n      // separate out the mime component\n      let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n      // write the bytes of the string to an ArrayBuffer\n      let ab = new ArrayBuffer(byteString.length);\n      let ia = new Uint8Array(ab);\n      for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n      // write the ArrayBuffer to a blob\n      return new Blob([\n          ab\n      ], {\n          type: mimeString\n      });\n  };\n  // Returns an array without the rejected item\n  const $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n      ).map((item)=>item\n      )\n  ;\n  // abc-def_ghi -> abcDefGhi\n  const $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n      )\n  ;\n  // Creates an element from string\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n      let div = document.createElement(\"div\");\n      div.innerHTML = string;\n      return div.childNodes[0];\n  };\n  // Tests if given element is inside (or simply is) the container\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n      if (element === container) return true;\n       // Coffeescript doesn't support do/while loops\n      while(element = element.parentNode){\n          if (element === container) return true;\n      }\n      return false;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n      let element;\n      if (typeof el === \"string\") element = document.querySelector(el);\n      else if (el.nodeType != null) element = el;\n      if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n      return element;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n      let el, elements;\n      if (els instanceof Array) {\n          elements = [];\n          try {\n              for (el of els)elements.push(this.getElement(el, name));\n          } catch (e) {\n              elements = null;\n          }\n      } else if (typeof els === \"string\") {\n          elements = [];\n          for (el of document.querySelectorAll(els))elements.push(el);\n      } else if (els.nodeType != null) elements = [\n          els\n      ];\n      if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n      return elements;\n  };\n  // Asks the user the question and calls accepted or rejected accordingly\n  //\n  // The default implementation just uses `window.confirm` and then calls the\n  // appropriate callback.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n      if (window.confirm(question)) return accepted();\n      else if (rejected != null) return rejected();\n  };\n  // Validates the mime type like this:\n  //\n  // https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n      if (!acceptedFiles) return true;\n       // If there are no accepted mime types, it's OK\n      acceptedFiles = acceptedFiles.split(\",\");\n      let mimeType = file.type;\n      let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n      for (let validType of acceptedFiles){\n          validType = validType.trim();\n          if (validType.charAt(0) === \".\") {\n              if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n          } else if (/\\/\\*$/.test(validType)) {\n              // This is something like a image/* mime type\n              if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n          } else {\n              if (mimeType === validType) return true;\n          }\n      }\n      return false;\n  };\n  // Augment jQuery\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n          return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n      });\n  };\n  // Dropzone file status codes\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n  // For backwards compatibility. Now, if a file is accepted, it's either queued\n  // or uploading.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n  /*\n\n   Bugfix for iOS 6 and 7\n   Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n   based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n   */ // Detecting vertical squash in loaded image.\n  // Fixes a bug which squash image vertically while drawing into canvas for some images.\n  // This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n  let $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n      img.naturalWidth;\n      let ih = img.naturalHeight;\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = ih;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n      // search image edge pixel position in case it is squashed vertically.\n      let sy = 0;\n      let ey = ih;\n      let py = ih;\n      while(py > sy){\n          let alpha = data[(py - 1) * 4 + 3];\n          if (alpha === 0) ey = py;\n          else sy = py;\n          py = ey + sy >> 1;\n      }\n      let ratio = py / ih;\n      if (ratio === 0) return 1;\n      else return ratio;\n  };\n  // A replacement for context.drawImage\n  // (args are for source and destination).\n  var $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n      return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n  // Based on MinifyJpeg\n  // Source: http://www.perry.cz/files/ExifRestorer.js\n  // http://elicon.blog57.fc2.com/blog-entry-206.html\n  class $3ed269f2f0fb224b$var$ExifRestore {\n      static initClass() {\n          this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      }\n      static encode64(input) {\n          let output = \"\";\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          while(true){\n              chr1 = input[i++];\n              chr2 = input[i++];\n              chr3 = input[i++];\n              enc1 = chr1 >> 2;\n              enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n              enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n              enc4 = chr3 & 63;\n              if (isNaN(chr2)) enc3 = enc4 = 64;\n              else if (isNaN(chr3)) enc4 = 64;\n              output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return output;\n      }\n      static restore(origFileBase64, resizedFileBase64) {\n          if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n          let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n          let segments = this.slice2Segments(rawImage);\n          let image = this.exifManipulation(resizedFileBase64, segments);\n          return `data:image/jpeg;base64,${this.encode64(image)}`;\n      }\n      static exifManipulation(resizedFileBase64, segments) {\n          let exifArray = this.getExifArray(segments);\n          let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n          let aBuffer = new Uint8Array(newImageArray);\n          return aBuffer;\n      }\n      static getExifArray(segments) {\n          let seg = undefined;\n          let x = 0;\n          while(x < segments.length){\n              seg = segments[x];\n              if (seg[0] === 255 & seg[1] === 225) return seg;\n              x++;\n          }\n          return [];\n      }\n      static insertExif(resizedFileBase64, exifArray) {\n          let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n          let buf = this.decode64(imageData);\n          let separatePoint = buf.indexOf(255, 3);\n          let mae = buf.slice(0, separatePoint);\n          let ato = buf.slice(separatePoint);\n          let array = mae;\n          array = array.concat(exifArray);\n          array = array.concat(ato);\n          return array;\n      }\n      static slice2Segments(rawImageArray) {\n          let head = 0;\n          let segments = [];\n          while(true){\n              var length;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n              else {\n                  length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                  let endPoint = head + length + 2;\n                  let seg = rawImageArray.slice(head, endPoint);\n                  segments.push(seg);\n                  head = endPoint;\n              }\n              if (head > rawImageArray.length) break;\n          }\n          return segments;\n      }\n      static decode64(input) {\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          let buf = [];\n          // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n          let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n          if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n          input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n          while(true){\n              enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n              chr1 = enc1 << 2 | enc2 >> 4;\n              chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n              chr3 = (enc3 & 3) << 6 | enc4;\n              buf.push(chr1);\n              if (enc3 !== 64) buf.push(chr2);\n              if (enc4 !== 64) buf.push(chr3);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return buf;\n      }\n  }\n  $3ed269f2f0fb224b$var$ExifRestore.initClass();\n  function $3ed269f2f0fb224b$var$__guard__(value, transform) {\n      return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n  }\n  function $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n      if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n      else return undefined;\n  }\n\n  if (document.querySelector('div.form__dropzone')) {\n    new $3ed269f2f0fb224b$export$2e2bcd8739ae039(\"div.form__dropzone\", {\n      url: \"/file/post\",\n      createImageThumbnails: false,\n      dictDefaultMessage: 'Here'\n    });\n  }\n\n  const HOOKS = [\n      \"onChange\",\n      \"onClose\",\n      \"onDayCreate\",\n      \"onDestroy\",\n      \"onKeyDown\",\n      \"onMonthChange\",\n      \"onOpen\",\n      \"onParseConfig\",\n      \"onReady\",\n      \"onValueUpdate\",\n      \"onYearChange\",\n      \"onPreCalendarPosition\",\n  ];\n  const defaults = {\n      _disable: [],\n      allowInput: false,\n      allowInvalidPreload: false,\n      altFormat: \"F j, Y\",\n      altInput: false,\n      altInputClass: \"form-control input\",\n      animate: typeof window === \"object\" &&\n          window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n      ariaDateFormat: \"F j, Y\",\n      autoFillDefaultTime: true,\n      clickOpens: true,\n      closeOnSelect: true,\n      conjunction: \", \",\n      dateFormat: \"Y-m-d\",\n      defaultHour: 12,\n      defaultMinute: 0,\n      defaultSeconds: 0,\n      disable: [],\n      disableMobile: false,\n      enableSeconds: false,\n      enableTime: false,\n      errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n      getWeek: (givenDate) => {\n          const date = new Date(givenDate.getTime());\n          date.setHours(0, 0, 0, 0);\n          date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n          var week1 = new Date(date.getFullYear(), 0, 4);\n          return (1 +\n              Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                  3 +\n                  ((week1.getDay() + 6) % 7)) /\n                  7));\n      },\n      hourIncrement: 1,\n      ignoredFocusElements: [],\n      inline: false,\n      locale: \"default\",\n      minuteIncrement: 5,\n      mode: \"single\",\n      monthSelectorType: \"dropdown\",\n      nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n      noCalendar: false,\n      now: new Date(),\n      onChange: [],\n      onClose: [],\n      onDayCreate: [],\n      onDestroy: [],\n      onKeyDown: [],\n      onMonthChange: [],\n      onOpen: [],\n      onParseConfig: [],\n      onReady: [],\n      onValueUpdate: [],\n      onYearChange: [],\n      onPreCalendarPosition: [],\n      plugins: [],\n      position: \"auto\",\n      positionElement: undefined,\n      prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n      shorthandCurrentMonth: false,\n      showMonths: 1,\n      static: false,\n      time_24hr: false,\n      weekNumbers: false,\n      wrap: false,\n  };\n\n  const english = {\n      weekdays: {\n          shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n          longhand: [\n              \"Sunday\",\n              \"Monday\",\n              \"Tuesday\",\n              \"Wednesday\",\n              \"Thursday\",\n              \"Friday\",\n              \"Saturday\",\n          ],\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"May\",\n              \"Jun\",\n              \"Jul\",\n              \"Aug\",\n              \"Sep\",\n              \"Oct\",\n              \"Nov\",\n              \"Dec\",\n          ],\n          longhand: [\n              \"January\",\n              \"February\",\n              \"March\",\n              \"April\",\n              \"May\",\n              \"June\",\n              \"July\",\n              \"August\",\n              \"September\",\n              \"October\",\n              \"November\",\n              \"December\",\n          ],\n      },\n      daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n      firstDayOfWeek: 0,\n      ordinal: (nth) => {\n          const s = nth % 100;\n          if (s > 3 && s < 21)\n              return \"th\";\n          switch (s % 10) {\n              case 1:\n                  return \"st\";\n              case 2:\n                  return \"nd\";\n              case 3:\n                  return \"rd\";\n              default:\n                  return \"th\";\n          }\n      },\n      rangeSeparator: \" to \",\n      weekAbbreviation: \"Wk\",\n      scrollTitle: \"Scroll to increment\",\n      toggleTitle: \"Click to toggle\",\n      amPM: [\"AM\", \"PM\"],\n      yearAriaLabel: \"Year\",\n      monthAriaLabel: \"Month\",\n      hourAriaLabel: \"Hour\",\n      minuteAriaLabel: \"Minute\",\n      time_24hr: false,\n  };\n\n  const pad = (number, length = 2) => `000${number}`.slice(length * -1);\n  const int = (bool) => (bool === true ? 1 : 0);\n  function debounce(fn, wait) {\n      let t;\n      return function () {\n          clearTimeout(t);\n          t = setTimeout(() => fn.apply(this, arguments), wait);\n      };\n  }\n  const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n\n  function toggleClass(elem, className, bool) {\n      if (bool === true)\n          return elem.classList.add(className);\n      elem.classList.remove(className);\n  }\n  function createElement(tag, className, content) {\n      const e = window.document.createElement(tag);\n      className = className || \"\";\n      content = content || \"\";\n      e.className = className;\n      if (content !== undefined)\n          e.textContent = content;\n      return e;\n  }\n  function clearNode(node) {\n      while (node.firstChild)\n          node.removeChild(node.firstChild);\n  }\n  function findParent(node, condition) {\n      if (condition(node))\n          return node;\n      else if (node.parentNode)\n          return findParent(node.parentNode, condition);\n      return undefined;\n  }\n  function createNumberInput(inputClassName, opts) {\n      const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n      if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n          numInput.type = \"number\";\n      }\n      else {\n          numInput.type = \"text\";\n          numInput.pattern = \"\\\\d*\";\n      }\n      if (opts !== undefined)\n          for (const key in opts)\n              numInput.setAttribute(key, opts[key]);\n      wrapper.appendChild(numInput);\n      wrapper.appendChild(arrowUp);\n      wrapper.appendChild(arrowDown);\n      return wrapper;\n  }\n  function getEventTarget(event) {\n      try {\n          if (typeof event.composedPath === \"function\") {\n              const path = event.composedPath();\n              return path[0];\n          }\n          return event.target;\n      }\n      catch (error) {\n          return event.target;\n      }\n  }\n\n  const doNothing = () => undefined;\n  const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n  const revFormat = {\n      D: doNothing,\n      F: function (dateObj, monthName, locale) {\n          dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n      },\n      G: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      H: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      J: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      K: (dateObj, amPM, locale) => {\n          dateObj.setHours((dateObj.getHours() % 12) +\n              12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n      },\n      M: function (dateObj, shortMonth, locale) {\n          dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n      },\n      S: (dateObj, seconds) => {\n          dateObj.setSeconds(parseFloat(seconds));\n      },\n      U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n      W: function (dateObj, weekNum, locale) {\n          const weekNumber = parseInt(weekNum);\n          const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n          date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n          return date;\n      },\n      Y: (dateObj, year) => {\n          dateObj.setFullYear(parseFloat(year));\n      },\n      Z: (_, ISODate) => new Date(ISODate),\n      d: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      h: (dateObj, hour) => {\n          dateObj.setHours(parseFloat(hour));\n      },\n      i: (dateObj, minutes) => {\n          dateObj.setMinutes(parseFloat(minutes));\n      },\n      j: (dateObj, day) => {\n          dateObj.setDate(parseFloat(day));\n      },\n      l: doNothing,\n      m: (dateObj, month) => {\n          dateObj.setMonth(parseFloat(month) - 1);\n      },\n      n: (dateObj, month) => {\n          dateObj.setMonth(parseFloat(month) - 1);\n      },\n      s: (dateObj, seconds) => {\n          dateObj.setSeconds(parseFloat(seconds));\n      },\n      u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n      w: doNothing,\n      y: (dateObj, year) => {\n          dateObj.setFullYear(2000 + parseFloat(year));\n      },\n  };\n  const tokenRegex = {\n      D: \"(\\\\w+)\",\n      F: \"(\\\\w+)\",\n      G: \"(\\\\d\\\\d|\\\\d)\",\n      H: \"(\\\\d\\\\d|\\\\d)\",\n      J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n      K: \"\",\n      M: \"(\\\\w+)\",\n      S: \"(\\\\d\\\\d|\\\\d)\",\n      U: \"(.+)\",\n      W: \"(\\\\d\\\\d|\\\\d)\",\n      Y: \"(\\\\d{4})\",\n      Z: \"(.+)\",\n      d: \"(\\\\d\\\\d|\\\\d)\",\n      h: \"(\\\\d\\\\d|\\\\d)\",\n      i: \"(\\\\d\\\\d|\\\\d)\",\n      j: \"(\\\\d\\\\d|\\\\d)\",\n      l: \"(\\\\w+)\",\n      m: \"(\\\\d\\\\d|\\\\d)\",\n      n: \"(\\\\d\\\\d|\\\\d)\",\n      s: \"(\\\\d\\\\d|\\\\d)\",\n      u: \"(.+)\",\n      w: \"(\\\\d\\\\d|\\\\d)\",\n      y: \"(\\\\d{2})\",\n  };\n  const formats = {\n      Z: (date) => date.toISOString(),\n      D: function (date, locale, options) {\n          return locale.weekdays.shorthand[formats.w(date, locale, options)];\n      },\n      F: function (date, locale, options) {\n          return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n      },\n      G: function (date, locale, options) {\n          return pad(formats.h(date, locale, options));\n      },\n      H: (date) => pad(date.getHours()),\n      J: function (date, locale) {\n          return locale.ordinal !== undefined\n              ? date.getDate() + locale.ordinal(date.getDate())\n              : date.getDate();\n      },\n      K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n      M: function (date, locale) {\n          return monthToStr(date.getMonth(), true, locale);\n      },\n      S: (date) => pad(date.getSeconds()),\n      U: (date) => date.getTime() / 1000,\n      W: function (date, _, options) {\n          return options.getWeek(date);\n      },\n      Y: (date) => pad(date.getFullYear(), 4),\n      d: (date) => pad(date.getDate()),\n      h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n      i: (date) => pad(date.getMinutes()),\n      j: (date) => date.getDate(),\n      l: function (date, locale) {\n          return locale.weekdays.longhand[date.getDay()];\n      },\n      m: (date) => pad(date.getMonth() + 1),\n      n: (date) => date.getMonth() + 1,\n      s: (date) => date.getSeconds(),\n      u: (date) => date.getTime(),\n      w: (date) => date.getDay(),\n      y: (date) => String(date.getFullYear()).substring(2),\n  };\n\n  const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n      const locale = overrideLocale || l10n;\n      if (config.formatDate !== undefined && !isMobile) {\n          return config.formatDate(dateObj, frmt, locale);\n      }\n      return frmt\n          .split(\"\")\n          .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n          ? formats[c](dateObj, locale, config)\n          : c !== \"\\\\\"\n              ? c\n              : \"\")\n          .join(\"\");\n  };\n  const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n      if (date !== 0 && !date)\n          return undefined;\n      const locale = customLocale || l10n;\n      let parsedDate;\n      const dateOrig = date;\n      if (date instanceof Date)\n          parsedDate = new Date(date.getTime());\n      else if (typeof date !== \"string\" &&\n          date.toFixed !== undefined)\n          parsedDate = new Date(date);\n      else if (typeof date === \"string\") {\n          const format = givenFormat || (config || defaults).dateFormat;\n          const datestr = String(date).trim();\n          if (datestr === \"today\") {\n              parsedDate = new Date();\n              timeless = true;\n          }\n          else if (/Z$/.test(datestr) ||\n              /GMT$/.test(datestr))\n              parsedDate = new Date(date);\n          else if (config && config.parseDate)\n              parsedDate = config.parseDate(date, format);\n          else {\n              parsedDate =\n                  !config || !config.noCalendar\n                      ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                      : new Date(new Date().setHours(0, 0, 0, 0));\n              let matched, ops = [];\n              for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                  const token = format[i];\n                  const isBackSlash = token === \"\\\\\";\n                  const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                  if (tokenRegex[token] && !escaped) {\n                      regexStr += tokenRegex[token];\n                      const match = new RegExp(regexStr).exec(date);\n                      if (match && (matched = true)) {\n                          ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                              fn: revFormat[token],\n                              val: match[++matchIndex],\n                          });\n                      }\n                  }\n                  else if (!isBackSlash)\n                      regexStr += \".\";\n                  ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n              }\n              parsedDate = matched ? parsedDate : undefined;\n          }\n      }\n      if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n          config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n          return undefined;\n      }\n      if (timeless === true)\n          parsedDate.setHours(0, 0, 0, 0);\n      return parsedDate;\n  };\n  function compareDates(date1, date2, timeless = true) {\n      if (timeless !== false) {\n          return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n              new Date(date2.getTime()).setHours(0, 0, 0, 0));\n      }\n      return date1.getTime() - date2.getTime();\n  }\n  const isBetween = (ts, ts1, ts2) => {\n      return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n  };\n  const duration = {\n      DAY: 86400000,\n  };\n  function getDefaultHours(config) {\n      let hours = config.defaultHour;\n      let minutes = config.defaultMinute;\n      let seconds = config.defaultSeconds;\n      if (config.minDate !== undefined) {\n          const minHour = config.minDate.getHours();\n          const minMinutes = config.minDate.getMinutes();\n          const minSeconds = config.minDate.getSeconds();\n          if (hours < minHour) {\n              hours = minHour;\n          }\n          if (hours === minHour && minutes < minMinutes) {\n              minutes = minMinutes;\n          }\n          if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n              seconds = config.minDate.getSeconds();\n      }\n      if (config.maxDate !== undefined) {\n          const maxHr = config.maxDate.getHours();\n          const maxMinutes = config.maxDate.getMinutes();\n          hours = Math.min(hours, maxHr);\n          if (hours === maxHr)\n              minutes = Math.min(maxMinutes, minutes);\n          if (hours === maxHr && minutes === maxMinutes)\n              seconds = config.maxDate.getSeconds();\n      }\n      return { hours, minutes, seconds };\n  }\n\n  if (typeof Object.assign !== \"function\") {\n      Object.assign = function (target, ...args) {\n          if (!target) {\n              throw TypeError(\"Cannot convert undefined or null to object\");\n          }\n          for (const source of args) {\n              if (source) {\n                  Object.keys(source).forEach((key) => (target[key] = source[key]));\n              }\n          }\n          return target;\n      };\n  }\n\n  const DEBOUNCED_CHANGE_MS = 300;\n  function FlatpickrInstance(element, instanceConfig) {\n      const self = {\n          config: Object.assign(Object.assign({}, defaults), flatpickr.defaultConfig),\n          l10n: english,\n      };\n      self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n      self._handlers = [];\n      self.pluginElements = [];\n      self.loadedPlugins = [];\n      self._bind = bind;\n      self._setHoursFromDate = setHoursFromDate;\n      self._positionCalendar = positionCalendar;\n      self.changeMonth = changeMonth;\n      self.changeYear = changeYear;\n      self.clear = clear;\n      self.close = close;\n      self._createElement = createElement;\n      self.destroy = destroy;\n      self.isEnabled = isEnabled;\n      self.jumpToDate = jumpToDate;\n      self.open = open;\n      self.redraw = redraw;\n      self.set = set;\n      self.setDate = setDate;\n      self.toggle = toggle;\n      function setupHelperFunctions() {\n          self.utils = {\n              getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                  if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                      return 29;\n                  return self.l10n.daysInMonth[month];\n              },\n          };\n      }\n      function init() {\n          self.element = self.input = element;\n          self.isOpen = false;\n          parseConfig();\n          setupLocale();\n          setupInputs();\n          setupDates();\n          setupHelperFunctions();\n          if (!self.isMobile)\n              build();\n          bindEvents();\n          if (self.selectedDates.length || self.config.noCalendar) {\n              if (self.config.enableTime) {\n                  setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n              }\n              updateValue(false);\n          }\n          setCalendarWidth();\n          const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n          if (!self.isMobile && isSafari) {\n              positionCalendar();\n          }\n          triggerEvent(\"onReady\");\n      }\n      function bindToInstance(fn) {\n          return fn.bind(self);\n      }\n      function setCalendarWidth() {\n          const config = self.config;\n          if (config.weekNumbers === false && config.showMonths === 1) {\n              return;\n          }\n          else if (config.noCalendar !== true) {\n              window.requestAnimationFrame(function () {\n                  if (self.calendarContainer !== undefined) {\n                      self.calendarContainer.style.visibility = \"hidden\";\n                      self.calendarContainer.style.display = \"block\";\n                  }\n                  if (self.daysContainer !== undefined) {\n                      const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                      self.daysContainer.style.width = daysWidth + \"px\";\n                      self.calendarContainer.style.width =\n                          daysWidth +\n                              (self.weekWrapper !== undefined\n                                  ? self.weekWrapper.offsetWidth\n                                  : 0) +\n                              \"px\";\n                      self.calendarContainer.style.removeProperty(\"visibility\");\n                      self.calendarContainer.style.removeProperty(\"display\");\n                  }\n              });\n          }\n      }\n      function updateTime(e) {\n          if (self.selectedDates.length === 0) {\n              const defaultDate = self.config.minDate === undefined ||\n                  compareDates(new Date(), self.config.minDate) >= 0\n                  ? new Date()\n                  : new Date(self.config.minDate.getTime());\n              const defaults = getDefaultHours(self.config);\n              defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n              self.selectedDates = [defaultDate];\n              self.latestSelectedDateObj = defaultDate;\n          }\n          if (e !== undefined && e.type !== \"blur\") {\n              timeWrapper(e);\n          }\n          const prevValue = self._input.value;\n          setHoursFromInputs();\n          updateValue();\n          if (self._input.value !== prevValue) {\n              self._debouncedChange();\n          }\n      }\n      function ampm2military(hour, amPM) {\n          return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n      }\n      function military2ampm(hour) {\n          switch (hour % 24) {\n              case 0:\n              case 12:\n                  return 12;\n              default:\n                  return hour % 12;\n          }\n      }\n      function setHoursFromInputs() {\n          if (self.hourElement === undefined || self.minuteElement === undefined)\n              return;\n          let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n              ? (parseInt(self.secondElement.value, 10) || 0) % 60\n              : 0;\n          if (self.amPM !== undefined) {\n              hours = ampm2military(hours, self.amPM.textContent);\n          }\n          const limitMinHours = self.config.minTime !== undefined ||\n              (self.config.minDate &&\n                  self.minDateHasTime &&\n                  self.latestSelectedDateObj &&\n                  compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                      0);\n          const limitMaxHours = self.config.maxTime !== undefined ||\n              (self.config.maxDate &&\n                  self.maxDateHasTime &&\n                  self.latestSelectedDateObj &&\n                  compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                      0);\n          if (limitMaxHours) {\n              const maxTime = self.config.maxTime !== undefined\n                  ? self.config.maxTime\n                  : self.config.maxDate;\n              hours = Math.min(hours, maxTime.getHours());\n              if (hours === maxTime.getHours())\n                  minutes = Math.min(minutes, maxTime.getMinutes());\n              if (minutes === maxTime.getMinutes())\n                  seconds = Math.min(seconds, maxTime.getSeconds());\n          }\n          if (limitMinHours) {\n              const minTime = self.config.minTime !== undefined\n                  ? self.config.minTime\n                  : self.config.minDate;\n              hours = Math.max(hours, minTime.getHours());\n              if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                  minutes = minTime.getMinutes();\n              if (minutes === minTime.getMinutes())\n                  seconds = Math.max(seconds, minTime.getSeconds());\n          }\n          setHours(hours, minutes, seconds);\n      }\n      function setHoursFromDate(dateObj) {\n          const date = dateObj || self.latestSelectedDateObj;\n          if (date) {\n              setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n          }\n      }\n      function setHours(hours, minutes, seconds) {\n          if (self.latestSelectedDateObj !== undefined) {\n              self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n          }\n          if (!self.hourElement || !self.minuteElement || self.isMobile)\n              return;\n          self.hourElement.value = pad(!self.config.time_24hr\n              ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n              : hours);\n          self.minuteElement.value = pad(minutes);\n          if (self.amPM !== undefined)\n              self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n          if (self.secondElement !== undefined)\n              self.secondElement.value = pad(seconds);\n      }\n      function onYearInput(event) {\n          const eventTarget = getEventTarget(event);\n          const year = parseInt(eventTarget.value) + (event.delta || 0);\n          if (year / 1000 > 1 ||\n              (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n              changeYear(year);\n          }\n      }\n      function bind(element, event, handler, options) {\n          if (event instanceof Array)\n              return event.forEach((ev) => bind(element, ev, handler, options));\n          if (element instanceof Array)\n              return element.forEach((el) => bind(el, event, handler, options));\n          element.addEventListener(event, handler, options);\n          self._handlers.push({\n              remove: () => element.removeEventListener(event, handler),\n          });\n      }\n      function triggerChange() {\n          triggerEvent(\"onChange\");\n      }\n      function bindEvents() {\n          if (self.config.wrap) {\n              [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                  Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n              });\n          }\n          if (self.isMobile) {\n              setupMobile();\n              return;\n          }\n          const debouncedResize = debounce(onResize, 50);\n          self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n          if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n              bind(self.daysContainer, \"mouseover\", (e) => {\n                  if (self.config.mode === \"range\")\n                      onMouseOver(getEventTarget(e));\n              });\n          bind(window.document.body, \"keydown\", onKeyDown);\n          if (!self.config.inline && !self.config.static)\n              bind(window, \"resize\", debouncedResize);\n          if (window.ontouchstart !== undefined)\n              bind(window.document, \"touchstart\", documentClick);\n          else\n              bind(window.document, \"mousedown\", documentClick);\n          bind(window.document, \"focus\", documentClick, { capture: true });\n          if (self.config.clickOpens === true) {\n              bind(self._input, \"focus\", self.open);\n              bind(self._input, \"click\", self.open);\n          }\n          if (self.daysContainer !== undefined) {\n              bind(self.monthNav, \"click\", onMonthNavClick);\n              bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n              bind(self.daysContainer, \"click\", selectDate);\n          }\n          if (self.timeContainer !== undefined &&\n              self.minuteElement !== undefined &&\n              self.hourElement !== undefined) {\n              const selText = (e) => getEventTarget(e).select();\n              bind(self.timeContainer, [\"increment\"], updateTime);\n              bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n              bind(self.timeContainer, \"click\", timeIncrement);\n              bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n              if (self.secondElement !== undefined)\n                  bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n              if (self.amPM !== undefined) {\n                  bind(self.amPM, \"click\", (e) => {\n                      updateTime(e);\n                      triggerChange();\n                  });\n              }\n          }\n          if (self.config.allowInput) {\n              bind(self._input, \"blur\", onBlur);\n          }\n      }\n      function jumpToDate(jumpDate, triggerChange) {\n          const jumpTo = jumpDate !== undefined\n              ? self.parseDate(jumpDate)\n              : self.latestSelectedDateObj ||\n                  (self.config.minDate && self.config.minDate > self.now\n                      ? self.config.minDate\n                      : self.config.maxDate && self.config.maxDate < self.now\n                          ? self.config.maxDate\n                          : self.now);\n          const oldYear = self.currentYear;\n          const oldMonth = self.currentMonth;\n          try {\n              if (jumpTo !== undefined) {\n                  self.currentYear = jumpTo.getFullYear();\n                  self.currentMonth = jumpTo.getMonth();\n              }\n          }\n          catch (e) {\n              e.message = \"Invalid date supplied: \" + jumpTo;\n              self.config.errorHandler(e);\n          }\n          if (triggerChange && self.currentYear !== oldYear) {\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n          if (triggerChange &&\n              (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n              triggerEvent(\"onMonthChange\");\n          }\n          self.redraw();\n      }\n      function timeIncrement(e) {\n          const eventTarget = getEventTarget(e);\n          if (~eventTarget.className.indexOf(\"arrow\"))\n              incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n      }\n      function incrementNumInput(e, delta, inputElem) {\n          const target = e && getEventTarget(e);\n          const input = inputElem ||\n              (target && target.parentNode && target.parentNode.firstChild);\n          const event = createEvent(\"increment\");\n          event.delta = delta;\n          input && input.dispatchEvent(event);\n      }\n      function build() {\n          const fragment = window.document.createDocumentFragment();\n          self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n          self.calendarContainer.tabIndex = -1;\n          if (!self.config.noCalendar) {\n              fragment.appendChild(buildMonthNav());\n              self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n              if (self.config.weekNumbers) {\n                  const { weekWrapper, weekNumbers } = buildWeeks();\n                  self.innerContainer.appendChild(weekWrapper);\n                  self.weekNumbers = weekNumbers;\n                  self.weekWrapper = weekWrapper;\n              }\n              self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n              self.rContainer.appendChild(buildWeekdays());\n              if (!self.daysContainer) {\n                  self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                  self.daysContainer.tabIndex = -1;\n              }\n              buildDays();\n              self.rContainer.appendChild(self.daysContainer);\n              self.innerContainer.appendChild(self.rContainer);\n              fragment.appendChild(self.innerContainer);\n          }\n          if (self.config.enableTime) {\n              fragment.appendChild(buildTime());\n          }\n          toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n          toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n          toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n          self.calendarContainer.appendChild(fragment);\n          const customAppend = self.config.appendTo !== undefined &&\n              self.config.appendTo.nodeType !== undefined;\n          if (self.config.inline || self.config.static) {\n              self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n              if (self.config.inline) {\n                  if (!customAppend && self.element.parentNode)\n                      self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                  else if (self.config.appendTo !== undefined)\n                      self.config.appendTo.appendChild(self.calendarContainer);\n              }\n              if (self.config.static) {\n                  const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                  if (self.element.parentNode)\n                      self.element.parentNode.insertBefore(wrapper, self.element);\n                  wrapper.appendChild(self.element);\n                  if (self.altInput)\n                      wrapper.appendChild(self.altInput);\n                  wrapper.appendChild(self.calendarContainer);\n              }\n          }\n          if (!self.config.static && !self.config.inline)\n              (self.config.appendTo !== undefined\n                  ? self.config.appendTo\n                  : window.document.body).appendChild(self.calendarContainer);\n      }\n      function createDay(className, date, dayNumber, i) {\n          const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n          dayElement.dateObj = date;\n          dayElement.$i = i;\n          dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n          if (className.indexOf(\"hidden\") === -1 &&\n              compareDates(date, self.now) === 0) {\n              self.todayDateElem = dayElement;\n              dayElement.classList.add(\"today\");\n              dayElement.setAttribute(\"aria-current\", \"date\");\n          }\n          if (dateIsEnabled) {\n              dayElement.tabIndex = -1;\n              if (isDateSelected(date)) {\n                  dayElement.classList.add(\"selected\");\n                  self.selectedDateElem = dayElement;\n                  if (self.config.mode === \"range\") {\n                      toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                          compareDates(date, self.selectedDates[0], true) === 0);\n                      toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                          compareDates(date, self.selectedDates[1], true) === 0);\n                      if (className === \"nextMonthDay\")\n                          dayElement.classList.add(\"inRange\");\n                  }\n              }\n          }\n          else {\n              dayElement.classList.add(\"flatpickr-disabled\");\n          }\n          if (self.config.mode === \"range\") {\n              if (isDateInRange(date) && !isDateSelected(date))\n                  dayElement.classList.add(\"inRange\");\n          }\n          if (self.weekNumbers &&\n              self.config.showMonths === 1 &&\n              className !== \"prevMonthDay\" &&\n              dayNumber % 7 === 1) {\n              self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n          }\n          triggerEvent(\"onDayCreate\", dayElement);\n          return dayElement;\n      }\n      function focusOnDayElem(targetNode) {\n          targetNode.focus();\n          if (self.config.mode === \"range\")\n              onMouseOver(targetNode);\n      }\n      function getFirstAvailableDay(delta) {\n          const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n          const endMonth = delta > 0 ? self.config.showMonths : -1;\n          for (let m = startMonth; m != endMonth; m += delta) {\n              const month = self.daysContainer.children[m];\n              const startIndex = delta > 0 ? 0 : month.children.length - 1;\n              const endIndex = delta > 0 ? month.children.length : -1;\n              for (let i = startIndex; i != endIndex; i += delta) {\n                  const c = month.children[i];\n                  if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                      return c;\n              }\n          }\n          return undefined;\n      }\n      function getNextAvailableDay(current, delta) {\n          const givenMonth = current.className.indexOf(\"Month\") === -1\n              ? current.dateObj.getMonth()\n              : self.currentMonth;\n          const endMonth = delta > 0 ? self.config.showMonths : -1;\n          const loopDelta = delta > 0 ? 1 : -1;\n          for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n              const month = self.daysContainer.children[m];\n              const startIndex = givenMonth - self.currentMonth === m\n                  ? current.$i + delta\n                  : delta < 0\n                      ? month.children.length - 1\n                      : 0;\n              const numMonthDays = month.children.length;\n              for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                  const c = month.children[i];\n                  if (c.className.indexOf(\"hidden\") === -1 &&\n                      isEnabled(c.dateObj) &&\n                      Math.abs(current.$i - i) >= Math.abs(delta))\n                      return focusOnDayElem(c);\n              }\n          }\n          self.changeMonth(loopDelta);\n          focusOnDay(getFirstAvailableDay(loopDelta), 0);\n          return undefined;\n      }\n      function focusOnDay(current, offset) {\n          const dayFocused = isInView(document.activeElement || document.body);\n          const startElem = current !== undefined\n              ? current\n              : dayFocused\n                  ? document.activeElement\n                  : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                      ? self.selectedDateElem\n                      : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                          ? self.todayDateElem\n                          : getFirstAvailableDay(offset > 0 ? 1 : -1);\n          if (startElem === undefined) {\n              self._input.focus();\n          }\n          else if (!dayFocused) {\n              focusOnDayElem(startElem);\n          }\n          else {\n              getNextAvailableDay(startElem, offset);\n          }\n      }\n      function buildMonthDays(year, month) {\n          const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n          const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n          const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n          let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n          for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n              days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n          }\n          for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n              days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n          }\n          for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n              (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n              days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n          }\n          const dayContainer = createElement(\"div\", \"dayContainer\");\n          dayContainer.appendChild(days);\n          return dayContainer;\n      }\n      function buildDays() {\n          if (self.daysContainer === undefined) {\n              return;\n          }\n          clearNode(self.daysContainer);\n          if (self.weekNumbers)\n              clearNode(self.weekNumbers);\n          const frag = document.createDocumentFragment();\n          for (let i = 0; i < self.config.showMonths; i++) {\n              const d = new Date(self.currentYear, self.currentMonth, 1);\n              d.setMonth(self.currentMonth + i);\n              frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n          }\n          self.daysContainer.appendChild(frag);\n          self.days = self.daysContainer.firstChild;\n          if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n              onMouseOver();\n          }\n      }\n      function buildMonthSwitch() {\n          if (self.config.showMonths > 1 ||\n              self.config.monthSelectorType !== \"dropdown\")\n              return;\n          const shouldBuildMonth = function (month) {\n              if (self.config.minDate !== undefined &&\n                  self.currentYear === self.config.minDate.getFullYear() &&\n                  month < self.config.minDate.getMonth()) {\n                  return false;\n              }\n              return !(self.config.maxDate !== undefined &&\n                  self.currentYear === self.config.maxDate.getFullYear() &&\n                  month > self.config.maxDate.getMonth());\n          };\n          self.monthsDropdownContainer.tabIndex = -1;\n          self.monthsDropdownContainer.innerHTML = \"\";\n          for (let i = 0; i < 12; i++) {\n              if (!shouldBuildMonth(i))\n                  continue;\n              const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n              month.value = new Date(self.currentYear, i).getMonth().toString();\n              month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n              month.tabIndex = -1;\n              if (self.currentMonth === i) {\n                  month.selected = true;\n              }\n              self.monthsDropdownContainer.appendChild(month);\n          }\n      }\n      function buildMonth() {\n          const container = createElement(\"div\", \"flatpickr-month\");\n          const monthNavFragment = window.document.createDocumentFragment();\n          let monthElement;\n          if (self.config.showMonths > 1 ||\n              self.config.monthSelectorType === \"static\") {\n              monthElement = createElement(\"span\", \"cur-month\");\n          }\n          else {\n              self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n              self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n              bind(self.monthsDropdownContainer, \"change\", (e) => {\n                  const target = getEventTarget(e);\n                  const selectedMonth = parseInt(target.value, 10);\n                  self.changeMonth(selectedMonth - self.currentMonth);\n                  triggerEvent(\"onMonthChange\");\n              });\n              buildMonthSwitch();\n              monthElement = self.monthsDropdownContainer;\n          }\n          const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n          const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n          yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n          if (self.config.minDate) {\n              yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n          }\n          if (self.config.maxDate) {\n              yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n              yearElement.disabled =\n                  !!self.config.minDate &&\n                      self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n          }\n          const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n          currentMonth.appendChild(monthElement);\n          currentMonth.appendChild(yearInput);\n          monthNavFragment.appendChild(currentMonth);\n          container.appendChild(monthNavFragment);\n          return {\n              container,\n              yearElement,\n              monthElement,\n          };\n      }\n      function buildMonths() {\n          clearNode(self.monthNav);\n          self.monthNav.appendChild(self.prevMonthNav);\n          if (self.config.showMonths) {\n              self.yearElements = [];\n              self.monthElements = [];\n          }\n          for (let m = self.config.showMonths; m--;) {\n              const month = buildMonth();\n              self.yearElements.push(month.yearElement);\n              self.monthElements.push(month.monthElement);\n              self.monthNav.appendChild(month.container);\n          }\n          self.monthNav.appendChild(self.nextMonthNav);\n      }\n      function buildMonthNav() {\n          self.monthNav = createElement(\"div\", \"flatpickr-months\");\n          self.yearElements = [];\n          self.monthElements = [];\n          self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n          self.prevMonthNav.innerHTML = self.config.prevArrow;\n          self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n          self.nextMonthNav.innerHTML = self.config.nextArrow;\n          buildMonths();\n          Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n              get: () => self.__hidePrevMonthArrow,\n              set(bool) {\n                  if (self.__hidePrevMonthArrow !== bool) {\n                      toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                      self.__hidePrevMonthArrow = bool;\n                  }\n              },\n          });\n          Object.defineProperty(self, \"_hideNextMonthArrow\", {\n              get: () => self.__hideNextMonthArrow,\n              set(bool) {\n                  if (self.__hideNextMonthArrow !== bool) {\n                      toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                      self.__hideNextMonthArrow = bool;\n                  }\n              },\n          });\n          self.currentYearElement = self.yearElements[0];\n          updateNavigationCurrentMonth();\n          return self.monthNav;\n      }\n      function buildTime() {\n          self.calendarContainer.classList.add(\"hasTime\");\n          if (self.config.noCalendar)\n              self.calendarContainer.classList.add(\"noCalendar\");\n          const defaults = getDefaultHours(self.config);\n          self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n          self.timeContainer.tabIndex = -1;\n          const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n          const hourInput = createNumberInput(\"flatpickr-hour\", {\n              \"aria-label\": self.l10n.hourAriaLabel,\n          });\n          self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n          const minuteInput = createNumberInput(\"flatpickr-minute\", {\n              \"aria-label\": self.l10n.minuteAriaLabel,\n          });\n          self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n          self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n          self.hourElement.value = pad(self.latestSelectedDateObj\n              ? self.latestSelectedDateObj.getHours()\n              : self.config.time_24hr\n                  ? defaults.hours\n                  : military2ampm(defaults.hours));\n          self.minuteElement.value = pad(self.latestSelectedDateObj\n              ? self.latestSelectedDateObj.getMinutes()\n              : defaults.minutes);\n          self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n          self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n          self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n          self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n          self.hourElement.setAttribute(\"maxlength\", \"2\");\n          self.minuteElement.setAttribute(\"min\", \"0\");\n          self.minuteElement.setAttribute(\"max\", \"59\");\n          self.minuteElement.setAttribute(\"maxlength\", \"2\");\n          self.timeContainer.appendChild(hourInput);\n          self.timeContainer.appendChild(separator);\n          self.timeContainer.appendChild(minuteInput);\n          if (self.config.time_24hr)\n              self.timeContainer.classList.add(\"time24hr\");\n          if (self.config.enableSeconds) {\n              self.timeContainer.classList.add(\"hasSeconds\");\n              const secondInput = createNumberInput(\"flatpickr-second\");\n              self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n              self.secondElement.value = pad(self.latestSelectedDateObj\n                  ? self.latestSelectedDateObj.getSeconds()\n                  : defaults.seconds);\n              self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n              self.secondElement.setAttribute(\"min\", \"0\");\n              self.secondElement.setAttribute(\"max\", \"59\");\n              self.secondElement.setAttribute(\"maxlength\", \"2\");\n              self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n              self.timeContainer.appendChild(secondInput);\n          }\n          if (!self.config.time_24hr) {\n              self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                  ? self.hourElement.value\n                  : self.config.defaultHour) > 11)]);\n              self.amPM.title = self.l10n.toggleTitle;\n              self.amPM.tabIndex = -1;\n              self.timeContainer.appendChild(self.amPM);\n          }\n          return self.timeContainer;\n      }\n      function buildWeekdays() {\n          if (!self.weekdayContainer)\n              self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n          else\n              clearNode(self.weekdayContainer);\n          for (let i = self.config.showMonths; i--;) {\n              const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n              self.weekdayContainer.appendChild(container);\n          }\n          updateWeekdays();\n          return self.weekdayContainer;\n      }\n      function updateWeekdays() {\n          if (!self.weekdayContainer) {\n              return;\n          }\n          const firstDayOfWeek = self.l10n.firstDayOfWeek;\n          let weekdays = [...self.l10n.weekdays.shorthand];\n          if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n              weekdays = [\n                  ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                  ...weekdays.splice(0, firstDayOfWeek),\n              ];\n          }\n          for (let i = self.config.showMonths; i--;) {\n              self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n          }\n      }\n      function buildWeeks() {\n          self.calendarContainer.classList.add(\"hasWeeks\");\n          const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n          weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n          const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n          weekWrapper.appendChild(weekNumbers);\n          return {\n              weekWrapper,\n              weekNumbers,\n          };\n      }\n      function changeMonth(value, isOffset = true) {\n          const delta = isOffset ? value : value - self.currentMonth;\n          if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n              (delta > 0 && self._hideNextMonthArrow === true))\n              return;\n          self.currentMonth += delta;\n          if (self.currentMonth < 0 || self.currentMonth > 11) {\n              self.currentYear += self.currentMonth > 11 ? 1 : -1;\n              self.currentMonth = (self.currentMonth + 12) % 12;\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n          buildDays();\n          triggerEvent(\"onMonthChange\");\n          updateNavigationCurrentMonth();\n      }\n      function clear(triggerChangeEvent = true, toInitial = true) {\n          self.input.value = \"\";\n          if (self.altInput !== undefined)\n              self.altInput.value = \"\";\n          if (self.mobileInput !== undefined)\n              self.mobileInput.value = \"\";\n          self.selectedDates = [];\n          self.latestSelectedDateObj = undefined;\n          if (toInitial === true) {\n              self.currentYear = self._initialDate.getFullYear();\n              self.currentMonth = self._initialDate.getMonth();\n          }\n          if (self.config.enableTime === true) {\n              const { hours, minutes, seconds } = getDefaultHours(self.config);\n              setHours(hours, minutes, seconds);\n          }\n          self.redraw();\n          if (triggerChangeEvent)\n              triggerEvent(\"onChange\");\n      }\n      function close() {\n          self.isOpen = false;\n          if (!self.isMobile) {\n              if (self.calendarContainer !== undefined) {\n                  self.calendarContainer.classList.remove(\"open\");\n              }\n              if (self._input !== undefined) {\n                  self._input.classList.remove(\"active\");\n              }\n          }\n          triggerEvent(\"onClose\");\n      }\n      function destroy() {\n          if (self.config !== undefined)\n              triggerEvent(\"onDestroy\");\n          for (let i = self._handlers.length; i--;) {\n              self._handlers[i].remove();\n          }\n          self._handlers = [];\n          if (self.mobileInput) {\n              if (self.mobileInput.parentNode)\n                  self.mobileInput.parentNode.removeChild(self.mobileInput);\n              self.mobileInput = undefined;\n          }\n          else if (self.calendarContainer && self.calendarContainer.parentNode) {\n              if (self.config.static && self.calendarContainer.parentNode) {\n                  const wrapper = self.calendarContainer.parentNode;\n                  wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                  if (wrapper.parentNode) {\n                      while (wrapper.firstChild)\n                          wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                      wrapper.parentNode.removeChild(wrapper);\n                  }\n              }\n              else\n                  self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n          }\n          if (self.altInput) {\n              self.input.type = \"text\";\n              if (self.altInput.parentNode)\n                  self.altInput.parentNode.removeChild(self.altInput);\n              delete self.altInput;\n          }\n          if (self.input) {\n              self.input.type = self.input._type;\n              self.input.classList.remove(\"flatpickr-input\");\n              self.input.removeAttribute(\"readonly\");\n          }\n          [\n              \"_showTimeInput\",\n              \"latestSelectedDateObj\",\n              \"_hideNextMonthArrow\",\n              \"_hidePrevMonthArrow\",\n              \"__hideNextMonthArrow\",\n              \"__hidePrevMonthArrow\",\n              \"isMobile\",\n              \"isOpen\",\n              \"selectedDateElem\",\n              \"minDateHasTime\",\n              \"maxDateHasTime\",\n              \"days\",\n              \"daysContainer\",\n              \"_input\",\n              \"_positionElement\",\n              \"innerContainer\",\n              \"rContainer\",\n              \"monthNav\",\n              \"todayDateElem\",\n              \"calendarContainer\",\n              \"weekdayContainer\",\n              \"prevMonthNav\",\n              \"nextMonthNav\",\n              \"monthsDropdownContainer\",\n              \"currentMonthElement\",\n              \"currentYearElement\",\n              \"navigationCurrentMonth\",\n              \"selectedDateElem\",\n              \"config\",\n          ].forEach((k) => {\n              try {\n                  delete self[k];\n              }\n              catch (_) { }\n          });\n      }\n      function isCalendarElem(elem) {\n          if (self.config.appendTo && self.config.appendTo.contains(elem))\n              return true;\n          return self.calendarContainer.contains(elem);\n      }\n      function documentClick(e) {\n          if (self.isOpen && !self.config.inline) {\n              const eventTarget = getEventTarget(e);\n              const isCalendarElement = isCalendarElem(eventTarget);\n              const isInput = eventTarget === self.input ||\n                  eventTarget === self.altInput ||\n                  self.element.contains(eventTarget) ||\n                  (e.path &&\n                      e.path.indexOf &&\n                      (~e.path.indexOf(self.input) ||\n                          ~e.path.indexOf(self.altInput)));\n              const lostFocus = e.type === \"blur\"\n                  ? isInput &&\n                      e.relatedTarget &&\n                      !isCalendarElem(e.relatedTarget)\n                  : !isInput &&\n                      !isCalendarElement &&\n                      !isCalendarElem(e.relatedTarget);\n              const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n              if (lostFocus && isIgnored) {\n                  if (self.timeContainer !== undefined &&\n                      self.minuteElement !== undefined &&\n                      self.hourElement !== undefined &&\n                      self.input.value !== \"\" &&\n                      self.input.value !== undefined) {\n                      updateTime();\n                  }\n                  self.close();\n                  if (self.config &&\n                      self.config.mode === \"range\" &&\n                      self.selectedDates.length === 1) {\n                      self.clear(false);\n                      self.redraw();\n                  }\n              }\n          }\n      }\n      function changeYear(newYear) {\n          if (!newYear ||\n              (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n              (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n              return;\n          const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n          self.currentYear = newYearNum || self.currentYear;\n          if (self.config.maxDate &&\n              self.currentYear === self.config.maxDate.getFullYear()) {\n              self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n          }\n          else if (self.config.minDate &&\n              self.currentYear === self.config.minDate.getFullYear()) {\n              self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n          }\n          if (isNewYear) {\n              self.redraw();\n              triggerEvent(\"onYearChange\");\n              buildMonthSwitch();\n          }\n      }\n      function isEnabled(date, timeless = true) {\n          var _a;\n          const dateToCheck = self.parseDate(date, undefined, timeless);\n          if ((self.config.minDate &&\n              dateToCheck &&\n              compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n              (self.config.maxDate &&\n                  dateToCheck &&\n                  compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n              return false;\n          if (!self.config.enable && self.config.disable.length === 0)\n              return true;\n          if (dateToCheck === undefined)\n              return false;\n          const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n          for (let i = 0, d; i < array.length; i++) {\n              d = array[i];\n              if (typeof d === \"function\" &&\n                  d(dateToCheck))\n                  return bool;\n              else if (d instanceof Date &&\n                  dateToCheck !== undefined &&\n                  d.getTime() === dateToCheck.getTime())\n                  return bool;\n              else if (typeof d === \"string\") {\n                  const parsed = self.parseDate(d, undefined, true);\n                  return parsed && parsed.getTime() === dateToCheck.getTime()\n                      ? bool\n                      : !bool;\n              }\n              else if (typeof d === \"object\" &&\n                  dateToCheck !== undefined &&\n                  d.from &&\n                  d.to &&\n                  dateToCheck.getTime() >= d.from.getTime() &&\n                  dateToCheck.getTime() <= d.to.getTime())\n                  return bool;\n          }\n          return !bool;\n      }\n      function isInView(elem) {\n          if (self.daysContainer !== undefined)\n              return (elem.className.indexOf(\"hidden\") === -1 &&\n                  elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                  self.daysContainer.contains(elem));\n          return false;\n      }\n      function onBlur(e) {\n          const isInput = e.target === self._input;\n          if (isInput &&\n              (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n              !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n              self.setDate(self._input.value, true, e.target === self.altInput\n                  ? self.config.altFormat\n                  : self.config.dateFormat);\n          }\n      }\n      function onKeyDown(e) {\n          const eventTarget = getEventTarget(e);\n          const isInput = self.config.wrap\n              ? element.contains(eventTarget)\n              : eventTarget === self._input;\n          const allowInput = self.config.allowInput;\n          const allowKeydown = self.isOpen && (!allowInput || !isInput);\n          const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n          if (e.keyCode === 13 && isInput) {\n              if (allowInput) {\n                  self.setDate(self._input.value, true, eventTarget === self.altInput\n                      ? self.config.altFormat\n                      : self.config.dateFormat);\n                  return eventTarget.blur();\n              }\n              else {\n                  self.open();\n              }\n          }\n          else if (isCalendarElem(eventTarget) ||\n              allowKeydown ||\n              allowInlineKeydown) {\n              const isTimeObj = !!self.timeContainer &&\n                  self.timeContainer.contains(eventTarget);\n              switch (e.keyCode) {\n                  case 13:\n                      if (isTimeObj) {\n                          e.preventDefault();\n                          updateTime();\n                          focusAndClose();\n                      }\n                      else\n                          selectDate(e);\n                      break;\n                  case 27:\n                      e.preventDefault();\n                      focusAndClose();\n                      break;\n                  case 8:\n                  case 46:\n                      if (isInput && !self.config.allowInput) {\n                          e.preventDefault();\n                          self.clear();\n                      }\n                      break;\n                  case 37:\n                  case 39:\n                      if (!isTimeObj && !isInput) {\n                          e.preventDefault();\n                          if (self.daysContainer !== undefined &&\n                              (allowInput === false ||\n                                  (document.activeElement && isInView(document.activeElement)))) {\n                              const delta = e.keyCode === 39 ? 1 : -1;\n                              if (!e.ctrlKey)\n                                  focusOnDay(undefined, delta);\n                              else {\n                                  e.stopPropagation();\n                                  changeMonth(delta);\n                                  focusOnDay(getFirstAvailableDay(1), 0);\n                              }\n                          }\n                      }\n                      else if (self.hourElement)\n                          self.hourElement.focus();\n                      break;\n                  case 38:\n                  case 40:\n                      e.preventDefault();\n                      const delta = e.keyCode === 40 ? 1 : -1;\n                      if ((self.daysContainer &&\n                          eventTarget.$i !== undefined) ||\n                          eventTarget === self.input ||\n                          eventTarget === self.altInput) {\n                          if (e.ctrlKey) {\n                              e.stopPropagation();\n                              changeYear(self.currentYear - delta);\n                              focusOnDay(getFirstAvailableDay(1), 0);\n                          }\n                          else if (!isTimeObj)\n                              focusOnDay(undefined, delta * 7);\n                      }\n                      else if (eventTarget === self.currentYearElement) {\n                          changeYear(self.currentYear - delta);\n                      }\n                      else if (self.config.enableTime) {\n                          if (!isTimeObj && self.hourElement)\n                              self.hourElement.focus();\n                          updateTime(e);\n                          self._debouncedChange();\n                      }\n                      break;\n                  case 9:\n                      if (isTimeObj) {\n                          const elems = [\n                              self.hourElement,\n                              self.minuteElement,\n                              self.secondElement,\n                              self.amPM,\n                          ]\n                              .concat(self.pluginElements)\n                              .filter((x) => x);\n                          const i = elems.indexOf(eventTarget);\n                          if (i !== -1) {\n                              const target = elems[i + (e.shiftKey ? -1 : 1)];\n                              e.preventDefault();\n                              (target || self._input).focus();\n                          }\n                      }\n                      else if (!self.config.noCalendar &&\n                          self.daysContainer &&\n                          self.daysContainer.contains(eventTarget) &&\n                          e.shiftKey) {\n                          e.preventDefault();\n                          self._input.focus();\n                      }\n                      break;\n              }\n          }\n          if (self.amPM !== undefined && eventTarget === self.amPM) {\n              switch (e.key) {\n                  case self.l10n.amPM[0].charAt(0):\n                  case self.l10n.amPM[0].charAt(0).toLowerCase():\n                      self.amPM.textContent = self.l10n.amPM[0];\n                      setHoursFromInputs();\n                      updateValue();\n                      break;\n                  case self.l10n.amPM[1].charAt(0):\n                  case self.l10n.amPM[1].charAt(0).toLowerCase():\n                      self.amPM.textContent = self.l10n.amPM[1];\n                      setHoursFromInputs();\n                      updateValue();\n                      break;\n              }\n          }\n          if (isInput || isCalendarElem(eventTarget)) {\n              triggerEvent(\"onKeyDown\", e);\n          }\n      }\n      function onMouseOver(elem) {\n          if (self.selectedDates.length !== 1 ||\n              (elem &&\n                  (!elem.classList.contains(\"flatpickr-day\") ||\n                      elem.classList.contains(\"flatpickr-disabled\"))))\n              return;\n          const hoverDate = elem\n              ? elem.dateObj.getTime()\n              : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n          let containsDisabled = false;\n          let minRange = 0, maxRange = 0;\n          for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n              if (!isEnabled(new Date(t), true)) {\n                  containsDisabled =\n                      containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                  if (t < initialDate && (!minRange || t > minRange))\n                      minRange = t;\n                  else if (t > initialDate && (!maxRange || t < maxRange))\n                      maxRange = t;\n              }\n          }\n          for (let m = 0; m < self.config.showMonths; m++) {\n              const month = self.daysContainer.children[m];\n              for (let i = 0, l = month.children.length; i < l; i++) {\n                  const dayElem = month.children[i], date = dayElem.dateObj;\n                  const timestamp = date.getTime();\n                  const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                      (maxRange > 0 && timestamp > maxRange);\n                  if (outOfRange) {\n                      dayElem.classList.add(\"notAllowed\");\n                      [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                          dayElem.classList.remove(c);\n                      });\n                      continue;\n                  }\n                  else if (containsDisabled && !outOfRange)\n                      continue;\n                  [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                      dayElem.classList.remove(c);\n                  });\n                  if (elem !== undefined) {\n                      elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                          ? \"startRange\"\n                          : \"endRange\");\n                      if (initialDate < hoverDate && timestamp === initialDate)\n                          dayElem.classList.add(\"startRange\");\n                      else if (initialDate > hoverDate && timestamp === initialDate)\n                          dayElem.classList.add(\"endRange\");\n                      if (timestamp >= minRange &&\n                          (maxRange === 0 || timestamp <= maxRange) &&\n                          isBetween(timestamp, initialDate, hoverDate))\n                          dayElem.classList.add(\"inRange\");\n                  }\n              }\n          }\n      }\n      function onResize() {\n          if (self.isOpen && !self.config.static && !self.config.inline)\n              positionCalendar();\n      }\n      function open(e, positionElement = self._positionElement) {\n          if (self.isMobile === true) {\n              if (e) {\n                  e.preventDefault();\n                  const eventTarget = getEventTarget(e);\n                  if (eventTarget) {\n                      eventTarget.blur();\n                  }\n              }\n              if (self.mobileInput !== undefined) {\n                  self.mobileInput.focus();\n                  self.mobileInput.click();\n              }\n              triggerEvent(\"onOpen\");\n              return;\n          }\n          else if (self._input.disabled || self.config.inline) {\n              return;\n          }\n          const wasOpen = self.isOpen;\n          self.isOpen = true;\n          if (!wasOpen) {\n              self.calendarContainer.classList.add(\"open\");\n              self._input.classList.add(\"active\");\n              triggerEvent(\"onOpen\");\n              positionCalendar(positionElement);\n          }\n          if (self.config.enableTime === true && self.config.noCalendar === true) {\n              if (self.config.allowInput === false &&\n                  (e === undefined ||\n                      !self.timeContainer.contains(e.relatedTarget))) {\n                  setTimeout(() => self.hourElement.select(), 50);\n              }\n          }\n      }\n      function minMaxDateSetter(type) {\n          return (date) => {\n              const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n              const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n              if (dateObj !== undefined) {\n                  self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                      dateObj.getHours() > 0 ||\n                          dateObj.getMinutes() > 0 ||\n                          dateObj.getSeconds() > 0;\n              }\n              if (self.selectedDates) {\n                  self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                  if (!self.selectedDates.length && type === \"min\")\n                      setHoursFromDate(dateObj);\n                  updateValue();\n              }\n              if (self.daysContainer) {\n                  redraw();\n                  if (dateObj !== undefined)\n                      self.currentYearElement[type] = dateObj.getFullYear().toString();\n                  else\n                      self.currentYearElement.removeAttribute(type);\n                  self.currentYearElement.disabled =\n                      !!inverseDateObj &&\n                          dateObj !== undefined &&\n                          inverseDateObj.getFullYear() === dateObj.getFullYear();\n              }\n          };\n      }\n      function parseConfig() {\n          const boolOpts = [\n              \"wrap\",\n              \"weekNumbers\",\n              \"allowInput\",\n              \"allowInvalidPreload\",\n              \"clickOpens\",\n              \"time_24hr\",\n              \"enableTime\",\n              \"noCalendar\",\n              \"altInput\",\n              \"shorthandCurrentMonth\",\n              \"inline\",\n              \"static\",\n              \"enableSeconds\",\n              \"disableMobile\",\n          ];\n          const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n          const formats = {};\n          self.config.parseDate = userConfig.parseDate;\n          self.config.formatDate = userConfig.formatDate;\n          Object.defineProperty(self.config, \"enable\", {\n              get: () => self.config._enable,\n              set: (dates) => {\n                  self.config._enable = parseDateRules(dates);\n              },\n          });\n          Object.defineProperty(self.config, \"disable\", {\n              get: () => self.config._disable,\n              set: (dates) => {\n                  self.config._disable = parseDateRules(dates);\n              },\n          });\n          const timeMode = userConfig.mode === \"time\";\n          if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n              const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;\n              formats.dateFormat =\n                  userConfig.noCalendar || timeMode\n                      ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                      : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n          }\n          if (userConfig.altInput &&\n              (userConfig.enableTime || timeMode) &&\n              !userConfig.altFormat) {\n              const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;\n              formats.altFormat =\n                  userConfig.noCalendar || timeMode\n                      ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                      : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n          }\n          Object.defineProperty(self.config, \"minDate\", {\n              get: () => self.config._minDate,\n              set: minMaxDateSetter(\"min\"),\n          });\n          Object.defineProperty(self.config, \"maxDate\", {\n              get: () => self.config._maxDate,\n              set: minMaxDateSetter(\"max\"),\n          });\n          const minMaxTimeSetter = (type) => (val) => {\n              self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n          };\n          Object.defineProperty(self.config, \"minTime\", {\n              get: () => self.config._minTime,\n              set: minMaxTimeSetter(\"min\"),\n          });\n          Object.defineProperty(self.config, \"maxTime\", {\n              get: () => self.config._maxTime,\n              set: minMaxTimeSetter(\"max\"),\n          });\n          if (userConfig.mode === \"time\") {\n              self.config.noCalendar = true;\n              self.config.enableTime = true;\n          }\n          Object.assign(self.config, formats, userConfig);\n          for (let i = 0; i < boolOpts.length; i++)\n              self.config[boolOpts[i]] =\n                  self.config[boolOpts[i]] === true ||\n                      self.config[boolOpts[i]] === \"true\";\n          HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n              self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n          });\n          self.isMobile =\n              !self.config.disableMobile &&\n                  !self.config.inline &&\n                  self.config.mode === \"single\" &&\n                  !self.config.disable.length &&\n                  !self.config.enable &&\n                  !self.config.weekNumbers &&\n                  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n          for (let i = 0; i < self.config.plugins.length; i++) {\n              const pluginConf = self.config.plugins[i](self) || {};\n              for (const key in pluginConf) {\n                  if (HOOKS.indexOf(key) > -1) {\n                      self.config[key] = arrayify(pluginConf[key])\n                          .map(bindToInstance)\n                          .concat(self.config[key]);\n                  }\n                  else if (typeof userConfig[key] === \"undefined\")\n                      self.config[key] = pluginConf[key];\n              }\n          }\n          if (!userConfig.altInputClass) {\n              self.config.altInputClass =\n                  getInputElem().className + \" \" + self.config.altInputClass;\n          }\n          triggerEvent(\"onParseConfig\");\n      }\n      function getInputElem() {\n          return self.config.wrap\n              ? element.querySelector(\"[data-input]\")\n              : element;\n      }\n      function setupLocale() {\n          if (typeof self.config.locale !== \"object\" &&\n              typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n              self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n          self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n              ? self.config.locale\n              : self.config.locale !== \"default\"\n                  ? flatpickr.l10ns[self.config.locale]\n                  : undefined));\n          tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n          const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n          if (userConfig.time_24hr === undefined &&\n              flatpickr.defaultConfig.time_24hr === undefined) {\n              self.config.time_24hr = self.l10n.time_24hr;\n          }\n          self.formatDate = createDateFormatter(self);\n          self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n      }\n      function positionCalendar(customPositionElement) {\n          if (typeof self.config.position === \"function\") {\n              return void self.config.position(self, customPositionElement);\n          }\n          if (self.calendarContainer === undefined)\n              return;\n          triggerEvent(\"onPreCalendarPosition\");\n          const positionElement = customPositionElement || self._positionElement;\n          const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n              (configPosVertical !== \"below\" &&\n                  distanceFromBottom < calendarHeight &&\n                  inputBounds.top > calendarHeight);\n          const top = window.pageYOffset +\n              inputBounds.top +\n              (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n          toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n          toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n          if (self.config.inline)\n              return;\n          let left = window.pageXOffset + inputBounds.left;\n          let isCenter = false;\n          let isRight = false;\n          if (configPosHorizontal === \"center\") {\n              left -= (calendarWidth - inputBounds.width) / 2;\n              isCenter = true;\n          }\n          else if (configPosHorizontal === \"right\") {\n              left -= calendarWidth - inputBounds.width;\n              isRight = true;\n          }\n          toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n          toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n          toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n          const right = window.document.body.offsetWidth -\n              (window.pageXOffset + inputBounds.right);\n          const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n          const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n          toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n          if (self.config.static)\n              return;\n          self.calendarContainer.style.top = `${top}px`;\n          if (!rightMost) {\n              self.calendarContainer.style.left = `${left}px`;\n              self.calendarContainer.style.right = \"auto\";\n          }\n          else if (!centerMost) {\n              self.calendarContainer.style.left = \"auto\";\n              self.calendarContainer.style.right = `${right}px`;\n          }\n          else {\n              const doc = getDocumentStyleSheet();\n              if (doc === undefined)\n                  return;\n              const bodyWidth = window.document.body.offsetWidth;\n              const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n              const centerBefore = \".flatpickr-calendar.centerMost:before\";\n              const centerAfter = \".flatpickr-calendar.centerMost:after\";\n              const centerIndex = doc.cssRules.length;\n              const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n              toggleClass(self.calendarContainer, \"rightMost\", false);\n              toggleClass(self.calendarContainer, \"centerMost\", true);\n              doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n              self.calendarContainer.style.left = `${centerLeft}px`;\n              self.calendarContainer.style.right = \"auto\";\n          }\n      }\n      function getDocumentStyleSheet() {\n          let editableSheet = null;\n          for (let i = 0; i < document.styleSheets.length; i++) {\n              const sheet = document.styleSheets[i];\n              try {\n                  sheet.cssRules;\n              }\n              catch (err) {\n                  continue;\n              }\n              editableSheet = sheet;\n              break;\n          }\n          return editableSheet != null ? editableSheet : createStyleSheet();\n      }\n      function createStyleSheet() {\n          const style = document.createElement(\"style\");\n          document.head.appendChild(style);\n          return style.sheet;\n      }\n      function redraw() {\n          if (self.config.noCalendar || self.isMobile)\n              return;\n          buildMonthSwitch();\n          updateNavigationCurrentMonth();\n          buildDays();\n      }\n      function focusAndClose() {\n          self._input.focus();\n          if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n              navigator.msMaxTouchPoints !== undefined) {\n              setTimeout(self.close, 0);\n          }\n          else {\n              self.close();\n          }\n      }\n      function selectDate(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          const isSelectable = (day) => day.classList &&\n              day.classList.contains(\"flatpickr-day\") &&\n              !day.classList.contains(\"flatpickr-disabled\") &&\n              !day.classList.contains(\"notAllowed\");\n          const t = findParent(getEventTarget(e), isSelectable);\n          if (t === undefined)\n              return;\n          const target = t;\n          const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n          const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n              selectedDate.getMonth() >\n                  self.currentMonth + self.config.showMonths - 1) &&\n              self.config.mode !== \"range\";\n          self.selectedDateElem = target;\n          if (self.config.mode === \"single\")\n              self.selectedDates = [selectedDate];\n          else if (self.config.mode === \"multiple\") {\n              const selectedIndex = isDateSelected(selectedDate);\n              if (selectedIndex)\n                  self.selectedDates.splice(parseInt(selectedIndex), 1);\n              else\n                  self.selectedDates.push(selectedDate);\n          }\n          else if (self.config.mode === \"range\") {\n              if (self.selectedDates.length === 2) {\n                  self.clear(false, false);\n              }\n              self.latestSelectedDateObj = selectedDate;\n              self.selectedDates.push(selectedDate);\n              if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                  self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n          }\n          setHoursFromInputs();\n          if (shouldChangeMonth) {\n              const isNewYear = self.currentYear !== selectedDate.getFullYear();\n              self.currentYear = selectedDate.getFullYear();\n              self.currentMonth = selectedDate.getMonth();\n              if (isNewYear) {\n                  triggerEvent(\"onYearChange\");\n                  buildMonthSwitch();\n              }\n              triggerEvent(\"onMonthChange\");\n          }\n          updateNavigationCurrentMonth();\n          buildDays();\n          updateValue();\n          if (!shouldChangeMonth &&\n              self.config.mode !== \"range\" &&\n              self.config.showMonths === 1)\n              focusOnDayElem(target);\n          else if (self.selectedDateElem !== undefined &&\n              self.hourElement === undefined) {\n              self.selectedDateElem && self.selectedDateElem.focus();\n          }\n          if (self.hourElement !== undefined)\n              self.hourElement !== undefined && self.hourElement.focus();\n          if (self.config.closeOnSelect) {\n              const single = self.config.mode === \"single\" && !self.config.enableTime;\n              const range = self.config.mode === \"range\" &&\n                  self.selectedDates.length === 2 &&\n                  !self.config.enableTime;\n              if (single || range) {\n                  focusAndClose();\n              }\n          }\n          triggerChange();\n      }\n      const CALLBACKS = {\n          locale: [setupLocale, updateWeekdays],\n          showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n          minDate: [jumpToDate],\n          maxDate: [jumpToDate],\n          clickOpens: [\n              () => {\n                  if (self.config.clickOpens === true) {\n                      bind(self._input, \"focus\", self.open);\n                      bind(self._input, \"click\", self.open);\n                  }\n                  else {\n                      self._input.removeEventListener(\"focus\", self.open);\n                      self._input.removeEventListener(\"click\", self.open);\n                  }\n              },\n          ],\n      };\n      function set(option, value) {\n          if (option !== null && typeof option === \"object\") {\n              Object.assign(self.config, option);\n              for (const key in option) {\n                  if (CALLBACKS[key] !== undefined)\n                      CALLBACKS[key].forEach((x) => x());\n              }\n          }\n          else {\n              self.config[option] = value;\n              if (CALLBACKS[option] !== undefined)\n                  CALLBACKS[option].forEach((x) => x());\n              else if (HOOKS.indexOf(option) > -1)\n                  self.config[option] = arrayify(value);\n          }\n          self.redraw();\n          updateValue(true);\n      }\n      function setSelectedDate(inputDate, format) {\n          let dates = [];\n          if (inputDate instanceof Array)\n              dates = inputDate.map((d) => self.parseDate(d, format));\n          else if (inputDate instanceof Date || typeof inputDate === \"number\")\n              dates = [self.parseDate(inputDate, format)];\n          else if (typeof inputDate === \"string\") {\n              switch (self.config.mode) {\n                  case \"single\":\n                  case \"time\":\n                      dates = [self.parseDate(inputDate, format)];\n                      break;\n                  case \"multiple\":\n                      dates = inputDate\n                          .split(self.config.conjunction)\n                          .map((date) => self.parseDate(date, format));\n                      break;\n                  case \"range\":\n                      dates = inputDate\n                          .split(self.l10n.rangeSeparator)\n                          .map((date) => self.parseDate(date, format));\n                      break;\n              }\n          }\n          else\n              self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n          self.selectedDates = (self.config.allowInvalidPreload\n              ? dates\n              : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n          if (self.config.mode === \"range\")\n              self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n      }\n      function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n          if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n              return self.clear(triggerChange);\n          setSelectedDate(date, format);\n          self.latestSelectedDateObj =\n              self.selectedDates[self.selectedDates.length - 1];\n          self.redraw();\n          jumpToDate(undefined, triggerChange);\n          setHoursFromDate();\n          if (self.selectedDates.length === 0) {\n              self.clear(false);\n          }\n          updateValue(triggerChange);\n          if (triggerChange)\n              triggerEvent(\"onChange\");\n      }\n      function parseDateRules(arr) {\n          return arr\n              .slice()\n              .map((rule) => {\n              if (typeof rule === \"string\" ||\n                  typeof rule === \"number\" ||\n                  rule instanceof Date) {\n                  return self.parseDate(rule, undefined, true);\n              }\n              else if (rule &&\n                  typeof rule === \"object\" &&\n                  rule.from &&\n                  rule.to)\n                  return {\n                      from: self.parseDate(rule.from, undefined),\n                      to: self.parseDate(rule.to, undefined),\n                  };\n              return rule;\n          })\n              .filter((x) => x);\n      }\n      function setupDates() {\n          self.selectedDates = [];\n          self.now = self.parseDate(self.config.now) || new Date();\n          const preloadedDate = self.config.defaultDate ||\n              ((self.input.nodeName === \"INPUT\" ||\n                  self.input.nodeName === \"TEXTAREA\") &&\n                  self.input.placeholder &&\n                  self.input.value === self.input.placeholder\n                  ? null\n                  : self.input.value);\n          if (preloadedDate)\n              setSelectedDate(preloadedDate, self.config.dateFormat);\n          self._initialDate =\n              self.selectedDates.length > 0\n                  ? self.selectedDates[0]\n                  : self.config.minDate &&\n                      self.config.minDate.getTime() > self.now.getTime()\n                      ? self.config.minDate\n                      : self.config.maxDate &&\n                          self.config.maxDate.getTime() < self.now.getTime()\n                          ? self.config.maxDate\n                          : self.now;\n          self.currentYear = self._initialDate.getFullYear();\n          self.currentMonth = self._initialDate.getMonth();\n          if (self.selectedDates.length > 0)\n              self.latestSelectedDateObj = self.selectedDates[0];\n          if (self.config.minTime !== undefined)\n              self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n          if (self.config.maxTime !== undefined)\n              self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n          self.minDateHasTime =\n              !!self.config.minDate &&\n                  (self.config.minDate.getHours() > 0 ||\n                      self.config.minDate.getMinutes() > 0 ||\n                      self.config.minDate.getSeconds() > 0);\n          self.maxDateHasTime =\n              !!self.config.maxDate &&\n                  (self.config.maxDate.getHours() > 0 ||\n                      self.config.maxDate.getMinutes() > 0 ||\n                      self.config.maxDate.getSeconds() > 0);\n      }\n      function setupInputs() {\n          self.input = getInputElem();\n          if (!self.input) {\n              self.config.errorHandler(new Error(\"Invalid input element specified\"));\n              return;\n          }\n          self.input._type = self.input.type;\n          self.input.type = \"text\";\n          self.input.classList.add(\"flatpickr-input\");\n          self._input = self.input;\n          if (self.config.altInput) {\n              self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n              self._input = self.altInput;\n              self.altInput.placeholder = self.input.placeholder;\n              self.altInput.disabled = self.input.disabled;\n              self.altInput.required = self.input.required;\n              self.altInput.tabIndex = self.input.tabIndex;\n              self.altInput.type = \"text\";\n              self.input.setAttribute(\"type\", \"hidden\");\n              if (!self.config.static && self.input.parentNode)\n                  self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n          }\n          if (!self.config.allowInput)\n              self._input.setAttribute(\"readonly\", \"readonly\");\n          self._positionElement = self.config.positionElement || self._input;\n      }\n      function setupMobile() {\n          const inputType = self.config.enableTime\n              ? self.config.noCalendar\n                  ? \"time\"\n                  : \"datetime-local\"\n              : \"date\";\n          self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n          self.mobileInput.tabIndex = 1;\n          self.mobileInput.type = inputType;\n          self.mobileInput.disabled = self.input.disabled;\n          self.mobileInput.required = self.input.required;\n          self.mobileInput.placeholder = self.input.placeholder;\n          self.mobileFormatStr =\n              inputType === \"datetime-local\"\n                  ? \"Y-m-d\\\\TH:i:S\"\n                  : inputType === \"date\"\n                      ? \"Y-m-d\"\n                      : \"H:i:S\";\n          if (self.selectedDates.length > 0) {\n              self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n          }\n          if (self.config.minDate)\n              self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n          if (self.config.maxDate)\n              self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n          if (self.input.getAttribute(\"step\"))\n              self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n          self.input.type = \"hidden\";\n          if (self.altInput !== undefined)\n              self.altInput.type = \"hidden\";\n          try {\n              if (self.input.parentNode)\n                  self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n          }\n          catch (_a) { }\n          bind(self.mobileInput, \"change\", (e) => {\n              self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n              triggerEvent(\"onChange\");\n              triggerEvent(\"onClose\");\n          });\n      }\n      function toggle(e) {\n          if (self.isOpen === true)\n              return self.close();\n          self.open(e);\n      }\n      function triggerEvent(event, data) {\n          if (self.config === undefined)\n              return;\n          const hooks = self.config[event];\n          if (hooks !== undefined && hooks.length > 0) {\n              for (let i = 0; hooks[i] && i < hooks.length; i++)\n                  hooks[i](self.selectedDates, self.input.value, self, data);\n          }\n          if (event === \"onChange\") {\n              self.input.dispatchEvent(createEvent(\"change\"));\n              self.input.dispatchEvent(createEvent(\"input\"));\n          }\n      }\n      function createEvent(name) {\n          const e = document.createEvent(\"Event\");\n          e.initEvent(name, true, true);\n          return e;\n      }\n      function isDateSelected(date) {\n          for (let i = 0; i < self.selectedDates.length; i++) {\n              if (compareDates(self.selectedDates[i], date) === 0)\n                  return \"\" + i;\n          }\n          return false;\n      }\n      function isDateInRange(date) {\n          if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n              return false;\n          return (compareDates(date, self.selectedDates[0]) >= 0 &&\n              compareDates(date, self.selectedDates[1]) <= 0);\n      }\n      function updateNavigationCurrentMonth() {\n          if (self.config.noCalendar || self.isMobile || !self.monthNav)\n              return;\n          self.yearElements.forEach((yearElement, i) => {\n              const d = new Date(self.currentYear, self.currentMonth, 1);\n              d.setMonth(self.currentMonth + i);\n              if (self.config.showMonths > 1 ||\n                  self.config.monthSelectorType === \"static\") {\n                  self.monthElements[i].textContent =\n                      monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n              }\n              else {\n                  self.monthsDropdownContainer.value = d.getMonth().toString();\n              }\n              yearElement.value = d.getFullYear().toString();\n          });\n          self._hidePrevMonthArrow =\n              self.config.minDate !== undefined &&\n                  (self.currentYear === self.config.minDate.getFullYear()\n                      ? self.currentMonth <= self.config.minDate.getMonth()\n                      : self.currentYear < self.config.minDate.getFullYear());\n          self._hideNextMonthArrow =\n              self.config.maxDate !== undefined &&\n                  (self.currentYear === self.config.maxDate.getFullYear()\n                      ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                      : self.currentYear > self.config.maxDate.getFullYear());\n      }\n      function getDateStr(format) {\n          return self.selectedDates\n              .map((dObj) => self.formatDate(dObj, format))\n              .filter((d, i, arr) => self.config.mode !== \"range\" ||\n              self.config.enableTime ||\n              arr.indexOf(d) === i)\n              .join(self.config.mode !== \"range\"\n              ? self.config.conjunction\n              : self.l10n.rangeSeparator);\n      }\n      function updateValue(triggerChange = true) {\n          if (self.mobileInput !== undefined && self.mobileFormatStr) {\n              self.mobileInput.value =\n                  self.latestSelectedDateObj !== undefined\n                      ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                      : \"\";\n          }\n          self.input.value = getDateStr(self.config.dateFormat);\n          if (self.altInput !== undefined) {\n              self.altInput.value = getDateStr(self.config.altFormat);\n          }\n          if (triggerChange !== false)\n              triggerEvent(\"onValueUpdate\");\n      }\n      function onMonthNavClick(e) {\n          const eventTarget = getEventTarget(e);\n          const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n          const isNextMonth = self.nextMonthNav.contains(eventTarget);\n          if (isPrevMonth || isNextMonth) {\n              changeMonth(isPrevMonth ? -1 : 1);\n          }\n          else if (self.yearElements.indexOf(eventTarget) >= 0) {\n              eventTarget.select();\n          }\n          else if (eventTarget.classList.contains(\"arrowUp\")) {\n              self.changeYear(self.currentYear + 1);\n          }\n          else if (eventTarget.classList.contains(\"arrowDown\")) {\n              self.changeYear(self.currentYear - 1);\n          }\n      }\n      function timeWrapper(e) {\n          e.preventDefault();\n          const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n          if (self.amPM !== undefined && eventTarget === self.amPM) {\n              self.amPM.textContent =\n                  self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n          }\n          const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n              (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n          let newValue = curValue + step * delta;\n          if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n              const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n              if (newValue < min) {\n                  newValue =\n                      max +\n                          newValue +\n                          int(!isHourElem) +\n                          (int(isHourElem) && int(!self.amPM));\n                  if (isMinuteElem)\n                      incrementNumInput(undefined, -1, self.hourElement);\n              }\n              else if (newValue > max) {\n                  newValue =\n                      input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                  if (isMinuteElem)\n                      incrementNumInput(undefined, 1, self.hourElement);\n              }\n              if (self.amPM &&\n                  isHourElem &&\n                  (step === 1\n                      ? newValue + curValue === 23\n                      : Math.abs(newValue - curValue) > step)) {\n                  self.amPM.textContent =\n                      self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n              }\n              input.value = pad(newValue);\n          }\n      }\n      init();\n      return self;\n  }\n  function _flatpickr(nodeList, config) {\n      const nodes = Array.prototype.slice\n          .call(nodeList)\n          .filter((x) => x instanceof HTMLElement);\n      const instances = [];\n      for (let i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n          try {\n              if (node.getAttribute(\"data-fp-omit\") !== null)\n                  continue;\n              if (node._flatpickr !== undefined) {\n                  node._flatpickr.destroy();\n                  node._flatpickr = undefined;\n              }\n              node._flatpickr = FlatpickrInstance(node, config || {});\n              instances.push(node._flatpickr);\n          }\n          catch (e) {\n              console.error(e);\n          }\n      }\n      return instances.length === 1 ? instances[0] : instances;\n  }\n  if (typeof HTMLElement !== \"undefined\" &&\n      typeof HTMLCollection !== \"undefined\" &&\n      typeof NodeList !== \"undefined\") {\n      HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n          return _flatpickr(this, config);\n      };\n      HTMLElement.prototype.flatpickr = function (config) {\n          return _flatpickr([this], config);\n      };\n  }\n  var flatpickr = function (selector, config) {\n      if (typeof selector === \"string\") {\n          return _flatpickr(window.document.querySelectorAll(selector), config);\n      }\n      else if (selector instanceof Node) {\n          return _flatpickr([selector], config);\n      }\n      else {\n          return _flatpickr(selector, config);\n      }\n  };\n  flatpickr.defaultConfig = {};\n  flatpickr.l10ns = {\n      en: Object.assign({}, english),\n      default: Object.assign({}, english),\n  };\n  flatpickr.localize = (l10n) => {\n      flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n  };\n  flatpickr.setDefaults = (config) => {\n      flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n  };\n  flatpickr.parseDate = createDateParser({});\n  flatpickr.formatDate = createDateFormatter({});\n  flatpickr.compareDates = compareDates;\n  if (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n      jQuery.fn.flatpickr = function (config) {\n          return _flatpickr(this, config);\n      };\n  }\n  Date.prototype.fp_incr = function (days) {\n      return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n  };\n  if (typeof window !== \"undefined\") {\n      window.flatpickr = flatpickr;\n  }\n\n  flatpickr(\".form__date\", {\n    dateFormat: \"d-m-Y\",\n    disableMobile: \"true\"\n  });\n  flatpickr(\".form__time\", {\n    enableTime: true,\n    noCalendar: true,\n    dateFormat: \"H-i\",\n    disableMobile: \"true\"\n  });\n\n}());\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0cy5qcyIsInNvdXJjZXMiOlsic3JjL3NjcmlwdHMvbW9kdWxlcy9BbmltYXRlLmpzIiwibm9kZV9tb2R1bGVzL0BzcGxpZGVqcy9zcGxpZGUvZGlzdC9qcy9zcGxpZGUuZXNtLmpzIiwic3JjL3NjcmlwdHMvbW9kdWxlcy9DYXJvdXNlbC5qcyIsInNyYy9zY3JpcHRzL21vZHVsZXMvVG9nZ2xlTmF2LmpzIiwibm9kZV9tb2R1bGVzL3NpbXBsZWxpZ2h0Ym94L2Rpc3Qvc2ltcGxlLWxpZ2h0Ym94Lm1vZHVsZXMuanMiLCJzcmMvc2NyaXB0cy9tb2R1bGVzL0xpZ2h0Ym94LmpzIiwibm9kZV9tb2R1bGVzL3N0aWNreS1zaWRlYmFyLXYyL3NyYy9zdGlja3ktc2lkZWJhci5qcyIsInNyYy9zY3JpcHRzL21vZHVsZXMvU3RpY2t5LmpzIiwibm9kZV9tb2R1bGVzL2p1c3QtZXh0ZW5kL2luZGV4LmVzbS5qcyIsIm5vZGVfbW9kdWxlcy9kcm9wem9uZS9kaXN0L2Ryb3B6b25lLm1qcyIsInNyYy9zY3JpcHRzL21vZHVsZXMvRHJvcHpvbmUuanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3R5cGVzL29wdGlvbnMuanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL2wxMG4vZGVmYXVsdC5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvaW5kZXguanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL2RvbS5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvZm9ybWF0dGluZy5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvZGF0ZXMuanMiLCJub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL3BvbHlmaWxscy5qcyIsIm5vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vaW5kZXguanMiLCJzcmMvc2NyaXB0cy9tb2R1bGVzL0ZsYXRwaWNrZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEFuaW1hdGVcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogLSBhZGQgY2xhc3MgdG8gZWxlbWVudCBpbiB2aWV3cG9ydFxyXG4gKiAtIGlmIHlvdSB3YW50IGRpc2FibGUgYW5pbWF0ZSBkZWxheSBvbiBtb2JpbGUgdXNlIFthbmltYXRlLWRlbGF5LWRlc2t0b3BdXHJcbiAqIC0gc2V0IGFuaW1hdGlvbiBkZWxheSB2aWEgW2FuaW1hdGUtZGVsYXldIGh0bWwgYXR0cmlidXRlXHJcbiAqIC0gc2V0IHZpc2libGUgdGhyZXNob2xkIHZpYSBbYW5pbWF0ZS10aHJlc2hvbGRdIGh0bWwgYXR0cmlidXRlXHJcbiAqL1xyXG5cclxuIGNvbnN0IElTTU9CSUxFID0gd2luZG93Lm1hdGNoTWVkaWEoXCJvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpXCIpLm1hdGNoZXNcclxuIGNvbnN0IFRIUkVTSE9MRCA9ICcwLjc1J1xyXG4gY29uc3QgTE9BRF9USFJFU0hPTEQgPSAnMC4yJ1xyXG4gY29uc3QgRUxFTUVOVFMgPSAnLmFuaW1hdGUnXHJcbiBjb25zdCBWSVNJQkxFX0NMQVNTID0gJ2FuaW1hdGUtLXZpc2libGUnXHJcblxyXG4gY2xhc3MgQW5pbWF0ZSB7XHJcbiAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5zZWN0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoRUxFTUVOVFMpXHJcbiAgICB0aGlzLlRIUkVTSE9MRCA9IFRIUkVTSE9MRFxyXG4gICAgdGhpcy5MT0FEX1RIUkVTSE9MRCA9IExPQURfVEhSRVNIT0xEXHJcblxyXG4gICAgICBpZignSW50ZXJzZWN0aW9uT2JzZXJ2ZXInIGluIHdpbmRvdykge1xyXG4gICAgICAgIHRoaXMuc2VjdGlvbnMuZm9yRWFjaCgoZWwpID0+IHtcclxuICAgICAgICAgY29uc3QgQm91bmRpbmdDbGllbnRSZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcclxuICAgICAgICAgY29uc3QgdmlzaWJsZVJhdGlvID0gIEJvdW5kaW5nQ2xpZW50UmVjdC5oZWlnaHQgLyB3aW5kb3cuaW5uZXJIZWlnaHRcclxuXHJcbiAgICAgICAgIGlmKHZpc2libGVSYXRpbyA+IDAuOTUpe1xyXG4gICAgICAgICAgIHRoaXMuVEhSRVNIT0xEID0gIHdpbmRvdy5pbm5lckhlaWdodCAvIEJvdW5kaW5nQ2xpZW50UmVjdC5oZWlnaHQgLyAxMDAgKiAzMFxyXG4gICAgICAgICAgIHRoaXMuTE9BRF9USFJFU0hPTEQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyBCb3VuZGluZ0NsaWVudFJlY3QuaGVpZ2h0IC8gMTAwICogMjBcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC8vIG9ic2VydmUgb24gcGFnZSBsb2FkXHJcbiAgICAgICAgICBjb25zdCBsb2FkT2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIodGhpcy5vYnNlcnZlQ2FsbGJhY2ssIHtcclxuICAgICAgICAgICAgdGhyZXNob2xkOiB0aGlzLkxPQURfVEhSRVNIT0xEXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGxvYWRPYnNlcnZlci5vYnNlcnZlKGVsKTtcclxuXHJcblxyXG4gICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGxvYWRPYnNlcnZlci5kaXNjb25uZWN0KCk7XHJcbiAgICAgICAgICB9LCAxMDApO1xyXG5cclxuICAgICAgICAgIC8vIG9ic2VydmVcclxuICAgICAgICAgIGNvbnN0IG9ic2VydmVyVGhyZXNob2xkID0gZWwuZ2V0QXR0cmlidXRlKCdhbmltYXRlLXRocmVzaG9sZCcpID8gZWwuZ2V0QXR0cmlidXRlKCdhbmltYXRlLXRocmVzaG9sZCcpIDogdGhpcy5USFJFU0hPTERcclxuICAgICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKHRoaXMub2JzZXJ2ZUNhbGxiYWNrLCB7XHJcbiAgICAgICAgICAgIHRocmVzaG9sZDogb2JzZXJ2ZXJUaHJlc2hvbGRcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShlbCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnNlY3Rpb25zLmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKFZJU0lCTEVfQ0xBU1MpXHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG4gICB9XHJcblxyXG4gICAgb2JzZXJ2ZUNhbGxiYWNrID0gKGVudHJpZXMpID0+IHtcclxuICAgICAgZW50cmllcy5tYXAoKGVudHJ5KSA9PiB7XHJcbiAgICAgICAgY29uc3Qgc2VjdGlvbiA9IGVudHJ5LnRhcmdldDtcclxuICAgICAgICBjb25zdCBkZWxheSA9IHRoaXMuZ2V0RGVsYXkoc2VjdGlvbilcclxuICAgICAgICBjb25zdCBzZWN0aW9uQm9keUNsYXNzID0gc2VjdGlvbi5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGUtYm9keS1jbGFzcycpXHJcblxyXG4gICAgICAgIGlmIChlbnRyeS5pc0ludGVyc2VjdGluZykge1xyXG4gICAgICAgICAgaWYoSVNNT0JJTEUgJiYgc2VjdGlvbi5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGUtZGVsYXktZGVza3RvcCcpKXtcclxuICAgICAgICAgICAgc2VjdGlvbi5jbGFzc0xpc3QuYWRkKFZJU0lCTEVfQ0xBU1MpXHJcblxyXG4gICAgICAgICAgICB0aGlzLmJvZHlDbGFzcyhzZWN0aW9uQm9keUNsYXNzLCAnYWRkJylcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgIHNlY3Rpb24uY2xhc3NMaXN0LmFkZChWSVNJQkxFX0NMQVNTKVxyXG4gICAgICAgICAgICAgIHRoaXMuYm9keUNsYXNzKHNlY3Rpb25Cb2R5Q2xhc3MsICdhZGQnKVxyXG4gICAgICAgICAgICB9LCBkZWxheSlcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5ib2R5Q2xhc3Moc2VjdGlvbkJvZHlDbGFzcywgJ3JlbW92ZScpXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgIGdldERlbGF5ID0gKHNlY3Rpb24pID0+IHtcclxuICAgdmFyIGRlbGF5ID0gc2VjdGlvbi5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGUtZGVsYXknKVxyXG5cclxuICAgaWYoIUlTTU9CSUxFICYmIHNlY3Rpb24uZ2V0QXR0cmlidXRlKCdhbmltYXRlLWRlbGF5LWRlc2t0b3AnKSl7XHJcbiAgICAgdmFyIGRlbGF5ID0gc2VjdGlvbi5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGUtZGVsYXktZGVza3RvcCcpXHJcbiAgIH1cclxuXHJcbiAgIGlmIChkZWxheSA9PT0gbnVsbCkge1xyXG4gICAgIHJldHVybiAwXHJcbiAgIH0gZWxzZSBpZiAoZGVsYXkuaW5jbHVkZXMoJy4nKSkge1xyXG4gICAgIHJldHVybiBwYXJzZUludChkZWxheSAqIDEwMDApXHJcbiAgIH0gZWxzZSB7XHJcbiAgICAgcmV0dXJuIHBhcnNlSW50KGRlbGF5KVxyXG4gICB9XHJcbiAgIH1cclxuXHJcbiAgIGJvZHlDbGFzcyA9IChodG1sY2xhc3MsIHR5cGUpID0+IHtcclxuICAgICBpZighaHRtbGNsYXNzKXtcclxuICAgICAgIHJldHVyblxyXG4gICAgIH1cclxuXHJcbiAgICAgIGlmKHR5cGUgPT0gJ2FkZCcpe1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChodG1sY2xhc3MpXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKGh0bWxjbGFzcylcclxuICAgICAgfVxyXG4gICAgfVxyXG4gfVxyXG5cclxuIG5ldyBBbmltYXRlKClcclxuIiwiLyohXG4gKiBTcGxpZGUuanNcbiAqIFZlcnNpb24gIDogMy4yLjVcbiAqIExpY2Vuc2UgIDogTUlUXG4gKiBDb3B5cmlnaHQ6IDIwMjEgTmFvdG9zaGkgRnVqaXRhXG4gKi9cbmNvbnN0IFBST0pFQ1RfQ09ERSA9IFwic3BsaWRlXCI7XG5jb25zdCBEQVRBX0FUVFJJQlVURSA9IGBkYXRhLSR7UFJPSkVDVF9DT0RFfWA7XG5cbmNvbnN0IENSRUFURUQgPSAxO1xuY29uc3QgTU9VTlRFRCA9IDI7XG5jb25zdCBJRExFID0gMztcbmNvbnN0IE1PVklORyA9IDQ7XG5jb25zdCBERVNUUk9ZRUQgPSA1O1xuY29uc3QgU1RBVEVTID0ge1xuICBDUkVBVEVELFxuICBNT1VOVEVELFxuICBJRExFLFxuICBNT1ZJTkcsXG4gIERFU1RST1lFRFxufTtcblxuY29uc3QgREVGQVVMVF9FVkVOVF9QUklPUklUWSA9IDEwO1xuY29uc3QgREVGQVVMVF9VU0VSX0VWRU5UX1BSSU9SSVRZID0gMjA7XG5cbmZ1bmN0aW9uIGVtcHR5KGFycmF5KSB7XG4gIGFycmF5Lmxlbmd0aCA9IDA7XG59XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KHN1YmplY3QpIHtcbiAgcmV0dXJuICFpc051bGwoc3ViamVjdCkgJiYgdHlwZW9mIHN1YmplY3QgPT09IFwib2JqZWN0XCI7XG59XG5mdW5jdGlvbiBpc0FycmF5KHN1YmplY3QpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoc3ViamVjdCk7XG59XG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHN1YmplY3QpIHtcbiAgcmV0dXJuIHR5cGVvZiBzdWJqZWN0ID09PSBcImZ1bmN0aW9uXCI7XG59XG5mdW5jdGlvbiBpc1N0cmluZyhzdWJqZWN0KSB7XG4gIHJldHVybiB0eXBlb2Ygc3ViamVjdCA9PT0gXCJzdHJpbmdcIjtcbn1cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKHN1YmplY3QpIHtcbiAgcmV0dXJuIHR5cGVvZiBzdWJqZWN0ID09PSBcInVuZGVmaW5lZFwiO1xufVxuZnVuY3Rpb24gaXNOdWxsKHN1YmplY3QpIHtcbiAgcmV0dXJuIHN1YmplY3QgPT09IG51bGw7XG59XG5mdW5jdGlvbiBpc0hUTUxFbGVtZW50KHN1YmplY3QpIHtcbiAgcmV0dXJuIHN1YmplY3QgaW5zdGFuY2VvZiBIVE1MRWxlbWVudDtcbn1cblxuZnVuY3Rpb24gdG9BcnJheSh2YWx1ZSkge1xuICByZXR1cm4gaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFt2YWx1ZV07XG59XG5cbmZ1bmN0aW9uIGZvckVhY2godmFsdWVzLCBpdGVyYXRlZSkge1xuICB0b0FycmF5KHZhbHVlcykuZm9yRWFjaChpdGVyYXRlZSk7XG59XG5cbmZ1bmN0aW9uIGluY2x1ZGVzKGFycmF5LCB2YWx1ZSkge1xuICByZXR1cm4gYXJyYXkuaW5kZXhPZih2YWx1ZSkgPiAtMTtcbn1cblxuZnVuY3Rpb24gcHVzaChhcnJheSwgaXRlbXMpIHtcbiAgYXJyYXkucHVzaCguLi50b0FycmF5KGl0ZW1zKSk7XG4gIHJldHVybiBhcnJheTtcbn1cblxuY29uc3QgYXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxuZnVuY3Rpb24gc2xpY2UoYXJyYXlMaWtlLCBzdGFydCwgZW5kKSB7XG4gIHJldHVybiBhcnJheVByb3RvLnNsaWNlLmNhbGwoYXJyYXlMaWtlLCBzdGFydCwgZW5kKTtcbn1cblxuZnVuY3Rpb24gZmluZChhcnJheUxpa2UsIHByZWRpY2F0ZSkge1xuICByZXR1cm4gc2xpY2UoYXJyYXlMaWtlKS5maWx0ZXIocHJlZGljYXRlKVswXTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlQ2xhc3MoZWxtLCBjbGFzc2VzLCBhZGQpIHtcbiAgaWYgKGVsbSkge1xuICAgIGZvckVhY2goY2xhc3NlcywgKG5hbWUpID0+IHtcbiAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgIGVsbS5jbGFzc0xpc3RbYWRkID8gXCJhZGRcIiA6IFwicmVtb3ZlXCJdKG5hbWUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFkZENsYXNzKGVsbSwgY2xhc3Nlcykge1xuICB0b2dnbGVDbGFzcyhlbG0sIGlzU3RyaW5nKGNsYXNzZXMpID8gY2xhc3Nlcy5zcGxpdChcIiBcIikgOiBjbGFzc2VzLCB0cnVlKTtcbn1cblxuZnVuY3Rpb24gYXBwZW5kKHBhcmVudCwgY2hpbGRyZW4pIHtcbiAgZm9yRWFjaChjaGlsZHJlbiwgcGFyZW50LmFwcGVuZENoaWxkLmJpbmQocGFyZW50KSk7XG59XG5cbmZ1bmN0aW9uIGJlZm9yZShub2RlcywgcmVmKSB7XG4gIGZvckVhY2gobm9kZXMsIChub2RlKSA9PiB7XG4gICAgY29uc3QgcGFyZW50ID0gcmVmLnBhcmVudE5vZGU7XG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgcGFyZW50Lmluc2VydEJlZm9yZShub2RlLCByZWYpO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXMoZWxtLCBzZWxlY3Rvcikge1xuICByZXR1cm4gKGVsbVtcIm1zTWF0Y2hlc1NlbGVjdG9yXCJdIHx8IGVsbS5tYXRjaGVzKS5jYWxsKGVsbSwgc2VsZWN0b3IpO1xufVxuXG5mdW5jdGlvbiBjaGlsZHJlbihwYXJlbnQsIHNlbGVjdG9yKSB7XG4gIHJldHVybiBwYXJlbnQgPyBzbGljZShwYXJlbnQuY2hpbGRyZW4pLmZpbHRlcigoY2hpbGQpID0+IG1hdGNoZXMoY2hpbGQsIHNlbGVjdG9yKSkgOiBbXTtcbn1cblxuZnVuY3Rpb24gY2hpbGQocGFyZW50LCBzZWxlY3Rvcikge1xuICByZXR1cm4gc2VsZWN0b3IgPyBjaGlsZHJlbihwYXJlbnQsIHNlbGVjdG9yKVswXSA6IHBhcmVudC5maXJzdEVsZW1lbnRDaGlsZDtcbn1cblxuZnVuY3Rpb24gZm9yT3duKG9iamVjdCwgaXRlcmF0ZWUsIHJpZ2h0KSB7XG4gIGlmIChvYmplY3QpIHtcbiAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG4gICAga2V5cyA9IHJpZ2h0ID8ga2V5cy5yZXZlcnNlKCkgOiBrZXlzO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChrZXkgIT09IFwiX19wcm90b19fXCIpIHtcbiAgICAgICAgaWYgKGl0ZXJhdGVlKG9iamVjdFtrZXldLCBrZXkpID09PSBmYWxzZSkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbmZ1bmN0aW9uIGFzc2lnbihvYmplY3QpIHtcbiAgc2xpY2UoYXJndW1lbnRzLCAxKS5mb3JFYWNoKChzb3VyY2UpID0+IHtcbiAgICBmb3JPd24oc291cmNlLCAodmFsdWUsIGtleSkgPT4ge1xuICAgICAgb2JqZWN0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbmZ1bmN0aW9uIG1lcmdlKG9iamVjdCwgc291cmNlKSB7XG4gIGZvck93bihzb3VyY2UsICh2YWx1ZSwga2V5KSA9PiB7XG4gICAgaWYgKGlzQXJyYXkodmFsdWUpKSB7XG4gICAgICBvYmplY3Rba2V5XSA9IHZhbHVlLnNsaWNlKCk7XG4gICAgfSBlbHNlIGlmIChpc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgIG9iamVjdFtrZXldID0gbWVyZ2UoaXNPYmplY3Qob2JqZWN0W2tleV0pID8gb2JqZWN0W2tleV0gOiB7fSwgdmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUF0dHJpYnV0ZShlbG0sIGF0dHJzKSB7XG4gIGlmIChlbG0pIHtcbiAgICBmb3JFYWNoKGF0dHJzLCAoYXR0cikgPT4ge1xuICAgICAgZWxtLnJlbW92ZUF0dHJpYnV0ZShhdHRyKTtcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGUoZWxtLCBhdHRycywgdmFsdWUpIHtcbiAgaWYgKGlzT2JqZWN0KGF0dHJzKSkge1xuICAgIGZvck93bihhdHRycywgKHZhbHVlMiwgbmFtZSkgPT4ge1xuICAgICAgc2V0QXR0cmlidXRlKGVsbSwgbmFtZSwgdmFsdWUyKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBpc051bGwodmFsdWUpID8gcmVtb3ZlQXR0cmlidXRlKGVsbSwgYXR0cnMpIDogZWxtLnNldEF0dHJpYnV0ZShhdHRycywgU3RyaW5nKHZhbHVlKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlKHRhZywgYXR0cnMsIHBhcmVudCkge1xuICBjb25zdCBlbG0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gIGlmIChhdHRycykge1xuICAgIGlzU3RyaW5nKGF0dHJzKSA/IGFkZENsYXNzKGVsbSwgYXR0cnMpIDogc2V0QXR0cmlidXRlKGVsbSwgYXR0cnMpO1xuICB9XG4gIHBhcmVudCAmJiBhcHBlbmQocGFyZW50LCBlbG0pO1xuICByZXR1cm4gZWxtO1xufVxuXG5mdW5jdGlvbiBzdHlsZShlbG0sIHByb3AsIHZhbHVlKSB7XG4gIGlmIChpc1VuZGVmaW5lZCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZ2V0Q29tcHV0ZWRTdHlsZShlbG0pW3Byb3BdO1xuICB9XG4gIGlmICghaXNOdWxsKHZhbHVlKSkge1xuICAgIGNvbnN0IHsgc3R5bGU6IHN0eWxlMiB9ID0gZWxtO1xuICAgIHZhbHVlID0gYCR7dmFsdWV9YDtcbiAgICBpZiAoc3R5bGUyW3Byb3BdICE9PSB2YWx1ZSkge1xuICAgICAgc3R5bGUyW3Byb3BdID0gdmFsdWU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGRpc3BsYXkoZWxtLCBkaXNwbGF5Mikge1xuICBzdHlsZShlbG0sIFwiZGlzcGxheVwiLCBkaXNwbGF5Mik7XG59XG5cbmZ1bmN0aW9uIGZvY3VzKGVsbSkge1xuICBlbG1bXCJzZXRBY3RpdmVcIl0gJiYgZWxtW1wic2V0QWN0aXZlXCJdKCkgfHwgZWxtLmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0QXR0cmlidXRlKGVsbSwgYXR0cikge1xuICByZXR1cm4gZWxtLmdldEF0dHJpYnV0ZShhdHRyKTtcbn1cblxuZnVuY3Rpb24gaGFzQ2xhc3MoZWxtLCBjbGFzc05hbWUpIHtcbiAgcmV0dXJuIGVsbSAmJiBlbG0uY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIHJlY3QodGFyZ2V0KSB7XG4gIHJldHVybiB0YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZShub2Rlcykge1xuICBmb3JFYWNoKG5vZGVzLCAobm9kZSkgPT4ge1xuICAgIGlmIChub2RlICYmIG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG1lYXN1cmUocGFyZW50LCB2YWx1ZSkge1xuICBpZiAoaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgY29uc3QgZGl2ID0gY3JlYXRlKFwiZGl2XCIsIHsgc3R5bGU6IGB3aWR0aDogJHt2YWx1ZX07IHBvc2l0aW9uOiBhYnNvbHV0ZTtgIH0sIHBhcmVudCk7XG4gICAgdmFsdWUgPSByZWN0KGRpdikud2lkdGg7XG4gICAgcmVtb3ZlKGRpdik7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBwYXJzZUh0bWwoaHRtbCkge1xuICByZXR1cm4gY2hpbGQobmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhodG1sLCBcInRleHQvaHRtbFwiKS5ib2R5KTtcbn1cblxuZnVuY3Rpb24gcHJldmVudChlLCBzdG9wUHJvcGFnYXRpb24pIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBpZiAoc3RvcFByb3BhZ2F0aW9uKSB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHF1ZXJ5KHBhcmVudCwgc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHBhcmVudCAmJiBwYXJlbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG59XG5cbmZ1bmN0aW9uIHF1ZXJ5QWxsKHBhcmVudCwgc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHNsaWNlKHBhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNsYXNzKGVsbSwgY2xhc3Nlcykge1xuICB0b2dnbGVDbGFzcyhlbG0sIGNsYXNzZXMsIGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gdW5pdCh2YWx1ZSkge1xuICByZXR1cm4gaXNTdHJpbmcodmFsdWUpID8gdmFsdWUgOiB2YWx1ZSA/IGAke3ZhbHVlfXB4YCA6IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGFzc2VydChjb25kaXRpb24sIG1lc3NhZ2UgPSBcIlwiKSB7XG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBbJHtQUk9KRUNUX0NPREV9XSAke21lc3NhZ2V9YCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbmV4dFRpY2soY2FsbGJhY2spIHtcbiAgc2V0VGltZW91dChjYWxsYmFjayk7XG59XG5cbmNvbnN0IG5vb3AgPSAoKSA9PiB7XG59O1xuXG5mdW5jdGlvbiByYWYoZnVuYykge1xuICByZXR1cm4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmMpO1xufVxuXG5jb25zdCB7IG1pbiwgbWF4LCBmbG9vciwgY2VpbCwgYWJzIH0gPSBNYXRoO1xuXG5mdW5jdGlvbiBhcHByb3hpbWF0ZWx5RXF1YWwoeCwgeSwgZXBzaWxvbikge1xuICByZXR1cm4gYWJzKHggLSB5KSA8IGVwc2lsb247XG59XG5cbmZ1bmN0aW9uIGJldHdlZW4obnVtYmVyLCBtaW5Pck1heCwgbWF4T3JNaW4sIGV4Y2x1c2l2ZSkge1xuICBjb25zdCBtaW5pbXVtID0gbWluKG1pbk9yTWF4LCBtYXhPck1pbik7XG4gIGNvbnN0IG1heGltdW0gPSBtYXgobWluT3JNYXgsIG1heE9yTWluKTtcbiAgcmV0dXJuIGV4Y2x1c2l2ZSA/IG1pbmltdW0gPCBudW1iZXIgJiYgbnVtYmVyIDwgbWF4aW11bSA6IG1pbmltdW0gPD0gbnVtYmVyICYmIG51bWJlciA8PSBtYXhpbXVtO1xufVxuXG5mdW5jdGlvbiBjbGFtcChudW1iZXIsIHgsIHkpIHtcbiAgY29uc3QgbWluaW11bSA9IG1pbih4LCB5KTtcbiAgY29uc3QgbWF4aW11bSA9IG1heCh4LCB5KTtcbiAgcmV0dXJuIG1pbihtYXgobWluaW11bSwgbnVtYmVyKSwgbWF4aW11bSk7XG59XG5cbmZ1bmN0aW9uIHNpZ24oeCkge1xuICByZXR1cm4gKyh4ID4gMCkgLSArKHggPCAwKTtcbn1cblxuZnVuY3Rpb24gY2FtZWxUb0tlYmFiKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csIFwiJDEtJDJcIikudG9Mb3dlckNhc2UoKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0KHN0cmluZywgcmVwbGFjZW1lbnRzKSB7XG4gIGZvckVhY2gocmVwbGFjZW1lbnRzLCAocmVwbGFjZW1lbnQpID0+IHtcbiAgICBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShcIiVzXCIsIGAke3JlcGxhY2VtZW50fWApO1xuICB9KTtcbiAgcmV0dXJuIHN0cmluZztcbn1cblxuZnVuY3Rpb24gcGFkKG51bWJlcikge1xuICByZXR1cm4gbnVtYmVyIDwgMTAgPyBgMCR7bnVtYmVyfWAgOiBgJHtudW1iZXJ9YDtcbn1cblxuY29uc3QgaWRzID0ge307XG5mdW5jdGlvbiB1bmlxdWVJZChwcmVmaXgpIHtcbiAgcmV0dXJuIGAke3ByZWZpeH0ke3BhZChpZHNbcHJlZml4XSA9IChpZHNbcHJlZml4XSB8fCAwKSArIDEpfWA7XG59XG5cbmZ1bmN0aW9uIEV2ZW50QnVzKCkge1xuICBsZXQgaGFuZGxlcnMgPSB7fTtcbiAgZnVuY3Rpb24gb24oZXZlbnRzLCBjYWxsYmFjaywga2V5LCBwcmlvcml0eSA9IERFRkFVTFRfRVZFTlRfUFJJT1JJVFkpIHtcbiAgICBmb3JFYWNoRXZlbnQoZXZlbnRzLCAoZXZlbnQsIG5hbWVzcGFjZSkgPT4ge1xuICAgICAgaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlcnNbZXZlbnRdIHx8IFtdO1xuICAgICAgcHVzaChoYW5kbGVyc1tldmVudF0sIHtcbiAgICAgICAgX2V2ZW50OiBldmVudCxcbiAgICAgICAgX2NhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgX25hbWVzcGFjZTogbmFtZXNwYWNlLFxuICAgICAgICBfcHJpb3JpdHk6IHByaW9yaXR5LFxuICAgICAgICBfa2V5OiBrZXlcbiAgICAgIH0pLnNvcnQoKGhhbmRsZXIxLCBoYW5kbGVyMikgPT4gaGFuZGxlcjEuX3ByaW9yaXR5IC0gaGFuZGxlcjIuX3ByaW9yaXR5KTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBvZmYoZXZlbnRzLCBrZXkpIHtcbiAgICBmb3JFYWNoRXZlbnQoZXZlbnRzLCAoZXZlbnQsIG5hbWVzcGFjZSkgPT4ge1xuICAgICAgY29uc3QgZXZlbnRIYW5kbGVycyA9IGhhbmRsZXJzW2V2ZW50XTtcbiAgICAgIGhhbmRsZXJzW2V2ZW50XSA9IGV2ZW50SGFuZGxlcnMgJiYgZXZlbnRIYW5kbGVycy5maWx0ZXIoKGhhbmRsZXIpID0+IHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIuX2tleSA/IGhhbmRsZXIuX2tleSAhPT0ga2V5IDoga2V5IHx8IGhhbmRsZXIuX25hbWVzcGFjZSAhPT0gbmFtZXNwYWNlO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gb2ZmQnkoa2V5KSB7XG4gICAgZm9yT3duKGhhbmRsZXJzLCAoZXZlbnRIYW5kbGVycywgZXZlbnQpID0+IHtcbiAgICAgIG9mZihldmVudCwga2V5KTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBlbWl0KGV2ZW50KSB7XG4gICAgKGhhbmRsZXJzW2V2ZW50XSB8fCBbXSkuZm9yRWFjaCgoaGFuZGxlcikgPT4ge1xuICAgICAgaGFuZGxlci5fY2FsbGJhY2suYXBwbHkoaGFuZGxlciwgc2xpY2UoYXJndW1lbnRzLCAxKSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBoYW5kbGVycyA9IHt9O1xuICB9XG4gIGZ1bmN0aW9uIGZvckVhY2hFdmVudChldmVudHMsIGl0ZXJhdGVlKSB7XG4gICAgdG9BcnJheShldmVudHMpLmpvaW4oXCIgXCIpLnNwbGl0KFwiIFwiKS5mb3JFYWNoKChldmVudE5TKSA9PiB7XG4gICAgICBjb25zdCBmcmFnbWVudHMgPSBldmVudE5TLnNwbGl0KFwiLlwiKTtcbiAgICAgIGl0ZXJhdGVlKGZyYWdtZW50c1swXSwgZnJhZ21lbnRzWzFdKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4ge1xuICAgIG9uLFxuICAgIG9mZixcbiAgICBvZmZCeSxcbiAgICBlbWl0LFxuICAgIGRlc3Ryb3lcbiAgfTtcbn1cblxuY29uc3QgRVZFTlRfTU9VTlRFRCA9IFwibW91bnRlZFwiO1xuY29uc3QgRVZFTlRfUkVBRFkgPSBcInJlYWR5XCI7XG5jb25zdCBFVkVOVF9NT1ZFID0gXCJtb3ZlXCI7XG5jb25zdCBFVkVOVF9NT1ZFRCA9IFwibW92ZWRcIjtcbmNvbnN0IEVWRU5UX0NMSUNLID0gXCJjbGlja1wiO1xuY29uc3QgRVZFTlRfQUNUSVZFID0gXCJhY3RpdmVcIjtcbmNvbnN0IEVWRU5UX0lOQUNUSVZFID0gXCJpbmFjdGl2ZVwiO1xuY29uc3QgRVZFTlRfVklTSUJMRSA9IFwidmlzaWJsZVwiO1xuY29uc3QgRVZFTlRfSElEREVOID0gXCJoaWRkZW5cIjtcbmNvbnN0IEVWRU5UX1NMSURFX0tFWURPV04gPSBcInNsaWRlOmtleWRvd25cIjtcbmNvbnN0IEVWRU5UX1JFRlJFU0ggPSBcInJlZnJlc2hcIjtcbmNvbnN0IEVWRU5UX1VQREFURUQgPSBcInVwZGF0ZWRcIjtcbmNvbnN0IEVWRU5UX1JFU0laRSA9IFwicmVzaXplXCI7XG5jb25zdCBFVkVOVF9SRVNJWkVEID0gXCJyZXNpemVkXCI7XG5jb25zdCBFVkVOVF9SRVBPU0lUSU9ORUQgPSBcInJlcG9zaXRpb25lZFwiO1xuY29uc3QgRVZFTlRfRFJBRyA9IFwiZHJhZ1wiO1xuY29uc3QgRVZFTlRfRFJBR0dJTkcgPSBcImRyYWdnaW5nXCI7XG5jb25zdCBFVkVOVF9EUkFHR0VEID0gXCJkcmFnZ2VkXCI7XG5jb25zdCBFVkVOVF9TQ1JPTEwgPSBcInNjcm9sbFwiO1xuY29uc3QgRVZFTlRfU0NST0xMRUQgPSBcInNjcm9sbGVkXCI7XG5jb25zdCBFVkVOVF9ERVNUUk9ZID0gXCJkZXN0cm95XCI7XG5jb25zdCBFVkVOVF9BUlJPV1NfTU9VTlRFRCA9IFwiYXJyb3dzOm1vdW50ZWRcIjtcbmNvbnN0IEVWRU5UX0FSUk9XU19VUERBVEVEID0gXCJhcnJvd3M6dXBkYXRlZFwiO1xuY29uc3QgRVZFTlRfUEFHSU5BVElPTl9NT1VOVEVEID0gXCJwYWdpbmF0aW9uOm1vdW50ZWRcIjtcbmNvbnN0IEVWRU5UX1BBR0lOQVRJT05fVVBEQVRFRCA9IFwicGFnaW5hdGlvbjp1cGRhdGVkXCI7XG5jb25zdCBFVkVOVF9OQVZJR0FUSU9OX01PVU5URUQgPSBcIm5hdmlnYXRpb246bW91bnRlZFwiO1xuY29uc3QgRVZFTlRfQVVUT1BMQVlfUExBWSA9IFwiYXV0b3BsYXk6cGxheVwiO1xuY29uc3QgRVZFTlRfQVVUT1BMQVlfUExBWUlORyA9IFwiYXV0b3BsYXk6cGxheWluZ1wiO1xuY29uc3QgRVZFTlRfQVVUT1BMQVlfUEFVU0UgPSBcImF1dG9wbGF5OnBhdXNlXCI7XG5jb25zdCBFVkVOVF9MQVpZTE9BRF9MT0FERUQgPSBcImxhenlsb2FkOmxvYWRlZFwiO1xuXG5mdW5jdGlvbiBFdmVudEludGVyZmFjZShTcGxpZGUyKSB7XG4gIGNvbnN0IHsgZXZlbnQgfSA9IFNwbGlkZTI7XG4gIGNvbnN0IGtleSA9IHt9O1xuICBsZXQgbGlzdGVuZXJzID0gW107XG4gIGZ1bmN0aW9uIG9uKGV2ZW50cywgY2FsbGJhY2ssIHByaW9yaXR5KSB7XG4gICAgZXZlbnQub24oZXZlbnRzLCBjYWxsYmFjaywga2V5LCBwcmlvcml0eSk7XG4gIH1cbiAgZnVuY3Rpb24gb2ZmKGV2ZW50cykge1xuICAgIGV2ZW50Lm9mZihldmVudHMsIGtleSk7XG4gIH1cbiAgZnVuY3Rpb24gYmluZCh0YXJnZXRzLCBldmVudHMsIGNhbGxiYWNrLCBvcHRpb25zKSB7XG4gICAgZm9yRWFjaEV2ZW50KHRhcmdldHMsIGV2ZW50cywgKHRhcmdldCwgZXZlbnQyKSA9PiB7XG4gICAgICBsaXN0ZW5lcnMucHVzaChbdGFyZ2V0LCBldmVudDIsIGNhbGxiYWNrLCBvcHRpb25zXSk7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudDIsIGNhbGxiYWNrLCBvcHRpb25zKTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiB1bmJpbmQodGFyZ2V0cywgZXZlbnRzLCBjYWxsYmFjaykge1xuICAgIGZvckVhY2hFdmVudCh0YXJnZXRzLCBldmVudHMsICh0YXJnZXQsIGV2ZW50MikgPT4ge1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcigobGlzdGVuZXIpID0+IHtcbiAgICAgICAgaWYgKGxpc3RlbmVyWzBdID09PSB0YXJnZXQgJiYgbGlzdGVuZXJbMV0gPT09IGV2ZW50MiAmJiAoIWNhbGxiYWNrIHx8IGxpc3RlbmVyWzJdID09PSBjYWxsYmFjaykpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudDIsIGxpc3RlbmVyWzJdLCBsaXN0ZW5lclszXSk7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZm9yRWFjaEV2ZW50KHRhcmdldHMsIGV2ZW50cywgaXRlcmF0ZWUpIHtcbiAgICBmb3JFYWNoKHRhcmdldHMsICh0YXJnZXQpID0+IHtcbiAgICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgZXZlbnRzLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGl0ZXJhdGVlLmJpbmQobnVsbCwgdGFyZ2V0KSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKChkYXRhKSA9PiB1bmJpbmQoZGF0YVswXSwgZGF0YVsxXSkpO1xuICAgIGV2ZW50Lm9mZkJ5KGtleSk7XG4gIH1cbiAgZXZlbnQub24oRVZFTlRfREVTVFJPWSwgZGVzdHJveSwga2V5KTtcbiAgcmV0dXJuIHtcbiAgICBvbixcbiAgICBvZmYsXG4gICAgZW1pdDogZXZlbnQuZW1pdCxcbiAgICBiaW5kLFxuICAgIHVuYmluZCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmZ1bmN0aW9uIFJlcXVlc3RJbnRlcnZhbChpbnRlcnZhbCwgb25JbnRlcnZhbCwgb25VcGRhdGUsIGxpbWl0KSB7XG4gIGNvbnN0IHsgbm93IH0gPSBEYXRlO1xuICBsZXQgc3RhcnRUaW1lO1xuICBsZXQgcmF0ZSA9IDA7XG4gIGxldCBpZDtcbiAgbGV0IHBhdXNlZCA9IHRydWU7XG4gIGxldCBjb3VudCA9IDA7XG4gIGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICBpZiAoIXBhdXNlZCkge1xuICAgICAgY29uc3QgZWxhcHNlZCA9IG5vdygpIC0gc3RhcnRUaW1lO1xuICAgICAgaWYgKGVsYXBzZWQgPj0gaW50ZXJ2YWwpIHtcbiAgICAgICAgcmF0ZSA9IDE7XG4gICAgICAgIHN0YXJ0VGltZSA9IG5vdygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmF0ZSA9IGVsYXBzZWQgLyBpbnRlcnZhbDtcbiAgICAgIH1cbiAgICAgIGlmIChvblVwZGF0ZSkge1xuICAgICAgICBvblVwZGF0ZShyYXRlKTtcbiAgICAgIH1cbiAgICAgIGlmIChyYXRlID09PSAxKSB7XG4gICAgICAgIG9uSW50ZXJ2YWwoKTtcbiAgICAgICAgaWYgKGxpbWl0ICYmICsrY291bnQgPj0gbGltaXQpIHtcbiAgICAgICAgICByZXR1cm4gcGF1c2UoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmFmKHVwZGF0ZSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHN0YXJ0KHJlc3VtZSkge1xuICAgICFyZXN1bWUgJiYgY2FuY2VsKCk7XG4gICAgc3RhcnRUaW1lID0gbm93KCkgLSAocmVzdW1lID8gcmF0ZSAqIGludGVydmFsIDogMCk7XG4gICAgcGF1c2VkID0gZmFsc2U7XG4gICAgcmFmKHVwZGF0ZSk7XG4gIH1cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgcGF1c2VkID0gdHJ1ZTtcbiAgfVxuICBmdW5jdGlvbiByZXdpbmQoKSB7XG4gICAgc3RhcnRUaW1lID0gbm93KCk7XG4gICAgcmF0ZSA9IDA7XG4gICAgaWYgKG9uVXBkYXRlKSB7XG4gICAgICBvblVwZGF0ZShyYXRlKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGlkKTtcbiAgICByYXRlID0gMDtcbiAgICBpZCA9IDA7XG4gICAgcGF1c2VkID0gdHJ1ZTtcbiAgfVxuICBmdW5jdGlvbiBpc1BhdXNlZCgpIHtcbiAgICByZXR1cm4gcGF1c2VkO1xuICB9XG4gIHJldHVybiB7XG4gICAgc3RhcnQsXG4gICAgcmV3aW5kLFxuICAgIHBhdXNlLFxuICAgIGNhbmNlbCxcbiAgICBpc1BhdXNlZFxuICB9O1xufVxuXG5mdW5jdGlvbiBTdGF0ZShpbml0aWFsU3RhdGUpIHtcbiAgbGV0IHN0YXRlID0gaW5pdGlhbFN0YXRlO1xuICBmdW5jdGlvbiBzZXQodmFsdWUpIHtcbiAgICBzdGF0ZSA9IHZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGlzKHN0YXRlcykge1xuICAgIHJldHVybiBpbmNsdWRlcyh0b0FycmF5KHN0YXRlcyksIHN0YXRlKTtcbiAgfVxuICByZXR1cm4geyBzZXQsIGlzIH07XG59XG5cbmZ1bmN0aW9uIFRocm90dGxlKGZ1bmMsIGR1cmF0aW9uKSB7XG4gIGxldCBpbnRlcnZhbDtcbiAgZnVuY3Rpb24gdGhyb3R0bGVkKCkge1xuICAgIGlmICghaW50ZXJ2YWwpIHtcbiAgICAgIGludGVydmFsID0gUmVxdWVzdEludGVydmFsKGR1cmF0aW9uIHx8IDAsICgpID0+IHtcbiAgICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICBpbnRlcnZhbCA9IG51bGw7XG4gICAgICB9LCBudWxsLCAxKTtcbiAgICAgIGludGVydmFsLnN0YXJ0KCk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aHJvdHRsZWQ7XG59XG5cbmZ1bmN0aW9uIE9wdGlvbnMoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgdGhyb3R0bGVkT2JzZXJ2ZSA9IFRocm90dGxlKG9ic2VydmUpO1xuICBsZXQgaW5pdGlhbE9wdGlvbnM7XG4gIGxldCBwb2ludHM7XG4gIGxldCBjdXJyUG9pbnQ7XG4gIGZ1bmN0aW9uIHNldHVwKCkge1xuICAgIHRyeSB7XG4gICAgICBtZXJnZShvcHRpb25zLCBKU09OLnBhcnNlKGdldEF0dHJpYnV0ZShTcGxpZGUyLnJvb3QsIERBVEFfQVRUUklCVVRFKSkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGFzc2VydChmYWxzZSwgZS5tZXNzYWdlKTtcbiAgICB9XG4gICAgaW5pdGlhbE9wdGlvbnMgPSBtZXJnZSh7fSwgb3B0aW9ucyk7XG4gICAgY29uc3QgeyBicmVha3BvaW50cyB9ID0gb3B0aW9ucztcbiAgICBpZiAoYnJlYWtwb2ludHMpIHtcbiAgICAgIGNvbnN0IGlzTWluID0gb3B0aW9ucy5tZWRpYVF1ZXJ5ID09PSBcIm1pblwiO1xuICAgICAgcG9pbnRzID0gT2JqZWN0LmtleXMoYnJlYWtwb2ludHMpLnNvcnQoKG4sIG0pID0+IGlzTWluID8gK20gLSArbiA6ICtuIC0gK20pLm1hcCgocG9pbnQpID0+IFtcbiAgICAgICAgcG9pbnQsXG4gICAgICAgIG1hdGNoTWVkaWEoYCgke2lzTWluID8gXCJtaW5cIiA6IFwibWF4XCJ9LXdpZHRoOiR7cG9pbnR9cHgpYClcbiAgICAgIF0pO1xuICAgICAgb2JzZXJ2ZSgpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpZiAocG9pbnRzKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHRocm90dGxlZE9ic2VydmUpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkZXN0cm95KGNvbXBsZXRlbHkpIHtcbiAgICBpZiAoY29tcGxldGVseSkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aHJvdHRsZWRPYnNlcnZlKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gb2JzZXJ2ZSgpIHtcbiAgICBjb25zdCBpdGVtID0gZmluZChwb2ludHMsIChpdGVtMikgPT4gaXRlbTJbMV0ubWF0Y2hlcykgfHwgW107XG4gICAgaWYgKGl0ZW1bMF0gIT09IGN1cnJQb2ludCkge1xuICAgICAgb25NYXRjaChjdXJyUG9pbnQgPSBpdGVtWzBdKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gb25NYXRjaChwb2ludCkge1xuICAgIGNvbnN0IG5ld09wdGlvbnMgPSBvcHRpb25zLmJyZWFrcG9pbnRzW3BvaW50XSB8fCBpbml0aWFsT3B0aW9ucztcbiAgICBpZiAobmV3T3B0aW9ucy5kZXN0cm95KSB7XG4gICAgICBTcGxpZGUyLm9wdGlvbnMgPSBpbml0aWFsT3B0aW9ucztcbiAgICAgIFNwbGlkZTIuZGVzdHJveShuZXdPcHRpb25zLmRlc3Ryb3kgPT09IFwiY29tcGxldGVseVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKFNwbGlkZTIuc3RhdGUuaXMoREVTVFJPWUVEKSkge1xuICAgICAgICBkZXN0cm95KHRydWUpO1xuICAgICAgICBTcGxpZGUyLm1vdW50KCk7XG4gICAgICB9XG4gICAgICBTcGxpZGUyLm9wdGlvbnMgPSBuZXdPcHRpb25zO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHNldHVwLFxuICAgIG1vdW50LFxuICAgIGRlc3Ryb3lcbiAgfTtcbn1cblxuY29uc3QgUlRMID0gXCJydGxcIjtcbmNvbnN0IFRUQiA9IFwidHRiXCI7XG5cbmNvbnN0IE9SSUVOVEFUSU9OX01BUCA9IHtcbiAgbWFyZ2luUmlnaHQ6IFtcIm1hcmdpbkJvdHRvbVwiLCBcIm1hcmdpbkxlZnRcIl0sXG4gIGF1dG9XaWR0aDogW1wiYXV0b0hlaWdodFwiXSxcbiAgZml4ZWRXaWR0aDogW1wiZml4ZWRIZWlnaHRcIl0sXG4gIHBhZGRpbmdMZWZ0OiBbXCJwYWRkaW5nVG9wXCIsIFwicGFkZGluZ1JpZ2h0XCJdLFxuICBwYWRkaW5nUmlnaHQ6IFtcInBhZGRpbmdCb3R0b21cIiwgXCJwYWRkaW5nTGVmdFwiXSxcbiAgd2lkdGg6IFtcImhlaWdodFwiXSxcbiAgbGVmdDogW1widG9wXCIsIFwicmlnaHRcIl0sXG4gIHJpZ2h0OiBbXCJib3R0b21cIiwgXCJsZWZ0XCJdLFxuICB4OiBbXCJ5XCJdLFxuICBYOiBbXCJZXCJdLFxuICBZOiBbXCJYXCJdLFxuICBBcnJvd0xlZnQ6IFtcIkFycm93VXBcIiwgXCJBcnJvd1JpZ2h0XCJdLFxuICBBcnJvd1JpZ2h0OiBbXCJBcnJvd0Rvd25cIiwgXCJBcnJvd0xlZnRcIl1cbn07XG5mdW5jdGlvbiBEaXJlY3Rpb24oU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgZnVuY3Rpb24gcmVzb2x2ZShwcm9wLCBheGlzT25seSkge1xuICAgIGNvbnN0IHsgZGlyZWN0aW9uIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IGluZGV4ID0gZGlyZWN0aW9uID09PSBSVEwgJiYgIWF4aXNPbmx5ID8gMSA6IGRpcmVjdGlvbiA9PT0gVFRCID8gMCA6IC0xO1xuICAgIHJldHVybiBPUklFTlRBVElPTl9NQVBbcHJvcF1baW5kZXhdIHx8IHByb3A7XG4gIH1cbiAgZnVuY3Rpb24gb3JpZW50KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICogKG9wdGlvbnMuZGlyZWN0aW9uID09PSBSVEwgPyAxIDogLTEpO1xuICB9XG4gIHJldHVybiB7XG4gICAgcmVzb2x2ZSxcbiAgICBvcmllbnRcbiAgfTtcbn1cblxuY29uc3QgQ0xBU1NfUk9PVCA9IFBST0pFQ1RfQ09ERTtcbmNvbnN0IENMQVNTX1NMSURFUiA9IGAke1BST0pFQ1RfQ09ERX1fX3NsaWRlcmA7XG5jb25zdCBDTEFTU19UUkFDSyA9IGAke1BST0pFQ1RfQ09ERX1fX3RyYWNrYDtcbmNvbnN0IENMQVNTX0xJU1QgPSBgJHtQUk9KRUNUX0NPREV9X19saXN0YDtcbmNvbnN0IENMQVNTX1NMSURFID0gYCR7UFJPSkVDVF9DT0RFfV9fc2xpZGVgO1xuY29uc3QgQ0xBU1NfQ0xPTkUgPSBgJHtDTEFTU19TTElERX0tLWNsb25lYDtcbmNvbnN0IENMQVNTX0NPTlRBSU5FUiA9IGAke0NMQVNTX1NMSURFfV9fY29udGFpbmVyYDtcbmNvbnN0IENMQVNTX0FSUk9XUyA9IGAke1BST0pFQ1RfQ09ERX1fX2Fycm93c2A7XG5jb25zdCBDTEFTU19BUlJPVyA9IGAke1BST0pFQ1RfQ09ERX1fX2Fycm93YDtcbmNvbnN0IENMQVNTX0FSUk9XX1BSRVYgPSBgJHtDTEFTU19BUlJPV30tLXByZXZgO1xuY29uc3QgQ0xBU1NfQVJST1dfTkVYVCA9IGAke0NMQVNTX0FSUk9XfS0tbmV4dGA7XG5jb25zdCBDTEFTU19QQUdJTkFUSU9OID0gYCR7UFJPSkVDVF9DT0RFfV9fcGFnaW5hdGlvbmA7XG5jb25zdCBDTEFTU19QQUdJTkFUSU9OX1BBR0UgPSBgJHtDTEFTU19QQUdJTkFUSU9OfV9fcGFnZWA7XG5jb25zdCBDTEFTU19QUk9HUkVTUyA9IGAke1BST0pFQ1RfQ09ERX1fX3Byb2dyZXNzYDtcbmNvbnN0IENMQVNTX1BST0dSRVNTX0JBUiA9IGAke0NMQVNTX1BST0dSRVNTfV9fYmFyYDtcbmNvbnN0IENMQVNTX0FVVE9QTEFZID0gYCR7UFJPSkVDVF9DT0RFfV9fYXV0b3BsYXlgO1xuY29uc3QgQ0xBU1NfUExBWSA9IGAke1BST0pFQ1RfQ09ERX1fX3BsYXlgO1xuY29uc3QgQ0xBU1NfUEFVU0UgPSBgJHtQUk9KRUNUX0NPREV9X19wYXVzZWA7XG5jb25zdCBDTEFTU19TUElOTkVSID0gYCR7UFJPSkVDVF9DT0RFfV9fc3Bpbm5lcmA7XG5jb25zdCBDTEFTU19JTklUSUFMSVpFRCA9IFwiaXMtaW5pdGlhbGl6ZWRcIjtcbmNvbnN0IENMQVNTX0FDVElWRSA9IFwiaXMtYWN0aXZlXCI7XG5jb25zdCBDTEFTU19QUkVWID0gXCJpcy1wcmV2XCI7XG5jb25zdCBDTEFTU19ORVhUID0gXCJpcy1uZXh0XCI7XG5jb25zdCBDTEFTU19WSVNJQkxFID0gXCJpcy12aXNpYmxlXCI7XG5jb25zdCBDTEFTU19MT0FESU5HID0gXCJpcy1sb2FkaW5nXCI7XG5jb25zdCBTVEFUVVNfQ0xBU1NFUyA9IFtDTEFTU19BQ1RJVkUsIENMQVNTX1ZJU0lCTEUsIENMQVNTX1BSRVYsIENMQVNTX05FWFQsIENMQVNTX0xPQURJTkddO1xuY29uc3QgQ0xBU1NFUyA9IHtcbiAgc2xpZGU6IENMQVNTX1NMSURFLFxuICBjbG9uZTogQ0xBU1NfQ0xPTkUsXG4gIGFycm93czogQ0xBU1NfQVJST1dTLFxuICBhcnJvdzogQ0xBU1NfQVJST1csXG4gIHByZXY6IENMQVNTX0FSUk9XX1BSRVYsXG4gIG5leHQ6IENMQVNTX0FSUk9XX05FWFQsXG4gIHBhZ2luYXRpb246IENMQVNTX1BBR0lOQVRJT04sXG4gIHBhZ2U6IENMQVNTX1BBR0lOQVRJT05fUEFHRSxcbiAgc3Bpbm5lcjogQ0xBU1NfU1BJTk5FUlxufTtcblxuZnVuY3Rpb24gRWxlbWVudHMoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgcm9vdCB9ID0gU3BsaWRlMjtcbiAgY29uc3QgZWxlbWVudHMgPSB7fTtcbiAgY29uc3Qgc2xpZGVzID0gW107XG4gIGxldCBjbGFzc2VzO1xuICBsZXQgc2xpZGVyO1xuICBsZXQgdHJhY2s7XG4gIGxldCBsaXN0O1xuICBmdW5jdGlvbiBzZXR1cCgpIHtcbiAgICBjb2xsZWN0KCk7XG4gICAgaWRlbnRpZnkoKTtcbiAgICBhZGRDbGFzcyhyb290LCBjbGFzc2VzID0gZ2V0Q2xhc3NlcygpKTtcbiAgfVxuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBvbihFVkVOVF9SRUZSRVNILCByZWZyZXNoLCBERUZBVUxUX0VWRU5UX1BSSU9SSVRZIC0gMik7XG4gICAgb24oRVZFTlRfVVBEQVRFRCwgdXBkYXRlKTtcbiAgfVxuICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIFtyb290LCB0cmFjaywgbGlzdF0uZm9yRWFjaCgoZWxtKSA9PiB7XG4gICAgICByZW1vdmVBdHRyaWJ1dGUoZWxtLCBcInN0eWxlXCIpO1xuICAgIH0pO1xuICAgIGVtcHR5KHNsaWRlcyk7XG4gICAgcmVtb3ZlQ2xhc3Mocm9vdCwgY2xhc3Nlcyk7XG4gIH1cbiAgZnVuY3Rpb24gcmVmcmVzaCgpIHtcbiAgICBkZXN0cm95KCk7XG4gICAgc2V0dXAoKTtcbiAgfVxuICBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgcmVtb3ZlQ2xhc3Mocm9vdCwgY2xhc3Nlcyk7XG4gICAgYWRkQ2xhc3Mocm9vdCwgY2xhc3NlcyA9IGdldENsYXNzZXMoKSk7XG4gIH1cbiAgZnVuY3Rpb24gY29sbGVjdCgpIHtcbiAgICBzbGlkZXIgPSBjaGlsZChyb290LCBgLiR7Q0xBU1NfU0xJREVSfWApO1xuICAgIHRyYWNrID0gcXVlcnkocm9vdCwgYC4ke0NMQVNTX1RSQUNLfWApO1xuICAgIGxpc3QgPSBjaGlsZCh0cmFjaywgYC4ke0NMQVNTX0xJU1R9YCk7XG4gICAgYXNzZXJ0KHRyYWNrICYmIGxpc3QsIFwiQSB0cmFjay9saXN0IGVsZW1lbnQgaXMgbWlzc2luZy5cIik7XG4gICAgcHVzaChzbGlkZXMsIGNoaWxkcmVuKGxpc3QsIGAuJHtDTEFTU19TTElERX06bm90KC4ke0NMQVNTX0NMT05FfSlgKSk7XG4gICAgY29uc3QgYXV0b3BsYXkgPSBmaW5kKGAuJHtDTEFTU19BVVRPUExBWX1gKTtcbiAgICBjb25zdCBhcnJvd3MgPSBmaW5kKGAuJHtDTEFTU19BUlJPV1N9YCk7XG4gICAgYXNzaWduKGVsZW1lbnRzLCB7XG4gICAgICByb290LFxuICAgICAgc2xpZGVyLFxuICAgICAgdHJhY2ssXG4gICAgICBsaXN0LFxuICAgICAgc2xpZGVzLFxuICAgICAgYXJyb3dzLFxuICAgICAgYXV0b3BsYXksXG4gICAgICBwcmV2OiBxdWVyeShhcnJvd3MsIGAuJHtDTEFTU19BUlJPV19QUkVWfWApLFxuICAgICAgbmV4dDogcXVlcnkoYXJyb3dzLCBgLiR7Q0xBU1NfQVJST1dfTkVYVH1gKSxcbiAgICAgIGJhcjogcXVlcnkoZmluZChgLiR7Q0xBU1NfUFJPR1JFU1N9YCksIGAuJHtDTEFTU19QUk9HUkVTU19CQVJ9YCksXG4gICAgICBwbGF5OiBxdWVyeShhdXRvcGxheSwgYC4ke0NMQVNTX1BMQVl9YCksXG4gICAgICBwYXVzZTogcXVlcnkoYXV0b3BsYXksIGAuJHtDTEFTU19QQVVTRX1gKVxuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGlkZW50aWZ5KCkge1xuICAgIGNvbnN0IGlkID0gcm9vdC5pZCB8fCB1bmlxdWVJZChQUk9KRUNUX0NPREUpO1xuICAgIHJvb3QuaWQgPSBpZDtcbiAgICB0cmFjay5pZCA9IHRyYWNrLmlkIHx8IGAke2lkfS10cmFja2A7XG4gICAgbGlzdC5pZCA9IGxpc3QuaWQgfHwgYCR7aWR9LWxpc3RgO1xuICB9XG4gIGZ1bmN0aW9uIGZpbmQoc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gY2hpbGQocm9vdCwgc2VsZWN0b3IpIHx8IGNoaWxkKHNsaWRlciwgc2VsZWN0b3IpO1xuICB9XG4gIGZ1bmN0aW9uIGdldENsYXNzZXMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIGAke0NMQVNTX1JPT1R9LS0ke29wdGlvbnMudHlwZX1gLFxuICAgICAgYCR7Q0xBU1NfUk9PVH0tLSR7b3B0aW9ucy5kaXJlY3Rpb259YCxcbiAgICAgIG9wdGlvbnMuZHJhZyAmJiBgJHtDTEFTU19ST09UfS0tZHJhZ2dhYmxlYCxcbiAgICAgIG9wdGlvbnMuaXNOYXZpZ2F0aW9uICYmIGAke0NMQVNTX1JPT1R9LS1uYXZgLFxuICAgICAgQ0xBU1NfQUNUSVZFXG4gICAgXTtcbiAgfVxuICByZXR1cm4gYXNzaWduKGVsZW1lbnRzLCB7XG4gICAgc2V0dXAsXG4gICAgbW91bnQsXG4gICAgZGVzdHJveVxuICB9KTtcbn1cblxuY29uc3QgUk9MRSA9IFwicm9sZVwiO1xuY29uc3QgQVJJQV9DT05UUk9MUyA9IFwiYXJpYS1jb250cm9sc1wiO1xuY29uc3QgQVJJQV9DVVJSRU5UID0gXCJhcmlhLWN1cnJlbnRcIjtcbmNvbnN0IEFSSUFfTEFCRUwgPSBcImFyaWEtbGFiZWxcIjtcbmNvbnN0IEFSSUFfSElEREVOID0gXCJhcmlhLWhpZGRlblwiO1xuY29uc3QgVEFCX0lOREVYID0gXCJ0YWJpbmRleFwiO1xuY29uc3QgRElTQUJMRUQgPSBcImRpc2FibGVkXCI7XG5jb25zdCBBUklBX09SSUVOVEFUSU9OID0gXCJhcmlhLW9yaWVudGF0aW9uXCI7XG5jb25zdCBBTExfQVRUUklCVVRFUyA9IFtcbiAgUk9MRSxcbiAgQVJJQV9DT05UUk9MUyxcbiAgQVJJQV9DVVJSRU5ULFxuICBBUklBX0xBQkVMLFxuICBBUklBX0hJRERFTixcbiAgQVJJQV9PUklFTlRBVElPTixcbiAgVEFCX0lOREVYLFxuICBESVNBQkxFRFxuXTtcblxuY29uc3QgU0xJREUgPSBcInNsaWRlXCI7XG5jb25zdCBMT09QID0gXCJsb29wXCI7XG5jb25zdCBGQURFID0gXCJmYWRlXCI7XG5cbmZ1bmN0aW9uIFNsaWRlJDEoU3BsaWRlMiwgaW5kZXgsIHNsaWRlSW5kZXgsIHNsaWRlKSB7XG4gIGNvbnN0IHsgb24sIGVtaXQsIGJpbmQsIGRlc3Ryb3k6IGRlc3Ryb3lFdmVudHMgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IENvbXBvbmVudHMsIHJvb3QsIG9wdGlvbnMgfSA9IFNwbGlkZTI7XG4gIGNvbnN0IHsgaXNOYXZpZ2F0aW9uLCB1cGRhdGVPbk1vdmUgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHsgcmVzb2x2ZSB9ID0gQ29tcG9uZW50cy5EaXJlY3Rpb247XG4gIGNvbnN0IHN0eWxlcyA9IGdldEF0dHJpYnV0ZShzbGlkZSwgXCJzdHlsZVwiKTtcbiAgY29uc3QgaXNDbG9uZSA9IHNsaWRlSW5kZXggPiAtMTtcbiAgY29uc3QgY29udGFpbmVyID0gY2hpbGQoc2xpZGUsIGAuJHtDTEFTU19DT05UQUlORVJ9YCk7XG4gIGNvbnN0IGZvY3VzYWJsZU5vZGVzID0gb3B0aW9ucy5mb2N1c2FibGVOb2RlcyAmJiBxdWVyeUFsbChzbGlkZSwgb3B0aW9ucy5mb2N1c2FibGVOb2Rlcyk7XG4gIGxldCBkZXN0cm95ZWQ7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGluaXQoKTtcbiAgICBiaW5kKHNsaWRlLCBcImNsaWNrIGtleWRvd25cIiwgKGUpID0+IHtcbiAgICAgIGVtaXQoZS50eXBlID09PSBcImNsaWNrXCIgPyBFVkVOVF9DTElDSyA6IEVWRU5UX1NMSURFX0tFWURPV04sIHRoaXMsIGUpO1xuICAgIH0pO1xuICAgIG9uKFtFVkVOVF9SRUZSRVNILCBFVkVOVF9SRVBPU0lUSU9ORUQsIEVWRU5UX01PVkVELCBFVkVOVF9TQ1JPTExFRF0sIHVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICBpZiAodXBkYXRlT25Nb3ZlKSB7XG4gICAgICBvbihFVkVOVF9NT1ZFLCBvbk1vdmUuYmluZCh0aGlzKSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgaWYgKCFpc0Nsb25lKSB7XG4gICAgICBzbGlkZS5pZCA9IGAke3Jvb3QuaWR9LXNsaWRlJHtwYWQoaW5kZXggKyAxKX1gO1xuICAgIH1cbiAgICBpZiAoaXNOYXZpZ2F0aW9uKSB7XG4gICAgICBjb25zdCBpZHggPSBpc0Nsb25lID8gc2xpZGVJbmRleCA6IGluZGV4O1xuICAgICAgY29uc3QgbGFiZWwgPSBmb3JtYXQob3B0aW9ucy5pMThuLnNsaWRlWCwgaWR4ICsgMSk7XG4gICAgICBjb25zdCBjb250cm9scyA9IFNwbGlkZTIuc3BsaWRlcy5tYXAoKHNwbGlkZSkgPT4gc3BsaWRlLnJvb3QuaWQpLmpvaW4oXCIgXCIpO1xuICAgICAgc2V0QXR0cmlidXRlKHNsaWRlLCBBUklBX0xBQkVMLCBsYWJlbCk7XG4gICAgICBzZXRBdHRyaWJ1dGUoc2xpZGUsIEFSSUFfQ09OVFJPTFMsIGNvbnRyb2xzKTtcbiAgICAgIHNldEF0dHJpYnV0ZShzbGlkZSwgUk9MRSwgXCJtZW51aXRlbVwiKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBkZXN0cm95ZWQgPSB0cnVlO1xuICAgIGRlc3Ryb3lFdmVudHMoKTtcbiAgICByZW1vdmVDbGFzcyhzbGlkZSwgU1RBVFVTX0NMQVNTRVMpO1xuICAgIHJlbW92ZUF0dHJpYnV0ZShzbGlkZSwgQUxMX0FUVFJJQlVURVMpO1xuICAgIHNldEF0dHJpYnV0ZShzbGlkZSwgXCJzdHlsZVwiLCBzdHlsZXMpO1xuICB9XG4gIGZ1bmN0aW9uIG9uTW92ZShuZXh0LCBwcmV2LCBkZXN0KSB7XG4gICAgaWYgKCFkZXN0cm95ZWQpIHtcbiAgICAgIHVwZGF0ZS5jYWxsKHRoaXMpO1xuICAgICAgaWYgKGRlc3QgPT09IGluZGV4KSB7XG4gICAgICAgIHVwZGF0ZUFjdGl2aXR5LmNhbGwodGhpcywgdHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICBpZiAoIWRlc3Ryb3llZCkge1xuICAgICAgY29uc3QgeyBpbmRleDogY3VyckluZGV4IH0gPSBTcGxpZGUyO1xuICAgICAgdXBkYXRlQWN0aXZpdHkuY2FsbCh0aGlzLCBpc0FjdGl2ZSgpKTtcbiAgICAgIHVwZGF0ZVZpc2liaWxpdHkuY2FsbCh0aGlzLCBpc1Zpc2libGUoKSk7XG4gICAgICB0b2dnbGVDbGFzcyhzbGlkZSwgQ0xBU1NfUFJFViwgaW5kZXggPT09IGN1cnJJbmRleCAtIDEpO1xuICAgICAgdG9nZ2xlQ2xhc3Moc2xpZGUsIENMQVNTX05FWFQsIGluZGV4ID09PSBjdXJySW5kZXggKyAxKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gdXBkYXRlQWN0aXZpdHkoYWN0aXZlKSB7XG4gICAgaWYgKGFjdGl2ZSAhPT0gaGFzQ2xhc3Moc2xpZGUsIENMQVNTX0FDVElWRSkpIHtcbiAgICAgIHRvZ2dsZUNsYXNzKHNsaWRlLCBDTEFTU19BQ1RJVkUsIGFjdGl2ZSk7XG4gICAgICBpZiAoaXNOYXZpZ2F0aW9uKSB7XG4gICAgICAgIHNldEF0dHJpYnV0ZShzbGlkZSwgQVJJQV9DVVJSRU5ULCBhY3RpdmUgfHwgbnVsbCk7XG4gICAgICB9XG4gICAgICBlbWl0KGFjdGl2ZSA/IEVWRU5UX0FDVElWRSA6IEVWRU5UX0lOQUNUSVZFLCB0aGlzKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gdXBkYXRlVmlzaWJpbGl0eSh2aXNpYmxlKSB7XG4gICAgY29uc3QgYXJpYUhpZGRlbiA9ICF2aXNpYmxlICYmICFpc0FjdGl2ZSgpO1xuICAgIHNldEF0dHJpYnV0ZShzbGlkZSwgQVJJQV9ISURERU4sIGFyaWFIaWRkZW4gfHwgbnVsbCk7XG4gICAgc2V0QXR0cmlidXRlKHNsaWRlLCBUQUJfSU5ERVgsICFhcmlhSGlkZGVuICYmIG9wdGlvbnMuc2xpZGVGb2N1cyA/IDAgOiBudWxsKTtcbiAgICBpZiAoZm9jdXNhYmxlTm9kZXMpIHtcbiAgICAgIGZvY3VzYWJsZU5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICAgICAgc2V0QXR0cmlidXRlKG5vZGUsIFRBQl9JTkRFWCwgYXJpYUhpZGRlbiA/IC0xIDogbnVsbCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKHZpc2libGUgIT09IGhhc0NsYXNzKHNsaWRlLCBDTEFTU19WSVNJQkxFKSkge1xuICAgICAgdG9nZ2xlQ2xhc3Moc2xpZGUsIENMQVNTX1ZJU0lCTEUsIHZpc2libGUpO1xuICAgICAgZW1pdCh2aXNpYmxlID8gRVZFTlRfVklTSUJMRSA6IEVWRU5UX0hJRERFTiwgdGhpcyk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHN0eWxlJDEocHJvcCwgdmFsdWUsIHVzZUNvbnRhaW5lcikge1xuICAgIHN0eWxlKHVzZUNvbnRhaW5lciAmJiBjb250YWluZXIgfHwgc2xpZGUsIHByb3AsIHZhbHVlKTtcbiAgfVxuICBmdW5jdGlvbiBpc0FjdGl2ZSgpIHtcbiAgICByZXR1cm4gU3BsaWRlMi5pbmRleCA9PT0gaW5kZXg7XG4gIH1cbiAgZnVuY3Rpb24gaXNWaXNpYmxlKCkge1xuICAgIGlmIChTcGxpZGUyLmlzKEZBREUpKSB7XG4gICAgICByZXR1cm4gaXNBY3RpdmUoKTtcbiAgICB9XG4gICAgY29uc3QgdHJhY2tSZWN0ID0gcmVjdChDb21wb25lbnRzLkVsZW1lbnRzLnRyYWNrKTtcbiAgICBjb25zdCBzbGlkZVJlY3QgPSByZWN0KHNsaWRlKTtcbiAgICBjb25zdCBsZWZ0ID0gcmVzb2x2ZShcImxlZnRcIik7XG4gICAgY29uc3QgcmlnaHQgPSByZXNvbHZlKFwicmlnaHRcIik7XG4gICAgcmV0dXJuIGZsb29yKHRyYWNrUmVjdFtsZWZ0XSkgPD0gY2VpbChzbGlkZVJlY3RbbGVmdF0pICYmIGZsb29yKHNsaWRlUmVjdFtyaWdodF0pIDw9IGNlaWwodHJhY2tSZWN0W3JpZ2h0XSk7XG4gIH1cbiAgZnVuY3Rpb24gaXNXaXRoaW4oZnJvbSwgZGlzdGFuY2UpIHtcbiAgICBsZXQgZGlmZiA9IGFicyhmcm9tIC0gaW5kZXgpO1xuICAgIGlmICghaXNDbG9uZSAmJiAob3B0aW9ucy5yZXdpbmQgfHwgU3BsaWRlMi5pcyhMT09QKSkpIHtcbiAgICAgIGRpZmYgPSBtaW4oZGlmZiwgU3BsaWRlMi5sZW5ndGggLSBkaWZmKTtcbiAgICB9XG4gICAgcmV0dXJuIGRpZmYgPD0gZGlzdGFuY2U7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBpbmRleCxcbiAgICBzbGlkZUluZGV4LFxuICAgIHNsaWRlLFxuICAgIGNvbnRhaW5lcixcbiAgICBpc0Nsb25lLFxuICAgIG1vdW50LFxuICAgIGRlc3Ryb3ksXG4gICAgc3R5bGU6IHN0eWxlJDEsXG4gICAgaXNXaXRoaW5cbiAgfTtcbn1cblxuZnVuY3Rpb24gU2xpZGVzKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24sIGVtaXQsIGJpbmQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IHNsaWRlcywgbGlzdCB9ID0gQ29tcG9uZW50czIuRWxlbWVudHM7XG4gIGNvbnN0IFNsaWRlczIgPSBbXTtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaW5pdCgpO1xuICAgIG9uKEVWRU5UX1JFRlJFU0gsIHJlZnJlc2gpO1xuICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9SRUZSRVNIXSwgKCkgPT4ge1xuICAgICAgU2xpZGVzMi5zb3J0KChTbGlkZTEsIFNsaWRlMikgPT4gU2xpZGUxLmluZGV4IC0gU2xpZGUyLmluZGV4KTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHNsaWRlcy5mb3JFYWNoKChzbGlkZSwgaW5kZXgpID0+IHtcbiAgICAgIHJlZ2lzdGVyKHNsaWRlLCBpbmRleCwgLTEpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgZm9yRWFjaCQxKChTbGlkZTIpID0+IHtcbiAgICAgIFNsaWRlMi5kZXN0cm95KCk7XG4gICAgfSk7XG4gICAgZW1wdHkoU2xpZGVzMik7XG4gIH1cbiAgZnVuY3Rpb24gcmVmcmVzaCgpIHtcbiAgICBkZXN0cm95KCk7XG4gICAgaW5pdCgpO1xuICB9XG4gIGZ1bmN0aW9uIHJlZ2lzdGVyKHNsaWRlLCBpbmRleCwgc2xpZGVJbmRleCkge1xuICAgIGNvbnN0IG9iamVjdCA9IFNsaWRlJDEoU3BsaWRlMiwgaW5kZXgsIHNsaWRlSW5kZXgsIHNsaWRlKTtcbiAgICBvYmplY3QubW91bnQoKTtcbiAgICBTbGlkZXMyLnB1c2gob2JqZWN0KTtcbiAgfVxuICBmdW5jdGlvbiBnZXQoZXhjbHVkZUNsb25lcykge1xuICAgIHJldHVybiBleGNsdWRlQ2xvbmVzID8gZmlsdGVyKChTbGlkZTIpID0+ICFTbGlkZTIuaXNDbG9uZSkgOiBTbGlkZXMyO1xuICB9XG4gIGZ1bmN0aW9uIGdldEluKHBhZ2UpIHtcbiAgICBjb25zdCB7IENvbnRyb2xsZXIgfSA9IENvbXBvbmVudHMyO1xuICAgIGNvbnN0IGluZGV4ID0gQ29udHJvbGxlci50b0luZGV4KHBhZ2UpO1xuICAgIGNvbnN0IG1heCA9IENvbnRyb2xsZXIuaGFzRm9jdXMoKSA/IDEgOiBvcHRpb25zLnBlclBhZ2U7XG4gICAgcmV0dXJuIGZpbHRlcigoU2xpZGUyKSA9PiBiZXR3ZWVuKFNsaWRlMi5pbmRleCwgaW5kZXgsIGluZGV4ICsgbWF4IC0gMSkpO1xuICB9XG4gIGZ1bmN0aW9uIGdldEF0KGluZGV4KSB7XG4gICAgcmV0dXJuIGZpbHRlcihpbmRleClbMF07XG4gIH1cbiAgZnVuY3Rpb24gYWRkKGl0ZW1zLCBpbmRleCkge1xuICAgIGZvckVhY2goaXRlbXMsIChzbGlkZSkgPT4ge1xuICAgICAgaWYgKGlzU3RyaW5nKHNsaWRlKSkge1xuICAgICAgICBzbGlkZSA9IHBhcnNlSHRtbChzbGlkZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNIVE1MRWxlbWVudChzbGlkZSkpIHtcbiAgICAgICAgY29uc3QgcmVmID0gc2xpZGVzW2luZGV4XTtcbiAgICAgICAgcmVmID8gYmVmb3JlKHNsaWRlLCByZWYpIDogYXBwZW5kKGxpc3QsIHNsaWRlKTtcbiAgICAgICAgYWRkQ2xhc3Moc2xpZGUsIG9wdGlvbnMuY2xhc3Nlcy5zbGlkZSk7XG4gICAgICAgIG9ic2VydmVJbWFnZXMoc2xpZGUsIGVtaXQuYmluZChudWxsLCBFVkVOVF9SRVNJWkUpKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBlbWl0KEVWRU5UX1JFRlJFU0gpO1xuICB9XG4gIGZ1bmN0aW9uIHJlbW92ZSQxKG1hdGNoZXIpIHtcbiAgICByZW1vdmUoZmlsdGVyKG1hdGNoZXIpLm1hcCgoU2xpZGUyKSA9PiBTbGlkZTIuc2xpZGUpKTtcbiAgICBlbWl0KEVWRU5UX1JFRlJFU0gpO1xuICB9XG4gIGZ1bmN0aW9uIGZvckVhY2gkMShpdGVyYXRlZSwgZXhjbHVkZUNsb25lcykge1xuICAgIGdldChleGNsdWRlQ2xvbmVzKS5mb3JFYWNoKGl0ZXJhdGVlKTtcbiAgfVxuICBmdW5jdGlvbiBmaWx0ZXIobWF0Y2hlcikge1xuICAgIHJldHVybiBTbGlkZXMyLmZpbHRlcihpc0Z1bmN0aW9uKG1hdGNoZXIpID8gbWF0Y2hlciA6IChTbGlkZTIpID0+IGlzU3RyaW5nKG1hdGNoZXIpID8gbWF0Y2hlcyhTbGlkZTIuc2xpZGUsIG1hdGNoZXIpIDogaW5jbHVkZXModG9BcnJheShtYXRjaGVyKSwgU2xpZGUyLmluZGV4KSk7XG4gIH1cbiAgZnVuY3Rpb24gc3R5bGUocHJvcCwgdmFsdWUsIHVzZUNvbnRhaW5lcikge1xuICAgIGZvckVhY2gkMSgoU2xpZGUyKSA9PiB7XG4gICAgICBTbGlkZTIuc3R5bGUocHJvcCwgdmFsdWUsIHVzZUNvbnRhaW5lcik7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gb2JzZXJ2ZUltYWdlcyhlbG0sIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgaW1hZ2VzID0gcXVlcnlBbGwoZWxtLCBcImltZ1wiKTtcbiAgICBsZXQgeyBsZW5ndGggfSA9IGltYWdlcztcbiAgICBpZiAobGVuZ3RoKSB7XG4gICAgICBpbWFnZXMuZm9yRWFjaCgoaW1nKSA9PiB7XG4gICAgICAgIGJpbmQoaW1nLCBcImxvYWQgZXJyb3JcIiwgKCkgPT4ge1xuICAgICAgICAgIGlmICghLS1sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBnZXRMZW5ndGgoZXhjbHVkZUNsb25lcykge1xuICAgIHJldHVybiBleGNsdWRlQ2xvbmVzID8gc2xpZGVzLmxlbmd0aCA6IFNsaWRlczIubGVuZ3RoO1xuICB9XG4gIGZ1bmN0aW9uIGlzRW5vdWdoKCkge1xuICAgIHJldHVybiBTbGlkZXMyLmxlbmd0aCA+IG9wdGlvbnMucGVyUGFnZTtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGRlc3Ryb3ksXG4gICAgcmVnaXN0ZXIsXG4gICAgZ2V0LFxuICAgIGdldEluLFxuICAgIGdldEF0LFxuICAgIGFkZCxcbiAgICByZW1vdmU6IHJlbW92ZSQxLFxuICAgIGZvckVhY2g6IGZvckVhY2gkMSxcbiAgICBmaWx0ZXIsXG4gICAgc3R5bGUsXG4gICAgZ2V0TGVuZ3RoLFxuICAgIGlzRW5vdWdoXG4gIH07XG59XG5cbmZ1bmN0aW9uIExheW91dChTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uLCBiaW5kLCBlbWl0IH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBTbGlkZXMgfSA9IENvbXBvbmVudHMyO1xuICBjb25zdCB7IHJlc29sdmUgfSA9IENvbXBvbmVudHMyLkRpcmVjdGlvbjtcbiAgY29uc3QgeyByb290LCB0cmFjaywgbGlzdCB9ID0gQ29tcG9uZW50czIuRWxlbWVudHM7XG4gIGNvbnN0IHsgZ2V0QXQgfSA9IFNsaWRlcztcbiAgbGV0IHZlcnRpY2FsO1xuICBsZXQgcm9vdFJlY3Q7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGluaXQoKTtcbiAgICBiaW5kKHdpbmRvdywgXCJyZXNpemUgbG9hZFwiLCBUaHJvdHRsZShlbWl0LmJpbmQodGhpcywgRVZFTlRfUkVTSVpFKSkpO1xuICAgIG9uKFtFVkVOVF9VUERBVEVELCBFVkVOVF9SRUZSRVNIXSwgaW5pdCk7XG4gICAgb24oRVZFTlRfUkVTSVpFLCByZXNpemUpO1xuICB9XG4gIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgcm9vdFJlY3QgPSBudWxsO1xuICAgIHZlcnRpY2FsID0gb3B0aW9ucy5kaXJlY3Rpb24gPT09IFRUQjtcbiAgICBzdHlsZShyb290LCBcIm1heFdpZHRoXCIsIHVuaXQob3B0aW9ucy53aWR0aCkpO1xuICAgIHN0eWxlKHRyYWNrLCByZXNvbHZlKFwicGFkZGluZ0xlZnRcIiksIGNzc1BhZGRpbmcoZmFsc2UpKTtcbiAgICBzdHlsZSh0cmFjaywgcmVzb2x2ZShcInBhZGRpbmdSaWdodFwiKSwgY3NzUGFkZGluZyh0cnVlKSk7XG4gICAgcmVzaXplKCk7XG4gIH1cbiAgZnVuY3Rpb24gcmVzaXplKCkge1xuICAgIGNvbnN0IG5ld1JlY3QgPSByZWN0KHJvb3QpO1xuICAgIGlmICghcm9vdFJlY3QgfHwgcm9vdFJlY3Qud2lkdGggIT09IG5ld1JlY3Qud2lkdGggfHwgcm9vdFJlY3QuaGVpZ2h0ICE9PSBuZXdSZWN0LmhlaWdodCkge1xuICAgICAgc3R5bGUodHJhY2ssIFwiaGVpZ2h0XCIsIGNzc1RyYWNrSGVpZ2h0KCkpO1xuICAgICAgU2xpZGVzLnN0eWxlKHJlc29sdmUoXCJtYXJnaW5SaWdodFwiKSwgdW5pdChvcHRpb25zLmdhcCkpO1xuICAgICAgU2xpZGVzLnN0eWxlKFwid2lkdGhcIiwgY3NzU2xpZGVXaWR0aCgpIHx8IG51bGwpO1xuICAgICAgc2V0U2xpZGVzSGVpZ2h0KCk7XG4gICAgICByb290UmVjdCA9IG5ld1JlY3Q7XG4gICAgICBlbWl0KEVWRU5UX1JFU0laRUQpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBzZXRTbGlkZXNIZWlnaHQoKSB7XG4gICAgU2xpZGVzLnN0eWxlKFwiaGVpZ2h0XCIsIGNzc1NsaWRlSGVpZ2h0KCkgfHwgbnVsbCwgdHJ1ZSk7XG4gIH1cbiAgZnVuY3Rpb24gY3NzUGFkZGluZyhyaWdodCkge1xuICAgIGNvbnN0IHsgcGFkZGluZyB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBwcm9wID0gcmVzb2x2ZShyaWdodCA/IFwicmlnaHRcIiA6IFwibGVmdFwiKTtcbiAgICByZXR1cm4gcGFkZGluZyAmJiB1bml0KHBhZGRpbmdbcHJvcF0gfHwgKGlzT2JqZWN0KHBhZGRpbmcpID8gMCA6IHBhZGRpbmcpKSB8fCBcIjBweFwiO1xuICB9XG4gIGZ1bmN0aW9uIGNzc1RyYWNrSGVpZ2h0KCkge1xuICAgIGxldCBoZWlnaHQgPSBcIlwiO1xuICAgIGlmICh2ZXJ0aWNhbCkge1xuICAgICAgaGVpZ2h0ID0gY3NzSGVpZ2h0KCk7XG4gICAgICBhc3NlcnQoaGVpZ2h0LCBcImhlaWdodCBvciBoZWlnaHRSYXRpbyBpcyBtaXNzaW5nLlwiKTtcbiAgICAgIGhlaWdodCA9IGBjYWxjKCR7aGVpZ2h0fSAtICR7Y3NzUGFkZGluZyhmYWxzZSl9IC0gJHtjc3NQYWRkaW5nKHRydWUpfSlgO1xuICAgIH1cbiAgICByZXR1cm4gaGVpZ2h0O1xuICB9XG4gIGZ1bmN0aW9uIGNzc0hlaWdodCgpIHtcbiAgICByZXR1cm4gdW5pdChvcHRpb25zLmhlaWdodCB8fCByZWN0KGxpc3QpLndpZHRoICogb3B0aW9ucy5oZWlnaHRSYXRpbyk7XG4gIH1cbiAgZnVuY3Rpb24gY3NzU2xpZGVXaWR0aCgpIHtcbiAgICByZXR1cm4gb3B0aW9ucy5hdXRvV2lkdGggPyBcIlwiIDogdW5pdChvcHRpb25zLmZpeGVkV2lkdGgpIHx8ICh2ZXJ0aWNhbCA/IFwiXCIgOiBjc3NTbGlkZVNpemUoKSk7XG4gIH1cbiAgZnVuY3Rpb24gY3NzU2xpZGVIZWlnaHQoKSB7XG4gICAgcmV0dXJuIHVuaXQob3B0aW9ucy5maXhlZEhlaWdodCkgfHwgKHZlcnRpY2FsID8gb3B0aW9ucy5hdXRvSGVpZ2h0ID8gXCJcIiA6IGNzc1NsaWRlU2l6ZSgpIDogY3NzSGVpZ2h0KCkpO1xuICB9XG4gIGZ1bmN0aW9uIGNzc1NsaWRlU2l6ZSgpIHtcbiAgICBjb25zdCBnYXAgPSB1bml0KG9wdGlvbnMuZ2FwKTtcbiAgICByZXR1cm4gYGNhbGMoKDEwMCUke2dhcCAmJiBgICsgJHtnYXB9YH0pLyR7b3B0aW9ucy5wZXJQYWdlIHx8IDF9JHtnYXAgJiYgYCAtICR7Z2FwfWB9KWA7XG4gIH1cbiAgZnVuY3Rpb24gbGlzdFNpemUoKSB7XG4gICAgcmV0dXJuIHJlY3QobGlzdClbcmVzb2x2ZShcIndpZHRoXCIpXTtcbiAgfVxuICBmdW5jdGlvbiBzbGlkZVNpemUoaW5kZXgsIHdpdGhvdXRHYXApIHtcbiAgICBjb25zdCBTbGlkZSA9IGdldEF0KGluZGV4IHx8IDApO1xuICAgIHJldHVybiBTbGlkZSA/IHJlY3QoU2xpZGUuc2xpZGUpW3Jlc29sdmUoXCJ3aWR0aFwiKV0gKyAod2l0aG91dEdhcCA/IDAgOiBnZXRHYXAoKSkgOiAwO1xuICB9XG4gIGZ1bmN0aW9uIHRvdGFsU2l6ZShpbmRleCwgd2l0aG91dEdhcCkge1xuICAgIGNvbnN0IFNsaWRlID0gZ2V0QXQoaW5kZXgpO1xuICAgIGlmIChTbGlkZSkge1xuICAgICAgY29uc3QgcmlnaHQgPSByZWN0KFNsaWRlLnNsaWRlKVtyZXNvbHZlKFwicmlnaHRcIildO1xuICAgICAgY29uc3QgbGVmdCA9IHJlY3QobGlzdClbcmVzb2x2ZShcImxlZnRcIildO1xuICAgICAgcmV0dXJuIGFicyhyaWdodCAtIGxlZnQpICsgKHdpdGhvdXRHYXAgPyAwIDogZ2V0R2FwKCkpO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfVxuICBmdW5jdGlvbiBzbGlkZXJTaXplKCkge1xuICAgIHJldHVybiB0b3RhbFNpemUoU3BsaWRlMi5sZW5ndGggLSAxLCB0cnVlKSAtIHRvdGFsU2l6ZSgtMSwgdHJ1ZSk7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0R2FwKCkge1xuICAgIGNvbnN0IFNsaWRlID0gZ2V0QXQoMCk7XG4gICAgcmV0dXJuIFNsaWRlICYmIHBhcnNlRmxvYXQoc3R5bGUoU2xpZGUuc2xpZGUsIHJlc29sdmUoXCJtYXJnaW5SaWdodFwiKSkpIHx8IDA7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0UGFkZGluZyhyaWdodCkge1xuICAgIHJldHVybiBwYXJzZUZsb2F0KHN0eWxlKHRyYWNrLCByZXNvbHZlKGBwYWRkaW5nJHtyaWdodCA/IFwiUmlnaHRcIiA6IFwiTGVmdFwifWApKSkgfHwgMDtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGxpc3RTaXplLFxuICAgIHNsaWRlU2l6ZSxcbiAgICBzbGlkZXJTaXplLFxuICAgIHRvdGFsU2l6ZSxcbiAgICBnZXRQYWRkaW5nXG4gIH07XG59XG5cbmZ1bmN0aW9uIENsb25lcyhTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uLCBlbWl0IH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBFbGVtZW50cywgU2xpZGVzIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgeyByZXNvbHZlIH0gPSBDb21wb25lbnRzMi5EaXJlY3Rpb247XG4gIGNvbnN0IGNsb25lcyA9IFtdO1xuICBsZXQgY2xvbmVDb3VudDtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaW5pdCgpO1xuICAgIG9uKEVWRU5UX1JFRlJFU0gsIHJlZnJlc2gpO1xuICAgIG9uKFtFVkVOVF9VUERBVEVELCBFVkVOVF9SRVNJWkVdLCBvYnNlcnZlKTtcbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIGlmIChjbG9uZUNvdW50ID0gY29tcHV0ZUNsb25lQ291bnQoKSkge1xuICAgICAgZ2VuZXJhdGUoY2xvbmVDb3VudCk7XG4gICAgICBlbWl0KEVWRU5UX1JFU0laRSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgcmVtb3ZlKGNsb25lcyk7XG4gICAgZW1wdHkoY2xvbmVzKTtcbiAgfVxuICBmdW5jdGlvbiByZWZyZXNoKCkge1xuICAgIGRlc3Ryb3koKTtcbiAgICBpbml0KCk7XG4gIH1cbiAgZnVuY3Rpb24gb2JzZXJ2ZSgpIHtcbiAgICBpZiAoY2xvbmVDb3VudCA8IGNvbXB1dGVDbG9uZUNvdW50KCkpIHtcbiAgICAgIGVtaXQoRVZFTlRfUkVGUkVTSCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGdlbmVyYXRlKGNvdW50KSB7XG4gICAgY29uc3Qgc2xpZGVzID0gU2xpZGVzLmdldCgpLnNsaWNlKCk7XG4gICAgY29uc3QgeyBsZW5ndGggfSA9IHNsaWRlcztcbiAgICBpZiAobGVuZ3RoKSB7XG4gICAgICB3aGlsZSAoc2xpZGVzLmxlbmd0aCA8IGNvdW50KSB7XG4gICAgICAgIHB1c2goc2xpZGVzLCBzbGlkZXMpO1xuICAgICAgfVxuICAgICAgcHVzaChzbGlkZXMuc2xpY2UoLWNvdW50KSwgc2xpZGVzLnNsaWNlKDAsIGNvdW50KSkuZm9yRWFjaCgoU2xpZGUsIGluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IGlzSGVhZCA9IGluZGV4IDwgY291bnQ7XG4gICAgICAgIGNvbnN0IGNsb25lID0gY2xvbmVEZWVwKFNsaWRlLnNsaWRlLCBpbmRleCk7XG4gICAgICAgIGlzSGVhZCA/IGJlZm9yZShjbG9uZSwgc2xpZGVzWzBdLnNsaWRlKSA6IGFwcGVuZChFbGVtZW50cy5saXN0LCBjbG9uZSk7XG4gICAgICAgIHB1c2goY2xvbmVzLCBjbG9uZSk7XG4gICAgICAgIFNsaWRlcy5yZWdpc3RlcihjbG9uZSwgaW5kZXggLSBjb3VudCArIChpc0hlYWQgPyAwIDogbGVuZ3RoKSwgU2xpZGUuaW5kZXgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGNsb25lRGVlcChlbG0sIGluZGV4KSB7XG4gICAgY29uc3QgY2xvbmUgPSBlbG0uY2xvbmVOb2RlKHRydWUpO1xuICAgIGFkZENsYXNzKGNsb25lLCBvcHRpb25zLmNsYXNzZXMuY2xvbmUpO1xuICAgIGNsb25lLmlkID0gYCR7U3BsaWRlMi5yb290LmlkfS1jbG9uZSR7cGFkKGluZGV4ICsgMSl9YDtcbiAgICByZXR1cm4gY2xvbmU7XG4gIH1cbiAgZnVuY3Rpb24gY29tcHV0ZUNsb25lQ291bnQoKSB7XG4gICAgbGV0IHsgY2xvbmVzOiBjbG9uZXMyIH0gPSBvcHRpb25zO1xuICAgIGlmICghU3BsaWRlMi5pcyhMT09QKSkge1xuICAgICAgY2xvbmVzMiA9IDA7XG4gICAgfSBlbHNlIGlmICghY2xvbmVzMikge1xuICAgICAgY29uc3QgZml4ZWRTaXplID0gbWVhc3VyZShFbGVtZW50cy5saXN0LCBvcHRpb25zW3Jlc29sdmUoXCJmaXhlZFdpZHRoXCIpXSk7XG4gICAgICBjb25zdCBmaXhlZENvdW50ID0gZml4ZWRTaXplICYmIGNlaWwocmVjdChFbGVtZW50cy50cmFjaylbcmVzb2x2ZShcIndpZHRoXCIpXSAvIGZpeGVkU2l6ZSk7XG4gICAgICBjb25zdCBiYXNlQ291bnQgPSBmaXhlZENvdW50IHx8IG9wdGlvbnNbcmVzb2x2ZShcImF1dG9XaWR0aFwiKV0gJiYgU3BsaWRlMi5sZW5ndGggfHwgb3B0aW9ucy5wZXJQYWdlO1xuICAgICAgY2xvbmVzMiA9IGJhc2VDb3VudCAqIChvcHRpb25zLmRyYWcgPyAob3B0aW9ucy5mbGlja01heFBhZ2VzIHx8IDEpICsgMSA6IDIpO1xuICAgIH1cbiAgICByZXR1cm4gY2xvbmVzMjtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGRlc3Ryb3lcbiAgfTtcbn1cblxuZnVuY3Rpb24gTW92ZShTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uLCBlbWl0IH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBzbGlkZVNpemUsIGdldFBhZGRpbmcsIHRvdGFsU2l6ZSwgbGlzdFNpemUsIHNsaWRlclNpemUgfSA9IENvbXBvbmVudHMyLkxheW91dDtcbiAgY29uc3QgeyByZXNvbHZlLCBvcmllbnQgfSA9IENvbXBvbmVudHMyLkRpcmVjdGlvbjtcbiAgY29uc3QgeyBsaXN0LCB0cmFjayB9ID0gQ29tcG9uZW50czIuRWxlbWVudHM7XG4gIGxldCB3YWl0aW5nO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBvbihbRVZFTlRfTU9VTlRFRCwgRVZFTlRfUkVTSVpFRCwgRVZFTlRfVVBEQVRFRCwgRVZFTlRfUkVGUkVTSF0sIHJlcG9zaXRpb24pO1xuICB9XG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgcmVtb3ZlQXR0cmlidXRlKGxpc3QsIFwic3R5bGVcIik7XG4gIH1cbiAgZnVuY3Rpb24gcmVwb3NpdGlvbigpIHtcbiAgICBpZiAoIWlzQnVzeSgpKSB7XG4gICAgICBDb21wb25lbnRzMi5TY3JvbGwuY2FuY2VsKCk7XG4gICAgICBqdW1wKFNwbGlkZTIuaW5kZXgpO1xuICAgICAgZW1pdChFVkVOVF9SRVBPU0lUSU9ORUQpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBtb3ZlKGRlc3QsIGluZGV4LCBwcmV2LCBjYWxsYmFjaykge1xuICAgIGlmICghaXNCdXN5KCkpIHtcbiAgICAgIGNvbnN0IHsgc2V0IH0gPSBTcGxpZGUyLnN0YXRlO1xuICAgICAgY29uc3QgcG9zaXRpb24gPSBnZXRQb3NpdGlvbigpO1xuICAgICAgY29uc3QgbG9vcGluZyA9IGRlc3QgIT09IGluZGV4O1xuICAgICAgd2FpdGluZyA9IGxvb3BpbmcgfHwgb3B0aW9ucy53YWl0Rm9yVHJhbnNpdGlvbjtcbiAgICAgIHNldChNT1ZJTkcpO1xuICAgICAgZW1pdChFVkVOVF9NT1ZFLCBpbmRleCwgcHJldiwgZGVzdCk7XG4gICAgICBDb21wb25lbnRzMi5UcmFuc2l0aW9uLnN0YXJ0KGRlc3QsICgpID0+IHtcbiAgICAgICAgbG9vcGluZyAmJiBqdW1wKGluZGV4KTtcbiAgICAgICAgd2FpdGluZyA9IGZhbHNlO1xuICAgICAgICBzZXQoSURMRSk7XG4gICAgICAgIGVtaXQoRVZFTlRfTU9WRUQsIGluZGV4LCBwcmV2LCBkZXN0KTtcbiAgICAgICAgaWYgKG9wdGlvbnMudHJpbVNwYWNlID09PSBcIm1vdmVcIiAmJiBkZXN0ICE9PSBwcmV2ICYmIHBvc2l0aW9uID09PSBnZXRQb3NpdGlvbigpKSB7XG4gICAgICAgICAgQ29tcG9uZW50czIuQ29udHJvbGxlci5nbyhkZXN0ID4gcHJldiA/IFwiPlwiIDogXCI8XCIsIGZhbHNlLCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGp1bXAoaW5kZXgpIHtcbiAgICB0cmFuc2xhdGUodG9Qb3NpdGlvbihpbmRleCwgdHJ1ZSkpO1xuICB9XG4gIGZ1bmN0aW9uIHRyYW5zbGF0ZShwb3NpdGlvbiwgcHJldmVudExvb3ApIHtcbiAgICBpZiAoIVNwbGlkZTIuaXMoRkFERSkpIHtcbiAgICAgIGxpc3Quc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSR7cmVzb2x2ZShcIlhcIil9KCR7cHJldmVudExvb3AgPyBwb3NpdGlvbiA6IGxvb3AocG9zaXRpb24pfXB4KWA7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGxvb3AocG9zaXRpb24pIHtcbiAgICBpZiAoIXdhaXRpbmcgJiYgU3BsaWRlMi5pcyhMT09QKSkge1xuICAgICAgY29uc3QgZGlmZiA9IG9yaWVudChwb3NpdGlvbiAtIGdldFBvc2l0aW9uKCkpO1xuICAgICAgY29uc3QgZXhjZWVkZWRNaW4gPSBleGNlZWRlZExpbWl0KGZhbHNlLCBwb3NpdGlvbikgJiYgZGlmZiA8IDA7XG4gICAgICBjb25zdCBleGNlZWRlZE1heCA9IGV4Y2VlZGVkTGltaXQodHJ1ZSwgcG9zaXRpb24pICYmIGRpZmYgPiAwO1xuICAgICAgaWYgKGV4Y2VlZGVkTWluIHx8IGV4Y2VlZGVkTWF4KSB7XG4gICAgICAgIHBvc2l0aW9uID0gc2hpZnQocG9zaXRpb24sIGV4Y2VlZGVkTWF4KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBvc2l0aW9uO1xuICB9XG4gIGZ1bmN0aW9uIHNoaWZ0KHBvc2l0aW9uLCBiYWNrd2FyZHMpIHtcbiAgICBjb25zdCBleGNlc3MgPSBwb3NpdGlvbiAtIGdldExpbWl0KGJhY2t3YXJkcyk7XG4gICAgY29uc3Qgc2l6ZSA9IHNsaWRlclNpemUoKTtcbiAgICBwb3NpdGlvbiAtPSBzaWduKGV4Y2VzcykgKiBzaXplICogY2VpbChhYnMoZXhjZXNzKSAvIHNpemUpO1xuICAgIHJldHVybiBwb3NpdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgd2FpdGluZyA9IGZhbHNlO1xuICAgIHRyYW5zbGF0ZShnZXRQb3NpdGlvbigpKTtcbiAgICBDb21wb25lbnRzMi5UcmFuc2l0aW9uLmNhbmNlbCgpO1xuICB9XG4gIGZ1bmN0aW9uIHRvSW5kZXgocG9zaXRpb24pIHtcbiAgICBjb25zdCBTbGlkZXMgPSBDb21wb25lbnRzMi5TbGlkZXMuZ2V0KCk7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBsZXQgbWluRGlzdGFuY2UgPSBJbmZpbml0eTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IFNsaWRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3Qgc2xpZGVJbmRleCA9IFNsaWRlc1tpXS5pbmRleDtcbiAgICAgIGNvbnN0IGRpc3RhbmNlID0gYWJzKHRvUG9zaXRpb24oc2xpZGVJbmRleCwgdHJ1ZSkgLSBwb3NpdGlvbik7XG4gICAgICBpZiAoZGlzdGFuY2UgPD0gbWluRGlzdGFuY2UpIHtcbiAgICAgICAgbWluRGlzdGFuY2UgPSBkaXN0YW5jZTtcbiAgICAgICAgaW5kZXggPSBzbGlkZUluZGV4O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpbmRleDtcbiAgfVxuICBmdW5jdGlvbiB0b1Bvc2l0aW9uKGluZGV4LCB0cmltbWluZykge1xuICAgIGNvbnN0IHBvc2l0aW9uID0gb3JpZW50KHRvdGFsU2l6ZShpbmRleCAtIDEpIC0gb2Zmc2V0KGluZGV4KSk7XG4gICAgcmV0dXJuIHRyaW1taW5nID8gdHJpbShwb3NpdGlvbikgOiBwb3NpdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBnZXRQb3NpdGlvbigpIHtcbiAgICBjb25zdCBsZWZ0ID0gcmVzb2x2ZShcImxlZnRcIik7XG4gICAgcmV0dXJuIHJlY3QobGlzdClbbGVmdF0gLSByZWN0KHRyYWNrKVtsZWZ0XSArIG9yaWVudChnZXRQYWRkaW5nKGZhbHNlKSk7XG4gIH1cbiAgZnVuY3Rpb24gdHJpbShwb3NpdGlvbikge1xuICAgIGlmIChvcHRpb25zLnRyaW1TcGFjZSAmJiBTcGxpZGUyLmlzKFNMSURFKSkge1xuICAgICAgcG9zaXRpb24gPSBjbGFtcChwb3NpdGlvbiwgMCwgb3JpZW50KHNsaWRlclNpemUoKSAtIGxpc3RTaXplKCkpKTtcbiAgICB9XG4gICAgcmV0dXJuIHBvc2l0aW9uO1xuICB9XG4gIGZ1bmN0aW9uIG9mZnNldChpbmRleCkge1xuICAgIGNvbnN0IHsgZm9jdXMgfSA9IG9wdGlvbnM7XG4gICAgcmV0dXJuIGZvY3VzID09PSBcImNlbnRlclwiID8gKGxpc3RTaXplKCkgLSBzbGlkZVNpemUoaW5kZXgsIHRydWUpKSAvIDIgOiArZm9jdXMgKiBzbGlkZVNpemUoaW5kZXgpIHx8IDA7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0TGltaXQobWF4KSB7XG4gICAgcmV0dXJuIHRvUG9zaXRpb24obWF4ID8gQ29tcG9uZW50czIuQ29udHJvbGxlci5nZXRFbmQoKSA6IDAsICEhb3B0aW9ucy50cmltU3BhY2UpO1xuICB9XG4gIGZ1bmN0aW9uIGlzQnVzeSgpIHtcbiAgICByZXR1cm4gISF3YWl0aW5nO1xuICB9XG4gIGZ1bmN0aW9uIGV4Y2VlZGVkTGltaXQobWF4LCBwb3NpdGlvbikge1xuICAgIHBvc2l0aW9uID0gaXNVbmRlZmluZWQocG9zaXRpb24pID8gZ2V0UG9zaXRpb24oKSA6IHBvc2l0aW9uO1xuICAgIGNvbnN0IGV4Y2VlZGVkTWluID0gbWF4ICE9PSB0cnVlICYmIG9yaWVudChwb3NpdGlvbikgPCBvcmllbnQoZ2V0TGltaXQoZmFsc2UpKTtcbiAgICBjb25zdCBleGNlZWRlZE1heCA9IG1heCAhPT0gZmFsc2UgJiYgb3JpZW50KHBvc2l0aW9uKSA+IG9yaWVudChnZXRMaW1pdCh0cnVlKSk7XG4gICAgcmV0dXJuIGV4Y2VlZGVkTWluIHx8IGV4Y2VlZGVkTWF4O1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZGVzdHJveSxcbiAgICBtb3ZlLFxuICAgIGp1bXAsXG4gICAgdHJhbnNsYXRlLFxuICAgIHNoaWZ0LFxuICAgIGNhbmNlbCxcbiAgICB0b0luZGV4LFxuICAgIHRvUG9zaXRpb24sXG4gICAgZ2V0UG9zaXRpb24sXG4gICAgZ2V0TGltaXQsXG4gICAgaXNCdXN5LFxuICAgIGV4Y2VlZGVkTGltaXRcbiAgfTtcbn1cblxuZnVuY3Rpb24gQ29udHJvbGxlcihTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uIH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBNb3ZlIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgeyBnZXRQb3NpdGlvbiwgZ2V0TGltaXQgfSA9IE1vdmU7XG4gIGNvbnN0IHsgaXNFbm91Z2gsIGdldExlbmd0aCB9ID0gQ29tcG9uZW50czIuU2xpZGVzO1xuICBjb25zdCBpc0xvb3AgPSBTcGxpZGUyLmlzKExPT1ApO1xuICBjb25zdCBpc1NsaWRlID0gU3BsaWRlMi5pcyhTTElERSk7XG4gIGxldCBjdXJySW5kZXggPSBvcHRpb25zLnN0YXJ0IHx8IDA7XG4gIGxldCBwcmV2SW5kZXggPSBjdXJySW5kZXg7XG4gIGxldCBzbGlkZUNvdW50O1xuICBsZXQgcGVyTW92ZTtcbiAgbGV0IHBlclBhZ2U7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGluaXQoKTtcbiAgICBvbihbRVZFTlRfVVBEQVRFRCwgRVZFTlRfUkVGUkVTSF0sIGluaXQsIERFRkFVTFRfRVZFTlRfUFJJT1JJVFkgLSAxKTtcbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHNsaWRlQ291bnQgPSBnZXRMZW5ndGgodHJ1ZSk7XG4gICAgcGVyTW92ZSA9IG9wdGlvbnMucGVyTW92ZTtcbiAgICBwZXJQYWdlID0gb3B0aW9ucy5wZXJQYWdlO1xuICAgIGN1cnJJbmRleCA9IGNsYW1wKGN1cnJJbmRleCwgMCwgc2xpZGVDb3VudCAtIDEpO1xuICB9XG4gIGZ1bmN0aW9uIGdvKGNvbnRyb2wsIGFsbG93U2FtZUluZGV4LCBjYWxsYmFjaykge1xuICAgIGNvbnN0IGRlc3QgPSBwYXJzZShjb250cm9sKTtcbiAgICBpZiAob3B0aW9ucy51c2VTY3JvbGwpIHtcbiAgICAgIHNjcm9sbChkZXN0LCB0cnVlLCB0cnVlLCBvcHRpb25zLnNwZWVkLCBjYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gbG9vcChkZXN0KTtcbiAgICAgIGlmIChpbmRleCA+IC0xICYmICFNb3ZlLmlzQnVzeSgpICYmIChhbGxvd1NhbWVJbmRleCB8fCBpbmRleCAhPT0gY3VyckluZGV4KSkge1xuICAgICAgICBzZXRJbmRleChpbmRleCk7XG4gICAgICAgIE1vdmUubW92ZShkZXN0LCBpbmRleCwgcHJldkluZGV4LCBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHNjcm9sbChkZXN0aW5hdGlvbiwgdXNlSW5kZXgsIHNuYXAsIGR1cmF0aW9uLCBjYWxsYmFjaykge1xuICAgIGNvbnN0IGRlc3QgPSB1c2VJbmRleCA/IGRlc3RpbmF0aW9uIDogdG9EZXN0KGRlc3RpbmF0aW9uKTtcbiAgICBDb21wb25lbnRzMi5TY3JvbGwuc2Nyb2xsKHVzZUluZGV4IHx8IHNuYXAgPyBNb3ZlLnRvUG9zaXRpb24oZGVzdCwgdHJ1ZSkgOiBkZXN0aW5hdGlvbiwgZHVyYXRpb24sICgpID0+IHtcbiAgICAgIHNldEluZGV4KE1vdmUudG9JbmRleChNb3ZlLmdldFBvc2l0aW9uKCkpKTtcbiAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gcGFyc2UoY29udHJvbCkge1xuICAgIGxldCBpbmRleCA9IGN1cnJJbmRleDtcbiAgICBpZiAoaXNTdHJpbmcoY29udHJvbCkpIHtcbiAgICAgIGNvbnN0IFssIGluZGljYXRvciwgbnVtYmVyXSA9IGNvbnRyb2wubWF0Y2goLyhbK1xcLTw+XSkoXFxkKyk/LykgfHwgW107XG4gICAgICBpZiAoaW5kaWNhdG9yID09PSBcIitcIiB8fCBpbmRpY2F0b3IgPT09IFwiLVwiKSB7XG4gICAgICAgIGluZGV4ID0gY29tcHV0ZURlc3RJbmRleChjdXJySW5kZXggKyArYCR7aW5kaWNhdG9yfSR7K251bWJlciB8fCAxfWAsIGN1cnJJbmRleCwgdHJ1ZSk7XG4gICAgICB9IGVsc2UgaWYgKGluZGljYXRvciA9PT0gXCI+XCIpIHtcbiAgICAgICAgaW5kZXggPSBudW1iZXIgPyB0b0luZGV4KCtudW1iZXIpIDogZ2V0TmV4dCh0cnVlKTtcbiAgICAgIH0gZWxzZSBpZiAoaW5kaWNhdG9yID09PSBcIjxcIikge1xuICAgICAgICBpbmRleCA9IGdldFByZXYodHJ1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpc0xvb3ApIHtcbiAgICAgICAgaW5kZXggPSBjbGFtcChjb250cm9sLCAtcGVyUGFnZSwgc2xpZGVDb3VudCArIHBlclBhZ2UgLSAxKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluZGV4ID0gY2xhbXAoY29udHJvbCwgMCwgZ2V0RW5kKCkpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0TmV4dChkZXN0aW5hdGlvbikge1xuICAgIHJldHVybiBnZXRBZGphY2VudChmYWxzZSwgZGVzdGluYXRpb24pO1xuICB9XG4gIGZ1bmN0aW9uIGdldFByZXYoZGVzdGluYXRpb24pIHtcbiAgICByZXR1cm4gZ2V0QWRqYWNlbnQodHJ1ZSwgZGVzdGluYXRpb24pO1xuICB9XG4gIGZ1bmN0aW9uIGdldEFkamFjZW50KHByZXYsIGRlc3RpbmF0aW9uKSB7XG4gICAgY29uc3QgbnVtYmVyID0gcGVyTW92ZSB8fCAoaGFzRm9jdXMoKSA/IDEgOiBwZXJQYWdlKTtcbiAgICBjb25zdCBkZXN0ID0gY29tcHV0ZURlc3RJbmRleChjdXJySW5kZXggKyBudW1iZXIgKiAocHJldiA/IC0xIDogMSksIGN1cnJJbmRleCk7XG4gICAgaWYgKGRlc3QgPT09IC0xICYmIGlzU2xpZGUpIHtcbiAgICAgIGlmICghYXBwcm94aW1hdGVseUVxdWFsKGdldFBvc2l0aW9uKCksIGdldExpbWl0KCFwcmV2KSwgMSkpIHtcbiAgICAgICAgcmV0dXJuIHByZXYgPyAwIDogZ2V0RW5kKCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkZXN0aW5hdGlvbiA/IGRlc3QgOiBsb29wKGRlc3QpO1xuICB9XG4gIGZ1bmN0aW9uIGNvbXB1dGVEZXN0SW5kZXgoZGVzdCwgZnJvbSwgaW5jcmVtZW50YWwpIHtcbiAgICBpZiAoaXNFbm91Z2goKSkge1xuICAgICAgY29uc3QgZW5kID0gZ2V0RW5kKCk7XG4gICAgICBpZiAoZGVzdCA8IDAgfHwgZGVzdCA+IGVuZCkge1xuICAgICAgICBpZiAoYmV0d2VlbigwLCBkZXN0LCBmcm9tLCB0cnVlKSB8fCBiZXR3ZWVuKGVuZCwgZnJvbSwgZGVzdCwgdHJ1ZSkpIHtcbiAgICAgICAgICBkZXN0ID0gdG9JbmRleCh0b1BhZ2UoZGVzdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChpc0xvb3ApIHtcbiAgICAgICAgICAgIGRlc3QgPSBwZXJNb3ZlID8gZGVzdCA6IGRlc3QgPCAwID8gLShzbGlkZUNvdW50ICUgcGVyUGFnZSB8fCBwZXJQYWdlKSA6IHNsaWRlQ291bnQ7XG4gICAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zLnJld2luZCkge1xuICAgICAgICAgICAgZGVzdCA9IGRlc3QgPCAwID8gZW5kIDogMDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVzdCA9IC0xO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCFpbmNyZW1lbnRhbCAmJiBkZXN0ICE9PSBmcm9tKSB7XG4gICAgICAgICAgZGVzdCA9IHBlck1vdmUgPyBkZXN0IDogdG9JbmRleCh0b1BhZ2UoZnJvbSkgKyAoZGVzdCA8IGZyb20gPyAtMSA6IDEpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBkZXN0ID0gLTE7XG4gICAgfVxuICAgIHJldHVybiBkZXN0O1xuICB9XG4gIGZ1bmN0aW9uIGdldEVuZCgpIHtcbiAgICBsZXQgZW5kID0gc2xpZGVDb3VudCAtIHBlclBhZ2U7XG4gICAgaWYgKGhhc0ZvY3VzKCkgfHwgaXNMb29wICYmIHBlck1vdmUpIHtcbiAgICAgIGVuZCA9IHNsaWRlQ291bnQgLSAxO1xuICAgIH1cbiAgICByZXR1cm4gbWF4KGVuZCwgMCk7XG4gIH1cbiAgZnVuY3Rpb24gbG9vcChpbmRleCkge1xuICAgIGlmIChpc0xvb3ApIHtcbiAgICAgIHJldHVybiBpc0Vub3VnaCgpID8gaW5kZXggJSBzbGlkZUNvdW50ICsgKGluZGV4IDwgMCA/IHNsaWRlQ291bnQgOiAwKSA6IC0xO1xuICAgIH1cbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cbiAgZnVuY3Rpb24gdG9JbmRleChwYWdlKSB7XG4gICAgcmV0dXJuIGNsYW1wKGhhc0ZvY3VzKCkgPyBwYWdlIDogcGVyUGFnZSAqIHBhZ2UsIDAsIGdldEVuZCgpKTtcbiAgfVxuICBmdW5jdGlvbiB0b1BhZ2UoaW5kZXgpIHtcbiAgICBpZiAoIWhhc0ZvY3VzKCkpIHtcbiAgICAgIGluZGV4ID0gYmV0d2VlbihpbmRleCwgc2xpZGVDb3VudCAtIHBlclBhZ2UsIHNsaWRlQ291bnQgLSAxKSA/IHNsaWRlQ291bnQgLSAxIDogaW5kZXg7XG4gICAgICBpbmRleCA9IGZsb29yKGluZGV4IC8gcGVyUGFnZSk7XG4gICAgfVxuICAgIHJldHVybiBpbmRleDtcbiAgfVxuICBmdW5jdGlvbiB0b0Rlc3QoZGVzdGluYXRpb24pIHtcbiAgICBjb25zdCBjbG9zZXN0ID0gTW92ZS50b0luZGV4KGRlc3RpbmF0aW9uKTtcbiAgICByZXR1cm4gaXNTbGlkZSA/IGNsYW1wKGNsb3Nlc3QsIDAsIGdldEVuZCgpKSA6IGNsb3Nlc3Q7XG4gIH1cbiAgZnVuY3Rpb24gc2V0SW5kZXgoaW5kZXgpIHtcbiAgICBpZiAoaW5kZXggIT09IGN1cnJJbmRleCkge1xuICAgICAgcHJldkluZGV4ID0gY3VyckluZGV4O1xuICAgICAgY3VyckluZGV4ID0gaW5kZXg7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGdldEluZGV4KHByZXYpIHtcbiAgICByZXR1cm4gcHJldiA/IHByZXZJbmRleCA6IGN1cnJJbmRleDtcbiAgfVxuICBmdW5jdGlvbiBoYXNGb2N1cygpIHtcbiAgICByZXR1cm4gIWlzVW5kZWZpbmVkKG9wdGlvbnMuZm9jdXMpIHx8IG9wdGlvbnMuaXNOYXZpZ2F0aW9uO1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZ28sXG4gICAgc2Nyb2xsLFxuICAgIGdldE5leHQsXG4gICAgZ2V0UHJldixcbiAgICBnZXRFbmQsXG4gICAgc2V0SW5kZXgsXG4gICAgZ2V0SW5kZXgsXG4gICAgdG9JbmRleCxcbiAgICB0b1BhZ2UsXG4gICAgdG9EZXN0LFxuICAgIGhhc0ZvY3VzXG4gIH07XG59XG5cbmNvbnN0IFhNTF9OQU1FX1NQQUNFID0gXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO1xuY29uc3QgUEFUSCA9IFwibTE1LjUgMC45MzItNC4zIDQuMzggMTQuNSAxNC42LTE0LjUgMTQuNSA0LjMgNC40IDE0LjYtMTQuNiA0LjQtNC4zLTQuNC00LjQtMTQuNi0xNC42elwiO1xuY29uc3QgU0laRSA9IDQwO1xuXG5mdW5jdGlvbiBBcnJvd3MoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgYmluZCwgZW1pdCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgY2xhc3NlcywgaTE4biB9ID0gb3B0aW9ucztcbiAgY29uc3QgeyBFbGVtZW50cywgQ29udHJvbGxlciB9ID0gQ29tcG9uZW50czI7XG4gIGxldCB3cmFwcGVyID0gRWxlbWVudHMuYXJyb3dzO1xuICBsZXQgcHJldiA9IEVsZW1lbnRzLnByZXY7XG4gIGxldCBuZXh0ID0gRWxlbWVudHMubmV4dDtcbiAgbGV0IGNyZWF0ZWQ7XG4gIGNvbnN0IGFycm93cyA9IHt9O1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpbml0KCk7XG4gICAgb24oRVZFTlRfVVBEQVRFRCwgaW5pdCk7XG4gIH1cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBpZiAob3B0aW9ucy5hcnJvd3MpIHtcbiAgICAgIGlmICghcHJldiB8fCAhbmV4dCkge1xuICAgICAgICBjcmVhdGVBcnJvd3MoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHByZXYgJiYgbmV4dCkge1xuICAgICAgaWYgKCFhcnJvd3MucHJldikge1xuICAgICAgICBjb25zdCB7IGlkIH0gPSBFbGVtZW50cy50cmFjaztcbiAgICAgICAgc2V0QXR0cmlidXRlKHByZXYsIEFSSUFfQ09OVFJPTFMsIGlkKTtcbiAgICAgICAgc2V0QXR0cmlidXRlKG5leHQsIEFSSUFfQ09OVFJPTFMsIGlkKTtcbiAgICAgICAgYXJyb3dzLnByZXYgPSBwcmV2O1xuICAgICAgICBhcnJvd3MubmV4dCA9IG5leHQ7XG4gICAgICAgIGxpc3RlbigpO1xuICAgICAgICBlbWl0KEVWRU5UX0FSUk9XU19NT1VOVEVELCBwcmV2LCBuZXh0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRpc3BsYXkod3JhcHBlciwgb3B0aW9ucy5hcnJvd3MgPT09IGZhbHNlID8gXCJub25lXCIgOiBcIlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBpZiAoY3JlYXRlZCkge1xuICAgICAgcmVtb3ZlKHdyYXBwZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmVBdHRyaWJ1dGUocHJldiwgQUxMX0FUVFJJQlVURVMpO1xuICAgICAgcmVtb3ZlQXR0cmlidXRlKG5leHQsIEFMTF9BVFRSSUJVVEVTKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gbGlzdGVuKCkge1xuICAgIGNvbnN0IHsgZ28gfSA9IENvbnRyb2xsZXI7XG4gICAgb24oW0VWRU5UX01PVU5URUQsIEVWRU5UX01PVkVELCBFVkVOVF9VUERBVEVELCBFVkVOVF9SRUZSRVNILCBFVkVOVF9TQ1JPTExFRF0sIHVwZGF0ZSk7XG4gICAgYmluZChuZXh0LCBcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGdvKFwiPlwiLCB0cnVlKTtcbiAgICB9KTtcbiAgICBiaW5kKHByZXYsIFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgZ28oXCI8XCIsIHRydWUpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGNyZWF0ZUFycm93cygpIHtcbiAgICB3cmFwcGVyID0gY3JlYXRlKFwiZGl2XCIsIGNsYXNzZXMuYXJyb3dzKTtcbiAgICBwcmV2ID0gY3JlYXRlQXJyb3codHJ1ZSk7XG4gICAgbmV4dCA9IGNyZWF0ZUFycm93KGZhbHNlKTtcbiAgICBjcmVhdGVkID0gdHJ1ZTtcbiAgICBhcHBlbmQod3JhcHBlciwgW3ByZXYsIG5leHRdKTtcbiAgICBiZWZvcmUod3JhcHBlciwgY2hpbGQob3B0aW9ucy5hcnJvd3MgPT09IFwic2xpZGVyXCIgJiYgRWxlbWVudHMuc2xpZGVyIHx8IFNwbGlkZTIucm9vdCkpO1xuICB9XG4gIGZ1bmN0aW9uIGNyZWF0ZUFycm93KHByZXYyKSB7XG4gICAgY29uc3QgYXJyb3cgPSBgPGJ1dHRvbiBjbGFzcz1cIiR7Y2xhc3Nlcy5hcnJvd30gJHtwcmV2MiA/IGNsYXNzZXMucHJldiA6IGNsYXNzZXMubmV4dH1cIiB0eXBlPVwiYnV0dG9uXCI+PHN2ZyB4bWxucz1cIiR7WE1MX05BTUVfU1BBQ0V9XCIgdmlld0JveD1cIjAgMCAke1NJWkV9ICR7U0laRX1cIiB3aWR0aD1cIiR7U0laRX1cIiBoZWlnaHQ9XCIke1NJWkV9XCI+PHBhdGggZD1cIiR7b3B0aW9ucy5hcnJvd1BhdGggfHwgUEFUSH1cIiAvPmA7XG4gICAgcmV0dXJuIHBhcnNlSHRtbChhcnJvdyk7XG4gIH1cbiAgZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgIGNvbnN0IGluZGV4ID0gU3BsaWRlMi5pbmRleDtcbiAgICBjb25zdCBwcmV2SW5kZXggPSBDb250cm9sbGVyLmdldFByZXYoKTtcbiAgICBjb25zdCBuZXh0SW5kZXggPSBDb250cm9sbGVyLmdldE5leHQoKTtcbiAgICBjb25zdCBwcmV2TGFiZWwgPSBwcmV2SW5kZXggPiAtMSAmJiBpbmRleCA8IHByZXZJbmRleCA/IGkxOG4ubGFzdCA6IGkxOG4ucHJldjtcbiAgICBjb25zdCBuZXh0TGFiZWwgPSBuZXh0SW5kZXggPiAtMSAmJiBpbmRleCA+IG5leHRJbmRleCA/IGkxOG4uZmlyc3QgOiBpMThuLm5leHQ7XG4gICAgcHJldi5kaXNhYmxlZCA9IHByZXZJbmRleCA8IDA7XG4gICAgbmV4dC5kaXNhYmxlZCA9IG5leHRJbmRleCA8IDA7XG4gICAgc2V0QXR0cmlidXRlKHByZXYsIEFSSUFfTEFCRUwsIHByZXZMYWJlbCk7XG4gICAgc2V0QXR0cmlidXRlKG5leHQsIEFSSUFfTEFCRUwsIG5leHRMYWJlbCk7XG4gICAgZW1pdChFVkVOVF9BUlJPV1NfVVBEQVRFRCwgcHJldiwgbmV4dCwgcHJldkluZGV4LCBuZXh0SW5kZXgpO1xuICB9XG4gIHJldHVybiB7XG4gICAgYXJyb3dzLFxuICAgIG1vdW50LFxuICAgIGRlc3Ryb3lcbiAgfTtcbn1cblxuZnVuY3Rpb24gQXV0b3BsYXkoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgYmluZCwgZW1pdCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgRWxlbWVudHMgfSA9IENvbXBvbmVudHMyO1xuICBjb25zdCBpbnRlcnZhbCA9IFJlcXVlc3RJbnRlcnZhbChvcHRpb25zLmludGVydmFsLCBTcGxpZGUyLmdvLmJpbmQoU3BsaWRlMiwgXCI+XCIpLCB1cGRhdGUpO1xuICBjb25zdCB7IGlzUGF1c2VkIH0gPSBpbnRlcnZhbDtcbiAgbGV0IGhvdmVyZWQ7XG4gIGxldCBmb2N1c2VkO1xuICBsZXQgcGF1c2VkO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBjb25zdCB7IGF1dG9wbGF5IH0gPSBvcHRpb25zO1xuICAgIGlmIChhdXRvcGxheSkge1xuICAgICAgaW5pdEJ1dHRvbih0cnVlKTtcbiAgICAgIGluaXRCdXR0b24oZmFsc2UpO1xuICAgICAgbGlzdGVuKCk7XG4gICAgICBpZiAoYXV0b3BsYXkgIT09IFwicGF1c2VcIikge1xuICAgICAgICBwbGF5KCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGluaXRCdXR0b24oZm9yUGF1c2UpIHtcbiAgICBjb25zdCBwcm9wID0gZm9yUGF1c2UgPyBcInBhdXNlXCIgOiBcInBsYXlcIjtcbiAgICBjb25zdCBidXR0b24gPSBFbGVtZW50c1twcm9wXTtcbiAgICBpZiAoYnV0dG9uKSB7XG4gICAgICBzZXRBdHRyaWJ1dGUoYnV0dG9uLCBBUklBX0NPTlRST0xTLCBFbGVtZW50cy50cmFjay5pZCk7XG4gICAgICBzZXRBdHRyaWJ1dGUoYnV0dG9uLCBBUklBX0xBQkVMLCBvcHRpb25zLmkxOG5bcHJvcF0pO1xuICAgICAgYmluZChidXR0b24sIFwiY2xpY2tcIiwgZm9yUGF1c2UgPyBwYXVzZSA6IHBsYXkpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBsaXN0ZW4oKSB7XG4gICAgY29uc3QgeyByb290IH0gPSBFbGVtZW50cztcbiAgICBpZiAob3B0aW9ucy5wYXVzZU9uSG92ZXIpIHtcbiAgICAgIGJpbmQocm9vdCwgXCJtb3VzZWVudGVyIG1vdXNlbGVhdmVcIiwgKGUpID0+IHtcbiAgICAgICAgaG92ZXJlZCA9IGUudHlwZSA9PT0gXCJtb3VzZWVudGVyXCI7XG4gICAgICAgIGF1dG9Ub2dnbGUoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5wYXVzZU9uRm9jdXMpIHtcbiAgICAgIGJpbmQocm9vdCwgXCJmb2N1c2luIGZvY3Vzb3V0XCIsIChlKSA9PiB7XG4gICAgICAgIGZvY3VzZWQgPSBlLnR5cGUgPT09IFwiZm9jdXNpblwiO1xuICAgICAgICBhdXRvVG9nZ2xlKCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgb24oW0VWRU5UX01PVkUsIEVWRU5UX1NDUk9MTCwgRVZFTlRfUkVGUkVTSF0sIGludGVydmFsLnJld2luZCk7XG4gIH1cbiAgZnVuY3Rpb24gcGxheSgpIHtcbiAgICBpZiAoaXNQYXVzZWQoKSAmJiBDb21wb25lbnRzMi5TbGlkZXMuaXNFbm91Z2goKSkge1xuICAgICAgaW50ZXJ2YWwuc3RhcnQoIW9wdGlvbnMucmVzZXRQcm9ncmVzcyk7XG4gICAgICBmb2N1c2VkID0gaG92ZXJlZCA9IHBhdXNlZCA9IGZhbHNlO1xuICAgICAgZW1pdChFVkVOVF9BVVRPUExBWV9QTEFZKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gcGF1c2UobWFudWFsID0gdHJ1ZSkge1xuICAgIGlmICghaXNQYXVzZWQoKSkge1xuICAgICAgaW50ZXJ2YWwucGF1c2UoKTtcbiAgICAgIGVtaXQoRVZFTlRfQVVUT1BMQVlfUEFVU0UpO1xuICAgIH1cbiAgICBwYXVzZWQgPSBtYW51YWw7XG4gIH1cbiAgZnVuY3Rpb24gYXV0b1RvZ2dsZSgpIHtcbiAgICBpZiAoIXBhdXNlZCkge1xuICAgICAgaWYgKCFob3ZlcmVkICYmICFmb2N1c2VkKSB7XG4gICAgICAgIHBsYXkoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhdXNlKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gdXBkYXRlKHJhdGUpIHtcbiAgICBjb25zdCB7IGJhciB9ID0gRWxlbWVudHM7XG4gICAgaWYgKGJhcikge1xuICAgICAgc3R5bGUoYmFyLCBcIndpZHRoXCIsIGAke3JhdGUgKiAxMDB9JWApO1xuICAgIH1cbiAgICBlbWl0KEVWRU5UX0FVVE9QTEFZX1BMQVlJTkcsIHJhdGUpO1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZGVzdHJveTogaW50ZXJ2YWwuY2FuY2VsLFxuICAgIHBsYXksXG4gICAgcGF1c2UsXG4gICAgaXNQYXVzZWRcbiAgfTtcbn1cblxuZnVuY3Rpb24gQ292ZXIoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIGlmIChvcHRpb25zLmNvdmVyKSB7XG4gICAgICBvbihFVkVOVF9MQVpZTE9BRF9MT0FERUQsIChpbWcsIFNsaWRlKSA9PiB7XG4gICAgICAgIHRvZ2dsZSh0cnVlLCBpbWcsIFNsaWRlKTtcbiAgICAgIH0pO1xuICAgICAgb24oW0VWRU5UX01PVU5URUQsIEVWRU5UX1VQREFURUQsIEVWRU5UX1JFRlJFU0hdLCBhcHBseS5iaW5kKG51bGwsIHRydWUpKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBhcHBseShmYWxzZSk7XG4gIH1cbiAgZnVuY3Rpb24gYXBwbHkoY292ZXIpIHtcbiAgICBDb21wb25lbnRzMi5TbGlkZXMuZm9yRWFjaCgoU2xpZGUpID0+IHtcbiAgICAgIGNvbnN0IGltZyA9IGNoaWxkKFNsaWRlLmNvbnRhaW5lciB8fCBTbGlkZS5zbGlkZSwgXCJpbWdcIik7XG4gICAgICBpZiAoaW1nICYmIGltZy5zcmMpIHtcbiAgICAgICAgdG9nZ2xlKGNvdmVyLCBpbWcsIFNsaWRlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiB0b2dnbGUoY292ZXIsIGltZywgU2xpZGUpIHtcbiAgICBTbGlkZS5zdHlsZShcImJhY2tncm91bmRcIiwgY292ZXIgPyBgY2VudGVyL2NvdmVyIG5vLXJlcGVhdCB1cmwoXCIke2ltZy5zcmN9XCIpYCA6IFwiXCIsIHRydWUpO1xuICAgIGRpc3BsYXkoaW1nLCBjb3ZlciA/IFwibm9uZVwiIDogXCJcIik7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmNvbnN0IEJPVU5DRV9ESUZGX1RIUkVTSE9MRCA9IDEwO1xuY29uc3QgQk9VTkNFX0RVUkFUSU9OID0gNjAwO1xuY29uc3QgRlJJQ1RJT05fRkFDVE9SID0gMC42O1xuY29uc3QgQkFTRV9WRUxPQ0lUWSA9IDEuNTtcbmNvbnN0IE1JTl9EVVJBVElPTiA9IDgwMDtcblxuZnVuY3Rpb24gU2Nyb2xsKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24sIGVtaXQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IE1vdmUgfSA9IENvbXBvbmVudHMyO1xuICBjb25zdCB7IGdldFBvc2l0aW9uLCBnZXRMaW1pdCwgZXhjZWVkZWRMaW1pdCB9ID0gTW92ZTtcbiAgbGV0IGludGVydmFsO1xuICBsZXQgc2Nyb2xsQ2FsbGJhY2s7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIG9uKEVWRU5UX01PVkUsIGNsZWFyKTtcbiAgICBvbihbRVZFTlRfVVBEQVRFRCwgRVZFTlRfUkVGUkVTSF0sIGNhbmNlbCk7XG4gIH1cbiAgZnVuY3Rpb24gc2Nyb2xsKGRlc3RpbmF0aW9uLCBkdXJhdGlvbiwgY2FsbGJhY2ssIHN1cHByZXNzQ29uc3RyYWludCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gZ2V0UG9zaXRpb24oKTtcbiAgICBsZXQgZnJpY3Rpb24gPSAxO1xuICAgIGR1cmF0aW9uID0gZHVyYXRpb24gfHwgY29tcHV0ZUR1cmF0aW9uKGFicyhkZXN0aW5hdGlvbiAtIHN0YXJ0KSk7XG4gICAgc2Nyb2xsQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICBjbGVhcigpO1xuICAgIGludGVydmFsID0gUmVxdWVzdEludGVydmFsKGR1cmF0aW9uLCBvblNjcm9sbGVkLCAocmF0ZSkgPT4ge1xuICAgICAgY29uc3QgcG9zaXRpb24gPSBnZXRQb3NpdGlvbigpO1xuICAgICAgY29uc3QgdGFyZ2V0ID0gc3RhcnQgKyAoZGVzdGluYXRpb24gLSBzdGFydCkgKiBlYXNpbmcocmF0ZSk7XG4gICAgICBjb25zdCBkaWZmID0gKHRhcmdldCAtIGdldFBvc2l0aW9uKCkpICogZnJpY3Rpb247XG4gICAgICBNb3ZlLnRyYW5zbGF0ZShwb3NpdGlvbiArIGRpZmYpO1xuICAgICAgaWYgKFNwbGlkZTIuaXMoU0xJREUpICYmICFzdXBwcmVzc0NvbnN0cmFpbnQgJiYgZXhjZWVkZWRMaW1pdCgpKSB7XG4gICAgICAgIGZyaWN0aW9uICo9IEZSSUNUSU9OX0ZBQ1RPUjtcbiAgICAgICAgaWYgKGFicyhkaWZmKSA8IEJPVU5DRV9ESUZGX1RIUkVTSE9MRCkge1xuICAgICAgICAgIGJvdW5jZShleGNlZWRlZExpbWl0KGZhbHNlKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCAxKTtcbiAgICBlbWl0KEVWRU5UX1NDUk9MTCk7XG4gICAgaW50ZXJ2YWwuc3RhcnQoKTtcbiAgfVxuICBmdW5jdGlvbiBib3VuY2UoYmFja3dhcmRzKSB7XG4gICAgc2Nyb2xsKGdldExpbWl0KCFiYWNrd2FyZHMpLCBCT1VOQ0VfRFVSQVRJT04sIG51bGwsIHRydWUpO1xuICB9XG4gIGZ1bmN0aW9uIG9uU2Nyb2xsZWQoKSB7XG4gICAgY29uc3QgcG9zaXRpb24gPSBnZXRQb3NpdGlvbigpO1xuICAgIGNvbnN0IGluZGV4ID0gTW92ZS50b0luZGV4KHBvc2l0aW9uKTtcbiAgICBpZiAoIWJldHdlZW4oaW5kZXgsIDAsIFNwbGlkZTIubGVuZ3RoIC0gMSkpIHtcbiAgICAgIE1vdmUudHJhbnNsYXRlKE1vdmUuc2hpZnQocG9zaXRpb24sIGluZGV4ID4gMCksIHRydWUpO1xuICAgIH1cbiAgICBzY3JvbGxDYWxsYmFjayAmJiBzY3JvbGxDYWxsYmFjaygpO1xuICAgIGVtaXQoRVZFTlRfU0NST0xMRUQpO1xuICB9XG4gIGZ1bmN0aW9uIGNvbXB1dGVEdXJhdGlvbihkaXN0YW5jZSkge1xuICAgIHJldHVybiBtYXgoZGlzdGFuY2UgLyBCQVNFX1ZFTE9DSVRZLCBNSU5fRFVSQVRJT04pO1xuICB9XG4gIGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgIGlmIChpbnRlcnZhbCkge1xuICAgICAgaW50ZXJ2YWwuY2FuY2VsKCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGNhbmNlbCgpIHtcbiAgICBpZiAoaW50ZXJ2YWwgJiYgIWludGVydmFsLmlzUGF1c2VkKCkpIHtcbiAgICAgIGNsZWFyKCk7XG4gICAgICBvblNjcm9sbGVkKCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGVhc2luZyh0KSB7XG4gICAgY29uc3QgeyBlYXNpbmdGdW5jIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBlYXNpbmdGdW5jID8gZWFzaW5nRnVuYyh0KSA6IDEgLSBNYXRoLnBvdygxIC0gdCwgNCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBkZXN0cm95OiBjbGVhcixcbiAgICBzY3JvbGwsXG4gICAgY2FuY2VsXG4gIH07XG59XG5cbmNvbnN0IEZSSUNUSU9OID0gNTtcbmNvbnN0IExPR19JTlRFUlZBTCA9IDIwMDtcbmNvbnN0IFBPSU5URVJfRE9XTl9FVkVOVFMgPSBcInRvdWNoc3RhcnQgbW91c2Vkb3duXCI7XG5jb25zdCBQT0lOVEVSX01PVkVfRVZFTlRTID0gXCJ0b3VjaG1vdmUgbW91c2Vtb3ZlXCI7XG5jb25zdCBQT0lOVEVSX1VQX0VWRU5UUyA9IFwidG91Y2hlbmQgdG91Y2hjYW5jZWwgbW91c2V1cFwiO1xuXG5mdW5jdGlvbiBEcmFnKFNwbGlkZTIsIENvbXBvbmVudHMyLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgb24sIGVtaXQsIGJpbmQsIHVuYmluZCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGNvbnN0IHsgTW92ZSwgU2Nyb2xsLCBDb250cm9sbGVyIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgeyB0cmFjayB9ID0gQ29tcG9uZW50czIuRWxlbWVudHM7XG4gIGNvbnN0IHsgcmVzb2x2ZSwgb3JpZW50IH0gPSBDb21wb25lbnRzMi5EaXJlY3Rpb247XG4gIGNvbnN0IHsgZ2V0UG9zaXRpb24sIGV4Y2VlZGVkTGltaXQgfSA9IE1vdmU7XG4gIGNvbnN0IGxpc3RlbmVyT3B0aW9ucyA9IHsgcGFzc2l2ZTogZmFsc2UsIGNhcHR1cmU6IHRydWUgfTtcbiAgbGV0IGJhc2VQb3NpdGlvbjtcbiAgbGV0IGJhc2VFdmVudDtcbiAgbGV0IHByZXZCYXNlRXZlbnQ7XG4gIGxldCBsYXN0RXZlbnQ7XG4gIGxldCBpc0ZyZWU7XG4gIGxldCBkcmFnZ2luZztcbiAgbGV0IGhhc0V4Y2VlZGVkID0gZmFsc2U7XG4gIGxldCBjbGlja1ByZXZlbnRlZDtcbiAgbGV0IGRpc2FibGVkO1xuICBsZXQgdGFyZ2V0O1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBiaW5kKHRyYWNrLCBQT0lOVEVSX01PVkVfRVZFTlRTLCBub29wLCBsaXN0ZW5lck9wdGlvbnMpO1xuICAgIGJpbmQodHJhY2ssIFBPSU5URVJfVVBfRVZFTlRTLCBub29wLCBsaXN0ZW5lck9wdGlvbnMpO1xuICAgIGJpbmQodHJhY2ssIFBPSU5URVJfRE9XTl9FVkVOVFMsIG9uUG9pbnRlckRvd24sIGxpc3RlbmVyT3B0aW9ucyk7XG4gICAgYmluZCh0cmFjaywgXCJjbGlja1wiLCBvbkNsaWNrLCB7IGNhcHR1cmU6IHRydWUgfSk7XG4gICAgYmluZCh0cmFjaywgXCJkcmFnc3RhcnRcIiwgcHJldmVudCk7XG4gICAgb24oW0VWRU5UX01PVU5URUQsIEVWRU5UX1VQREFURURdLCBpbml0KTtcbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIGNvbnN0IHsgZHJhZyB9ID0gb3B0aW9ucztcbiAgICBkaXNhYmxlKCFkcmFnKTtcbiAgICBpc0ZyZWUgPSBkcmFnID09PSBcImZyZWVcIjtcbiAgfVxuICBmdW5jdGlvbiBvblBvaW50ZXJEb3duKGUpIHtcbiAgICBpZiAoIWRpc2FibGVkKSB7XG4gICAgICBjb25zdCB7IG5vRHJhZyB9ID0gb3B0aW9ucztcbiAgICAgIGNvbnN0IGlzVG91Y2ggPSBpc1RvdWNoRXZlbnQoZSk7XG4gICAgICBjb25zdCBpc0RyYWdnYWJsZSA9ICFub0RyYWcgfHwgaXNIVE1MRWxlbWVudChlLnRhcmdldCkgJiYgIW1hdGNoZXMoZS50YXJnZXQsIG5vRHJhZyk7XG4gICAgICBpZiAoaXNEcmFnZ2FibGUgJiYgKGlzVG91Y2ggfHwgIWUuYnV0dG9uKSkge1xuICAgICAgICBpZiAoIU1vdmUuaXNCdXN5KCkpIHtcbiAgICAgICAgICB0YXJnZXQgPSBpc1RvdWNoID8gdHJhY2sgOiB3aW5kb3c7XG4gICAgICAgICAgcHJldkJhc2VFdmVudCA9IG51bGw7XG4gICAgICAgICAgbGFzdEV2ZW50ID0gbnVsbDtcbiAgICAgICAgICBjbGlja1ByZXZlbnRlZCA9IGZhbHNlO1xuICAgICAgICAgIGJpbmQodGFyZ2V0LCBQT0lOVEVSX01PVkVfRVZFTlRTLCBvblBvaW50ZXJNb3ZlLCBsaXN0ZW5lck9wdGlvbnMpO1xuICAgICAgICAgIGJpbmQodGFyZ2V0LCBQT0lOVEVSX1VQX0VWRU5UUywgb25Qb2ludGVyVXAsIGxpc3RlbmVyT3B0aW9ucyk7XG4gICAgICAgICAgTW92ZS5jYW5jZWwoKTtcbiAgICAgICAgICBTY3JvbGwuY2FuY2VsKCk7XG4gICAgICAgICAgc2F2ZShlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcmV2ZW50KGUsIHRydWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIG9uUG9pbnRlck1vdmUoZSkge1xuICAgIGlmICghbGFzdEV2ZW50KSB7XG4gICAgICBlbWl0KEVWRU5UX0RSQUcpO1xuICAgIH1cbiAgICBsYXN0RXZlbnQgPSBlO1xuICAgIGlmIChlLmNhbmNlbGFibGUpIHtcbiAgICAgIGNvbnN0IGRpZmYgPSBjb29yZE9mKGUpIC0gY29vcmRPZihiYXNlRXZlbnQpO1xuICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgIE1vdmUudHJhbnNsYXRlKGJhc2VQb3NpdGlvbiArIGNvbnN0cmFpbihkaWZmKSk7XG4gICAgICAgIGNvbnN0IGV4cGlyZWQgPSB0aW1lT2YoZSkgLSB0aW1lT2YoYmFzZUV2ZW50KSA+IExPR19JTlRFUlZBTDtcbiAgICAgICAgY29uc3QgZXhjZWVkZWQgPSBoYXNFeGNlZWRlZCAhPT0gKGhhc0V4Y2VlZGVkID0gZXhjZWVkZWRMaW1pdCgpKTtcbiAgICAgICAgaWYgKGV4cGlyZWQgfHwgZXhjZWVkZWQpIHtcbiAgICAgICAgICBzYXZlKGUpO1xuICAgICAgICB9XG4gICAgICAgIGVtaXQoRVZFTlRfRFJBR0dJTkcpO1xuICAgICAgICBjbGlja1ByZXZlbnRlZCA9IHRydWU7XG4gICAgICAgIHByZXZlbnQoZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgeyBkcmFnTWluVGhyZXNob2xkOiB0aHJlc2hvbGRzIH0gPSBvcHRpb25zO1xuICAgICAgICB0aHJlc2hvbGRzID0gaXNPYmplY3QodGhyZXNob2xkcykgPyB0aHJlc2hvbGRzIDogeyBtb3VzZTogMCwgdG91Y2g6ICt0aHJlc2hvbGRzIHx8IDEwIH07XG4gICAgICAgIGRyYWdnaW5nID0gYWJzKGRpZmYpID4gKGlzVG91Y2hFdmVudChlKSA/IHRocmVzaG9sZHMudG91Y2ggOiB0aHJlc2hvbGRzLm1vdXNlKTtcbiAgICAgICAgaWYgKGlzU2xpZGVyRGlyZWN0aW9uKCkpIHtcbiAgICAgICAgICBwcmV2ZW50KGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIG9uUG9pbnRlclVwKGUpIHtcbiAgICB1bmJpbmQodGFyZ2V0LCBQT0lOVEVSX01PVkVfRVZFTlRTLCBvblBvaW50ZXJNb3ZlKTtcbiAgICB1bmJpbmQodGFyZ2V0LCBQT0lOVEVSX1VQX0VWRU5UUywgb25Qb2ludGVyVXApO1xuICAgIGlmIChsYXN0RXZlbnQpIHtcbiAgICAgIGlmIChkcmFnZ2luZyB8fCBlLmNhbmNlbGFibGUgJiYgaXNTbGlkZXJEaXJlY3Rpb24oKSkge1xuICAgICAgICBjb25zdCB2ZWxvY2l0eSA9IGNvbXB1dGVWZWxvY2l0eShlKTtcbiAgICAgICAgY29uc3QgZGVzdGluYXRpb24gPSBjb21wdXRlRGVzdGluYXRpb24odmVsb2NpdHkpO1xuICAgICAgICBpZiAoaXNGcmVlKSB7XG4gICAgICAgICAgQ29udHJvbGxlci5zY3JvbGwoZGVzdGluYXRpb24pO1xuICAgICAgICB9IGVsc2UgaWYgKFNwbGlkZTIuaXMoRkFERSkpIHtcbiAgICAgICAgICBDb250cm9sbGVyLmdvKFNwbGlkZTIuaW5kZXggKyBvcmllbnQoc2lnbih2ZWxvY2l0eSkpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBDb250cm9sbGVyLmdvKENvbnRyb2xsZXIudG9EZXN0KGRlc3RpbmF0aW9uKSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcHJldmVudChlKTtcbiAgICAgIH1cbiAgICAgIGVtaXQoRVZFTlRfRFJBR0dFRCk7XG4gICAgfVxuICAgIGRyYWdnaW5nID0gZmFsc2U7XG4gIH1cbiAgZnVuY3Rpb24gc2F2ZShlKSB7XG4gICAgcHJldkJhc2VFdmVudCA9IGJhc2VFdmVudDtcbiAgICBiYXNlRXZlbnQgPSBlO1xuICAgIGJhc2VQb3NpdGlvbiA9IGdldFBvc2l0aW9uKCk7XG4gIH1cbiAgZnVuY3Rpb24gb25DbGljayhlKSB7XG4gICAgaWYgKCFkaXNhYmxlZCAmJiBjbGlja1ByZXZlbnRlZCkge1xuICAgICAgcHJldmVudChlLCB0cnVlKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gaXNTbGlkZXJEaXJlY3Rpb24oKSB7XG4gICAgY29uc3QgZGlmZlggPSBhYnMoY29vcmRPZihsYXN0RXZlbnQpIC0gY29vcmRPZihiYXNlRXZlbnQpKTtcbiAgICBjb25zdCBkaWZmWSA9IGFicyhjb29yZE9mKGxhc3RFdmVudCwgdHJ1ZSkgLSBjb29yZE9mKGJhc2VFdmVudCwgdHJ1ZSkpO1xuICAgIHJldHVybiBkaWZmWCA+IGRpZmZZO1xuICB9XG4gIGZ1bmN0aW9uIGNvbXB1dGVWZWxvY2l0eShlKSB7XG4gICAgaWYgKFNwbGlkZTIuaXMoTE9PUCkgfHwgIWhhc0V4Y2VlZGVkKSB7XG4gICAgICBjb25zdCBiYXNlID0gYmFzZUV2ZW50ID09PSBsYXN0RXZlbnQgJiYgcHJldkJhc2VFdmVudCB8fCBiYXNlRXZlbnQ7XG4gICAgICBjb25zdCBkaWZmQ29vcmQgPSBjb29yZE9mKGxhc3RFdmVudCkgLSBjb29yZE9mKGJhc2UpO1xuICAgICAgY29uc3QgZGlmZlRpbWUgPSB0aW1lT2YoZSkgLSB0aW1lT2YoYmFzZSk7XG4gICAgICBjb25zdCBpc0ZsaWNrID0gdGltZU9mKGUpIC0gdGltZU9mKGxhc3RFdmVudCkgPCBMT0dfSU5URVJWQUw7XG4gICAgICBpZiAoZGlmZlRpbWUgJiYgaXNGbGljaykge1xuICAgICAgICByZXR1cm4gZGlmZkNvb3JkIC8gZGlmZlRpbWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG4gIGZ1bmN0aW9uIGNvbXB1dGVEZXN0aW5hdGlvbih2ZWxvY2l0eSkge1xuICAgIHJldHVybiBnZXRQb3NpdGlvbigpICsgc2lnbih2ZWxvY2l0eSkgKiBtaW4oYWJzKHZlbG9jaXR5KSAqIChvcHRpb25zLmZsaWNrUG93ZXIgfHwgNjAwKSwgaXNGcmVlID8gSW5maW5pdHkgOiBDb21wb25lbnRzMi5MYXlvdXQubGlzdFNpemUoKSAqIChvcHRpb25zLmZsaWNrTWF4UGFnZXMgfHwgMSkpO1xuICB9XG4gIGZ1bmN0aW9uIGNvb3JkT2YoZSwgb3J0aG9nb25hbCkge1xuICAgIHJldHVybiAoaXNUb3VjaEV2ZW50KGUpID8gZS50b3VjaGVzWzBdIDogZSlbYHBhZ2Uke3Jlc29sdmUob3J0aG9nb25hbCA/IFwiWVwiIDogXCJYXCIpfWBdO1xuICB9XG4gIGZ1bmN0aW9uIHRpbWVPZihlKSB7XG4gICAgcmV0dXJuIGUudGltZVN0YW1wO1xuICB9XG4gIGZ1bmN0aW9uIGNvbnN0cmFpbihkaWZmKSB7XG4gICAgcmV0dXJuIGRpZmYgLyAoaGFzRXhjZWVkZWQgJiYgU3BsaWRlMi5pcyhTTElERSkgPyBGUklDVElPTiA6IDEpO1xuICB9XG4gIGZ1bmN0aW9uIGlzVG91Y2hFdmVudChlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBUb3VjaEV2ZW50ICE9PSBcInVuZGVmaW5lZFwiICYmIGUgaW5zdGFuY2VvZiBUb3VjaEV2ZW50O1xuICB9XG4gIGZ1bmN0aW9uIGlzRHJhZ2dpbmcoKSB7XG4gICAgcmV0dXJuIGRyYWdnaW5nO1xuICB9XG4gIGZ1bmN0aW9uIGRpc2FibGUodmFsdWUpIHtcbiAgICBkaXNhYmxlZCA9IHZhbHVlO1xuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZGlzYWJsZSxcbiAgICBpc0RyYWdnaW5nXG4gIH07XG59XG5cbmNvbnN0IElFX0FSUk9XX0tFWVMgPSBbXCJMZWZ0XCIsIFwiUmlnaHRcIiwgXCJVcFwiLCBcIkRvd25cIl07XG5mdW5jdGlvbiBLZXlib2FyZChTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uLCBiaW5kLCB1bmJpbmQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBjb25zdCB7IHJvb3QgfSA9IENvbXBvbmVudHMyLkVsZW1lbnRzO1xuICBjb25zdCB7IHJlc29sdmUgfSA9IENvbXBvbmVudHMyLkRpcmVjdGlvbjtcbiAgbGV0IHRhcmdldDtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaW5pdCgpO1xuICAgIG9uKEVWRU5UX1VQREFURUQsICgpID0+IHtcbiAgICAgIGRlc3Ryb3koKTtcbiAgICAgIGluaXQoKTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIGNvbnN0IHsga2V5Ym9hcmQgPSBcImdsb2JhbFwiIH0gPSBvcHRpb25zO1xuICAgIGlmIChrZXlib2FyZCkge1xuICAgICAgaWYgKGtleWJvYXJkID09PSBcImZvY3VzZWRcIikge1xuICAgICAgICB0YXJnZXQgPSByb290O1xuICAgICAgICBzZXRBdHRyaWJ1dGUocm9vdCwgVEFCX0lOREVYLCAwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldCA9IHdpbmRvdztcbiAgICAgIH1cbiAgICAgIGJpbmQodGFyZ2V0LCBcImtleWRvd25cIiwgb25LZXlkb3duKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICB1bmJpbmQodGFyZ2V0LCBcImtleWRvd25cIik7XG4gICAgaWYgKGlzSFRNTEVsZW1lbnQodGFyZ2V0KSkge1xuICAgICAgcmVtb3ZlQXR0cmlidXRlKHRhcmdldCwgVEFCX0lOREVYKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gb25LZXlkb3duKGUpIHtcbiAgICBjb25zdCB7IGtleSB9ID0gZTtcbiAgICBjb25zdCBub3JtYWxpemVkS2V5ID0gaW5jbHVkZXMoSUVfQVJST1dfS0VZUywga2V5KSA/IGBBcnJvdyR7a2V5fWAgOiBrZXk7XG4gICAgaWYgKG5vcm1hbGl6ZWRLZXkgPT09IHJlc29sdmUoXCJBcnJvd0xlZnRcIikpIHtcbiAgICAgIFNwbGlkZTIuZ28oXCI8XCIpO1xuICAgIH0gZWxzZSBpZiAobm9ybWFsaXplZEtleSA9PT0gcmVzb2x2ZShcIkFycm93UmlnaHRcIikpIHtcbiAgICAgIFNwbGlkZTIuZ28oXCI+XCIpO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIG1vdW50LFxuICAgIGRlc3Ryb3lcbiAgfTtcbn1cblxuY29uc3QgU1JDX0RBVEFfQVRUUklCVVRFID0gYCR7REFUQV9BVFRSSUJVVEV9LWxhenlgO1xuY29uc3QgU1JDU0VUX0RBVEFfQVRUUklCVVRFID0gYCR7U1JDX0RBVEFfQVRUUklCVVRFfS1zcmNzZXRgO1xuY29uc3QgSU1BR0VfU0VMRUNUT1IgPSBgWyR7U1JDX0RBVEFfQVRUUklCVVRFfV0sIFske1NSQ1NFVF9EQVRBX0FUVFJJQlVURX1dYDtcblxuZnVuY3Rpb24gTGF6eUxvYWQoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgb2ZmLCBiaW5kLCBlbWl0IH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgaXNTZXF1ZW50aWFsID0gb3B0aW9ucy5sYXp5TG9hZCA9PT0gXCJzZXF1ZW50aWFsXCI7XG4gIGxldCBpbWFnZXMgPSBbXTtcbiAgbGV0IGluZGV4ID0gMDtcbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgaWYgKG9wdGlvbnMubGF6eUxvYWQpIHtcbiAgICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9SRUZSRVNIXSwgKCkgPT4ge1xuICAgICAgICBkZXN0cm95KCk7XG4gICAgICAgIGluaXQoKTtcbiAgICAgIH0pO1xuICAgICAgaWYgKCFpc1NlcXVlbnRpYWwpIHtcbiAgICAgICAgb24oW0VWRU5UX01PVU5URUQsIEVWRU5UX1JFRlJFU0gsIEVWRU5UX01PVkVEXSwgb2JzZXJ2ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgQ29tcG9uZW50czIuU2xpZGVzLmZvckVhY2goKF9TbGlkZSkgPT4ge1xuICAgICAgcXVlcnlBbGwoX1NsaWRlLnNsaWRlLCBJTUFHRV9TRUxFQ1RPUikuZm9yRWFjaCgoX2ltZykgPT4ge1xuICAgICAgICBjb25zdCBzcmMgPSBnZXRBdHRyaWJ1dGUoX2ltZywgU1JDX0RBVEFfQVRUUklCVVRFKTtcbiAgICAgICAgY29uc3Qgc3Jjc2V0ID0gZ2V0QXR0cmlidXRlKF9pbWcsIFNSQ1NFVF9EQVRBX0FUVFJJQlVURSk7XG4gICAgICAgIGlmIChzcmMgIT09IF9pbWcuc3JjIHx8IHNyY3NldCAhPT0gX2ltZy5zcmNzZXQpIHtcbiAgICAgICAgICBjb25zdCBfc3Bpbm5lciA9IGNyZWF0ZShcInNwYW5cIiwgb3B0aW9ucy5jbGFzc2VzLnNwaW5uZXIsIF9pbWcucGFyZW50RWxlbWVudCk7XG4gICAgICAgICAgc2V0QXR0cmlidXRlKF9zcGlubmVyLCBST0xFLCBcInByZXNlbnRhdGlvblwiKTtcbiAgICAgICAgICBpbWFnZXMucHVzaCh7IF9pbWcsIF9TbGlkZSwgc3JjLCBzcmNzZXQsIF9zcGlubmVyIH0pO1xuICAgICAgICAgICFfaW1nLnNyYyAmJiBkaXNwbGF5KF9pbWcsIFwibm9uZVwiKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgaWYgKGlzU2VxdWVudGlhbCkge1xuICAgICAgbG9hZE5leHQoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBpbmRleCA9IDA7XG4gICAgaW1hZ2VzID0gW107XG4gIH1cbiAgZnVuY3Rpb24gb2JzZXJ2ZSgpIHtcbiAgICBpbWFnZXMgPSBpbWFnZXMuZmlsdGVyKChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBkaXN0YW5jZSA9IG9wdGlvbnMucGVyUGFnZSAqICgob3B0aW9ucy5wcmVsb2FkUGFnZXMgfHwgMSkgKyAxKSAtIDE7XG4gICAgICBpZiAoZGF0YS5fU2xpZGUuaXNXaXRoaW4oU3BsaWRlMi5pbmRleCwgZGlzdGFuY2UpKSB7XG4gICAgICAgIHJldHVybiBsb2FkKGRhdGEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG4gICAgaWYgKCFpbWFnZXMubGVuZ3RoKSB7XG4gICAgICBvZmYoRVZFTlRfTU9WRUQpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBsb2FkKGRhdGEpIHtcbiAgICBjb25zdCB7IF9pbWcgfSA9IGRhdGE7XG4gICAgYWRkQ2xhc3MoZGF0YS5fU2xpZGUuc2xpZGUsIENMQVNTX0xPQURJTkcpO1xuICAgIGJpbmQoX2ltZywgXCJsb2FkIGVycm9yXCIsIChlKSA9PiB7XG4gICAgICBvbkxvYWQoZGF0YSwgZS50eXBlID09PSBcImVycm9yXCIpO1xuICAgIH0pO1xuICAgIFtcInNyY1wiLCBcInNyY3NldFwiXS5mb3JFYWNoKChuYW1lKSA9PiB7XG4gICAgICBpZiAoZGF0YVtuYW1lXSkge1xuICAgICAgICBzZXRBdHRyaWJ1dGUoX2ltZywgbmFtZSwgZGF0YVtuYW1lXSk7XG4gICAgICAgIHJlbW92ZUF0dHJpYnV0ZShfaW1nLCBuYW1lID09PSBcInNyY1wiID8gU1JDX0RBVEFfQVRUUklCVVRFIDogU1JDU0VUX0RBVEFfQVRUUklCVVRFKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBvbkxvYWQoZGF0YSwgZXJyb3IpIHtcbiAgICBjb25zdCB7IF9TbGlkZSB9ID0gZGF0YTtcbiAgICByZW1vdmVDbGFzcyhfU2xpZGUuc2xpZGUsIENMQVNTX0xPQURJTkcpO1xuICAgIGlmICghZXJyb3IpIHtcbiAgICAgIHJlbW92ZShkYXRhLl9zcGlubmVyKTtcbiAgICAgIGRpc3BsYXkoZGF0YS5faW1nLCBcIlwiKTtcbiAgICAgIGVtaXQoRVZFTlRfTEFaWUxPQURfTE9BREVELCBkYXRhLl9pbWcsIF9TbGlkZSk7XG4gICAgICBlbWl0KEVWRU5UX1JFU0laRSk7XG4gICAgfVxuICAgIGlmIChpc1NlcXVlbnRpYWwpIHtcbiAgICAgIGxvYWROZXh0KCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGxvYWROZXh0KCkge1xuICAgIGlmIChpbmRleCA8IGltYWdlcy5sZW5ndGgpIHtcbiAgICAgIGxvYWQoaW1hZ2VzW2luZGV4KytdKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBkZXN0cm95XG4gIH07XG59XG5cbmZ1bmN0aW9uIFBhZ2luYXRpb24oU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiwgZW1pdCwgYmluZCwgdW5iaW5kIH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBTbGlkZXMsIEVsZW1lbnRzLCBDb250cm9sbGVyIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgeyBoYXNGb2N1cywgZ2V0SW5kZXggfSA9IENvbnRyb2xsZXI7XG4gIGNvbnN0IGl0ZW1zID0gW107XG4gIGxldCBsaXN0O1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpbml0KCk7XG4gICAgb24oW0VWRU5UX1VQREFURUQsIEVWRU5UX1JFRlJFU0hdLCBpbml0KTtcbiAgICBvbihbRVZFTlRfTU9WRSwgRVZFTlRfU0NST0xMRURdLCB1cGRhdGUpO1xuICB9XG4gIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgZGVzdHJveSgpO1xuICAgIGlmIChvcHRpb25zLnBhZ2luYXRpb24gJiYgU2xpZGVzLmlzRW5vdWdoKCkpIHtcbiAgICAgIGNyZWF0ZVBhZ2luYXRpb24oKTtcbiAgICAgIGVtaXQoRVZFTlRfUEFHSU5BVElPTl9NT1VOVEVELCB7IGxpc3QsIGl0ZW1zIH0sIGdldEF0KFNwbGlkZTIuaW5kZXgpKTtcbiAgICAgIHVwZGF0ZSgpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIGlmIChsaXN0KSB7XG4gICAgICByZW1vdmUobGlzdCk7XG4gICAgICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgIHVuYmluZChpdGVtLmJ1dHRvbiwgXCJjbGlja1wiKTtcbiAgICAgIH0pO1xuICAgICAgZW1wdHkoaXRlbXMpO1xuICAgICAgbGlzdCA9IG51bGw7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGNyZWF0ZVBhZ2luYXRpb24oKSB7XG4gICAgY29uc3QgeyBsZW5ndGggfSA9IFNwbGlkZTI7XG4gICAgY29uc3QgeyBjbGFzc2VzLCBpMThuLCBwZXJQYWdlIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHBhcmVudCA9IG9wdGlvbnMucGFnaW5hdGlvbiA9PT0gXCJzbGlkZXJcIiAmJiBFbGVtZW50cy5zbGlkZXIgfHwgRWxlbWVudHMucm9vdDtcbiAgICBjb25zdCBtYXggPSBoYXNGb2N1cygpID8gbGVuZ3RoIDogY2VpbChsZW5ndGggLyBwZXJQYWdlKTtcbiAgICBsaXN0ID0gY3JlYXRlKFwidWxcIiwgY2xhc3Nlcy5wYWdpbmF0aW9uLCBwYXJlbnQpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWF4OyBpKyspIHtcbiAgICAgIGNvbnN0IGxpID0gY3JlYXRlKFwibGlcIiwgbnVsbCwgbGlzdCk7XG4gICAgICBjb25zdCBidXR0b24gPSBjcmVhdGUoXCJidXR0b25cIiwgeyBjbGFzczogY2xhc3Nlcy5wYWdlLCB0eXBlOiBcImJ1dHRvblwiIH0sIGxpKTtcbiAgICAgIGNvbnN0IGNvbnRyb2xzID0gU2xpZGVzLmdldEluKGkpLm1hcCgoU2xpZGUpID0+IFNsaWRlLnNsaWRlLmlkKTtcbiAgICAgIGNvbnN0IHRleHQgPSAhaGFzRm9jdXMoKSAmJiBwZXJQYWdlID4gMSA/IGkxOG4ucGFnZVggOiBpMThuLnNsaWRlWDtcbiAgICAgIGJpbmQoYnV0dG9uLCBcImNsaWNrXCIsIG9uQ2xpY2suYmluZChudWxsLCBpKSk7XG4gICAgICBzZXRBdHRyaWJ1dGUoYnV0dG9uLCBBUklBX0NPTlRST0xTLCBjb250cm9scy5qb2luKFwiIFwiKSk7XG4gICAgICBzZXRBdHRyaWJ1dGUoYnV0dG9uLCBBUklBX0xBQkVMLCBmb3JtYXQodGV4dCwgaSArIDEpKTtcbiAgICAgIGl0ZW1zLnB1c2goeyBsaSwgYnV0dG9uLCBwYWdlOiBpIH0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBvbkNsaWNrKHBhZ2UpIHtcbiAgICBDb250cm9sbGVyLmdvKGA+JHtwYWdlfWAsIHRydWUsICgpID0+IHtcbiAgICAgIGNvbnN0IFNsaWRlID0gU2xpZGVzLmdldEF0KENvbnRyb2xsZXIudG9JbmRleChwYWdlKSk7XG4gICAgICBTbGlkZSAmJiBmb2N1cyhTbGlkZS5zbGlkZSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0QXQoaW5kZXgpIHtcbiAgICByZXR1cm4gaXRlbXNbQ29udHJvbGxlci50b1BhZ2UoaW5kZXgpXTtcbiAgfVxuICBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgY29uc3QgcHJldiA9IGdldEF0KGdldEluZGV4KHRydWUpKTtcbiAgICBjb25zdCBjdXJyID0gZ2V0QXQoZ2V0SW5kZXgoKSk7XG4gICAgaWYgKHByZXYpIHtcbiAgICAgIHJlbW92ZUNsYXNzKHByZXYuYnV0dG9uLCBDTEFTU19BQ1RJVkUpO1xuICAgICAgcmVtb3ZlQXR0cmlidXRlKHByZXYuYnV0dG9uLCBBUklBX0NVUlJFTlQpO1xuICAgIH1cbiAgICBpZiAoY3Vycikge1xuICAgICAgYWRkQ2xhc3MoY3Vyci5idXR0b24sIENMQVNTX0FDVElWRSk7XG4gICAgICBzZXRBdHRyaWJ1dGUoY3Vyci5idXR0b24sIEFSSUFfQ1VSUkVOVCwgdHJ1ZSk7XG4gICAgfVxuICAgIGVtaXQoRVZFTlRfUEFHSU5BVElPTl9VUERBVEVELCB7IGxpc3QsIGl0ZW1zIH0sIHByZXYsIGN1cnIpO1xuICB9XG4gIHJldHVybiB7XG4gICAgaXRlbXMsXG4gICAgbW91bnQsXG4gICAgZGVzdHJveSxcbiAgICBnZXRBdFxuICB9O1xufVxuXG5jb25zdCBUUklHR0VSX0tFWVMgPSBbXCIgXCIsIFwiRW50ZXJcIiwgXCJTcGFjZWJhclwiXTtcbmZ1bmN0aW9uIFN5bmMoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBzcGxpZGVzIH0gPSBTcGxpZGUyO1xuICBjb25zdCB7IGxpc3QgfSA9IENvbXBvbmVudHMyLkVsZW1lbnRzO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpZiAob3B0aW9ucy5pc05hdmlnYXRpb24pIHtcbiAgICAgIG5hdmlnYXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN5bmMoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICByZW1vdmVBdHRyaWJ1dGUobGlzdCwgQUxMX0FUVFJJQlVURVMpO1xuICB9XG4gIGZ1bmN0aW9uIHN5bmMoKSB7XG4gICAgY29uc3QgcHJvY2Vzc2VkID0gW107XG4gICAgc3BsaWRlcy5jb25jYXQoU3BsaWRlMikuZm9yRWFjaCgoc3BsaWRlLCBpbmRleCwgaW5zdGFuY2VzKSA9PiB7XG4gICAgICBFdmVudEludGVyZmFjZShzcGxpZGUpLm9uKEVWRU5UX01PVkUsIChpbmRleDIsIHByZXYsIGRlc3QpID0+IHtcbiAgICAgICAgaW5zdGFuY2VzLmZvckVhY2goKGluc3RhbmNlKSA9PiB7XG4gICAgICAgICAgaWYgKGluc3RhbmNlICE9PSBzcGxpZGUgJiYgIWluY2x1ZGVzKHByb2Nlc3NlZCwgc3BsaWRlKSkge1xuICAgICAgICAgICAgcHJvY2Vzc2VkLnB1c2goaW5zdGFuY2UpO1xuICAgICAgICAgICAgaW5zdGFuY2UuZ28oaW5zdGFuY2UuaXMoTE9PUCkgPyBkZXN0IDogaW5kZXgyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBlbXB0eShwcm9jZXNzZWQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gbmF2aWdhdGUoKSB7XG4gICAgY29uc3QgeyBvbiwgZW1pdCB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gICAgb24oRVZFTlRfQ0xJQ0ssIG9uQ2xpY2spO1xuICAgIG9uKEVWRU5UX1NMSURFX0tFWURPV04sIG9uS2V5ZG93bik7XG4gICAgb24oW0VWRU5UX01PVU5URUQsIEVWRU5UX1VQREFURURdLCB1cGRhdGUpO1xuICAgIHNldEF0dHJpYnV0ZShsaXN0LCBST0xFLCBcIm1lbnVcIik7XG4gICAgZW1pdChFVkVOVF9OQVZJR0FUSU9OX01PVU5URUQsIFNwbGlkZTIuc3BsaWRlcyk7XG4gIH1cbiAgZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgIHNldEF0dHJpYnV0ZShsaXN0LCBBUklBX09SSUVOVEFUSU9OLCBvcHRpb25zLmRpcmVjdGlvbiAhPT0gVFRCID8gXCJob3Jpem9udGFsXCIgOiBudWxsKTtcbiAgfVxuICBmdW5jdGlvbiBvbkNsaWNrKFNsaWRlKSB7XG4gICAgU3BsaWRlMi5nbyhTbGlkZS5pbmRleCk7XG4gIH1cbiAgZnVuY3Rpb24gb25LZXlkb3duKFNsaWRlLCBlKSB7XG4gICAgaWYgKGluY2x1ZGVzKFRSSUdHRVJfS0VZUywgZS5rZXkpKSB7XG4gICAgICBvbkNsaWNrKFNsaWRlKTtcbiAgICAgIHByZXZlbnQoZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnQsXG4gICAgZGVzdHJveVxuICB9O1xufVxuXG5mdW5jdGlvbiBXaGVlbChTcGxpZGUyLCBDb21wb25lbnRzMiwgb3B0aW9ucykge1xuICBjb25zdCB7IGJpbmQgfSA9IEV2ZW50SW50ZXJmYWNlKFNwbGlkZTIpO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBpZiAob3B0aW9ucy53aGVlbCkge1xuICAgICAgYmluZChDb21wb25lbnRzMi5FbGVtZW50cy50cmFjaywgXCJ3aGVlbFwiLCBvbldoZWVsLCB7IHBhc3NpdmU6IGZhbHNlLCBjYXB0dXJlOiB0cnVlIH0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBvbldoZWVsKGUpIHtcbiAgICBjb25zdCB7IGRlbHRhWSB9ID0gZTtcbiAgICBpZiAoZGVsdGFZKSB7XG4gICAgICBTcGxpZGUyLmdvKGRlbHRhWSA8IDAgPyBcIjxcIiA6IFwiPlwiKTtcbiAgICAgIHByZXZlbnQoZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgbW91bnRcbiAgfTtcbn1cblxudmFyIENvbXBvbmVudENvbnN0cnVjdG9ycyA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBPcHRpb25zOiBPcHRpb25zLFxuICBEaXJlY3Rpb246IERpcmVjdGlvbixcbiAgRWxlbWVudHM6IEVsZW1lbnRzLFxuICBTbGlkZXM6IFNsaWRlcyxcbiAgTGF5b3V0OiBMYXlvdXQsXG4gIENsb25lczogQ2xvbmVzLFxuICBNb3ZlOiBNb3ZlLFxuICBDb250cm9sbGVyOiBDb250cm9sbGVyLFxuICBBcnJvd3M6IEFycm93cyxcbiAgQXV0b3BsYXk6IEF1dG9wbGF5LFxuICBDb3ZlcjogQ292ZXIsXG4gIFNjcm9sbDogU2Nyb2xsLFxuICBEcmFnOiBEcmFnLFxuICBLZXlib2FyZDogS2V5Ym9hcmQsXG4gIExhenlMb2FkOiBMYXp5TG9hZCxcbiAgUGFnaW5hdGlvbjogUGFnaW5hdGlvbixcbiAgU3luYzogU3luYyxcbiAgV2hlZWw6IFdoZWVsXG59KTtcblxuY29uc3QgSTE4TiA9IHtcbiAgcHJldjogXCJQcmV2aW91cyBzbGlkZVwiLFxuICBuZXh0OiBcIk5leHQgc2xpZGVcIixcbiAgZmlyc3Q6IFwiR28gdG8gZmlyc3Qgc2xpZGVcIixcbiAgbGFzdDogXCJHbyB0byBsYXN0IHNsaWRlXCIsXG4gIHNsaWRlWDogXCJHbyB0byBzbGlkZSAlc1wiLFxuICBwYWdlWDogXCJHbyB0byBwYWdlICVzXCIsXG4gIHBsYXk6IFwiU3RhcnQgYXV0b3BsYXlcIixcbiAgcGF1c2U6IFwiUGF1c2UgYXV0b3BsYXlcIlxufTtcblxuY29uc3QgREVGQVVMVFMgPSB7XG4gIHR5cGU6IFwic2xpZGVcIixcbiAgc3BlZWQ6IDQwMCxcbiAgd2FpdEZvclRyYW5zaXRpb246IHRydWUsXG4gIHBlclBhZ2U6IDEsXG4gIGFycm93czogdHJ1ZSxcbiAgcGFnaW5hdGlvbjogdHJ1ZSxcbiAgaW50ZXJ2YWw6IDVlMyxcbiAgcGF1c2VPbkhvdmVyOiB0cnVlLFxuICBwYXVzZU9uRm9jdXM6IHRydWUsXG4gIHJlc2V0UHJvZ3Jlc3M6IHRydWUsXG4gIGVhc2luZzogXCJjdWJpYy1iZXppZXIoMC4yNSwgMSwgMC41LCAxKVwiLFxuICBkcmFnOiB0cnVlLFxuICBkaXJlY3Rpb246IFwibHRyXCIsXG4gIHNsaWRlRm9jdXM6IHRydWUsXG4gIHRyaW1TcGFjZTogdHJ1ZSxcbiAgZm9jdXNhYmxlTm9kZXM6IFwiYSwgYnV0dG9uLCB0ZXh0YXJlYSwgaW5wdXQsIHNlbGVjdCwgaWZyYW1lXCIsXG4gIGNsYXNzZXM6IENMQVNTRVMsXG4gIGkxOG46IEkxOE5cbn07XG5cbmZ1bmN0aW9uIEZhZGUoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBvbiB9ID0gRXZlbnRJbnRlcmZhY2UoU3BsaWRlMik7XG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIG9uKFtFVkVOVF9NT1VOVEVELCBFVkVOVF9SRUZSRVNIXSwgKCkgPT4ge1xuICAgICAgbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICBDb21wb25lbnRzMi5TbGlkZXMuc3R5bGUoXCJ0cmFuc2l0aW9uXCIsIGBvcGFjaXR5ICR7b3B0aW9ucy5zcGVlZH1tcyAke29wdGlvbnMuZWFzaW5nfWApO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gc3RhcnQoaW5kZXgsIGRvbmUpIHtcbiAgICBjb25zdCB7IHRyYWNrIH0gPSBDb21wb25lbnRzMi5FbGVtZW50cztcbiAgICBzdHlsZSh0cmFjaywgXCJoZWlnaHRcIiwgdW5pdChyZWN0KHRyYWNrKS5oZWlnaHQpKTtcbiAgICBuZXh0VGljaygoKSA9PiB7XG4gICAgICBkb25lKCk7XG4gICAgICBzdHlsZSh0cmFjaywgXCJoZWlnaHRcIiwgXCJcIik7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBzdGFydCxcbiAgICBjYW5jZWw6IG5vb3BcbiAgfTtcbn1cblxuZnVuY3Rpb24gU2xpZGUoU3BsaWRlMiwgQ29tcG9uZW50czIsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBiaW5kIH0gPSBFdmVudEludGVyZmFjZShTcGxpZGUyKTtcbiAgY29uc3QgeyBNb3ZlLCBDb250cm9sbGVyIH0gPSBDb21wb25lbnRzMjtcbiAgY29uc3QgeyBsaXN0IH0gPSBDb21wb25lbnRzMi5FbGVtZW50cztcbiAgbGV0IGVuZENhbGxiYWNrO1xuICBmdW5jdGlvbiBtb3VudCgpIHtcbiAgICBiaW5kKGxpc3QsIFwidHJhbnNpdGlvbmVuZFwiLCAoZSkgPT4ge1xuICAgICAgaWYgKGUudGFyZ2V0ID09PSBsaXN0ICYmIGVuZENhbGxiYWNrKSB7XG4gICAgICAgIGNhbmNlbCgpO1xuICAgICAgICBlbmRDYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHN0YXJ0KGluZGV4LCBkb25lKSB7XG4gICAgY29uc3QgZGVzdGluYXRpb24gPSBNb3ZlLnRvUG9zaXRpb24oaW5kZXgsIHRydWUpO1xuICAgIGNvbnN0IHBvc2l0aW9uID0gTW92ZS5nZXRQb3NpdGlvbigpO1xuICAgIGNvbnN0IHNwZWVkID0gZ2V0U3BlZWQoaW5kZXgpO1xuICAgIGlmIChhYnMoZGVzdGluYXRpb24gLSBwb3NpdGlvbikgPj0gMSAmJiBzcGVlZCA+PSAxKSB7XG4gICAgICBhcHBseShgdHJhbnNmb3JtICR7c3BlZWR9bXMgJHtvcHRpb25zLmVhc2luZ31gKTtcbiAgICAgIE1vdmUudHJhbnNsYXRlKGRlc3RpbmF0aW9uLCB0cnVlKTtcbiAgICAgIGVuZENhbGxiYWNrID0gZG9uZTtcbiAgICB9IGVsc2Uge1xuICAgICAgTW92ZS5qdW1wKGluZGV4KTtcbiAgICAgIGRvbmUoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIGFwcGx5KFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGdldFNwZWVkKGluZGV4KSB7XG4gICAgY29uc3QgeyByZXdpbmRTcGVlZCB9ID0gb3B0aW9ucztcbiAgICBpZiAoU3BsaWRlMi5pcyhTTElERSkgJiYgcmV3aW5kU3BlZWQpIHtcbiAgICAgIGNvbnN0IHByZXYgPSBDb250cm9sbGVyLmdldEluZGV4KHRydWUpO1xuICAgICAgY29uc3QgZW5kID0gQ29udHJvbGxlci5nZXRFbmQoKTtcbiAgICAgIGlmIChwcmV2ID09PSAwICYmIGluZGV4ID49IGVuZCB8fCBwcmV2ID49IGVuZCAmJiBpbmRleCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gcmV3aW5kU3BlZWQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zLnNwZWVkO1xuICB9XG4gIGZ1bmN0aW9uIGFwcGx5KHRyYW5zaXRpb24pIHtcbiAgICBzdHlsZShsaXN0LCBcInRyYW5zaXRpb25cIiwgdHJhbnNpdGlvbik7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtb3VudCxcbiAgICBzdGFydCxcbiAgICBjYW5jZWxcbiAgfTtcbn1cblxuY29uc3QgX1NwbGlkZSA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IodGFyZ2V0LCBvcHRpb25zKSB7XG4gICAgdGhpcy5ldmVudCA9IEV2ZW50QnVzKCk7XG4gICAgdGhpcy5Db21wb25lbnRzID0ge307XG4gICAgdGhpcy5zdGF0ZSA9IFN0YXRlKENSRUFURUQpO1xuICAgIHRoaXMuc3BsaWRlcyA9IFtdO1xuICAgIHRoaXMuX29wdGlvbnMgPSB7fTtcbiAgICB0aGlzLl9FeHRlbnNpb25zID0ge307XG4gICAgY29uc3Qgcm9vdCA9IGlzU3RyaW5nKHRhcmdldCkgPyBxdWVyeShkb2N1bWVudCwgdGFyZ2V0KSA6IHRhcmdldDtcbiAgICBhc3NlcnQocm9vdCwgYCR7cm9vdH0gaXMgaW52YWxpZC5gKTtcbiAgICB0aGlzLnJvb3QgPSByb290O1xuICAgIG1lcmdlKERFRkFVTFRTLCBfU3BsaWRlLmRlZmF1bHRzKTtcbiAgICBtZXJnZShtZXJnZSh0aGlzLl9vcHRpb25zLCBERUZBVUxUUyksIG9wdGlvbnMgfHwge30pO1xuICB9XG4gIG1vdW50KEV4dGVuc2lvbnMsIFRyYW5zaXRpb24pIHtcbiAgICBjb25zdCB7IHN0YXRlLCBDb21wb25lbnRzOiBDb21wb25lbnRzMiB9ID0gdGhpcztcbiAgICBhc3NlcnQoc3RhdGUuaXMoW0NSRUFURUQsIERFU1RST1lFRF0pLCBcIkFscmVhZHkgbW91bnRlZCFcIik7XG4gICAgc3RhdGUuc2V0KENSRUFURUQpO1xuICAgIHRoaXMuX0NvbXBvbmVudHMgPSBDb21wb25lbnRzMjtcbiAgICB0aGlzLl9UcmFuc2l0aW9uID0gVHJhbnNpdGlvbiB8fCB0aGlzLl9UcmFuc2l0aW9uIHx8ICh0aGlzLmlzKEZBREUpID8gRmFkZSA6IFNsaWRlKTtcbiAgICB0aGlzLl9FeHRlbnNpb25zID0gRXh0ZW5zaW9ucyB8fCB0aGlzLl9FeHRlbnNpb25zO1xuICAgIGNvbnN0IENvbnN0cnVjdG9ycyA9IGFzc2lnbih7fSwgQ29tcG9uZW50Q29uc3RydWN0b3JzLCB0aGlzLl9FeHRlbnNpb25zLCB7IFRyYW5zaXRpb246IHRoaXMuX1RyYW5zaXRpb24gfSk7XG4gICAgZm9yT3duKENvbnN0cnVjdG9ycywgKENvbXBvbmVudCwga2V5KSA9PiB7XG4gICAgICBjb25zdCBjb21wb25lbnQgPSBDb21wb25lbnQodGhpcywgQ29tcG9uZW50czIsIHRoaXMuX29wdGlvbnMpO1xuICAgICAgQ29tcG9uZW50czJba2V5XSA9IGNvbXBvbmVudDtcbiAgICAgIGNvbXBvbmVudC5zZXR1cCAmJiBjb21wb25lbnQuc2V0dXAoKTtcbiAgICB9KTtcbiAgICBmb3JPd24oQ29tcG9uZW50czIsIChjb21wb25lbnQpID0+IHtcbiAgICAgIGNvbXBvbmVudC5tb3VudCAmJiBjb21wb25lbnQubW91bnQoKTtcbiAgICB9KTtcbiAgICB0aGlzLmVtaXQoRVZFTlRfTU9VTlRFRCk7XG4gICAgYWRkQ2xhc3ModGhpcy5yb290LCBDTEFTU19JTklUSUFMSVpFRCk7XG4gICAgc3RhdGUuc2V0KElETEUpO1xuICAgIHRoaXMuZW1pdChFVkVOVF9SRUFEWSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgc3luYyhzcGxpZGUpIHtcbiAgICB0aGlzLnNwbGlkZXMucHVzaChzcGxpZGUpO1xuICAgIHNwbGlkZS5zcGxpZGVzLnB1c2godGhpcyk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgZ28oY29udHJvbCkge1xuICAgIHRoaXMuX0NvbXBvbmVudHMuQ29udHJvbGxlci5nbyhjb250cm9sKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBvbihldmVudHMsIGNhbGxiYWNrKSB7XG4gICAgdGhpcy5ldmVudC5vbihldmVudHMsIGNhbGxiYWNrLCBudWxsLCBERUZBVUxUX1VTRVJfRVZFTlRfUFJJT1JJVFkpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIG9mZihldmVudHMpIHtcbiAgICB0aGlzLmV2ZW50Lm9mZihldmVudHMpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGVtaXQoZXZlbnQpIHtcbiAgICB0aGlzLmV2ZW50LmVtaXQoZXZlbnQsIC4uLnNsaWNlKGFyZ3VtZW50cywgMSkpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGFkZChzbGlkZXMsIGluZGV4KSB7XG4gICAgdGhpcy5fQ29tcG9uZW50cy5TbGlkZXMuYWRkKHNsaWRlcywgaW5kZXgpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIHJlbW92ZShtYXRjaGVyKSB7XG4gICAgdGhpcy5fQ29tcG9uZW50cy5TbGlkZXMucmVtb3ZlKG1hdGNoZXIpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGlzKHR5cGUpIHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9ucy50eXBlID09PSB0eXBlO1xuICB9XG4gIHJlZnJlc2goKSB7XG4gICAgdGhpcy5lbWl0KEVWRU5UX1JFRlJFU0gpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGRlc3Ryb3koY29tcGxldGVseSA9IHRydWUpIHtcbiAgICBjb25zdCB7IGV2ZW50LCBzdGF0ZSB9ID0gdGhpcztcbiAgICBpZiAoc3RhdGUuaXMoQ1JFQVRFRCkpIHtcbiAgICAgIGV2ZW50Lm9uKEVWRU5UX1JFQURZLCB0aGlzLmRlc3Ryb3kuYmluZCh0aGlzLCBjb21wbGV0ZWx5KSwgdGhpcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvck93bih0aGlzLl9Db21wb25lbnRzLCAoY29tcG9uZW50KSA9PiB7XG4gICAgICAgIGNvbXBvbmVudC5kZXN0cm95ICYmIGNvbXBvbmVudC5kZXN0cm95KGNvbXBsZXRlbHkpO1xuICAgICAgfSwgdHJ1ZSk7XG4gICAgICBldmVudC5lbWl0KEVWRU5UX0RFU1RST1kpO1xuICAgICAgZXZlbnQuZGVzdHJveSgpO1xuICAgICAgY29tcGxldGVseSAmJiBlbXB0eSh0aGlzLnNwbGlkZXMpO1xuICAgICAgc3RhdGUuc2V0KERFU1RST1lFRCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGdldCBvcHRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLl9vcHRpb25zO1xuICB9XG4gIHNldCBvcHRpb25zKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IF9vcHRpb25zIH0gPSB0aGlzO1xuICAgIG1lcmdlKF9vcHRpb25zLCBvcHRpb25zKTtcbiAgICBpZiAoIXRoaXMuc3RhdGUuaXMoQ1JFQVRFRCkpIHtcbiAgICAgIHRoaXMuZW1pdChFVkVOVF9VUERBVEVELCBfb3B0aW9ucyk7XG4gICAgfVxuICB9XG4gIGdldCBsZW5ndGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX0NvbXBvbmVudHMuU2xpZGVzLmdldExlbmd0aCh0cnVlKTtcbiAgfVxuICBnZXQgaW5kZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX0NvbXBvbmVudHMuQ29udHJvbGxlci5nZXRJbmRleCgpO1xuICB9XG59O1xubGV0IFNwbGlkZSA9IF9TcGxpZGU7XG5TcGxpZGUuZGVmYXVsdHMgPSB7fTtcblNwbGlkZS5TVEFURVMgPSBTVEFURVM7XG5cbmNvbnN0IENMQVNTX1JFTkRFUkVEID0gXCJpcy1yZW5kZXJlZFwiO1xuXG5jb25zdCBSRU5ERVJFUl9ERUZBVUxUX0NPTkZJRyA9IHtcbiAgbGlzdFRhZzogXCJ1bFwiLFxuICBzbGlkZVRhZzogXCJsaVwiXG59O1xuXG5jbGFzcyBTdHlsZSB7XG4gIGNvbnN0cnVjdG9yKGlkLCBvcHRpb25zKSB7XG4gICAgdGhpcy5zdHlsZXMgPSB7fTtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuICBydWxlKHNlbGVjdG9yLCBwcm9wLCB2YWx1ZSwgYnJlYWtwb2ludCkge1xuICAgIGJyZWFrcG9pbnQgPSBicmVha3BvaW50IHx8IFwiZGVmYXVsdFwiO1xuICAgIGNvbnN0IHNlbGVjdG9ycyA9IHRoaXMuc3R5bGVzW2JyZWFrcG9pbnRdID0gdGhpcy5zdHlsZXNbYnJlYWtwb2ludF0gfHwge307XG4gICAgY29uc3Qgc3R5bGVzID0gc2VsZWN0b3JzW3NlbGVjdG9yXSA9IHNlbGVjdG9yc1tzZWxlY3Rvcl0gfHwge307XG4gICAgc3R5bGVzW3Byb3BdID0gdmFsdWU7XG4gIH1cbiAgYnVpbGQoKSB7XG4gICAgbGV0IGNzcyA9IFwiXCI7XG4gICAgaWYgKHRoaXMuc3R5bGVzLmRlZmF1bHQpIHtcbiAgICAgIGNzcyArPSB0aGlzLmJ1aWxkU2VsZWN0b3JzKHRoaXMuc3R5bGVzLmRlZmF1bHQpO1xuICAgIH1cbiAgICBPYmplY3Qua2V5cyh0aGlzLnN0eWxlcykuc29ydCgobiwgbSkgPT4gdGhpcy5vcHRpb25zLm1lZGlhUXVlcnkgPT09IFwibWluXCIgPyArbiAtICttIDogK20gLSArbikuZm9yRWFjaCgoYnJlYWtwb2ludCkgPT4ge1xuICAgICAgaWYgKGJyZWFrcG9pbnQgIT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgIGNzcyArPSBgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHticmVha3BvaW50fXB4KSB7YDtcbiAgICAgICAgY3NzICs9IHRoaXMuYnVpbGRTZWxlY3RvcnModGhpcy5zdHlsZXNbYnJlYWtwb2ludF0pO1xuICAgICAgICBjc3MgKz0gYH1gO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBjc3M7XG4gIH1cbiAgYnVpbGRTZWxlY3RvcnMoc2VsZWN0b3JzKSB7XG4gICAgbGV0IGNzcyA9IFwiXCI7XG4gICAgZm9yT3duKHNlbGVjdG9ycywgKHN0eWxlcywgc2VsZWN0b3IpID0+IHtcbiAgICAgIGNzcyArPSBgIyR7dGhpcy5pZH0gJHtzZWxlY3Rvcn0ge2A7XG4gICAgICBmb3JPd24oc3R5bGVzLCAodmFsdWUsIHByb3ApID0+IHtcbiAgICAgICAgaWYgKHZhbHVlIHx8IHZhbHVlID09PSAwKSB7XG4gICAgICAgICAgY3NzICs9IGAke3Byb3B9OiAke3ZhbHVlfTtgO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGNzcyArPSBcIn1cIjtcbiAgICB9KTtcbiAgICByZXR1cm4gY3NzO1xuICB9XG59XG5cbmNsYXNzIFNwbGlkZVJlbmRlcmVyIHtcbiAgY29uc3RydWN0b3IoY29udGVudHMsIG9wdGlvbnMsIGNvbmZpZywgZGVmYXVsdHMpIHtcbiAgICB0aGlzLnNsaWRlcyA9IFtdO1xuICAgIHRoaXMub3B0aW9ucyA9IHt9O1xuICAgIHRoaXMuYnJlYWtwb2ludHMgPSBbXTtcbiAgICBtZXJnZShERUZBVUxUUywgZGVmYXVsdHMgfHwge30pO1xuICAgIG1lcmdlKG1lcmdlKHRoaXMub3B0aW9ucywgREVGQVVMVFMpLCBvcHRpb25zIHx8IHt9KTtcbiAgICB0aGlzLmNvbnRlbnRzID0gY29udGVudHM7XG4gICAgdGhpcy5jb25maWcgPSBhc3NpZ24oe30sIFJFTkRFUkVSX0RFRkFVTFRfQ09ORklHLCBjb25maWcgfHwge30pO1xuICAgIHRoaXMuaWQgPSB0aGlzLmNvbmZpZy5pZCB8fCB1bmlxdWVJZChcInNwbGlkZVwiKTtcbiAgICB0aGlzLlN0eWxlID0gbmV3IFN0eWxlKHRoaXMuaWQsIHRoaXMub3B0aW9ucyk7XG4gICAgdGhpcy5EaXJlY3Rpb24gPSBEaXJlY3Rpb24obnVsbCwgbnVsbCwgdGhpcy5vcHRpb25zKTtcbiAgICBhc3NlcnQodGhpcy5jb250ZW50cy5sZW5ndGgsIFwiUHJvdmlkZSBhdCBsZWFzdCAxIGNvbnRlbnQuXCIpO1xuICAgIHRoaXMuaW5pdCgpO1xuICB9XG4gIHN0YXRpYyBjbGVhbihzcGxpZGUpIHtcbiAgICBjb25zdCB7IG9uIH0gPSBFdmVudEludGVyZmFjZShzcGxpZGUpO1xuICAgIGNvbnN0IHsgcm9vdCB9ID0gc3BsaWRlO1xuICAgIGNvbnN0IGNsb25lcyA9IHF1ZXJ5QWxsKHJvb3QsIGAuJHtDTEFTU19DTE9ORX1gKTtcbiAgICBvbihFVkVOVF9NT1VOVEVELCAoKSA9PiB7XG4gICAgICByZW1vdmUoY2hpbGQocm9vdCwgXCJzdHlsZVwiKSk7XG4gICAgfSk7XG4gICAgcmVtb3ZlKGNsb25lcyk7XG4gIH1cbiAgaW5pdCgpIHtcbiAgICB0aGlzLnBhcnNlQnJlYWtwb2ludHMoKTtcbiAgICB0aGlzLmluaXRTbGlkZXMoKTtcbiAgICB0aGlzLnJlZ2lzdGVyUm9vdFN0eWxlcygpO1xuICAgIHRoaXMucmVnaXN0ZXJUcmFja1N0eWxlcygpO1xuICAgIHRoaXMucmVnaXN0ZXJTbGlkZVN0eWxlcygpO1xuICAgIHRoaXMucmVnaXN0ZXJMaXN0U3R5bGVzKCk7XG4gIH1cbiAgaW5pdFNsaWRlcygpIHtcbiAgICBwdXNoKHRoaXMuc2xpZGVzLCB0aGlzLmNvbnRlbnRzLm1hcCgoY29udGVudCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnRlbnQgPSBpc1N0cmluZyhjb250ZW50KSA/IHsgaHRtbDogY29udGVudCB9IDogY29udGVudDtcbiAgICAgIGNvbnRlbnQuc3R5bGVzID0gY29udGVudC5zdHlsZXMgfHwge307XG4gICAgICBjb250ZW50LmF0dHJzID0gY29udGVudC5hdHRycyB8fCB7fTtcbiAgICAgIHRoaXMuY292ZXIoY29udGVudCk7XG4gICAgICBjb25zdCBjbGFzc2VzID0gYCR7dGhpcy5vcHRpb25zLmNsYXNzZXMuc2xpZGV9ICR7aW5kZXggPT09IDAgPyBDTEFTU19BQ1RJVkUgOiBcIlwifWA7XG4gICAgICBhc3NpZ24oY29udGVudC5hdHRycywge1xuICAgICAgICBjbGFzczogYCR7Y2xhc3Nlc30gJHtjb250ZW50LmF0dHJzLmNsYXNzIHx8IFwiXCJ9YC50cmltKCksXG4gICAgICAgIHN0eWxlOiB0aGlzLmJ1aWxkU3R5bGVzKGNvbnRlbnQuc3R5bGVzKVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KSk7XG4gICAgaWYgKHRoaXMuaXNMb29wKCkpIHtcbiAgICAgIHRoaXMuZ2VuZXJhdGVDbG9uZXModGhpcy5zbGlkZXMpO1xuICAgIH1cbiAgfVxuICByZWdpc3RlclJvb3RTdHlsZXMoKSB7XG4gICAgdGhpcy5icmVha3BvaW50cy5mb3JFYWNoKChbd2lkdGgsIG9wdGlvbnNdKSA9PiB7XG4gICAgICB0aGlzLlN0eWxlLnJ1bGUoXCIgXCIsIFwibWF4LXdpZHRoXCIsIHVuaXQob3B0aW9ucy53aWR0aCksIHdpZHRoKTtcbiAgICB9KTtcbiAgfVxuICByZWdpc3RlclRyYWNrU3R5bGVzKCkge1xuICAgIGNvbnN0IHsgU3R5bGU6IFN0eWxlMiB9ID0gdGhpcztcbiAgICBjb25zdCBzZWxlY3RvciA9IGAuJHtDTEFTU19UUkFDS31gO1xuICAgIHRoaXMuYnJlYWtwb2ludHMuZm9yRWFjaCgoW3dpZHRoLCBvcHRpb25zXSkgPT4ge1xuICAgICAgU3R5bGUyLnJ1bGUoc2VsZWN0b3IsIHRoaXMucmVzb2x2ZShcInBhZGRpbmdMZWZ0XCIpLCB0aGlzLmNzc1BhZGRpbmcob3B0aW9ucywgZmFsc2UpLCB3aWR0aCk7XG4gICAgICBTdHlsZTIucnVsZShzZWxlY3RvciwgdGhpcy5yZXNvbHZlKFwicGFkZGluZ1JpZ2h0XCIpLCB0aGlzLmNzc1BhZGRpbmcob3B0aW9ucywgdHJ1ZSksIHdpZHRoKTtcbiAgICAgIFN0eWxlMi5ydWxlKHNlbGVjdG9yLCBcImhlaWdodFwiLCB0aGlzLmNzc1RyYWNrSGVpZ2h0KG9wdGlvbnMpLCB3aWR0aCk7XG4gICAgfSk7XG4gIH1cbiAgcmVnaXN0ZXJMaXN0U3R5bGVzKCkge1xuICAgIGNvbnN0IHsgU3R5bGU6IFN0eWxlMiB9ID0gdGhpcztcbiAgICBjb25zdCBzZWxlY3RvciA9IGAuJHtDTEFTU19MSVNUfWA7XG4gICAgdGhpcy5icmVha3BvaW50cy5mb3JFYWNoKChbd2lkdGgsIG9wdGlvbnNdKSA9PiB7XG4gICAgICBTdHlsZTIucnVsZShzZWxlY3RvciwgXCJ0cmFuc2Zvcm1cIiwgdGhpcy5idWlsZFRyYW5zbGF0ZShvcHRpb25zKSwgd2lkdGgpO1xuICAgIH0pO1xuICB9XG4gIHJlZ2lzdGVyU2xpZGVTdHlsZXMoKSB7XG4gICAgY29uc3QgeyBTdHlsZTogU3R5bGUyIH0gPSB0aGlzO1xuICAgIGNvbnN0IHNlbGVjdG9yID0gYC4ke0NMQVNTX1NMSURFfWA7XG4gICAgdGhpcy5icmVha3BvaW50cy5mb3JFYWNoKChbd2lkdGgsIG9wdGlvbnNdKSA9PiB7XG4gICAgICBTdHlsZTIucnVsZShzZWxlY3RvciwgXCJ3aWR0aFwiLCB0aGlzLmNzc1NsaWRlV2lkdGgob3B0aW9ucyksIHdpZHRoKTtcbiAgICAgIFN0eWxlMi5ydWxlKHNlbGVjdG9yLCB0aGlzLnJlc29sdmUoXCJtYXJnaW5SaWdodFwiKSwgdW5pdChvcHRpb25zLmdhcCkgfHwgXCIwcHhcIiwgd2lkdGgpO1xuICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5jc3NTbGlkZUhlaWdodChvcHRpb25zKTtcbiAgICAgIGlmIChoZWlnaHQpIHtcbiAgICAgICAgU3R5bGUyLnJ1bGUoc2VsZWN0b3IsIFwiaGVpZ2h0XCIsIGhlaWdodCwgd2lkdGgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgU3R5bGUyLnJ1bGUoc2VsZWN0b3IsIFwicGFkZGluZy10b3BcIiwgdGhpcy5jc3NTbGlkZVBhZGRpbmcob3B0aW9ucyksIHdpZHRoKTtcbiAgICAgIH1cbiAgICAgIFN0eWxlMi5ydWxlKGAke3NlbGVjdG9yfSA+IGltZ2AsIFwiZGlzcGxheVwiLCBvcHRpb25zLmNvdmVyID8gXCJub25lXCIgOiBcImlubGluZVwiLCB3aWR0aCk7XG4gICAgfSk7XG4gIH1cbiAgYnVpbGRUcmFuc2xhdGUob3B0aW9ucykge1xuICAgIGNvbnN0IHsgcmVzb2x2ZSwgb3JpZW50IH0gPSB0aGlzLkRpcmVjdGlvbjtcbiAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICB2YWx1ZXMucHVzaCh0aGlzLmNzc09mZnNldENsb25lcyhvcHRpb25zKSk7XG4gICAgdmFsdWVzLnB1c2godGhpcy5jc3NPZmZzZXRHYXBzKG9wdGlvbnMpKTtcbiAgICBpZiAodGhpcy5pc0NlbnRlcihvcHRpb25zKSkge1xuICAgICAgdmFsdWVzLnB1c2godGhpcy5idWlsZENzc1ZhbHVlKG9yaWVudCgtNTApLCBcIiVcIikpO1xuICAgICAgdmFsdWVzLnB1c2goLi4udGhpcy5jc3NPZmZzZXRDZW50ZXIob3B0aW9ucykpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWVzLmZpbHRlcihCb29sZWFuKS5tYXAoKHZhbHVlKSA9PiBgdHJhbnNsYXRlJHtyZXNvbHZlKFwiWFwiKX0oJHt2YWx1ZX0pYCkuam9pbihcIiBcIik7XG4gIH1cbiAgY3NzT2Zmc2V0Q2xvbmVzKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHJlc29sdmUsIG9yaWVudCB9ID0gdGhpcy5EaXJlY3Rpb247XG4gICAgY29uc3QgY2xvbmVDb3VudCA9IHRoaXMuZ2V0Q2xvbmVDb3VudCgpO1xuICAgIGlmICh0aGlzLmlzRml4ZWRXaWR0aChvcHRpb25zKSkge1xuICAgICAgY29uc3QgeyB2YWx1ZSwgdW5pdDogdW5pdDIgfSA9IHRoaXMucGFyc2VDc3NWYWx1ZShvcHRpb25zW3Jlc29sdmUoXCJmaXhlZFdpZHRoXCIpXSk7XG4gICAgICByZXR1cm4gdGhpcy5idWlsZENzc1ZhbHVlKG9yaWVudCh2YWx1ZSkgKiBjbG9uZUNvdW50LCB1bml0Mik7XG4gICAgfVxuICAgIGNvbnN0IHBlcmNlbnQgPSAxMDAgKiBjbG9uZUNvdW50IC8gb3B0aW9ucy5wZXJQYWdlO1xuICAgIHJldHVybiBgJHtvcmllbnQocGVyY2VudCl9JWA7XG4gIH1cbiAgY3NzT2Zmc2V0Q2VudGVyKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHJlc29sdmUsIG9yaWVudCB9ID0gdGhpcy5EaXJlY3Rpb247XG4gICAgaWYgKHRoaXMuaXNGaXhlZFdpZHRoKG9wdGlvbnMpKSB7XG4gICAgICBjb25zdCB7IHZhbHVlLCB1bml0OiB1bml0MiB9ID0gdGhpcy5wYXJzZUNzc1ZhbHVlKG9wdGlvbnNbcmVzb2x2ZShcImZpeGVkV2lkdGhcIildKTtcbiAgICAgIHJldHVybiBbdGhpcy5idWlsZENzc1ZhbHVlKG9yaWVudCh2YWx1ZSAvIDIpLCB1bml0MildO1xuICAgIH1cbiAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICBjb25zdCB7IHBlclBhZ2UsIGdhcCB9ID0gb3B0aW9ucztcbiAgICB2YWx1ZXMucHVzaChgJHtvcmllbnQoNTAgLyBwZXJQYWdlKX0lYCk7XG4gICAgaWYgKGdhcCkge1xuICAgICAgY29uc3QgeyB2YWx1ZSwgdW5pdDogdW5pdDIgfSA9IHRoaXMucGFyc2VDc3NWYWx1ZShnYXApO1xuICAgICAgY29uc3QgZ2FwT2Zmc2V0ID0gKHZhbHVlIC8gcGVyUGFnZSAtIHZhbHVlKSAvIDI7XG4gICAgICB2YWx1ZXMucHVzaCh0aGlzLmJ1aWxkQ3NzVmFsdWUob3JpZW50KGdhcE9mZnNldCksIHVuaXQyKSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZXM7XG4gIH1cbiAgY3NzT2Zmc2V0R2FwcyhvcHRpb25zKSB7XG4gICAgY29uc3QgY2xvbmVDb3VudCA9IHRoaXMuZ2V0Q2xvbmVDb3VudCgpO1xuICAgIGlmIChjbG9uZUNvdW50ICYmIG9wdGlvbnMuZ2FwKSB7XG4gICAgICBjb25zdCB7IG9yaWVudCB9ID0gdGhpcy5EaXJlY3Rpb247XG4gICAgICBjb25zdCB7IHZhbHVlLCB1bml0OiB1bml0MiB9ID0gdGhpcy5wYXJzZUNzc1ZhbHVlKG9wdGlvbnMuZ2FwKTtcbiAgICAgIGlmICh0aGlzLmlzRml4ZWRXaWR0aChvcHRpb25zKSkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWlsZENzc1ZhbHVlKG9yaWVudCh2YWx1ZSAqIGNsb25lQ291bnQpLCB1bml0Mik7XG4gICAgICB9XG4gICAgICBjb25zdCB7IHBlclBhZ2UgfSA9IG9wdGlvbnM7XG4gICAgICBjb25zdCBnYXBzID0gY2xvbmVDb3VudCAvIHBlclBhZ2U7XG4gICAgICByZXR1cm4gdGhpcy5idWlsZENzc1ZhbHVlKG9yaWVudChnYXBzICogdmFsdWUpLCB1bml0Mik7XG4gICAgfVxuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIHJlc29sdmUocHJvcCkge1xuICAgIHJldHVybiBjYW1lbFRvS2ViYWIodGhpcy5EaXJlY3Rpb24ucmVzb2x2ZShwcm9wKSk7XG4gIH1cbiAgY3NzUGFkZGluZyhvcHRpb25zLCByaWdodCkge1xuICAgIGNvbnN0IHsgcGFkZGluZyB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBwcm9wID0gdGhpcy5EaXJlY3Rpb24ucmVzb2x2ZShyaWdodCA/IFwicmlnaHRcIiA6IFwibGVmdFwiLCB0cnVlKTtcbiAgICByZXR1cm4gcGFkZGluZyAmJiB1bml0KHBhZGRpbmdbcHJvcF0gfHwgKGlzT2JqZWN0KHBhZGRpbmcpID8gMCA6IHBhZGRpbmcpKSB8fCBcIjBweFwiO1xuICB9XG4gIGNzc1RyYWNrSGVpZ2h0KG9wdGlvbnMpIHtcbiAgICBsZXQgaGVpZ2h0ID0gXCJcIjtcbiAgICBpZiAodGhpcy5pc1ZlcnRpY2FsKCkpIHtcbiAgICAgIGhlaWdodCA9IHRoaXMuY3NzSGVpZ2h0KG9wdGlvbnMpO1xuICAgICAgYXNzZXJ0KGhlaWdodCwgJ1wiaGVpZ2h0XCIgaXMgbWlzc2luZy4nKTtcbiAgICAgIGhlaWdodCA9IGBjYWxjKCR7aGVpZ2h0fSAtICR7dGhpcy5jc3NQYWRkaW5nKG9wdGlvbnMsIGZhbHNlKX0gLSAke3RoaXMuY3NzUGFkZGluZyhvcHRpb25zLCB0cnVlKX0pYDtcbiAgICB9XG4gICAgcmV0dXJuIGhlaWdodDtcbiAgfVxuICBjc3NIZWlnaHQob3B0aW9ucykge1xuICAgIHJldHVybiB1bml0KG9wdGlvbnMuaGVpZ2h0KTtcbiAgfVxuICBjc3NTbGlkZVdpZHRoKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gb3B0aW9ucy5hdXRvV2lkdGggPyBcIlwiIDogdW5pdChvcHRpb25zLmZpeGVkV2lkdGgpIHx8ICh0aGlzLmlzVmVydGljYWwoKSA/IFwiXCIgOiB0aGlzLmNzc1NsaWRlU2l6ZShvcHRpb25zKSk7XG4gIH1cbiAgY3NzU2xpZGVIZWlnaHQob3B0aW9ucykge1xuICAgIHJldHVybiB1bml0KG9wdGlvbnMuZml4ZWRIZWlnaHQpIHx8ICh0aGlzLmlzVmVydGljYWwoKSA/IG9wdGlvbnMuYXV0b0hlaWdodCA/IFwiXCIgOiB0aGlzLmNzc1NsaWRlU2l6ZShvcHRpb25zKSA6IHRoaXMuY3NzSGVpZ2h0KG9wdGlvbnMpKTtcbiAgfVxuICBjc3NTbGlkZVNpemUob3B0aW9ucykge1xuICAgIGNvbnN0IGdhcCA9IHVuaXQob3B0aW9ucy5nYXApO1xuICAgIHJldHVybiBgY2FsYygoMTAwJSR7Z2FwICYmIGAgKyAke2dhcH1gfSkvJHtvcHRpb25zLnBlclBhZ2UgfHwgMX0ke2dhcCAmJiBgIC0gJHtnYXB9YH0pYDtcbiAgfVxuICBjc3NTbGlkZVBhZGRpbmcob3B0aW9ucykge1xuICAgIGNvbnN0IHsgaGVpZ2h0UmF0aW8gfSA9IG9wdGlvbnM7XG4gICAgcmV0dXJuIGhlaWdodFJhdGlvID8gYCR7aGVpZ2h0UmF0aW8gKiAxMDB9JWAgOiBcIlwiO1xuICB9XG4gIGJ1aWxkQ3NzVmFsdWUodmFsdWUsIHVuaXQyKSB7XG4gICAgcmV0dXJuIGAke3ZhbHVlfSR7dW5pdDJ9YDtcbiAgfVxuICBwYXJzZUNzc1ZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKGlzU3RyaW5nKHZhbHVlKSkge1xuICAgICAgY29uc3QgbnVtYmVyID0gcGFyc2VGbG9hdCh2YWx1ZSkgfHwgMDtcbiAgICAgIGNvbnN0IHVuaXQyID0gdmFsdWUucmVwbGFjZSgvXFxkKihcXC5cXGQqKT8vLCBcIlwiKSB8fCBcInB4XCI7XG4gICAgICByZXR1cm4geyB2YWx1ZTogbnVtYmVyLCB1bml0OiB1bml0MiB9O1xuICAgIH1cbiAgICByZXR1cm4geyB2YWx1ZSwgdW5pdDogXCJweFwiIH07XG4gIH1cbiAgcGFyc2VCcmVha3BvaW50cygpIHtcbiAgICBjb25zdCB7IGJyZWFrcG9pbnRzIH0gPSB0aGlzLm9wdGlvbnM7XG4gICAgdGhpcy5icmVha3BvaW50cy5wdXNoKFtcImRlZmF1bHRcIiwgdGhpcy5vcHRpb25zXSk7XG4gICAgaWYgKGJyZWFrcG9pbnRzKSB7XG4gICAgICBmb3JPd24oYnJlYWtwb2ludHMsIChvcHRpb25zLCB3aWR0aCkgPT4ge1xuICAgICAgICB0aGlzLmJyZWFrcG9pbnRzLnB1c2goW3dpZHRoLCBtZXJnZShtZXJnZSh7fSwgdGhpcy5vcHRpb25zKSwgb3B0aW9ucyldKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBpc0ZpeGVkV2lkdGgob3B0aW9ucykge1xuICAgIHJldHVybiAhIW9wdGlvbnNbdGhpcy5EaXJlY3Rpb24ucmVzb2x2ZShcImZpeGVkV2lkdGhcIildO1xuICB9XG4gIGlzTG9vcCgpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLnR5cGUgPT09IExPT1A7XG4gIH1cbiAgaXNDZW50ZXIob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLmZvY3VzID09PSBcImNlbnRlclwiKSB7XG4gICAgICBpZiAodGhpcy5pc0xvb3AoKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMudHlwZSA9PT0gU0xJREUpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLm9wdGlvbnMudHJpbVNwYWNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaXNWZXJ0aWNhbCgpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLmRpcmVjdGlvbiA9PT0gVFRCO1xuICB9XG4gIGJ1aWxkQ2xhc3NlcygpIHtcbiAgICBjb25zdCB7IG9wdGlvbnMgfSA9IHRoaXM7XG4gICAgcmV0dXJuIFtcbiAgICAgIENMQVNTX1JPT1QsXG4gICAgICBgJHtDTEFTU19ST09UfS0tJHtvcHRpb25zLnR5cGV9YCxcbiAgICAgIGAke0NMQVNTX1JPT1R9LS0ke29wdGlvbnMuZGlyZWN0aW9ufWAsXG4gICAgICBvcHRpb25zLmRyYWcgJiYgYCR7Q0xBU1NfUk9PVH0tLWRyYWdnYWJsZWAsXG4gICAgICBvcHRpb25zLmlzTmF2aWdhdGlvbiAmJiBgJHtDTEFTU19ST09UfS0tbmF2YCxcbiAgICAgIENMQVNTX0FDVElWRSxcbiAgICAgICF0aGlzLmNvbmZpZy5oaWRkZW4gJiYgQ0xBU1NfUkVOREVSRURcbiAgICBdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTtcbiAgfVxuICBidWlsZEF0dHJzKGF0dHJzKSB7XG4gICAgbGV0IGF0dHIgPSBcIlwiO1xuICAgIGZvck93bihhdHRycywgKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgIGF0dHIgKz0gdmFsdWUgPyBgICR7Y2FtZWxUb0tlYmFiKGtleSl9PVwiJHt2YWx1ZX1cImAgOiBcIlwiO1xuICAgIH0pO1xuICAgIHJldHVybiBhdHRyLnRyaW0oKTtcbiAgfVxuICBidWlsZFN0eWxlcyhzdHlsZXMpIHtcbiAgICBsZXQgc3R5bGUgPSBcIlwiO1xuICAgIGZvck93bihzdHlsZXMsICh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICBzdHlsZSArPSBgICR7Y2FtZWxUb0tlYmFiKGtleSl9OiR7dmFsdWV9O2A7XG4gICAgfSk7XG4gICAgcmV0dXJuIHN0eWxlLnRyaW0oKTtcbiAgfVxuICByZW5kZXJTbGlkZXMoKSB7XG4gICAgY29uc3QgeyBzbGlkZVRhZzogdGFnIH0gPSB0aGlzLmNvbmZpZztcbiAgICByZXR1cm4gdGhpcy5zbGlkZXMubWFwKChjb250ZW50KSA9PiB7XG4gICAgICByZXR1cm4gYDwke3RhZ30gJHt0aGlzLmJ1aWxkQXR0cnMoY29udGVudC5hdHRycyl9PiR7Y29udGVudC5odG1sIHx8IFwiXCJ9PC8ke3RhZ30+YDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9XG4gIGNvdmVyKGNvbnRlbnQpIHtcbiAgICBjb25zdCB7IHN0eWxlcywgaHRtbCA9IFwiXCIgfSA9IGNvbnRlbnQ7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5jb3ZlciAmJiAhdGhpcy5vcHRpb25zLmxhenlMb2FkKSB7XG4gICAgICBjb25zdCBzcmMgPSBodG1sLm1hdGNoKC88aW1nLio/c3JjXFxzKj1cXHMqKFsnXCJdKSguKz8pXFwxLio/Pi8pO1xuICAgICAgaWYgKHNyYyAmJiBzcmNbMl0pIHtcbiAgICAgICAgc3R5bGVzLmJhY2tncm91bmQgPSBgY2VudGVyL2NvdmVyIG5vLXJlcGVhdCB1cmwoJyR7c3JjWzJdfScpYDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZ2VuZXJhdGVDbG9uZXMoY29udGVudHMpIHtcbiAgICBjb25zdCB7IGNsYXNzZXMgfSA9IHRoaXMub3B0aW9ucztcbiAgICBjb25zdCBjb3VudCA9IHRoaXMuZ2V0Q2xvbmVDb3VudCgpO1xuICAgIGNvbnN0IHNsaWRlcyA9IGNvbnRlbnRzLnNsaWNlKCk7XG4gICAgd2hpbGUgKHNsaWRlcy5sZW5ndGggPCBjb3VudCkge1xuICAgICAgcHVzaChzbGlkZXMsIHNsaWRlcyk7XG4gICAgfVxuICAgIHB1c2goc2xpZGVzLnNsaWNlKC1jb3VudCkucmV2ZXJzZSgpLCBzbGlkZXMuc2xpY2UoMCwgY291bnQpKS5mb3JFYWNoKChjb250ZW50LCBpbmRleCkgPT4ge1xuICAgICAgY29uc3QgYXR0cnMgPSBhc3NpZ24oe30sIGNvbnRlbnQuYXR0cnMsIHsgY2xhc3M6IGAke2NvbnRlbnQuYXR0cnMuY2xhc3N9ICR7Y2xhc3Nlcy5jbG9uZX1gIH0pO1xuICAgICAgY29uc3QgY2xvbmUgPSBhc3NpZ24oe30sIGNvbnRlbnQsIHsgYXR0cnMgfSk7XG4gICAgICBpbmRleCA8IGNvdW50ID8gY29udGVudHMudW5zaGlmdChjbG9uZSkgOiBjb250ZW50cy5wdXNoKGNsb25lKTtcbiAgICB9KTtcbiAgfVxuICBnZXRDbG9uZUNvdW50KCkge1xuICAgIGlmICh0aGlzLmlzTG9vcCgpKSB7XG4gICAgICBjb25zdCB7IG9wdGlvbnMgfSA9IHRoaXM7XG4gICAgICBpZiAob3B0aW9ucy5jbG9uZXMpIHtcbiAgICAgICAgcmV0dXJuIG9wdGlvbnMuY2xvbmVzO1xuICAgICAgfVxuICAgICAgY29uc3QgcGVyUGFnZSA9IG1heCguLi50aGlzLmJyZWFrcG9pbnRzLm1hcCgoWywgb3B0aW9uczJdKSA9PiBvcHRpb25zMi5wZXJQYWdlKSk7XG4gICAgICByZXR1cm4gcGVyUGFnZSAqICgob3B0aW9ucy5mbGlja01heFBhZ2VzIHx8IDEpICsgMSk7XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG4gIHJlbmRlckFycm93cygpIHtcbiAgICBsZXQgaHRtbCA9IFwiXCI7XG4gICAgaHRtbCArPSBgPGRpdiBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLmNsYXNzZXMuYXJyb3dzfVwiPmA7XG4gICAgaHRtbCArPSB0aGlzLnJlbmRlckFycm93KHRydWUpO1xuICAgIGh0bWwgKz0gdGhpcy5yZW5kZXJBcnJvdyhmYWxzZSk7XG4gICAgaHRtbCArPSBgPC9kaXY+YDtcbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuICByZW5kZXJBcnJvdyhwcmV2KSB7XG4gICAgY29uc3QgeyBjbGFzc2VzLCBpMThuIH0gPSB0aGlzLm9wdGlvbnM7XG4gICAgY29uc3QgYXR0cnMgPSB7XG4gICAgICBjbGFzczogYCR7Y2xhc3Nlcy5hcnJvd30gJHtwcmV2ID8gY2xhc3Nlcy5wcmV2IDogY2xhc3Nlcy5uZXh0fWAsXG4gICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgYXJpYUxhYmVsOiBwcmV2ID8gaTE4bi5wcmV2IDogaTE4bi5uZXh0XG4gICAgfTtcbiAgICByZXR1cm4gYDxidXR0b24gJHt0aGlzLmJ1aWxkQXR0cnMoYXR0cnMpfT48c3ZnIHhtbG5zPVwiJHtYTUxfTkFNRV9TUEFDRX1cIiB2aWV3Qm94PVwiMCAwICR7U0laRX0gJHtTSVpFfVwiIHdpZHRoPVwiJHtTSVpFfVwiIGhlaWdodD1cIiR7U0laRX1cIj48cGF0aCBkPVwiJHt0aGlzLm9wdGlvbnMuYXJyb3dQYXRoIHx8IFBBVEh9XCIgLz48L3N2Zz48L2J1dHRvbj5gO1xuICB9XG4gIGh0bWwoKSB7XG4gICAgY29uc3QgeyByb290Q2xhc3MsIGxpc3RUYWcsIGFycm93cywgYmVmb3JlVHJhY2ssIGFmdGVyVHJhY2ssIHNsaWRlciwgYmVmb3JlU2xpZGVyLCBhZnRlclNsaWRlciB9ID0gdGhpcy5jb25maWc7XG4gICAgbGV0IGh0bWwgPSBcIlwiO1xuICAgIGh0bWwgKz0gYDxkaXYgaWQ9XCIke3RoaXMuaWR9XCIgY2xhc3M9XCIke3RoaXMuYnVpbGRDbGFzc2VzKCl9ICR7cm9vdENsYXNzIHx8IFwiXCJ9XCI+YDtcbiAgICBodG1sICs9IGA8c3R5bGU+JHt0aGlzLlN0eWxlLmJ1aWxkKCl9PC9zdHlsZT5gO1xuICAgIGlmIChzbGlkZXIpIHtcbiAgICAgIGh0bWwgKz0gYmVmb3JlU2xpZGVyIHx8IFwiXCI7XG4gICAgICBodG1sICs9IGA8ZGl2IGNsYXNzPVwic3BsaWRlX19zbGlkZXJcIj5gO1xuICAgIH1cbiAgICBodG1sICs9IGJlZm9yZVRyYWNrIHx8IFwiXCI7XG4gICAgaWYgKGFycm93cykge1xuICAgICAgaHRtbCArPSB0aGlzLnJlbmRlckFycm93cygpO1xuICAgIH1cbiAgICBodG1sICs9IGA8ZGl2IGNsYXNzPVwic3BsaWRlX190cmFja1wiPmA7XG4gICAgaHRtbCArPSBgPCR7bGlzdFRhZ30gY2xhc3M9XCJzcGxpZGVfX2xpc3RcIj5gO1xuICAgIGh0bWwgKz0gdGhpcy5yZW5kZXJTbGlkZXMoKTtcbiAgICBodG1sICs9IGA8LyR7bGlzdFRhZ30+YDtcbiAgICBodG1sICs9IGA8L2Rpdj5gO1xuICAgIGh0bWwgKz0gYWZ0ZXJUcmFjayB8fCBcIlwiO1xuICAgIGlmIChzbGlkZXIpIHtcbiAgICAgIGh0bWwgKz0gYDwvZGl2PmA7XG4gICAgICBodG1sICs9IGFmdGVyU2xpZGVyIHx8IFwiXCI7XG4gICAgfVxuICAgIGh0bWwgKz0gYDwvZGl2PmA7XG4gICAgcmV0dXJuIGh0bWw7XG4gIH1cbn1cblxuZXhwb3J0IHsgQ0xBU1NFUywgQ0xBU1NfQUNUSVZFLCBDTEFTU19BUlJPVywgQ0xBU1NfQVJST1dTLCBDTEFTU19BUlJPV19ORVhULCBDTEFTU19BUlJPV19QUkVWLCBDTEFTU19BVVRPUExBWSwgQ0xBU1NfQ0xPTkUsIENMQVNTX0NPTlRBSU5FUiwgQ0xBU1NfSU5JVElBTElaRUQsIENMQVNTX0xJU1QsIENMQVNTX0xPQURJTkcsIENMQVNTX05FWFQsIENMQVNTX1BBR0lOQVRJT04sIENMQVNTX1BBR0lOQVRJT05fUEFHRSwgQ0xBU1NfUEFVU0UsIENMQVNTX1BMQVksIENMQVNTX1BSRVYsIENMQVNTX1BST0dSRVNTLCBDTEFTU19QUk9HUkVTU19CQVIsIENMQVNTX1JPT1QsIENMQVNTX1NMSURFLCBDTEFTU19TTElERVIsIENMQVNTX1NQSU5ORVIsIENMQVNTX1RSQUNLLCBDTEFTU19WSVNJQkxFLCBFVkVOVF9BQ1RJVkUsIEVWRU5UX0FSUk9XU19NT1VOVEVELCBFVkVOVF9BUlJPV1NfVVBEQVRFRCwgRVZFTlRfQVVUT1BMQVlfUEFVU0UsIEVWRU5UX0FVVE9QTEFZX1BMQVksIEVWRU5UX0FVVE9QTEFZX1BMQVlJTkcsIEVWRU5UX0NMSUNLLCBFVkVOVF9ERVNUUk9ZLCBFVkVOVF9EUkFHLCBFVkVOVF9EUkFHR0VELCBFVkVOVF9EUkFHR0lORywgRVZFTlRfSElEREVOLCBFVkVOVF9JTkFDVElWRSwgRVZFTlRfTEFaWUxPQURfTE9BREVELCBFVkVOVF9NT1VOVEVELCBFVkVOVF9NT1ZFLCBFVkVOVF9NT1ZFRCwgRVZFTlRfTkFWSUdBVElPTl9NT1VOVEVELCBFVkVOVF9QQUdJTkFUSU9OX01PVU5URUQsIEVWRU5UX1BBR0lOQVRJT05fVVBEQVRFRCwgRVZFTlRfUkVBRFksIEVWRU5UX1JFRlJFU0gsIEVWRU5UX1JFUE9TSVRJT05FRCwgRVZFTlRfUkVTSVpFLCBFVkVOVF9SRVNJWkVELCBFVkVOVF9TQ1JPTEwsIEVWRU5UX1NDUk9MTEVELCBFVkVOVF9TTElERV9LRVlET1dOLCBFVkVOVF9VUERBVEVELCBFVkVOVF9WSVNJQkxFLCBFdmVudEJ1cywgRXZlbnRJbnRlcmZhY2UsIFJlcXVlc3RJbnRlcnZhbCwgU1RBVFVTX0NMQVNTRVMsIFNwbGlkZSwgU3BsaWRlUmVuZGVyZXIsIFN0YXRlLCBUaHJvdHRsZSwgU3BsaWRlIGFzIGRlZmF1bHQgfTtcbiIsImltcG9ydCBTcGxpZGUgZnJvbSAnQHNwbGlkZWpzL3NwbGlkZSc7XHJcblxyXG5cclxuaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXJvdXNlbCcpKSB7XHJcbiAgbmV3IFNwbGlkZSggJyNjYXJvdXNlbCcsIHtcclxuICAgIHBhZ2luYXRpb246IGZhbHNlLFxyXG4gICAgdHlwZTogJ3NsaWRlJyxcclxuICAgIHBlclBhZ2U6IDQsXHJcbiAgICBwZXJNb3ZlOiAxLFxyXG4gICAgZ2FwOiAzMixcclxuICAgIGJyZWFrcG9pbnRzOiB7XHJcbiAgICAgIDUwMDoge1xyXG4gICAgICAgIHBlclBhZ2U6IDEsXHJcbiAgICAgICAgZ2FwOiAxMCxcclxuICAgICAgfSxcclxuICAgICAgNzY3OiB7XHJcbiAgICAgICAgcGVyUGFnZTogMixcclxuICAgICAgICBnYXA6IDEwLFxyXG4gICAgICB9LFxyXG4gICAgICAxMDI0OiB7XHJcbiAgICAgICAgcGVyUGFnZTogMixcclxuICAgICAgICBnYXA6IDE2LFxyXG4gICAgICB9LFxyXG4gICAgICAxNDAwOiB7XHJcbiAgICAgICAgcGVyUGFnZTogMyxcclxuICAgICAgICBnYXA6IDMyLFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gIH0gKS5tb3VudCgpO1xyXG59XHJcblxyXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rlc3RpbW9uaWFscycpKSB7XHJcbiAgbmV3IFNwbGlkZSggJyN0ZXN0aW1vbmlhbHMnLCB7XHJcbiAgICBwYWdpbmF0aW9uOiBmYWxzZSxcclxuICAgIHR5cGU6ICdzbGlkZScsXHJcbiAgICBwZXJQYWdlOiAzLFxyXG4gICAgcGVyTW92ZTogMSxcclxuICAgIGdhcDogMjgsXHJcbiAgICBicmVha3BvaW50czoge1xyXG4gICAgICA1MDA6IHtcclxuICAgICAgICBwZXJQYWdlOiAxLFxyXG4gICAgICAgIGdhcDogMTAsXHJcbiAgICAgIH0sXHJcbiAgICAgIDc2Nzoge1xyXG4gICAgICAgIHBlclBhZ2U6IDIsXHJcbiAgICAgICAgZ2FwOiAxMCxcclxuICAgICAgfSxcclxuICAgICAgMTAyNDoge1xyXG4gICAgICAgIHBlclBhZ2U6IDIsXHJcbiAgICAgICAgZ2FwOiAxNixcclxuICAgICAgfSxcclxuICAgICAgMTQwMDoge1xyXG4gICAgICAgIHBlclBhZ2U6IDMsXHJcbiAgICAgICAgZ2FwOiAzMixcclxuICAgICAgfSxcclxuICAgIH1cclxuICB9ICkubW91bnQoKTtcclxufVxyXG4iLCIvKipcclxuICogVG9nZ2xlIE5hdlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiAtIHRvZ2dsZSBjbGFzcyBvbiBib2R5XHJcbiAqL1xyXG5cclxuY29uc3QgRUxFTUVOVFMgPSAnLnRvZ2dsZW5hdl9fYnV0dG9uJ1xyXG5jb25zdCBUT0dHTEVfQ0xBU1MgPSAnbmF2LWlzLW9wZW4nXHJcblxyXG5jbGFzcyBUb2dnbGVOYXYge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5lbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoRUxFTUVOVFMpXHJcblxyXG4gICAgaWYgKCF0aGlzLmVsZW1lbnRzKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaCgoZWwpID0+IHtcclxuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnRvZ2dsZU5hdiwgZmFsc2UpXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgdG9nZ2xlTmF2KGUpIHtcclxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnRvZ2dsZShUT0dHTEVfQ0xBU1MpXHJcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoJ2xvY2snKVxyXG5cclxuICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4gIH1cclxufVxyXG5cclxubmV3IFRvZ2dsZU5hdigpXHJcbiIsIi8qIVxyXG5cdEJ5IEFuZHLDqSBSaW5hcywgd3d3LmFuZHJlcmluYXMuZGVcclxuXHREb2N1bWVudGF0aW9uLCB3d3cuc2ltcGxlbGlnaHRib3guZGVcclxuXHRBdmFpbGFibGUgZm9yIHVzZSB1bmRlciB0aGUgTUlUIExpY2Vuc2VcclxuXHRWZXJzaW9uIDIuMTAuMVxyXG4qL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5mdW5jdGlvbiBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihvLCBhbGxvd0FycmF5TGlrZSkgeyB2YXIgaXQgPSB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXSB8fCBvW1wiQEBpdGVyYXRvclwiXTsgaWYgKCFpdCkgeyBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobykpIHx8IGFsbG93QXJyYXlMaWtlICYmIG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSB7IGlmIChpdCkgbyA9IGl0OyB2YXIgaSA9IDA7IHZhciBGID0gZnVuY3Rpb24gRigpIHt9OyByZXR1cm4geyBzOiBGLCBuOiBmdW5jdGlvbiBuKCkgeyBpZiAoaSA+PSBvLmxlbmd0aCkgcmV0dXJuIHsgZG9uZTogdHJ1ZSB9OyByZXR1cm4geyBkb25lOiBmYWxzZSwgdmFsdWU6IG9baSsrXSB9OyB9LCBlOiBmdW5jdGlvbiBlKF9lKSB7IHRocm93IF9lOyB9LCBmOiBGIH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9IHZhciBub3JtYWxDb21wbGV0aW9uID0gdHJ1ZSwgZGlkRXJyID0gZmFsc2UsIGVycjsgcmV0dXJuIHsgczogZnVuY3Rpb24gcygpIHsgaXQgPSBpdC5jYWxsKG8pOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgc3RlcCA9IGl0Lm5leHQoKTsgbm9ybWFsQ29tcGxldGlvbiA9IHN0ZXAuZG9uZTsgcmV0dXJuIHN0ZXA7IH0sIGU6IGZ1bmN0aW9uIGUoX2UyKSB7IGRpZEVyciA9IHRydWU7IGVyciA9IF9lMjsgfSwgZjogZnVuY3Rpb24gZigpIHsgdHJ5IHsgaWYgKCFub3JtYWxDb21wbGV0aW9uICYmIGl0W1wicmV0dXJuXCJdICE9IG51bGwpIGl0W1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChkaWRFcnIpIHRocm93IGVycjsgfSB9IH07IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBTaW1wbGVMaWdodGJveCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNpbXBsZUxpZ2h0Ym94KGVsZW1lbnRzLCBvcHRpb25zKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTaW1wbGVMaWdodGJveCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJkZWZhdWx0T3B0aW9uc1wiLCB7XG4gICAgICBzb3VyY2VBdHRyOiAnaHJlZicsXG4gICAgICBvdmVybGF5OiB0cnVlLFxuICAgICAgc3Bpbm5lcjogdHJ1ZSxcbiAgICAgIG5hdjogdHJ1ZSxcbiAgICAgIG5hdlRleHQ6IFsnJmxzYXF1bzsnLCAnJnJzYXF1bzsnXSxcbiAgICAgIGNhcHRpb25zOiB0cnVlLFxuICAgICAgY2FwdGlvbkRlbGF5OiAwLFxuICAgICAgY2FwdGlvblNlbGVjdG9yOiAnaW1nJyxcbiAgICAgIGNhcHRpb25UeXBlOiAnYXR0cicsXG4gICAgICBjYXB0aW9uc0RhdGE6ICd0aXRsZScsXG4gICAgICBjYXB0aW9uUG9zaXRpb246ICdib3R0b20nLFxuICAgICAgY2FwdGlvbkNsYXNzOiAnJyxcbiAgICAgIGNsb3NlOiB0cnVlLFxuICAgICAgY2xvc2VUZXh0OiAnJnRpbWVzOycsXG4gICAgICBzd2lwZUNsb3NlOiB0cnVlLFxuICAgICAgc2hvd0NvdW50ZXI6IHRydWUsXG4gICAgICBmaWxlRXh0OiAncG5nfGpwZ3xqcGVnfGdpZnx3ZWJwJyxcbiAgICAgIGFuaW1hdGlvblNsaWRlOiB0cnVlLFxuICAgICAgYW5pbWF0aW9uU3BlZWQ6IDI1MCxcbiAgICAgIHByZWxvYWRpbmc6IHRydWUsXG4gICAgICBlbmFibGVLZXlib2FyZDogdHJ1ZSxcbiAgICAgIGxvb3A6IHRydWUsXG4gICAgICByZWw6IGZhbHNlLFxuICAgICAgZG9jQ2xvc2U6IHRydWUsXG4gICAgICBzd2lwZVRvbGVyYW5jZTogNTAsXG4gICAgICBjbGFzc05hbWU6ICdzaW1wbGUtbGlnaHRib3gnLFxuICAgICAgd2lkdGhSYXRpbzogMC44LFxuICAgICAgaGVpZ2h0UmF0aW86IDAuOSxcbiAgICAgIHNjYWxlSW1hZ2VUb1JhdGlvOiBmYWxzZSxcbiAgICAgIGRpc2FibGVSaWdodENsaWNrOiBmYWxzZSxcbiAgICAgIGRpc2FibGVTY3JvbGw6IHRydWUsXG4gICAgICBhbGVydEVycm9yOiB0cnVlLFxuICAgICAgYWxlcnRFcnJvck1lc3NhZ2U6ICdJbWFnZSBub3QgZm91bmQsIG5leHQgaW1hZ2Ugd2lsbCBiZSBsb2FkZWQnLFxuICAgICAgYWRkaXRpb25hbEh0bWw6IGZhbHNlLFxuICAgICAgaGlzdG9yeTogdHJ1ZSxcbiAgICAgIHRocm90dGxlSW50ZXJ2YWw6IDAsXG4gICAgICBkb3VibGVUYXBab29tOiAyLFxuICAgICAgbWF4Wm9vbTogMTAsXG4gICAgICBodG1sQ2xhc3M6ICdoYXMtbGlnaHRib3gnLFxuICAgICAgcnRsOiBmYWxzZSxcbiAgICAgIGZpeGVkQ2xhc3M6ICdzbC1maXhlZCcsXG4gICAgICBmYWRlU3BlZWQ6IDMwMCxcbiAgICAgIHVuaXF1ZUltYWdlczogdHJ1ZSxcbiAgICAgIGZvY3VzOiB0cnVlLFxuICAgICAgc2Nyb2xsWm9vbTogdHJ1ZSxcbiAgICAgIHNjcm9sbFpvb21GYWN0b3I6IDAuNVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidHJhbnNpdGlvblByZWZpeFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaXNQYXNzaXZlRXZlbnRzU3VwcG9ydGVkXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0cmFuc2l0aW9uQ2FwYWJsZVwiLCBmYWxzZSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpc1RvdWNoRGV2aWNlXCIsICdvbnRvdWNoc3RhcnQnIGluIHdpbmRvdyk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpc0FwcGxlRGV2aWNlXCIsIC8oTWFjfGlQaG9uZXxpUG9kfGlQYWQpL2kudGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImluaXRpYWxMb2NhdGlvbkhhc2hcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInB1c2hTdGF0ZVN1cHBvcnRcIiwgJ3B1c2hTdGF0ZScgaW4gaGlzdG9yeSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpc09wZW5cIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaXNBbmltYXRpbmdcIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaXNDbG9zaW5nXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlzRmFkZUluXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInVybENoYW5nZWRPbmNlXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImhhc2hSZXNldGVkXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImhpc3RvcnlIYXNDaGFuZ2VzXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImhpc3RvcnlVcGRhdGVUaW1lb3V0XCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiY3VycmVudEltYWdlXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJldmVudE5hbWVzcGFjZVwiLCAnc2ltcGxlbGlnaHRib3gnKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRvbU5vZGVzXCIsIHt9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxvYWRlZEltYWdlc1wiLCBbXSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbml0aWFsSW1hZ2VJbmRleFwiLCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImN1cnJlbnRJbWFnZUluZGV4XCIsIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5pdGlhbFNlbGVjdG9yXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZ2xvYmFsU2Nyb2xsYmFyV2lkdGhcIiwgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjb250cm9sQ29vcmRpbmF0ZXNcIiwge1xuICAgICAgc3dpcGVEaWZmOiAwLFxuICAgICAgc3dpcGVZRGlmZjogMCxcbiAgICAgIHN3aXBlU3RhcnQ6IDAsXG4gICAgICBzd2lwZUVuZDogMCxcbiAgICAgIHN3aXBlWVN0YXJ0OiAwLFxuICAgICAgc3dpcGVZRW5kOiAwLFxuICAgICAgbW91c2Vkb3duOiBmYWxzZSxcbiAgICAgIGltYWdlTGVmdDogMCxcbiAgICAgIHpvb21lZDogZmFsc2UsXG4gICAgICBjb250YWluZXJIZWlnaHQ6IDAsXG4gICAgICBjb250YWluZXJXaWR0aDogMCxcbiAgICAgIGNvbnRhaW5lck9mZnNldFg6IDAsXG4gICAgICBjb250YWluZXJPZmZzZXRZOiAwLFxuICAgICAgaW1nSGVpZ2h0OiAwLFxuICAgICAgaW1nV2lkdGg6IDAsXG4gICAgICBjYXB0dXJlOiBmYWxzZSxcbiAgICAgIGluaXRpYWxPZmZzZXRYOiAwLFxuICAgICAgaW5pdGlhbE9mZnNldFk6IDAsXG4gICAgICBpbml0aWFsUG9pbnRlck9mZnNldFg6IDAsXG4gICAgICBpbml0aWFsUG9pbnRlck9mZnNldFk6IDAsXG4gICAgICBpbml0aWFsUG9pbnRlck9mZnNldFgyOiAwLFxuICAgICAgaW5pdGlhbFBvaW50ZXJPZmZzZXRZMjogMCxcbiAgICAgIGluaXRpYWxTY2FsZTogMSxcbiAgICAgIGluaXRpYWxQaW5jaERpc3RhbmNlOiAwLFxuICAgICAgcG9pbnRlck9mZnNldFg6IDAsXG4gICAgICBwb2ludGVyT2Zmc2V0WTogMCxcbiAgICAgIHBvaW50ZXJPZmZzZXRYMjogMCxcbiAgICAgIHBvaW50ZXJPZmZzZXRZMjogMCxcbiAgICAgIHRhcmdldE9mZnNldFg6IDAsXG4gICAgICB0YXJnZXRPZmZzZXRZOiAwLFxuICAgICAgdGFyZ2V0U2NhbGU6IDAsXG4gICAgICBwaW5jaE9mZnNldFg6IDAsXG4gICAgICBwaW5jaE9mZnNldFk6IDAsXG4gICAgICBsaW1pdE9mZnNldFg6IDAsXG4gICAgICBsaW1pdE9mZnNldFk6IDAsXG4gICAgICBzY2FsZURpZmZlcmVuY2U6IDAsXG4gICAgICB0YXJnZXRQaW5jaERpc3RhbmNlOiAwLFxuICAgICAgdG91Y2hDb3VudDogMCxcbiAgICAgIGRvdWJsZVRhcHBlZDogZmFsc2UsXG4gICAgICB0b3VjaG1vdmVDb3VudDogMFxuICAgIH0pO1xuXG4gICAgdGhpcy5vcHRpb25zID0gT2JqZWN0LmFzc2lnbih0aGlzLmRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcbiAgICB0aGlzLmlzUGFzc2l2ZUV2ZW50c1N1cHBvcnRlZCA9IHRoaXMuY2hlY2tQYXNzaXZlRXZlbnRzU3VwcG9ydCgpO1xuXG4gICAgaWYgKHR5cGVvZiBlbGVtZW50cyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuaW5pdGlhbFNlbGVjdG9yID0gZWxlbWVudHM7XG4gICAgICB0aGlzLmVsZW1lbnRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGVsZW1lbnRzKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZWxlbWVudHMgPSB0eXBlb2YgZWxlbWVudHMubGVuZ3RoICE9PSAndW5kZWZpbmVkJyAmJiBlbGVtZW50cy5sZW5ndGggPiAwID8gQXJyYXkuZnJvbShlbGVtZW50cykgOiBbZWxlbWVudHNdO1xuICAgIH1cblxuICAgIHRoaXMucmVsYXRlZEVsZW1lbnRzID0gW107XG4gICAgdGhpcy50cmFuc2l0aW9uUHJlZml4ID0gdGhpcy5jYWxjdWxhdGVUcmFuc2l0aW9uUHJlZml4KCk7XG4gICAgdGhpcy50cmFuc2l0aW9uQ2FwYWJsZSA9IHRoaXMudHJhbnNpdGlvblByZWZpeCAhPT0gZmFsc2U7XG4gICAgdGhpcy5pbml0aWFsTG9jYXRpb25IYXNoID0gdGhpcy5oYXNoOyAvLyB0aGlzIHNob3VsZCBiZSBoYW5kbGVkIGJ5IGF0dHJpYnV0ZSBzZWxlY3RvciBJTUhPISA9PiAnYVtyZWw9YmxhXScuLi5cblxuICAgIGlmICh0aGlzLm9wdGlvbnMucmVsKSB7XG4gICAgICB0aGlzLmVsZW1lbnRzID0gdGhpcy5nZXRSZWxhdGVkKHRoaXMub3B0aW9ucy5yZWwpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMudW5pcXVlSW1hZ2VzKSB7XG4gICAgICB2YXIgaW1nQXJyID0gW107XG4gICAgICB0aGlzLmVsZW1lbnRzID0gQXJyYXkuZnJvbSh0aGlzLmVsZW1lbnRzKS5maWx0ZXIoZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHNyYyA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKF90aGlzLm9wdGlvbnMuc291cmNlQXR0cik7XG5cbiAgICAgICAgaWYgKGltZ0Fyci5pbmRleE9mKHNyYykgPT09IC0xKSB7XG4gICAgICAgICAgaW1nQXJyLnB1c2goc3JjKTtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuY3JlYXRlRG9tTm9kZXMoKTtcblxuICAgIGlmICh0aGlzLm9wdGlvbnMuY2xvc2UpIHtcbiAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5hcHBlbmRDaGlsZCh0aGlzLmRvbU5vZGVzLmNsb3NlQnV0dG9uKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLm5hdikge1xuICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLmFwcGVuZENoaWxkKHRoaXMuZG9tTm9kZXMubmF2aWdhdGlvbik7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5zcGlubmVyKSB7XG4gICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuYXBwZW5kQ2hpbGQodGhpcy5kb21Ob2Rlcy5zcGlubmVyKTtcbiAgICB9XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5lbGVtZW50cywgJ2NsaWNrLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy5pc1ZhbGlkTGluayhldmVudC5jdXJyZW50VGFyZ2V0KSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGlmIChfdGhpcy5pc0FuaW1hdGluZykge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzLmluaXRpYWxJbWFnZUluZGV4ID0gX3RoaXMuZWxlbWVudHMuaW5kZXhPZihldmVudC5jdXJyZW50VGFyZ2V0KTtcblxuICAgICAgICBfdGhpcy5vcGVuSW1hZ2UoZXZlbnQuY3VycmVudFRhcmdldCk7XG4gICAgICB9XG4gICAgfSk7IC8vIGNsb3NlIGFkZEV2ZW50TGlzdGVuZXIgY2xpY2sgYWRkRXZlbnRMaXN0ZW5lciBkb2NcblxuICAgIGlmICh0aGlzLm9wdGlvbnMuZG9jQ2xvc2UpIHtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmRvbU5vZGVzLndyYXBwZXIsIFsnY2xpY2suJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICd0b3VjaHN0YXJ0LicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlXSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChfdGhpcy5pc09wZW4gJiYgZXZlbnQudGFyZ2V0ID09PSBldmVudC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgX3RoaXMuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSAvLyBkaXNhYmxlIHJpZ2h0Y2xpY2tcblxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5kaXNhYmxlUmlnaHRDbGljaykge1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKGRvY3VtZW50LmJvZHksICdjb250ZXh0bWVudS4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoXCJzbC1pbWFnZVwiKSkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gLy8ga2V5Ym9hcmQtY29udHJvbFxuXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLmVuYWJsZUtleWJvYXJkKSB7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoZG9jdW1lbnQuYm9keSwgJ2tleXVwLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCB0aGlzLnRocm90dGxlKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBfdGhpcy5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVEaWZmID0gMDsgLy8ga2V5Ym9hcmQgY29udHJvbCBvbmx5IGlmIGxpZ2h0Ym94IGlzIG9wZW5cblxuICAgICAgICBpZiAoX3RoaXMuaXNBbmltYXRpbmcgJiYgZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICAgIF90aGlzLmN1cnJlbnRJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsICcnKTtcblxuICAgICAgICAgIF90aGlzLmlzQW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmNsb3NlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX3RoaXMuaXNPcGVuKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgIGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgICAgICBfdGhpcy5jbG9zZSgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghX3RoaXMuaXNBbmltYXRpbmcgJiYgWydBcnJvd0xlZnQnLCAnQXJyb3dSaWdodCddLmluZGV4T2YoZXZlbnQua2V5KSA+IC0xKSB7XG4gICAgICAgICAgICBfdGhpcy5sb2FkSW1hZ2UoZXZlbnQua2V5ID09PSAnQXJyb3dSaWdodCcgPyAxIDogLTEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgdGhpcy5vcHRpb25zLnRocm90dGxlSW50ZXJ2YWwpKTtcbiAgICB9XG5cbiAgICB0aGlzLmFkZEV2ZW50cygpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFNpbXBsZUxpZ2h0Ym94LCBbe1xuICAgIGtleTogXCJjaGVja1Bhc3NpdmVFdmVudHNTdXBwb3J0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNoZWNrUGFzc2l2ZUV2ZW50c1N1cHBvcnQoKSB7XG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vV0lDRy9FdmVudExpc3RlbmVyT3B0aW9ucy9ibG9iL2doLXBhZ2VzL2V4cGxhaW5lci5tZCNmZWF0dXJlLWRldGVjdGlvblxuICAgICAgLy8gVGVzdCB2aWEgYSBnZXR0ZXIgaW4gdGhlIG9wdGlvbnMgb2JqZWN0IHRvIHNlZSBpZiB0aGUgcGFzc2l2ZSBwcm9wZXJ0eSBpcyBhY2Nlc3NlZFxuICAgICAgdmFyIHN1cHBvcnRzUGFzc2l2ZSA9IGZhbHNlO1xuXG4gICAgICB0cnkge1xuICAgICAgICB2YXIgb3B0cyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ3Bhc3NpdmUnLCB7XG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICBzdXBwb3J0c1Bhc3NpdmUgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFBhc3NpdmVcIiwgbnVsbCwgb3B0cyk7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFBhc3NpdmVcIiwgbnVsbCwgb3B0cyk7XG4gICAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgICByZXR1cm4gc3VwcG9ydHNQYXNzaXZlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjcmVhdGVEb21Ob2Rlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVEb21Ob2RlcygpIHtcbiAgICAgIHRoaXMuZG9tTm9kZXMub3ZlcmxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5vdmVybGF5LmNsYXNzTGlzdC5hZGQoJ3NsLW92ZXJsYXknKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMub3ZlcmxheS5kYXRhc2V0Lm9wYWNpdHlUYXJnZXQgPSBcIi43XCI7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNsb3NlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNsb3NlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3NsLWNsb3NlJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNsb3NlQnV0dG9uLmlubmVySFRNTCA9IHRoaXMub3B0aW9ucy5jbG9zZVRleHQ7XG4gICAgICB0aGlzLmRvbU5vZGVzLnNwaW5uZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuc3Bpbm5lci5jbGFzc0xpc3QuYWRkKCdzbC1zcGlubmVyJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLnNwaW5uZXIuaW5uZXJIVE1MID0gJzxkaXY+PC9kaXY+JztcbiAgICAgIHRoaXMuZG9tTm9kZXMubmF2aWdhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5uYXZpZ2F0aW9uLmNsYXNzTGlzdC5hZGQoJ3NsLW5hdmlnYXRpb24nKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMubmF2aWdhdGlvbi5pbm5lckhUTUwgPSBcIjxidXR0b24gY2xhc3M9XFxcInNsLXByZXZcXFwiPlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMubmF2VGV4dFswXSwgXCI8L2J1dHRvbj48YnV0dG9uIGNsYXNzPVxcXCJzbC1uZXh0XFxcIj5cIikuY29uY2F0KHRoaXMub3B0aW9ucy5uYXZUZXh0WzFdLCBcIjwvYnV0dG9uPlwiKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuY291bnRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5jb3VudGVyLmNsYXNzTGlzdC5hZGQoJ3NsLWNvdW50ZXInKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuY291bnRlci5pbm5lckhUTUwgPSAnPHNwYW4gY2xhc3M9XCJzbC1jdXJyZW50XCI+PC9zcGFuPi88c3BhbiBjbGFzcz1cInNsLXRvdGFsXCI+PC9zcGFuPic7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNhcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuY2FwdGlvbi5jbGFzc0xpc3QuYWRkKCdzbC1jYXB0aW9uJywgJ3Bvcy0nICsgdGhpcy5vcHRpb25zLmNhcHRpb25Qb3NpdGlvbik7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY2FwdGlvbkNsYXNzKSB7XG4gICAgICAgIHRoaXMuZG9tTm9kZXMuY2FwdGlvbi5jbGFzc0xpc3QuYWRkKHRoaXMub3B0aW9ucy5jYXB0aW9uQ2xhc3MpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmRvbU5vZGVzLmltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLmltYWdlLmNsYXNzTGlzdC5hZGQoJ3NsLWltYWdlJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5jbGFzc0xpc3QuYWRkKCdzbC13cmFwcGVyJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsIC0xKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnZGlhbG9nJyk7XG4gICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsIGZhbHNlKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5jbGFzc05hbWUpIHtcbiAgICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLmNsYXNzTGlzdC5hZGQodGhpcy5vcHRpb25zLmNsYXNzTmFtZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMucnRsKSB7XG4gICAgICAgIHRoaXMuZG9tTm9kZXMud3JhcHBlci5jbGFzc0xpc3QuYWRkKCdzbC1kaXItcnRsJyk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInRocm90dGxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRocm90dGxlKGZ1bmMsIGxpbWl0KSB7XG4gICAgICB2YXIgaW5UaHJvdHRsZTtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaW5UaHJvdHRsZSkge1xuICAgICAgICAgIGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgICBpblRocm90dGxlID0gdHJ1ZTtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBpblRocm90dGxlID0gZmFsc2U7XG4gICAgICAgICAgfSwgbGltaXQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc1ZhbGlkTGlua1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1ZhbGlkTGluayhlbGVtZW50KSB7XG4gICAgICByZXR1cm4gIXRoaXMub3B0aW9ucy5maWxlRXh0IHx8IGVsZW1lbnQuZ2V0QXR0cmlidXRlKHRoaXMub3B0aW9ucy5zb3VyY2VBdHRyKSAmJiBuZXcgUmVnRXhwKCcoJyArIHRoaXMub3B0aW9ucy5maWxlRXh0ICsgJykkJywgJ2knKS50ZXN0KGVsZW1lbnQuZ2V0QXR0cmlidXRlKHRoaXMub3B0aW9ucy5zb3VyY2VBdHRyKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNhbGN1bGF0ZVRyYW5zaXRpb25QcmVmaXhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2FsY3VsYXRlVHJhbnNpdGlvblByZWZpeCgpIHtcbiAgICAgIHZhciBzID0gKGRvY3VtZW50LmJvZHkgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5zdHlsZTtcbiAgICAgIHJldHVybiAndHJhbnNpdGlvbicgaW4gcyA/ICcnIDogJ1dlYmtpdFRyYW5zaXRpb24nIGluIHMgPyAnLXdlYmtpdC0nIDogJ01velRyYW5zaXRpb24nIGluIHMgPyAnLW1vei0nIDogJ09UcmFuc2l0aW9uJyBpbiBzID8gJy1vJyA6IGZhbHNlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0b2dnbGVTY3JvbGxiYXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlU2Nyb2xsYmFyKHR5cGUpIHtcbiAgICAgIHZhciBzY3JvbGxiYXJXaWR0aCA9IDA7XG4gICAgICB2YXIgZml4ZWRFbGVtZW50cyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLicgKyB0aGlzLm9wdGlvbnMuZml4ZWRDbGFzcykpO1xuXG4gICAgICBpZiAodHlwZSA9PT0gJ2hpZGUnKSB7XG4gICAgICAgIHZhciBmdWxsV2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcblxuICAgICAgICBpZiAoIWZ1bGxXaW5kb3dXaWR0aCkge1xuICAgICAgICAgIHZhciBkb2N1bWVudEVsZW1lbnRSZWN0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgIGZ1bGxXaW5kb3dXaWR0aCA9IGRvY3VtZW50RWxlbWVudFJlY3QucmlnaHQgLSBNYXRoLmFicyhkb2N1bWVudEVsZW1lbnRSZWN0LmxlZnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggPCBmdWxsV2luZG93V2lkdGggfHwgdGhpcy5pc0FwcGxlRGV2aWNlKSB7XG4gICAgICAgICAgdmFyIHNjcm9sbERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgICAgICAgICBwYWRkaW5nUmlnaHQgPSBwYXJzZUludChkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCB8fCAwLCAxMCk7XG4gICAgICAgICAgc2Nyb2xsRGl2LmNsYXNzTGlzdC5hZGQoJ3NsLXNjcm9sbGJhci1tZWFzdXJlJyk7XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JvbGxEaXYpO1xuICAgICAgICAgIHNjcm9sbGJhcldpZHRoID0gc2Nyb2xsRGl2Lm9mZnNldFdpZHRoIC0gc2Nyb2xsRGl2LmNsaWVudFdpZHRoO1xuICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoc2Nyb2xsRGl2KTtcbiAgICAgICAgICBkb2N1bWVudC5ib2R5LmRhdGFzZXQub3JpZ2luYWxQYWRkaW5nUmlnaHQgPSBwYWRkaW5nUmlnaHQ7XG5cbiAgICAgICAgICBpZiAoc2Nyb2xsYmFyV2lkdGggPiAwIHx8IHNjcm9sbGJhcldpZHRoID09IDAgJiYgdGhpcy5pc0FwcGxlRGV2aWNlKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbi1zY3JvbGwnKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0ID0gcGFkZGluZ1JpZ2h0ICsgc2Nyb2xsYmFyV2lkdGggKyAncHgnO1xuICAgICAgICAgICAgZml4ZWRFbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgIHZhciBhY3R1YWxQYWRkaW5nID0gZWxlbWVudC5zdHlsZS5wYWRkaW5nUmlnaHQ7XG4gICAgICAgICAgICAgIHZhciBjYWxjdWxhdGVkUGFkZGluZyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpWydwYWRkaW5nLXJpZ2h0J107XG4gICAgICAgICAgICAgIGVsZW1lbnQuZGF0YXNldC5vcmlnaW5hbFBhZGRpbmdSaWdodCA9IGFjdHVhbFBhZGRpbmc7XG4gICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0ID0gXCJcIi5jb25jYXQocGFyc2VGbG9hdChjYWxjdWxhdGVkUGFkZGluZykgKyBzY3JvbGxiYXJXaWR0aCwgXCJweFwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4tc2Nyb2xsJyk7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0ID0gZG9jdW1lbnQuYm9keS5kYXRhc2V0Lm9yaWdpbmFsUGFkZGluZ1JpZ2h0O1xuICAgICAgICBmaXhlZEVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICB2YXIgcGFkZGluZyA9IGVsZW1lbnQuZGF0YXNldC5vcmlnaW5hbFBhZGRpbmdSaWdodDtcblxuICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0ID0gcGFkZGluZztcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2Nyb2xsYmFyV2lkdGg7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNsb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy5pc09wZW4gfHwgdGhpcy5pc0FuaW1hdGluZyB8fCB0aGlzLmlzQ2xvc2luZykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXNDbG9zaW5nID0gdHJ1ZTtcbiAgICAgIHZhciBlbGVtZW50ID0gdGhpcy5yZWxhdGVkRWxlbWVudHNbdGhpcy5jdXJyZW50SW1hZ2VJbmRleF07XG4gICAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjbG9zZS5zaW1wbGVsaWdodGJveCcpKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5oaXN0b3J5KSB7XG4gICAgICAgIHRoaXMuaGlzdG9yeUhhc0NoYW5nZXMgPSBmYWxzZTtcblxuICAgICAgICBpZiAoIXRoaXMuaGFzaFJlc2V0ZWQpIHtcbiAgICAgICAgICB0aGlzLnJlc2V0SGFzaCgpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihkb2N1bWVudCwgJ2ZvY3VzaW4uJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5mYWRlT3V0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zbC1pbWFnZSBpbWcsIC5zbC1vdmVybGF5LCAuc2wtY2xvc2UsIC5zbC1uYXZpZ2F0aW9uLCAuc2wtaW1hZ2UgLnNsLWNhcHRpb24sIC5zbC1jb3VudGVyJyksIHRoaXMub3B0aW9ucy5mYWRlU3BlZWQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKF90aGlzMi5vcHRpb25zLmRpc2FibGVTY3JvbGwpIHtcbiAgICAgICAgICBfdGhpczIudG9nZ2xlU2Nyb2xsYmFyKCdzaG93Jyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX3RoaXMyLm9wdGlvbnMuaHRtbENsYXNzICYmIF90aGlzMi5vcHRpb25zLmh0bWxDbGFzcyAhPT0gJycpIHtcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdodG1sJykuY2xhc3NMaXN0LnJlbW92ZShfdGhpczIub3B0aW9ucy5odG1sQ2xhc3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChfdGhpczIuZG9tTm9kZXMud3JhcHBlcik7XG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoX3RoaXMyLmRvbU5vZGVzLm92ZXJsYXkpO1xuICAgICAgICBfdGhpczIuZG9tTm9kZXMuYWRkaXRpb25hbEh0bWwgPSBudWxsO1xuICAgICAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjbG9zZWQuc2ltcGxlbGlnaHRib3gnKSk7XG4gICAgICAgIF90aGlzMi5pc0Nsb3NpbmcgPSBmYWxzZTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UgPSBudWxsO1xuICAgICAgdGhpcy5pc09wZW4gPSBmYWxzZTtcbiAgICAgIHRoaXMuaXNBbmltYXRpbmcgPSBmYWxzZTsgLy8gcmVzZXQgdG91Y2hjb250cm9sIGNvb3JkaW5hdGVzXG5cbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLmNvbnRyb2xDb29yZGluYXRlcykge1xuICAgICAgICB0aGlzLmNvbnRyb2xDb29yZGluYXRlc1trZXldID0gMDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jb250cm9sQ29vcmRpbmF0ZXMubW91c2Vkb3duID0gZmFsc2U7XG4gICAgICB0aGlzLmNvbnRyb2xDb29yZGluYXRlcy56b29tZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuY29udHJvbENvb3JkaW5hdGVzLmNhcHR1cmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9IHRoaXMubWluTWF4KDEsIDEsIHRoaXMub3B0aW9ucy5tYXhab29tKTtcbiAgICAgIHRoaXMuY29udHJvbENvb3JkaW5hdGVzLmRvdWJsZVRhcHBlZCA9IGZhbHNlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYXNoXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyaW5nKDEpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJwcmVsb2FkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByZWxvYWQoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIGluZGV4ID0gdGhpcy5jdXJyZW50SW1hZ2VJbmRleCxcbiAgICAgICAgICBsZW5ndGggPSB0aGlzLnJlbGF0ZWRFbGVtZW50cy5sZW5ndGgsXG4gICAgICAgICAgbmV4dCA9IGluZGV4ICsgMSA8IDAgPyBsZW5ndGggLSAxIDogaW5kZXggKyAxID49IGxlbmd0aCAtIDEgPyAwIDogaW5kZXggKyAxLFxuICAgICAgICAgIHByZXYgPSBpbmRleCAtIDEgPCAwID8gbGVuZ3RoIC0gMSA6IGluZGV4IC0gMSA+PSBsZW5ndGggLSAxID8gMCA6IGluZGV4IC0gMSxcbiAgICAgICAgICBuZXh0SW1hZ2UgPSBuZXcgSW1hZ2UoKSxcbiAgICAgICAgICBwcmV2SW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgIG5leHRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciBzcmMgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCdzcmMnKTtcblxuICAgICAgICBpZiAoX3RoaXMzLmxvYWRlZEltYWdlcy5pbmRleE9mKHNyYykgPT09IC0xKSB7XG4gICAgICAgICAgLy9pcyB0aGlzIGNvbmRpdGlvbiBldmVuIHJlcXVpcmVkLi4uIHNldHRpbmcgbXVsdGlwbGUgdGltZXMgd2lsbCBub3QgY2hhbmdlIHVzYWdlLi4uXG4gICAgICAgICAgX3RoaXMzLmxvYWRlZEltYWdlcy5wdXNoKHNyYyk7XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpczMucmVsYXRlZEVsZW1lbnRzW2luZGV4XS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnbmV4dEltYWdlTG9hZGVkLicgKyBfdGhpczMuZXZlbnROYW1lc3BhY2UpKTtcbiAgICAgIH0pO1xuICAgICAgbmV4dEltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgdGhpcy5yZWxhdGVkRWxlbWVudHNbbmV4dF0uZ2V0QXR0cmlidXRlKHRoaXMub3B0aW9ucy5zb3VyY2VBdHRyKSk7XG4gICAgICBwcmV2SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgc3JjID0gZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZSgnc3JjJyk7XG5cbiAgICAgICAgaWYgKF90aGlzMy5sb2FkZWRJbWFnZXMuaW5kZXhPZihzcmMpID09PSAtMSkge1xuICAgICAgICAgIF90aGlzMy5sb2FkZWRJbWFnZXMucHVzaChzcmMpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMzLnJlbGF0ZWRFbGVtZW50c1tpbmRleF0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3ByZXZJbWFnZUxvYWRlZC4nICsgX3RoaXMzLmV2ZW50TmFtZXNwYWNlKSk7XG4gICAgICB9KTtcbiAgICAgIHByZXZJbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHRoaXMucmVsYXRlZEVsZW1lbnRzW3ByZXZdLmdldEF0dHJpYnV0ZSh0aGlzLm9wdGlvbnMuc291cmNlQXR0cikpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkSW1hZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZEltYWdlKGRpcmVjdGlvbikge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHZhciBzbGlkZURpcmVjdGlvbiA9IGRpcmVjdGlvbjtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5ydGwpIHtcbiAgICAgICAgZGlyZWN0aW9uID0gLWRpcmVjdGlvbjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZWxhdGVkRWxlbWVudHNbdGhpcy5jdXJyZW50SW1hZ2VJbmRleF0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NoYW5nZS4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSkpO1xuICAgICAgdGhpcy5yZWxhdGVkRWxlbWVudHNbdGhpcy5jdXJyZW50SW1hZ2VJbmRleF0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoKGRpcmVjdGlvbiA9PT0gMSA/ICduZXh0JyA6ICdwcmV2JykgKyAnLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKSk7XG4gICAgICB2YXIgbmV3SW5kZXggPSB0aGlzLmN1cnJlbnRJbWFnZUluZGV4ICsgZGlyZWN0aW9uO1xuXG4gICAgICBpZiAodGhpcy5pc0FuaW1hdGluZyB8fCAobmV3SW5kZXggPCAwIHx8IG5ld0luZGV4ID49IHRoaXMucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCkgJiYgdGhpcy5vcHRpb25zLmxvb3AgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jdXJyZW50SW1hZ2VJbmRleCA9IG5ld0luZGV4IDwgMCA/IHRoaXMucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCAtIDEgOiBuZXdJbmRleCA+IHRoaXMucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCAtIDEgPyAwIDogbmV3SW5kZXg7XG4gICAgICB0aGlzLmRvbU5vZGVzLmNvdW50ZXIucXVlcnlTZWxlY3RvcignLnNsLWN1cnJlbnQnKS5pbm5lckhUTUwgPSB0aGlzLmN1cnJlbnRJbWFnZUluZGV4ICsgMTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5hbmltYXRpb25TbGlkZSkge1xuICAgICAgICB0aGlzLnNsaWRlKHRoaXMub3B0aW9ucy5hbmltYXRpb25TcGVlZCAvIDEwMDAsIC0xMDAgKiBzbGlkZURpcmVjdGlvbiAtIHRoaXMuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZiArICdweCcpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmZhZGVPdXQodGhpcy5kb21Ob2Rlcy5pbWFnZSwgdGhpcy5vcHRpb25zLmZhZGVTcGVlZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczQuaXNBbmltYXRpbmcgPSB0cnVlO1xuXG4gICAgICAgIGlmICghX3RoaXM0LmlzQ2xvc2luZykge1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSBfdGhpczQucmVsYXRlZEVsZW1lbnRzW190aGlzNC5jdXJyZW50SW1hZ2VJbmRleF07XG5cbiAgICAgICAgICAgIF90aGlzNC5jdXJyZW50SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBlbGVtZW50LmdldEF0dHJpYnV0ZShfdGhpczQub3B0aW9ucy5zb3VyY2VBdHRyKSk7XG5cbiAgICAgICAgICAgIGlmIChfdGhpczQubG9hZGVkSW1hZ2VzLmluZGV4T2YoZWxlbWVudC5nZXRBdHRyaWJ1dGUoX3RoaXM0Lm9wdGlvbnMuc291cmNlQXR0cikpID09PSAtMSkge1xuICAgICAgICAgICAgICBfdGhpczQuc2hvdyhfdGhpczQuZG9tTm9kZXMuc3Bpbm5lcik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChfdGhpczQuZG9tTm9kZXMuaW1hZ2UuY29udGFpbnMoX3RoaXM0LmRvbU5vZGVzLmNhcHRpb24pKSB7XG4gICAgICAgICAgICAgIF90aGlzNC5kb21Ob2Rlcy5pbWFnZS5yZW1vdmVDaGlsZChfdGhpczQuZG9tTm9kZXMuY2FwdGlvbik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF90aGlzNC5hZGp1c3RJbWFnZShzbGlkZURpcmVjdGlvbik7XG5cbiAgICAgICAgICAgIGlmIChfdGhpczQub3B0aW9ucy5wcmVsb2FkaW5nKSBfdGhpczQucHJlbG9hZCgpO1xuICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXM0LmlzQW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGp1c3RJbWFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGp1c3RJbWFnZShkaXJlY3Rpb24pIHtcbiAgICAgIHZhciBfdGhpczUgPSB0aGlzO1xuXG4gICAgICBpZiAoIXRoaXMuY3VycmVudEltYWdlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHRtcEltYWdlID0gbmV3IEltYWdlKCksXG4gICAgICAgICAgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAqIHRoaXMub3B0aW9ucy53aWR0aFJhdGlvLFxuICAgICAgICAgIHdpbmRvd0hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIHRoaXMub3B0aW9ucy5oZWlnaHRSYXRpbztcbiAgICAgIHRtcEltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgdGhpcy5jdXJyZW50SW1hZ2UuZ2V0QXR0cmlidXRlKCdzcmMnKSk7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5kYXRhc2V0LnNjYWxlID0gMTtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlLmRhdGFzZXQudHJhbnNsYXRlWCA9IDA7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVkgPSAwO1xuICAgICAgdGhpcy56b29tUGFuRWxlbWVudCgwLCAwLCAxKTtcbiAgICAgIHRtcEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIF90aGlzNS5yZWxhdGVkRWxlbWVudHNbX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4XS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnZXJyb3IuJyArIF90aGlzNS5ldmVudE5hbWVzcGFjZSkpO1xuXG4gICAgICAgIF90aGlzNS5pc0FuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICBfdGhpczUuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgX3RoaXM1LmRvbU5vZGVzLnNwaW5uZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgdmFyIGRpcklzRGVmaW5lZCA9IGRpcmVjdGlvbiA9PT0gMSB8fCBkaXJlY3Rpb24gPT09IC0xO1xuXG4gICAgICAgIGlmIChfdGhpczUuaW5pdGlhbEltYWdlSW5kZXggPT09IF90aGlzNS5jdXJyZW50SW1hZ2VJbmRleCAmJiBkaXJJc0RlZmluZWQpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM1LmNsb3NlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX3RoaXM1Lm9wdGlvbnMuYWxlcnRFcnJvcikge1xuICAgICAgICAgIGFsZXJ0KF90aGlzNS5vcHRpb25zLmFsZXJ0RXJyb3JNZXNzYWdlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzNS5sb2FkSW1hZ2UoZGlySXNEZWZpbmVkID8gZGlyZWN0aW9uIDogMSk7XG4gICAgICB9KTtcbiAgICAgIHRtcEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkaXJlY3Rpb24gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgX3RoaXM1LnJlbGF0ZWRFbGVtZW50c1tfdGhpczUuY3VycmVudEltYWdlSW5kZXhdLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2VkLicgKyBfdGhpczUuZXZlbnROYW1lc3BhY2UpKTtcblxuICAgICAgICAgIF90aGlzNS5yZWxhdGVkRWxlbWVudHNbX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4XS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgoZGlyZWN0aW9uID09PSAxID8gJ25leHREb25lJyA6ICdwcmV2RG9uZScpICsgJy4nICsgX3RoaXM1LmV2ZW50TmFtZXNwYWNlKSk7XG4gICAgICAgIH0gLy8gaGlzdG9yeVxuXG5cbiAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLmhpc3RvcnkpIHtcbiAgICAgICAgICBfdGhpczUudXBkYXRlVVJMKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX3RoaXM1LmxvYWRlZEltYWdlcy5pbmRleE9mKF90aGlzNS5jdXJyZW50SW1hZ2UuZ2V0QXR0cmlidXRlKCdzcmMnKSkgPT09IC0xKSB7XG4gICAgICAgICAgX3RoaXM1LmxvYWRlZEltYWdlcy5wdXNoKF90aGlzNS5jdXJyZW50SW1hZ2UuZ2V0QXR0cmlidXRlKCdzcmMnKSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaW1hZ2VXaWR0aCA9IGV2ZW50LnRhcmdldC53aWR0aCxcbiAgICAgICAgICAgIGltYWdlSGVpZ2h0ID0gZXZlbnQudGFyZ2V0LmhlaWdodDtcblxuICAgICAgICBpZiAoX3RoaXM1Lm9wdGlvbnMuc2NhbGVJbWFnZVRvUmF0aW8gfHwgaW1hZ2VXaWR0aCA+IHdpbmRvd1dpZHRoIHx8IGltYWdlSGVpZ2h0ID4gd2luZG93SGVpZ2h0KSB7XG4gICAgICAgICAgdmFyIHJhdGlvID0gaW1hZ2VXaWR0aCAvIGltYWdlSGVpZ2h0ID4gd2luZG93V2lkdGggLyB3aW5kb3dIZWlnaHQgPyBpbWFnZVdpZHRoIC8gd2luZG93V2lkdGggOiBpbWFnZUhlaWdodCAvIHdpbmRvd0hlaWdodDtcbiAgICAgICAgICBpbWFnZVdpZHRoIC89IHJhdGlvO1xuICAgICAgICAgIGltYWdlSGVpZ2h0IC89IHJhdGlvO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXM1LmRvbU5vZGVzLmltYWdlLnN0eWxlLnRvcCA9ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSBpbWFnZUhlaWdodCkgLyAyICsgJ3B4JztcbiAgICAgICAgX3RoaXM1LmRvbU5vZGVzLmltYWdlLnN0eWxlLmxlZnQgPSAod2luZG93LmlubmVyV2lkdGggLSBpbWFnZVdpZHRoIC0gX3RoaXM1Lmdsb2JhbFNjcm9sbGJhcldpZHRoKSAvIDIgKyAncHgnO1xuICAgICAgICBfdGhpczUuZG9tTm9kZXMuaW1hZ2Uuc3R5bGUud2lkdGggPSBpbWFnZVdpZHRoICsgJ3B4JztcbiAgICAgICAgX3RoaXM1LmRvbU5vZGVzLmltYWdlLnN0eWxlLmhlaWdodCA9IGltYWdlSGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgX3RoaXM1LmRvbU5vZGVzLnNwaW5uZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgICAgICBpZiAoX3RoaXM1Lm9wdGlvbnMuZm9jdXMpIHtcbiAgICAgICAgICBfdGhpczUuZm9yY2VGb2N1cygpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXM1LmZhZGVJbihfdGhpczUuY3VycmVudEltYWdlLCBfdGhpczUub3B0aW9ucy5mYWRlU3BlZWQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoX3RoaXM1Lm9wdGlvbnMuZm9jdXMpIHtcbiAgICAgICAgICAgIF90aGlzNS5kb21Ob2Rlcy53cmFwcGVyLmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBfdGhpczUuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgdmFyIGNhcHRpb25Db250YWluZXIsIGNhcHRpb25UZXh0O1xuXG4gICAgICAgIGlmICh0eXBlb2YgX3RoaXM1Lm9wdGlvbnMuY2FwdGlvblNlbGVjdG9yID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGNhcHRpb25Db250YWluZXIgPSBfdGhpczUub3B0aW9ucy5jYXB0aW9uU2VsZWN0b3IgPT09ICdzZWxmJyA/IF90aGlzNS5yZWxhdGVkRWxlbWVudHNbX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4XSA6IF90aGlzNS5yZWxhdGVkRWxlbWVudHNbX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4XS5xdWVyeVNlbGVjdG9yKF90aGlzNS5vcHRpb25zLmNhcHRpb25TZWxlY3Rvcik7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIF90aGlzNS5vcHRpb25zLmNhcHRpb25TZWxlY3RvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGNhcHRpb25Db250YWluZXIgPSBfdGhpczUub3B0aW9ucy5jYXB0aW9uU2VsZWN0b3IoX3RoaXM1LnJlbGF0ZWRFbGVtZW50c1tfdGhpczUuY3VycmVudEltYWdlSW5kZXhdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChfdGhpczUub3B0aW9ucy5jYXB0aW9ucyAmJiBjYXB0aW9uQ29udGFpbmVyKSB7XG4gICAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLmNhcHRpb25UeXBlID09PSAnZGF0YScpIHtcbiAgICAgICAgICAgIGNhcHRpb25UZXh0ID0gY2FwdGlvbkNvbnRhaW5lci5kYXRhc2V0W190aGlzNS5vcHRpb25zLmNhcHRpb25zRGF0YV07XG4gICAgICAgICAgfSBlbHNlIGlmIChfdGhpczUub3B0aW9ucy5jYXB0aW9uVHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICAgICAgICBjYXB0aW9uVGV4dCA9IGNhcHRpb25Db250YWluZXIuaW5uZXJIVE1MO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYXB0aW9uVGV4dCA9IGNhcHRpb25Db250YWluZXIuZ2V0QXR0cmlidXRlKF90aGlzNS5vcHRpb25zLmNhcHRpb25zRGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFfdGhpczUub3B0aW9ucy5sb29wKSB7XG4gICAgICAgICAgaWYgKF90aGlzNS5jdXJyZW50SW1hZ2VJbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgX3RoaXM1LmhpZGUoX3RoaXM1LmRvbU5vZGVzLm5hdmlnYXRpb24ucXVlcnlTZWxlY3RvcignLnNsLXByZXYnKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKF90aGlzNS5jdXJyZW50SW1hZ2VJbmRleCA+PSBfdGhpczUucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIF90aGlzNS5oaWRlKF90aGlzNS5kb21Ob2Rlcy5uYXZpZ2F0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zbC1uZXh0JykpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChfdGhpczUuY3VycmVudEltYWdlSW5kZXggPiAwKSB7XG4gICAgICAgICAgICBfdGhpczUuc2hvdyhfdGhpczUuZG9tTm9kZXMubmF2aWdhdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2wtcHJldicpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoX3RoaXM1LmN1cnJlbnRJbWFnZUluZGV4IDwgX3RoaXM1LnJlbGF0ZWRFbGVtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICBfdGhpczUuc2hvdyhfdGhpczUuZG9tTm9kZXMubmF2aWdhdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2wtbmV4dCcpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKF90aGlzNS5yZWxhdGVkRWxlbWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICBfdGhpczUuaGlkZShfdGhpczUuZG9tTm9kZXMubmF2aWdhdGlvbi5xdWVyeVNlbGVjdG9yQWxsKCcuc2wtcHJldiwgLnNsLW5leHQnKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF90aGlzNS5zaG93KF90aGlzNS5kb21Ob2Rlcy5uYXZpZ2F0aW9uLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zbC1wcmV2LCAuc2wtbmV4dCcpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZGlyZWN0aW9uID09PSAxIHx8IGRpcmVjdGlvbiA9PT0gLTEpIHtcbiAgICAgICAgICBpZiAoX3RoaXM1Lm9wdGlvbnMuYW5pbWF0aW9uU2xpZGUpIHtcbiAgICAgICAgICAgIF90aGlzNS5zbGlkZSgwLCAxMDAgKiBkaXJlY3Rpb24gKyAncHgnKTtcblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIF90aGlzNS5zbGlkZShfdGhpczUub3B0aW9ucy5hbmltYXRpb25TcGVlZCAvIDEwMDAsIDAgKyAncHgnKTtcbiAgICAgICAgICAgIH0sIDUwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpczUuZmFkZUluKF90aGlzNS5kb21Ob2Rlcy5pbWFnZSwgX3RoaXM1Lm9wdGlvbnMuZmFkZVNwZWVkLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpczUuaXNBbmltYXRpbmcgPSBmYWxzZTtcblxuICAgICAgICAgICAgX3RoaXM1LnNldENhcHRpb24oY2FwdGlvblRleHQsIGltYWdlV2lkdGgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzNS5pc0FuaW1hdGluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgX3RoaXM1LnNldENhcHRpb24oY2FwdGlvblRleHQsIGltYWdlV2lkdGgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF90aGlzNS5vcHRpb25zLmFkZGl0aW9uYWxIdG1sICYmICFfdGhpczUuZG9tTm9kZXMuYWRkaXRpb25hbEh0bWwpIHtcbiAgICAgICAgICBfdGhpczUuZG9tTm9kZXMuYWRkaXRpb25hbEh0bWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICAgICAgICAgIF90aGlzNS5kb21Ob2Rlcy5hZGRpdGlvbmFsSHRtbC5jbGFzc0xpc3QuYWRkKCdzbC1hZGRpdGlvbmFsLWh0bWwnKTtcblxuICAgICAgICAgIF90aGlzNS5kb21Ob2Rlcy5hZGRpdGlvbmFsSHRtbC5pbm5lckhUTUwgPSBfdGhpczUub3B0aW9ucy5hZGRpdGlvbmFsSHRtbDtcblxuICAgICAgICAgIF90aGlzNS5kb21Ob2Rlcy5pbWFnZS5hcHBlbmRDaGlsZChfdGhpczUuZG9tTm9kZXMuYWRkaXRpb25hbEh0bWwpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiem9vbVBhbkVsZW1lbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gem9vbVBhbkVsZW1lbnQodGFyZ2V0T2Zmc2V0WCwgdGFyZ2V0T2Zmc2V0WSwgdGFyZ2V0U2NhbGUpIHtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlLnN0eWxlW3RoaXMudHJhbnNpdGlvblByZWZpeCArICd0cmFuc2Zvcm0nXSA9ICd0cmFuc2xhdGUoJyArIHRhcmdldE9mZnNldFggKyAnLCcgKyB0YXJnZXRPZmZzZXRZICsgJykgc2NhbGUoJyArIHRhcmdldFNjYWxlICsgJyknO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJtaW5NYXhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbWluTWF4KHZhbHVlLCBtaW4sIG1heCkge1xuICAgICAgcmV0dXJuIHZhbHVlIDwgbWluID8gbWluIDogdmFsdWUgPiBtYXggPyBtYXggOiB2YWx1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0Wm9vbURhdGFcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0Wm9vbURhdGEoaW5pdGlhbFNjYWxlLCB0YXJnZXRPZmZzZXRYLCB0YXJnZXRPZmZzZXRZKSB7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5kYXRhc2V0LnNjYWxlID0gaW5pdGlhbFNjYWxlO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVYID0gdGFyZ2V0T2Zmc2V0WDtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlLmRhdGFzZXQudHJhbnNsYXRlWSA9IHRhcmdldE9mZnNldFk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhc2hjaGFuZ2VIYW5kbGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhc2hjaGFuZ2VIYW5kbGVyKCkge1xuICAgICAgaWYgKHRoaXMuaXNPcGVuICYmIHRoaXMuaGFzaCA9PT0gdGhpcy5pbml0aWFsTG9jYXRpb25IYXNoKSB7XG4gICAgICAgIHRoaXMuaGFzaFJlc2V0ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImFkZEV2ZW50c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRFdmVudHMoKSB7XG4gICAgICB2YXIgX3RoaXM2ID0gdGhpcztcblxuICAgICAgLy8gcmVzaXplL3Jlc3BvbnNpdmVcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csICdyZXNpemUuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAvL3RoaXMuYWRqdXN0SW1hZ2UuYmluZCh0aGlzKVxuICAgICAgICBpZiAoX3RoaXM2LmlzT3Blbikge1xuICAgICAgICAgIF90aGlzNi5hZGp1c3RJbWFnZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmRvbU5vZGVzLmNsb3NlQnV0dG9uLCBbJ2NsaWNrLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAndG91Y2hzdGFydC4nICsgdGhpcy5ldmVudE5hbWVzcGFjZV0sIHRoaXMuY2xvc2UuYmluZCh0aGlzKSk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaGlzdG9yeSkge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpczYuYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csICdoYXNoY2hhbmdlLicgKyBfdGhpczYuZXZlbnROYW1lc3BhY2UsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgaWYgKF90aGlzNi5pc09wZW4pIHtcbiAgICAgICAgICAgICAgX3RoaXM2Lmhhc2hjaGFuZ2VIYW5kbGVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sIDQwKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHRoaXMuZG9tTm9kZXMubmF2aWdhdGlvbi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYnV0dG9uJyksICdjbGljay4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmICghZXZlbnQuY3VycmVudFRhcmdldC50YWdOYW1lLm1hdGNoKC9idXR0b24vaSkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVEaWZmID0gMDtcblxuICAgICAgICBfdGhpczYubG9hZEltYWdlKGV2ZW50LmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzbC1uZXh0JykgPyAxIDogLTEpO1xuICAgICAgfSk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2Nyb2xsWm9vbSkge1xuICAgICAgICB2YXIgc2NhbGUgPSAxO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5kb21Ob2Rlcy5pbWFnZSwgWydtb3VzZXdoZWVsJywgJ0RPTU1vdXNlU2Nyb2xsJ10sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLm1vdXNlZG93biB8fCBfdGhpczYuaXNBbmltYXRpbmcgfHwgX3RoaXM2LmlzQ2xvc2luZyB8fCAhX3RoaXM2LmlzT3Blbikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0ID09IDApIHtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0ID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmRvbU5vZGVzLmltYWdlKS5oZWlnaHQ7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lcldpZHRoID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmRvbU5vZGVzLmltYWdlKS53aWR0aDtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nSGVpZ2h0ID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmN1cnJlbnRJbWFnZSkuaGVpZ2h0O1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLndpZHRoO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRYID0gX3RoaXM2LmRvbU5vZGVzLmltYWdlLm9mZnNldExlZnQ7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lck9mZnNldFkgPSBfdGhpczYuZG9tTm9kZXMuaW1hZ2Uub2Zmc2V0VG9wO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCA9IHBhcnNlRmxvYXQoX3RoaXM2LmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVgpO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSA9IHBhcnNlRmxvYXQoX3RoaXM2LmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgdmFyIGRlbHRhID0gZXZlbnQuZGVsdGEgfHwgZXZlbnQud2hlZWxEZWx0YTtcblxuICAgICAgICAgIGlmIChkZWx0YSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvL3dlIGFyZSBvbiBmaXJlZm94XG4gICAgICAgICAgICBkZWx0YSA9IGV2ZW50LmRldGFpbDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkZWx0YSA9IE1hdGgubWF4KC0xLCBNYXRoLm1pbigxLCBkZWx0YSkpOyAvLyBjYXAgdGhlIGRlbHRhIHRvIFstMSwxXSBmb3IgY3Jvc3MgYnJvd3NlciBjb25zaXN0ZW5jeVxuICAgICAgICAgIC8vIGFwcGx5IHpvb21cblxuICAgICAgICAgIHNjYWxlICs9IGRlbHRhICogX3RoaXM2Lm9wdGlvbnMuc2Nyb2xsWm9vbUZhY3RvciAqIHNjYWxlO1xuICAgICAgICAgIHNjYWxlID0gTWF0aC5tYXgoMSwgTWF0aC5taW4oX3RoaXM2Lm9wdGlvbnMubWF4Wm9vbSwgc2NhbGUpKTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlID0gc2NhbGU7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5waW5jaE9mZnNldFggPSBldmVudC5wYWdlWDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBpbmNoT2Zmc2V0WSA9IGV2ZW50LnBhZ2VZO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYID0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCkgLyAyO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZID0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nSGVpZ2h0ICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0KSAvIDI7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zY2FsZURpZmZlcmVuY2UgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGU7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPD0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCA/IDAgOiBfdGhpczYubWluTWF4KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFggLSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5waW5jaE9mZnNldFggLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lck9mZnNldFggLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lcldpZHRoIC8gMiAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFgpIC8gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnNjYWxlRGlmZmVyZW5jZSkgKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnNjYWxlRGlmZmVyZW5jZSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFggKiAtMSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFgpO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nSGVpZ2h0ICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA8PSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCA/IDAgOiBfdGhpczYubWluTWF4KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkgLSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5waW5jaE9mZnNldFkgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lck9mZnNldFkgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCAvIDIgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZKSAvIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zY2FsZURpZmZlcmVuY2UpICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zY2FsZURpZmZlcmVuY2UsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZICogLTEsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZKTtcblxuICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFggKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSk7XG5cbiAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA+IDEpIHtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgaWYgKCFfdGhpczYuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS5vcGFjaXR5ICYmIF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLmRpc3BsYXkgIT09ICdub25lJykge1xuICAgICAgICAgICAgICBfdGhpczYuZmFkZU91dChfdGhpczYuZG9tTm9kZXMuY2FwdGlvbiwgX3RoaXM2Lm9wdGlvbnMuZmFkZVNwZWVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlID09PSAxKSB7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgaWYgKF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykge1xuICAgICAgICAgICAgICAgIF90aGlzNi5mYWRlSW4oX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24sIF90aGlzNi5vcHRpb25zLmZhZGVTcGVlZCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUGluY2hEaXN0YW5jZSA9IG51bGw7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNhcHR1cmUgPSBmYWxzZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQaW5jaERpc3RhbmNlID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRQaW5jaERpc3RhbmNlO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZTtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFk7XG5cbiAgICAgICAgICBfdGhpczYuc2V0Wm9vbURhdGEoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkpO1xuXG4gICAgICAgICAgX3RoaXM2Lnpvb21QYW5FbGVtZW50KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmRvbU5vZGVzLmltYWdlLCBbJ3RvdWNoc3RhcnQuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdtb3VzZWRvd24uJyArIHRoaXMuZXZlbnROYW1lc3BhY2VdLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldC50YWdOYW1lID09PSAnQScgJiYgZXZlbnQudHlwZSA9PT0gJ3RvdWNoc3RhcnQnKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ21vdXNlZG93bicpIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYID0gZXZlbnQuY2xpZW50WDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgPSBfdGhpczYuZ2V0RGltZW5zaW9ucyhfdGhpczYuZG9tTm9kZXMuaW1hZ2UpLmhlaWdodDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lcldpZHRoID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmRvbU5vZGVzLmltYWdlKS53aWR0aDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLmhlaWdodDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ1dpZHRoID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmN1cnJlbnRJbWFnZSkud2lkdGg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRYID0gX3RoaXM2LmRvbU5vZGVzLmltYWdlLm9mZnNldExlZnQ7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRZID0gX3RoaXM2LmRvbU5vZGVzLmltYWdlLm9mZnNldFRvcDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYID0gcGFyc2VGbG9hdChfdGhpczYuY3VycmVudEltYWdlLmRhdGFzZXQudHJhbnNsYXRlWCk7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSA9IHBhcnNlRmxvYXQoX3RoaXM2LmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVkpO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY2FwdHVyZSA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID0gZXZlbnQudG91Y2hlcy5sZW5ndGg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFggPSBldmVudC50b3VjaGVzWzBdLmNsaWVudFg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkgPSBldmVudC50b3VjaGVzWzBdLmNsaWVudFk7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgPSBfdGhpczYuZ2V0RGltZW5zaW9ucyhfdGhpczYuZG9tTm9kZXMuaW1hZ2UpLmhlaWdodDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lcldpZHRoID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmRvbU5vZGVzLmltYWdlKS53aWR0aDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5jdXJyZW50SW1hZ2UpLmhlaWdodDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ1dpZHRoID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmN1cnJlbnRJbWFnZSkud2lkdGg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRYID0gX3RoaXM2LmRvbU5vZGVzLmltYWdlLm9mZnNldExlZnQ7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRZID0gX3RoaXM2LmRvbU5vZGVzLmltYWdlLm9mZnNldFRvcDtcblxuICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRvdWNoQ291bnQgPT09IDEpXG4gICAgICAgICAgICAvKiBTaW5nbGUgdG91Y2ggKi9cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgaWYgKCFfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmRvdWJsZVRhcHBlZCkge1xuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuZG91YmxlVGFwcGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuZG91YmxlVGFwcGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSwgMzAwKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpczYuY3VycmVudEltYWdlLmNsYXNzTGlzdC5hZGQoJ3NsLXRyYW5zaXRpb24nKTtcblxuICAgICAgICAgICAgICAgIGlmICghX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy56b29tZWQpIHtcbiAgICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlID0gX3RoaXM2Lm9wdGlvbnMuZG91YmxlVGFwWm9vbTtcblxuICAgICAgICAgICAgICAgICAgX3RoaXM2LnNldFpvb21EYXRhKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlLCAwLCAwKTtcblxuICAgICAgICAgICAgICAgICAgX3RoaXM2Lnpvb21QYW5FbGVtZW50KDAgKyBcInB4XCIsIDAgKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlKTtcblxuICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpczYuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS5vcGFjaXR5ICYmIF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLmRpc3BsYXkgIT09ICdub25lJykge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczYuZmFkZU91dChfdGhpczYuZG9tTm9kZXMuY2FwdGlvbiwgX3RoaXM2Lm9wdGlvbnMuZmFkZVNwZWVkKTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy56b29tZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9IDE7XG5cbiAgICAgICAgICAgICAgICAgIF90aGlzNi5zZXRab29tRGF0YShfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSwgMCwgMCk7XG5cbiAgICAgICAgICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudCgwICsgXCJweFwiLCAwICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSk7XG5cbiAgICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICBpZiAoX3RoaXM2LmN1cnJlbnRJbWFnZSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczYuY3VycmVudEltYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ3NsLXRyYW5zaXRpb24nKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCAyMDApO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFggPSBwYXJzZUZsb2F0KF90aGlzNi5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVYKTtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSA9IHBhcnNlRmxvYXQoX3RoaXM2LmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVkpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRvdWNoQ291bnQgPT09IDIpXG4gICAgICAgICAgICAvKiBQaW5jaCAqL1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WDIgPSBldmVudC50b3VjaGVzWzFdLmNsaWVudFg7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZMiA9IGV2ZW50LnRvdWNoZXNbMV0uY2xpZW50WTtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCA9IHBhcnNlRmxvYXQoX3RoaXM2LmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVgpO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZID0gcGFyc2VGbG9hdChfdGhpczYuY3VycmVudEltYWdlLmRhdGFzZXQudHJhbnNsYXRlWSk7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucGluY2hPZmZzZXRYID0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYICsgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFgyKSAvIDI7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucGluY2hPZmZzZXRZID0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZICsgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkyKSAvIDI7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBpbmNoRGlzdGFuY2UgPSBNYXRoLnNxcnQoKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFgyKSAqIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WCAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYMikgKyAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WTIpICogKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkyKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNhcHR1cmUgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubW91c2Vkb3duKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgICBpZiAoX3RoaXM2LnRyYW5zaXRpb25DYXBhYmxlKSB7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWFnZUxlZnQgPSBwYXJzZUludChfdGhpczYuZG9tTm9kZXMuaW1hZ2Uuc3R5bGUubGVmdCwgMTApO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5tb3VzZWRvd24gPSB0cnVlO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZiA9IDA7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVZRGlmZiA9IDA7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVTdGFydCA9IGV2ZW50LnBhZ2VYIHx8IGV2ZW50LnRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVZU3RhcnQgPSBldmVudC5wYWdlWSB8fCBldmVudC50b3VjaGVzWzBdLnBhZ2VZO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmRvbU5vZGVzLmltYWdlLCBbJ3RvdWNobW92ZS4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ21vdXNlbW92ZS4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ01TUG9pbnRlck1vdmUnXSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmICghX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5tb3VzZWRvd24pIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChldmVudC50eXBlID09PSAndG91Y2htb3ZlJykge1xuICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNhcHR1cmUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WCA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRZID0gZXZlbnQudG91Y2hlc1swXS5jbGllbnRZO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudG91Y2hDb3VudCA9IGV2ZW50LnRvdWNoZXMubGVuZ3RoO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudG91Y2htb3ZlQ291bnQrKztcblxuICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRvdWNoQ291bnQgPiAxKVxuICAgICAgICAgICAgLyogUGluY2ggKi9cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WDIgPSBldmVudC50b3VjaGVzWzFdLmNsaWVudFg7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFkyID0gZXZlbnQudG91Y2hlc1sxXS5jbGllbnRZO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFBpbmNoRGlzdGFuY2UgPSBNYXRoLnNxcnQoKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFggLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRYMikgKiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WCAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFgyKSArIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WTIpICogKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFkgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRZMikpO1xuXG4gICAgICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQaW5jaERpc3RhbmNlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUGluY2hEaXN0YW5jZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0UGluY2hEaXN0YW5jZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChNYXRoLmFicyhfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQaW5jaERpc3RhbmNlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRQaW5jaERpc3RhbmNlKSA+PSAxKSB7XG4gICAgICAgICAgICAgICAgLyogSW5pdGlhbGl6ZSBoZWxwZXJzICovXG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA9IF90aGlzNi5taW5NYXgoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRQaW5jaERpc3RhbmNlIC8gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUGluY2hEaXN0YW5jZSAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlLCAxLCBfdGhpczYub3B0aW9ucy5tYXhab29tKTtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WCA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ1dpZHRoICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGgpIC8gMjtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCkgLyAyO1xuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlO1xuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIDw9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyV2lkdGggPyAwIDogX3RoaXM2Lm1pbk1heChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYIC0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucGluY2hPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRYIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCAvIDIgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYKSAvIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zY2FsZURpZmZlcmVuY2UpICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zY2FsZURpZmZlcmVuY2UsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYICogLTEsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYKTtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPD0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgPyAwIDogX3RoaXM2Lm1pbk1heChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZIC0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucGluY2hPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJPZmZzZXRZIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgLyAyIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WSkgLyAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlKSAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc2NhbGVEaWZmZXJlbmNlLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSAqIC0xLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSk7XG5cbiAgICAgICAgICAgICAgICBfdGhpczYuem9vbVBhbkVsZW1lbnQoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkgKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUpO1xuXG4gICAgICAgICAgICAgICAgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPiAxKSB7XG4gICAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnpvb21lZCA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICAgIGlmICghX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUub3BhY2l0eSAmJiBfdGhpczYuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXM2LmZhZGVPdXQoX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24sIF90aGlzNi5vcHRpb25zLmZhZGVTcGVlZCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUGluY2hEaXN0YW5jZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0UGluY2hEaXN0YW5jZTtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGU7XG4gICAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WDtcbiAgICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFggPSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lcldpZHRoKSAvIDI7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSA9IChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ0hlaWdodCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCkgLyAyO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPD0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCA/IDAgOiBfdGhpczYubWluTWF4KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFggLSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFggLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYKSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFggKiAtMSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFgpO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdIZWlnaHQgKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIDw9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0ID8gMCA6IF90aGlzNi5taW5NYXgoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WSAtIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkpLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSAqIC0xLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WSk7XG5cbiAgICAgICAgICAgIGlmIChNYXRoLmFicyhfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFgpID09PSBNYXRoLmFicyhfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmxpbWl0T2Zmc2V0WCkpIHtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WDtcbiAgICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFggPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRYO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZKSA9PT0gTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkpKSB7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbE9mZnNldFkgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFk7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX3RoaXM2LnNldFpvb21EYXRhKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFgsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSk7XG5cbiAgICAgICAgICAgIF90aGlzNi56b29tUGFuRWxlbWVudChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFggKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8qIE1vdXNlIE1vdmUgaW1wbGVtZW50YXRpb24gKi9cblxuXG4gICAgICAgIGlmIChldmVudC50eXBlID09PSAnbW91c2Vtb3ZlJyAmJiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLm1vdXNlZG93bikge1xuICAgICAgICAgIGlmIChldmVudC50eXBlID09ICd0b3VjaG1vdmUnKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNhcHR1cmUgPT09IGZhbHNlKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WCA9IGV2ZW50LmNsaWVudFg7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYID0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nV2lkdGggKiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlIC0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCkgLyAyO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRZID0gKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nSGVpZ2h0ICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSAtIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVySGVpZ2h0KSAvIDI7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbWdXaWR0aCAqIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0U2NhbGUgPD0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCA/IDAgOiBfdGhpczYubWluTWF4KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFggLSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFggLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRYKSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFggKiAtMSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFgpO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WSA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nSGVpZ2h0ICogX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRTY2FsZSA8PSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lckhlaWdodCA/IDAgOiBfdGhpczYubWluTWF4KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMucG9pbnRlck9mZnNldFkgLSAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZKSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkgKiAtMSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkpO1xuXG4gICAgICAgICAgaWYgKE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCkgPT09IE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubGltaXRPZmZzZXRYKSkge1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsT2Zmc2V0WCA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WDtcbiAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5wb2ludGVyT2Zmc2V0WDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZKSA9PT0gTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5saW1pdE9mZnNldFkpKSB7XG4gICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxPZmZzZXRZID0gX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZO1xuICAgICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsUG9pbnRlck9mZnNldFkgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnBvaW50ZXJPZmZzZXRZO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF90aGlzNi5zZXRab29tRGF0YShfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRYLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldE9mZnNldFkpO1xuXG4gICAgICAgICAgX3RoaXM2Lnpvb21QYW5FbGVtZW50KF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCArIFwicHhcIiwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZICsgXCJweFwiLCBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnRhcmdldFNjYWxlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy56b29tZWQpIHtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRW5kID0gZXZlbnQucGFnZVggfHwgZXZlbnQudG91Y2hlc1swXS5wYWdlWDtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlWUVuZCA9IGV2ZW50LnBhZ2VZIHx8IGV2ZW50LnRvdWNoZXNbMF0ucGFnZVk7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZURpZmYgPSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlU3RhcnQgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRW5kO1xuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVZRGlmZiA9IF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVZU3RhcnQgLSBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlWUVuZDtcblxuICAgICAgICAgIGlmIChfdGhpczYub3B0aW9ucy5hbmltYXRpb25TbGlkZSkge1xuICAgICAgICAgICAgX3RoaXM2LnNsaWRlKDAsIC1fdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZiArICdweCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5kb21Ob2Rlcy5pbWFnZSwgWyd0b3VjaGVuZC4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ21vdXNldXAuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICd0b3VjaGNhbmNlbC4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ21vdXNlbGVhdmUuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdwb2ludGVydXAnLCAncG9pbnRlcmNhbmNlbCcsICdNU1BvaW50ZXJVcCcsICdNU1BvaW50ZXJDYW5jZWwnXSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChfdGhpczYuaXNUb3VjaERldmljZSAmJiBldmVudC50eXBlID09PSAndG91Y2hlbmQnKSB7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID0gZXZlbnQudG91Y2hlcy5sZW5ndGg7XG5cbiAgICAgICAgICBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID09PSAwKVxuICAgICAgICAgICAgLyogTm8gdG91Y2ggKi9cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgLyogU2V0IGF0dHJpYnV0ZXMgKi9cbiAgICAgICAgICAgICAgaWYgKF90aGlzNi5jdXJyZW50SW1hZ2UpIHtcbiAgICAgICAgICAgICAgICBfdGhpczYuc2V0Wm9vbURhdGEoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMudGFyZ2V0T2Zmc2V0WCwgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50YXJnZXRPZmZzZXRZKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9PT0gMSkge1xuICAgICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICBpZiAoX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7XG4gICAgICAgICAgICAgICAgICBfdGhpczYuZmFkZUluKF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLCBfdGhpczYub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBpbmNoRGlzdGFuY2UgPSBudWxsO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNhcHR1cmUgPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID09PSAxKVxuICAgICAgICAgICAgLyogU2luZ2xlIHRvdWNoICovXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRYID0gZXZlbnQudG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WSA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy50b3VjaENvdW50ID4gMSlcbiAgICAgICAgICAgIC8qIFBpbmNoICovXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBpbmNoRGlzdGFuY2UgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMubW91c2Vkb3duKSB7XG4gICAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5tb3VzZWRvd24gPSBmYWxzZTtcbiAgICAgICAgICB2YXIgcG9zc2libGVEaXIgPSB0cnVlO1xuXG4gICAgICAgICAgaWYgKCFfdGhpczYub3B0aW9ucy5sb29wKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXM2LmN1cnJlbnRJbWFnZUluZGV4ID09PSAwICYmIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVEaWZmIDwgMCkge1xuICAgICAgICAgICAgICBwb3NzaWJsZURpciA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoX3RoaXM2LmN1cnJlbnRJbWFnZUluZGV4ID49IF90aGlzNi5yZWxhdGVkRWxlbWVudHMubGVuZ3RoIC0gMSAmJiBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLnN3aXBlRGlmZiA+IDApIHtcbiAgICAgICAgICAgICAgcG9zc2libGVEaXIgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZURpZmYpID4gX3RoaXM2Lm9wdGlvbnMuc3dpcGVUb2xlcmFuY2UgJiYgcG9zc2libGVEaXIpIHtcbiAgICAgICAgICAgIF90aGlzNi5sb2FkSW1hZ2UoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZURpZmYgPiAwID8gMSA6IC0xKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNi5vcHRpb25zLmFuaW1hdGlvblNsaWRlKSB7XG4gICAgICAgICAgICBfdGhpczYuc2xpZGUoX3RoaXM2Lm9wdGlvbnMuYW5pbWF0aW9uU3BlZWQgLyAxMDAwLCAwICsgJ3B4Jyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKF90aGlzNi5vcHRpb25zLnN3aXBlQ2xvc2UgJiYgTWF0aC5hYnMoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5zd2lwZVlEaWZmKSA+IDUwICYmIE1hdGguYWJzKF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuc3dpcGVEaWZmKSA8IF90aGlzNi5vcHRpb25zLnN3aXBlVG9sZXJhbmNlKSB7XG4gICAgICAgICAgICBfdGhpczYuY2xvc2UoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHRoaXMuZG9tTm9kZXMuaW1hZ2UsIFsnZGJsY2xpY2snXSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChfdGhpczYuaXNUb3VjaERldmljZSkgcmV0dXJuO1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxQb2ludGVyT2Zmc2V0WCA9IGV2ZW50LmNsaWVudFg7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFBvaW50ZXJPZmZzZXRZID0gZXZlbnQuY2xpZW50WTtcbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJIZWlnaHQgPSBfdGhpczYuZ2V0RGltZW5zaW9ucyhfdGhpczYuZG9tTm9kZXMuaW1hZ2UpLmhlaWdodDtcbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jb250YWluZXJXaWR0aCA9IF90aGlzNi5nZXREaW1lbnNpb25zKF90aGlzNi5kb21Ob2Rlcy5pbWFnZSkud2lkdGg7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW1nSGVpZ2h0ID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmN1cnJlbnRJbWFnZSkuaGVpZ2h0O1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmltZ1dpZHRoID0gX3RoaXM2LmdldERpbWVuc2lvbnMoX3RoaXM2LmN1cnJlbnRJbWFnZSkud2lkdGg7XG4gICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuY29udGFpbmVyT2Zmc2V0WCA9IF90aGlzNi5kb21Ob2Rlcy5pbWFnZS5vZmZzZXRMZWZ0O1xuICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmNvbnRhaW5lck9mZnNldFkgPSBfdGhpczYuZG9tTm9kZXMuaW1hZ2Uub2Zmc2V0VG9wO1xuXG4gICAgICAgIF90aGlzNi5jdXJyZW50SW1hZ2UuY2xhc3NMaXN0LmFkZCgnc2wtdHJhbnNpdGlvbicpO1xuXG4gICAgICAgIGlmICghX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy56b29tZWQpIHtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9IF90aGlzNi5vcHRpb25zLmRvdWJsZVRhcFpvb207XG5cbiAgICAgICAgICBfdGhpczYuc2V0Wm9vbURhdGEoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUsIDAsIDApO1xuXG4gICAgICAgICAgX3RoaXM2Lnpvb21QYW5FbGVtZW50KDAgKyBcInB4XCIsIDAgKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlKTtcblxuICAgICAgICAgIGlmICghX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUub3BhY2l0eSAmJiBfdGhpczYuZG9tTm9kZXMuY2FwdGlvbi5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScpIHtcbiAgICAgICAgICAgIF90aGlzNi5mYWRlT3V0KF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLCBfdGhpczYub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczYuY29udHJvbENvb3JkaW5hdGVzLmluaXRpYWxTY2FsZSA9IDE7XG5cbiAgICAgICAgICBfdGhpczYuc2V0Wm9vbURhdGEoX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5pbml0aWFsU2NhbGUsIDAsIDApO1xuXG4gICAgICAgICAgX3RoaXM2Lnpvb21QYW5FbGVtZW50KDAgKyBcInB4XCIsIDAgKyBcInB4XCIsIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuaW5pdGlhbFNjYWxlKTtcblxuICAgICAgICAgIF90aGlzNi5jb250cm9sQ29vcmRpbmF0ZXMuem9vbWVkID0gZmFsc2U7XG5cbiAgICAgICAgICBpZiAoX3RoaXM2LmRvbU5vZGVzLmNhcHRpb24uc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7XG4gICAgICAgICAgICBfdGhpczYuZmFkZUluKF90aGlzNi5kb21Ob2Rlcy5jYXB0aW9uLCBfdGhpczYub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGlmIChfdGhpczYuY3VycmVudEltYWdlKSB7XG4gICAgICAgICAgICBfdGhpczYuY3VycmVudEltYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ3NsLXRyYW5zaXRpb24nKTtcblxuICAgICAgICAgICAgX3RoaXM2LmN1cnJlbnRJbWFnZS5zdHlsZVtfdGhpczYudHJhbnNpdGlvblByZWZpeCArICd0cmFuc2Zvcm0tb3JpZ2luJ10gPSBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgX3RoaXM2LmNvbnRyb2xDb29yZGluYXRlcy5jYXB0dXJlID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldERpbWVuc2lvbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RGltZW5zaW9ucyhlbGVtZW50KSB7XG4gICAgICB2YXIgc3R5bGVzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCksXG4gICAgICAgICAgaGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQsXG4gICAgICAgICAgd2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoLFxuICAgICAgICAgIGJvcmRlclRvcFdpZHRoID0gcGFyc2VGbG9hdChzdHlsZXMuYm9yZGVyVG9wV2lkdGgpLFxuICAgICAgICAgIGJvcmRlckJvdHRvbVdpZHRoID0gcGFyc2VGbG9hdChzdHlsZXMuYm9yZGVyQm90dG9tV2lkdGgpLFxuICAgICAgICAgIHBhZGRpbmdUb3AgPSBwYXJzZUZsb2F0KHN0eWxlcy5wYWRkaW5nVG9wKSxcbiAgICAgICAgICBwYWRkaW5nQm90dG9tID0gcGFyc2VGbG9hdChzdHlsZXMucGFkZGluZ0JvdHRvbSksXG4gICAgICAgICAgYm9yZGVyTGVmdFdpZHRoID0gcGFyc2VGbG9hdChzdHlsZXMuYm9yZGVyTGVmdFdpZHRoKSxcbiAgICAgICAgICBib3JkZXJSaWdodFdpZHRoID0gcGFyc2VGbG9hdChzdHlsZXMuYm9yZGVyUmlnaHRXaWR0aCksXG4gICAgICAgICAgcGFkZGluZ0xlZnQgPSBwYXJzZUZsb2F0KHN0eWxlcy5wYWRkaW5nTGVmdCksXG4gICAgICAgICAgcGFkZGluZ1JpZ2h0ID0gcGFyc2VGbG9hdChzdHlsZXMucGFkZGluZ1JpZ2h0KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGhlaWdodDogaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGggLSBib3JkZXJUb3BXaWR0aCAtIHBhZGRpbmdUb3AgLSBwYWRkaW5nQm90dG9tLFxuICAgICAgICB3aWR0aDogd2lkdGggLSBib3JkZXJMZWZ0V2lkdGggLSBib3JkZXJSaWdodFdpZHRoIC0gcGFkZGluZ0xlZnQgLSBwYWRkaW5nUmlnaHRcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVwZGF0ZUhhc2hcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlSGFzaCgpIHtcbiAgICAgIHZhciBuZXdIYXNoID0gJ3BpZD0nICsgKHRoaXMuY3VycmVudEltYWdlSW5kZXggKyAxKSxcbiAgICAgICAgICBuZXdVUkwgPSB3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdCgnIycpWzBdICsgJyMnICsgbmV3SGFzaDtcbiAgICAgIHRoaXMuaGFzaFJlc2V0ZWQgPSBmYWxzZTtcblxuICAgICAgaWYgKHRoaXMucHVzaFN0YXRlU3VwcG9ydCkge1xuICAgICAgICB3aW5kb3cuaGlzdG9yeVt0aGlzLmhpc3RvcnlIYXNDaGFuZ2VzID8gJ3JlcGxhY2VTdGF0ZScgOiAncHVzaFN0YXRlJ10oJycsIGRvY3VtZW50LnRpdGxlLCBuZXdVUkwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gd2hhdCBpcyB0aGUgYnJvd3NlciB0YXJnZXQgb2YgdGhpcz9cbiAgICAgICAgaWYgKHRoaXMuaGlzdG9yeUhhc0NoYW5nZXMpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShuZXdVUkwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gbmV3SGFzaDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMuaGlzdG9yeUhhc0NoYW5nZXMpIHtcbiAgICAgICAgdGhpcy51cmxDaGFuZ2VkT25jZSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaGlzdG9yeUhhc0NoYW5nZXMgPSB0cnVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNldEhhc2hcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzZXRIYXNoKCkge1xuICAgICAgdGhpcy5oYXNoUmVzZXRlZCA9IHRydWU7XG5cbiAgICAgIGlmICh0aGlzLnVybENoYW5nZWRPbmNlKSB7XG4gICAgICAgIGhpc3RvcnkuYmFjaygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRoaXMucHVzaFN0YXRlU3VwcG9ydCkge1xuICAgICAgICAgIGhpc3RvcnkucHVzaFN0YXRlKCcnLCBkb2N1bWVudC50aXRsZSwgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgd2luZG93LmxvY2F0aW9uLnNlYXJjaCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICAgICAgfVxuICAgICAgfSAvL1xuICAgICAgLy9pbiBjYXNlIGFuIGhpc3Rvcnkgb3BlcmF0aW9uIGlzIHN0aWxsIHBlbmRpbmdcblxuXG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5oaXN0b3J5VXBkYXRlVGltZW91dCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVwZGF0ZVVSTFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVVUkwoKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5oaXN0b3J5VXBkYXRlVGltZW91dCk7XG5cbiAgICAgIGlmICghdGhpcy5oaXN0b3J5SGFzQ2hhbmdlcykge1xuICAgICAgICB0aGlzLnVwZGF0ZUhhc2goKTsgLy8gZmlyc3QgdGltZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5oaXN0b3J5VXBkYXRlVGltZW91dCA9IHNldFRpbWVvdXQodGhpcy51cGRhdGVIYXNoLmJpbmQodGhpcyksIDgwMCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldENhcHRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0Q2FwdGlvbihjYXB0aW9uVGV4dCwgaW1hZ2VXaWR0aCkge1xuICAgICAgdmFyIF90aGlzNyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY2FwdGlvbnMgJiYgY2FwdGlvblRleHQgJiYgY2FwdGlvblRleHQgIT09ICcnICYmIHR5cGVvZiBjYXB0aW9uVGV4dCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICB0aGlzLmhpZGUodGhpcy5kb21Ob2Rlcy5jYXB0aW9uKTtcbiAgICAgICAgdGhpcy5kb21Ob2Rlcy5jYXB0aW9uLnN0eWxlLndpZHRoID0gaW1hZ2VXaWR0aCArICdweCc7XG4gICAgICAgIHRoaXMuZG9tTm9kZXMuY2FwdGlvbi5pbm5lckhUTUwgPSBjYXB0aW9uVGV4dDtcbiAgICAgICAgdGhpcy5kb21Ob2Rlcy5pbWFnZS5hcHBlbmRDaGlsZCh0aGlzLmRvbU5vZGVzLmNhcHRpb24pO1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpczcuZmFkZUluKF90aGlzNy5kb21Ob2Rlcy5jYXB0aW9uLCBfdGhpczcub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgICB9LCB0aGlzLm9wdGlvbnMuY2FwdGlvbkRlbGF5KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2xpZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2xpZGUoc3BlZWQsIHBvcykge1xuICAgICAgaWYgKCF0aGlzLnRyYW5zaXRpb25DYXBhYmxlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRvbU5vZGVzLmltYWdlLnN0eWxlLmxlZnQgPSBwb3M7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZG9tTm9kZXMuaW1hZ2Uuc3R5bGVbdGhpcy50cmFuc2l0aW9uUHJlZml4ICsgJ3RyYW5zZm9ybSddID0gJ3RyYW5zbGF0ZVgoJyArIHBvcyArICcpJztcbiAgICAgIHRoaXMuZG9tTm9kZXMuaW1hZ2Uuc3R5bGVbdGhpcy50cmFuc2l0aW9uUHJlZml4ICsgJ3RyYW5zaXRpb24nXSA9IHRoaXMudHJhbnNpdGlvblByZWZpeCArICd0cmFuc2Zvcm0gJyArIHNwZWVkICsgJ3MgbGluZWFyJztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UmVsYXRlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZWxhdGVkKHJlbCkge1xuICAgICAgdmFyIGVsZW1zO1xuXG4gICAgICBpZiAocmVsICYmIHJlbCAhPT0gZmFsc2UgJiYgcmVsICE9PSAnbm9mb2xsb3cnKSB7XG4gICAgICAgIGVsZW1zID0gQXJyYXkuZnJvbSh0aGlzLmVsZW1lbnRzKS5maWx0ZXIoZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3JlbCcpID09PSByZWw7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbXMgPSB0aGlzLmVsZW1lbnRzO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZWxlbXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9wZW5JbWFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvcGVuSW1hZ2UoZWxlbWVudCkge1xuICAgICAgdmFyIF90aGlzOCA9IHRoaXM7XG5cbiAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3Nob3cuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5kaXNhYmxlU2Nyb2xsKSB7XG4gICAgICAgIHRoaXMuZ2xvYmFsU2Nyb2xsYmFyV2lkdGggPSB0aGlzLnRvZ2dsZVNjcm9sbGJhcignaGlkZScpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmh0bWxDbGFzcyAmJiB0aGlzLm9wdGlvbnMuaHRtbENsYXNzICE9PSAnJykge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdodG1sJykuY2xhc3NMaXN0LmFkZCh0aGlzLm9wdGlvbnMuaHRtbENsYXNzKTtcbiAgICAgIH1cblxuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmRvbU5vZGVzLndyYXBwZXIpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLmFwcGVuZENoaWxkKHRoaXMuZG9tTm9kZXMuaW1hZ2UpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLm92ZXJsYXkpIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmRvbU5vZGVzLm92ZXJsYXkpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnJlbGF0ZWRFbGVtZW50cyA9IHRoaXMuZ2V0UmVsYXRlZChlbGVtZW50LnJlbCk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd0NvdW50ZXIpIHtcbiAgICAgICAgaWYgKHRoaXMucmVsYXRlZEVsZW1lbnRzLmxlbmd0aCA9PSAxICYmIHRoaXMuZG9tTm9kZXMud3JhcHBlci5jb250YWlucyh0aGlzLmRvbU5vZGVzLmNvdW50ZXIpKSB7XG4gICAgICAgICAgdGhpcy5kb21Ob2Rlcy53cmFwcGVyLnJlbW92ZUNoaWxkKHRoaXMuZG9tTm9kZXMuY291bnRlcik7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5yZWxhdGVkRWxlbWVudHMubGVuZ3RoID4gMSAmJiAhdGhpcy5kb21Ob2Rlcy53cmFwcGVyLmNvbnRhaW5zKHRoaXMuZG9tTm9kZXMuY291bnRlcikpIHtcbiAgICAgICAgICB0aGlzLmRvbU5vZGVzLndyYXBwZXIuYXBwZW5kQ2hpbGQodGhpcy5kb21Ob2Rlcy5jb3VudGVyKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLmlzQW5pbWF0aW5nID0gdHJ1ZTtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlSW5kZXggPSB0aGlzLnJlbGF0ZWRFbGVtZW50cy5pbmRleE9mKGVsZW1lbnQpO1xuICAgICAgdmFyIHRhcmdldFVSTCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKHRoaXMub3B0aW9ucy5zb3VyY2VBdHRyKTtcbiAgICAgIHRoaXMuY3VycmVudEltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCB0YXJnZXRVUkwpO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UuZGF0YXNldC5zY2FsZSA9IDE7XG4gICAgICB0aGlzLmN1cnJlbnRJbWFnZS5kYXRhc2V0LnRyYW5zbGF0ZVggPSAwO1xuICAgICAgdGhpcy5jdXJyZW50SW1hZ2UuZGF0YXNldC50cmFuc2xhdGVZID0gMDtcblxuICAgICAgaWYgKHRoaXMubG9hZGVkSW1hZ2VzLmluZGV4T2YodGFyZ2V0VVJMKSA9PT0gLTEpIHtcbiAgICAgICAgdGhpcy5sb2FkZWRJbWFnZXMucHVzaCh0YXJnZXRVUkwpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmRvbU5vZGVzLmltYWdlLmlubmVySFRNTCA9ICcnO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5pbWFnZS5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJycpO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5pbWFnZS5hcHBlbmRDaGlsZCh0aGlzLmN1cnJlbnRJbWFnZSk7XG4gICAgICB0aGlzLmZhZGVJbih0aGlzLmRvbU5vZGVzLm92ZXJsYXksIHRoaXMub3B0aW9ucy5mYWRlU3BlZWQpO1xuICAgICAgdGhpcy5mYWRlSW4oW3RoaXMuZG9tTm9kZXMuY291bnRlciwgdGhpcy5kb21Ob2Rlcy5uYXZpZ2F0aW9uLCB0aGlzLmRvbU5vZGVzLmNsb3NlQnV0dG9uXSwgdGhpcy5vcHRpb25zLmZhZGVTcGVlZCk7XG4gICAgICB0aGlzLnNob3codGhpcy5kb21Ob2Rlcy5zcGlubmVyKTtcbiAgICAgIHRoaXMuZG9tTm9kZXMuY291bnRlci5xdWVyeVNlbGVjdG9yKCcuc2wtY3VycmVudCcpLmlubmVySFRNTCA9IHRoaXMuY3VycmVudEltYWdlSW5kZXggKyAxO1xuICAgICAgdGhpcy5kb21Ob2Rlcy5jb3VudGVyLnF1ZXJ5U2VsZWN0b3IoJy5zbC10b3RhbCcpLmlubmVySFRNTCA9IHRoaXMucmVsYXRlZEVsZW1lbnRzLmxlbmd0aDtcbiAgICAgIHRoaXMuYWRqdXN0SW1hZ2UoKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5wcmVsb2FkaW5nKSB7XG4gICAgICAgIHRoaXMucHJlbG9hZCgpO1xuICAgICAgfVxuXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnc2hvd24uJyArIF90aGlzOC5ldmVudE5hbWVzcGFjZSkpO1xuICAgICAgfSwgdGhpcy5vcHRpb25zLmFuaW1hdGlvblNwZWVkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yY2VGb2N1c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JjZUZvY3VzKCkge1xuICAgICAgdmFyIF90aGlzOSA9IHRoaXM7XG5cbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihkb2N1bWVudCwgJ2ZvY3VzaW4uJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKGRvY3VtZW50LCAnZm9jdXNpbi4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChkb2N1bWVudCAhPT0gZXZlbnQudGFyZ2V0ICYmIF90aGlzOS5kb21Ob2Rlcy53cmFwcGVyICE9PSBldmVudC50YXJnZXQgJiYgIV90aGlzOS5kb21Ob2Rlcy53cmFwcGVyLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcbiAgICAgICAgICBfdGhpczkuZG9tTm9kZXMud3JhcHBlci5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IC8vIHV0aWxpdHlcblxuICB9LCB7XG4gICAga2V5OiBcImFkZEV2ZW50TGlzdGVuZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihlbGVtZW50cywgZXZlbnRzLCBjYWxsYmFjaywgb3B0cykge1xuICAgICAgZWxlbWVudHMgPSB0aGlzLndyYXAoZWxlbWVudHMpO1xuICAgICAgZXZlbnRzID0gdGhpcy53cmFwKGV2ZW50cyk7XG5cbiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlbGVtZW50cyksXG4gICAgICAgICAgX3N0ZXA7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgICAgIGlmICghZWxlbWVudC5uYW1lc3BhY2VzKSB7XG4gICAgICAgICAgICBlbGVtZW50Lm5hbWVzcGFjZXMgPSB7fTtcbiAgICAgICAgICB9IC8vIHNhdmUgdGhlIG5hbWVzcGFjZXMgYWRkRXZlbnRMaXN0ZW5lciB0aGUgRE9NIGVsZW1lbnQgaXRzZWxmXG5cblxuICAgICAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZXZlbnRzKSxcbiAgICAgICAgICAgICAgX3N0ZXAyO1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgIHZhciBldmVudCA9IF9zdGVwMi52YWx1ZTtcbiAgICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IGZhbHNlO1xuICAgICAgICAgICAgICB2YXIgbmVlZHNQYXNzaXZlRml4ID0gWyd0b3VjaHN0YXJ0JywgJ3RvdWNobW92ZSddLmluZGV4T2YoZXZlbnQuc3BsaXQoJy4nKVswXSkgPj0gMDtcblxuICAgICAgICAgICAgICBpZiAobmVlZHNQYXNzaXZlRml4ICYmIHRoaXMuaXNQYXNzaXZlRXZlbnRzU3VwcG9ydGVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKF90eXBlb2Yob3B0aW9ucykgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICBvcHRpb25zLnBhc3NpdmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICBwYXNzaXZlOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGVsZW1lbnQubmFtZXNwYWNlc1tldmVudF0gPSBjYWxsYmFjaztcbiAgICAgICAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LnNwbGl0KCcuJylbMF0sIGNhbGxiYWNrLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpO1xuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IyLmYoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfaXRlcmF0b3IuZShlcnIpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgX2l0ZXJhdG9yLmYoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVtb3ZlRXZlbnRMaXN0ZW5lclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKGVsZW1lbnRzLCBldmVudHMpIHtcbiAgICAgIGVsZW1lbnRzID0gdGhpcy53cmFwKGVsZW1lbnRzKTtcbiAgICAgIGV2ZW50cyA9IHRoaXMud3JhcChldmVudHMpO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVsZW1lbnRzKSxcbiAgICAgICAgICBfc3RlcDM7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDMudmFsdWU7XG5cbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yNCA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGV2ZW50cyksXG4gICAgICAgICAgICAgIF9zdGVwNDtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjQucygpOyAhKF9zdGVwNCA9IF9pdGVyYXRvcjQubigpKS5kb25lOykge1xuICAgICAgICAgICAgICB2YXIgZXZlbnQgPSBfc3RlcDQudmFsdWU7XG5cbiAgICAgICAgICAgICAgaWYgKGVsZW1lbnQubmFtZXNwYWNlcyAmJiBlbGVtZW50Lm5hbWVzcGFjZXNbZXZlbnRdKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LnNwbGl0KCcuJylbMF0sIGVsZW1lbnQubmFtZXNwYWNlc1tldmVudF0pO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBlbGVtZW50Lm5hbWVzcGFjZXNbZXZlbnRdO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3I0LmUoZXJyKTtcbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgX2l0ZXJhdG9yNC5mKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBfaXRlcmF0b3IzLmYoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZmFkZU91dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmYWRlT3V0KGVsZW1lbnRzLCBkdXJhdGlvbiwgY2FsbGJhY2spIHtcbiAgICAgIHZhciBfdGhpczEwID0gdGhpcztcblxuICAgICAgZWxlbWVudHMgPSB0aGlzLndyYXAoZWxlbWVudHMpO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yNSA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVsZW1lbnRzKSxcbiAgICAgICAgICBfc3RlcDU7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yNS5zKCk7ICEoX3N0ZXA1ID0gX2l0ZXJhdG9yNS5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDUudmFsdWU7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gMTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9pdGVyYXRvcjUuZShlcnIpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgX2l0ZXJhdG9yNS5mKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXNGYWRlSW4gPSBmYWxzZTtcblxuICAgICAgdmFyIHN0ZXAgPSAxNi42NjY2NiAvIChkdXJhdGlvbiB8fCB0aGlzLm9wdGlvbnMuZmFkZVNwZWVkKSxcbiAgICAgICAgICBmYWRlID0gZnVuY3Rpb24gZmFkZSgpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRPcGFjaXR5ID0gcGFyc2VGbG9hdChlbGVtZW50c1swXS5zdHlsZS5vcGFjaXR5KTtcblxuICAgICAgICBpZiAoKGN1cnJlbnRPcGFjaXR5IC09IHN0ZXApIDwgMCkge1xuICAgICAgICAgIHZhciBfaXRlcmF0b3I2ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgICAgICBfc3RlcDY7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yIChfaXRlcmF0b3I2LnMoKTsgIShfc3RlcDYgPSBfaXRlcmF0b3I2Lm4oKSkuZG9uZTspIHtcbiAgICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDYudmFsdWU7XG4gICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiOyAvLyBlbGVtZW50LnN0eWxlLm9wYWNpdHkgPSAnJztcblxuICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLm9wYWNpdHkgPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yNi5lKGVycik7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjYuZigpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrLmNhbGwoX3RoaXMxMCwgZWxlbWVudHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBfaXRlcmF0b3I3ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgICAgICBfc3RlcDc7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yIChfaXRlcmF0b3I3LnMoKTsgIShfc3RlcDcgPSBfaXRlcmF0b3I3Lm4oKSkuZG9uZTspIHtcbiAgICAgICAgICAgICAgdmFyIF9lbGVtZW50ID0gX3N0ZXA3LnZhbHVlO1xuICAgICAgICAgICAgICBfZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gY3VycmVudE9wYWNpdHk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3I3LmUoZXJyKTtcbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgX2l0ZXJhdG9yNy5mKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZhZGUpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBmYWRlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZhZGVJblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmYWRlSW4oZWxlbWVudHMsIGR1cmF0aW9uLCBjYWxsYmFjaywgZGlzcGxheSkge1xuICAgICAgdmFyIF90aGlzMTEgPSB0aGlzO1xuXG4gICAgICBlbGVtZW50cyA9IHRoaXMud3JhcChlbGVtZW50cyk7XG5cbiAgICAgIHZhciBfaXRlcmF0b3I4ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgIF9zdGVwODtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yIChfaXRlcmF0b3I4LnMoKTsgIShfc3RlcDggPSBfaXRlcmF0b3I4Lm4oKSkuZG9uZTspIHtcbiAgICAgICAgICB2YXIgZWxlbWVudCA9IF9zdGVwOC52YWx1ZTtcbiAgICAgICAgICBlbGVtZW50LnN0eWxlLm9wYWNpdHkgPSAwO1xuICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IGRpc3BsYXkgfHwgXCJibG9ja1wiO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2l0ZXJhdG9yOC5lKGVycik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBfaXRlcmF0b3I4LmYoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pc0ZhZGVJbiA9IHRydWU7XG5cbiAgICAgIHZhciBvcGFjaXR5VGFyZ2V0ID0gcGFyc2VGbG9hdChlbGVtZW50c1swXS5kYXRhc2V0Lm9wYWNpdHlUYXJnZXQgfHwgMSksXG4gICAgICAgICAgc3RlcCA9IDE2LjY2NjY2ICogb3BhY2l0eVRhcmdldCAvIChkdXJhdGlvbiB8fCB0aGlzLm9wdGlvbnMuZmFkZVNwZWVkKSxcbiAgICAgICAgICBmYWRlID0gZnVuY3Rpb24gZmFkZSgpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRPcGFjaXR5ID0gcGFyc2VGbG9hdChlbGVtZW50c1swXS5zdHlsZS5vcGFjaXR5KTtcblxuICAgICAgICBpZiAoISgoY3VycmVudE9wYWNpdHkgKz0gc3RlcCkgPiBvcGFjaXR5VGFyZ2V0KSkge1xuICAgICAgICAgIHZhciBfaXRlcmF0b3I5ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgICAgICBfc3RlcDk7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yIChfaXRlcmF0b3I5LnMoKTsgIShfc3RlcDkgPSBfaXRlcmF0b3I5Lm4oKSkuZG9uZTspIHtcbiAgICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDkudmFsdWU7XG4gICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUub3BhY2l0eSA9IGN1cnJlbnRPcGFjaXR5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yOS5lKGVycik7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjkuZigpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghX3RoaXMxMS5pc0ZhZGVJbikgcmV0dXJuO1xuICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmYWRlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yMTAgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlbGVtZW50cyksXG4gICAgICAgICAgICAgIF9zdGVwMTA7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IxMC5zKCk7ICEoX3N0ZXAxMCA9IF9pdGVyYXRvcjEwLm4oKSkuZG9uZTspIHtcbiAgICAgICAgICAgICAgdmFyIF9lbGVtZW50MiA9IF9zdGVwMTAudmFsdWU7XG4gICAgICAgICAgICAgIF9lbGVtZW50Mi5zdHlsZS5vcGFjaXR5ID0gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IxMC5lKGVycik7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjEwLmYoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjay5jYWxsKF90aGlzMTEsIGVsZW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgZmFkZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoaWRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhpZGUoZWxlbWVudHMpIHtcbiAgICAgIGVsZW1lbnRzID0gdGhpcy53cmFwKGVsZW1lbnRzKTtcblxuICAgICAgdmFyIF9pdGVyYXRvcjExID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWxlbWVudHMpLFxuICAgICAgICAgIF9zdGVwMTE7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yMTEucygpOyAhKF9zdGVwMTEgPSBfaXRlcmF0b3IxMS5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDExLnZhbHVlO1xuXG4gICAgICAgICAgaWYgKGVsZW1lbnQuc3R5bGUuZGlzcGxheSAhPSAnbm9uZScpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuZGF0YXNldC5pbml0aWFsRGlzcGxheSA9IGVsZW1lbnQuc3R5bGUuZGlzcGxheTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfaXRlcmF0b3IxMS5lKGVycik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBfaXRlcmF0b3IxMS5mKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNob3dcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2hvdyhlbGVtZW50cywgZGlzcGxheSkge1xuICAgICAgZWxlbWVudHMgPSB0aGlzLndyYXAoZWxlbWVudHMpO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yMTIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlbGVtZW50cyksXG4gICAgICAgICAgX3N0ZXAxMjtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yIChfaXRlcmF0b3IxMi5zKCk7ICEoX3N0ZXAxMiA9IF9pdGVyYXRvcjEyLm4oKSkuZG9uZTspIHtcbiAgICAgICAgICB2YXIgZWxlbWVudCA9IF9zdGVwMTIudmFsdWU7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gZWxlbWVudC5kYXRhc2V0LmluaXRpYWxEaXNwbGF5IHx8IGRpc3BsYXkgfHwgJ2Jsb2NrJztcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9pdGVyYXRvcjEyLmUoZXJyKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIF9pdGVyYXRvcjEyLmYoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwid3JhcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB3cmFwKGlucHV0KSB7XG4gICAgICByZXR1cm4gdHlwZW9mIGlucHV0W1N5bWJvbC5pdGVyYXRvcl0gPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJyA/IGlucHV0IDogW2lucHV0XTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb24oZXZlbnRzLCBjYWxsYmFjaykge1xuICAgICAgZXZlbnRzID0gdGhpcy53cmFwKGV2ZW50cyk7XG5cbiAgICAgIHZhciBfaXRlcmF0b3IxMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuZWxlbWVudHMpLFxuICAgICAgICAgIF9zdGVwMTM7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAoX2l0ZXJhdG9yMTMucygpOyAhKF9zdGVwMTMgPSBfaXRlcmF0b3IxMy5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBfc3RlcDEzLnZhbHVlO1xuXG4gICAgICAgICAgaWYgKCFlbGVtZW50LmZ1bGx5TmFtZXNwYWNlZEV2ZW50cykge1xuICAgICAgICAgICAgZWxlbWVudC5mdWxseU5hbWVzcGFjZWRFdmVudHMgPSB7fTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yMTQgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihldmVudHMpLFxuICAgICAgICAgICAgICBfc3RlcDE0O1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMTQucygpOyAhKF9zdGVwMTQgPSBfaXRlcmF0b3IxNC5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgIHZhciBldmVudCA9IF9zdGVwMTQudmFsdWU7XG4gICAgICAgICAgICAgIGVsZW1lbnQuZnVsbHlOYW1lc3BhY2VkRXZlbnRzW2V2ZW50XSA9IGNhbGxiYWNrO1xuICAgICAgICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjE0LmUoZXJyKTtcbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgX2l0ZXJhdG9yMTQuZigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9pdGVyYXRvcjEzLmUoZXJyKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIF9pdGVyYXRvcjEzLmYoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9mZlwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvZmYoZXZlbnRzKSB7XG4gICAgICBldmVudHMgPSB0aGlzLndyYXAoZXZlbnRzKTtcblxuICAgICAgdmFyIF9pdGVyYXRvcjE1ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5lbGVtZW50cyksXG4gICAgICAgICAgX3N0ZXAxNTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yIChfaXRlcmF0b3IxNS5zKCk7ICEoX3N0ZXAxNSA9IF9pdGVyYXRvcjE1Lm4oKSkuZG9uZTspIHtcbiAgICAgICAgICB2YXIgZWxlbWVudCA9IF9zdGVwMTUudmFsdWU7XG5cbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yMTYgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihldmVudHMpLFxuICAgICAgICAgICAgICBfc3RlcDE2O1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMTYucygpOyAhKF9zdGVwMTYgPSBfaXRlcmF0b3IxNi5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgIHZhciBldmVudCA9IF9zdGVwMTYudmFsdWU7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBlbGVtZW50LmZ1bGx5TmFtZXNwYWNlZEV2ZW50cyAhPT0gJ3VuZGVmaW5lZCcgJiYgZXZlbnQgaW4gZWxlbWVudC5mdWxseU5hbWVzcGFjZWRFdmVudHMpIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGVsZW1lbnQuZnVsbHlOYW1lc3BhY2VkRXZlbnRzW2V2ZW50XSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjE2LmUoZXJyKTtcbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgX2l0ZXJhdG9yMTYuZigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9pdGVyYXRvcjE1LmUoZXJyKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIF9pdGVyYXRvcjE1LmYoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSAvLyBhcGlcblxuICB9LCB7XG4gICAga2V5OiBcIm9wZW5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlbihlbGVtKSB7XG4gICAgICBlbGVtID0gZWxlbSB8fCB0aGlzLmVsZW1lbnRzWzBdO1xuXG4gICAgICBpZiAodHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBlbGVtIGluc3RhbmNlb2YgalF1ZXJ5KSB7XG4gICAgICAgIGVsZW0gPSBlbGVtLmdldCgwKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pbml0aWFsSW1hZ2VJbmRleCA9IHRoaXMuZWxlbWVudHMuaW5kZXhPZihlbGVtKTtcblxuICAgICAgaWYgKHRoaXMuaW5pdGlhbEltYWdlSW5kZXggPiAtMSkge1xuICAgICAgICB0aGlzLm9wZW5JbWFnZShlbGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibmV4dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgdGhpcy5sb2FkSW1hZ2UoMSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInByZXZcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJldigpIHtcbiAgICAgIHRoaXMubG9hZEltYWdlKC0xKTtcbiAgICB9IC8vIGdldCBzb21lIHVzZWZ1bCBkYXRhXG5cbiAgfSwge1xuICAgIGtleTogXCJnZXRMaWdoYm94RGF0YVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMaWdoYm94RGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGN1cnJlbnRJbWFnZUluZGV4OiB0aGlzLmN1cnJlbnRJbWFnZUluZGV4LFxuICAgICAgICBjdXJyZW50SW1hZ2U6IHRoaXMuY3VycmVudEltYWdlLFxuICAgICAgICBnbG9iYWxTY3JvbGxiYXJXaWR0aDogdGhpcy5nbG9iYWxTY3JvbGxiYXJXaWR0aFxuICAgICAgfTtcbiAgICB9IC8vY2xvc2UgaXMgZXhwb3NlZCBhbnl3YXlzLi5cblxuICB9LCB7XG4gICAga2V5OiBcImRlc3Ryb3lcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgIC8vcmVtb3ZlIGFsbCBjdXN0b20gZXZlbnQgbGlzdGVuZXJzIGZyb20gZWxlbWVudHNcbiAgICAgIHRoaXMub2ZmKFsnY2xvc2UuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdjbG9zZWQuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICduZXh0SW1hZ2VMb2FkZWQuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdwcmV2SW1hZ2VMb2FkZWQuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdjaGFuZ2UuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICduZXh0RG9uZS4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ3ByZXZEb25lLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnZXJyb3IuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdjaGFuZ2VkLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnbmV4dC4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSwgJ3ByZXYuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UsICdzaG93LicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAnc2hvd24uJyArIHRoaXMuZXZlbnROYW1lc3BhY2VdKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih0aGlzLmVsZW1lbnRzLCAnY2xpY2suJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKGRvY3VtZW50LCAnZm9jdXNpbi4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSk7XG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZG9jdW1lbnQuYm9keSwgJ2NvbnRleHRtZW51LicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihkb2N1bWVudC5ib2R5LCAna2V5dXAuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHRoaXMuZG9tTm9kZXMubmF2aWdhdGlvbi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYnV0dG9uJyksICdjbGljay4nICsgdGhpcy5ldmVudE5hbWVzcGFjZSk7XG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIodGhpcy5kb21Ob2Rlcy5jbG9zZUJ1dHRvbiwgJ2NsaWNrLicgKyB0aGlzLmV2ZW50TmFtZXNwYWNlKTtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csICdyZXNpemUuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgJ2hhc2hjaGFuZ2UuJyArIHRoaXMuZXZlbnROYW1lc3BhY2UpO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuXG4gICAgICBpZiAodGhpcy5pc09wZW4pIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmRvbU5vZGVzLndyYXBwZXIpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuZG9tTm9kZXMub3ZlcmxheSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWxlbWVudHMgPSBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZWZyZXNoXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlZnJlc2goKSB7XG4gICAgICBpZiAoIXRoaXMuaW5pdGlhbFNlbGVjdG9yKSB7XG4gICAgICAgIHRocm93ICdyZWZyZXNoaW5nIG9ubHkgd29ya3Mgd2hlbiB5b3UgaW5pdGlhbGl6ZSB1c2luZyBhIHNlbGVjdG9yISc7XG4gICAgICB9XG5cbiAgICAgIHZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zLFxuICAgICAgICAgIHNlbGVjdG9yID0gdGhpcy5pbml0aWFsU2VsZWN0b3I7XG4gICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuY29uc3RydWN0b3Ioc2VsZWN0b3IsIG9wdGlvbnMpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNpbXBsZUxpZ2h0Ym94O1xufSgpO1xuXG52YXIgX2RlZmF1bHQgPSBTaW1wbGVMaWdodGJveDtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7XG5nbG9iYWwuU2ltcGxlTGlnaHRib3ggPSBTaW1wbGVMaWdodGJveDsiLCJpbXBvcnQgU2ltcGxlTGlnaHRib3ggZnJvbSBcInNpbXBsZWxpZ2h0Ym94XCI7XHJcblxyXG5uZXcgU2ltcGxlTGlnaHRib3goJy5nYWxsZXJ5X19mYW5jeWJveCcsIHsgLyogb3B0aW9ucyAqLyB9KTtcclxuIiwiLyoqXG4gKiBTdGlja3kgU2lkZWJhciB2MiBKYXZhU2NyaXB0IFBsdWdpbi5cbiAqIEB2ZXJzaW9uIDEuMC4xXG4gKiBAYXV0aG9yIMOYeXN0ZWluIEJsaXhoYXZuIDxveXN0ZWluQGJsaXhoYXZuLm5vPlxuICogQGxpY2Vuc2UgVGhlIE1JVCBMaWNlbnNlIChNSVQpXG4gKi9cbmNvbnN0IFN0aWNreVNpZGViYXIgPSAoKCkgPT4ge1xuXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gIyBEZWZpbmUgQ29uc3RhbnRzXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy9cbiAgICBjb25zdCBFVkVOVF9LRVkgPSAnLnN0aWNreVNpZGViYXInO1xuICAgIGNvbnN0IFZFUlNJT04gICA9ICcxLjAuMSc7XG5cbiAgICBjb25zdCBERUZBVUxUUyA9IHtcbiAgICAgIC8qKlxuICAgICAgICogQWRkaXRpb25hbCB0b3Agc3BhY2luZyBvZiB0aGUgZWxlbWVudCB3aGVuIGl0IGJlY29tZXMgc3RpY2t5LlxuICAgICAgICogQHR5cGUge051bWVyaWN8RnVuY3Rpb259XG4gICAgICAgKi9cbiAgICAgIHRvcFNwYWNpbmc6IDAsXG5cbiAgICAgIC8qKlxuICAgICAgICogQWRkaXRpb25hbCBib3R0b20gc3BhY2luZyBvZiB0aGUgZWxlbWVudCB3aGVuIGl0IGJlY29tZXMgc3RpY2t5LlxuICAgICAgICogQHR5cGUge051bWVyaWN8RnVuY3Rpb259XG4gICAgICAgKi9cbiAgICAgIGJvdHRvbVNwYWNpbmc6IDAsXG5cbiAgICAgIC8qKlxuICAgICAgICogQ29udGFpbmVyIHNpZGViYXIgc2VsZWN0b3IgdG8ga25vdyB3aGF0IHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiBzdGlja3kgZWxlbWVudC5cbiAgICAgICAqIEB0eXBlIHtTdHJpbmd8RmFsc2V9XG4gICAgICAgKi9cbiAgICAgIGNvbnRhaW5lclNlbGVjdG9yOiBmYWxzZSxcblxuICAgICAgLyoqXG4gICAgICAgKiBQYXJlbnQgZWxlbWVudCB3aGVyZSB0aGUgc2Nyb2xsaW5nIGhhcHBlbnMuXG4gICAgICAgKi9cbiAgICAgIHNjcm9sbENvbnRhaW5lcjogZmFsc2UsXG5cbiAgICAgIC8qKlxuICAgICAgICogSW5uZXIgd3JhcHBlciBzZWxlY3Rvci5cbiAgICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICAgKi9cbiAgICAgIGlubmVyV3JhcHBlclNlbGVjdG9yOiAnLmlubmVyLXdyYXBwZXItc3RpY2t5JyxcblxuICAgICAgLyoqXG4gICAgICAgKiBUaGUgbmFtZSBvZiBDU1MgY2xhc3MgdG8gYXBwbHkgdG8gZWxlbWVudHMgd2hlbiB0aGV5IGhhdmUgYmVjb21lIHN0dWNrLlxuICAgICAgICogQHR5cGUge1N0cmluZ3xGYWxzZX1cbiAgICAgICAqL1xuICAgICAgc3RpY2t5Q2xhc3M6ICdpcy1hZmZpeGVkJyxcblxuICAgICAgLyoqXG4gICAgICAgKiBUaGUgc2lkZWJhciByZXR1cm5zIHRvIGl0cyBub3JtYWwgcG9zaXRpb24gaWYgaXRzIHdpZHRoIGJlbG93IHRoaXMgdmFsdWUuXG4gICAgICAgKiBAdHlwZSB7TnVtZXJpY31cbiAgICAgICAqL1xuICAgICAgbWluV2lkdGg6IGZhbHNlXG4gICAgfTtcblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vICMgQ2xhc3MgRGVmaW5pdGlvblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgLyoqXG4gICAgICogU3RpY2t5IFNpZGViYXIgQ2xhc3MuXG4gICAgICogQHB1YmxpY1xuICAgICAqL1xuICAgIGNsYXNzIFN0aWNreVNpZGViYXJ7XG5cbiAgICAgIC8qKlxuICAgICAgICogU3RpY2t5IFNpZGViYXIgQ29uc3RydWN0b3IuXG4gICAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR8U3RyaW5nfSBzaWRlYmFyIC0gVGhlIHNpZGViYXIgZWxlbWVudCBvciBzaWRlYmFyIHNlbGVjdG9yLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBvZiBzdGlja3kgc2lkZWJhci5cbiAgICAgICAqL1xuICAgICAgY29uc3RydWN0b3Ioc2lkZWJhciwgb3B0aW9ucyA9IHt9KXtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gU3RpY2t5U2lkZWJhci5leHRlbmQoREVGQVVMVFMsIG9wdGlvbnMpO1xuXG4gICAgICAgIC8vIFNpZGViYXIgZWxlbWVudCBxdWVyeSBpZiB0aGVyZSdzIG5vIG9uZSwgdGhyb3cgZXJyb3IuXG4gICAgICAgIHRoaXMuc2lkZWJhciA9ICgnc3RyaW5nJyA9PT0gdHlwZW9mIHNpZGViYXIgKSA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2lkZWJhcikgOiBzaWRlYmFyO1xuICAgICAgICBpZiggJ3VuZGVmaW5lZCcgPT09IHR5cGVvZiB0aGlzLnNpZGViYXIgKVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZXJlIGlzIG5vIHNwZWNpZmljIHNpZGViYXIgZWxlbWVudC5cIik7XG5cbiAgICAgICAgdGhpcy5zaWRlYmFySW5uZXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSB0aGlzLnNpZGViYXIucGFyZW50RWxlbWVudDtcblxuICAgICAgICAvLyBDdXJyZW50IEFmZml4IFR5cGUgb2Ygc2lkZWJhciBlbGVtZW50LlxuICAgICAgICB0aGlzLmFmZml4ZWRUeXBlID0gJ1NUQVRJQyc7XG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ2Rvd24nO1xuICAgICAgICB0aGlzLnN1cHBvcnQgPSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiAgIGZhbHNlLFxuICAgICAgICAgIHRyYW5zZm9ybTNkOiBmYWxzZVxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3JlU3R5bGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fYnJlYWtwb2ludCA9IGZhbHNlO1xuXG4gICAgICAgIC8vIERpbWVuc2lvbnMgb2Ygc2lkZWJhciwgY29udGFpbmVyIGFuZCBzY3JlZW4gdmlld3BvcnQuXG4gICAgICAgIHRoaXMuZGltZW5zaW9ucyA9IHtcbiAgICAgICAgICB0cmFuc2xhdGVZOiAwLFxuICAgICAgICAgIG1heFRyYW5zbGF0ZVk6IDAsXG4gICAgICAgICAgdG9wU3BhY2luZzogMCxcbiAgICAgICAgICBsYXN0VG9wU3BhY2luZzogMCxcbiAgICAgICAgICBib3R0b21TcGFjaW5nOiAwLFxuICAgICAgICAgIGxhc3RCb3R0b21TcGFjaW5nOiAwLFxuICAgICAgICAgIHNpZGViYXJIZWlnaHQ6IDAsXG4gICAgICAgICAgc2lkZWJhcldpZHRoOiAwLFxuICAgICAgICAgIGNvbnRhaW5lclRvcDogMCxcbiAgICAgICAgICBjb250YWluZXJIZWlnaHQ6IDAsXG4gICAgICAgICAgdmlld3BvcnRIZWlnaHQ6IDAsXG4gICAgICAgICAgdmlld3BvcnRUb3A6IDAsXG4gICAgICAgICAgbGFzdFZpZXdwb3J0VG9wOiAwLFxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEJpbmQgZXZlbnQgaGFuZGxlcnMgZm9yIHJlZmVyZW5jYWJpbGl0eS5cbiAgICAgICAgWydoYW5kbGVFdmVudCddLmZvckVhY2goIChtZXRob2QpID0+IHtcbiAgICAgICAgICB0aGlzW21ldGhvZF0gPSB0aGlzW21ldGhvZF0uYmluZCh0aGlzKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBzdGlja3kgc2lkZWJhciBmb3IgZmlyc3QgdGltZS5cbiAgICAgICAgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogSW5pdGlhbGl6ZXMgdGhlIHN0aWNreSBzaWRlYmFyIGJ5IGFkZGluZyBpbm5lciB3cmFwcGVyLCBkZWZpbmUgaXRzIGNvbnRhaW5lcixcbiAgICAgICAqIG1pbi13aWR0aCBicmVha3BvaW50LCBjYWxjdWxhdGluZyBkaW1lbnNpb25zLCBhZGRpbmcgaGVscGVyIGNsYXNzZXMgYW5kIGlubGluZSBzdHlsZS5cbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKi9cbiAgICAgIGluaXRpYWxpemUoKXtcbiAgICAgICAgdGhpcy5fc2V0U3VwcG9ydEZlYXR1cmVzKCk7XG5cbiAgICAgICAgLy8gR2V0IHN0aWNreSBzaWRlYmFyIGlubmVyIHdyYXBwZXIsIGlmIG5vdCBmb3VuZCwgd2lsbCBjcmVhdGUgb25lLlxuICAgICAgICBpZiggdGhpcy5vcHRpb25zLmlubmVyV3JhcHBlclNlbGVjdG9yICl7XG4gICAgICAgICAgdGhpcy5zaWRlYmFySW5uZXIgPSB0aGlzLnNpZGViYXIucXVlcnlTZWxlY3Rvcih0aGlzLm9wdGlvbnMuaW5uZXJXcmFwcGVyU2VsZWN0b3IpO1xuXG4gICAgICAgICAgaWYoIG51bGwgPT09IHRoaXMuc2lkZWJhcklubmVyIClcbiAgICAgICAgICAgIHRoaXMuc2lkZWJhcklubmVyID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiggISB0aGlzLnNpZGViYXJJbm5lciApe1xuICAgICAgICAgIGxldCB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgd3JhcHBlci5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2lubmVyLXdyYXBwZXItc3RpY2t5Jyk7XG4gICAgICAgICAgdGhpcy5zaWRlYmFyLmFwcGVuZENoaWxkKHdyYXBwZXIpO1xuXG4gICAgICAgICAgd2hpbGUoIHRoaXMuc2lkZWJhci5maXJzdENoaWxkICE9IHdyYXBwZXIgKVxuICAgICAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZCh0aGlzLnNpZGViYXIuZmlyc3RDaGlsZCk7XG5cbiAgICAgICAgICB0aGlzLnNpZGViYXJJbm5lciA9IHRoaXMuc2lkZWJhci5xdWVyeVNlbGVjdG9yKCcuaW5uZXItd3JhcHBlci1zdGlja3knKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENvbnRhaW5lciB3cmFwcGVyIG9mIHRoZSBzaWRlYmFyLlxuICAgICAgICBpZiggdGhpcy5vcHRpb25zLmNvbnRhaW5lclNlbGVjdG9yICl7XG4gICAgICAgICAgbGV0IGNvbnRhaW5lcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMub3B0aW9ucy5jb250YWluZXJTZWxlY3Rvcik7XG4gICAgICAgICAgY29udGFpbmVycyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGNvbnRhaW5lcnMpO1xuXG4gICAgICAgICAgY29udGFpbmVycy5mb3JFYWNoKChjb250YWluZXIsIGl0ZW0pID0+IHtcbiAgICAgICAgICAgIGlmKCAhIGNvbnRhaW5lci5jb250YWlucyh0aGlzLnNpZGViYXIpICkgcmV0dXJuO1xuICAgICAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiggISBjb250YWluZXJzLmxlbmd0aCApXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgY29udGFpbmVyIGRvZXMgbm90IGNvbnRhaW5zIG9uIHRoZSBzaWRlYmFyLlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEdldCBzY3JvbGwgY29udGFpbmVyLCBpZiBwcm92aWRlZFxuICAgICAgICB0aGlzLnNjcm9sbENvbnRhaW5lciA9IHRoaXMub3B0aW9ucy5zY3JvbGxDb250YWluZXIgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMub3B0aW9ucy5zY3JvbGxDb250YWluZXIpIDogdW5kZWZpbmVkO1xuXG4gICAgICAgIC8vIElmIHRvcC9ib3R0b20gc3BhY2luZyBpcyBub3QgZnVuY3Rpb24gcGFyc2UgdmFsdWUgdG8gaW50ZWdlci5cbiAgICAgICAgaWYoICdmdW5jdGlvbicgIT09IHR5cGVvZiB0aGlzLm9wdGlvbnMudG9wU3BhY2luZyApXG4gICAgICAgICAgdGhpcy5vcHRpb25zLnRvcFNwYWNpbmcgPSBwYXJzZUludCh0aGlzLm9wdGlvbnMudG9wU3BhY2luZykgfHwgMDtcblxuICAgICAgICBpZiggJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIHRoaXMub3B0aW9ucy5ib3R0b21TcGFjaW5nIClcbiAgICAgICAgICB0aGlzLm9wdGlvbnMuYm90dG9tU3BhY2luZyA9IHBhcnNlSW50KHRoaXMub3B0aW9ucy5ib3R0b21TcGFjaW5nKSB8fCAwO1xuXG4gICAgICAgIC8vIEJyZWFrZG93biBzdGlja3kgc2lkZWJhciBpZiBzY3JlZW4gd2lkdGggYmVsb3cgYG9wdGlvbnMubWluV2lkdGhgLlxuICAgICAgICB0aGlzLl93aWR0aEJyZWFrcG9pbnQoKTtcblxuICAgICAgICAvLyBDYWxjdWxhdGUgZGltZW5zaW9ucyBvZiBzaWRlYmFyLCBjb250YWluZXIgYW5kIHZpZXdwb3J0LlxuICAgICAgICB0aGlzLmNhbGNEaW1lbnNpb25zKCk7XG5cbiAgICAgICAgLy8gQWZmaXggc2lkZWJhciBpbiBwcm9wZXIgcG9zaXRpb24uXG4gICAgICAgIHRoaXMuc3RpY2t5UG9zaXRpb24oKTtcblxuICAgICAgICAvLyBCaW5kIGFsbCBldmVudHMuXG4gICAgICAgIHRoaXMuYmluZEV2ZW50cygpO1xuXG4gICAgICAgIC8vIEluZm9ybSBvdGhlciBwcm9wZXJ0aWVzIHRoZSBzdGlja3kgc2lkZWJhciBpcyBpbml0aWFsaXplZC5cbiAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEJpbmQgYWxsIGV2ZW50cyBvZiBzdGlja3kgc2lkZWJhciBwbHVnaW4uXG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIGJpbmRFdmVudHMoKXtcbiAgICAgICAgdGhpcy5ldmVudFRhcmdldCA9IHRoaXMuc2Nyb2xsQ29udGFpbmVyID8gdGhpcy5zY3JvbGxDb250YWluZXIgOiB3aW5kb3c7XG5cbiAgICAgICAgdGhpcy5ldmVudFRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLCB7IHBhc3NpdmU6IHRydWUsIGNhcHR1cmU6IGZhbHNlIH0pO1xuICAgICAgICB0aGlzLmV2ZW50VGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMsIHsgcGFzc2l2ZTogdHJ1ZSwgY2FwdHVyZTogZmFsc2UgfSk7XG5cbiAgICAgICAgdGhpcy5zaWRlYmFyLmFkZEV2ZW50TGlzdGVuZXIoJ3VwZGF0ZScgKyBFVkVOVF9LRVksIHRoaXMpO1xuXG4gICAgICAgIGlmKCAndW5kZWZpbmVkJyAhPT0gdHlwZW9mIFJlc2l6ZU9ic2VydmVyICl7XG4gICAgICAgICAgY29uc3QgcmVzaXplT2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKCkgPT4gdGhpcy5oYW5kbGVFdmVudCgpKVxuICAgICAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUodGhpcy5zaWRlYmFySW5uZXIpXG4gICAgICAgICAgcmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLmNvbnRhaW5lcilcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEhhbmRsZXMgYWxsIGV2ZW50cyBvZiB0aGUgcGx1Z2luLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IC0gRXZlbnQgb2JqZWN0IHBhc3NlZCBmcm9tIGxpc3RlbmVyLlxuICAgICAgICovXG4gICAgICBoYW5kbGVFdmVudChldmVudCl7XG4gICAgICAgIHRoaXMudXBkYXRlU3RpY2t5KGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBDYWxjdWxhdGVzIGRpbWVuc2lvbnMgb2Ygc2lkZWJhciwgY29udGFpbmVyIGFuZCBzY3JlZW4gdmlld3BvaW50XG4gICAgICAgKiBAcHVibGljXG4gICAgICAgKi9cbiAgICAgIGNhbGNEaW1lbnNpb25zKCl7XG4gICAgICAgIGlmKCB0aGlzLl9icmVha3BvaW50ICkgcmV0dXJuO1xuICAgICAgICB2YXIgZGltcyA9IHRoaXMuZGltZW5zaW9ucztcblxuICAgICAgICAvLyBDb250YWluZXIgb2Ygc3RpY2t5IHNpZGViYXIgZGltZW5zaW9ucy5cbiAgICAgICAgZGltcy5jb250YWluZXJUb3AgICAgPSBTdGlja3lTaWRlYmFyLm9mZnNldFJlbGF0aXZlKHRoaXMuY29udGFpbmVyKS50b3A7XG4gICAgICAgIGRpbXMuY29udGFpbmVySGVpZ2h0ID0gdGhpcy5jb250YWluZXIuY2xpZW50SGVpZ2h0O1xuICAgICAgICBkaW1zLmNvbnRhaW5lckJvdHRvbSA9IGRpbXMuY29udGFpbmVyVG9wICsgZGltcy5jb250YWluZXJIZWlnaHQ7XG5cbiAgICAgICAgLy8gU2lkZWJhciBkaW1lbnNpb25zLlxuICAgICAgICBkaW1zLnNpZGViYXJIZWlnaHQgPSB0aGlzLnNpZGViYXJJbm5lci5vZmZzZXRIZWlnaHQ7XG4gICAgICAgIGRpbXMuc2lkZWJhcldpZHRoICA9IHRoaXMuc2lkZWJhcklubmVyLm9mZnNldFdpZHRoO1xuXG4gICAgICAgIC8vIFNjcmVlbiB2aWV3cG9ydCBkaW1lbnNpb25zLlxuICAgICAgICBkaW1zLnZpZXdwb3J0SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuXG4gICAgICAgIC8vIE1heGltdW0gc2lkZWJhciB0cmFuc2xhdGUgWS5cbiAgICAgICAgZGltcy5tYXhUcmFuc2xhdGVZID0gZGltcy5jb250YWluZXJIZWlnaHQgLSBkaW1zLnNpZGViYXJIZWlnaHQ7XG5cbiAgICAgICAgdGhpcy5fY2FsY0RpbWVuc2lvbnNXaXRoU2Nyb2xsKCk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogU29tZSBkaW1lbnNpb25zIHZhbHVlcyBuZWVkIHRvIGJlIHVwLXRvLWRhdGUgd2hlbiBzY3JvbGxpbmcgdGhlIHBhZ2UuXG4gICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICovXG4gICAgICBfY2FsY0RpbWVuc2lvbnNXaXRoU2Nyb2xsKCl7XG4gICAgICAgIHZhciBkaW1zID0gdGhpcy5kaW1lbnNpb25zO1xuXG4gICAgICAgIGRpbXMuc2lkZWJhckxlZnQgPSBTdGlja3lTaWRlYmFyLm9mZnNldFJlbGF0aXZlKHRoaXMuc2lkZWJhcikubGVmdDtcblxuICAgICAgICBpZiAodGhpcy5zY3JvbGxDb250YWluZXIpIHtcbiAgICAgICAgICBkaW1zLnZpZXdwb3J0VG9wID0gdGhpcy5zY3JvbGxDb250YWluZXIuc2Nyb2xsVG9wO1xuICAgICAgICAgIGRpbXMudmlld3BvcnRMZWZ0ID0gdGhpcy5zY3JvbGxDb250YWluZXIuc2Nyb2xsTGVmdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkaW1zLnZpZXdwb3J0VG9wID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDtcbiAgICAgICAgICBkaW1zLnZpZXdwb3J0TGVmdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0IHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdDtcbiAgICAgICAgfVxuICAgICAgICBkaW1zLnZpZXdwb3J0Qm90dG9tID0gZGltcy52aWV3cG9ydFRvcCArIGRpbXMudmlld3BvcnRIZWlnaHQ7XG5cbiAgICAgICAgZGltcy50b3BTcGFjaW5nICAgID0gdGhpcy5vcHRpb25zLnRvcFNwYWNpbmc7XG4gICAgICAgIGRpbXMuYm90dG9tU3BhY2luZyA9IHRoaXMub3B0aW9ucy5ib3R0b21TcGFjaW5nO1xuXG4gICAgICAgIGlmKCAnZnVuY3Rpb24nID09PSB0eXBlb2YgZGltcy50b3BTcGFjaW5nIClcbiAgICAgICAgICAgIGRpbXMudG9wU3BhY2luZyA9IHBhcnNlSW50KGRpbXMudG9wU3BhY2luZyh0aGlzLnNpZGViYXIpKSB8fCAwO1xuXG4gICAgICAgIGlmKCAnZnVuY3Rpb24nID09PSB0eXBlb2YgZGltcy5ib3R0b21TcGFjaW5nIClcbiAgICAgICAgICAgIGRpbXMuYm90dG9tU3BhY2luZyA9IHBhcnNlSW50KGRpbXMuYm90dG9tU3BhY2luZyh0aGlzLnNpZGViYXIpKSB8fCAwO1xuXG4gICAgICAgIGlmKCAnVklFV1BPUlQtVE9QJyA9PT0gdGhpcy5hZmZpeGVkVHlwZSApe1xuICAgICAgICAgIC8vIEFkanVzdCB0cmFuc2xhdGUgWSBpbiB0aGUgY2FzZSBkZWNyZWFzZSB0b3Agc3BhY2luZyB2YWx1ZS5cbiAgICAgICAgICBpZiggZGltcy50b3BTcGFjaW5nIDwgZGltcy5sYXN0VG9wU3BhY2luZyApe1xuICAgICAgICAgICAgZGltcy50cmFuc2xhdGVZICs9IGRpbXMubGFzdFRvcFNwYWNpbmcgLSBkaW1zLnRvcFNwYWNpbmc7XG4gICAgICAgICAgICB0aGlzLl9yZVN0eWxlID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiggJ1ZJRVdQT1JULUJPVFRPTScgPT09IHRoaXMuYWZmaXhlZFR5cGUgKXtcbiAgICAgICAgICAvLyBBZGp1c3QgdHJhbnNsYXRlIFkgaW4gdGhlIGNhc2UgZGVjcmVhc2UgYm90dG9tIHNwYWNpbmcgdmFsdWUuXG4gICAgICAgICAgaWYoIGRpbXMuYm90dG9tU3BhY2luZyA8IGRpbXMubGFzdEJvdHRvbVNwYWNpbmcgKXtcbiAgICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSArPSBkaW1zLmxhc3RCb3R0b21TcGFjaW5nIC0gZGltcy5ib3R0b21TcGFjaW5nO1xuICAgICAgICAgICAgdGhpcy5fcmVTdHlsZSA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZGltcy5sYXN0VG9wU3BhY2luZyAgICA9IGRpbXMudG9wU3BhY2luZztcbiAgICAgICAgZGltcy5sYXN0Qm90dG9tU3BhY2luZyA9IGRpbXMuYm90dG9tU3BhY2luZztcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBEZXRlcm1pbmUgd2hldGhlciB0aGUgc2lkZWJhciBpcyBiaWdnZXIgdGhhbiB2aWV3cG9ydC5cbiAgICAgICAqIEBwdWJsaWNcbiAgICAgICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAgICAgKi9cbiAgICAgIGlzU2lkZWJhckZpdHNWaWV3cG9ydCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGltZW5zaW9ucy52aWV3cG9ydEhlaWdodCA+PSAoXG4gICAgICAgICAgdGhpcy5kaW1lbnNpb25zLmxhc3RCb3R0b21TcGFjaW5nICtcbiAgICAgICAgICB0aGlzLmRpbWVuc2lvbnMubGFzdFRvcFNwYWNpbmcgK1xuICAgICAgICAgIHRoaXMuZGltZW5zaW9ucy5zaWRlYmFySGVpZ2h0XG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogT2JzZXJ2ZSBicm93c2VyIHNjcm9sbGluZyBkaXJlY3Rpb24gdG9wIGFuZCBkb3duLlxuICAgICAgICovXG4gICAgICBvYnNlcnZlU2Nyb2xsRGlyKCl7XG4gICAgICAgIHZhciBkaW1zID0gdGhpcy5kaW1lbnNpb25zO1xuICAgICAgICBpZiggZGltcy5sYXN0Vmlld3BvcnRUb3AgPT09IGRpbXMudmlld3BvcnRUb3AgKSByZXR1cm47XG5cbiAgICAgICAgdmFyIGZ1cnRoZXN0ID0gJ2Rvd24nID09PSB0aGlzLmRpcmVjdGlvbiA/IE1hdGgubWluIDogTWF0aC5tYXg7XG5cbiAgICAgICAgLy8gSWYgdGhlIGJyb3dzZXIgaXMgc2Nyb2xsaW5nIG5vdCBpbiB0aGUgc2FtZSBkaXJlY3Rpb24uXG4gICAgICAgIGlmKCBkaW1zLnZpZXdwb3J0VG9wID09PSBmdXJ0aGVzdChkaW1zLnZpZXdwb3J0VG9wLCBkaW1zLmxhc3RWaWV3cG9ydFRvcCkgKVxuICAgICAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ2Rvd24nID09PSB0aGlzLmRpcmVjdGlvbiA/ICAndXAnIDogJ2Rvd24nO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEdldHMgYWZmaXggdHlwZSBvZiBzaWRlYmFyIGFjY29yZGluZyB0byBjdXJyZW50IHNjcm9sbCB0b3AgYW5kIHNjcm9sbGluZyBkaXJlY3Rpb24uXG4gICAgICAgKiBAcHVibGljXG4gICAgICAgKiBAcmV0dXJuIHtTdHJpbmd8RmFsc2V9IC0gUHJvcGVyIGFmZml4IHR5cGUuXG4gICAgICAgKi9cbiAgICAgIGdldEFmZml4VHlwZSgpe1xuICAgICAgICB0aGlzLl9jYWxjRGltZW5zaW9uc1dpdGhTY3JvbGwoKTtcbiAgICAgICAgdmFyIGRpbXMgPSB0aGlzLmRpbWVuc2lvbnM7XG4gICAgICAgIHZhciBjb2xsaWRlclRvcCA9IGRpbXMudmlld3BvcnRUb3AgKyBkaW1zLnRvcFNwYWNpbmc7XG4gICAgICAgIHZhciBhZmZpeFR5cGUgPSB0aGlzLmFmZml4ZWRUeXBlO1xuXG4gICAgICAgaWYoIGNvbGxpZGVyVG9wIDw9IGRpbXMuY29udGFpbmVyVG9wIHx8IGRpbXMuY29udGFpbmVySGVpZ2h0IDw9IGRpbXMuc2lkZWJhckhlaWdodCApe1xuICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSA9IDA7XG4gICAgICAgICAgYWZmaXhUeXBlID0gJ1NUQVRJQyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWZmaXhUeXBlID0gKCAndXAnID09PSB0aGlzLmRpcmVjdGlvbiApID9cbiAgICAgICAgICAgIHRoaXMuX2dldEFmZml4VHlwZVNjcm9sbGluZ1VwKCkgOiB0aGlzLl9nZXRBZmZpeFR5cGVTY3JvbGxpbmdEb3duKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBNYWtlIHN1cmUgdGhlIHRyYW5zbGF0ZSBZIGlzIG5vdCBiaWdnZXIgdGhhbiBjb250YWluZXIgaGVpZ2h0LlxuICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgPSBNYXRoLm1heCgwLCBkaW1zLnRyYW5zbGF0ZVkpO1xuICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgPSBNYXRoLm1pbihkaW1zLmNvbnRhaW5lckhlaWdodCwgZGltcy50cmFuc2xhdGVZKTtcbiAgICAgICAgZGltcy50cmFuc2xhdGVZID0gTWF0aC5yb3VuZChkaW1zLnRyYW5zbGF0ZVkpO1xuXG4gICAgICAgIGRpbXMubGFzdFZpZXdwb3J0VG9wID0gZGltcy52aWV3cG9ydFRvcDtcbiAgICAgICAgcmV0dXJuIGFmZml4VHlwZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBHZXQgYWZmaXggdHlwZSB3aGlsZSBzY3JvbGxpbmcgZG93bi5cbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKiBAcmV0dXJuIHtTdHJpbmd9IC0gUHJvcGVyIGFmZml4IHR5cGUgb2Ygc2Nyb2xsaW5nIGRvd24gZGlyZWN0aW9uLlxuICAgICAgICovXG4gICAgICBfZ2V0QWZmaXhUeXBlU2Nyb2xsaW5nRG93bigpe1xuICAgICAgICB2YXIgZGltcyA9IHRoaXMuZGltZW5zaW9ucztcbiAgICAgICAgdmFyIHNpZGViYXJCb3R0b20gPSBkaW1zLnNpZGViYXJIZWlnaHQgKyBkaW1zLmNvbnRhaW5lclRvcDtcbiAgICAgICAgdmFyIGNvbGxpZGVyVG9wID0gZGltcy52aWV3cG9ydFRvcCArIGRpbXMudG9wU3BhY2luZztcbiAgICAgICAgdmFyIGNvbGxpZGVyQm90dG9tID0gZGltcy52aWV3cG9ydEJvdHRvbSAtIGRpbXMuYm90dG9tU3BhY2luZztcbiAgICAgICAgdmFyIGFmZml4VHlwZSA9IHRoaXMuYWZmaXhlZFR5cGU7XG5cbiAgICAgICAgaWYoIHRoaXMuaXNTaWRlYmFyRml0c1ZpZXdwb3J0KCkgKXtcbiAgICAgICAgICBpZiggZGltcy5zaWRlYmFySGVpZ2h0ICsgY29sbGlkZXJUb3AgPj0gZGltcy5jb250YWluZXJCb3R0b20gKXtcbiAgICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSA9IGRpbXMuY29udGFpbmVyQm90dG9tIC0gc2lkZWJhckJvdHRvbTtcbiAgICAgICAgICAgIGFmZml4VHlwZSA9ICdDT05UQUlORVItQk9UVE9NJztcblxuICAgICAgICAgIH0gZWxzZSBpZiggY29sbGlkZXJUb3AgPj0gZGltcy5jb250YWluZXJUb3AgKXtcbiAgICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSA9IGNvbGxpZGVyVG9wIC0gZGltcy5jb250YWluZXJUb3A7XG4gICAgICAgICAgICBhZmZpeFR5cGUgPSAnVklFV1BPUlQtVE9QJztcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYoIGRpbXMuY29udGFpbmVyQm90dG9tIDw9IGNvbGxpZGVyQm90dG9tICl7XG4gICAgICAgICAgICBkaW1zLnRyYW5zbGF0ZVkgPSBkaW1zLmNvbnRhaW5lckJvdHRvbSAtIHNpZGViYXJCb3R0b207XG4gICAgICAgICAgICBhZmZpeFR5cGUgPSAnQ09OVEFJTkVSLUJPVFRPTSc7XG5cbiAgICAgICAgICB9IGVsc2UgaWYoIHNpZGViYXJCb3R0b20gKyBkaW1zLnRyYW5zbGF0ZVkgPD0gY29sbGlkZXJCb3R0b20gKXtcbiAgICAgICAgICAgIGRpbXMudHJhbnNsYXRlWSA9IGNvbGxpZGVyQm90dG9tIC0gc2lkZWJhckJvdHRvbTtcbiAgICAgICAgICAgIGFmZml4VHlwZSA9ICdWSUVXUE9SVC1CT1RUT00nO1xuXG4gICAgICAgICAgfSBlbHNlIGlmKCBkaW1zLmNvbnRhaW5lclRvcCArIGRpbXMudHJhbnNsYXRlWSA8PSBjb2xsaWRlclRvcCAmJlxuICAgICAgICAgICAgKDAgIT09IGRpbXMudHJhbnNsYXRlWSAmJiBkaW1zLm1heFRyYW5zbGF0ZVkgIT09IGRpbXMudHJhbnNsYXRlWSkgKXtcbiAgICAgICAgICAgIGFmZml4VHlwZSA9ICdWSUVXUE9SVC1VTkJPVFRPTSc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFmZml4VHlwZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBHZXQgYWZmaXggdHlwZSB3aGlsZSBzY3JvbGxpbmcgdXAuXG4gICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICogQHJldHVybiB7U3RyaW5nfSAtIFByb3BlciBhZmZpeCB0eXBlIG9mIHNjcm9sbGluZyB1cCBkaXJlY3Rpb24uXG4gICAgICAgKi9cbiAgICAgIF9nZXRBZmZpeFR5cGVTY3JvbGxpbmdVcCgpe1xuICAgICAgICB2YXIgZGltcyA9IHRoaXMuZGltZW5zaW9ucztcbiAgICAgICAgdmFyIHNpZGViYXJCb3R0b20gPSBkaW1zLnNpZGViYXJIZWlnaHQgKyBkaW1zLmNvbnRhaW5lclRvcDtcbiAgICAgICAgdmFyIGNvbGxpZGVyVG9wID0gZGltcy52aWV3cG9ydFRvcCArIGRpbXMudG9wU3BhY2luZztcbiAgICAgICAgdmFyIGNvbGxpZGVyQm90dG9tID0gZGltcy52aWV3cG9ydEJvdHRvbSAtIGRpbXMuYm90dG9tU3BhY2luZztcbiAgICAgICAgdmFyIGFmZml4VHlwZSA9IHRoaXMuYWZmaXhlZFR5cGU7XG5cbiAgICAgICAgaWYoIGNvbGxpZGVyVG9wIDw9IGRpbXMudHJhbnNsYXRlWSArIGRpbXMuY29udGFpbmVyVG9wICl7XG4gICAgICAgICAgZGltcy50cmFuc2xhdGVZID0gY29sbGlkZXJUb3AgLSBkaW1zLmNvbnRhaW5lclRvcDtcbiAgICAgICAgICBhZmZpeFR5cGUgPSAnVklFV1BPUlQtVE9QJztcblxuICAgICAgICB9IGVsc2UgaWYoIGRpbXMuY29udGFpbmVyQm90dG9tIDw9IGNvbGxpZGVyQm90dG9tICl7XG4gICAgICAgICAgZGltcy50cmFuc2xhdGVZID0gZGltcy5jb250YWluZXJCb3R0b20gLSBzaWRlYmFyQm90dG9tO1xuICAgICAgICAgIGFmZml4VHlwZSA9ICdDT05UQUlORVItQk9UVE9NJztcblxuICAgICAgICB9IGVsc2UgaWYoICEgdGhpcy5pc1NpZGViYXJGaXRzVmlld3BvcnQoKSApe1xuXG4gICAgICAgICAgaWYoIGRpbXMuY29udGFpbmVyVG9wIDw9IGNvbGxpZGVyVG9wICYmXG4gICAgICAgICAgICAgICgwICE9PSBkaW1zLnRyYW5zbGF0ZVkgJiYgZGltcy5tYXhUcmFuc2xhdGVZICE9PSBkaW1zLnRyYW5zbGF0ZVkpICl7XG4gICAgICAgICAgICBhZmZpeFR5cGUgPSAnVklFV1BPUlQtVU5CT1RUT00nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhZmZpeFR5cGU7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogR2V0cyBpbmxpbmUgc3R5bGUgb2Ygc3RpY2t5IHNpZGViYXIgd3JhcHBlciBhbmQgaW5uZXIgd3JhcHBlciBhY2NvcmRpbmdcbiAgICAgICAqIHRvIGl0cyBhZmZpeCB0eXBlLlxuICAgICAgICogQHByaXZhdGVcbiAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSBhZmZpeFR5cGUgLSBBZmZpeCB0eXBlIG9mIHN0aWNreSBzaWRlYmFyLlxuICAgICAgICogQHJldHVybiB7T2JqZWN0fVxuICAgICAgICovXG4gICAgICBfZ2V0U3R5bGUoYWZmaXhUeXBlKXtcbiAgICAgICAgaWYoICd1bmRlZmluZWQnID09PSB0eXBlb2YgYWZmaXhUeXBlICkgcmV0dXJuO1xuXG4gICAgICAgIHZhciBzdHlsZSA9IHtpbm5lcjoge30sIG91dGVyOiB7fX07XG4gICAgICAgIHZhciBkaW1zID0gdGhpcy5kaW1lbnNpb25zO1xuXG4gICAgICAgIHN3aXRjaCggYWZmaXhUeXBlICl7XG4gICAgICAgICAgY2FzZSAnVklFV1BPUlQtVE9QJzpcbiAgICAgICAgICAgIHN0eWxlLmlubmVyID0ge3Bvc2l0aW9uOiAnZml4ZWQnLCB0b3A6IGRpbXMudG9wU3BhY2luZyxcbiAgICAgICAgICAgICAgICAgIGxlZnQ6IGRpbXMuc2lkZWJhckxlZnQgLSBkaW1zLnZpZXdwb3J0TGVmdCwgd2lkdGg6IGRpbXMuc2lkZWJhcldpZHRofTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ1ZJRVdQT1JULUJPVFRPTSc6XG4gICAgICAgICAgICBzdHlsZS5pbm5lciA9IHtwb3NpdGlvbjogJ2ZpeGVkJywgdG9wOiAnYXV0bycsIGxlZnQ6IGRpbXMuc2lkZWJhckxlZnQsXG4gICAgICAgICAgICAgICAgICBib3R0b206IGRpbXMuYm90dG9tU3BhY2luZywgd2lkdGg6IGRpbXMuc2lkZWJhcldpZHRofTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ0NPTlRBSU5FUi1CT1RUT00nOlxuICAgICAgICAgIGNhc2UgJ1ZJRVdQT1JULVVOQk9UVE9NJzpcbiAgICAgICAgICAgIGxldCB0cmFuc2xhdGUgPSB0aGlzLl9nZXRUcmFuc2xhdGUoMCwgZGltcy50cmFuc2xhdGVZICsgJ3B4Jyk7XG5cbiAgICAgICAgICAgIGlmKCB0cmFuc2xhdGUgKVxuICAgICAgICAgICAgICBzdHlsZS5pbm5lciA9IHt0cmFuc2Zvcm06IHRyYW5zbGF0ZX07XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgIHN0eWxlLmlubmVyID0ge3Bvc2l0aW9uOiAnYWJzb2x1dGUnLCB0b3A6IGRpbXMudHJhbnNsYXRlWSwgd2lkdGg6IGRpbXMuc2lkZWJhcldpZHRofTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoKCBhZmZpeFR5cGUgKXtcbiAgICAgICAgICBjYXNlICdWSUVXUE9SVC1UT1AnOlxuICAgICAgICAgIGNhc2UgJ1ZJRVdQT1JULUJPVFRPTSc6XG4gICAgICAgICAgY2FzZSAnVklFV1BPUlQtVU5CT1RUT00nOlxuICAgICAgICAgIGNhc2UgJ0NPTlRBSU5FUi1CT1RUT00nOlxuICAgICAgICAgICAgc3R5bGUub3V0ZXIgPSB7aGVpZ2h0OiBkaW1zLnNpZGViYXJIZWlnaHQsIHBvc2l0aW9uOiAncmVsYXRpdmUnfTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGUub3V0ZXIgPSBTdGlja3lTaWRlYmFyLmV4dGVuZCh7aGVpZ2h0OiAnJywgcG9zaXRpb246ICcnfSwgc3R5bGUub3V0ZXIpO1xuICAgICAgICBzdHlsZS5pbm5lciA9IFN0aWNreVNpZGViYXIuZXh0ZW5kKHtwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnJywgbGVmdDogJycsXG4gICAgICAgICAgICBib3R0b206ICcnLCB3aWR0aDogJycsICB0cmFuc2Zvcm06ICcnfSwgc3R5bGUuaW5uZXIpO1xuXG4gICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBDYXVzZSB0aGUgc2lkZWJhciB0byBiZSBzdGlja3kgYWNjb3JkaW5nIHRvIGFmZml4IHR5cGUgYnkgYWRkaW5nIGlubGluZVxuICAgICAgICogc3R5bGUsIGFkZGluZyBoZWxwZXIgY2xhc3MgYW5kIHRyaWdnZXIgZXZlbnRzLlxuICAgICAgICogQGZ1bmN0aW9uXG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gZm9yY2UgLSBVcGRhdGUgc3RpY2t5IHNpZGViYXIgcG9zaXRpb24gYnkgZm9yY2UuXG4gICAgICAgKi9cbiAgICAgIHN0aWNreVBvc2l0aW9uKGZvcmNlKXtcbiAgICAgICAgaWYoIHRoaXMuX2JyZWFrcG9pbnQgKSByZXR1cm47XG5cbiAgICAgICAgZm9yY2UgPSB0aGlzLl9yZVN0eWxlIHx8IGZvcmNlIHx8IGZhbHNlO1xuXG4gICAgICAgIHZhciBvZmZzZXRUb3AgPSB0aGlzLm9wdGlvbnMudG9wU3BhY2luZztcbiAgICAgICAgdmFyIG9mZnNldEJvdHRvbSA9IHRoaXMub3B0aW9ucy5ib3R0b21TcGFjaW5nO1xuXG4gICAgICAgIHZhciBhZmZpeFR5cGUgPSB0aGlzLmdldEFmZml4VHlwZSgpO1xuICAgICAgICB2YXIgc3R5bGUgPSB0aGlzLl9nZXRTdHlsZShhZmZpeFR5cGUpO1xuXG4gICAgICAgIGlmKCAodGhpcy5hZmZpeGVkVHlwZSAhPSBhZmZpeFR5cGUgfHwgZm9yY2UpICYmIGFmZml4VHlwZSApe1xuICAgICAgICAgIGxldCBhZmZpeEV2ZW50ID0gJ2FmZml4LicgKyBhZmZpeFR5cGUudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCd2aWV3cG9ydC0nLCAnJykgKyBFVkVOVF9LRVk7XG4gICAgICAgICAgU3RpY2t5U2lkZWJhci5ldmVudFRyaWdnZXIodGhpcy5zaWRlYmFyLCBhZmZpeEV2ZW50KTtcblxuICAgICAgICAgIGlmKCAnU1RBVElDJyA9PT0gYWZmaXhUeXBlIClcbiAgICAgICAgICAgIFN0aWNreVNpZGViYXIucmVtb3ZlQ2xhc3ModGhpcy5zaWRlYmFyLCB0aGlzLm9wdGlvbnMuc3RpY2t5Q2xhc3MpO1xuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIFN0aWNreVNpZGViYXIuYWRkQ2xhc3ModGhpcy5zaWRlYmFyLCB0aGlzLm9wdGlvbnMuc3RpY2t5Q2xhc3MpO1xuXG4gICAgICAgICAgZm9yKCBsZXQga2V5IGluIHN0eWxlLm91dGVyICl7XG4gICAgICAgICAgICBsZXQgdW5pdCA9ICgnbnVtYmVyJyA9PT0gdHlwZW9mIHN0eWxlLm91dGVyW2tleV0pID8gJ3B4JyA6ICcnO1xuICAgICAgICAgICAgdGhpcy5zaWRlYmFyLnN0eWxlW2tleV0gPSBzdHlsZS5vdXRlcltrZXldICsgdW5pdDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBmb3IoIGxldCBrZXkgaW4gc3R5bGUuaW5uZXIgKXtcbiAgICAgICAgICAgIGxldCB1bml0ID0gKCdudW1iZXInID09PSB0eXBlb2Ygc3R5bGUuaW5uZXJba2V5XSkgPyAncHgnIDogJyc7XG4gICAgICAgICAgICB0aGlzLnNpZGViYXJJbm5lci5zdHlsZVtrZXldID0gc3R5bGUuaW5uZXJba2V5XSArIHVuaXQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbGV0IGFmZml4ZWRFdmVudCA9ICdhZmZpeGVkLicrIGFmZml4VHlwZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoJ3ZpZXdwb3J0LScsICcnKSArIEVWRU5UX0tFWTtcbiAgICAgICAgICBTdGlja3lTaWRlYmFyLmV2ZW50VHJpZ2dlcih0aGlzLnNpZGViYXIsIGFmZml4ZWRFdmVudCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYoIHRoaXMuX2luaXRpYWxpemVkICkgdGhpcy5zaWRlYmFySW5uZXIuc3R5bGUubGVmdCA9IHN0eWxlLmlubmVyLmxlZnQ7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmFmZml4ZWRUeXBlID0gYWZmaXhUeXBlO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEJyZWFrZG93biBzdGlja3kgc2lkZWJhciB3aGVuIHdpbmRvdyB3aWR0aCBpcyBiZWxvdyBgb3B0aW9ucy5taW5XaWR0aGAgdmFsdWUuXG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIF93aWR0aEJyZWFrcG9pbnQoKXtcblxuICAgICAgICBpZiggd2luZG93LmlubmVyV2lkdGggPD0gdGhpcy5vcHRpb25zLm1pbldpZHRoICl7XG4gICAgICAgICAgdGhpcy5fYnJlYWtwb2ludCA9IHRydWU7XG4gICAgICAgICAgdGhpcy5hZmZpeGVkVHlwZSA9ICdTVEFUSUMnO1xuXG4gICAgICAgICAgdGhpcy5zaWRlYmFyLnJlbW92ZUF0dHJpYnV0ZSgnc3R5bGUnKTtcbiAgICAgICAgICBTdGlja3lTaWRlYmFyLnJlbW92ZUNsYXNzKHRoaXMuc2lkZWJhciwgdGhpcy5vcHRpb25zLnN0aWNreUNsYXNzKTtcbiAgICAgICAgICB0aGlzLnNpZGViYXJJbm5lci5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5fYnJlYWtwb2ludCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogU3dpdGNoZXMgYmV0d2VlbiBmdW5jdGlvbnMgc3RhY2sgZm9yIGVhY2ggZXZlbnQgdHlwZSwgaWYgdGhlcmUncyBub1xuICAgICAgICogZXZlbnQsIGl0IHdpbGwgcmUtaW5pdGlhbGl6ZSBzdGlja3kgc2lkZWJhci5cbiAgICAgICAqIEBwdWJsaWNcbiAgICAgICAqL1xuICAgICAgdXBkYXRlU3RpY2t5KGV2ZW50ID0ge30pe1xuICAgICAgICBpZiggdGhpcy5fcnVubmluZyApIHJldHVybjtcbiAgICAgICAgdGhpcy5fcnVubmluZyA9IHRydWU7XG5cbiAgICAgICAgKChldmVudFR5cGUpID0+IHtcbiAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoKCBldmVudFR5cGUgKXtcbiAgICAgICAgICAgICAgLy8gV2hlbiBicm93c2VyIGlzIHNjcm9sbGluZyBhbmQgcmUtY2FsY3VsYXRlIGp1c3QgZGltZW5zaW9uc1xuICAgICAgICAgICAgICAvLyB3aXRoaW4gc2Nyb2xsLlxuICAgICAgICAgICAgICBjYXNlICdzY3JvbGwnOlxuICAgICAgICAgICAgICAgIHRoaXMuX2NhbGNEaW1lbnNpb25zV2l0aFNjcm9sbCgpO1xuICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZVNjcm9sbERpcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuc3RpY2t5UG9zaXRpb24oKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAvLyBXaGVuIGJyb3dzZXIgaXMgcmVzaXppbmcgb3IgdGhlcmUncyBubyBldmVudCwgb2JzZXJ2ZSB3aWR0aFxuICAgICAgICAgICAgICAvLyBicmVha3BvaW50IGFuZCByZS1jYWxjdWxhdGUgZGltZW5zaW9ucy5cbiAgICAgICAgICAgICAgY2FzZSAncmVzaXplJzpcbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aGlzLl93aWR0aEJyZWFrcG9pbnQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGNEaW1lbnNpb25zKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGlja3lQb3NpdGlvbih0cnVlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3J1bm5pbmcgPSBmYWxzZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSkoZXZlbnQudHlwZSk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogU2V0IGJyb3dzZXIgc3VwcG9ydCBmZWF0dXJlcyB0byB0aGUgcHVibGljIHByb3BlcnR5LlxuICAgICAgICogQHByaXZhdGVcbiAgICAgICAqL1xuICAgICAgX3NldFN1cHBvcnRGZWF0dXJlcygpe1xuICAgICAgICB2YXIgc3VwcG9ydCA9IHRoaXMuc3VwcG9ydDtcblxuICAgICAgICBzdXBwb3J0LnRyYW5zZm9ybSA9IFN0aWNreVNpZGViYXIuc3VwcG9ydFRyYW5zZm9ybSgpO1xuICAgICAgICBzdXBwb3J0LnRyYW5zZm9ybTNkID0gU3RpY2t5U2lkZWJhci5zdXBwb3J0VHJhbnNmb3JtKHRydWUpO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEdldCB0cmFuc2xhdGUgdmFsdWUsIGlmIHRoZSBicm93c2VyIHN1cHBvcnRzIHRyYW5zZnJvbTNkLCBpdCB3aWxsIGFkb3B0IGl0LlxuICAgICAgICogYW5kIHRoZSBzYW1lIHdpdGggdHJhbnNsYXRlLiBpZiBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBib3RoIHJldHVybiBmYWxzZS5cbiAgICAgICAqIEBwYXJhbSB7TnVtYmVyfSB5IC0gVmFsdWUgb2YgWS1heGlzLlxuICAgICAgICogQHBhcmFtIHtOdW1iZXJ9IHggLSBWYWx1ZSBvZiBYLWF4aXMuXG4gICAgICAgKiBAcGFyYW0ge051bWJlcn0geiAtIFZhbHVlIG9mIFotYXhpcy5cbiAgICAgICAqIEByZXR1cm4ge1N0cmluZ3xGYWxzZX1cbiAgICAgICAqL1xuICAgICAgX2dldFRyYW5zbGF0ZSh5ID0gMCwgeCA9IDAsIHogPSAwKXtcbiAgICAgICAgaWYoIHRoaXMuc3VwcG9ydC50cmFuc2Zvcm0zZCApIHJldHVybiAndHJhbnNsYXRlM2QoJyArIHkgKycsICcrIHggKycsICcrIHogKycpJztcbiAgICAgICAgZWxzZSBpZiggdGhpcy5zdXBwb3J0LnRyYW5zbGF0ZSApIHJldHVybiAndHJhbnNsYXRlKCcrIHkgKycsICcrIHggKycpJztcbiAgICAgICAgZWxzZSByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogRGVzdHJveSBzdGlja3kgc2lkZWJhciBwbHVnaW4uXG4gICAgICAgKiBAcHVibGljXG4gICAgICAgKi9cbiAgICAgIGRlc3Ryb3koKXtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMsIHtjYXB0dXJlOiBmYWxzZX0pO1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcywge2NhcHR1cmU6IGZhbHNlfSk7XG5cbiAgICAgICAgdGhpcy5zaWRlYmFyLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5vcHRpb25zLnN0aWNreUNsYXNzKTtcbiAgICAgICAgdGhpcy5zaWRlYmFyLnN0eWxlLm1pbkhlaWdodCA9ICcnO1xuXG4gICAgICAgIHRoaXMuc2lkZWJhci5yZW1vdmVFdmVudExpc3RlbmVyKCd1cGRhdGUnICsgRVZFTlRfS0VZLCB0aGlzKTtcblxuICAgICAgICB2YXIgc3R5bGVSZXNldCA9IHtpbm5lcjoge30sIG91dGVyOiB7fX07XG5cbiAgICAgICAgc3R5bGVSZXNldC5pbm5lciA9IHtwb3NpdGlvbjogJycsIHRvcDogJycsIGxlZnQ6ICcnLCBib3R0b206ICcnLCB3aWR0aDogJycsICB0cmFuc2Zvcm06ICcnfTtcbiAgICAgICAgc3R5bGVSZXNldC5vdXRlciA9IHtoZWlnaHQ6ICcnLCBwb3NpdGlvbjogJyd9O1xuXG4gICAgICAgIGZvciggbGV0IGtleSBpbiBzdHlsZVJlc2V0Lm91dGVyIClcbiAgICAgICAgICB0aGlzLnNpZGViYXIuc3R5bGVba2V5XSA9IHN0eWxlUmVzZXQub3V0ZXJba2V5XTtcblxuICAgICAgICBmb3IoIGxldCBrZXkgaW4gc3R5bGVSZXNldC5pbm5lciApXG4gICAgICAgICAgdGhpcy5zaWRlYmFySW5uZXIuc3R5bGVba2V5XSA9IHN0eWxlUmVzZXQuaW5uZXJba2V5XTtcblxuICAgICAgICBpZiggdGhpcy5vcHRpb25zLnJlc2l6ZVNlbnNvciAmJiAndW5kZWZpbmVkJyAhPT0gdHlwZW9mIFJlc2l6ZVNlbnNvciApe1xuICAgICAgICAgIFJlc2l6ZVNlbnNvci5kZXRhY2godGhpcy5zaWRlYmFySW5uZXIsIHRoaXMuaGFuZGxlRXZlbnQpO1xuICAgICAgICAgIFJlc2l6ZVNlbnNvci5kZXRhY2godGhpcy5jb250YWluZXIsIHRoaXMuaGFuZGxlRXZlbnQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogRGV0ZXJtaW5lIGlmIHRoZSBicm93c2VyIHN1cHBvcnRzIENTUyB0cmFuc2Zvcm0gZmVhdHVyZS5cbiAgICAgICAqIEBmdW5jdGlvblxuICAgICAgICogQHN0YXRpY1xuICAgICAgICogQHBhcmFtIHtCb29sZWFufSB0cmFuc2Zvcm0zZCAtIERldGVjdCB0cmFuc2Zvcm0gd2l0aCB0cmFuc2xhdGUzZC5cbiAgICAgICAqIEByZXR1cm4ge1N0cmluZ31cbiAgICAgICAqL1xuICAgICAgc3RhdGljIHN1cHBvcnRUcmFuc2Zvcm0odHJhbnNmb3JtM2Qpe1xuICAgICAgICB2YXIgcmVzdWx0ID0gZmFsc2UsXG4gICAgICAgICAgICBwcm9wZXJ0eSA9ICh0cmFuc2Zvcm0zZCkgPyAncGVyc3BlY3RpdmUnIDogJ3RyYW5zZm9ybScsXG4gICAgICAgICAgICB1cHBlciA9IHByb3BlcnR5LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcHJvcGVydHkuc2xpY2UoMSksXG4gICAgICAgICAgICBwcmVmaXhlcyA9IFsnV2Via2l0JywgJ01veicsICdPJywgJ21zJ10sXG4gICAgICAgICAgICBzdXBwb3J0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3VwcG9ydCcpLFxuICAgICAgICAgICAgc3R5bGUgPSBzdXBwb3J0LnN0eWxlO1xuXG4gICAgICAgIChwcm9wZXJ0eSArICcgJyArIHByZWZpeGVzLmpvaW4odXBwZXIgKyAnICcpICsgdXBwZXIpLnNwbGl0KCcgJykuZm9yRWFjaChmdW5jdGlvbihwcm9wZXJ0eSwgaSkge1xuICAgICAgICAgIGlmIChzdHlsZVtwcm9wZXJ0eV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gcHJvcGVydHk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBUcmlnZ2VyIGN1c3RvbSBldmVudC5cbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqIEBwYXJhbSB7RE9NT2JqZWN0fSBlbGVtZW50IC0gVGFyZ2V0IGVsZW1lbnQgb24gdGhlIERPTS5cbiAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudE5hbWUgLSBFdmVudCBuYW1lLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEgLVxuICAgICAgICovXG4gICAgICBzdGF0aWMgZXZlbnRUcmlnZ2VyKGVsZW1lbnQsIGV2ZW50TmFtZSwgZGF0YSl7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICB2YXIgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCB7ZGV0YWlsOiBkYXRhfSk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgdmFyIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG4gICAgICAgICAgZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwgdHJ1ZSwgdHJ1ZSwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBFeHRlbmQgb3B0aW9ucyBvYmplY3Qgd2l0aCBkZWZhdWx0cy5cbiAgICAgICAqIEBmdW5jdGlvblxuICAgICAgICogQHN0YXRpY1xuICAgICAgICovXG4gICAgICBzdGF0aWMgZXh0ZW5kKGRlZmF1bHRzLCBvcHRpb25zKXtcbiAgICAgICAgdmFyIHJlc3VsdHMgPSB7fTtcbiAgICAgICAgZm9yKCBsZXQga2V5IGluIGRlZmF1bHRzICl7XG4gICAgICAgICAgaWYoICd1bmRlZmluZWQnICE9PSB0eXBlb2Ygb3B0aW9uc1trZXldICkgcmVzdWx0c1trZXldID0gb3B0aW9uc1trZXldO1xuICAgICAgICAgIGVsc2UgcmVzdWx0c1trZXldID0gZGVmYXVsdHNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBHZXQgY3VycmVudCBjb29yZGluYXRlcyBsZWZ0IGFuZCB0b3Agb2Ygc3BlY2lmaWMgZWxlbWVudC5cbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqL1xuICAgICAgc3RhdGljIG9mZnNldFJlbGF0aXZlKGVsZW1lbnQpe1xuICAgICAgICB2YXIgcmVzdWx0ID0ge2xlZnQ6IDAsIHRvcDogMH07XG5cbiAgICAgICAgZG97XG4gICAgICAgICAgbGV0IG9mZnNldFRvcCA9IGVsZW1lbnQub2Zmc2V0VG9wO1xuICAgICAgICAgIGxldCBvZmZzZXRMZWZ0ID0gZWxlbWVudC5vZmZzZXRMZWZ0O1xuXG4gICAgICAgICAgaWYoICEgaXNOYU4ob2Zmc2V0VG9wKSApXG4gICAgICAgICAgICByZXN1bHQudG9wICs9IG9mZnNldFRvcDtcblxuICAgICAgICAgIGlmKCAhIGlzTmFOKG9mZnNldExlZnQpIClcbiAgICAgICAgICAgIHJlc3VsdC5sZWZ0ICs9IG9mZnNldExlZnQ7XG5cbiAgICAgICAgICBlbGVtZW50ID0gKCAnQk9EWScgPT09IGVsZW1lbnQudGFnTmFtZSApID9cbiAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnBhcmVudEVsZW1lbnQgOiBlbGVtZW50Lm9mZnNldFBhcmVudDtcbiAgICAgICAgfSB3aGlsZShlbGVtZW50KVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEFkZCBzcGVjaWZpYyBjbGFzcyBuYW1lIHRvIHNwZWNpZmljIGVsZW1lbnQuXG4gICAgICAgKiBAc3RhdGljXG4gICAgICAgKiBAcGFyYW0ge09iamVjdERPTX0gZWxlbWVudFxuICAgICAgICogQHBhcmFtIHtTdHJpbmd9IGNsYXNzTmFtZVxuICAgICAgICovXG4gICAgICBzdGF0aWMgYWRkQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lKXtcbiAgICAgICAgaWYoICEgU3RpY2t5U2lkZWJhci5oYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpICl7XG4gICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KVxuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgZWxlbWVudC5jbGFzc05hbWUgKz0gJyAnICsgY2xhc3NOYW1lO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogUmVtb3ZlIHNwZWNpZmljIGNsYXNzIG5hbWUgdG8gc3BlY2lmaWMgZWxlbWVudFxuICAgICAgICogQHN0YXRpY1xuICAgICAgICogQHBhcmFtIHtPYmplY3RET019IGVsZW1lbnRcbiAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjbGFzc05hbWVcbiAgICAgICAqL1xuICAgICAgc3RhdGljIHJlbW92ZUNsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSl7XG4gICAgICAgIGlmKCBTdGlja3lTaWRlYmFyLmhhc0NsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkgKXtcbiAgICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpXG4gICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcbiAgICAgICAgICBlbHNlXG4gICAgICAgICAgICBlbGVtZW50LmNsYXNzTmFtZSA9IGVsZW1lbnQuY2xhc3NOYW1lLnJlcGxhY2UobmV3IFJlZ0V4cCgnKF58XFxcXGIpJyArIGNsYXNzTmFtZS5zcGxpdCgnICcpLmpvaW4oJ3wnKSArICcoXFxcXGJ8JCknLCAnZ2knKSwgJyAnKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIERldGVybWluZSB3ZWF0aGVyIHRoZSBlbGVtZW50IGhhcyBzcGVjaWZpYyBjbGFzcyBuYW1lLlxuICAgICAgICogQHN0YXRpY1xuICAgICAgICogQHBhcmFtIHtPYmplY3RET019IGVsZW1lbnRcbiAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjbGFzc05hbWVcbiAgICAgICAqL1xuICAgICAgc3RhdGljIGhhc0NsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSl7XG4gICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdClcbiAgICAgICAgICByZXR1cm4gZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKCcoXnwgKScgKyBjbGFzc05hbWUgKyAnKCB8JCknLCAnZ2knKS50ZXN0KGVsZW1lbnQuY2xhc3NOYW1lKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBHZXRzIGRlZmF1bHQgdmFsdWVzIG9mIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy5cbiAgICAgICAqIEBzdGF0aWNcbiAgICAgICAqIEByZXR1cm4ge09iamVjdH1cbiAgICAgICAqL1xuICAgICAgc3RhdGljIGdldCBkZWZhdWx0cygpe1xuICAgICAgICByZXR1cm4gREVGQVVMVFM7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFN0aWNreVNpZGViYXI7XG4gIH0pKCk7XG5cbiAgZXhwb3J0IGRlZmF1bHQgU3RpY2t5U2lkZWJhcjtcblxuICAvLyBHbG9iYWxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB3aW5kb3cuU3RpY2t5U2lkZWJhciA9IFN0aWNreVNpZGViYXI7XG4iLCJpbXBvcnQgU3RpY2t5U2lkZWJhciBmcm9tIFwic3RpY2t5LXNpZGViYXItdjJcIjtcclxuXHJcbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhcicpKSB7XHJcbiAgdmFyIHNpZGViYXIgPSBuZXcgU3RpY2t5U2lkZWJhcignLnNpZGViYXInLCB7XHJcbiAgICAgICAgICBjb250YWluZXJTZWxlY3RvcjogJy5sYXlvdXQnLFxyXG4gICAgICAgICAgaW5uZXJXcmFwcGVyU2VsZWN0b3I6ICcuc2lkZWJhcl9faW5uZXInLFxyXG4gICAgICAgICAgdG9wU3BhY2luZzogMzAsXHJcbiAgICAgICAgICBib3R0b21TcGFjaW5nOiAyMFxyXG4gIH0pO1xyXG59XHJcbiIsInZhciBvYmplY3RFeHRlbmQgPSBleHRlbmQ7XG5cbi8qXG4gIHZhciBvYmogPSB7YTogMywgYjogNX07XG4gIGV4dGVuZChvYmosIHthOiA0LCBjOiA4fSk7IC8vIHthOiA0LCBiOiA1LCBjOiA4fVxuICBvYmo7IC8vIHthOiA0LCBiOiA1LCBjOiA4fVxuXG4gIHZhciBvYmogPSB7YTogMywgYjogNX07XG4gIGV4dGVuZCh7fSwgb2JqLCB7YTogNCwgYzogOH0pOyAvLyB7YTogNCwgYjogNSwgYzogOH1cbiAgb2JqOyAvLyB7YTogMywgYjogNX1cblxuICB2YXIgYXJyID0gWzEsIDIsIDNdO1xuICB2YXIgb2JqID0ge2E6IDMsIGI6IDV9O1xuICBleHRlbmQob2JqLCB7YzogYXJyfSk7IC8vIHthOiAzLCBiOiA1LCBjOiBbMSwgMiwgM119XG4gIGFyci5wdXNoKDQpO1xuICBvYmo7IC8vIHthOiAzLCBiOiA1LCBjOiBbMSwgMiwgMywgNF19XG5cbiAgdmFyIGFyciA9IFsxLCAyLCAzXTtcbiAgdmFyIG9iaiA9IHthOiAzLCBiOiA1fTtcbiAgZXh0ZW5kKHRydWUsIG9iaiwge2M6IGFycn0pOyAvLyB7YTogMywgYjogNSwgYzogWzEsIDIsIDNdfVxuICBhcnIucHVzaCg0KTtcbiAgb2JqOyAvLyB7YTogMywgYjogNSwgYzogWzEsIDIsIDNdfVxuXG4gIGV4dGVuZCh7YTogNCwgYjogNX0pOyAvLyB7YTogNCwgYjogNX1cbiAgZXh0ZW5kKHthOiA0LCBiOiA1fSwgMyk7IHthOiA0LCBiOiA1fVxuICBleHRlbmQoe2E6IDQsIGI6IDV9LCB0cnVlKTsge2E6IDQsIGI6IDV9XG4gIGV4dGVuZCgnaGVsbG8nLCB7YTogNCwgYjogNX0pOyAvLyB0aHJvd3NcbiAgZXh0ZW5kKDMsIHthOiA0LCBiOiA1fSk7IC8vIHRocm93c1xuKi9cblxuZnVuY3Rpb24gZXh0ZW5kKC8qIFtkZWVwXSwgb2JqMSwgb2JqMiwgW29iam5dICovKSB7XG4gIHZhciBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuICB2YXIgZGVlcCA9IGZhbHNlO1xuICBpZiAodHlwZW9mIGFyZ3NbMF0gPT0gJ2Jvb2xlYW4nKSB7XG4gICAgZGVlcCA9IGFyZ3Muc2hpZnQoKTtcbiAgfVxuICB2YXIgcmVzdWx0ID0gYXJnc1swXTtcbiAgaWYgKGlzVW5leHRlbmRhYmxlKHJlc3VsdCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2V4dGVuZGVlIG11c3QgYmUgYW4gb2JqZWN0Jyk7XG4gIH1cbiAgdmFyIGV4dGVuZGVycyA9IGFyZ3Muc2xpY2UoMSk7XG4gIHZhciBsZW4gPSBleHRlbmRlcnMubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgdmFyIGV4dGVuZGVyID0gZXh0ZW5kZXJzW2ldO1xuICAgIGZvciAodmFyIGtleSBpbiBleHRlbmRlcikge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHRlbmRlciwga2V5KSkge1xuICAgICAgICB2YXIgdmFsdWUgPSBleHRlbmRlcltrZXldO1xuICAgICAgICBpZiAoZGVlcCAmJiBpc0Nsb25lYWJsZSh2YWx1ZSkpIHtcbiAgICAgICAgICB2YXIgYmFzZSA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gW10gOiB7fTtcbiAgICAgICAgICByZXN1bHRba2V5XSA9IGV4dGVuZChcbiAgICAgICAgICAgIHRydWUsXG4gICAgICAgICAgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocmVzdWx0LCBrZXkpICYmICFpc1VuZXh0ZW5kYWJsZShyZXN1bHRba2V5XSlcbiAgICAgICAgICAgICAgPyByZXN1bHRba2V5XVxuICAgICAgICAgICAgICA6IGJhc2UsXG4gICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBpc0Nsb25lYWJsZShvYmopIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JqKSB8fCB7fS50b1N0cmluZy5jYWxsKG9iaikgPT0gJ1tvYmplY3QgT2JqZWN0XSc7XG59XG5cbmZ1bmN0aW9uIGlzVW5leHRlbmRhYmxlKHZhbCkge1xuICByZXR1cm4gIXZhbCB8fCAodHlwZW9mIHZhbCAhPSAnb2JqZWN0JyAmJiB0eXBlb2YgdmFsICE9ICdmdW5jdGlvbicpO1xufVxuXG5leHBvcnQge29iamVjdEV4dGVuZCBhcyBkZWZhdWx0fTtcbiIsImltcG9ydCAkZXdCS3kkanVzdGV4dGVuZCBmcm9tIFwianVzdC1leHRlbmRcIjtcblxuZnVuY3Rpb24gJHBhcmNlbCRpbnRlcm9wRGVmYXVsdChhKSB7XG4gIHJldHVybiBhICYmIGEuX19lc01vZHVsZSA/IGEuZGVmYXVsdCA6IGE7XG59XG5cbmNsYXNzICQ0MDQwYWNmZDg1ODQzMzhkJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkge1xuICAgIC8vIEFkZCBhbiBldmVudCBsaXN0ZW5lciBmb3IgZ2l2ZW4gZXZlbnRcbiAgICBvbihldmVudCwgZm4pIHtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gQ3JlYXRlIG5hbWVzcGFjZSBmb3IgdGhpcyBldmVudFxuICAgICAgICBpZiAoIXRoaXMuX2NhbGxiYWNrc1tldmVudF0pIHRoaXMuX2NhbGxiYWNrc1tldmVudF0gPSBbXTtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2tzW2V2ZW50XS5wdXNoKGZuKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGVtaXQoZXZlbnQsIC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHtcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IGNhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrc1tldmVudF07XG4gICAgICAgIGlmIChjYWxsYmFja3MpIGZvciAobGV0IGNhbGxiYWNrIG9mIGNhbGxiYWNrcyljYWxsYmFjay5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgLy8gdHJpZ2dlciBhIGNvcnJlc3BvbmRpbmcgRE9NIGV2ZW50XG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnQpIHRoaXMuZWxlbWVudC5kaXNwYXRjaEV2ZW50KHRoaXMubWFrZUV2ZW50KFwiZHJvcHpvbmU6XCIgKyBldmVudCwge1xuICAgICAgICAgICAgYXJnczogYXJnc1xuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBtYWtlRXZlbnQoZXZlbnROYW1lLCBkZXRhaWwpIHtcbiAgICAgICAgbGV0IHBhcmFtcyA9IHtcbiAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgICBjYW5jZWxhYmxlOiB0cnVlLFxuICAgICAgICAgICAgZGV0YWlsOiBkZXRhaWxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG5ldyBDdXN0b21FdmVudChldmVudE5hbWUsIHBhcmFtcyk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gSUUgMTEgc3VwcG9ydFxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0N1c3RvbUV2ZW50L0N1c3RvbUV2ZW50XG4gICAgICAgICAgICB2YXIgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJDdXN0b21FdmVudFwiKTtcbiAgICAgICAgICAgIGV2dC5pbml0Q3VzdG9tRXZlbnQoZXZlbnROYW1lLCBwYXJhbXMuYnViYmxlcywgcGFyYW1zLmNhbmNlbGFibGUsIHBhcmFtcy5kZXRhaWwpO1xuICAgICAgICAgICAgcmV0dXJuIGV2dDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBSZW1vdmUgZXZlbnQgbGlzdGVuZXIgZm9yIGdpdmVuIGV2ZW50LiBJZiBmbiBpcyBub3QgcHJvdmlkZWQsIGFsbCBldmVudFxuICAgIC8vIGxpc3RlbmVycyBmb3IgdGhhdCBldmVudCB3aWxsIGJlIHJlbW92ZWQuIElmIG5laXRoZXIgaXMgcHJvdmlkZWQsIGFsbFxuICAgIC8vIGV2ZW50IGxpc3RlbmVycyB3aWxsIGJlIHJlbW92ZWQuXG4gICAgb2ZmKGV2ZW50LCBmbikge1xuICAgICAgICBpZiAoIXRoaXMuX2NhbGxiYWNrcyB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLl9jYWxsYmFja3MgPSB7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgLy8gc3BlY2lmaWMgZXZlbnRcbiAgICAgICAgbGV0IGNhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrc1tldmVudF07XG4gICAgICAgIGlmICghY2FsbGJhY2tzKSByZXR1cm4gdGhpcztcbiAgICAgICAgLy8gcmVtb3ZlIGFsbCBoYW5kbGVyc1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMuX2NhbGxiYWNrc1tldmVudF07XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICAvLyByZW1vdmUgc3BlY2lmaWMgaGFuZGxlclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIGxldCBjYWxsYmFjayA9IGNhbGxiYWNrc1tpXTtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjayA9PT0gZm4pIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFja3Muc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cblxuXG5cbnZhciAkZmQ2MDMxZjg4ZGNlMmUzMiRleHBvcnRzID0ge307XG4kZmQ2MDMxZjg4ZGNlMmUzMiRleHBvcnRzID0gXCI8ZGl2IGNsYXNzPVxcXCJkei1wcmV2aWV3IGR6LWZpbGUtcHJldmlld1xcXCI+XFxuICA8ZGl2IGNsYXNzPVxcXCJkei1pbWFnZVxcXCI+PGltZyBkYXRhLWR6LXRodW1ibmFpbD1cXFwiXFxcIj48L2Rpdj5cXG4gIDxkaXYgY2xhc3M9XFxcImR6LWRldGFpbHNcXFwiPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJkei1zaXplXFxcIj48c3BhbiBkYXRhLWR6LXNpemU9XFxcIlxcXCI+PC9zcGFuPjwvZGl2PlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJkei1maWxlbmFtZVxcXCI+PHNwYW4gZGF0YS1kei1uYW1lPVxcXCJcXFwiPjwvc3Bhbj48L2Rpdj5cXG4gIDwvZGl2PlxcbiAgPGRpdiBjbGFzcz1cXFwiZHotcHJvZ3Jlc3NcXFwiPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiZHotdXBsb2FkXFxcIiBkYXRhLWR6LXVwbG9hZHByb2dyZXNzPVxcXCJcXFwiPjwvc3Bhbj5cXG4gIDwvZGl2PlxcbiAgPGRpdiBjbGFzcz1cXFwiZHotZXJyb3ItbWVzc2FnZVxcXCI+PHNwYW4gZGF0YS1kei1lcnJvcm1lc3NhZ2U9XFxcIlxcXCI+PC9zcGFuPjwvZGl2PlxcbiAgPGRpdiBjbGFzcz1cXFwiZHotc3VjY2Vzcy1tYXJrXFxcIj5cXG4gICAgPHN2ZyB3aWR0aD1cXFwiNTRcXFwiIGhlaWdodD1cXFwiNTRcXFwiIHZpZXdCb3g9XFxcIjAgMCA1NCA1NFxcXCIgZmlsbD1cXFwid2hpdGVcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+XFxuICAgICAgPHBhdGggZD1cXFwiTTEwLjIwNzEgMjkuNzkyOUwxNC4yOTI5IDI1LjcwNzFDMTQuNjgzNCAyNS4zMTY2IDE1LjMxNjYgMjUuMzE2NiAxNS43MDcxIDI1LjcwNzFMMjEuMjkyOSAzMS4yOTI5QzIxLjY4MzQgMzEuNjgzNCAyMi4zMTY2IDMxLjY4MzQgMjIuNzA3MSAzMS4yOTI5TDM4LjI5MjkgMTUuNzA3MUMzOC42ODM0IDE1LjMxNjYgMzkuMzE2NiAxNS4zMTY2IDM5LjcwNzEgMTUuNzA3MUw0My43OTI5IDE5Ljc5MjlDNDQuMTgzNCAyMC4xODM0IDQ0LjE4MzQgMjAuODE2NiA0My43OTI5IDIxLjIwNzFMMjIuNzA3MSA0Mi4yOTI5QzIyLjMxNjYgNDIuNjgzNCAyMS42ODM0IDQyLjY4MzQgMjEuMjkyOSA0Mi4yOTI5TDEwLjIwNzEgMzEuMjA3MUM5LjgxNjU4IDMwLjgxNjYgOS44MTY1OCAzMC4xODM0IDEwLjIwNzEgMjkuNzkyOVpcXFwiPjwvcGF0aD5cXG4gICAgPC9zdmc+XFxuICA8L2Rpdj5cXG4gIDxkaXYgY2xhc3M9XFxcImR6LWVycm9yLW1hcmtcXFwiPlxcbiAgICA8c3ZnIHdpZHRoPVxcXCI1NFxcXCIgaGVpZ2h0PVxcXCI1NFxcXCIgdmlld0JveD1cXFwiMCAwIDU0IDU0XFxcIiBmaWxsPVxcXCJ3aGl0ZVxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIj5cXG4gICAgICA8cGF0aCBkPVxcXCJNMjYuMjkyOSAyMC4yOTI5TDE5LjIwNzEgMTMuMjA3MUMxOC44MTY2IDEyLjgxNjYgMTguMTgzNCAxMi44MTY2IDE3Ljc5MjkgMTMuMjA3MUwxMy4yMDcxIDE3Ljc5MjlDMTIuODE2NiAxOC4xODM0IDEyLjgxNjYgMTguODE2NiAxMy4yMDcxIDE5LjIwNzFMMjAuMjkyOSAyNi4yOTI5QzIwLjY4MzQgMjYuNjgzNCAyMC42ODM0IDI3LjMxNjYgMjAuMjkyOSAyNy43MDcxTDEzLjIwNzEgMzQuNzkyOUMxMi44MTY2IDM1LjE4MzQgMTIuODE2NiAzNS44MTY2IDEzLjIwNzEgMzYuMjA3MUwxNy43OTI5IDQwLjc5MjlDMTguMTgzNCA0MS4xODM0IDE4LjgxNjYgNDEuMTgzNCAxOS4yMDcxIDQwLjc5MjlMMjYuMjkyOSAzMy43MDcxQzI2LjY4MzQgMzMuMzE2NiAyNy4zMTY2IDMzLjMxNjYgMjcuNzA3MSAzMy43MDcxTDM0Ljc5MjkgNDAuNzkyOUMzNS4xODM0IDQxLjE4MzQgMzUuODE2NiA0MS4xODM0IDM2LjIwNzEgNDAuNzkyOUw0MC43OTI5IDM2LjIwNzFDNDEuMTgzNCAzNS44MTY2IDQxLjE4MzQgMzUuMTgzNCA0MC43OTI5IDM0Ljc5MjlMMzMuNzA3MSAyNy43MDcxQzMzLjMxNjYgMjcuMzE2NiAzMy4zMTY2IDI2LjY4MzQgMzMuNzA3MSAyNi4yOTI5TDQwLjc5MjkgMTkuMjA3MUM0MS4xODM0IDE4LjgxNjYgNDEuMTgzNCAxOC4xODM0IDQwLjc5MjkgMTcuNzkyOUwzNi4yMDcxIDEzLjIwNzFDMzUuODE2NiAxMi44MTY2IDM1LjE4MzQgMTIuODE2NiAzNC43OTI5IDEzLjIwNzFMMjcuNzA3MSAyMC4yOTI5QzI3LjMxNjYgMjAuNjgzNCAyNi42ODM0IDIwLjY4MzQgMjYuMjkyOSAyMC4yOTI5WlxcXCI+PC9wYXRoPlxcbiAgICA8L3N2Zz5cXG4gIDwvZGl2PlxcbjwvZGl2PlxcblwiO1xuXG5cbmxldCAkNGNhMzY3MTgyNzc2ZjgwYiR2YXIkZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgLyoqXG4gICAqIEhhcyB0byBiZSBzcGVjaWZpZWQgb24gZWxlbWVudHMgb3RoZXIgdGhhbiBmb3JtIChvciB3aGVuIHRoZSBmb3JtIGRvZXNuJ3RcbiAgICogaGF2ZSBhbiBgYWN0aW9uYCBhdHRyaWJ1dGUpLlxuICAgKlxuICAgKiBZb3UgY2FuIGFsc28gcHJvdmlkZSBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBjYWxsZWQgd2l0aCBgZmlsZXNgIGFuZFxuICAgKiBgZGF0YUJsb2Nrc2AgIGFuZCBtdXN0IHJldHVybiB0aGUgdXJsIGFzIHN0cmluZy5cbiAgICovIHVybDogbnVsbCxcbiAgICAvKipcbiAgICogQ2FuIGJlIGNoYW5nZWQgdG8gYFwicHV0XCJgIGlmIG5lY2Vzc2FyeS4gWW91IGNhbiBhbHNvIHByb3ZpZGUgYSBmdW5jdGlvblxuICAgKiB0aGF0IHdpbGwgYmUgY2FsbGVkIHdpdGggYGZpbGVzYCBhbmQgbXVzdCByZXR1cm4gdGhlIG1ldGhvZCAoc2luY2UgYHYzLjEyLjBgKS5cbiAgICovIG1ldGhvZDogXCJwb3N0XCIsXG4gICAgLyoqXG4gICAqIFdpbGwgYmUgc2V0IG9uIHRoZSBYSFJlcXVlc3QuXG4gICAqLyB3aXRoQ3JlZGVudGlhbHM6IGZhbHNlLFxuICAgIC8qKlxuICAgKiBUaGUgdGltZW91dCBmb3IgdGhlIFhIUiByZXF1ZXN0cyBpbiBtaWxsaXNlY29uZHMgKHNpbmNlIGB2NC40LjBgKS5cbiAgICogSWYgc2V0IHRvIG51bGwgb3IgMCwgbm8gdGltZW91dCBpcyBnb2luZyB0byBiZSBzZXQuXG4gICAqLyB0aW1lb3V0OiBudWxsLFxuICAgIC8qKlxuICAgKiBIb3cgbWFueSBmaWxlIHVwbG9hZHMgdG8gcHJvY2VzcyBpbiBwYXJhbGxlbCAoU2VlIHRoZVxuICAgKiBFbnF1ZXVpbmcgZmlsZSB1cGxvYWRzIGRvY3VtZW50YXRpb24gc2VjdGlvbiBmb3IgbW9yZSBpbmZvKVxuICAgKi8gcGFyYWxsZWxVcGxvYWRzOiAyLFxuICAgIC8qKlxuICAgKiBXaGV0aGVyIHRvIHNlbmQgbXVsdGlwbGUgZmlsZXMgaW4gb25lIHJlcXVlc3QuIElmXG4gICAqIHRoaXMgaXQgc2V0IHRvIHRydWUsIHRoZW4gdGhlIGZhbGxiYWNrIGZpbGUgaW5wdXQgZWxlbWVudCB3aWxsXG4gICAqIGhhdmUgdGhlIGBtdWx0aXBsZWAgYXR0cmlidXRlIGFzIHdlbGwuIFRoaXMgb3B0aW9uIHdpbGxcbiAgICogYWxzbyB0cmlnZ2VyIGFkZGl0aW9uYWwgZXZlbnRzIChsaWtlIGBwcm9jZXNzaW5nbXVsdGlwbGVgKS4gU2VlIHRoZSBldmVudHNcbiAgICogZG9jdW1lbnRhdGlvbiBzZWN0aW9uIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgKi8gdXBsb2FkTXVsdGlwbGU6IGZhbHNlLFxuICAgIC8qKlxuICAgKiBXaGV0aGVyIHlvdSB3YW50IGZpbGVzIHRvIGJlIHVwbG9hZGVkIGluIGNodW5rcyB0byB5b3VyIHNlcnZlci4gVGhpcyBjYW4ndCBiZVxuICAgKiB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggYHVwbG9hZE11bHRpcGxlYC5cbiAgICpcbiAgICogU2VlIFtjaHVua3NVcGxvYWRlZF0oI2NvbmZpZy1jaHVua3NVcGxvYWRlZCkgZm9yIHRoZSBjYWxsYmFjayB0byBmaW5hbGlzZSBhbiB1cGxvYWQuXG4gICAqLyBjaHVua2luZzogZmFsc2UsXG4gICAgLyoqXG4gICAqIElmIGBjaHVua2luZ2AgaXMgZW5hYmxlZCwgdGhpcyBkZWZpbmVzIHdoZXRoZXIgKipldmVyeSoqIGZpbGUgc2hvdWxkIGJlIGNodW5rZWQsXG4gICAqIGV2ZW4gaWYgdGhlIGZpbGUgc2l6ZSBpcyBiZWxvdyBjaHVua1NpemUuIFRoaXMgbWVhbnMsIHRoYXQgdGhlIGFkZGl0aW9uYWwgY2h1bmtcbiAgICogZm9ybSBkYXRhIHdpbGwgYmUgc3VibWl0dGVkIGFuZCB0aGUgYGNodW5rc1VwbG9hZGVkYCBjYWxsYmFjayB3aWxsIGJlIGludm9rZWQuXG4gICAqLyBmb3JjZUNodW5raW5nOiBmYWxzZSxcbiAgICAvKipcbiAgICogSWYgYGNodW5raW5nYCBpcyBgdHJ1ZWAsIHRoZW4gdGhpcyBkZWZpbmVzIHRoZSBjaHVuayBzaXplIGluIGJ5dGVzLlxuICAgKi8gY2h1bmtTaXplOiAyMDk3MTUyLFxuICAgIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBpbmRpdmlkdWFsIGNodW5rcyBvZiBhIGZpbGUgYXJlIGJlaW5nIHVwbG9hZGVkIHNpbXVsdGFuZW91c2x5LlxuICAgKi8gcGFyYWxsZWxDaHVua1VwbG9hZHM6IGZhbHNlLFxuICAgIC8qKlxuICAgKiBXaGV0aGVyIGEgY2h1bmsgc2hvdWxkIGJlIHJldHJpZWQgaWYgaXQgZmFpbHMuXG4gICAqLyByZXRyeUNodW5rczogZmFsc2UsXG4gICAgLyoqXG4gICAqIElmIGByZXRyeUNodW5rc2AgaXMgdHJ1ZSwgaG93IG1hbnkgdGltZXMgc2hvdWxkIGl0IGJlIHJldHJpZWQuXG4gICAqLyByZXRyeUNodW5rc0xpbWl0OiAzLFxuICAgIC8qKlxuICAgKiBUaGUgbWF4aW11bSBmaWxlc2l6ZSAoaW4gTWlCKSB0aGF0IGlzIGFsbG93ZWQgdG8gYmUgdXBsb2FkZWQuXG4gICAqLyBtYXhGaWxlc2l6ZTogMjU2LFxuICAgIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZmlsZSBwYXJhbSB0aGF0IGdldHMgdHJhbnNmZXJyZWQuXG4gICAqICoqTk9URSoqOiBJZiB5b3UgaGF2ZSB0aGUgb3B0aW9uICBgdXBsb2FkTXVsdGlwbGVgIHNldCB0byBgdHJ1ZWAsIHRoZW5cbiAgICogRHJvcHpvbmUgd2lsbCBhcHBlbmQgYFtdYCB0byB0aGUgbmFtZS5cbiAgICovIHBhcmFtTmFtZTogXCJmaWxlXCIsXG4gICAgLyoqXG4gICAqIFdoZXRoZXIgdGh1bWJuYWlscyBmb3IgaW1hZ2VzIHNob3VsZCBiZSBnZW5lcmF0ZWRcbiAgICovIGNyZWF0ZUltYWdlVGh1bWJuYWlsczogdHJ1ZSxcbiAgICAvKipcbiAgICogSW4gTUIuIFdoZW4gdGhlIGZpbGVuYW1lIGV4Y2VlZHMgdGhpcyBsaW1pdCwgdGhlIHRodW1ibmFpbCB3aWxsIG5vdCBiZSBnZW5lcmF0ZWQuXG4gICAqLyBtYXhUaHVtYm5haWxGaWxlc2l6ZTogMTAsXG4gICAgLyoqXG4gICAqIElmIGBudWxsYCwgdGhlIHJhdGlvIG9mIHRoZSBpbWFnZSB3aWxsIGJlIHVzZWQgdG8gY2FsY3VsYXRlIGl0LlxuICAgKi8gdGh1bWJuYWlsV2lkdGg6IDEyMCxcbiAgICAvKipcbiAgICogVGhlIHNhbWUgYXMgYHRodW1ibmFpbFdpZHRoYC4gSWYgYm90aCBhcmUgbnVsbCwgaW1hZ2VzIHdpbGwgbm90IGJlIHJlc2l6ZWQuXG4gICAqLyB0aHVtYm5haWxIZWlnaHQ6IDEyMCxcbiAgICAvKipcbiAgICogSG93IHRoZSBpbWFnZXMgc2hvdWxkIGJlIHNjYWxlZCBkb3duIGluIGNhc2UgYm90aCwgYHRodW1ibmFpbFdpZHRoYCBhbmQgYHRodW1ibmFpbEhlaWdodGAgYXJlIHByb3ZpZGVkLlxuICAgKiBDYW4gYmUgZWl0aGVyIGBjb250YWluYCBvciBgY3JvcGAuXG4gICAqLyB0aHVtYm5haWxNZXRob2Q6IFwiY3JvcFwiLFxuICAgIC8qKlxuICAgKiBJZiBzZXQsIGltYWdlcyB3aWxsIGJlIHJlc2l6ZWQgdG8gdGhlc2UgZGltZW5zaW9ucyBiZWZvcmUgYmVpbmcgKip1cGxvYWRlZCoqLlxuICAgKiBJZiBvbmx5IG9uZSwgYHJlc2l6ZVdpZHRoYCAqKm9yKiogYHJlc2l6ZUhlaWdodGAgaXMgcHJvdmlkZWQsIHRoZSBvcmlnaW5hbCBhc3BlY3RcbiAgICogcmF0aW8gb2YgdGhlIGZpbGUgd2lsbCBiZSBwcmVzZXJ2ZWQuXG4gICAqXG4gICAqIFRoZSBgb3B0aW9ucy50cmFuc2Zvcm1GaWxlYCBmdW5jdGlvbiB1c2VzIHRoZXNlIG9wdGlvbnMsIHNvIGlmIHRoZSBgdHJhbnNmb3JtRmlsZWAgZnVuY3Rpb25cbiAgICogaXMgb3ZlcnJpZGRlbiwgdGhlc2Ugb3B0aW9ucyBkb24ndCBkbyBhbnl0aGluZy5cbiAgICovIHJlc2l6ZVdpZHRoOiBudWxsLFxuICAgIC8qKlxuICAgKiBTZWUgYHJlc2l6ZVdpZHRoYC5cbiAgICovIHJlc2l6ZUhlaWdodDogbnVsbCxcbiAgICAvKipcbiAgICogVGhlIG1pbWUgdHlwZSBvZiB0aGUgcmVzaXplZCBpbWFnZSAoYmVmb3JlIGl0IGdldHMgdXBsb2FkZWQgdG8gdGhlIHNlcnZlcikuXG4gICAqIElmIGBudWxsYCB0aGUgb3JpZ2luYWwgbWltZSB0eXBlIHdpbGwgYmUgdXNlZC4gVG8gZm9yY2UganBlZywgZm9yIGV4YW1wbGUsIHVzZSBgaW1hZ2UvanBlZ2AuXG4gICAqIFNlZSBgcmVzaXplV2lkdGhgIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgKi8gcmVzaXplTWltZVR5cGU6IG51bGwsXG4gICAgLyoqXG4gICAqIFRoZSBxdWFsaXR5IG9mIHRoZSByZXNpemVkIGltYWdlcy4gU2VlIGByZXNpemVXaWR0aGAuXG4gICAqLyByZXNpemVRdWFsaXR5OiAwLjgsXG4gICAgLyoqXG4gICAqIEhvdyB0aGUgaW1hZ2VzIHNob3VsZCBiZSBzY2FsZWQgZG93biBpbiBjYXNlIGJvdGgsIGByZXNpemVXaWR0aGAgYW5kIGByZXNpemVIZWlnaHRgIGFyZSBwcm92aWRlZC5cbiAgICogQ2FuIGJlIGVpdGhlciBgY29udGFpbmAgb3IgYGNyb3BgLlxuICAgKi8gcmVzaXplTWV0aG9kOiBcImNvbnRhaW5cIixcbiAgICAvKipcbiAgICogVGhlIGJhc2UgdGhhdCBpcyB1c2VkIHRvIGNhbGN1bGF0ZSB0aGUgKipkaXNwbGF5ZWQqKiBmaWxlc2l6ZS4gWW91IGNhblxuICAgKiBjaGFuZ2UgdGhpcyB0byAxMDI0IGlmIHlvdSB3b3VsZCByYXRoZXIgZGlzcGxheSBraWJpYnl0ZXMsIG1lYmlieXRlcyxcbiAgICogZXRjLi4uIDEwMjQgaXMgdGVjaG5pY2FsbHkgaW5jb3JyZWN0LCBiZWNhdXNlIGAxMDI0IGJ5dGVzYCBhcmUgYDEga2liaWJ5dGVgXG4gICAqIG5vdCBgMSBraWxvYnl0ZWAuIFlvdSBjYW4gY2hhbmdlIHRoaXMgdG8gYDEwMjRgIGlmIHlvdSBkb24ndCBjYXJlIGFib3V0XG4gICAqIHZhbGlkaXR5LlxuICAgKi8gZmlsZXNpemVCYXNlOiAxMDAwLFxuICAgIC8qKlxuICAgKiBJZiBub3QgYG51bGxgIGRlZmluZXMgaG93IG1hbnkgZmlsZXMgdGhpcyBEcm9wem9uZSBoYW5kbGVzLiBJZiBpdCBleGNlZWRzLFxuICAgKiB0aGUgZXZlbnQgYG1heGZpbGVzZXhjZWVkZWRgIHdpbGwgYmUgY2FsbGVkLiBUaGUgZHJvcHpvbmUgZWxlbWVudCBnZXRzIHRoZVxuICAgKiBjbGFzcyBgZHotbWF4LWZpbGVzLXJlYWNoZWRgIGFjY29yZGluZ2x5IHNvIHlvdSBjYW4gcHJvdmlkZSB2aXN1YWxcbiAgICogZmVlZGJhY2suXG4gICAqLyBtYXhGaWxlczogbnVsbCxcbiAgICAvKipcbiAgICogQW4gb3B0aW9uYWwgb2JqZWN0IHRvIHNlbmQgYWRkaXRpb25hbCBoZWFkZXJzIHRvIHRoZSBzZXJ2ZXIuIEVnOlxuICAgKiBgeyBcIk15LUF3ZXNvbWUtSGVhZGVyXCI6IFwiaGVhZGVyIHZhbHVlXCIgfWBcbiAgICovIGhlYWRlcnM6IG51bGwsXG4gICAgLyoqXG4gICAqIFNob3VsZCB0aGUgZGVmYXVsdCBoZWFkZXJzIGJlIHNldCBvciBub3Q/XG4gICAqIEFjY2VwdDogYXBwbGljYXRpb24vanNvbiA8LSBmb3IgcmVxdWVzdGluZyBqc29uIHJlc3BvbnNlXG4gICAqIENhY2hlLUNvbnRyb2w6IG5vLWNhY2hlIDwtIFJlcXVlc3Qgc2hvdWxkbnQgYmUgY2FjaGVkXG4gICAqIFgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0IDwtIFdlIHNlbnQgdGhlIHJlcXVlc3QgdmlhIFhNTEh0dHBSZXF1ZXN0XG4gICAqLyBkZWZhdWx0SGVhZGVyczogdHJ1ZSxcbiAgICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgZHJvcHpvbmUgZWxlbWVudCBpdHNlbGYgd2lsbCBiZSBjbGlja2FibGUsIGlmIGBmYWxzZWBcbiAgICogbm90aGluZyB3aWxsIGJlIGNsaWNrYWJsZS5cbiAgICpcbiAgICogWW91IGNhbiBhbHNvIHBhc3MgYW4gSFRNTCBlbGVtZW50LCBhIENTUyBzZWxlY3RvciAoZm9yIG11bHRpcGxlIGVsZW1lbnRzKVxuICAgKiBvciBhbiBhcnJheSBvZiB0aG9zZS4gSW4gdGhhdCBjYXNlLCBhbGwgb2YgdGhvc2UgZWxlbWVudHMgd2lsbCB0cmlnZ2VyIGFuXG4gICAqIHVwbG9hZCB3aGVuIGNsaWNrZWQuXG4gICAqLyBjbGlja2FibGU6IHRydWUsXG4gICAgLyoqXG4gICAqIFdoZXRoZXIgaGlkZGVuIGZpbGVzIGluIGRpcmVjdG9yaWVzIHNob3VsZCBiZSBpZ25vcmVkLlxuICAgKi8gaWdub3JlSGlkZGVuRmlsZXM6IHRydWUsXG4gICAgLyoqXG4gICAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIG9mIGBhY2NlcHRgIGNoZWNrcyB0aGUgZmlsZSdzIG1pbWUgdHlwZSBvclxuICAgKiBleHRlbnNpb24gYWdhaW5zdCB0aGlzIGxpc3QuIFRoaXMgaXMgYSBjb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiBtaW1lXG4gICAqIHR5cGVzIG9yIGZpbGUgZXh0ZW5zaW9ucy5cbiAgICpcbiAgICogRWcuOiBgaW1hZ2UvKixhcHBsaWNhdGlvbi9wZGYsLnBzZGBcbiAgICpcbiAgICogSWYgdGhlIERyb3B6b25lIGlzIGBjbGlja2FibGVgIHRoaXMgb3B0aW9uIHdpbGwgYWxzbyBiZSB1c2VkIGFzXG4gICAqIFtgYWNjZXB0YF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9IVE1ML0VsZW1lbnQvaW5wdXQjYXR0ci1hY2NlcHQpXG4gICAqIHBhcmFtZXRlciBvbiB0aGUgaGlkZGVuIGZpbGUgaW5wdXQgYXMgd2VsbC5cbiAgICovIGFjY2VwdGVkRmlsZXM6IG51bGwsXG4gICAgLyoqXG4gICAqICoqRGVwcmVjYXRlZCEqKlxuICAgKiBVc2UgYWNjZXB0ZWRGaWxlcyBpbnN0ZWFkLlxuICAgKi8gYWNjZXB0ZWRNaW1lVHlwZXM6IG51bGwsXG4gICAgLyoqXG4gICAqIElmIGZhbHNlLCBmaWxlcyB3aWxsIGJlIGFkZGVkIHRvIHRoZSBxdWV1ZSBidXQgdGhlIHF1ZXVlIHdpbGwgbm90IGJlXG4gICAqIHByb2Nlc3NlZCBhdXRvbWF0aWNhbGx5LlxuICAgKiBUaGlzIGNhbiBiZSB1c2VmdWwgaWYgeW91IG5lZWQgc29tZSBhZGRpdGlvbmFsIHVzZXIgaW5wdXQgYmVmb3JlIHNlbmRpbmdcbiAgICogZmlsZXMgKG9yIGlmIHlvdSB3YW50IHdhbnQgYWxsIGZpbGVzIHNlbnQgYXQgb25jZSkuXG4gICAqIElmIHlvdSdyZSByZWFkeSB0byBzZW5kIHRoZSBmaWxlIHNpbXBseSBjYWxsIGBteURyb3B6b25lLnByb2Nlc3NRdWV1ZSgpYC5cbiAgICpcbiAgICogU2VlIHRoZSBbZW5xdWV1aW5nIGZpbGUgdXBsb2Fkc10oI2VucXVldWluZy1maWxlLXVwbG9hZHMpIGRvY3VtZW50YXRpb25cbiAgICogc2VjdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICovIGF1dG9Qcm9jZXNzUXVldWU6IHRydWUsXG4gICAgLyoqXG4gICAqIElmIGZhbHNlLCBmaWxlcyBhZGRlZCB0byB0aGUgZHJvcHpvbmUgd2lsbCBub3QgYmUgcXVldWVkIGJ5IGRlZmF1bHQuXG4gICAqIFlvdSdsbCBoYXZlIHRvIGNhbGwgYGVucXVldWVGaWxlKGZpbGUpYCBtYW51YWxseS5cbiAgICovIGF1dG9RdWV1ZTogdHJ1ZSxcbiAgICAvKipcbiAgICogSWYgYHRydWVgLCB0aGlzIHdpbGwgYWRkIGEgbGluayB0byBldmVyeSBmaWxlIHByZXZpZXcgdG8gcmVtb3ZlIG9yIGNhbmNlbCAoaWZcbiAgICogYWxyZWFkeSB1cGxvYWRpbmcpIHRoZSBmaWxlLiBUaGUgYGRpY3RDYW5jZWxVcGxvYWRgLCBgZGljdENhbmNlbFVwbG9hZENvbmZpcm1hdGlvbmBcbiAgICogYW5kIGBkaWN0UmVtb3ZlRmlsZWAgb3B0aW9ucyBhcmUgdXNlZCBmb3IgdGhlIHdvcmRpbmcuXG4gICAqLyBhZGRSZW1vdmVMaW5rczogZmFsc2UsXG4gICAgLyoqXG4gICAqIERlZmluZXMgd2hlcmUgdG8gZGlzcGxheSB0aGUgZmlsZSBwcmV2aWV3cyDigJMgaWYgYG51bGxgIHRoZVxuICAgKiBEcm9wem9uZSBlbGVtZW50IGl0c2VsZiBpcyB1c2VkLiBDYW4gYmUgYSBwbGFpbiBgSFRNTEVsZW1lbnRgIG9yIGEgQ1NTXG4gICAqIHNlbGVjdG9yLiBUaGUgZWxlbWVudCBzaG91bGQgaGF2ZSB0aGUgYGRyb3B6b25lLXByZXZpZXdzYCBjbGFzcyBzb1xuICAgKiB0aGUgcHJldmlld3MgYXJlIGRpc3BsYXllZCBwcm9wZXJseS5cbiAgICovIHByZXZpZXdzQ29udGFpbmVyOiBudWxsLFxuICAgIC8qKlxuICAgKiBTZXQgdGhpcyB0byBgdHJ1ZWAgaWYgeW91IGRvbid0IHdhbnQgcHJldmlld3MgdG8gYmUgc2hvd24uXG4gICAqLyBkaXNhYmxlUHJldmlld3M6IGZhbHNlLFxuICAgIC8qKlxuICAgKiBUaGlzIGlzIHRoZSBlbGVtZW50IHRoZSBoaWRkZW4gaW5wdXQgZmllbGQgKHdoaWNoIGlzIHVzZWQgd2hlbiBjbGlja2luZyBvbiB0aGVcbiAgICogZHJvcHpvbmUgdG8gdHJpZ2dlciBmaWxlIHNlbGVjdGlvbikgd2lsbCBiZSBhcHBlbmRlZCB0by4gVGhpcyBtaWdodFxuICAgKiBiZSBpbXBvcnRhbnQgaW4gY2FzZSB5b3UgdXNlIGZyYW1ld29ya3MgdG8gc3dpdGNoIHRoZSBjb250ZW50IG9mIHlvdXIgcGFnZS5cbiAgICpcbiAgICogQ2FuIGJlIGEgc2VsZWN0b3Igc3RyaW5nLCBvciBhbiBlbGVtZW50IGRpcmVjdGx5LlxuICAgKi8gaGlkZGVuSW5wdXRDb250YWluZXI6IFwiYm9keVwiLFxuICAgIC8qKlxuICAgKiBJZiBudWxsLCBubyBjYXB0dXJlIHR5cGUgd2lsbCBiZSBzcGVjaWZpZWRcbiAgICogSWYgY2FtZXJhLCBtb2JpbGUgZGV2aWNlcyB3aWxsIHNraXAgdGhlIGZpbGUgc2VsZWN0aW9uIGFuZCBjaG9vc2UgY2FtZXJhXG4gICAqIElmIG1pY3JvcGhvbmUsIG1vYmlsZSBkZXZpY2VzIHdpbGwgc2tpcCB0aGUgZmlsZSBzZWxlY3Rpb24gYW5kIGNob29zZSB0aGUgbWljcm9waG9uZVxuICAgKiBJZiBjYW1jb3JkZXIsIG1vYmlsZSBkZXZpY2VzIHdpbGwgc2tpcCB0aGUgZmlsZSBzZWxlY3Rpb24gYW5kIGNob29zZSB0aGUgY2FtZXJhIGluIHZpZGVvIG1vZGVcbiAgICogT24gYXBwbGUgZGV2aWNlcyBtdWx0aXBsZSBtdXN0IGJlIHNldCB0byBmYWxzZS4gIEFjY2VwdGVkRmlsZXMgbWF5IG5lZWQgdG9cbiAgICogYmUgc2V0IHRvIGFuIGFwcHJvcHJpYXRlIG1pbWUgdHlwZSAoZS5nLiBcImltYWdlLypcIiwgXCJhdWRpby8qXCIsIG9yIFwidmlkZW8vKlwiKS5cbiAgICovIGNhcHR1cmU6IG51bGwsXG4gICAgLyoqXG4gICAqICoqRGVwcmVjYXRlZCoqLiBVc2UgYHJlbmFtZUZpbGVgIGluc3RlYWQuXG4gICAqLyByZW5hbWVGaWxlbmFtZTogbnVsbCxcbiAgICAvKipcbiAgICogQSBmdW5jdGlvbiB0aGF0IGlzIGludm9rZWQgYmVmb3JlIHRoZSBmaWxlIGlzIHVwbG9hZGVkIHRvIHRoZSBzZXJ2ZXIgYW5kIHJlbmFtZXMgdGhlIGZpbGUuXG4gICAqIFRoaXMgZnVuY3Rpb24gZ2V0cyB0aGUgYEZpbGVgIGFzIGFyZ3VtZW50IGFuZCBjYW4gdXNlIHRoZSBgZmlsZS5uYW1lYC4gVGhlIGFjdHVhbCBuYW1lIG9mIHRoZVxuICAgKiBmaWxlIHRoYXQgZ2V0cyB1c2VkIGR1cmluZyB0aGUgdXBsb2FkIGNhbiBiZSBhY2Nlc3NlZCB0aHJvdWdoIGBmaWxlLnVwbG9hZC5maWxlbmFtZWAuXG4gICAqLyByZW5hbWVGaWxlOiBudWxsLFxuICAgIC8qKlxuICAgKiBJZiBgdHJ1ZWAgdGhlIGZhbGxiYWNrIHdpbGwgYmUgZm9yY2VkLiBUaGlzIGlzIHZlcnkgdXNlZnVsIHRvIHRlc3QgeW91ciBzZXJ2ZXJcbiAgICogaW1wbGVtZW50YXRpb25zIGZpcnN0IGFuZCBtYWtlIHN1cmUgdGhhdCBldmVyeXRoaW5nIHdvcmtzIGFzXG4gICAqIGV4cGVjdGVkIHdpdGhvdXQgZHJvcHpvbmUgaWYgeW91IGV4cGVyaWVuY2UgcHJvYmxlbXMsIGFuZCB0byB0ZXN0XG4gICAqIGhvdyB5b3VyIGZhbGxiYWNrcyB3aWxsIGxvb2suXG4gICAqLyBmb3JjZUZhbGxiYWNrOiBmYWxzZSxcbiAgICAvKipcbiAgICogVGhlIHRleHQgdXNlZCBiZWZvcmUgYW55IGZpbGVzIGFyZSBkcm9wcGVkLlxuICAgKi8gZGljdERlZmF1bHRNZXNzYWdlOiBcIkRyb3AgZmlsZXMgaGVyZSB0byB1cGxvYWRcIixcbiAgICAvKipcbiAgICogVGhlIHRleHQgdGhhdCByZXBsYWNlcyB0aGUgZGVmYXVsdCBtZXNzYWdlIHRleHQgaXQgdGhlIGJyb3dzZXIgaXMgbm90IHN1cHBvcnRlZC5cbiAgICovIGRpY3RGYWxsYmFja01lc3NhZ2U6IFwiWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgZHJhZyduJ2Ryb3AgZmlsZSB1cGxvYWRzLlwiLFxuICAgIC8qKlxuICAgKiBUaGUgdGV4dCB0aGF0IHdpbGwgYmUgYWRkZWQgYmVmb3JlIHRoZSBmYWxsYmFjayBmb3JtLlxuICAgKiBJZiB5b3UgcHJvdmlkZSBhICBmYWxsYmFjayBlbGVtZW50IHlvdXJzZWxmLCBvciBpZiB0aGlzIG9wdGlvbiBpcyBgbnVsbGAgdGhpcyB3aWxsXG4gICAqIGJlIGlnbm9yZWQuXG4gICAqLyBkaWN0RmFsbGJhY2tUZXh0OiBcIlBsZWFzZSB1c2UgdGhlIGZhbGxiYWNrIGZvcm0gYmVsb3cgdG8gdXBsb2FkIHlvdXIgZmlsZXMgbGlrZSBpbiB0aGUgb2xkZW4gZGF5cy5cIixcbiAgICAvKipcbiAgICogSWYgdGhlIGZpbGVzaXplIGlzIHRvbyBiaWcuXG4gICAqIGB7e2ZpbGVzaXplfX1gIGFuZCBge3ttYXhGaWxlc2l6ZX19YCB3aWxsIGJlIHJlcGxhY2VkIHdpdGggdGhlIHJlc3BlY3RpdmUgY29uZmlndXJhdGlvbiB2YWx1ZXMuXG4gICAqLyBkaWN0RmlsZVRvb0JpZzogXCJGaWxlIGlzIHRvbyBiaWcgKHt7ZmlsZXNpemV9fU1pQikuIE1heCBmaWxlc2l6ZToge3ttYXhGaWxlc2l6ZX19TWlCLlwiLFxuICAgIC8qKlxuICAgKiBJZiB0aGUgZmlsZSBkb2Vzbid0IG1hdGNoIHRoZSBmaWxlIHR5cGUuXG4gICAqLyBkaWN0SW52YWxpZEZpbGVUeXBlOiBcIllvdSBjYW4ndCB1cGxvYWQgZmlsZXMgb2YgdGhpcyB0eXBlLlwiLFxuICAgIC8qKlxuICAgKiBJZiB0aGUgc2VydmVyIHJlc3BvbnNlIHdhcyBpbnZhbGlkLlxuICAgKiBge3tzdGF0dXNDb2RlfX1gIHdpbGwgYmUgcmVwbGFjZWQgd2l0aCB0aGUgc2VydmVycyBzdGF0dXMgY29kZS5cbiAgICovIGRpY3RSZXNwb25zZUVycm9yOiBcIlNlcnZlciByZXNwb25kZWQgd2l0aCB7e3N0YXR1c0NvZGV9fSBjb2RlLlwiLFxuICAgIC8qKlxuICAgKiBJZiBgYWRkUmVtb3ZlTGlua3NgIGlzIHRydWUsIHRoZSB0ZXh0IHRvIGJlIHVzZWQgZm9yIHRoZSBjYW5jZWwgdXBsb2FkIGxpbmsuXG4gICAqLyBkaWN0Q2FuY2VsVXBsb2FkOiBcIkNhbmNlbCB1cGxvYWRcIixcbiAgICAvKipcbiAgICogVGhlIHRleHQgdGhhdCBpcyBkaXNwbGF5ZWQgaWYgYW4gdXBsb2FkIHdhcyBtYW51YWxseSBjYW5jZWxlZFxuICAgKi8gZGljdFVwbG9hZENhbmNlbGVkOiBcIlVwbG9hZCBjYW5jZWxlZC5cIixcbiAgICAvKipcbiAgICogSWYgYGFkZFJlbW92ZUxpbmtzYCBpcyB0cnVlLCB0aGUgdGV4dCB0byBiZSB1c2VkIGZvciBjb25maXJtYXRpb24gd2hlbiBjYW5jZWxsaW5nIHVwbG9hZC5cbiAgICovIGRpY3RDYW5jZWxVcGxvYWRDb25maXJtYXRpb246IFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGNhbmNlbCB0aGlzIHVwbG9hZD9cIixcbiAgICAvKipcbiAgICogSWYgYGFkZFJlbW92ZUxpbmtzYCBpcyB0cnVlLCB0aGUgdGV4dCB0byBiZSB1c2VkIHRvIHJlbW92ZSBhIGZpbGUuXG4gICAqLyBkaWN0UmVtb3ZlRmlsZTogXCJSZW1vdmUgZmlsZVwiLFxuICAgIC8qKlxuICAgKiBJZiB0aGlzIGlzIG5vdCBudWxsLCB0aGVuIHRoZSB1c2VyIHdpbGwgYmUgcHJvbXB0ZWQgYmVmb3JlIHJlbW92aW5nIGEgZmlsZS5cbiAgICovIGRpY3RSZW1vdmVGaWxlQ29uZmlybWF0aW9uOiBudWxsLFxuICAgIC8qKlxuICAgKiBEaXNwbGF5ZWQgaWYgYG1heEZpbGVzYCBpcyBzdCBhbmQgZXhjZWVkZWQuXG4gICAqIFRoZSBzdHJpbmcgYHt7bWF4RmlsZXN9fWAgd2lsbCBiZSByZXBsYWNlZCBieSB0aGUgY29uZmlndXJhdGlvbiB2YWx1ZS5cbiAgICovIGRpY3RNYXhGaWxlc0V4Y2VlZGVkOiBcIllvdSBjYW4gbm90IHVwbG9hZCBhbnkgbW9yZSBmaWxlcy5cIixcbiAgICAvKipcbiAgICogQWxsb3dzIHlvdSB0byB0cmFuc2xhdGUgdGhlIGRpZmZlcmVudCB1bml0cy4gU3RhcnRpbmcgd2l0aCBgdGJgIGZvciB0ZXJhYnl0ZXMgYW5kIGdvaW5nIGRvd24gdG9cbiAgICogYGJgIGZvciBieXRlcy5cbiAgICovIGRpY3RGaWxlU2l6ZVVuaXRzOiB7XG4gICAgICAgIHRiOiBcIlRCXCIsXG4gICAgICAgIGdiOiBcIkdCXCIsXG4gICAgICAgIG1iOiBcIk1CXCIsXG4gICAgICAgIGtiOiBcIktCXCIsXG4gICAgICAgIGI6IFwiYlwiXG4gICAgfSxcbiAgICAvKipcbiAgICogQ2FsbGVkIHdoZW4gZHJvcHpvbmUgaW5pdGlhbGl6ZWRcbiAgICogWW91IGNhbiBhZGQgZXZlbnQgbGlzdGVuZXJzIGhlcmVcbiAgICovIGluaXQgKCkge1xuICAgIH0sXG4gICAgLyoqXG4gICAqIENhbiBiZSBhbiAqKm9iamVjdCoqIG9mIGFkZGl0aW9uYWwgcGFyYW1ldGVycyB0byB0cmFuc2ZlciB0byB0aGUgc2VydmVyLCAqKm9yKiogYSBgRnVuY3Rpb25gXG4gICAqIHRoYXQgZ2V0cyBpbnZva2VkIHdpdGggdGhlIGBmaWxlc2AsIGB4aHJgIGFuZCwgaWYgaXQncyBhIGNodW5rZWQgdXBsb2FkLCBgY2h1bmtgIGFyZ3VtZW50cy4gSW4gY2FzZVxuICAgKiBvZiBhIGZ1bmN0aW9uLCB0aGlzIG5lZWRzIHRvIHJldHVybiBhIG1hcC5cbiAgICpcbiAgICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gZG9lcyBub3RoaW5nIGZvciBub3JtYWwgdXBsb2FkcywgYnV0IGFkZHMgcmVsZXZhbnQgaW5mb3JtYXRpb24gZm9yXG4gICAqIGNodW5rZWQgdXBsb2Fkcy5cbiAgICpcbiAgICogVGhpcyBpcyB0aGUgc2FtZSBhcyBhZGRpbmcgaGlkZGVuIGlucHV0IGZpZWxkcyBpbiB0aGUgZm9ybSBlbGVtZW50LlxuICAgKi8gcGFyYW1zIChmaWxlcywgeGhyLCBjaHVuaykge1xuICAgICAgICBpZiAoY2h1bmspIHJldHVybiB7XG4gICAgICAgICAgICBkenV1aWQ6IGNodW5rLmZpbGUudXBsb2FkLnV1aWQsXG4gICAgICAgICAgICBkemNodW5raW5kZXg6IGNodW5rLmluZGV4LFxuICAgICAgICAgICAgZHp0b3RhbGZpbGVzaXplOiBjaHVuay5maWxlLnNpemUsXG4gICAgICAgICAgICBkemNodW5rc2l6ZTogdGhpcy5vcHRpb25zLmNodW5rU2l6ZSxcbiAgICAgICAgICAgIGR6dG90YWxjaHVua2NvdW50OiBjaHVuay5maWxlLnVwbG9hZC50b3RhbENodW5rQ291bnQsXG4gICAgICAgICAgICBkemNodW5rYnl0ZW9mZnNldDogY2h1bmsuaW5kZXggKiB0aGlzLm9wdGlvbnMuY2h1bmtTaXplXG4gICAgICAgIH07XG4gICAgfSxcbiAgICAvKipcbiAgICogQSBmdW5jdGlvbiB0aGF0IGdldHMgYSBbZmlsZV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9ET00vRmlsZSlcbiAgICogYW5kIGEgYGRvbmVgIGZ1bmN0aW9uIGFzIHBhcmFtZXRlcnMuXG4gICAqXG4gICAqIElmIHRoZSBkb25lIGZ1bmN0aW9uIGlzIGludm9rZWQgd2l0aG91dCBhcmd1bWVudHMsIHRoZSBmaWxlIGlzIFwiYWNjZXB0ZWRcIiBhbmQgd2lsbFxuICAgKiBiZSBwcm9jZXNzZWQuIElmIHlvdSBwYXNzIGFuIGVycm9yIG1lc3NhZ2UsIHRoZSBmaWxlIGlzIHJlamVjdGVkLCBhbmQgdGhlIGVycm9yXG4gICAqIG1lc3NhZ2Ugd2lsbCBiZSBkaXNwbGF5ZWQuXG4gICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBub3QgYmUgY2FsbGVkIGlmIHRoZSBmaWxlIGlzIHRvbyBiaWcgb3IgZG9lc24ndCBtYXRjaCB0aGUgbWltZSB0eXBlcy5cbiAgICovIGFjY2VwdCAoZmlsZSwgZG9uZSkge1xuICAgICAgICByZXR1cm4gZG9uZSgpO1xuICAgIH0sXG4gICAgLyoqXG4gICAqIFRoZSBjYWxsYmFjayB0aGF0IHdpbGwgYmUgaW52b2tlZCB3aGVuIGFsbCBjaHVua3MgaGF2ZSBiZWVuIHVwbG9hZGVkIGZvciBhIGZpbGUuXG4gICAqIEl0IGdldHMgdGhlIGZpbGUgZm9yIHdoaWNoIHRoZSBjaHVua3MgaGF2ZSBiZWVuIHVwbG9hZGVkIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIsXG4gICAqIGFuZCB0aGUgYGRvbmVgIGZ1bmN0aW9uIGFzIHNlY29uZC4gYGRvbmUoKWAgbmVlZHMgdG8gYmUgaW52b2tlZCB3aGVuIGV2ZXJ5dGhpbmdcbiAgICogbmVlZGVkIHRvIGZpbmlzaCB0aGUgdXBsb2FkIHByb2Nlc3MgaXMgZG9uZS5cbiAgICovIGNodW5rc1VwbG9hZGVkOiBmdW5jdGlvbihmaWxlLCBkb25lKSB7XG4gICAgICAgIGRvbmUoKTtcbiAgICB9LFxuICAgIC8qKlxuICAgKiBTZW5kcyB0aGUgZmlsZSBhcyBiaW5hcnkgYmxvYiBpbiBib2R5IGluc3RlYWQgb2YgZm9ybSBkYXRhLlxuICAgKiBJZiB0aGlzIGlzIHNldCwgdGhlIGBwYXJhbXNgIG9wdGlvbiB3aWxsIGJlIGlnbm9yZWQuXG4gICAqIEl0J3MgYW4gZXJyb3IgdG8gc2V0IHRoaXMgdG8gYHRydWVgIGFsb25nIHdpdGggYHVwbG9hZE11bHRpcGxlYCBzaW5jZVxuICAgKiBtdWx0aXBsZSBmaWxlcyBjYW5ub3QgYmUgaW4gYSBzaW5nbGUgYmluYXJ5IGJvZHkuXG4gICAqLyBiaW5hcnlCb2R5OiBmYWxzZSxcbiAgICAvKipcbiAgICogR2V0cyBjYWxsZWQgd2hlbiB0aGUgYnJvd3NlciBpcyBub3Qgc3VwcG9ydGVkLlxuICAgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBzaG93cyB0aGUgZmFsbGJhY2sgaW5wdXQgZmllbGQgYW5kIGFkZHNcbiAgICogYSB0ZXh0LlxuICAgKi8gZmFsbGJhY2sgKCkge1xuICAgICAgICAvLyBUaGlzIGNvZGUgc2hvdWxkIHBhc3MgaW4gSUU3Li4uIDooXG4gICAgICAgIGxldCBtZXNzYWdlRWxlbWVudDtcbiAgICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTmFtZSA9IGAke3RoaXMuZWxlbWVudC5jbGFzc05hbWV9IGR6LWJyb3dzZXItbm90LXN1cHBvcnRlZGA7XG4gICAgICAgIGZvciAobGV0IGNoaWxkIG9mIHRoaXMuZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImRpdlwiKSlpZiAoLyhefCApZHotbWVzc2FnZSgkfCApLy50ZXN0KGNoaWxkLmNsYXNzTmFtZSkpIHtcbiAgICAgICAgICAgIG1lc3NhZ2VFbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgICBjaGlsZC5jbGFzc05hbWUgPSBcImR6LW1lc3NhZ2VcIjsgLy8gUmVtb3ZlcyB0aGUgJ2R6LWRlZmF1bHQnIGNsYXNzXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW1lc3NhZ2VFbGVtZW50KSB7XG4gICAgICAgICAgICBtZXNzYWdlRWxlbWVudCA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuY3JlYXRlRWxlbWVudCgnPGRpdiBjbGFzcz1cImR6LW1lc3NhZ2VcIj48c3Bhbj48L3NwYW4+PC9kaXY+Jyk7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQobWVzc2FnZUVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzcGFuID0gbWVzc2FnZUVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzcGFuXCIpWzBdO1xuICAgICAgICBpZiAoc3Bhbikge1xuICAgICAgICAgICAgaWYgKHNwYW4udGV4dENvbnRlbnQgIT0gbnVsbCkgc3Bhbi50ZXh0Q29udGVudCA9IHRoaXMub3B0aW9ucy5kaWN0RmFsbGJhY2tNZXNzYWdlO1xuICAgICAgICAgICAgZWxzZSBpZiAoc3Bhbi5pbm5lclRleHQgIT0gbnVsbCkgc3Bhbi5pbm5lclRleHQgPSB0aGlzLm9wdGlvbnMuZGljdEZhbGxiYWNrTWVzc2FnZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuZ2V0RmFsbGJhY2tGb3JtKCkpO1xuICAgIH0sXG4gICAgLyoqXG4gICAqIEdldHMgY2FsbGVkIHRvIGNhbGN1bGF0ZSB0aGUgdGh1bWJuYWlsIGRpbWVuc2lvbnMuXG4gICAqXG4gICAqIEl0IGdldHMgYGZpbGVgLCBgd2lkdGhgIGFuZCBgaGVpZ2h0YCAoYm90aCBtYXkgYmUgYG51bGxgKSBhcyBwYXJhbWV0ZXJzIGFuZCBtdXN0IHJldHVybiBhbiBvYmplY3QgY29udGFpbmluZzpcbiAgICpcbiAgICogIC0gYHNyY1dpZHRoYCAmIGBzcmNIZWlnaHRgIChyZXF1aXJlZClcbiAgICogIC0gYHRyZ1dpZHRoYCAmIGB0cmdIZWlnaHRgIChyZXF1aXJlZClcbiAgICogIC0gYHNyY1hgICYgYHNyY1lgIChvcHRpb25hbCwgZGVmYXVsdCBgMGApXG4gICAqICAtIGB0cmdYYCAmIGB0cmdZYCAob3B0aW9uYWwsIGRlZmF1bHQgYDBgKVxuICAgKlxuICAgKiBUaG9zZSB2YWx1ZXMgYXJlIGdvaW5nIHRvIGJlIHVzZWQgYnkgYGN0eC5kcmF3SW1hZ2UoKWAuXG4gICAqLyByZXNpemUgKGZpbGUsIHdpZHRoLCBoZWlnaHQsIHJlc2l6ZU1ldGhvZCkge1xuICAgICAgICBsZXQgaW5mbyA9IHtcbiAgICAgICAgICAgIHNyY1g6IDAsXG4gICAgICAgICAgICBzcmNZOiAwLFxuICAgICAgICAgICAgc3JjV2lkdGg6IGZpbGUud2lkdGgsXG4gICAgICAgICAgICBzcmNIZWlnaHQ6IGZpbGUuaGVpZ2h0XG4gICAgICAgIH07XG4gICAgICAgIGxldCBzcmNSYXRpbyA9IGZpbGUud2lkdGggLyBmaWxlLmhlaWdodDtcbiAgICAgICAgLy8gQXV0b21hdGljYWxseSBjYWxjdWxhdGUgZGltZW5zaW9ucyBpZiBub3Qgc3BlY2lmaWVkXG4gICAgICAgIGlmICh3aWR0aCA9PSBudWxsICYmIGhlaWdodCA9PSBudWxsKSB7XG4gICAgICAgICAgICB3aWR0aCA9IGluZm8uc3JjV2lkdGg7XG4gICAgICAgICAgICBoZWlnaHQgPSBpbmZvLnNyY0hlaWdodDtcbiAgICAgICAgfSBlbHNlIGlmICh3aWR0aCA9PSBudWxsKSB3aWR0aCA9IGhlaWdodCAqIHNyY1JhdGlvO1xuICAgICAgICBlbHNlIGlmIChoZWlnaHQgPT0gbnVsbCkgaGVpZ2h0ID0gd2lkdGggLyBzcmNSYXRpbztcbiAgICAgICAgLy8gTWFrZSBzdXJlIGltYWdlcyBhcmVuJ3QgdXBzY2FsZWRcbiAgICAgICAgd2lkdGggPSBNYXRoLm1pbih3aWR0aCwgaW5mby5zcmNXaWR0aCk7XG4gICAgICAgIGhlaWdodCA9IE1hdGgubWluKGhlaWdodCwgaW5mby5zcmNIZWlnaHQpO1xuICAgICAgICBsZXQgdHJnUmF0aW8gPSB3aWR0aCAvIGhlaWdodDtcbiAgICAgICAgaWYgKGluZm8uc3JjV2lkdGggPiB3aWR0aCB8fCBpbmZvLnNyY0hlaWdodCA+IGhlaWdodCkge1xuICAgICAgICAgICAgLy8gSW1hZ2UgaXMgYmlnZ2VyIGFuZCBuZWVkcyByZXNjYWxpbmdcbiAgICAgICAgICAgIGlmIChyZXNpemVNZXRob2QgPT09IFwiY3JvcFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNyY1JhdGlvID4gdHJnUmF0aW8pIHtcbiAgICAgICAgICAgICAgICAgICAgaW5mby5zcmNIZWlnaHQgPSBmaWxlLmhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgaW5mby5zcmNXaWR0aCA9IGluZm8uc3JjSGVpZ2h0ICogdHJnUmF0aW87XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaW5mby5zcmNXaWR0aCA9IGZpbGUud2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIGluZm8uc3JjSGVpZ2h0ID0gaW5mby5zcmNXaWR0aCAvIHRyZ1JhdGlvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzaXplTWV0aG9kID09PSBcImNvbnRhaW5cIikge1xuICAgICAgICAgICAgICAgIC8vIE1ldGhvZCAnY29udGFpbidcbiAgICAgICAgICAgICAgICBpZiAoc3JjUmF0aW8gPiB0cmdSYXRpbykgaGVpZ2h0ID0gd2lkdGggLyBzcmNSYXRpbztcbiAgICAgICAgICAgICAgICBlbHNlIHdpZHRoID0gaGVpZ2h0ICogc3JjUmF0aW87XG4gICAgICAgICAgICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHJlc2l6ZU1ldGhvZCAnJHtyZXNpemVNZXRob2R9J2ApO1xuICAgICAgICB9XG4gICAgICAgIGluZm8uc3JjWCA9IChmaWxlLndpZHRoIC0gaW5mby5zcmNXaWR0aCkgLyAyO1xuICAgICAgICBpbmZvLnNyY1kgPSAoZmlsZS5oZWlnaHQgLSBpbmZvLnNyY0hlaWdodCkgLyAyO1xuICAgICAgICBpbmZvLnRyZ1dpZHRoID0gd2lkdGg7XG4gICAgICAgIGluZm8udHJnSGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICByZXR1cm4gaW5mbztcbiAgICB9LFxuICAgIC8qKlxuICAgKiBDYW4gYmUgdXNlZCB0byB0cmFuc2Zvcm0gdGhlIGZpbGUgKGZvciBleGFtcGxlLCByZXNpemUgYW4gaW1hZ2UgaWYgbmVjZXNzYXJ5KS5cbiAgICpcbiAgICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gdXNlcyBgcmVzaXplV2lkdGhgIGFuZCBgcmVzaXplSGVpZ2h0YCAoaWYgcHJvdmlkZWQpIGFuZCByZXNpemVzXG4gICAqIGltYWdlcyBhY2NvcmRpbmcgdG8gdGhvc2UgZGltZW5zaW9ucy5cbiAgICpcbiAgICogR2V0cyB0aGUgYGZpbGVgIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIsIGFuZCBhIGBkb25lKClgIGZ1bmN0aW9uIGFzIHRoZSBzZWNvbmQsIHRoYXQgbmVlZHNcbiAgICogdG8gYmUgaW52b2tlZCB3aXRoIHRoZSBmaWxlIHdoZW4gdGhlIHRyYW5zZm9ybWF0aW9uIGlzIGRvbmUuXG4gICAqLyB0cmFuc2Zvcm1GaWxlIChmaWxlLCBkb25lKSB7XG4gICAgICAgIGlmICgodGhpcy5vcHRpb25zLnJlc2l6ZVdpZHRoIHx8IHRoaXMub3B0aW9ucy5yZXNpemVIZWlnaHQpICYmIGZpbGUudHlwZS5tYXRjaCgvaW1hZ2UuKi8pKSByZXR1cm4gdGhpcy5yZXNpemVJbWFnZShmaWxlLCB0aGlzLm9wdGlvbnMucmVzaXplV2lkdGgsIHRoaXMub3B0aW9ucy5yZXNpemVIZWlnaHQsIHRoaXMub3B0aW9ucy5yZXNpemVNZXRob2QsIGRvbmUpO1xuICAgICAgICBlbHNlIHJldHVybiBkb25lKGZpbGUpO1xuICAgIH0sXG4gICAgLyoqXG4gICAqIEEgc3RyaW5nIHRoYXQgY29udGFpbnMgdGhlIHRlbXBsYXRlIHVzZWQgZm9yIGVhY2ggZHJvcHBlZFxuICAgKiBmaWxlLiBDaGFuZ2UgaXQgdG8gZnVsZmlsbCB5b3VyIG5lZWRzIGJ1dCBtYWtlIHN1cmUgdG8gcHJvcGVybHlcbiAgICogcHJvdmlkZSBhbGwgZWxlbWVudHMuXG4gICAqXG4gICAqIElmIHlvdSB3YW50IHRvIHVzZSBhbiBhY3R1YWwgSFRNTCBlbGVtZW50IGluc3RlYWQgb2YgcHJvdmlkaW5nIGEgU3RyaW5nXG4gICAqIGFzIGEgY29uZmlnIG9wdGlvbiwgeW91IGNvdWxkIGNyZWF0ZSBhIGRpdiB3aXRoIHRoZSBpZCBgdHBsYCxcbiAgICogcHV0IHRoZSB0ZW1wbGF0ZSBpbnNpZGUgaXQgYW5kIHByb3ZpZGUgdGhlIGVsZW1lbnQgbGlrZSB0aGlzOlxuICAgKlxuICAgKiAgICAgZG9jdW1lbnRcbiAgICogICAgICAgLnF1ZXJ5U2VsZWN0b3IoJyN0cGwnKVxuICAgKiAgICAgICAuaW5uZXJIVE1MXG4gICAqXG4gICAqLyBwcmV2aWV3VGVtcGxhdGU6ICgvKkBfX1BVUkVfXyovJHBhcmNlbCRpbnRlcm9wRGVmYXVsdCgkZmQ2MDMxZjg4ZGNlMmUzMiRleHBvcnRzKSksXG4gICAgLypcbiAgIFRob3NlIGZ1bmN0aW9ucyByZWdpc3RlciB0aGVtc2VsdmVzIHRvIHRoZSBldmVudHMgb24gaW5pdCBhbmQgaGFuZGxlIGFsbFxuICAgdGhlIHVzZXIgaW50ZXJmYWNlIHNwZWNpZmljIHN0dWZmLiBPdmVyd3JpdGluZyB0aGVtIHdvbid0IGJyZWFrIHRoZSB1cGxvYWRcbiAgIGJ1dCBjYW4gYnJlYWsgdGhlIHdheSBpdCdzIGRpc3BsYXllZC5cbiAgIFlvdSBjYW4gb3ZlcndyaXRlIHRoZW0gaWYgeW91IGRvbid0IGxpa2UgdGhlIGRlZmF1bHQgYmVoYXZpb3IuIElmIHlvdSBqdXN0XG4gICB3YW50IHRvIGFkZCBhbiBhZGRpdGlvbmFsIGV2ZW50IGhhbmRsZXIsIHJlZ2lzdGVyIGl0IG9uIHRoZSBkcm9wem9uZSBvYmplY3RcbiAgIGFuZCBkb24ndCBvdmVyd3JpdGUgdGhvc2Ugb3B0aW9ucy5cbiAgICovIC8vIFRob3NlIGFyZSBzZWxmIGV4cGxhbmF0b3J5IGFuZCBzaW1wbHkgY29uY2VybiB0aGUgRHJhZ25Ecm9wLlxuICAgIGRyb3AgKGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiZHotZHJhZy1ob3ZlclwiKTtcbiAgICB9LFxuICAgIGRyYWdzdGFydCAoZSkge1xuICAgIH0sXG4gICAgZHJhZ2VuZCAoZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJkei1kcmFnLWhvdmVyXCIpO1xuICAgIH0sXG4gICAgZHJhZ2VudGVyIChlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LWRyYWctaG92ZXJcIik7XG4gICAgfSxcbiAgICBkcmFnb3ZlciAoZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJkei1kcmFnLWhvdmVyXCIpO1xuICAgIH0sXG4gICAgZHJhZ2xlYXZlIChlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImR6LWRyYWctaG92ZXJcIik7XG4gICAgfSxcbiAgICBwYXN0ZSAoZSkge1xuICAgIH0sXG4gICAgLy8gQ2FsbGVkIHdoZW5ldmVyIHRoZXJlIGFyZSBubyBmaWxlcyBsZWZ0IGluIHRoZSBkcm9wem9uZSBhbnltb3JlLCBhbmQgdGhlXG4gICAgLy8gZHJvcHpvbmUgc2hvdWxkIGJlIGRpc3BsYXllZCBhcyBpZiBpbiB0aGUgaW5pdGlhbCBzdGF0ZS5cbiAgICByZXNldCAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImR6LXN0YXJ0ZWRcIik7XG4gICAgfSxcbiAgICAvLyBDYWxsZWQgd2hlbiBhIGZpbGUgaXMgYWRkZWQgdG8gdGhlIHF1ZXVlXG4gICAgLy8gUmVjZWl2ZXMgYGZpbGVgXG4gICAgYWRkZWRmaWxlIChmaWxlKSB7XG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnQgPT09IHRoaXMucHJldmlld3NDb250YWluZXIpIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZHotc3RhcnRlZFwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJldmlld3NDb250YWluZXIgJiYgIXRoaXMub3B0aW9ucy5kaXNhYmxlUHJldmlld3MpIHtcbiAgICAgICAgICAgIGZpbGUucHJldmlld0VsZW1lbnQgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmNyZWF0ZUVsZW1lbnQodGhpcy5vcHRpb25zLnByZXZpZXdUZW1wbGF0ZS50cmltKCkpO1xuICAgICAgICAgICAgZmlsZS5wcmV2aWV3VGVtcGxhdGUgPSBmaWxlLnByZXZpZXdFbGVtZW50OyAvLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgICAgICAgICAgdGhpcy5wcmV2aWV3c0NvbnRhaW5lci5hcHBlbmRDaGlsZChmaWxlLnByZXZpZXdFbGVtZW50KTtcbiAgICAgICAgICAgIGZvciAodmFyIG5vZGUgb2YgZmlsZS5wcmV2aWV3RWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtZHotbmFtZV1cIikpbm9kZS50ZXh0Q29udGVudCA9IGZpbGUubmFtZTtcbiAgICAgICAgICAgIGZvciAobm9kZSBvZiBmaWxlLnByZXZpZXdFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1kei1zaXplXVwiKSlub2RlLmlubmVySFRNTCA9IHRoaXMuZmlsZXNpemUoZmlsZS5zaXplKTtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYWRkUmVtb3ZlTGlua3MpIHtcbiAgICAgICAgICAgICAgICBmaWxlLl9yZW1vdmVMaW5rID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5jcmVhdGVFbGVtZW50KGA8YSBjbGFzcz1cImR6LXJlbW92ZVwiIGhyZWY9XCJqYXZhc2NyaXB0OnVuZGVmaW5lZDtcIiBkYXRhLWR6LXJlbW92ZT4ke3RoaXMub3B0aW9ucy5kaWN0UmVtb3ZlRmlsZX08L2E+YCk7XG4gICAgICAgICAgICAgICAgZmlsZS5wcmV2aWV3RWxlbWVudC5hcHBlbmRDaGlsZChmaWxlLl9yZW1vdmVMaW5rKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCByZW1vdmVGaWxlRXZlbnQgPSAoZSk9PntcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBpZiAoZmlsZS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HKSByZXR1cm4gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5jb25maXJtKHRoaXMub3B0aW9ucy5kaWN0Q2FuY2VsVXBsb2FkQ29uZmlybWF0aW9uLCAoKT0+dGhpcy5yZW1vdmVGaWxlKGZpbGUpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5kaWN0UmVtb3ZlRmlsZUNvbmZpcm1hdGlvbikgcmV0dXJuICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuY29uZmlybSh0aGlzLm9wdGlvbnMuZGljdFJlbW92ZUZpbGVDb25maXJtYXRpb24sICgpPT50aGlzLnJlbW92ZUZpbGUoZmlsZSlcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gdGhpcy5yZW1vdmVGaWxlKGZpbGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBmb3IgKGxldCByZW1vdmVMaW5rIG9mIGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWR6LXJlbW92ZV1cIikpcmVtb3ZlTGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcmVtb3ZlRmlsZUV2ZW50KTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgLy8gQ2FsbGVkIHdoZW5ldmVyIGEgZmlsZSBpcyByZW1vdmVkLlxuICAgIHJlbW92ZWRmaWxlIChmaWxlKSB7XG4gICAgICAgIGlmIChmaWxlLnByZXZpZXdFbGVtZW50ICE9IG51bGwgJiYgZmlsZS5wcmV2aWV3RWxlbWVudC5wYXJlbnROb2RlICE9IG51bGwpIGZpbGUucHJldmlld0VsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChmaWxlLnByZXZpZXdFbGVtZW50KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3VwZGF0ZU1heEZpbGVzUmVhY2hlZENsYXNzKCk7XG4gICAgfSxcbiAgICAvLyBDYWxsZWQgd2hlbiBhIHRodW1ibmFpbCBoYXMgYmVlbiBnZW5lcmF0ZWRcbiAgICAvLyBSZWNlaXZlcyBgZmlsZWAgYW5kIGBkYXRhVXJsYFxuICAgIHRodW1ibmFpbCAoZmlsZSwgZGF0YVVybCkge1xuICAgICAgICBpZiAoZmlsZS5wcmV2aWV3RWxlbWVudCkge1xuICAgICAgICAgICAgZmlsZS5wcmV2aWV3RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiZHotZmlsZS1wcmV2aWV3XCIpO1xuICAgICAgICAgICAgZm9yIChsZXQgdGh1bWJuYWlsRWxlbWVudCBvZiBmaWxlLnByZXZpZXdFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1kei10aHVtYm5haWxdXCIpKXtcbiAgICAgICAgICAgICAgICB0aHVtYm5haWxFbGVtZW50LmFsdCA9IGZpbGUubmFtZTtcbiAgICAgICAgICAgICAgICB0aHVtYm5haWxFbGVtZW50LnNyYyA9IGRhdGFVcmw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc2V0VGltZW91dCgoKT0+ZmlsZS5wcmV2aWV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZHotaW1hZ2UtcHJldmlld1wiKVxuICAgICAgICAgICAgLCAxKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgLy8gQ2FsbGVkIHdoZW5ldmVyIGFuIGVycm9yIG9jY3Vyc1xuICAgIC8vIFJlY2VpdmVzIGBmaWxlYCBhbmQgYG1lc3NhZ2VgXG4gICAgZXJyb3IgKGZpbGUsIG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKGZpbGUucHJldmlld0VsZW1lbnQpIHtcbiAgICAgICAgICAgIGZpbGUucHJldmlld0VsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LWVycm9yXCIpO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlICE9PSBcInN0cmluZ1wiICYmIG1lc3NhZ2UuZXJyb3IpIG1lc3NhZ2UgPSBtZXNzYWdlLmVycm9yO1xuICAgICAgICAgICAgZm9yIChsZXQgbm9kZSBvZiBmaWxlLnByZXZpZXdFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1kei1lcnJvcm1lc3NhZ2VdXCIpKW5vZGUudGV4dENvbnRlbnQgPSBtZXNzYWdlO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBlcnJvcm11bHRpcGxlICgpIHtcbiAgICB9LFxuICAgIC8vIENhbGxlZCB3aGVuIGEgZmlsZSBnZXRzIHByb2Nlc3NlZC4gU2luY2UgdGhlcmUgaXMgYSBjdWUsIG5vdCBhbGwgYWRkZWRcbiAgICAvLyBmaWxlcyBhcmUgcHJvY2Vzc2VkIGltbWVkaWF0ZWx5LlxuICAgIC8vIFJlY2VpdmVzIGBmaWxlYFxuICAgIHByb2Nlc3NpbmcgKGZpbGUpIHtcbiAgICAgICAgaWYgKGZpbGUucHJldmlld0VsZW1lbnQpIHtcbiAgICAgICAgICAgIGZpbGUucHJldmlld0VsZW1lbnQuY2xhc3NMaXN0LmFkZChcImR6LXByb2Nlc3NpbmdcIik7XG4gICAgICAgICAgICBpZiAoZmlsZS5fcmVtb3ZlTGluaykgcmV0dXJuIGZpbGUuX3JlbW92ZUxpbmsuaW5uZXJIVE1MID0gdGhpcy5vcHRpb25zLmRpY3RDYW5jZWxVcGxvYWQ7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHByb2Nlc3NpbmdtdWx0aXBsZSAoKSB7XG4gICAgfSxcbiAgICAvLyBDYWxsZWQgd2hlbmV2ZXIgdGhlIHVwbG9hZCBwcm9ncmVzcyBnZXRzIHVwZGF0ZWQuXG4gICAgLy8gUmVjZWl2ZXMgYGZpbGVgLCBgcHJvZ3Jlc3NgIChwZXJjZW50YWdlIDAtMTAwKSBhbmQgYGJ5dGVzU2VudGAuXG4gICAgLy8gVG8gZ2V0IHRoZSB0b3RhbCBudW1iZXIgb2YgYnl0ZXMgb2YgdGhlIGZpbGUsIHVzZSBgZmlsZS5zaXplYFxuICAgIHVwbG9hZHByb2dyZXNzIChmaWxlLCBwcm9ncmVzcywgYnl0ZXNTZW50KSB7XG4gICAgICAgIGlmIChmaWxlLnByZXZpZXdFbGVtZW50KSBmb3IgKGxldCBub2RlIG9mIGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWR6LXVwbG9hZHByb2dyZXNzXVwiKSlub2RlLm5vZGVOYW1lID09PSBcIlBST0dSRVNTXCIgPyBub2RlLnZhbHVlID0gcHJvZ3Jlc3MgOiBub2RlLnN0eWxlLndpZHRoID0gYCR7cHJvZ3Jlc3N9JWA7XG4gICAgfSxcbiAgICAvLyBDYWxsZWQgd2hlbmV2ZXIgdGhlIHRvdGFsIHVwbG9hZCBwcm9ncmVzcyBnZXRzIHVwZGF0ZWQuXG4gICAgLy8gQ2FsbGVkIHdpdGggdG90YWxVcGxvYWRQcm9ncmVzcyAoMC0xMDApLCB0b3RhbEJ5dGVzIGFuZCB0b3RhbEJ5dGVzU2VudFxuICAgIHRvdGFsdXBsb2FkcHJvZ3Jlc3MgKCkge1xuICAgIH0sXG4gICAgLy8gQ2FsbGVkIGp1c3QgYmVmb3JlIHRoZSBmaWxlIGlzIHNlbnQuIEdldHMgdGhlIGB4aHJgIG9iamVjdCBhcyBzZWNvbmRcbiAgICAvLyBwYXJhbWV0ZXIsIHNvIHlvdSBjYW4gbW9kaWZ5IGl0IChmb3IgZXhhbXBsZSB0byBhZGQgYSBDU1JGIHRva2VuKSBhbmQgYVxuICAgIC8vIGBmb3JtRGF0YWAgb2JqZWN0IHRvIGFkZCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLlxuICAgIHNlbmRpbmcgKCkge1xuICAgIH0sXG4gICAgc2VuZGluZ211bHRpcGxlICgpIHtcbiAgICB9LFxuICAgIC8vIFdoZW4gdGhlIGNvbXBsZXRlIHVwbG9hZCBpcyBmaW5pc2hlZCBhbmQgc3VjY2Vzc2Z1bFxuICAgIC8vIFJlY2VpdmVzIGBmaWxlYFxuICAgIHN1Y2Nlc3MgKGZpbGUpIHtcbiAgICAgICAgaWYgKGZpbGUucHJldmlld0VsZW1lbnQpIHJldHVybiBmaWxlLnByZXZpZXdFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJkei1zdWNjZXNzXCIpO1xuICAgIH0sXG4gICAgc3VjY2Vzc211bHRpcGxlICgpIHtcbiAgICB9LFxuICAgIC8vIFdoZW4gdGhlIHVwbG9hZCBpcyBjYW5jZWxlZC5cbiAgICBjYW5jZWxlZCAoZmlsZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbWl0KFwiZXJyb3JcIiwgZmlsZSwgdGhpcy5vcHRpb25zLmRpY3RVcGxvYWRDYW5jZWxlZCk7XG4gICAgfSxcbiAgICBjYW5jZWxlZG11bHRpcGxlICgpIHtcbiAgICB9LFxuICAgIC8vIFdoZW4gdGhlIHVwbG9hZCBpcyBmaW5pc2hlZCwgZWl0aGVyIHdpdGggc3VjY2VzcyBvciBhbiBlcnJvci5cbiAgICAvLyBSZWNlaXZlcyBgZmlsZWBcbiAgICBjb21wbGV0ZSAoZmlsZSkge1xuICAgICAgICBpZiAoZmlsZS5fcmVtb3ZlTGluaykgZmlsZS5fcmVtb3ZlTGluay5pbm5lckhUTUwgPSB0aGlzLm9wdGlvbnMuZGljdFJlbW92ZUZpbGU7XG4gICAgICAgIGlmIChmaWxlLnByZXZpZXdFbGVtZW50KSByZXR1cm4gZmlsZS5wcmV2aWV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZHotY29tcGxldGVcIik7XG4gICAgfSxcbiAgICBjb21wbGV0ZW11bHRpcGxlICgpIHtcbiAgICB9LFxuICAgIG1heGZpbGVzZXhjZWVkZWQgKCkge1xuICAgIH0sXG4gICAgbWF4ZmlsZXNyZWFjaGVkICgpIHtcbiAgICB9LFxuICAgIHF1ZXVlY29tcGxldGUgKCkge1xuICAgIH0sXG4gICAgYWRkZWRmaWxlcyAoKSB7XG4gICAgfVxufTtcbnZhciAkNGNhMzY3MTgyNzc2ZjgwYiRleHBvcnQkMmUyYmNkODczOWFlMDM5ID0gJDRjYTM2NzE4Mjc3NmY4MGIkdmFyJGRlZmF1bHRPcHRpb25zO1xuXG5cbmNsYXNzICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkgZXh0ZW5kcyAkNDA0MGFjZmQ4NTg0MzM4ZCRleHBvcnQkMmUyYmNkODczOWFlMDM5IHtcbiAgICBzdGF0aWMgaW5pdENsYXNzKCkge1xuICAgICAgICAvLyBFeHBvc2luZyB0aGUgZW1pdHRlciBjbGFzcywgbWFpbmx5IGZvciB0ZXN0c1xuICAgICAgICB0aGlzLnByb3RvdHlwZS5FbWl0dGVyID0gJDQwNDBhY2ZkODU4NDMzOGQkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOTtcbiAgICAgICAgLypcbiAgICAgVGhpcyBpcyBhIGxpc3Qgb2YgYWxsIGF2YWlsYWJsZSBldmVudHMgeW91IGNhbiByZWdpc3RlciBvbiBhIGRyb3B6b25lIG9iamVjdC5cblxuICAgICBZb3UgY2FuIHJlZ2lzdGVyIGFuIGV2ZW50IGhhbmRsZXIgbGlrZSB0aGlzOlxuXG4gICAgIGRyb3B6b25lLm9uKFwiZHJhZ0VudGVyXCIsIGZ1bmN0aW9uKCkgeyB9KTtcblxuICAgICAqLyB0aGlzLnByb3RvdHlwZS5ldmVudHMgPSBbXG4gICAgICAgICAgICBcImRyb3BcIixcbiAgICAgICAgICAgIFwiZHJhZ3N0YXJ0XCIsXG4gICAgICAgICAgICBcImRyYWdlbmRcIixcbiAgICAgICAgICAgIFwiZHJhZ2VudGVyXCIsXG4gICAgICAgICAgICBcImRyYWdvdmVyXCIsXG4gICAgICAgICAgICBcImRyYWdsZWF2ZVwiLFxuICAgICAgICAgICAgXCJhZGRlZGZpbGVcIixcbiAgICAgICAgICAgIFwiYWRkZWRmaWxlc1wiLFxuICAgICAgICAgICAgXCJyZW1vdmVkZmlsZVwiLFxuICAgICAgICAgICAgXCJ0aHVtYm5haWxcIixcbiAgICAgICAgICAgIFwiZXJyb3JcIixcbiAgICAgICAgICAgIFwiZXJyb3JtdWx0aXBsZVwiLFxuICAgICAgICAgICAgXCJwcm9jZXNzaW5nXCIsXG4gICAgICAgICAgICBcInByb2Nlc3NpbmdtdWx0aXBsZVwiLFxuICAgICAgICAgICAgXCJ1cGxvYWRwcm9ncmVzc1wiLFxuICAgICAgICAgICAgXCJ0b3RhbHVwbG9hZHByb2dyZXNzXCIsXG4gICAgICAgICAgICBcInNlbmRpbmdcIixcbiAgICAgICAgICAgIFwic2VuZGluZ211bHRpcGxlXCIsXG4gICAgICAgICAgICBcInN1Y2Nlc3NcIixcbiAgICAgICAgICAgIFwic3VjY2Vzc211bHRpcGxlXCIsXG4gICAgICAgICAgICBcImNhbmNlbGVkXCIsXG4gICAgICAgICAgICBcImNhbmNlbGVkbXVsdGlwbGVcIixcbiAgICAgICAgICAgIFwiY29tcGxldGVcIixcbiAgICAgICAgICAgIFwiY29tcGxldGVtdWx0aXBsZVwiLFxuICAgICAgICAgICAgXCJyZXNldFwiLFxuICAgICAgICAgICAgXCJtYXhmaWxlc2V4Y2VlZGVkXCIsXG4gICAgICAgICAgICBcIm1heGZpbGVzcmVhY2hlZFwiLFxuICAgICAgICAgICAgXCJxdWV1ZWNvbXBsZXRlXCIsIFxuICAgICAgICBdO1xuICAgICAgICB0aGlzLnByb3RvdHlwZS5fdGh1bWJuYWlsUXVldWUgPSBbXTtcbiAgICAgICAgdGhpcy5wcm90b3R5cGUuX3Byb2Nlc3NpbmdUaHVtYm5haWwgPSBmYWxzZTtcbiAgICB9XG4gICAgLy8gUmV0dXJucyBhbGwgZmlsZXMgdGhhdCBoYXZlIGJlZW4gYWNjZXB0ZWRcbiAgICBnZXRBY2NlcHRlZEZpbGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlcy5maWx0ZXIoKGZpbGUpPT5maWxlLmFjY2VwdGVkXG4gICAgICAgICkubWFwKChmaWxlKT0+ZmlsZVxuICAgICAgICApO1xuICAgIH1cbiAgICAvLyBSZXR1cm5zIGFsbCBmaWxlcyB0aGF0IGhhdmUgYmVlbiByZWplY3RlZFxuICAgIC8vIE5vdCBzdXJlIHdoZW4gdGhhdCdzIGdvaW5nIHRvIGJlIHVzZWZ1bCwgYnV0IGFkZGVkIGZvciBjb21wbGV0ZW5lc3MuXG4gICAgZ2V0UmVqZWN0ZWRGaWxlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZXMuZmlsdGVyKChmaWxlKT0+IWZpbGUuYWNjZXB0ZWRcbiAgICAgICAgKS5tYXAoKGZpbGUpPT5maWxlXG4gICAgICAgICk7XG4gICAgfVxuICAgIGdldEZpbGVzV2l0aFN0YXR1cyhzdGF0dXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZXMuZmlsdGVyKChmaWxlKT0+ZmlsZS5zdGF0dXMgPT09IHN0YXR1c1xuICAgICAgICApLm1hcCgoZmlsZSk9PmZpbGVcbiAgICAgICAgKTtcbiAgICB9XG4gICAgLy8gUmV0dXJucyBhbGwgZmlsZXMgdGhhdCBhcmUgaW4gdGhlIHF1ZXVlXG4gICAgZ2V0UXVldWVkRmlsZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEZpbGVzV2l0aFN0YXR1cygkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlFVRVVFRCk7XG4gICAgfVxuICAgIGdldFVwbG9hZGluZ0ZpbGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRGaWxlc1dpdGhTdGF0dXMoJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5VUExPQURJTkcpO1xuICAgIH1cbiAgICBnZXRBZGRlZEZpbGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRGaWxlc1dpdGhTdGF0dXMoJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5BRERFRCk7XG4gICAgfVxuICAgIC8vIEZpbGVzIHRoYXQgYXJlIGVpdGhlciBxdWV1ZWQgb3IgdXBsb2FkaW5nXG4gICAgZ2V0QWN0aXZlRmlsZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVzLmZpbHRlcigoZmlsZSk9PmZpbGUuc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlVQTE9BRElORyB8fCBmaWxlLnN0YXR1cyA9PT0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5RVUVVRURcbiAgICAgICAgKS5tYXAoKGZpbGUpPT5maWxlXG4gICAgICAgICk7XG4gICAgfVxuICAgIC8vIFRoZSBmdW5jdGlvbiB0aGF0IGdldHMgY2FsbGVkIHdoZW4gRHJvcHpvbmUgaXMgaW5pdGlhbGl6ZWQuIFlvdVxuICAgIC8vIGNhbiAoYW5kIHNob3VsZCkgc2V0dXAgZXZlbnQgbGlzdGVuZXJzIGluc2lkZSB0aGlzIGZ1bmN0aW9uLlxuICAgIGluaXQoKSB7XG4gICAgICAgIC8vIEluIGNhc2UgaXQgaXNuJ3Qgc2V0IGFscmVhZHlcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudC50YWdOYW1lID09PSBcImZvcm1cIikgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShcImVuY3R5cGVcIiwgXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIpO1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhcImRyb3B6b25lXCIpICYmICF0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5kei1tZXNzYWdlXCIpKSB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5jcmVhdGVFbGVtZW50KGA8ZGl2IGNsYXNzPVwiZHotZGVmYXVsdCBkei1tZXNzYWdlXCI+PGJ1dHRvbiBjbGFzcz1cImR6LWJ1dHRvblwiIHR5cGU9XCJidXR0b25cIj4ke3RoaXMub3B0aW9ucy5kaWN0RGVmYXVsdE1lc3NhZ2V9PC9idXR0b24+PC9kaXY+YCkpO1xuICAgICAgICBpZiAodGhpcy5jbGlja2FibGVFbGVtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGxldCBzZXR1cEhpZGRlbkZpbGVJbnB1dCA9ICgpPT57XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaGlkZGVuRmlsZUlucHV0KSB0aGlzLmhpZGRlbkZpbGVJbnB1dC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuaGlkZGVuRmlsZUlucHV0KTtcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGRlbkZpbGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGRlbkZpbGVJbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiZmlsZVwiKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLm1heEZpbGVzID09PSBudWxsIHx8IHRoaXMub3B0aW9ucy5tYXhGaWxlcyA+IDEpIHRoaXMuaGlkZGVuRmlsZUlucHV0LnNldEF0dHJpYnV0ZShcIm11bHRpcGxlXCIsIFwibXVsdGlwbGVcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuY2xhc3NOYW1lID0gXCJkei1oaWRkZW4taW5wdXRcIjtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmFjY2VwdGVkRmlsZXMgIT09IG51bGwpIHRoaXMuaGlkZGVuRmlsZUlucHV0LnNldEF0dHJpYnV0ZShcImFjY2VwdFwiLCB0aGlzLm9wdGlvbnMuYWNjZXB0ZWRGaWxlcyk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jYXB0dXJlICE9PSBudWxsKSB0aGlzLmhpZGRlbkZpbGVJbnB1dC5zZXRBdHRyaWJ1dGUoXCJjYXB0dXJlXCIsIHRoaXMub3B0aW9ucy5jYXB0dXJlKTtcbiAgICAgICAgICAgICAgICAvLyBNYWtpbmcgc3VyZSB0aGF0IG5vIG9uZSBjYW4gXCJ0YWJcIiBpbnRvIHRoaXMgZmllbGQuXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuc2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIiwgXCItMVwiKTtcbiAgICAgICAgICAgICAgICAvLyBOb3Qgc2V0dGluZyBgZGlzcGxheT1cIm5vbmVcImAgYmVjYXVzZSBzb21lIGJyb3dzZXJzIGRvbid0IGFjY2VwdCBjbGlja3NcbiAgICAgICAgICAgICAgICAvLyBvbiBlbGVtZW50cyB0aGF0IGFyZW4ndCBkaXNwbGF5ZWQuXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuc3R5bGUudG9wID0gXCIwXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuc3R5bGUubGVmdCA9IFwiMFwiO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnN0eWxlLmhlaWdodCA9IFwiMFwiO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZGVuRmlsZUlucHV0LnN0eWxlLndpZHRoID0gXCIwXCI7XG4gICAgICAgICAgICAgICAgJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5nZXRFbGVtZW50KHRoaXMub3B0aW9ucy5oaWRkZW5JbnB1dENvbnRhaW5lciwgXCJoaWRkZW5JbnB1dENvbnRhaW5lclwiKS5hcHBlbmRDaGlsZCh0aGlzLmhpZGRlbkZpbGVJbnB1dCk7XG4gICAgICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICBsZXQgeyBmaWxlczogZmlsZXMgIH0gPSB0aGlzLmhpZGRlbkZpbGVJbnB1dDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGVzLmxlbmd0aCkgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl0aGlzLmFkZEZpbGUoZmlsZSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdChcImFkZGVkZmlsZXNcIiwgZmlsZXMpO1xuICAgICAgICAgICAgICAgICAgICBzZXR1cEhpZGRlbkZpbGVJbnB1dCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHNldHVwSGlkZGVuRmlsZUlucHV0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5VUkwgPSB3aW5kb3cuVVJMICE9PSBudWxsID8gd2luZG93LlVSTCA6IHdpbmRvdy53ZWJraXRVUkw7XG4gICAgICAgIC8vIFNldHVwIGFsbCBldmVudCBsaXN0ZW5lcnMgb24gdGhlIERyb3B6b25lIG9iamVjdCBpdHNlbGYuXG4gICAgICAgIC8vIFRoZXkncmUgbm90IGluIEBzZXR1cEV2ZW50TGlzdGVuZXJzKCkgYmVjYXVzZSB0aGV5IHNob3VsZG4ndCBiZSByZW1vdmVkXG4gICAgICAgIC8vIGFnYWluIHdoZW4gdGhlIGRyb3B6b25lIGdldHMgZGlzYWJsZWQuXG4gICAgICAgIGZvciAobGV0IGV2ZW50TmFtZSBvZiB0aGlzLmV2ZW50cyl0aGlzLm9uKGV2ZW50TmFtZSwgdGhpcy5vcHRpb25zW2V2ZW50TmFtZV0pO1xuICAgICAgICB0aGlzLm9uKFwidXBsb2FkcHJvZ3Jlc3NcIiwgKCk9PnRoaXMudXBkYXRlVG90YWxVcGxvYWRQcm9ncmVzcygpXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMub24oXCJyZW1vdmVkZmlsZVwiLCAoKT0+dGhpcy51cGRhdGVUb3RhbFVwbG9hZFByb2dyZXNzKClcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5vbihcImNhbmNlbGVkXCIsIChmaWxlKT0+dGhpcy5lbWl0KFwiY29tcGxldGVcIiwgZmlsZSlcbiAgICAgICAgKTtcbiAgICAgICAgLy8gRW1pdCBhIGBxdWV1ZWNvbXBsZXRlYCBldmVudCBpZiBhbGwgZmlsZXMgZmluaXNoZWQgdXBsb2FkaW5nLlxuICAgICAgICB0aGlzLm9uKFwiY29tcGxldGVcIiwgKGZpbGUpPT57XG4gICAgICAgICAgICBpZiAodGhpcy5nZXRBZGRlZEZpbGVzKCkubGVuZ3RoID09PSAwICYmIHRoaXMuZ2V0VXBsb2FkaW5nRmlsZXMoKS5sZW5ndGggPT09IDAgJiYgdGhpcy5nZXRRdWV1ZWRGaWxlcygpLmxlbmd0aCA9PT0gMCkgLy8gVGhpcyBuZWVkcyB0byBiZSBkZWZlcnJlZCBzbyB0aGF0IGBxdWV1ZWNvbXBsZXRlYCByZWFsbHkgdHJpZ2dlcnMgYWZ0ZXIgYGNvbXBsZXRlYFxuICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoKCk9PnRoaXMuZW1pdChcInF1ZXVlY29tcGxldGVcIilcbiAgICAgICAgICAgICwgMCk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBjb250YWluc0ZpbGVzID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaWYgKGUuZGF0YVRyYW5zZmVyLnR5cGVzKSAvLyBCZWNhdXNlIGUuZGF0YVRyYW5zZmVyLnR5cGVzIGlzIGFuIE9iamVjdCBpblxuICAgICAgICAgICAgLy8gSUUsIHdlIG5lZWQgdG8gaXRlcmF0ZSBsaWtlIHRoaXMgaW5zdGVhZCBvZlxuICAgICAgICAgICAgLy8gdXNpbmcgZS5kYXRhVHJhbnNmZXIudHlwZXMuc29tZSgpXG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgZS5kYXRhVHJhbnNmZXIudHlwZXMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgIGlmIChlLmRhdGFUcmFuc2Zlci50eXBlc1tpXSA9PT0gXCJGaWxlc1wiKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IG5vUHJvcGFnYXRpb24gPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAvLyBJZiB0aGVyZSBhcmUgbm8gZmlsZXMsIHdlIGRvbid0IHdhbnQgdG8gc3RvcFxuICAgICAgICAgICAgLy8gcHJvcGFnYXRpb24gc28gd2UgZG9uJ3QgaW50ZXJmZXJlIHdpdGggb3RoZXJcbiAgICAgICAgICAgIC8vIGRyYWcgYW5kIGRyb3AgYmVoYXZpb3VyLlxuICAgICAgICAgICAgaWYgKCFjb250YWluc0ZpbGVzKGUpKSByZXR1cm47XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHJldHVybiBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlbHNlIHJldHVybiBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgIC8vIENyZWF0ZSB0aGUgbGlzdGVuZXJzXG4gICAgICAgIHRoaXMubGlzdGVuZXJzID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQ6IHRoaXMuZWxlbWVudCxcbiAgICAgICAgICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICAgICAgICAgZHJhZ3N0YXJ0OiAoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQoXCJkcmFnc3RhcnRcIiwgZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGRyYWdlbnRlcjogKGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBub1Byb3BhZ2F0aW9uKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChcImRyYWdlbnRlclwiLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZHJhZ292ZXI6IChlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gTWFrZXMgaXQgcG9zc2libGUgdG8gZHJhZyBmaWxlcyBmcm9tIGNocm9tZSdzIGRvd25sb2FkIGJhclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xOTUyNjQzMC9kcmFnLWFuZC1kcm9wLWZpbGUtdXBsb2Fkcy1mcm9tLWNocm9tZS1kb3dubG9hZHMtYmFyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUcnkgaXMgcmVxdWlyZWQgdG8gcHJldmVudCBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTEgKFNDUklQVDY1NTM1IGV4Y2VwdGlvbilcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBlZmN0O1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZmN0ID0gZS5kYXRhVHJhbnNmZXIuZWZmZWN0QWxsb3dlZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gXCJtb3ZlXCIgPT09IGVmY3QgfHwgXCJsaW5rTW92ZVwiID09PSBlZmN0ID8gXCJtb3ZlXCIgOiBcImNvcHlcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vUHJvcGFnYXRpb24oZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KFwiZHJhZ292ZXJcIiwgZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGRyYWdsZWF2ZTogKGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KFwiZHJhZ2xlYXZlXCIsIGUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBkcm9wOiAoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vUHJvcGFnYXRpb24oZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kcm9wKGUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBkcmFnZW5kOiAoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQoXCJkcmFnZW5kXCIsIGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgXG4gICAgICAgIF07XG4gICAgICAgIHRoaXMuY2xpY2thYmxlRWxlbWVudHMuZm9yRWFjaCgoY2xpY2thYmxlRWxlbWVudCk9PntcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5wdXNoKHtcbiAgICAgICAgICAgICAgICBlbGVtZW50OiBjbGlja2FibGVFbGVtZW50LFxuICAgICAgICAgICAgICAgIGV2ZW50czoge1xuICAgICAgICAgICAgICAgICAgICBjbGljazogKGV2dCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIE9ubHkgdGhlIGFjdHVhbCBkcm9wem9uZSBvciB0aGUgbWVzc2FnZSBlbGVtZW50IHNob3VsZCB0cmlnZ2VyIGZpbGUgc2VsZWN0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xpY2thYmxlRWxlbWVudCAhPT0gdGhpcy5lbGVtZW50IHx8IGV2dC50YXJnZXQgPT09IHRoaXMuZWxlbWVudCB8fCAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmVsZW1lbnRJbnNpZGUoZXZ0LnRhcmdldCwgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZHotbWVzc2FnZVwiKSkpIHRoaXMuaGlkZGVuRmlsZUlucHV0LmNsaWNrKCk7IC8vIEZvcndhcmQgdGhlIGNsaWNrXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5lbmFibGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5pbml0LmNhbGwodGhpcyk7XG4gICAgfVxuICAgIC8vIE5vdCBmdWxseSB0ZXN0ZWQgeWV0XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5kaXNhYmxlKCk7XG4gICAgICAgIHRoaXMucmVtb3ZlQWxsRmlsZXModHJ1ZSk7XG4gICAgICAgIGlmICh0aGlzLmhpZGRlbkZpbGVJbnB1dCAhPSBudWxsID8gdGhpcy5oaWRkZW5GaWxlSW5wdXQucGFyZW50Tm9kZSA6IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5oaWRkZW5GaWxlSW5wdXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmhpZGRlbkZpbGVJbnB1dCk7XG4gICAgICAgICAgICB0aGlzLmhpZGRlbkZpbGVJbnB1dCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZGVsZXRlIHRoaXMuZWxlbWVudC5kcm9wem9uZTtcbiAgICAgICAgcmV0dXJuICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuaW5zdGFuY2VzLnNwbGljZSgkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5Lmluc3RhbmNlcy5pbmRleE9mKHRoaXMpLCAxKTtcbiAgICB9XG4gICAgdXBkYXRlVG90YWxVcGxvYWRQcm9ncmVzcygpIHtcbiAgICAgICAgbGV0IHRvdGFsVXBsb2FkUHJvZ3Jlc3M7XG4gICAgICAgIGxldCB0b3RhbEJ5dGVzU2VudCA9IDA7XG4gICAgICAgIGxldCB0b3RhbEJ5dGVzID0gMDtcbiAgICAgICAgbGV0IGFjdGl2ZUZpbGVzID0gdGhpcy5nZXRBY3RpdmVGaWxlcygpO1xuICAgICAgICBpZiAoYWN0aXZlRmlsZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBmaWxlIG9mIHRoaXMuZ2V0QWN0aXZlRmlsZXMoKSl7XG4gICAgICAgICAgICAgICAgdG90YWxCeXRlc1NlbnQgKz0gZmlsZS51cGxvYWQuYnl0ZXNTZW50O1xuICAgICAgICAgICAgICAgIHRvdGFsQnl0ZXMgKz0gZmlsZS51cGxvYWQudG90YWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b3RhbFVwbG9hZFByb2dyZXNzID0gMTAwICogdG90YWxCeXRlc1NlbnQgLyB0b3RhbEJ5dGVzO1xuICAgICAgICB9IGVsc2UgdG90YWxVcGxvYWRQcm9ncmVzcyA9IDEwMDtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChcInRvdGFsdXBsb2FkcHJvZ3Jlc3NcIiwgdG90YWxVcGxvYWRQcm9ncmVzcywgdG90YWxCeXRlcywgdG90YWxCeXRlc1NlbnQpO1xuICAgIH1cbiAgICAvLyBAb3B0aW9ucy5wYXJhbU5hbWUgY2FuIGJlIGEgZnVuY3Rpb24gdGFraW5nIG9uZSBwYXJhbWV0ZXIgcmF0aGVyIHRoYW4gYSBzdHJpbmcuXG4gICAgLy8gQSBwYXJhbWV0ZXIgbmFtZSBmb3IgYSBmaWxlIGlzIG9idGFpbmVkIHNpbXBseSBieSBjYWxsaW5nIHRoaXMgd2l0aCBhbiBpbmRleCBudW1iZXIuXG4gICAgX2dldFBhcmFtTmFtZShuKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLnBhcmFtTmFtZSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdGhpcy5vcHRpb25zLnBhcmFtTmFtZShuKTtcbiAgICAgICAgZWxzZSByZXR1cm4gYCR7dGhpcy5vcHRpb25zLnBhcmFtTmFtZX0ke3RoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSA/IGBbJHtufV1gIDogXCJcIn1gO1xuICAgIH1cbiAgICAvLyBJZiBAb3B0aW9ucy5yZW5hbWVGaWxlIGlzIGEgZnVuY3Rpb24sXG4gICAgLy8gdGhlIGZ1bmN0aW9uIHdpbGwgYmUgdXNlZCB0byByZW5hbWUgdGhlIGZpbGUubmFtZSBiZWZvcmUgYXBwZW5kaW5nIGl0IHRvIHRoZSBmb3JtRGF0YVxuICAgIF9yZW5hbWVGaWxlKGZpbGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMucmVuYW1lRmlsZSAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gZmlsZS5uYW1lO1xuICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLnJlbmFtZUZpbGUoZmlsZSk7XG4gICAgfVxuICAgIC8vIFJldHVybnMgYSBmb3JtIHRoYXQgY2FuIGJlIHVzZWQgYXMgZmFsbGJhY2sgaWYgdGhlIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBEcmFnbkRyb3BcbiAgICAvL1xuICAgIC8vIElmIHRoZSBkcm9wem9uZSBpcyBhbHJlYWR5IGEgZm9ybSwgb25seSB0aGUgaW5wdXQgZmllbGQgYW5kIGJ1dHRvbiBhcmUgcmV0dXJuZWQuIE90aGVyd2lzZSBhIGNvbXBsZXRlIGZvcm0gZWxlbWVudCBpcyBwcm92aWRlZC5cbiAgICAvLyBUaGlzIGNvZGUgaGFzIHRvIHBhc3MgaW4gSUU3IDooXG4gICAgZ2V0RmFsbGJhY2tGb3JtKCkge1xuICAgICAgICBsZXQgZXhpc3RpbmdGYWxsYmFjaywgZm9ybTtcbiAgICAgICAgaWYgKGV4aXN0aW5nRmFsbGJhY2sgPSB0aGlzLmdldEV4aXN0aW5nRmFsbGJhY2soKSkgcmV0dXJuIGV4aXN0aW5nRmFsbGJhY2s7XG4gICAgICAgIGxldCBmaWVsZHNTdHJpbmcgPSAnPGRpdiBjbGFzcz1cImR6LWZhbGxiYWNrXCI+JztcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5kaWN0RmFsbGJhY2tUZXh0KSBmaWVsZHNTdHJpbmcgKz0gYDxwPiR7dGhpcy5vcHRpb25zLmRpY3RGYWxsYmFja1RleHR9PC9wPmA7XG4gICAgICAgIGZpZWxkc1N0cmluZyArPSBgPGlucHV0IHR5cGU9XCJmaWxlXCIgbmFtZT1cIiR7dGhpcy5fZ2V0UGFyYW1OYW1lKDApfVwiICR7dGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlID8gJ211bHRpcGxlPVwibXVsdGlwbGVcIicgOiB1bmRlZmluZWR9IC8+PGlucHV0IHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cIlVwbG9hZCFcIj48L2Rpdj5gO1xuICAgICAgICBsZXQgZmllbGRzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5jcmVhdGVFbGVtZW50KGZpZWxkc1N0cmluZyk7XG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnQudGFnTmFtZSAhPT0gXCJGT1JNXCIpIHtcbiAgICAgICAgICAgIGZvcm0gPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmNyZWF0ZUVsZW1lbnQoYDxmb3JtIGFjdGlvbj1cIiR7dGhpcy5vcHRpb25zLnVybH1cIiBlbmN0eXBlPVwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiIG1ldGhvZD1cIiR7dGhpcy5vcHRpb25zLm1ldGhvZH1cIj48L2Zvcm0+YCk7XG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhhdCB0aGUgZW5jdHlwZSBhbmQgbWV0aG9kIGF0dHJpYnV0ZXMgYXJlIHNldCBwcm9wZXJseVxuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShcImVuY3R5cGVcIiwgXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIpO1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShcIm1ldGhvZFwiLCB0aGlzLm9wdGlvbnMubWV0aG9kKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm9ybSAhPSBudWxsID8gZm9ybSA6IGZpZWxkcztcbiAgICB9XG4gICAgLy8gUmV0dXJucyB0aGUgZmFsbGJhY2sgZWxlbWVudHMgaWYgdGhleSBleGlzdCBhbHJlYWR5XG4gICAgLy9cbiAgICAvLyBUaGlzIGNvZGUgaGFzIHRvIHBhc3MgaW4gSUU3IDooXG4gICAgZ2V0RXhpc3RpbmdGYWxsYmFjaygpIHtcbiAgICAgICAgbGV0IGdldEZhbGxiYWNrID0gZnVuY3Rpb24oZWxlbWVudHMpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGVsIG9mIGVsZW1lbnRzKXtcbiAgICAgICAgICAgICAgICBpZiAoLyhefCApZmFsbGJhY2soJHwgKS8udGVzdChlbC5jbGFzc05hbWUpKSByZXR1cm4gZWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGZvciAobGV0IHRhZ05hbWUgb2YgW1xuICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgIFwiZm9ybVwiXG4gICAgICAgIF0pe1xuICAgICAgICAgICAgdmFyIGZhbGxiYWNrO1xuICAgICAgICAgICAgaWYgKGZhbGxiYWNrID0gZ2V0RmFsbGJhY2sodGhpcy5lbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZ05hbWUpKSkgcmV0dXJuIGZhbGxiYWNrO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIEFjdGl2YXRlcyBhbGwgbGlzdGVuZXJzIHN0b3JlZCBpbiBAbGlzdGVuZXJzXG4gICAgc2V0dXBFdmVudExpc3RlbmVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLm1hcCgoZWxlbWVudExpc3RlbmVycyk9PigoKT0+e1xuICAgICAgICAgICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGV2ZW50IGluIGVsZW1lbnRMaXN0ZW5lcnMuZXZlbnRzKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxpc3RlbmVyID0gZWxlbWVudExpc3RlbmVycy5ldmVudHNbZXZlbnRdO1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChlbGVtZW50TGlzdGVuZXJzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9KSgpXG4gICAgICAgICk7XG4gICAgfVxuICAgIC8vIERlYWN0aXZhdGVzIGFsbCBsaXN0ZW5lcnMgc3RvcmVkIGluIEBsaXN0ZW5lcnNcbiAgICByZW1vdmVFdmVudExpc3RlbmVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLm1hcCgoZWxlbWVudExpc3RlbmVycyk9PigoKT0+e1xuICAgICAgICAgICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGV2ZW50IGluIGVsZW1lbnRMaXN0ZW5lcnMuZXZlbnRzKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxpc3RlbmVyID0gZWxlbWVudExpc3RlbmVycy5ldmVudHNbZXZlbnRdO1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChlbGVtZW50TGlzdGVuZXJzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9KSgpXG4gICAgICAgICk7XG4gICAgfVxuICAgIC8vIFJlbW92ZXMgYWxsIGV2ZW50IGxpc3RlbmVycyBhbmQgY2FuY2VscyBhbGwgZmlsZXMgaW4gdGhlIHF1ZXVlIG9yIGJlaW5nIHByb2Nlc3NlZC5cbiAgICBkaXNhYmxlKCkge1xuICAgICAgICB0aGlzLmNsaWNrYWJsZUVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQpPT5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJkei1jbGlja2FibGVcIilcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVycygpO1xuICAgICAgICB0aGlzLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZXMubWFwKChmaWxlKT0+dGhpcy5jYW5jZWxVcGxvYWQoZmlsZSlcbiAgICAgICAgKTtcbiAgICB9XG4gICAgZW5hYmxlKCkge1xuICAgICAgICBkZWxldGUgdGhpcy5kaXNhYmxlZDtcbiAgICAgICAgdGhpcy5jbGlja2FibGVFbGVtZW50cy5mb3JFYWNoKChlbGVtZW50KT0+ZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZHotY2xpY2thYmxlXCIpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiB0aGlzLnNldHVwRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9XG4gICAgLy8gUmV0dXJucyBhIG5pY2VseSBmb3JtYXR0ZWQgZmlsZXNpemVcbiAgICBmaWxlc2l6ZShzaXplKSB7XG4gICAgICAgIGxldCBzZWxlY3RlZFNpemUgPSAwO1xuICAgICAgICBsZXQgc2VsZWN0ZWRVbml0ID0gXCJiXCI7XG4gICAgICAgIGlmIChzaXplID4gMCkge1xuICAgICAgICAgICAgbGV0IHVuaXRzID0gW1xuICAgICAgICAgICAgICAgIFwidGJcIixcbiAgICAgICAgICAgICAgICBcImdiXCIsXG4gICAgICAgICAgICAgICAgXCJtYlwiLFxuICAgICAgICAgICAgICAgIFwia2JcIixcbiAgICAgICAgICAgICAgICBcImJcIlxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB1bml0cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgbGV0IHVuaXQgPSB1bml0c1tpXTtcbiAgICAgICAgICAgICAgICBsZXQgY3V0b2ZmID0gTWF0aC5wb3codGhpcy5vcHRpb25zLmZpbGVzaXplQmFzZSwgNCAtIGkpIC8gMTA7XG4gICAgICAgICAgICAgICAgaWYgKHNpemUgPj0gY3V0b2ZmKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkU2l6ZSA9IHNpemUgLyBNYXRoLnBvdyh0aGlzLm9wdGlvbnMuZmlsZXNpemVCYXNlLCA0IC0gaSk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkVW5pdCA9IHVuaXQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGVjdGVkU2l6ZSA9IE1hdGgucm91bmQoMTAgKiBzZWxlY3RlZFNpemUpIC8gMTA7IC8vIEN1dHRpbmcgb2YgZGlnaXRzXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGA8c3Ryb25nPiR7c2VsZWN0ZWRTaXplfTwvc3Ryb25nPiAke3RoaXMub3B0aW9ucy5kaWN0RmlsZVNpemVVbml0c1tzZWxlY3RlZFVuaXRdfWA7XG4gICAgfVxuICAgIC8vIEFkZHMgb3IgcmVtb3ZlcyB0aGUgYGR6LW1heC1maWxlcy1yZWFjaGVkYCBjbGFzcyBmcm9tIHRoZSBmb3JtLlxuICAgIF91cGRhdGVNYXhGaWxlc1JlYWNoZWRDbGFzcygpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5tYXhGaWxlcyAhPSBudWxsICYmIHRoaXMuZ2V0QWNjZXB0ZWRGaWxlcygpLmxlbmd0aCA+PSB0aGlzLm9wdGlvbnMubWF4RmlsZXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmdldEFjY2VwdGVkRmlsZXMoKS5sZW5ndGggPT09IHRoaXMub3B0aW9ucy5tYXhGaWxlcykgdGhpcy5lbWl0KFwibWF4ZmlsZXNyZWFjaGVkXCIsIHRoaXMuZmlsZXMpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZHotbWF4LWZpbGVzLXJlYWNoZWRcIik7XG4gICAgICAgIH0gZWxzZSByZXR1cm4gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJkei1tYXgtZmlsZXMtcmVhY2hlZFwiKTtcbiAgICB9XG4gICAgZHJvcChlKSB7XG4gICAgICAgIGlmICghZS5kYXRhVHJhbnNmZXIpIHJldHVybjtcbiAgICAgICAgdGhpcy5lbWl0KFwiZHJvcFwiLCBlKTtcbiAgICAgICAgLy8gQ29udmVydCB0aGUgRmlsZUxpc3QgdG8gYW4gQXJyYXlcbiAgICAgICAgLy8gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIElFMTFcbiAgICAgICAgbGV0IGZpbGVzID0gW107XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBlLmRhdGFUcmFuc2Zlci5maWxlcy5sZW5ndGg7IGkrKylmaWxlc1tpXSA9IGUuZGF0YVRyYW5zZmVyLmZpbGVzW2ldO1xuICAgICAgICAvLyBFdmVuIGlmIGl0J3MgYSBmb2xkZXIsIGZpbGVzLmxlbmd0aCB3aWxsIGNvbnRhaW4gdGhlIGZvbGRlcnMuXG4gICAgICAgIGlmIChmaWxlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGxldCB7IGl0ZW1zOiBpdGVtcyAgfSA9IGUuZGF0YVRyYW5zZmVyO1xuICAgICAgICAgICAgaWYgKGl0ZW1zICYmIGl0ZW1zLmxlbmd0aCAmJiBpdGVtc1swXS53ZWJraXRHZXRBc0VudHJ5ICE9IG51bGwpIC8vIFRoZSBicm93c2VyIHN1cHBvcnRzIGRyb3BwaW5nIG9mIGZvbGRlcnMsIHNvIGhhbmRsZSBpdGVtcyBpbnN0ZWFkIG9mIGZpbGVzXG4gICAgICAgICAgICB0aGlzLl9hZGRGaWxlc0Zyb21JdGVtcyhpdGVtcyk7XG4gICAgICAgICAgICBlbHNlIHRoaXMuaGFuZGxlRmlsZXMoZmlsZXMpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZW1pdChcImFkZGVkZmlsZXNcIiwgZmlsZXMpO1xuICAgIH1cbiAgICBwYXN0ZShlKSB7XG4gICAgICAgIGlmICgkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkX19ndWFyZF9fKGUgIT0gbnVsbCA/IGUuY2xpcGJvYXJkRGF0YSA6IHVuZGVmaW5lZCwgKHgpPT54Lml0ZW1zXG4gICAgICAgICkgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICB0aGlzLmVtaXQoXCJwYXN0ZVwiLCBlKTtcbiAgICAgICAgbGV0IHsgaXRlbXM6IGl0ZW1zICB9ID0gZS5jbGlwYm9hcmREYXRhO1xuICAgICAgICBpZiAoaXRlbXMubGVuZ3RoKSByZXR1cm4gdGhpcy5fYWRkRmlsZXNGcm9tSXRlbXMoaXRlbXMpO1xuICAgIH1cbiAgICBoYW5kbGVGaWxlcyhmaWxlcykge1xuICAgICAgICBmb3IgKGxldCBmaWxlIG9mIGZpbGVzKXRoaXMuYWRkRmlsZShmaWxlKTtcbiAgICB9XG4gICAgLy8gV2hlbiBhIGZvbGRlciBpcyBkcm9wcGVkIChvciBmaWxlcyBhcmUgcGFzdGVkKSwgaXRlbXMgbXVzdCBiZSBoYW5kbGVkXG4gICAgLy8gaW5zdGVhZCBvZiBmaWxlcy5cbiAgICBfYWRkRmlsZXNGcm9tSXRlbXMoaXRlbXMpIHtcbiAgICAgICAgcmV0dXJuICgoKT0+e1xuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgaXRlbSBvZiBpdGVtcyl7XG4gICAgICAgICAgICAgICAgdmFyIGVudHJ5O1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLndlYmtpdEdldEFzRW50cnkgIT0gbnVsbCAmJiAoZW50cnkgPSBpdGVtLndlYmtpdEdldEFzRW50cnkoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVudHJ5LmlzRmlsZSkgcmVzdWx0LnB1c2godGhpcy5hZGRGaWxlKGl0ZW0uZ2V0QXNGaWxlKCkpKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZW50cnkuaXNEaXJlY3RvcnkpIC8vIEFwcGVuZCBhbGwgZmlsZXMgZnJvbSB0aGF0IGRpcmVjdG9yeSB0byBmaWxlc1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh0aGlzLl9hZGRGaWxlc0Zyb21EaXJlY3RvcnkoZW50cnksIGVudHJ5Lm5hbWUpKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXN1bHQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5nZXRBc0ZpbGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5raW5kID09IG51bGwgfHwgaXRlbS5raW5kID09PSBcImZpbGVcIikgcmVzdWx0LnB1c2godGhpcy5hZGRGaWxlKGl0ZW0uZ2V0QXNGaWxlKCkpKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXN1bHQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSByZXN1bHQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgLy8gR29lcyB0aHJvdWdoIHRoZSBkaXJlY3RvcnksIGFuZCBhZGRzIGVhY2ggZmlsZSBpdCBmaW5kcyByZWN1cnNpdmVseVxuICAgIF9hZGRGaWxlc0Zyb21EaXJlY3RvcnkoZGlyZWN0b3J5LCBwYXRoKSB7XG4gICAgICAgIGxldCBkaXJSZWFkZXIgPSBkaXJlY3RvcnkuY3JlYXRlUmVhZGVyKCk7XG4gICAgICAgIGxldCBlcnJvckhhbmRsZXIgPSAoZXJyb3IpPT4kM2VkMjY5ZjJmMGZiMjI0YiR2YXIkX19ndWFyZE1ldGhvZF9fKGNvbnNvbGUsIFwibG9nXCIsIChvKT0+by5sb2coZXJyb3IpXG4gICAgICAgICAgICApXG4gICAgICAgIDtcbiAgICAgICAgdmFyIHJlYWRFbnRyaWVzID0gKCk9PntcbiAgICAgICAgICAgIHJldHVybiBkaXJSZWFkZXIucmVhZEVudHJpZXMoKGVudHJpZXMpPT57XG4gICAgICAgICAgICAgICAgaWYgKGVudHJpZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBlbnRyeSBvZiBlbnRyaWVzKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbnRyeS5pc0ZpbGUpIGVudHJ5LmZpbGUoKGZpbGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5pZ25vcmVIaWRkZW5GaWxlcyAmJiBmaWxlLm5hbWUuc3Vic3RyaW5nKDAsIDEpID09PSBcIi5cIikgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUuZnVsbFBhdGggPSBgJHtwYXRofS8ke2ZpbGUubmFtZX1gO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmFkZEZpbGUoZmlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGVudHJ5LmlzRGlyZWN0b3J5KSB0aGlzLl9hZGRGaWxlc0Zyb21EaXJlY3RvcnkoZW50cnksIGAke3BhdGh9LyR7ZW50cnkubmFtZX1gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBSZWN1cnNpdmVseSBjYWxsIHJlYWRFbnRyaWVzKCkgYWdhaW4sIHNpbmNlIGJyb3dzZXIgb25seSBoYW5kbGVcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIGZpcnN0IDEwMCBlbnRyaWVzLlxuICAgICAgICAgICAgICAgICAgICAvLyBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9EaXJlY3RvcnlSZWFkZXIjcmVhZEVudHJpZXNcbiAgICAgICAgICAgICAgICAgICAgcmVhZEVudHJpZXMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9LCBlcnJvckhhbmRsZXIpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcmVhZEVudHJpZXMoKTtcbiAgICB9XG4gICAgLy8gSWYgYGRvbmUoKWAgaXMgY2FsbGVkIHdpdGhvdXQgYXJndW1lbnQgdGhlIGZpbGUgaXMgYWNjZXB0ZWRcbiAgICAvLyBJZiB5b3UgY2FsbCBpdCB3aXRoIGFuIGVycm9yIG1lc3NhZ2UsIHRoZSBmaWxlIGlzIHJlamVjdGVkXG4gICAgLy8gKFRoaXMgYWxsb3dzIGZvciBhc3luY2hyb25vdXMgdmFsaWRhdGlvbilcbiAgICAvL1xuICAgIC8vIFRoaXMgZnVuY3Rpb24gY2hlY2tzIHRoZSBmaWxlc2l6ZSwgYW5kIGlmIHRoZSBmaWxlLnR5cGUgcGFzc2VzIHRoZVxuICAgIC8vIGBhY2NlcHRlZEZpbGVzYCBjaGVjay5cbiAgICBhY2NlcHQoZmlsZSwgZG9uZSkge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLm1heEZpbGVzaXplICYmIGZpbGUuc2l6ZSA+IHRoaXMub3B0aW9ucy5tYXhGaWxlc2l6ZSAqIDEwNDg1NzYpIGRvbmUodGhpcy5vcHRpb25zLmRpY3RGaWxlVG9vQmlnLnJlcGxhY2UoXCJ7e2ZpbGVzaXplfX1cIiwgTWF0aC5yb3VuZChmaWxlLnNpemUgLyAxMDI0IC8gMTAuMjQpIC8gMTAwKS5yZXBsYWNlKFwie3ttYXhGaWxlc2l6ZX19XCIsIHRoaXMub3B0aW9ucy5tYXhGaWxlc2l6ZSkpO1xuICAgICAgICBlbHNlIGlmICghJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5pc1ZhbGlkRmlsZShmaWxlLCB0aGlzLm9wdGlvbnMuYWNjZXB0ZWRGaWxlcykpIGRvbmUodGhpcy5vcHRpb25zLmRpY3RJbnZhbGlkRmlsZVR5cGUpO1xuICAgICAgICBlbHNlIGlmICh0aGlzLm9wdGlvbnMubWF4RmlsZXMgIT0gbnVsbCAmJiB0aGlzLmdldEFjY2VwdGVkRmlsZXMoKS5sZW5ndGggPj0gdGhpcy5vcHRpb25zLm1heEZpbGVzKSB7XG4gICAgICAgICAgICBkb25lKHRoaXMub3B0aW9ucy5kaWN0TWF4RmlsZXNFeGNlZWRlZC5yZXBsYWNlKFwie3ttYXhGaWxlc319XCIsIHRoaXMub3B0aW9ucy5tYXhGaWxlcykpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwibWF4ZmlsZXNleGNlZWRlZFwiLCBmaWxlKTtcbiAgICAgICAgfSBlbHNlIHRoaXMub3B0aW9ucy5hY2NlcHQuY2FsbCh0aGlzLCBmaWxlLCBkb25lKTtcbiAgICB9XG4gICAgYWRkRmlsZShmaWxlKSB7XG4gICAgICAgIGZpbGUudXBsb2FkID0ge1xuICAgICAgICAgICAgdXVpZDogJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS51dWlkdjQoKSxcbiAgICAgICAgICAgIHByb2dyZXNzOiAwLFxuICAgICAgICAgICAgLy8gU2V0dGluZyB0aGUgdG90YWwgdXBsb2FkIHNpemUgdG8gZmlsZS5zaXplIGZvciB0aGUgYmVnaW5uaW5nXG4gICAgICAgICAgICAvLyBJdCdzIGFjdHVhbCBkaWZmZXJlbnQgdGhhbiB0aGUgc2l6ZSB0byBiZSB0cmFuc21pdHRlZC5cbiAgICAgICAgICAgIHRvdGFsOiBmaWxlLnNpemUsXG4gICAgICAgICAgICBieXRlc1NlbnQ6IDAsXG4gICAgICAgICAgICBmaWxlbmFtZTogdGhpcy5fcmVuYW1lRmlsZShmaWxlKVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmZpbGVzLnB1c2goZmlsZSk7XG4gICAgICAgIGZpbGUuc3RhdHVzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5BRERFRDtcbiAgICAgICAgdGhpcy5lbWl0KFwiYWRkZWRmaWxlXCIsIGZpbGUpO1xuICAgICAgICB0aGlzLl9lbnF1ZXVlVGh1bWJuYWlsKGZpbGUpO1xuICAgICAgICB0aGlzLmFjY2VwdChmaWxlLCAoZXJyb3IpPT57XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBmaWxlLmFjY2VwdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXJyb3JQcm9jZXNzaW5nKFtcbiAgICAgICAgICAgICAgICAgICAgZmlsZVxuICAgICAgICAgICAgICAgIF0sIGVycm9yKTsgLy8gV2lsbCBzZXQgdGhlIGZpbGUuc3RhdHVzXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZpbGUuYWNjZXB0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXV0b1F1ZXVlKSB0aGlzLmVucXVldWVGaWxlKGZpbGUpO1xuICAgICAgICAgICAgICAgICAvLyBXaWxsIHNldCAuYWNjZXB0ZWQgPSB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl91cGRhdGVNYXhGaWxlc1JlYWNoZWRDbGFzcygpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gV3JhcHBlciBmb3IgZW5xdWV1ZUZpbGVcbiAgICBlbnF1ZXVlRmlsZXMoZmlsZXMpIHtcbiAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl0aGlzLmVucXVldWVGaWxlKGZpbGUpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZW5xdWV1ZUZpbGUoZmlsZSkge1xuICAgICAgICBpZiAoZmlsZS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQURERUQgJiYgZmlsZS5hY2NlcHRlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgZmlsZS5zdGF0dXMgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlFVRVVFRDtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXV0b1Byb2Nlc3NRdWV1ZSkgcmV0dXJuIHNldFRpbWVvdXQoKCk9PnRoaXMucHJvY2Vzc1F1ZXVlKClcbiAgICAgICAgICAgICwgMCk7IC8vIERlZmVycmluZyB0aGUgY2FsbFxuICAgICAgICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBmaWxlIGNhbid0IGJlIHF1ZXVlZCBiZWNhdXNlIGl0IGhhcyBhbHJlYWR5IGJlZW4gcHJvY2Vzc2VkIG9yIHdhcyByZWplY3RlZC5cIik7XG4gICAgfVxuICAgIF9lbnF1ZXVlVGh1bWJuYWlsKGZpbGUpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jcmVhdGVJbWFnZVRodW1ibmFpbHMgJiYgZmlsZS50eXBlLm1hdGNoKC9pbWFnZS4qLykgJiYgZmlsZS5zaXplIDw9IHRoaXMub3B0aW9ucy5tYXhUaHVtYm5haWxGaWxlc2l6ZSAqIDEwNDg1NzYpIHtcbiAgICAgICAgICAgIHRoaXMuX3RodW1ibmFpbFF1ZXVlLnB1c2goZmlsZSk7XG4gICAgICAgICAgICByZXR1cm4gc2V0VGltZW91dCgoKT0+dGhpcy5fcHJvY2Vzc1RodW1ibmFpbFF1ZXVlKClcbiAgICAgICAgICAgICwgMCk7IC8vIERlZmVycmluZyB0aGUgY2FsbFxuICAgICAgICB9XG4gICAgfVxuICAgIF9wcm9jZXNzVGh1bWJuYWlsUXVldWUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9wcm9jZXNzaW5nVGh1bWJuYWlsIHx8IHRoaXMuX3RodW1ibmFpbFF1ZXVlLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICB0aGlzLl9wcm9jZXNzaW5nVGh1bWJuYWlsID0gdHJ1ZTtcbiAgICAgICAgbGV0IGZpbGUgPSB0aGlzLl90aHVtYm5haWxRdWV1ZS5zaGlmdCgpO1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVUaHVtYm5haWwoZmlsZSwgdGhpcy5vcHRpb25zLnRodW1ibmFpbFdpZHRoLCB0aGlzLm9wdGlvbnMudGh1bWJuYWlsSGVpZ2h0LCB0aGlzLm9wdGlvbnMudGh1bWJuYWlsTWV0aG9kLCB0cnVlLCAoZGF0YVVybCk9PntcbiAgICAgICAgICAgIHRoaXMuZW1pdChcInRodW1ibmFpbFwiLCBmaWxlLCBkYXRhVXJsKTtcbiAgICAgICAgICAgIHRoaXMuX3Byb2Nlc3NpbmdUaHVtYm5haWwgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wcm9jZXNzVGh1bWJuYWlsUXVldWUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIENhbiBiZSBjYWxsZWQgYnkgdGhlIHVzZXIgdG8gcmVtb3ZlIGEgZmlsZVxuICAgIHJlbW92ZUZpbGUoZmlsZSkge1xuICAgICAgICBpZiAoZmlsZS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HKSB0aGlzLmNhbmNlbFVwbG9hZChmaWxlKTtcbiAgICAgICAgdGhpcy5maWxlcyA9ICQzZWQyNjlmMmYwZmIyMjRiJHZhciR3aXRob3V0KHRoaXMuZmlsZXMsIGZpbGUpO1xuICAgICAgICB0aGlzLmVtaXQoXCJyZW1vdmVkZmlsZVwiLCBmaWxlKTtcbiAgICAgICAgaWYgKHRoaXMuZmlsZXMubGVuZ3RoID09PSAwKSByZXR1cm4gdGhpcy5lbWl0KFwicmVzZXRcIik7XG4gICAgfVxuICAgIC8vIFJlbW92ZXMgYWxsIGZpbGVzIHRoYXQgYXJlbid0IGN1cnJlbnRseSBwcm9jZXNzZWQgZnJvbSB0aGUgbGlzdFxuICAgIHJlbW92ZUFsbEZpbGVzKGNhbmNlbElmTmVjZXNzYXJ5KSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIGNvcHkgb2YgZmlsZXMgc2luY2UgcmVtb3ZlRmlsZSgpIGNoYW5nZXMgdGhlIEBmaWxlcyBhcnJheS5cbiAgICAgICAgaWYgKGNhbmNlbElmTmVjZXNzYXJ5ID09IG51bGwpIGNhbmNlbElmTmVjZXNzYXJ5ID0gZmFsc2U7XG4gICAgICAgIGZvciAobGV0IGZpbGUgb2YgdGhpcy5maWxlcy5zbGljZSgpKWlmIChmaWxlLnN0YXR1cyAhPT0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5VUExPQURJTkcgfHwgY2FuY2VsSWZOZWNlc3NhcnkpIHRoaXMucmVtb3ZlRmlsZShmaWxlKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIFJlc2l6ZXMgYW4gaW1hZ2UgYmVmb3JlIGl0IGdldHMgc2VudCB0byB0aGUgc2VydmVyLiBUaGlzIGZ1bmN0aW9uIGlzIHRoZSBkZWZhdWx0IGJlaGF2aW9yIG9mXG4gICAgLy8gYG9wdGlvbnMudHJhbnNmb3JtRmlsZWAgaWYgYHJlc2l6ZVdpZHRoYCBvciBgcmVzaXplSGVpZ2h0YCBhcmUgc2V0LiBUaGUgY2FsbGJhY2sgaXMgaW52b2tlZCB3aXRoXG4gICAgLy8gdGhlIHJlc2l6ZWQgYmxvYi5cbiAgICByZXNpemVJbWFnZShmaWxlLCB3aWR0aCwgaGVpZ2h0LCByZXNpemVNZXRob2QsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVRodW1ibmFpbChmaWxlLCB3aWR0aCwgaGVpZ2h0LCByZXNpemVNZXRob2QsIHRydWUsIChkYXRhVXJsLCBjYW52YXMpPT57XG4gICAgICAgICAgICBpZiAoY2FudmFzID09IG51bGwpIC8vIFRoZSBpbWFnZSBoYXMgbm90IGJlZW4gcmVzaXplZFxuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGZpbGUpO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IHsgcmVzaXplTWltZVR5cGU6IHJlc2l6ZU1pbWVUeXBlICB9ID0gdGhpcy5vcHRpb25zO1xuICAgICAgICAgICAgICAgIGlmIChyZXNpemVNaW1lVHlwZSA9PSBudWxsKSByZXNpemVNaW1lVHlwZSA9IGZpbGUudHlwZTtcbiAgICAgICAgICAgICAgICBsZXQgcmVzaXplZERhdGFVUkwgPSBjYW52YXMudG9EYXRhVVJMKHJlc2l6ZU1pbWVUeXBlLCB0aGlzLm9wdGlvbnMucmVzaXplUXVhbGl0eSk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc2l6ZU1pbWVUeXBlID09PSBcImltYWdlL2pwZWdcIiB8fCByZXNpemVNaW1lVHlwZSA9PT0gXCJpbWFnZS9qcGdcIikgLy8gTm93IGFkZCB0aGUgb3JpZ2luYWwgRVhJRiBpbmZvcm1hdGlvblxuICAgICAgICAgICAgICAgIHJlc2l6ZWREYXRhVVJMID0gJDNlZDI2OWYyZjBmYjIyNGIkdmFyJEV4aWZSZXN0b3JlLnJlc3RvcmUoZmlsZS5kYXRhVVJMLCByZXNpemVkRGF0YVVSTCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKCQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuZGF0YVVSSXRvQmxvYihyZXNpemVkRGF0YVVSTCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY3JlYXRlVGh1bWJuYWlsKGZpbGUsIHdpZHRoLCBoZWlnaHQsIHJlc2l6ZU1ldGhvZCwgZml4T3JpZW50YXRpb24sIGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSAoKT0+e1xuICAgICAgICAgICAgZmlsZS5kYXRhVVJMID0gZmlsZVJlYWRlci5yZXN1bHQ7XG4gICAgICAgICAgICAvLyBEb24ndCBib3RoZXIgY3JlYXRpbmcgYSB0aHVtYm5haWwgZm9yIFNWRyBpbWFnZXMgc2luY2UgdGhleSdyZSB2ZWN0b3JcbiAgICAgICAgICAgIGlmIChmaWxlLnR5cGUgPT09IFwiaW1hZ2Uvc3ZnK3htbFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrICE9IG51bGwpIGNhbGxiYWNrKGZpbGVSZWFkZXIucmVzdWx0KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZVRodW1ibmFpbEZyb21VcmwoZmlsZSwgd2lkdGgsIGhlaWdodCwgcmVzaXplTWV0aG9kLCBmaXhPcmllbnRhdGlvbiwgY2FsbGJhY2spO1xuICAgICAgICB9O1xuICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gICAgfVxuICAgIC8vIGBtb2NrRmlsZWAgbmVlZHMgdG8gaGF2ZSB0aGVzZSBhdHRyaWJ1dGVzOlxuICAgIC8vXG4gICAgLy8gICAgIHsgbmFtZTogJ25hbWUnLCBzaXplOiAxMjM0NSwgaW1hZ2VVcmw6ICcnIH1cbiAgICAvL1xuICAgIC8vIGBjYWxsYmFja2Agd2lsbCBiZSBpbnZva2VkIHdoZW4gdGhlIGltYWdlIGhhcyBiZWVuIGRvd25sb2FkZWQgYW5kIGRpc3BsYXllZC5cbiAgICAvLyBgY3Jvc3NPcmlnaW5gIHdpbGwgYmUgYWRkZWQgdG8gdGhlIGBpbWdgIHRhZyB3aGVuIGFjY2Vzc2luZyB0aGUgZmlsZS5cbiAgICBkaXNwbGF5RXhpc3RpbmdGaWxlKG1vY2tGaWxlLCBpbWFnZVVybCwgY2FsbGJhY2ssIGNyb3NzT3JpZ2luLCByZXNpemVUaHVtYm5haWwgPSB0cnVlKSB7XG4gICAgICAgIHRoaXMuZW1pdChcImFkZGVkZmlsZVwiLCBtb2NrRmlsZSk7XG4gICAgICAgIHRoaXMuZW1pdChcImNvbXBsZXRlXCIsIG1vY2tGaWxlKTtcbiAgICAgICAgaWYgKCFyZXNpemVUaHVtYm5haWwpIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdChcInRodW1ibmFpbFwiLCBtb2NrRmlsZSwgaW1hZ2VVcmwpO1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjaygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IG9uRG9uZSA9ICh0aHVtYm5haWwpPT57XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KFwidGh1bWJuYWlsXCIsIG1vY2tGaWxlLCB0aHVtYm5haWwpO1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBtb2NrRmlsZS5kYXRhVVJMID0gaW1hZ2VVcmw7XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZVRodW1ibmFpbEZyb21VcmwobW9ja0ZpbGUsIHRoaXMub3B0aW9ucy50aHVtYm5haWxXaWR0aCwgdGhpcy5vcHRpb25zLnRodW1ibmFpbEhlaWdodCwgdGhpcy5vcHRpb25zLnRodW1ibmFpbE1ldGhvZCwgdGhpcy5vcHRpb25zLmZpeE9yaWVudGF0aW9uLCBvbkRvbmUsIGNyb3NzT3JpZ2luKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjcmVhdGVUaHVtYm5haWxGcm9tVXJsKGZpbGUsIHdpZHRoLCBoZWlnaHQsIHJlc2l6ZU1ldGhvZCwgZml4T3JpZW50YXRpb24sIGNhbGxiYWNrLCBjcm9zc09yaWdpbikge1xuICAgICAgICAvLyBOb3QgdXNpbmcgYG5ldyBJbWFnZWAgaGVyZSBiZWNhdXNlIG9mIGEgYnVnIGluIGxhdGVzdCBDaHJvbWUgdmVyc2lvbnMuXG4gICAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZW55by9kcm9wem9uZS9wdWxsLzIyNlxuICAgICAgICBsZXQgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICAgICAgaWYgKGNyb3NzT3JpZ2luKSBpbWcuY3Jvc3NPcmlnaW4gPSBjcm9zc09yaWdpbjtcbiAgICAgICAgLy8gZml4T3JpZW50YXRpb24gaXMgbm90IG5lZWRlZCBhbnltb3JlIHdpdGggYnJvd3NlcnMgaGFuZGxpbmcgaW1hZ2VPcmllbnRhdGlvblxuICAgICAgICBmaXhPcmllbnRhdGlvbiA9IGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuYm9keSlbXCJpbWFnZU9yaWVudGF0aW9uXCJdID09IFwiZnJvbS1pbWFnZVwiID8gZmFsc2UgOiBmaXhPcmllbnRhdGlvbjtcbiAgICAgICAgaW1nLm9ubG9hZCA9ICgpPT57XG4gICAgICAgICAgICBsZXQgbG9hZEV4aWYgPSAoY2FsbGJhY2spPT5jYWxsYmFjaygxKVxuICAgICAgICAgICAgO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBFWElGICE9PSBcInVuZGVmaW5lZFwiICYmIEVYSUYgIT09IG51bGwgJiYgZml4T3JpZW50YXRpb24pIGxvYWRFeGlmID0gKGNhbGxiYWNrKT0+RVhJRi5nZXREYXRhKGltZywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhFWElGLmdldFRhZyh0aGlzLCBcIk9yaWVudGF0aW9uXCIpKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgO1xuICAgICAgICAgICAgcmV0dXJuIGxvYWRFeGlmKChvcmllbnRhdGlvbik9PntcbiAgICAgICAgICAgICAgICBmaWxlLndpZHRoID0gaW1nLndpZHRoO1xuICAgICAgICAgICAgICAgIGZpbGUuaGVpZ2h0ID0gaW1nLmhlaWdodDtcbiAgICAgICAgICAgICAgICBsZXQgcmVzaXplSW5mbyA9IHRoaXMub3B0aW9ucy5yZXNpemUuY2FsbCh0aGlzLCBmaWxlLCB3aWR0aCwgaGVpZ2h0LCByZXNpemVNZXRob2QpO1xuICAgICAgICAgICAgICAgIGxldCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICAgICAgICAgIGxldCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgICAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHJlc2l6ZUluZm8udHJnV2lkdGg7XG4gICAgICAgICAgICAgICAgY2FudmFzLmhlaWdodCA9IHJlc2l6ZUluZm8udHJnSGVpZ2h0O1xuICAgICAgICAgICAgICAgIGlmIChvcmllbnRhdGlvbiA+IDQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FudmFzLndpZHRoID0gcmVzaXplSW5mby50cmdIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSByZXNpemVJbmZvLnRyZ1dpZHRoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzd2l0Y2gob3JpZW50YXRpb24pe1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBob3Jpem9udGFsIGZsaXBcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLndpZHRoLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5zY2FsZSgtMSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gMTgwwrAgcm90YXRlIGxlZnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5yb3RhdGUoTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdmVydGljYWwgZmxpcFxuICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgwLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5zY2FsZSgxLCAtMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdmVydGljYWwgZmxpcCArIDkwIHJvdGF0ZSByaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnJvdGF0ZSgwLjUgKiBNYXRoLlBJKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5zY2FsZSgxLCAtMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gOTDCsCByb3RhdGUgcmlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5yb3RhdGUoMC41ICogTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKDAsIC1jYW52YXMud2lkdGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGhvcml6b250YWwgZmxpcCArIDkwIHJvdGF0ZSByaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnJvdGF0ZSgwLjUgKiBNYXRoLlBJKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLmhlaWdodCwgLWNhbnZhcy53aWR0aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHguc2NhbGUoLTEsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDkwwrAgcm90YXRlIGxlZnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5yb3RhdGUoLTAuNSAqIE1hdGguUEkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgtY2FudmFzLmhlaWdodCwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBpcyBhIGJ1Z2ZpeCBmb3IgaU9TJyBzY2FsaW5nIGJ1Zy5cbiAgICAgICAgICAgICAgICAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkZHJhd0ltYWdlSU9TRml4KGN0eCwgaW1nLCByZXNpemVJbmZvLnNyY1ggIT0gbnVsbCA/IHJlc2l6ZUluZm8uc3JjWCA6IDAsIHJlc2l6ZUluZm8uc3JjWSAhPSBudWxsID8gcmVzaXplSW5mby5zcmNZIDogMCwgcmVzaXplSW5mby5zcmNXaWR0aCwgcmVzaXplSW5mby5zcmNIZWlnaHQsIHJlc2l6ZUluZm8udHJnWCAhPSBudWxsID8gcmVzaXplSW5mby50cmdYIDogMCwgcmVzaXplSW5mby50cmdZICE9IG51bGwgPyByZXNpemVJbmZvLnRyZ1kgOiAwLCByZXNpemVJbmZvLnRyZ1dpZHRoLCByZXNpemVJbmZvLnRyZ0hlaWdodCk7XG4gICAgICAgICAgICAgICAgbGV0IHRodW1ibmFpbCA9IGNhbnZhcy50b0RhdGFVUkwoXCJpbWFnZS9wbmdcIik7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrICE9IG51bGwpIHJldHVybiBjYWxsYmFjayh0aHVtYm5haWwsIGNhbnZhcyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGNhbGxiYWNrICE9IG51bGwpIGltZy5vbmVycm9yID0gY2FsbGJhY2s7XG4gICAgICAgIHJldHVybiBpbWcuc3JjID0gZmlsZS5kYXRhVVJMO1xuICAgIH1cbiAgICAvLyBHb2VzIHRocm91Z2ggdGhlIHF1ZXVlIGFuZCBwcm9jZXNzZXMgZmlsZXMgaWYgdGhlcmUgYXJlbid0IHRvbyBtYW55IGFscmVhZHkuXG4gICAgcHJvY2Vzc1F1ZXVlKCkge1xuICAgICAgICBsZXQgeyBwYXJhbGxlbFVwbG9hZHM6IHBhcmFsbGVsVXBsb2FkcyAgfSA9IHRoaXMub3B0aW9ucztcbiAgICAgICAgbGV0IHByb2Nlc3NpbmdMZW5ndGggPSB0aGlzLmdldFVwbG9hZGluZ0ZpbGVzKCkubGVuZ3RoO1xuICAgICAgICBsZXQgaSA9IHByb2Nlc3NpbmdMZW5ndGg7XG4gICAgICAgIC8vIFRoZXJlIGFyZSBhbHJlYWR5IGF0IGxlYXN0IGFzIG1hbnkgZmlsZXMgdXBsb2FkaW5nIHRoYW4gc2hvdWxkIGJlXG4gICAgICAgIGlmIChwcm9jZXNzaW5nTGVuZ3RoID49IHBhcmFsbGVsVXBsb2FkcykgcmV0dXJuO1xuICAgICAgICBsZXQgcXVldWVkRmlsZXMgPSB0aGlzLmdldFF1ZXVlZEZpbGVzKCk7XG4gICAgICAgIGlmICghKHF1ZXVlZEZpbGVzLmxlbmd0aCA+IDApKSByZXR1cm47XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMudXBsb2FkTXVsdGlwbGUpIC8vIFRoZSBmaWxlcyBzaG91bGQgYmUgdXBsb2FkZWQgaW4gb25lIHJlcXVlc3RcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc0ZpbGVzKHF1ZXVlZEZpbGVzLnNsaWNlKDAsIHBhcmFsbGVsVXBsb2FkcyAtIHByb2Nlc3NpbmdMZW5ndGgpKTtcbiAgICAgICAgZWxzZSB3aGlsZShpIDwgcGFyYWxsZWxVcGxvYWRzKXtcbiAgICAgICAgICAgIGlmICghcXVldWVkRmlsZXMubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICAgLy8gTm90aGluZyBsZWZ0IHRvIHByb2Nlc3NcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc0ZpbGUocXVldWVkRmlsZXMuc2hpZnQoKSk7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gV3JhcHBlciBmb3IgYHByb2Nlc3NGaWxlc2BcbiAgICBwcm9jZXNzRmlsZShmaWxlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NGaWxlcyhbXG4gICAgICAgICAgICBmaWxlXG4gICAgICAgIF0pO1xuICAgIH1cbiAgICAvLyBMb2FkcyB0aGUgZmlsZSwgdGhlbiBjYWxscyBmaW5pc2hlZExvYWRpbmcoKVxuICAgIHByb2Nlc3NGaWxlcyhmaWxlcykge1xuICAgICAgICBmb3IgKGxldCBmaWxlIG9mIGZpbGVzKXtcbiAgICAgICAgICAgIGZpbGUucHJvY2Vzc2luZyA9IHRydWU7IC8vIEJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICAgICAgICAgICBmaWxlLnN0YXR1cyA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwicHJvY2Vzc2luZ1wiLCBmaWxlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSB0aGlzLmVtaXQoXCJwcm9jZXNzaW5nbXVsdGlwbGVcIiwgZmlsZXMpO1xuICAgICAgICByZXR1cm4gdGhpcy51cGxvYWRGaWxlcyhmaWxlcyk7XG4gICAgfVxuICAgIF9nZXRGaWxlc1dpdGhYaHIoeGhyKSB7XG4gICAgICAgIGxldCBmaWxlcztcbiAgICAgICAgcmV0dXJuIGZpbGVzID0gdGhpcy5maWxlcy5maWx0ZXIoKGZpbGUpPT5maWxlLnhociA9PT0geGhyXG4gICAgICAgICkubWFwKChmaWxlKT0+ZmlsZVxuICAgICAgICApO1xuICAgIH1cbiAgICAvLyBDYW5jZWxzIHRoZSBmaWxlIHVwbG9hZCBhbmQgc2V0cyB0aGUgc3RhdHVzIHRvIENBTkNFTEVEXG4gICAgLy8gKippZioqIHRoZSBmaWxlIGlzIGFjdHVhbGx5IGJlaW5nIHVwbG9hZGVkLlxuICAgIC8vIElmIGl0J3Mgc3RpbGwgaW4gdGhlIHF1ZXVlLCB0aGUgZmlsZSBpcyBiZWluZyByZW1vdmVkIGZyb20gaXQgYW5kIHRoZSBzdGF0dXNcbiAgICAvLyBzZXQgdG8gQ0FOQ0VMRUQuXG4gICAgY2FuY2VsVXBsb2FkKGZpbGUpIHtcbiAgICAgICAgaWYgKGZpbGUuc3RhdHVzID09PSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlVQTE9BRElORykge1xuICAgICAgICAgICAgbGV0IGdyb3VwZWRGaWxlcyA9IHRoaXMuX2dldEZpbGVzV2l0aFhocihmaWxlLnhocik7XG4gICAgICAgICAgICBmb3IgKGxldCBncm91cGVkRmlsZSBvZiBncm91cGVkRmlsZXMpZ3JvdXBlZEZpbGUuc3RhdHVzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5DQU5DRUxFRDtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZmlsZS54aHIgIT09IFwidW5kZWZpbmVkXCIpIGZpbGUueGhyLmFib3J0KCk7XG4gICAgICAgICAgICBmb3IgKGxldCBncm91cGVkRmlsZTEgb2YgZ3JvdXBlZEZpbGVzKXRoaXMuZW1pdChcImNhbmNlbGVkXCIsIGdyb3VwZWRGaWxlMSk7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSB0aGlzLmVtaXQoXCJjYW5jZWxlZG11bHRpcGxlXCIsIGdyb3VwZWRGaWxlcyk7XG4gICAgICAgIH0gZWxzZSBpZiAoZmlsZS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQURERUQgfHwgZmlsZS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuUVVFVUVEKSB7XG4gICAgICAgICAgICBmaWxlLnN0YXR1cyA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQ0FOQ0VMRUQ7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJjYW5jZWxlZFwiLCBmaWxlKTtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMudXBsb2FkTXVsdGlwbGUpIHRoaXMuZW1pdChcImNhbmNlbGVkbXVsdGlwbGVcIiwgW1xuICAgICAgICAgICAgICAgIGZpbGVcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXV0b1Byb2Nlc3NRdWV1ZSkgcmV0dXJuIHRoaXMucHJvY2Vzc1F1ZXVlKCk7XG4gICAgfVxuICAgIHJlc29sdmVPcHRpb24ob3B0aW9uLCAuLi5hcmdzKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBvcHRpb24uYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIHJldHVybiBvcHRpb247XG4gICAgfVxuICAgIHVwbG9hZEZpbGUoZmlsZSkge1xuICAgICAgICByZXR1cm4gdGhpcy51cGxvYWRGaWxlcyhbXG4gICAgICAgICAgICBmaWxlXG4gICAgICAgIF0pO1xuICAgIH1cbiAgICB1cGxvYWRGaWxlcyhmaWxlcykge1xuICAgICAgICB0aGlzLl90cmFuc2Zvcm1GaWxlcyhmaWxlcywgKHRyYW5zZm9ybWVkRmlsZXMpPT57XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmNodW5raW5nKSB7XG4gICAgICAgICAgICAgICAgLy8gQ2h1bmtpbmcgaXMgbm90IGFsbG93ZWQgdG8gYmUgdXNlZCB3aXRoIGB1cGxvYWRNdWx0aXBsZWAgc28gd2Uga25vd1xuICAgICAgICAgICAgICAgIC8vIHRoYXQgdGhlcmUgaXMgb25seSBfX29uZV9fZmlsZS5cbiAgICAgICAgICAgICAgICBsZXQgdHJhbnNmb3JtZWRGaWxlID0gdHJhbnNmb3JtZWRGaWxlc1swXTtcbiAgICAgICAgICAgICAgICBmaWxlc1swXS51cGxvYWQuY2h1bmtlZCA9IHRoaXMub3B0aW9ucy5jaHVua2luZyAmJiAodGhpcy5vcHRpb25zLmZvcmNlQ2h1bmtpbmcgfHwgdHJhbnNmb3JtZWRGaWxlLnNpemUgPiB0aGlzLm9wdGlvbnMuY2h1bmtTaXplKTtcbiAgICAgICAgICAgICAgICBmaWxlc1swXS51cGxvYWQudG90YWxDaHVua0NvdW50ID0gTWF0aC5jZWlsKHRyYW5zZm9ybWVkRmlsZS5zaXplIC8gdGhpcy5vcHRpb25zLmNodW5rU2l6ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmlsZXNbMF0udXBsb2FkLmNodW5rZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBUaGlzIGZpbGUgc2hvdWxkIGJlIHNlbnQgaW4gY2h1bmtzIVxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBjaHVua2luZyBvcHRpb24gaXMgc2V0LCB3ZSAqKmtub3cqKiB0aGF0IHRoZXJlIGNhbiBvbmx5IGJlICoqb25lKiogZmlsZSwgc2luY2VcbiAgICAgICAgICAgICAgICAvLyB1cGxvYWRNdWx0aXBsZSBpcyBub3QgYWxsb3dlZCB3aXRoIHRoaXMgb3B0aW9uLlxuICAgICAgICAgICAgICAgIGxldCBmaWxlID0gZmlsZXNbMF07XG4gICAgICAgICAgICAgICAgbGV0IHRyYW5zZm9ybWVkRmlsZSA9IHRyYW5zZm9ybWVkRmlsZXNbMF07XG4gICAgICAgICAgICAgICAgbGV0IHN0YXJ0ZWRDaHVua0NvdW50ID0gMDtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5jaHVua3MgPSBbXTtcbiAgICAgICAgICAgICAgICBsZXQgaGFuZGxlTmV4dENodW5rID0gKCk9PntcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNodW5rSW5kZXggPSAwO1xuICAgICAgICAgICAgICAgICAgICAvLyBGaW5kIHRoZSBuZXh0IGl0ZW0gaW4gZmlsZS51cGxvYWQuY2h1bmtzIHRoYXQgaXMgbm90IGRlZmluZWQgeWV0LlxuICAgICAgICAgICAgICAgICAgICB3aGlsZShmaWxlLnVwbG9hZC5jaHVua3NbY2h1bmtJbmRleF0gIT09IHVuZGVmaW5lZCljaHVua0luZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgbWVhbnMsIHRoYXQgYWxsIGNodW5rcyBoYXZlIGFscmVhZHkgYmVlbiBzdGFydGVkLlxuICAgICAgICAgICAgICAgICAgICBpZiAoY2h1bmtJbmRleCA+PSBmaWxlLnVwbG9hZC50b3RhbENodW5rQ291bnQpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnRlZENodW5rQ291bnQrKztcbiAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXJ0ID0gY2h1bmtJbmRleCAqIHRoaXMub3B0aW9ucy5jaHVua1NpemU7XG4gICAgICAgICAgICAgICAgICAgIGxldCBlbmQgPSBNYXRoLm1pbihzdGFydCArIHRoaXMub3B0aW9ucy5jaHVua1NpemUsIHRyYW5zZm9ybWVkRmlsZS5zaXplKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGFCbG9jayA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuX2dldFBhcmFtTmFtZSgwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRyYW5zZm9ybWVkRmlsZS53ZWJraXRTbGljZSA/IHRyYW5zZm9ybWVkRmlsZS53ZWJraXRTbGljZShzdGFydCwgZW5kKSA6IHRyYW5zZm9ybWVkRmlsZS5zbGljZShzdGFydCwgZW5kKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBmaWxlLnVwbG9hZC5maWxlbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNodW5rSW5kZXg6IGNodW5rSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgZmlsZS51cGxvYWQuY2h1bmtzW2NodW5rSW5kZXhdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZTogZmlsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4OiBjaHVua0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUJsb2NrOiBkYXRhQmxvY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuVVBMT0FESU5HLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3M6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXRyaWVzOiAwXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3VwbG9hZERhdGEoZmlsZXMsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFCbG9ja1xuICAgICAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGZpbGUudXBsb2FkLmZpbmlzaGVkQ2h1bmtVcGxvYWQgPSAoY2h1bmssIHJlc3BvbnNlKT0+e1xuICAgICAgICAgICAgICAgICAgICBsZXQgYWxsRmluaXNoZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjaHVuay5zdGF0dXMgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlNVQ0NFU1M7XG4gICAgICAgICAgICAgICAgICAgIC8vIENsZWFyIHRoZSBkYXRhIGZyb20gdGhlIGNodW5rXG4gICAgICAgICAgICAgICAgICAgIGNodW5rLmRhdGFCbG9jayA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIGNodW5rLnJlc3BvbnNlID0gY2h1bmsueGhyLnJlc3BvbnNlVGV4dDtcbiAgICAgICAgICAgICAgICAgICAgY2h1bmsucmVzcG9uc2VIZWFkZXJzID0gY2h1bmsueGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpO1xuICAgICAgICAgICAgICAgICAgICAvLyBMZWF2aW5nIHRoaXMgcmVmZXJlbmNlIHRvIHhociB3aWxsIGNhdXNlIG1lbW9yeSBsZWFrcy5cbiAgICAgICAgICAgICAgICAgICAgY2h1bmsueGhyID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGZpbGUudXBsb2FkLnRvdGFsQ2h1bmtDb3VudDsgaSsrKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWxlLnVwbG9hZC5jaHVua3NbaV0gPT09IHVuZGVmaW5lZCkgcmV0dXJuIGhhbmRsZU5leHRDaHVuaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGUudXBsb2FkLmNodW5rc1tpXS5zdGF0dXMgIT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuU1VDQ0VTUykgYWxsRmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoYWxsRmluaXNoZWQpIHRoaXMub3B0aW9ucy5jaHVua3NVcGxvYWRlZChmaWxlLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZmluaXNoZWQoZmlsZXMsIHJlc3BvbnNlLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnBhcmFsbGVsQ2h1bmtVcGxvYWRzKSBmb3IobGV0IGkgPSAwOyBpIDwgZmlsZS51cGxvYWQudG90YWxDaHVua0NvdW50OyBpKyspaGFuZGxlTmV4dENodW5rKCk7XG4gICAgICAgICAgICAgICAgZWxzZSBoYW5kbGVOZXh0Q2h1bmsoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IGRhdGFCbG9ja3MgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspZGF0YUJsb2Nrc1tpXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogdGhpcy5fZ2V0UGFyYW1OYW1lKGkpLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB0cmFuc2Zvcm1lZEZpbGVzW2ldLFxuICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZTogZmlsZXNbaV0udXBsb2FkLmZpbGVuYW1lXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLl91cGxvYWREYXRhKGZpbGVzLCBkYXRhQmxvY2tzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vLyBSZXR1cm5zIHRoZSByaWdodCBjaHVuayBmb3IgZ2l2ZW4gZmlsZSBhbmQgeGhyXG4gICAgX2dldENodW5rKGZpbGUsIHhocikge1xuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZmlsZS51cGxvYWQudG90YWxDaHVua0NvdW50OyBpKyspe1xuICAgICAgICAgICAgaWYgKGZpbGUudXBsb2FkLmNodW5rc1tpXSAhPT0gdW5kZWZpbmVkICYmIGZpbGUudXBsb2FkLmNodW5rc1tpXS54aHIgPT09IHhocikgcmV0dXJuIGZpbGUudXBsb2FkLmNodW5rc1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBUaGlzIGZ1bmN0aW9uIGFjdHVhbGx5IHVwbG9hZHMgdGhlIGZpbGUocykgdG8gdGhlIHNlcnZlci5cbiAgICAvL1xuICAgIC8vICBJZiBkYXRhQmxvY2tzIGNvbnRhaW5zIHRoZSBhY3R1YWwgZGF0YSB0byB1cGxvYWQgKG1lYW5pbmcsIHRoYXQgdGhpcyBjb3VsZFxuICAgIC8vIGVpdGhlciBiZSB0cmFuc2Zvcm1lZCBmaWxlcywgb3IgaW5kaXZpZHVhbCBjaHVua3MgZm9yIGNodW5rZWQgdXBsb2FkKSB0aGVuXG4gICAgLy8gdGhleSB3aWxsIGJlIHVzZWQgZm9yIHRoZSBhY3R1YWwgZGF0YSB0byB1cGxvYWQuXG4gICAgX3VwbG9hZERhdGEoZmlsZXMsIGRhdGFCbG9ja3MpIHtcbiAgICAgICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICAvLyBQdXQgdGhlIHhociBvYmplY3QgaW4gdGhlIGZpbGUgb2JqZWN0cyB0byBiZSBhYmxlIHRvIHJlZmVyZW5jZSBpdCBsYXRlci5cbiAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcylmaWxlLnhociA9IHhocjtcbiAgICAgICAgaWYgKGZpbGVzWzBdLnVwbG9hZC5jaHVua2VkKSAvLyBQdXQgdGhlIHhociBvYmplY3QgaW4gdGhlIHJpZ2h0IGNodW5rIG9iamVjdCwgc28gaXQgY2FuIGJlIGFzc29jaWF0ZWRcbiAgICAgICAgLy8gbGF0ZXIsIGFuZCBmb3VuZCB3aXRoIF9nZXRDaHVuay5cbiAgICAgICAgZmlsZXNbMF0udXBsb2FkLmNodW5rc1tkYXRhQmxvY2tzWzBdLmNodW5rSW5kZXhdLnhociA9IHhocjtcbiAgICAgICAgbGV0IG1ldGhvZCA9IHRoaXMucmVzb2x2ZU9wdGlvbih0aGlzLm9wdGlvbnMubWV0aG9kLCBmaWxlcywgZGF0YUJsb2Nrcyk7XG4gICAgICAgIGxldCB1cmwgPSB0aGlzLnJlc29sdmVPcHRpb24odGhpcy5vcHRpb25zLnVybCwgZmlsZXMsIGRhdGFCbG9ja3MpO1xuICAgICAgICB4aHIub3BlbihtZXRob2QsIHVybCwgdHJ1ZSk7XG4gICAgICAgIC8vIFNldHRpbmcgdGhlIHRpbWVvdXQgYWZ0ZXIgb3BlbiBiZWNhdXNlIG9mIElFMTEgaXNzdWU6IGh0dHBzOi8vZ2l0bGFiLmNvbS9tZW5vL2Ryb3B6b25lL2lzc3Vlcy84XG4gICAgICAgIGxldCB0aW1lb3V0ID0gdGhpcy5yZXNvbHZlT3B0aW9uKHRoaXMub3B0aW9ucy50aW1lb3V0LCBmaWxlcyk7XG4gICAgICAgIGlmICh0aW1lb3V0KSB4aHIudGltZW91dCA9IHRoaXMucmVzb2x2ZU9wdGlvbih0aGlzLm9wdGlvbnMudGltZW91dCwgZmlsZXMpO1xuICAgICAgICAvLyBIYXMgdG8gYmUgYWZ0ZXIgYC5vcGVuKClgLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2VueW8vZHJvcHpvbmUvaXNzdWVzLzE3OVxuICAgICAgICB4aHIud2l0aENyZWRlbnRpYWxzID0gISF0aGlzLm9wdGlvbnMud2l0aENyZWRlbnRpYWxzO1xuICAgICAgICB4aHIub25sb2FkID0gKGUpPT57XG4gICAgICAgICAgICB0aGlzLl9maW5pc2hlZFVwbG9hZGluZyhmaWxlcywgeGhyLCBlKTtcbiAgICAgICAgfTtcbiAgICAgICAgeGhyLm9udGltZW91dCA9ICgpPT57XG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVVcGxvYWRFcnJvcihmaWxlcywgeGhyLCBgUmVxdWVzdCB0aW1lZG91dCBhZnRlciAke3RoaXMub3B0aW9ucy50aW1lb3V0IC8gMTAwMH0gc2Vjb25kc2ApO1xuICAgICAgICB9O1xuICAgICAgICB4aHIub25lcnJvciA9ICgpPT57XG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVVcGxvYWRFcnJvcihmaWxlcywgeGhyKTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gU29tZSBicm93c2VycyBkbyBub3QgaGF2ZSB0aGUgLnVwbG9hZCBwcm9wZXJ0eVxuICAgICAgICBsZXQgcHJvZ3Jlc3NPYmogPSB4aHIudXBsb2FkICE9IG51bGwgPyB4aHIudXBsb2FkIDogeGhyO1xuICAgICAgICBwcm9ncmVzc09iai5vbnByb2dyZXNzID0gKGUpPT50aGlzLl91cGRhdGVGaWxlc1VwbG9hZFByb2dyZXNzKGZpbGVzLCB4aHIsIGUpXG4gICAgICAgIDtcbiAgICAgICAgbGV0IGhlYWRlcnMgPSB0aGlzLm9wdGlvbnMuZGVmYXVsdEhlYWRlcnMgPyB7XG4gICAgICAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgXCJDYWNoZS1Db250cm9sXCI6IFwibm8tY2FjaGVcIixcbiAgICAgICAgICAgIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiOiBcIlhNTEh0dHBSZXF1ZXN0XCJcbiAgICAgICAgfSA6IHtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5iaW5hcnlCb2R5KSBoZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdID0gZmlsZXNbMF0udHlwZTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5oZWFkZXJzKSAkZXdCS3kkanVzdGV4dGVuZChoZWFkZXJzLCB0aGlzLm9wdGlvbnMuaGVhZGVycyk7XG4gICAgICAgIGZvcihsZXQgaGVhZGVyTmFtZSBpbiBoZWFkZXJzKXtcbiAgICAgICAgICAgIGxldCBoZWFkZXJWYWx1ZSA9IGhlYWRlcnNbaGVhZGVyTmFtZV07XG4gICAgICAgICAgICBpZiAoaGVhZGVyVmFsdWUpIHhoci5zZXRSZXF1ZXN0SGVhZGVyKGhlYWRlck5hbWUsIGhlYWRlclZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmJpbmFyeUJvZHkpIHtcbiAgICAgICAgICAgIC8vIFNpbmNlIHRoZSBmaWxlIGlzIGdvaW5nIHRvIGJlIHNlbnQgYXMgYmluYXJ5IGJvZHksIGl0IGRvZXNuJ3QgbWFrZVxuICAgICAgICAgICAgLy8gYW55IHNlbnNlIHRvIGdlbmVyYXRlIGBGb3JtRGF0YWAgZm9yIGl0LlxuICAgICAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl0aGlzLmVtaXQoXCJzZW5kaW5nXCIsIGZpbGUsIHhocik7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSB0aGlzLmVtaXQoXCJzZW5kaW5nbXVsdGlwbGVcIiwgZmlsZXMsIHhocik7XG4gICAgICAgICAgICB0aGlzLnN1Ym1pdFJlcXVlc3QoeGhyLCBudWxsLCBmaWxlcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgIC8vIEFkZGluZyBhbGwgQG9wdGlvbnMgcGFyYW1ldGVyc1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wYXJhbXMpIHtcbiAgICAgICAgICAgICAgICBsZXQgYWRkaXRpb25hbFBhcmFtcyA9IHRoaXMub3B0aW9ucy5wYXJhbXM7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhZGRpdGlvbmFsUGFyYW1zID09PSBcImZ1bmN0aW9uXCIpIGFkZGl0aW9uYWxQYXJhbXMgPSBhZGRpdGlvbmFsUGFyYW1zLmNhbGwodGhpcywgZmlsZXMsIHhociwgZmlsZXNbMF0udXBsb2FkLmNodW5rZWQgPyB0aGlzLl9nZXRDaHVuayhmaWxlc1swXSwgeGhyKSA6IG51bGwpO1xuICAgICAgICAgICAgICAgIGZvcihsZXQga2V5IGluIGFkZGl0aW9uYWxQYXJhbXMpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBhZGRpdGlvbmFsUGFyYW1zW2tleV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgLy8gVGhlIGFkZGl0aW9uYWwgcGFyYW1ldGVyIGNvbnRhaW5zIGFuIGFycmF5LFxuICAgICAgICAgICAgICAgICAgICAvLyBzbyBsZXRzIGl0ZXJhdGUgb3ZlciBpdCB0byBhdHRhY2ggZWFjaCB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAvLyBpbmRpdmlkdWFsbHkuXG4gICAgICAgICAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKylmb3JtRGF0YS5hcHBlbmQoa2V5LCB2YWx1ZVtpXSk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgZm9ybURhdGEuYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIExldCB0aGUgdXNlciBhZGQgYWRkaXRpb25hbCBkYXRhIGlmIG5lY2Vzc2FyeVxuICAgICAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl0aGlzLmVtaXQoXCJzZW5kaW5nXCIsIGZpbGUsIHhociwgZm9ybURhdGEpO1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSkgdGhpcy5lbWl0KFwic2VuZGluZ211bHRpcGxlXCIsIGZpbGVzLCB4aHIsIGZvcm1EYXRhKTtcbiAgICAgICAgICAgIHRoaXMuX2FkZEZvcm1FbGVtZW50RGF0YShmb3JtRGF0YSk7XG4gICAgICAgICAgICAvLyBGaW5hbGx5IGFkZCB0aGUgZmlsZXNcbiAgICAgICAgICAgIC8vIEhhcyB0byBiZSBsYXN0IGJlY2F1c2Ugc29tZSBzZXJ2ZXJzIChlZzogUzMpIGV4cGVjdCB0aGUgZmlsZSB0byBiZSB0aGUgbGFzdCBwYXJhbWV0ZXJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBkYXRhQmxvY2tzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YUJsb2NrID0gZGF0YUJsb2Nrc1tpXTtcbiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoZGF0YUJsb2NrLm5hbWUsIGRhdGFCbG9jay5kYXRhLCBkYXRhQmxvY2suZmlsZW5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zdWJtaXRSZXF1ZXN0KHhociwgZm9ybURhdGEsIGZpbGVzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBUcmFuc2Zvcm1zIGFsbCBmaWxlcyB3aXRoIHRoaXMub3B0aW9ucy50cmFuc2Zvcm1GaWxlIGFuZCBpbnZva2VzIGRvbmUgd2l0aCB0aGUgdHJhbnNmb3JtZWQgZmlsZXMgd2hlbiBkb25lLlxuICAgIF90cmFuc2Zvcm1GaWxlcyhmaWxlcywgZG9uZSkge1xuICAgICAgICBsZXQgdHJhbnNmb3JtZWRGaWxlcyA9IFtdO1xuICAgICAgICAvLyBDbHVtc3kgd2F5IG9mIGhhbmRsaW5nIGFzeW5jaHJvbm91cyBjYWxscywgdW50aWwgSSBnZXQgdG8gYWRkIGEgcHJvcGVyIEZ1dHVyZSBsaWJyYXJ5LlxuICAgICAgICBsZXQgZG9uZUNvdW50ZXIgPSAwO1xuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspdGhpcy5vcHRpb25zLnRyYW5zZm9ybUZpbGUuY2FsbCh0aGlzLCBmaWxlc1tpXSwgKHRyYW5zZm9ybWVkRmlsZSk9PntcbiAgICAgICAgICAgIHRyYW5zZm9ybWVkRmlsZXNbaV0gPSB0cmFuc2Zvcm1lZEZpbGU7XG4gICAgICAgICAgICBpZiAoKytkb25lQ291bnRlciA9PT0gZmlsZXMubGVuZ3RoKSBkb25lKHRyYW5zZm9ybWVkRmlsZXMpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gVGFrZXMgY2FyZSBvZiBhZGRpbmcgb3RoZXIgaW5wdXQgZWxlbWVudHMgb2YgdGhlIGZvcm0gdG8gdGhlIEFKQVggcmVxdWVzdFxuICAgIF9hZGRGb3JtRWxlbWVudERhdGEoZm9ybURhdGEpIHtcbiAgICAgICAgLy8gVGFrZSBjYXJlIG9mIG90aGVyIGlucHV0IGVsZW1lbnRzXG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnQudGFnTmFtZSA9PT0gXCJGT1JNXCIpIGZvciAobGV0IGlucHV0IG9mIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXQsIHRleHRhcmVhLCBzZWxlY3QsIGJ1dHRvblwiKSl7XG4gICAgICAgICAgICBsZXQgaW5wdXROYW1lID0gaW5wdXQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcbiAgICAgICAgICAgIGxldCBpbnB1dFR5cGUgPSBpbnB1dC5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpO1xuICAgICAgICAgICAgaWYgKGlucHV0VHlwZSkgaW5wdXRUeXBlID0gaW5wdXRUeXBlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAvLyBJZiB0aGUgaW5wdXQgZG9lc24ndCBoYXZlIGEgbmFtZSwgd2UgY2FuJ3QgdXNlIGl0LlxuICAgICAgICAgICAgaWYgKHR5cGVvZiBpbnB1dE5hbWUgPT09IFwidW5kZWZpbmVkXCIgfHwgaW5wdXROYW1lID09PSBudWxsKSBjb250aW51ZTtcbiAgICAgICAgICAgIGlmIChpbnB1dC50YWdOYW1lID09PSBcIlNFTEVDVFwiICYmIGlucHV0Lmhhc0F0dHJpYnV0ZShcIm11bHRpcGxlXCIpKSB7XG4gICAgICAgICAgICAgICAgLy8gUG9zc2libHkgbXVsdGlwbGUgdmFsdWVzXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgb3B0aW9uIG9mIGlucHV0Lm9wdGlvbnMpaWYgKG9wdGlvbi5zZWxlY3RlZCkgZm9ybURhdGEuYXBwZW5kKGlucHV0TmFtZSwgb3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIWlucHV0VHlwZSB8fCBpbnB1dFR5cGUgIT09IFwiY2hlY2tib3hcIiAmJiBpbnB1dFR5cGUgIT09IFwicmFkaW9cIiB8fCBpbnB1dC5jaGVja2VkKSBmb3JtRGF0YS5hcHBlbmQoaW5wdXROYW1lLCBpbnB1dC52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSW52b2tlZCB3aGVuIHRoZXJlIGlzIG5ldyBwcm9ncmVzcyBpbmZvcm1hdGlvbiBhYm91dCBnaXZlbiBmaWxlcy5cbiAgICAvLyBJZiBlIGlzIG5vdCBwcm92aWRlZCwgaXQgaXMgYXNzdW1lZCB0aGF0IHRoZSB1cGxvYWQgaXMgZmluaXNoZWQuXG4gICAgX3VwZGF0ZUZpbGVzVXBsb2FkUHJvZ3Jlc3MoZmlsZXMsIHhociwgZSkge1xuICAgICAgICBpZiAoIWZpbGVzWzBdLnVwbG9hZC5jaHVua2VkKSAvLyBIYW5kbGUgZmlsZSB1cGxvYWRzIHdpdGhvdXQgY2h1bmtpbmdcbiAgICAgICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcyl7XG4gICAgICAgICAgICBpZiAoZmlsZS51cGxvYWQudG90YWwgJiYgZmlsZS51cGxvYWQuYnl0ZXNTZW50ICYmIGZpbGUudXBsb2FkLmJ5dGVzU2VudCA9PSBmaWxlLnVwbG9hZC50b3RhbCkgY29udGludWU7XG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIGZpbGUudXBsb2FkLnByb2dyZXNzID0gMTAwICogZS5sb2FkZWQgLyBlLnRvdGFsO1xuICAgICAgICAgICAgICAgIGZpbGUudXBsb2FkLnRvdGFsID0gZS50b3RhbDtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5ieXRlc1NlbnQgPSBlLmxvYWRlZDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gTm8gZXZlbnQsIHNvIHdlJ3JlIGF0IDEwMCVcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5wcm9ncmVzcyA9IDEwMDtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5ieXRlc1NlbnQgPSBmaWxlLnVwbG9hZC50b3RhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZW1pdChcInVwbG9hZHByb2dyZXNzXCIsIGZpbGUsIGZpbGUudXBsb2FkLnByb2dyZXNzLCBmaWxlLnVwbG9hZC5ieXRlc1NlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gSGFuZGxlIGNodW5rZWQgZmlsZSB1cGxvYWRzXG4gICAgICAgICAgICAvLyBDaHVua2VkIHVwbG9hZCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIHVwbG9hZGluZyBtdWx0aXBsZSBmaWxlcyBpbiBvbmVcbiAgICAgICAgICAgIC8vIHJlcXVlc3QsIHNvIHdlIGtub3cgdGhlcmUncyBvbmx5IG9uZSBmaWxlLlxuICAgICAgICAgICAgbGV0IGZpbGUgPSBmaWxlc1swXTtcbiAgICAgICAgICAgIC8vIFNpbmNlIHRoaXMgaXMgYSBjaHVua2VkIHVwbG9hZCwgd2UgbmVlZCB0byB1cGRhdGUgdGhlIGFwcHJvcHJpYXRlIGNodW5rXG4gICAgICAgICAgICAvLyBwcm9ncmVzcy5cbiAgICAgICAgICAgIGxldCBjaHVuayA9IHRoaXMuX2dldENodW5rKGZpbGUsIHhocik7XG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIGNodW5rLnByb2dyZXNzID0gMTAwICogZS5sb2FkZWQgLyBlLnRvdGFsO1xuICAgICAgICAgICAgICAgIGNodW5rLnRvdGFsID0gZS50b3RhbDtcbiAgICAgICAgICAgICAgICBjaHVuay5ieXRlc1NlbnQgPSBlLmxvYWRlZDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gTm8gZXZlbnQsIHNvIHdlJ3JlIGF0IDEwMCVcbiAgICAgICAgICAgICAgICBjaHVuay5wcm9ncmVzcyA9IDEwMDtcbiAgICAgICAgICAgICAgICBjaHVuay5ieXRlc1NlbnQgPSBjaHVuay50b3RhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE5vdyB0YWxseSB0aGUgKmZpbGUqIHVwbG9hZCBwcm9ncmVzcyBmcm9tIGl0cyBpbmRpdmlkdWFsIGNodW5rc1xuICAgICAgICAgICAgZmlsZS51cGxvYWQucHJvZ3Jlc3MgPSAwO1xuICAgICAgICAgICAgZmlsZS51cGxvYWQudG90YWwgPSAwO1xuICAgICAgICAgICAgZmlsZS51cGxvYWQuYnl0ZXNTZW50ID0gMDtcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBmaWxlLnVwbG9hZC50b3RhbENodW5rQ291bnQ7IGkrKylpZiAoZmlsZS51cGxvYWQuY2h1bmtzW2ldICYmIHR5cGVvZiBmaWxlLnVwbG9hZC5jaHVua3NbaV0ucHJvZ3Jlc3MgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgICAgICBmaWxlLnVwbG9hZC5wcm9ncmVzcyArPSBmaWxlLnVwbG9hZC5jaHVua3NbaV0ucHJvZ3Jlc3M7XG4gICAgICAgICAgICAgICAgZmlsZS51cGxvYWQudG90YWwgKz0gZmlsZS51cGxvYWQuY2h1bmtzW2ldLnRvdGFsO1xuICAgICAgICAgICAgICAgIGZpbGUudXBsb2FkLmJ5dGVzU2VudCArPSBmaWxlLnVwbG9hZC5jaHVua3NbaV0uYnl0ZXNTZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU2luY2UgdGhlIHByb2Nlc3MgaXMgYSBwZXJjZW50YWdlLCB3ZSBuZWVkIHRvIGRpdmlkZSBieSB0aGUgYW1vdW50IG9mXG4gICAgICAgICAgICAvLyBjaHVua3Mgd2UndmUgdXNlZC5cbiAgICAgICAgICAgIGZpbGUudXBsb2FkLnByb2dyZXNzID0gZmlsZS51cGxvYWQucHJvZ3Jlc3MgLyBmaWxlLnVwbG9hZC50b3RhbENodW5rQ291bnQ7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJ1cGxvYWRwcm9ncmVzc1wiLCBmaWxlLCBmaWxlLnVwbG9hZC5wcm9ncmVzcywgZmlsZS51cGxvYWQuYnl0ZXNTZW50KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBfZmluaXNoZWRVcGxvYWRpbmcoZmlsZXMsIHhociwgZSkge1xuICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgIGlmIChmaWxlc1swXS5zdGF0dXMgPT09ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuQ0FOQ0VMRUQpIHJldHVybjtcbiAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlICE9PSA0KSByZXR1cm47XG4gICAgICAgIGlmICh4aHIucmVzcG9uc2VUeXBlICE9PSBcImFycmF5YnVmZmVyXCIgJiYgeGhyLnJlc3BvbnNlVHlwZSAhPT0gXCJibG9iXCIpIHtcbiAgICAgICAgICAgIHJlc3BvbnNlID0geGhyLnJlc3BvbnNlVGV4dDtcbiAgICAgICAgICAgIGlmICh4aHIuZ2V0UmVzcG9uc2VIZWFkZXIoXCJjb250ZW50LXR5cGVcIikgJiYgfnhoci5nZXRSZXNwb25zZUhlYWRlcihcImNvbnRlbnQtdHlwZVwiKS5pbmRleE9mKFwiYXBwbGljYXRpb24vanNvblwiKSkgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IEpTT04ucGFyc2UocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBlID0gZXJyb3I7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBcIkludmFsaWQgSlNPTiByZXNwb25zZSBmcm9tIHNlcnZlci5cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl91cGRhdGVGaWxlc1VwbG9hZFByb2dyZXNzKGZpbGVzLCB4aHIpO1xuICAgICAgICBpZiAoISgyMDAgPD0geGhyLnN0YXR1cyAmJiB4aHIuc3RhdHVzIDwgMzAwKSkgdGhpcy5faGFuZGxlVXBsb2FkRXJyb3IoZmlsZXMsIHhociwgcmVzcG9uc2UpO1xuICAgICAgICBlbHNlIGlmIChmaWxlc1swXS51cGxvYWQuY2h1bmtlZCkgZmlsZXNbMF0udXBsb2FkLmZpbmlzaGVkQ2h1bmtVcGxvYWQodGhpcy5fZ2V0Q2h1bmsoZmlsZXNbMF0sIHhociksIHJlc3BvbnNlKTtcbiAgICAgICAgZWxzZSB0aGlzLl9maW5pc2hlZChmaWxlcywgcmVzcG9uc2UsIGUpO1xuICAgIH1cbiAgICBfaGFuZGxlVXBsb2FkRXJyb3IoZmlsZXMsIHhociwgcmVzcG9uc2UpIHtcbiAgICAgICAgaWYgKGZpbGVzWzBdLnN0YXR1cyA9PT0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5DQU5DRUxFRCkgcmV0dXJuO1xuICAgICAgICBpZiAoZmlsZXNbMF0udXBsb2FkLmNodW5rZWQgJiYgdGhpcy5vcHRpb25zLnJldHJ5Q2h1bmtzKSB7XG4gICAgICAgICAgICBsZXQgY2h1bmsgPSB0aGlzLl9nZXRDaHVuayhmaWxlc1swXSwgeGhyKTtcbiAgICAgICAgICAgIGlmICgoY2h1bmsucmV0cmllcysrKSA8IHRoaXMub3B0aW9ucy5yZXRyeUNodW5rc0xpbWl0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdXBsb2FkRGF0YShmaWxlcywgW1xuICAgICAgICAgICAgICAgICAgICBjaHVuay5kYXRhQmxvY2tcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2UgY29uc29sZS53YXJuKFwiUmV0cmllZCB0aGlzIGNodW5rIHRvbyBvZnRlbi4gR2l2aW5nIHVwLlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9lcnJvclByb2Nlc3NpbmcoZmlsZXMsIHJlc3BvbnNlIHx8IHRoaXMub3B0aW9ucy5kaWN0UmVzcG9uc2VFcnJvci5yZXBsYWNlKFwie3tzdGF0dXNDb2RlfX1cIiwgeGhyLnN0YXR1cyksIHhocik7XG4gICAgfVxuICAgIHN1Ym1pdFJlcXVlc3QoeGhyLCBmb3JtRGF0YSwgZmlsZXMpIHtcbiAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlICE9IDEpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkNhbm5vdCBzZW5kIHRoaXMgcmVxdWVzdCBiZWNhdXNlIHRoZSBYTUxIdHRwUmVxdWVzdC5yZWFkeVN0YXRlIGlzIG5vdCBPUEVORUQuXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmluYXJ5Qm9keSkge1xuICAgICAgICAgICAgaWYgKGZpbGVzWzBdLnVwbG9hZC5jaHVua2VkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2h1bmsgPSB0aGlzLl9nZXRDaHVuayhmaWxlc1swXSwgeGhyKTtcbiAgICAgICAgICAgICAgICB4aHIuc2VuZChjaHVuay5kYXRhQmxvY2suZGF0YSk7XG4gICAgICAgICAgICB9IGVsc2UgeGhyLnNlbmQoZmlsZXNbMF0pO1xuICAgICAgICB9IGVsc2UgeGhyLnNlbmQoZm9ybURhdGEpO1xuICAgIH1cbiAgICAvLyBDYWxsZWQgaW50ZXJuYWxseSB3aGVuIHByb2Nlc3NpbmcgaXMgZmluaXNoZWQuXG4gICAgLy8gSW5kaXZpZHVhbCBjYWxsYmFja3MgaGF2ZSB0byBiZSBjYWxsZWQgaW4gdGhlIGFwcHJvcHJpYXRlIHNlY3Rpb25zLlxuICAgIF9maW5pc2hlZChmaWxlcywgcmVzcG9uc2VUZXh0LCBlKSB7XG4gICAgICAgIGZvciAobGV0IGZpbGUgb2YgZmlsZXMpe1xuICAgICAgICAgICAgZmlsZS5zdGF0dXMgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LlNVQ0NFU1M7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJzdWNjZXNzXCIsIGZpbGUsIHJlc3BvbnNlVGV4dCwgZSk7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJjb21wbGV0ZVwiLCBmaWxlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJzdWNjZXNzbXVsdGlwbGVcIiwgZmlsZXMsIHJlc3BvbnNlVGV4dCwgZSk7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJjb21wbGV0ZW11bHRpcGxlXCIsIGZpbGVzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmF1dG9Qcm9jZXNzUXVldWUpIHJldHVybiB0aGlzLnByb2Nlc3NRdWV1ZSgpO1xuICAgIH1cbiAgICAvLyBDYWxsZWQgaW50ZXJuYWxseSB3aGVuIHByb2Nlc3NpbmcgaXMgZmluaXNoZWQuXG4gICAgLy8gSW5kaXZpZHVhbCBjYWxsYmFja3MgaGF2ZSB0byBiZSBjYWxsZWQgaW4gdGhlIGFwcHJvcHJpYXRlIHNlY3Rpb25zLlxuICAgIF9lcnJvclByb2Nlc3NpbmcoZmlsZXMsIG1lc3NhZ2UsIHhocikge1xuICAgICAgICBmb3IgKGxldCBmaWxlIG9mIGZpbGVzKXtcbiAgICAgICAgICAgIGZpbGUuc3RhdHVzID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5FUlJPUjtcbiAgICAgICAgICAgIHRoaXMuZW1pdChcImVycm9yXCIsIGZpbGUsIG1lc3NhZ2UsIHhocik7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJjb21wbGV0ZVwiLCBmaWxlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVwbG9hZE11bHRpcGxlKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXQoXCJlcnJvcm11bHRpcGxlXCIsIGZpbGVzLCBtZXNzYWdlLCB4aHIpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KFwiY29tcGxldGVtdWx0aXBsZVwiLCBmaWxlcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hdXRvUHJvY2Vzc1F1ZXVlKSByZXR1cm4gdGhpcy5wcm9jZXNzUXVldWUoKTtcbiAgICB9XG4gICAgc3RhdGljIHV1aWR2NCgpIHtcbiAgICAgICAgcmV0dXJuIFwieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4XCIucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbihjKSB7XG4gICAgICAgICAgICBsZXQgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09PSBcInhcIiA/IHIgOiByICYgMyB8IDg7XG4gICAgICAgICAgICByZXR1cm4gdi50b1N0cmluZygxNik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihlbCwgb3B0aW9ucyl7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGxldCBmYWxsYmFjaywgbGVmdDtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWw7XG4gICAgICAgIHRoaXMuY2xpY2thYmxlRWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMgPSBbXTtcbiAgICAgICAgdGhpcy5maWxlcyA9IFtdOyAvLyBBbGwgZmlsZXNcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmVsZW1lbnQgPT09IFwic3RyaW5nXCIpIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5lbGVtZW50KTtcbiAgICAgICAgLy8gTm90IGNoZWNraW5nIGlmIGluc3RhbmNlIG9mIEhUTUxFbGVtZW50IG9yIEVsZW1lbnQgc2luY2UgSUU5IGlzIGV4dHJlbWVseSB3ZWlyZC5cbiAgICAgICAgaWYgKCF0aGlzLmVsZW1lbnQgfHwgdGhpcy5lbGVtZW50Lm5vZGVUeXBlID09IG51bGwpIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZHJvcHpvbmUgZWxlbWVudC5cIik7XG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnQuZHJvcHpvbmUpIHRocm93IG5ldyBFcnJvcihcIkRyb3B6b25lIGFscmVhZHkgYXR0YWNoZWQuXCIpO1xuICAgICAgICAvLyBOb3cgYWRkIHRoaXMgZHJvcHpvbmUgdG8gdGhlIGluc3RhbmNlcy5cbiAgICAgICAgJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5pbnN0YW5jZXMucHVzaCh0aGlzKTtcbiAgICAgICAgLy8gUHV0IHRoZSBkcm9wem9uZSBpbnNpZGUgdGhlIGVsZW1lbnQgaXRzZWxmLlxuICAgICAgICB0aGlzLmVsZW1lbnQuZHJvcHpvbmUgPSB0aGlzO1xuICAgICAgICBsZXQgZWxlbWVudE9wdGlvbnMgPSAobGVmdCA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkub3B0aW9uc0ZvckVsZW1lbnQodGhpcy5lbGVtZW50KSkgIT0gbnVsbCA/IGxlZnQgOiB7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMub3B0aW9ucyA9ICRld0JLeSRqdXN0ZXh0ZW5kKHRydWUsIHtcbiAgICAgICAgfSwgJDRjYTM2NzE4Mjc3NmY4MGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOSwgZWxlbWVudE9wdGlvbnMsIG9wdGlvbnMgIT0gbnVsbCA/IG9wdGlvbnMgOiB7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm9wdGlvbnMucHJldmlld1RlbXBsYXRlID0gdGhpcy5vcHRpb25zLnByZXZpZXdUZW1wbGF0ZS5yZXBsYWNlKC9cXG4qL2csIFwiXCIpO1xuICAgICAgICAvLyBJZiB0aGUgYnJvd3NlciBmYWlsZWQsIGp1c3QgY2FsbCB0aGUgZmFsbGJhY2sgYW5kIGxlYXZlXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZm9yY2VGYWxsYmFjayB8fCAhJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5pc0Jyb3dzZXJTdXBwb3J0ZWQoKSkgcmV0dXJuIHRoaXMub3B0aW9ucy5mYWxsYmFjay5jYWxsKHRoaXMpO1xuICAgICAgICAvLyBAb3B0aW9ucy51cmwgPSBAZWxlbWVudC5nZXRBdHRyaWJ1dGUgXCJhY3Rpb25cIiB1bmxlc3MgQG9wdGlvbnMudXJsP1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVybCA9PSBudWxsKSB0aGlzLm9wdGlvbnMudXJsID0gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShcImFjdGlvblwiKTtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMudXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJObyBVUkwgcHJvdmlkZWQuXCIpO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmFjY2VwdGVkRmlsZXMgJiYgdGhpcy5vcHRpb25zLmFjY2VwdGVkTWltZVR5cGVzKSB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgY2FuJ3QgcHJvdmlkZSBib3RoICdhY2NlcHRlZEZpbGVzJyBhbmQgJ2FjY2VwdGVkTWltZVR5cGVzJy4gJ2FjY2VwdGVkTWltZVR5cGVzJyBpcyBkZXByZWNhdGVkLlwiKTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51cGxvYWRNdWx0aXBsZSAmJiB0aGlzLm9wdGlvbnMuY2h1bmtpbmcpIHRocm93IG5ldyBFcnJvcihcIllvdSBjYW5ub3Qgc2V0IGJvdGg6IHVwbG9hZE11bHRpcGxlIGFuZCBjaHVua2luZy5cIik7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmluYXJ5Qm9keSAmJiB0aGlzLm9wdGlvbnMudXBsb2FkTXVsdGlwbGUpIHRocm93IG5ldyBFcnJvcihcIllvdSBjYW5ub3Qgc2V0IGJvdGg6IGJpbmFyeUJvZHkgYW5kIHVwbG9hZE11bHRpcGxlLlwiKTtcbiAgICAgICAgLy8gQmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hY2NlcHRlZE1pbWVUeXBlcykge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zLmFjY2VwdGVkRmlsZXMgPSB0aGlzLm9wdGlvbnMuYWNjZXB0ZWRNaW1lVHlwZXM7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5vcHRpb25zLmFjY2VwdGVkTWltZVR5cGVzO1xuICAgICAgICB9XG4gICAgICAgIC8vIEJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmVuYW1lRmlsZW5hbWUgIT0gbnVsbCkgdGhpcy5vcHRpb25zLnJlbmFtZUZpbGUgPSAoZmlsZSk9PnRoaXMub3B0aW9ucy5yZW5hbWVGaWxlbmFtZS5jYWxsKHRoaXMsIGZpbGUubmFtZSwgZmlsZSlcbiAgICAgICAgO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5tZXRob2QgPT09IFwic3RyaW5nXCIpIHRoaXMub3B0aW9ucy5tZXRob2QgPSB0aGlzLm9wdGlvbnMubWV0aG9kLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIGlmICgoZmFsbGJhY2sgPSB0aGlzLmdldEV4aXN0aW5nRmFsbGJhY2soKSkgJiYgZmFsbGJhY2sucGFyZW50Tm9kZSkgLy8gUmVtb3ZlIHRoZSBmYWxsYmFja1xuICAgICAgICBmYWxsYmFjay5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGZhbGxiYWNrKTtcbiAgICAgICAgLy8gRGlzcGxheSBwcmV2aWV3cyBpbiB0aGUgcHJldmlld3NDb250YWluZXIgZWxlbWVudCBvciB0aGUgRHJvcHpvbmUgZWxlbWVudCB1bmxlc3MgZXhwbGljaXRseSBzZXQgdG8gZmFsc2VcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wcmV2aWV3c0NvbnRhaW5lciAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucHJldmlld3NDb250YWluZXIpIHRoaXMucHJldmlld3NDb250YWluZXIgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmdldEVsZW1lbnQodGhpcy5vcHRpb25zLnByZXZpZXdzQ29udGFpbmVyLCBcInByZXZpZXdzQ29udGFpbmVyXCIpO1xuICAgICAgICAgICAgZWxzZSB0aGlzLnByZXZpZXdzQ29udGFpbmVyID0gdGhpcy5lbGVtZW50O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY2xpY2thYmxlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmNsaWNrYWJsZSA9PT0gdHJ1ZSkgdGhpcy5jbGlja2FibGVFbGVtZW50cyA9IFtcbiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBlbHNlIHRoaXMuY2xpY2thYmxlRWxlbWVudHMgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmdldEVsZW1lbnRzKHRoaXMub3B0aW9ucy5jbGlja2FibGUsIFwiY2xpY2thYmxlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cbn1cbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuaW5pdENsYXNzKCk7XG4vLyBUaGlzIGlzIGEgbWFwIG9mIG9wdGlvbnMgZm9yIHlvdXIgZGlmZmVyZW50IGRyb3B6b25lcy4gQWRkIGNvbmZpZ3VyYXRpb25zXG4vLyB0byB0aGlzIG9iamVjdCBmb3IgeW91ciBkaWZmZXJlbnQgZHJvcHpvbmUgZWxlbWVucy5cbi8vXG4vLyBFeGFtcGxlOlxuLy9cbi8vICAgICBEcm9wem9uZS5vcHRpb25zLm15RHJvcHpvbmVFbGVtZW50SWQgPSB7IG1heEZpbGVzaXplOiAxIH07XG4vL1xuLy8gQW5kIGluIGh0bWw6XG4vL1xuLy8gICAgIDxmb3JtIGFjdGlvbj1cIi91cGxvYWRcIiBpZD1cIm15LWRyb3B6b25lLWVsZW1lbnQtaWRcIiBjbGFzcz1cImRyb3B6b25lXCI+PC9mb3JtPlxuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5vcHRpb25zID0ge1xufTtcbi8vIFJldHVybnMgdGhlIG9wdGlvbnMgZm9yIGFuIGVsZW1lbnQgb3IgdW5kZWZpbmVkIGlmIG5vbmUgYXZhaWxhYmxlLlxuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5vcHRpb25zRm9yRWxlbWVudCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAvLyBHZXQgdGhlIGBEcm9wem9uZS5vcHRpb25zLmVsZW1lbnRJZGAgZm9yIHRoaXMgZWxlbWVudCBpZiBpdCBleGlzdHNcbiAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJpZFwiKSkgcmV0dXJuICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkub3B0aW9uc1skM2VkMjY5ZjJmMGZiMjI0YiR2YXIkY2FtZWxpemUoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJpZFwiKSldO1xuICAgIGVsc2UgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG4vLyBIb2xkcyBhIGxpc3Qgb2YgYWxsIGRyb3B6b25lIGluc3RhbmNlc1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5pbnN0YW5jZXMgPSBbXTtcbi8vIFJldHVybnMgdGhlIGRyb3B6b25lIGZvciBnaXZlbiBlbGVtZW50IGlmIGFueVxuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5mb3JFbGVtZW50ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgIGlmICh0eXBlb2YgZWxlbWVudCA9PT0gXCJzdHJpbmdcIikgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbWVudCk7XG4gICAgaWYgKChlbGVtZW50ICE9IG51bGwgPyBlbGVtZW50LmRyb3B6b25lIDogdW5kZWZpbmVkKSA9PSBudWxsKSB0aHJvdyBuZXcgRXJyb3IoXCJObyBEcm9wem9uZSBmb3VuZCBmb3IgZ2l2ZW4gZWxlbWVudC4gVGhpcyBpcyBwcm9iYWJseSBiZWNhdXNlIHlvdSdyZSB0cnlpbmcgdG8gYWNjZXNzIGl0IGJlZm9yZSBEcm9wem9uZSBoYWQgdGhlIHRpbWUgdG8gaW5pdGlhbGl6ZS4gVXNlIHRoZSBgaW5pdGAgb3B0aW9uIHRvIHNldHVwIGFueSBhZGRpdGlvbmFsIG9ic2VydmVycyBvbiB5b3VyIERyb3B6b25lLlwiKTtcbiAgICByZXR1cm4gZWxlbWVudC5kcm9wem9uZTtcbn07XG4vLyBMb29rcyBmb3IgYWxsIC5kcm9wem9uZSBlbGVtZW50cyBhbmQgY3JlYXRlcyBhIGRyb3B6b25lIGZvciB0aGVtXG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmRpc2NvdmVyID0gZnVuY3Rpb24oKSB7XG4gICAgbGV0IGRyb3B6b25lcztcbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCkgZHJvcHpvbmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5kcm9wem9uZVwiKTtcbiAgICBlbHNlIHtcbiAgICAgICAgZHJvcHpvbmVzID0gW107XG4gICAgICAgIC8vIElFIDooXG4gICAgICAgIGxldCBjaGVja0VsZW1lbnRzID0gKGVsZW1lbnRzKT0+KCgpPT57XG4gICAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGVsIG9mIGVsZW1lbnRzKWlmICgvKF58IClkcm9wem9uZSgkfCApLy50ZXN0KGVsLmNsYXNzTmFtZSkpIHJlc3VsdC5wdXNoKGRyb3B6b25lcy5wdXNoKGVsKSk7XG4gICAgICAgICAgICAgICAgZWxzZSByZXN1bHQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9KSgpXG4gICAgICAgIDtcbiAgICAgICAgY2hlY2tFbGVtZW50cyhkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImRpdlwiKSk7XG4gICAgICAgIGNoZWNrRWxlbWVudHMoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJmb3JtXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuICgoKT0+e1xuICAgICAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgICAgIGZvciAobGV0IGRyb3B6b25lIG9mIGRyb3B6b25lcykvLyBDcmVhdGUgYSBkcm9wem9uZSB1bmxlc3MgYXV0byBkaXNjb3ZlciBoYXMgYmVlbiBkaXNhYmxlZCBmb3Igc3BlY2lmaWMgZWxlbWVudFxuICAgICAgICBpZiAoJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5vcHRpb25zRm9yRWxlbWVudChkcm9wem9uZSkgIT09IGZhbHNlKSByZXN1bHQucHVzaChuZXcgJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOShkcm9wem9uZSkpO1xuICAgICAgICBlbHNlIHJlc3VsdC5wdXNoKHVuZGVmaW5lZCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSkoKTtcbn07XG4vLyBTb21lIGJyb3dzZXJzIHN1cHBvcnQgZHJhZyBhbmQgZHJvZyBmdW5jdGlvbmFsaXR5LCBidXQgbm90IGNvcnJlY3RseS5cbi8vXG4vLyBTbyBJIGNyZWF0ZWQgYSBibG9ja2xpc3Qgb2YgdXNlckFnZW50cy4gWWVzLCB5ZXMuIEJyb3dzZXIgc25pZmZpbmcsIEkga25vdy5cbi8vIEJ1dCB3aGF0IHRvIGRvIHdoZW4gYnJvd3NlcnMgKnRoZW9yZXRpY2FsbHkqIHN1cHBvcnQgYW4gQVBJLCBidXQgY3Jhc2hcbi8vIHdoZW4gdXNpbmcgaXQuXG4vL1xuLy8gVGhpcyBpcyBhIGxpc3Qgb2YgcmVndWxhciBleHByZXNzaW9ucyB0ZXN0ZWQgYWdhaW5zdCBuYXZpZ2F0b3IudXNlckFnZW50XG4vL1xuLy8gKiogSXQgc2hvdWxkIG9ubHkgYmUgdXNlZCBvbiBicm93c2VyIHRoYXQgKmRvKiBzdXBwb3J0IHRoZSBBUEksIGJ1dFxuLy8gaW5jb3JyZWN0bHkgKipcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuYmxvY2tlZEJyb3dzZXJzID0gW1xuICAgIC8vIFRoZSBtYWMgb3MgYW5kIHdpbmRvd3MgcGhvbmUgdmVyc2lvbiBvZiBvcGVyYSAxMiBzZWVtcyB0byBoYXZlIGEgcHJvYmxlbSB3aXRoIHRoZSBGaWxlIGRyYWcnbidkcm9wIEFQSS5cbiAgICAvb3BlcmEuKihNYWNpbnRvc2h8V2luZG93cyBQaG9uZSkuKnZlcnNpb25cXC8xMi9pLCBcbl07XG4vLyBDaGVja3MgaWYgdGhlIGJyb3dzZXIgaXMgc3VwcG9ydGVkXG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmlzQnJvd3NlclN1cHBvcnRlZCA9IGZ1bmN0aW9uKCkge1xuICAgIGxldCBjYXBhYmxlQnJvd3NlciA9IHRydWU7XG4gICAgaWYgKHdpbmRvdy5GaWxlICYmIHdpbmRvdy5GaWxlUmVhZGVyICYmIHdpbmRvdy5GaWxlTGlzdCAmJiB3aW5kb3cuQmxvYiAmJiB3aW5kb3cuRm9ybURhdGEgJiYgZG9jdW1lbnQucXVlcnlTZWxlY3Rvcikge1xuICAgICAgICBpZiAoIShcImNsYXNzTGlzdFwiIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpKSkgY2FwYWJsZUJyb3dzZXIgPSBmYWxzZTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5ibGFja2xpc3RlZEJyb3dzZXJzICE9PSB1bmRlZmluZWQpIC8vIFNpbmNlIHRoaXMgaGFzIGJlZW4gcmVuYW1lZCwgdGhpcyBtYWtlcyBzdXJlIHdlIGRvbid0IGJyZWFrIG9sZGVyXG4gICAgICAgICAgICAvLyBjb25maWd1cmF0aW9uLlxuICAgICAgICAgICAgJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5ibG9ja2VkQnJvd3NlcnMgPSAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmJsYWNrbGlzdGVkQnJvd3NlcnM7XG4gICAgICAgICAgICAvLyBUaGUgYnJvd3NlciBzdXBwb3J0cyB0aGUgQVBJLCBidXQgbWF5IGJlIGJsb2NrZWQuXG4gICAgICAgICAgICBmb3IgKGxldCByZWdleCBvZiAkM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmJsb2NrZWRCcm93c2VycylpZiAocmVnZXgudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkge1xuICAgICAgICAgICAgICAgIGNhcGFibGVCcm93c2VyID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IGVsc2UgY2FwYWJsZUJyb3dzZXIgPSBmYWxzZTtcbiAgICByZXR1cm4gY2FwYWJsZUJyb3dzZXI7XG59O1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5kYXRhVVJJdG9CbG9iID0gZnVuY3Rpb24oZGF0YVVSSSkge1xuICAgIC8vIGNvbnZlcnQgYmFzZTY0IHRvIHJhdyBiaW5hcnkgZGF0YSBoZWxkIGluIGEgc3RyaW5nXG4gICAgLy8gZG9lc24ndCBoYW5kbGUgVVJMRW5jb2RlZCBEYXRhVVJJcyAtIHNlZSBTTyBhbnN3ZXIgIzY4NTAyNzYgZm9yIGNvZGUgdGhhdCBkb2VzIHRoaXNcbiAgICBsZXQgYnl0ZVN0cmluZyA9IGF0b2IoZGF0YVVSSS5zcGxpdChcIixcIilbMV0pO1xuICAgIC8vIHNlcGFyYXRlIG91dCB0aGUgbWltZSBjb21wb25lbnRcbiAgICBsZXQgbWltZVN0cmluZyA9IGRhdGFVUkkuc3BsaXQoXCIsXCIpWzBdLnNwbGl0KFwiOlwiKVsxXS5zcGxpdChcIjtcIilbMF07XG4gICAgLy8gd3JpdGUgdGhlIGJ5dGVzIG9mIHRoZSBzdHJpbmcgdG8gYW4gQXJyYXlCdWZmZXJcbiAgICBsZXQgYWIgPSBuZXcgQXJyYXlCdWZmZXIoYnl0ZVN0cmluZy5sZW5ndGgpO1xuICAgIGxldCBpYSA9IG5ldyBVaW50OEFycmF5KGFiKTtcbiAgICBmb3IobGV0IGkgPSAwLCBlbmQgPSBieXRlU3RyaW5nLmxlbmd0aCwgYXNjID0gMCA8PSBlbmQ7IGFzYyA/IGkgPD0gZW5kIDogaSA+PSBlbmQ7IGFzYyA/IGkrKyA6IGktLSlpYVtpXSA9IGJ5dGVTdHJpbmcuY2hhckNvZGVBdChpKTtcbiAgICAvLyB3cml0ZSB0aGUgQXJyYXlCdWZmZXIgdG8gYSBibG9iXG4gICAgcmV0dXJuIG5ldyBCbG9iKFtcbiAgICAgICAgYWJcbiAgICBdLCB7XG4gICAgICAgIHR5cGU6IG1pbWVTdHJpbmdcbiAgICB9KTtcbn07XG4vLyBSZXR1cm5zIGFuIGFycmF5IHdpdGhvdXQgdGhlIHJlamVjdGVkIGl0ZW1cbmNvbnN0ICQzZWQyNjlmMmYwZmIyMjRiJHZhciR3aXRob3V0ID0gKGxpc3QsIHJlamVjdGVkSXRlbSk9Pmxpc3QuZmlsdGVyKChpdGVtKT0+aXRlbSAhPT0gcmVqZWN0ZWRJdGVtXG4gICAgKS5tYXAoKGl0ZW0pPT5pdGVtXG4gICAgKVxuO1xuLy8gYWJjLWRlZl9naGkgLT4gYWJjRGVmR2hpXG5jb25zdCAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkY2FtZWxpemUgPSAoc3RyKT0+c3RyLnJlcGxhY2UoL1tcXC1fXShcXHcpL2csIChtYXRjaCk9Pm1hdGNoLmNoYXJBdCgxKS50b1VwcGVyQ2FzZSgpXG4gICAgKVxuO1xuLy8gQ3JlYXRlcyBhbiBlbGVtZW50IGZyb20gc3RyaW5nXG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmNyZWF0ZUVsZW1lbnQgPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICBsZXQgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkaXYuaW5uZXJIVE1MID0gc3RyaW5nO1xuICAgIHJldHVybiBkaXYuY2hpbGROb2Rlc1swXTtcbn07XG4vLyBUZXN0cyBpZiBnaXZlbiBlbGVtZW50IGlzIGluc2lkZSAob3Igc2ltcGx5IGlzKSB0aGUgY29udGFpbmVyXG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LmVsZW1lbnRJbnNpZGUgPSBmdW5jdGlvbihlbGVtZW50LCBjb250YWluZXIpIHtcbiAgICBpZiAoZWxlbWVudCA9PT0gY29udGFpbmVyKSByZXR1cm4gdHJ1ZTtcbiAgICAgLy8gQ29mZmVlc2NyaXB0IGRvZXNuJ3Qgc3VwcG9ydCBkby93aGlsZSBsb29wc1xuICAgIHdoaWxlKGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudE5vZGUpe1xuICAgICAgICBpZiAoZWxlbWVudCA9PT0gY29udGFpbmVyKSByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuZ2V0RWxlbWVudCA9IGZ1bmN0aW9uKGVsLCBuYW1lKSB7XG4gICAgbGV0IGVsZW1lbnQ7XG4gICAgaWYgKHR5cGVvZiBlbCA9PT0gXCJzdHJpbmdcIikgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWwpO1xuICAgIGVsc2UgaWYgKGVsLm5vZGVUeXBlICE9IG51bGwpIGVsZW1lbnQgPSBlbDtcbiAgICBpZiAoZWxlbWVudCA9PSBudWxsKSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgXFxgJHtuYW1lfVxcYCBvcHRpb24gcHJvdmlkZWQuIFBsZWFzZSBwcm92aWRlIGEgQ1NTIHNlbGVjdG9yIG9yIGEgcGxhaW4gSFRNTCBlbGVtZW50LmApO1xuICAgIHJldHVybiBlbGVtZW50O1xufTtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuZ2V0RWxlbWVudHMgPSBmdW5jdGlvbihlbHMsIG5hbWUpIHtcbiAgICBsZXQgZWwsIGVsZW1lbnRzO1xuICAgIGlmIChlbHMgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICBlbGVtZW50cyA9IFtdO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yIChlbCBvZiBlbHMpZWxlbWVudHMucHVzaCh0aGlzLmdldEVsZW1lbnQoZWwsIG5hbWUpKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgZWxlbWVudHMgPSBudWxsO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZWxzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGVsZW1lbnRzID0gW107XG4gICAgICAgIGZvciAoZWwgb2YgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbHMpKWVsZW1lbnRzLnB1c2goZWwpO1xuICAgIH0gZWxzZSBpZiAoZWxzLm5vZGVUeXBlICE9IG51bGwpIGVsZW1lbnRzID0gW1xuICAgICAgICBlbHNcbiAgICBdO1xuICAgIGlmIChlbGVtZW50cyA9PSBudWxsIHx8ICFlbGVtZW50cy5sZW5ndGgpIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBcXGAke25hbWV9XFxgIG9wdGlvbiBwcm92aWRlZC4gUGxlYXNlIHByb3ZpZGUgYSBDU1Mgc2VsZWN0b3IsIGEgcGxhaW4gSFRNTCBlbGVtZW50IG9yIGEgbGlzdCBvZiB0aG9zZS5gKTtcbiAgICByZXR1cm4gZWxlbWVudHM7XG59O1xuLy8gQXNrcyB0aGUgdXNlciB0aGUgcXVlc3Rpb24gYW5kIGNhbGxzIGFjY2VwdGVkIG9yIHJlamVjdGVkIGFjY29yZGluZ2x5XG4vL1xuLy8gVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24ganVzdCB1c2VzIGB3aW5kb3cuY29uZmlybWAgYW5kIHRoZW4gY2FsbHMgdGhlXG4vLyBhcHByb3ByaWF0ZSBjYWxsYmFjay5cbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuY29uZmlybSA9IGZ1bmN0aW9uKHF1ZXN0aW9uLCBhY2NlcHRlZCwgcmVqZWN0ZWQpIHtcbiAgICBpZiAod2luZG93LmNvbmZpcm0ocXVlc3Rpb24pKSByZXR1cm4gYWNjZXB0ZWQoKTtcbiAgICBlbHNlIGlmIChyZWplY3RlZCAhPSBudWxsKSByZXR1cm4gcmVqZWN0ZWQoKTtcbn07XG4vLyBWYWxpZGF0ZXMgdGhlIG1pbWUgdHlwZSBsaWtlIHRoaXM6XG4vL1xuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9IVE1ML0VsZW1lbnQvaW5wdXQjYXR0ci1hY2NlcHRcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuaXNWYWxpZEZpbGUgPSBmdW5jdGlvbihmaWxlLCBhY2NlcHRlZEZpbGVzKSB7XG4gICAgaWYgKCFhY2NlcHRlZEZpbGVzKSByZXR1cm4gdHJ1ZTtcbiAgICAgLy8gSWYgdGhlcmUgYXJlIG5vIGFjY2VwdGVkIG1pbWUgdHlwZXMsIGl0J3MgT0tcbiAgICBhY2NlcHRlZEZpbGVzID0gYWNjZXB0ZWRGaWxlcy5zcGxpdChcIixcIik7XG4gICAgbGV0IG1pbWVUeXBlID0gZmlsZS50eXBlO1xuICAgIGxldCBiYXNlTWltZVR5cGUgPSBtaW1lVHlwZS5yZXBsYWNlKC9cXC8uKiQvLCBcIlwiKTtcbiAgICBmb3IgKGxldCB2YWxpZFR5cGUgb2YgYWNjZXB0ZWRGaWxlcyl7XG4gICAgICAgIHZhbGlkVHlwZSA9IHZhbGlkVHlwZS50cmltKCk7XG4gICAgICAgIGlmICh2YWxpZFR5cGUuY2hhckF0KDApID09PSBcIi5cIikge1xuICAgICAgICAgICAgaWYgKGZpbGUubmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodmFsaWRUeXBlLnRvTG93ZXJDYXNlKCksIGZpbGUubmFtZS5sZW5ndGggLSB2YWxpZFR5cGUubGVuZ3RoKSAhPT0gLTEpIHJldHVybiB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKC9cXC9cXCokLy50ZXN0KHZhbGlkVHlwZSkpIHtcbiAgICAgICAgICAgIC8vIFRoaXMgaXMgc29tZXRoaW5nIGxpa2UgYSBpbWFnZS8qIG1pbWUgdHlwZVxuICAgICAgICAgICAgaWYgKGJhc2VNaW1lVHlwZSA9PT0gdmFsaWRUeXBlLnJlcGxhY2UoL1xcLy4qJC8sIFwiXCIpKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChtaW1lVHlwZSA9PT0gdmFsaWRUeXBlKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuLy8gQXVnbWVudCBqUXVlcnlcbmlmICh0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeSAhPT0gbnVsbCkgalF1ZXJ5LmZuLmRyb3B6b25lID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBuZXcgJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOSh0aGlzLCBvcHRpb25zKTtcbiAgICB9KTtcbn07XG4vLyBEcm9wem9uZSBmaWxlIHN0YXR1cyBjb2Rlc1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5BRERFRCA9IFwiYWRkZWRcIjtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuUVVFVUVEID0gXCJxdWV1ZWRcIjtcbi8vIEZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS4gTm93LCBpZiBhIGZpbGUgaXMgYWNjZXB0ZWQsIGl0J3MgZWl0aGVyIHF1ZXVlZFxuLy8gb3IgdXBsb2FkaW5nLlxuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5BQ0NFUFRFRCA9ICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuUVVFVUVEO1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5VUExPQURJTkcgPSBcInVwbG9hZGluZ1wiO1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5QUk9DRVNTSU5HID0gJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5VUExPQURJTkc7IC8vIGFsaWFzXG4kM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5LkNBTkNFTEVEID0gXCJjYW5jZWxlZFwiO1xuJDNlZDI2OWYyZjBmYjIyNGIkZXhwb3J0JDJlMmJjZDg3MzlhZTAzOS5FUlJPUiA9IFwiZXJyb3JcIjtcbiQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkuU1VDQ0VTUyA9IFwic3VjY2Vzc1wiO1xuLypcblxuIEJ1Z2ZpeCBmb3IgaU9TIDYgYW5kIDdcbiBTb3VyY2U6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTE5MjkwOTkvaHRtbDUtY2FudmFzLWRyYXdpbWFnZS1yYXRpby1idWctaW9zXG4gYmFzZWQgb24gdGhlIHdvcmsgb2YgaHR0cHM6Ly9naXRodWIuY29tL3N0b21pdGEvaW9zLWltYWdlZmlsZS1tZWdhcGl4ZWxcblxuICovIC8vIERldGVjdGluZyB2ZXJ0aWNhbCBzcXVhc2ggaW4gbG9hZGVkIGltYWdlLlxuLy8gRml4ZXMgYSBidWcgd2hpY2ggc3F1YXNoIGltYWdlIHZlcnRpY2FsbHkgd2hpbGUgZHJhd2luZyBpbnRvIGNhbnZhcyBmb3Igc29tZSBpbWFnZXMuXG4vLyBUaGlzIGlzIGEgYnVnIGluIGlPUzYgZGV2aWNlcy4gVGhpcyBmdW5jdGlvbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9zdG9taXRhL2lvcy1pbWFnZWZpbGUtbWVnYXBpeGVsXG5sZXQgJDNlZDI2OWYyZjBmYjIyNGIkdmFyJGRldGVjdFZlcnRpY2FsU3F1YXNoID0gZnVuY3Rpb24oaW1nKSB7XG4gICAgbGV0IGl3ID0gaW1nLm5hdHVyYWxXaWR0aDtcbiAgICBsZXQgaWggPSBpbWcubmF0dXJhbEhlaWdodDtcbiAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcbiAgICBjYW52YXMud2lkdGggPSAxO1xuICAgIGNhbnZhcy5oZWlnaHQgPSBpaDtcbiAgICBsZXQgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCk7XG4gICAgbGV0IHsgZGF0YTogZGF0YSAgfSA9IGN0eC5nZXRJbWFnZURhdGEoMSwgMCwgMSwgaWgpO1xuICAgIC8vIHNlYXJjaCBpbWFnZSBlZGdlIHBpeGVsIHBvc2l0aW9uIGluIGNhc2UgaXQgaXMgc3F1YXNoZWQgdmVydGljYWxseS5cbiAgICBsZXQgc3kgPSAwO1xuICAgIGxldCBleSA9IGloO1xuICAgIGxldCBweSA9IGloO1xuICAgIHdoaWxlKHB5ID4gc3kpe1xuICAgICAgICBsZXQgYWxwaGEgPSBkYXRhWyhweSAtIDEpICogNCArIDNdO1xuICAgICAgICBpZiAoYWxwaGEgPT09IDApIGV5ID0gcHk7XG4gICAgICAgIGVsc2Ugc3kgPSBweTtcbiAgICAgICAgcHkgPSBleSArIHN5ID4+IDE7XG4gICAgfVxuICAgIGxldCByYXRpbyA9IHB5IC8gaWg7XG4gICAgaWYgKHJhdGlvID09PSAwKSByZXR1cm4gMTtcbiAgICBlbHNlIHJldHVybiByYXRpbztcbn07XG4vLyBBIHJlcGxhY2VtZW50IGZvciBjb250ZXh0LmRyYXdJbWFnZVxuLy8gKGFyZ3MgYXJlIGZvciBzb3VyY2UgYW5kIGRlc3RpbmF0aW9uKS5cbnZhciAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkZHJhd0ltYWdlSU9TRml4ID0gZnVuY3Rpb24oY3R4LCBpbWcsIHN4LCBzeSwgc3csIHNoLCBkeCwgZHksIGR3LCBkaCkge1xuICAgIGxldCB2ZXJ0U3F1YXNoUmF0aW8gPSAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkZGV0ZWN0VmVydGljYWxTcXVhc2goaW1nKTtcbiAgICByZXR1cm4gY3R4LmRyYXdJbWFnZShpbWcsIHN4LCBzeSwgc3csIHNoLCBkeCwgZHksIGR3LCBkaCAvIHZlcnRTcXVhc2hSYXRpbyk7XG59O1xuLy8gQmFzZWQgb24gTWluaWZ5SnBlZ1xuLy8gU291cmNlOiBodHRwOi8vd3d3LnBlcnJ5LmN6L2ZpbGVzL0V4aWZSZXN0b3Jlci5qc1xuLy8gaHR0cDovL2VsaWNvbi5ibG9nNTcuZmMyLmNvbS9ibG9nLWVudHJ5LTIwNi5odG1sXG5jbGFzcyAkM2VkMjY5ZjJmMGZiMjI0YiR2YXIkRXhpZlJlc3RvcmUge1xuICAgIHN0YXRpYyBpbml0Q2xhc3MoKSB7XG4gICAgICAgIHRoaXMuS0VZX1NUUiA9IFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz1cIjtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZTY0KGlucHV0KSB7XG4gICAgICAgIGxldCBvdXRwdXQgPSBcIlwiO1xuICAgICAgICBsZXQgY2hyMSA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGNocjIgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBjaHIzID0gXCJcIjtcbiAgICAgICAgbGV0IGVuYzEgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBlbmMyID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgZW5jMyA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGVuYzQgPSBcIlwiO1xuICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgIHdoaWxlKHRydWUpe1xuICAgICAgICAgICAgY2hyMSA9IGlucHV0W2krK107XG4gICAgICAgICAgICBjaHIyID0gaW5wdXRbaSsrXTtcbiAgICAgICAgICAgIGNocjMgPSBpbnB1dFtpKytdO1xuICAgICAgICAgICAgZW5jMSA9IGNocjEgPj4gMjtcbiAgICAgICAgICAgIGVuYzIgPSAoY2hyMSAmIDMpIDw8IDQgfCBjaHIyID4+IDQ7XG4gICAgICAgICAgICBlbmMzID0gKGNocjIgJiAxNSkgPDwgMiB8IGNocjMgPj4gNjtcbiAgICAgICAgICAgIGVuYzQgPSBjaHIzICYgNjM7XG4gICAgICAgICAgICBpZiAoaXNOYU4oY2hyMikpIGVuYzMgPSBlbmM0ID0gNjQ7XG4gICAgICAgICAgICBlbHNlIGlmIChpc05hTihjaHIzKSkgZW5jNCA9IDY0O1xuICAgICAgICAgICAgb3V0cHV0ID0gb3V0cHV0ICsgdGhpcy5LRVlfU1RSLmNoYXJBdChlbmMxKSArIHRoaXMuS0VZX1NUUi5jaGFyQXQoZW5jMikgKyB0aGlzLktFWV9TVFIuY2hhckF0KGVuYzMpICsgdGhpcy5LRVlfU1RSLmNoYXJBdChlbmM0KTtcbiAgICAgICAgICAgIGNocjEgPSBjaHIyID0gY2hyMyA9IFwiXCI7XG4gICAgICAgICAgICBlbmMxID0gZW5jMiA9IGVuYzMgPSBlbmM0ID0gXCJcIjtcbiAgICAgICAgICAgIGlmICghKGkgPCBpbnB1dC5sZW5ndGgpKSBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICBzdGF0aWMgcmVzdG9yZShvcmlnRmlsZUJhc2U2NCwgcmVzaXplZEZpbGVCYXNlNjQpIHtcbiAgICAgICAgaWYgKCFvcmlnRmlsZUJhc2U2NC5tYXRjaChcImRhdGE6aW1hZ2UvanBlZztiYXNlNjQsXCIpKSByZXR1cm4gcmVzaXplZEZpbGVCYXNlNjQ7XG4gICAgICAgIGxldCByYXdJbWFnZSA9IHRoaXMuZGVjb2RlNjQob3JpZ0ZpbGVCYXNlNjQucmVwbGFjZShcImRhdGE6aW1hZ2UvanBlZztiYXNlNjQsXCIsIFwiXCIpKTtcbiAgICAgICAgbGV0IHNlZ21lbnRzID0gdGhpcy5zbGljZTJTZWdtZW50cyhyYXdJbWFnZSk7XG4gICAgICAgIGxldCBpbWFnZSA9IHRoaXMuZXhpZk1hbmlwdWxhdGlvbihyZXNpemVkRmlsZUJhc2U2NCwgc2VnbWVudHMpO1xuICAgICAgICByZXR1cm4gYGRhdGE6aW1hZ2UvanBlZztiYXNlNjQsJHt0aGlzLmVuY29kZTY0KGltYWdlKX1gO1xuICAgIH1cbiAgICBzdGF0aWMgZXhpZk1hbmlwdWxhdGlvbihyZXNpemVkRmlsZUJhc2U2NCwgc2VnbWVudHMpIHtcbiAgICAgICAgbGV0IGV4aWZBcnJheSA9IHRoaXMuZ2V0RXhpZkFycmF5KHNlZ21lbnRzKTtcbiAgICAgICAgbGV0IG5ld0ltYWdlQXJyYXkgPSB0aGlzLmluc2VydEV4aWYocmVzaXplZEZpbGVCYXNlNjQsIGV4aWZBcnJheSk7XG4gICAgICAgIGxldCBhQnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkobmV3SW1hZ2VBcnJheSk7XG4gICAgICAgIHJldHVybiBhQnVmZmVyO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0RXhpZkFycmF5KHNlZ21lbnRzKSB7XG4gICAgICAgIGxldCBzZWcgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCB4ID0gMDtcbiAgICAgICAgd2hpbGUoeCA8IHNlZ21lbnRzLmxlbmd0aCl7XG4gICAgICAgICAgICBzZWcgPSBzZWdtZW50c1t4XTtcbiAgICAgICAgICAgIGlmIChzZWdbMF0gPT09IDI1NSAmIHNlZ1sxXSA9PT0gMjI1KSByZXR1cm4gc2VnO1xuICAgICAgICAgICAgeCsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgc3RhdGljIGluc2VydEV4aWYocmVzaXplZEZpbGVCYXNlNjQsIGV4aWZBcnJheSkge1xuICAgICAgICBsZXQgaW1hZ2VEYXRhID0gcmVzaXplZEZpbGVCYXNlNjQucmVwbGFjZShcImRhdGE6aW1hZ2UvanBlZztiYXNlNjQsXCIsIFwiXCIpO1xuICAgICAgICBsZXQgYnVmID0gdGhpcy5kZWNvZGU2NChpbWFnZURhdGEpO1xuICAgICAgICBsZXQgc2VwYXJhdGVQb2ludCA9IGJ1Zi5pbmRleE9mKDI1NSwgMyk7XG4gICAgICAgIGxldCBtYWUgPSBidWYuc2xpY2UoMCwgc2VwYXJhdGVQb2ludCk7XG4gICAgICAgIGxldCBhdG8gPSBidWYuc2xpY2Uoc2VwYXJhdGVQb2ludCk7XG4gICAgICAgIGxldCBhcnJheSA9IG1hZTtcbiAgICAgICAgYXJyYXkgPSBhcnJheS5jb25jYXQoZXhpZkFycmF5KTtcbiAgICAgICAgYXJyYXkgPSBhcnJheS5jb25jYXQoYXRvKTtcbiAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgIH1cbiAgICBzdGF0aWMgc2xpY2UyU2VnbWVudHMocmF3SW1hZ2VBcnJheSkge1xuICAgICAgICBsZXQgaGVhZCA9IDA7XG4gICAgICAgIGxldCBzZWdtZW50cyA9IFtdO1xuICAgICAgICB3aGlsZSh0cnVlKXtcbiAgICAgICAgICAgIHZhciBsZW5ndGg7XG4gICAgICAgICAgICBpZiAocmF3SW1hZ2VBcnJheVtoZWFkXSA9PT0gMjU1ICYgcmF3SW1hZ2VBcnJheVtoZWFkICsgMV0gPT09IDIxOCkgYnJlYWs7XG4gICAgICAgICAgICBpZiAocmF3SW1hZ2VBcnJheVtoZWFkXSA9PT0gMjU1ICYgcmF3SW1hZ2VBcnJheVtoZWFkICsgMV0gPT09IDIxNikgaGVhZCArPSAyO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGVuZ3RoID0gcmF3SW1hZ2VBcnJheVtoZWFkICsgMl0gKiAyNTYgKyByYXdJbWFnZUFycmF5W2hlYWQgKyAzXTtcbiAgICAgICAgICAgICAgICBsZXQgZW5kUG9pbnQgPSBoZWFkICsgbGVuZ3RoICsgMjtcbiAgICAgICAgICAgICAgICBsZXQgc2VnID0gcmF3SW1hZ2VBcnJheS5zbGljZShoZWFkLCBlbmRQb2ludCk7XG4gICAgICAgICAgICAgICAgc2VnbWVudHMucHVzaChzZWcpO1xuICAgICAgICAgICAgICAgIGhlYWQgPSBlbmRQb2ludDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChoZWFkID4gcmF3SW1hZ2VBcnJheS5sZW5ndGgpIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZWdtZW50cztcbiAgICB9XG4gICAgc3RhdGljIGRlY29kZTY0KGlucHV0KSB7XG4gICAgICAgIGxldCBvdXRwdXQgPSBcIlwiO1xuICAgICAgICBsZXQgY2hyMSA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGNocjIgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBjaHIzID0gXCJcIjtcbiAgICAgICAgbGV0IGVuYzEgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBlbmMyID0gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgZW5jMyA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGVuYzQgPSBcIlwiO1xuICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgIGxldCBidWYgPSBbXTtcbiAgICAgICAgLy8gcmVtb3ZlIGFsbCBjaGFyYWN0ZXJzIHRoYXQgYXJlIG5vdCBBLVosIGEteiwgMC05LCArLCAvLCBvciA9XG4gICAgICAgIGxldCBiYXNlNjR0ZXN0ID0gL1teQS1aYS16MC05XFwrXFwvXFw9XS9nO1xuICAgICAgICBpZiAoYmFzZTY0dGVzdC5leGVjKGlucHV0KSkgY29uc29sZS53YXJuKFwiVGhlcmUgd2VyZSBpbnZhbGlkIGJhc2U2NCBjaGFyYWN0ZXJzIGluIHRoZSBpbnB1dCB0ZXh0LlxcblZhbGlkIGJhc2U2NCBjaGFyYWN0ZXJzIGFyZSBBLVosIGEteiwgMC05LCAnKycsICcvJyxhbmQgJz0nXFxuRXhwZWN0IGVycm9ycyBpbiBkZWNvZGluZy5cIik7XG4gICAgICAgIGlucHV0ID0gaW5wdXQucmVwbGFjZSgvW15BLVphLXowLTlcXCtcXC9cXD1dL2csIFwiXCIpO1xuICAgICAgICB3aGlsZSh0cnVlKXtcbiAgICAgICAgICAgIGVuYzEgPSB0aGlzLktFWV9TVFIuaW5kZXhPZihpbnB1dC5jaGFyQXQoaSsrKSk7XG4gICAgICAgICAgICBlbmMyID0gdGhpcy5LRVlfU1RSLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO1xuICAgICAgICAgICAgZW5jMyA9IHRoaXMuS0VZX1NUUi5pbmRleE9mKGlucHV0LmNoYXJBdChpKyspKTtcbiAgICAgICAgICAgIGVuYzQgPSB0aGlzLktFWV9TVFIuaW5kZXhPZihpbnB1dC5jaGFyQXQoaSsrKSk7XG4gICAgICAgICAgICBjaHIxID0gZW5jMSA8PCAyIHwgZW5jMiA+PiA0O1xuICAgICAgICAgICAgY2hyMiA9IChlbmMyICYgMTUpIDw8IDQgfCBlbmMzID4+IDI7XG4gICAgICAgICAgICBjaHIzID0gKGVuYzMgJiAzKSA8PCA2IHwgZW5jNDtcbiAgICAgICAgICAgIGJ1Zi5wdXNoKGNocjEpO1xuICAgICAgICAgICAgaWYgKGVuYzMgIT09IDY0KSBidWYucHVzaChjaHIyKTtcbiAgICAgICAgICAgIGlmIChlbmM0ICE9PSA2NCkgYnVmLnB1c2goY2hyMyk7XG4gICAgICAgICAgICBjaHIxID0gY2hyMiA9IGNocjMgPSBcIlwiO1xuICAgICAgICAgICAgZW5jMSA9IGVuYzIgPSBlbmMzID0gZW5jNCA9IFwiXCI7XG4gICAgICAgICAgICBpZiAoIShpIDwgaW5wdXQubGVuZ3RoKSkgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ1ZjtcbiAgICB9XG59XG4kM2VkMjY5ZjJmMGZiMjI0YiR2YXIkRXhpZlJlc3RvcmUuaW5pdENsYXNzKCk7XG4vKlxuICogY29udGVudGxvYWRlZC5qc1xuICpcbiAqIEF1dGhvcjogRGllZ28gUGVyaW5pIChkaWVnby5wZXJpbmkgYXQgZ21haWwuY29tKVxuICogU3VtbWFyeTogY3Jvc3MtYnJvd3NlciB3cmFwcGVyIGZvciBET01Db250ZW50TG9hZGVkXG4gKiBVcGRhdGVkOiAyMDEwMTAyMFxuICogTGljZW5zZTogTUlUXG4gKiBWZXJzaW9uOiAxLjJcbiAqXG4gKiBVUkw6XG4gKiBodHRwOi8vamF2YXNjcmlwdC5ud2JveC5jb20vQ29udGVudExvYWRlZC9cbiAqIGh0dHA6Ly9qYXZhc2NyaXB0Lm53Ym94LmNvbS9Db250ZW50TG9hZGVkL01JVC1MSUNFTlNFXG4gKi8gLy8gQHdpbiB3aW5kb3cgcmVmZXJlbmNlXG4vLyBAZm4gZnVuY3Rpb24gcmVmZXJlbmNlXG5sZXQgJDNlZDI2OWYyZjBmYjIyNGIkdmFyJGNvbnRlbnRMb2FkZWQgPSBmdW5jdGlvbih3aW4sIGZuKSB7XG4gICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICBsZXQgdG9wID0gdHJ1ZTtcbiAgICBsZXQgZG9jID0gd2luLmRvY3VtZW50O1xuICAgIGxldCByb290ID0gZG9jLmRvY3VtZW50RWxlbWVudDtcbiAgICBsZXQgYWRkID0gZG9jLmFkZEV2ZW50TGlzdGVuZXIgPyBcImFkZEV2ZW50TGlzdGVuZXJcIiA6IFwiYXR0YWNoRXZlbnRcIjtcbiAgICBsZXQgcmVtID0gZG9jLmFkZEV2ZW50TGlzdGVuZXIgPyBcInJlbW92ZUV2ZW50TGlzdGVuZXJcIiA6IFwiZGV0YWNoRXZlbnRcIjtcbiAgICBsZXQgcHJlID0gZG9jLmFkZEV2ZW50TGlzdGVuZXIgPyBcIlwiIDogXCJvblwiO1xuICAgIHZhciBpbml0ID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBpZiAoZS50eXBlID09PSBcInJlYWR5c3RhdGVjaGFuZ2VcIiAmJiBkb2MucmVhZHlTdGF0ZSAhPT0gXCJjb21wbGV0ZVwiKSByZXR1cm47XG4gICAgICAgIChlLnR5cGUgPT09IFwibG9hZFwiID8gd2luIDogZG9jKVtyZW1dKHByZSArIGUudHlwZSwgaW5pdCwgZmFsc2UpO1xuICAgICAgICBpZiAoIWRvbmUgJiYgKGRvbmUgPSB0cnVlKSkgcmV0dXJuIGZuLmNhbGwod2luLCBlLnR5cGUgfHwgZSk7XG4gICAgfTtcbiAgICB2YXIgcG9sbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcm9vdC5kb1Njcm9sbChcImxlZnRcIik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQocG9sbCwgNTApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbml0KFwicG9sbFwiKTtcbiAgICB9O1xuICAgIGlmIChkb2MucmVhZHlTdGF0ZSAhPT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgIGlmIChkb2MuY3JlYXRlRXZlbnRPYmplY3QgJiYgcm9vdC5kb1Njcm9sbCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0b3AgPSAhd2luLmZyYW1lRWxlbWVudDtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodG9wKSBwb2xsKCk7XG4gICAgICAgIH1cbiAgICAgICAgZG9jW2FkZF0ocHJlICsgXCJET01Db250ZW50TG9hZGVkXCIsIGluaXQsIGZhbHNlKTtcbiAgICAgICAgZG9jW2FkZF0ocHJlICsgXCJyZWFkeXN0YXRlY2hhbmdlXCIsIGluaXQsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIHdpblthZGRdKHByZSArIFwibG9hZFwiLCBpbml0LCBmYWxzZSk7XG4gICAgfVxufTtcbmZ1bmN0aW9uICQzZWQyNjlmMmYwZmIyMjRiJHZhciRfX2d1YXJkX18odmFsdWUsIHRyYW5zZm9ybSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgIT09IFwidW5kZWZpbmVkXCIgJiYgdmFsdWUgIT09IG51bGwgPyB0cmFuc2Zvcm0odmFsdWUpIDogdW5kZWZpbmVkO1xufVxuZnVuY3Rpb24gJDNlZDI2OWYyZjBmYjIyNGIkdmFyJF9fZ3VhcmRNZXRob2RfXyhvYmosIG1ldGhvZE5hbWUsIHRyYW5zZm9ybSkge1xuICAgIGlmICh0eXBlb2Ygb2JqICE9PSBcInVuZGVmaW5lZFwiICYmIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqW21ldGhvZE5hbWVdID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cmFuc2Zvcm0ob2JqLCBtZXRob2ROYW1lKTtcbiAgICBlbHNlIHJldHVybiB1bmRlZmluZWQ7XG59XG5cblxuZXhwb3J0IHskM2VkMjY5ZjJmMGZiMjI0YiRleHBvcnQkMmUyYmNkODczOWFlMDM5IGFzIGRlZmF1bHQsICQzZWQyNjlmMmYwZmIyMjRiJGV4cG9ydCQyZTJiY2Q4NzM5YWUwMzkgYXMgRHJvcHpvbmV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHJvcHpvbmUubWpzLm1hcFxuIiwiaW1wb3J0IHsgRHJvcHpvbmUgfSBmcm9tIFwiZHJvcHpvbmVcIjtcclxuXHJcbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYuZm9ybV9fZHJvcHpvbmUnKSkge1xyXG4gIGNvbnN0IGRyb3B6b25lID0gbmV3IERyb3B6b25lKFwiZGl2LmZvcm1fX2Ryb3B6b25lXCIsIHtcclxuICAgIHVybDogXCIvZmlsZS9wb3N0XCIsXHJcbiAgICBjcmVhdGVJbWFnZVRodW1ibmFpbHM6IGZhbHNlLFxyXG4gICAgZGljdERlZmF1bHRNZXNzYWdlOiAnSGVyZSdcclxuICB9KTtcclxufVxyXG4iLCJleHBvcnQgY29uc3QgSE9PS1MgPSBbXG4gICAgXCJvbkNoYW5nZVwiLFxuICAgIFwib25DbG9zZVwiLFxuICAgIFwib25EYXlDcmVhdGVcIixcbiAgICBcIm9uRGVzdHJveVwiLFxuICAgIFwib25LZXlEb3duXCIsXG4gICAgXCJvbk1vbnRoQ2hhbmdlXCIsXG4gICAgXCJvbk9wZW5cIixcbiAgICBcIm9uUGFyc2VDb25maWdcIixcbiAgICBcIm9uUmVhZHlcIixcbiAgICBcIm9uVmFsdWVVcGRhdGVcIixcbiAgICBcIm9uWWVhckNoYW5nZVwiLFxuICAgIFwib25QcmVDYWxlbmRhclBvc2l0aW9uXCIsXG5dO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRzID0ge1xuICAgIF9kaXNhYmxlOiBbXSxcbiAgICBhbGxvd0lucHV0OiBmYWxzZSxcbiAgICBhbGxvd0ludmFsaWRQcmVsb2FkOiBmYWxzZSxcbiAgICBhbHRGb3JtYXQ6IFwiRiBqLCBZXCIsXG4gICAgYWx0SW5wdXQ6IGZhbHNlLFxuICAgIGFsdElucHV0Q2xhc3M6IFwiZm9ybS1jb250cm9sIGlucHV0XCIsXG4gICAgYW5pbWF0ZTogdHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKFwiTVNJRVwiKSA9PT0gLTEsXG4gICAgYXJpYURhdGVGb3JtYXQ6IFwiRiBqLCBZXCIsXG4gICAgYXV0b0ZpbGxEZWZhdWx0VGltZTogdHJ1ZSxcbiAgICBjbGlja09wZW5zOiB0cnVlLFxuICAgIGNsb3NlT25TZWxlY3Q6IHRydWUsXG4gICAgY29uanVuY3Rpb246IFwiLCBcIixcbiAgICBkYXRlRm9ybWF0OiBcIlktbS1kXCIsXG4gICAgZGVmYXVsdEhvdXI6IDEyLFxuICAgIGRlZmF1bHRNaW51dGU6IDAsXG4gICAgZGVmYXVsdFNlY29uZHM6IDAsXG4gICAgZGlzYWJsZTogW10sXG4gICAgZGlzYWJsZU1vYmlsZTogZmFsc2UsXG4gICAgZW5hYmxlU2Vjb25kczogZmFsc2UsXG4gICAgZW5hYmxlVGltZTogZmFsc2UsXG4gICAgZXJyb3JIYW5kbGVyOiAoZXJyKSA9PiB0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb25zb2xlLndhcm4oZXJyKSxcbiAgICBnZXRXZWVrOiAoZ2l2ZW5EYXRlKSA9PiB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShnaXZlbkRhdGUuZ2V0VGltZSgpKTtcbiAgICAgICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgMyAtICgoZGF0ZS5nZXREYXkoKSArIDYpICUgNykpO1xuICAgICAgICB2YXIgd2VlazEgPSBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIDAsIDQpO1xuICAgICAgICByZXR1cm4gKDEgK1xuICAgICAgICAgICAgTWF0aC5yb3VuZCgoKGRhdGUuZ2V0VGltZSgpIC0gd2VlazEuZ2V0VGltZSgpKSAvIDg2NDAwMDAwIC1cbiAgICAgICAgICAgICAgICAzICtcbiAgICAgICAgICAgICAgICAoKHdlZWsxLmdldERheSgpICsgNikgJSA3KSkgL1xuICAgICAgICAgICAgICAgIDcpKTtcbiAgICB9LFxuICAgIGhvdXJJbmNyZW1lbnQ6IDEsXG4gICAgaWdub3JlZEZvY3VzRWxlbWVudHM6IFtdLFxuICAgIGlubGluZTogZmFsc2UsXG4gICAgbG9jYWxlOiBcImRlZmF1bHRcIixcbiAgICBtaW51dGVJbmNyZW1lbnQ6IDUsXG4gICAgbW9kZTogXCJzaW5nbGVcIixcbiAgICBtb250aFNlbGVjdG9yVHlwZTogXCJkcm9wZG93blwiLFxuICAgIG5leHRBcnJvdzogXCI8c3ZnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycgdmlld0JveD0nMCAwIDE3IDE3Jz48Zz48L2c+PHBhdGggZD0nTTEzLjIwNyA4LjQ3MmwtNy44NTQgNy44NTQtMC43MDctMC43MDcgNy4xNDYtNy4xNDYtNy4xNDYtNy4xNDggMC43MDctMC43MDcgNy44NTQgNy44NTR6JyAvPjwvc3ZnPlwiLFxuICAgIG5vQ2FsZW5kYXI6IGZhbHNlLFxuICAgIG5vdzogbmV3IERhdGUoKSxcbiAgICBvbkNoYW5nZTogW10sXG4gICAgb25DbG9zZTogW10sXG4gICAgb25EYXlDcmVhdGU6IFtdLFxuICAgIG9uRGVzdHJveTogW10sXG4gICAgb25LZXlEb3duOiBbXSxcbiAgICBvbk1vbnRoQ2hhbmdlOiBbXSxcbiAgICBvbk9wZW46IFtdLFxuICAgIG9uUGFyc2VDb25maWc6IFtdLFxuICAgIG9uUmVhZHk6IFtdLFxuICAgIG9uVmFsdWVVcGRhdGU6IFtdLFxuICAgIG9uWWVhckNoYW5nZTogW10sXG4gICAgb25QcmVDYWxlbmRhclBvc2l0aW9uOiBbXSxcbiAgICBwbHVnaW5zOiBbXSxcbiAgICBwb3NpdGlvbjogXCJhdXRvXCIsXG4gICAgcG9zaXRpb25FbGVtZW50OiB1bmRlZmluZWQsXG4gICAgcHJldkFycm93OiBcIjxzdmcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB2aWV3Qm94PScwIDAgMTcgMTcnPjxnPjwvZz48cGF0aCBkPSdNNS4yMDcgOC40NzFsNy4xNDYgNy4xNDctMC43MDcgMC43MDctNy44NTMtNy44NTQgNy44NTQtNy44NTMgMC43MDcgMC43MDctNy4xNDcgNy4xNDZ6JyAvPjwvc3ZnPlwiLFxuICAgIHNob3J0aGFuZEN1cnJlbnRNb250aDogZmFsc2UsXG4gICAgc2hvd01vbnRoczogMSxcbiAgICBzdGF0aWM6IGZhbHNlLFxuICAgIHRpbWVfMjRocjogZmFsc2UsXG4gICAgd2Vla051bWJlcnM6IGZhbHNlLFxuICAgIHdyYXA6IGZhbHNlLFxufTtcbiIsImV4cG9ydCBjb25zdCBlbmdsaXNoID0ge1xuICAgIHdlZWtkYXlzOiB7XG4gICAgICAgIHNob3J0aGFuZDogW1wiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCIsIFwiRnJpXCIsIFwiU2F0XCJdLFxuICAgICAgICBsb25naGFuZDogW1xuICAgICAgICAgICAgXCJTdW5kYXlcIixcbiAgICAgICAgICAgIFwiTW9uZGF5XCIsXG4gICAgICAgICAgICBcIlR1ZXNkYXlcIixcbiAgICAgICAgICAgIFwiV2VkbmVzZGF5XCIsXG4gICAgICAgICAgICBcIlRodXJzZGF5XCIsXG4gICAgICAgICAgICBcIkZyaWRheVwiLFxuICAgICAgICAgICAgXCJTYXR1cmRheVwiLFxuICAgICAgICBdLFxuICAgIH0sXG4gICAgbW9udGhzOiB7XG4gICAgICAgIHNob3J0aGFuZDogW1xuICAgICAgICAgICAgXCJKYW5cIixcbiAgICAgICAgICAgIFwiRmViXCIsXG4gICAgICAgICAgICBcIk1hclwiLFxuICAgICAgICAgICAgXCJBcHJcIixcbiAgICAgICAgICAgIFwiTWF5XCIsXG4gICAgICAgICAgICBcIkp1blwiLFxuICAgICAgICAgICAgXCJKdWxcIixcbiAgICAgICAgICAgIFwiQXVnXCIsXG4gICAgICAgICAgICBcIlNlcFwiLFxuICAgICAgICAgICAgXCJPY3RcIixcbiAgICAgICAgICAgIFwiTm92XCIsXG4gICAgICAgICAgICBcIkRlY1wiLFxuICAgICAgICBdLFxuICAgICAgICBsb25naGFuZDogW1xuICAgICAgICAgICAgXCJKYW51YXJ5XCIsXG4gICAgICAgICAgICBcIkZlYnJ1YXJ5XCIsXG4gICAgICAgICAgICBcIk1hcmNoXCIsXG4gICAgICAgICAgICBcIkFwcmlsXCIsXG4gICAgICAgICAgICBcIk1heVwiLFxuICAgICAgICAgICAgXCJKdW5lXCIsXG4gICAgICAgICAgICBcIkp1bHlcIixcbiAgICAgICAgICAgIFwiQXVndXN0XCIsXG4gICAgICAgICAgICBcIlNlcHRlbWJlclwiLFxuICAgICAgICAgICAgXCJPY3RvYmVyXCIsXG4gICAgICAgICAgICBcIk5vdmVtYmVyXCIsXG4gICAgICAgICAgICBcIkRlY2VtYmVyXCIsXG4gICAgICAgIF0sXG4gICAgfSxcbiAgICBkYXlzSW5Nb250aDogWzMxLCAyOCwgMzEsIDMwLCAzMSwgMzAsIDMxLCAzMSwgMzAsIDMxLCAzMCwgMzFdLFxuICAgIGZpcnN0RGF5T2ZXZWVrOiAwLFxuICAgIG9yZGluYWw6IChudGgpID0+IHtcbiAgICAgICAgY29uc3QgcyA9IG50aCAlIDEwMDtcbiAgICAgICAgaWYgKHMgPiAzICYmIHMgPCAyMSlcbiAgICAgICAgICAgIHJldHVybiBcInRoXCI7XG4gICAgICAgIHN3aXRjaCAocyAlIDEwKSB7XG4gICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3RcIjtcbiAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJuZFwiO1xuICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgIHJldHVybiBcInJkXCI7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBcInRoXCI7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHJhbmdlU2VwYXJhdG9yOiBcIiB0byBcIixcbiAgICB3ZWVrQWJicmV2aWF0aW9uOiBcIldrXCIsXG4gICAgc2Nyb2xsVGl0bGU6IFwiU2Nyb2xsIHRvIGluY3JlbWVudFwiLFxuICAgIHRvZ2dsZVRpdGxlOiBcIkNsaWNrIHRvIHRvZ2dsZVwiLFxuICAgIGFtUE06IFtcIkFNXCIsIFwiUE1cIl0sXG4gICAgeWVhckFyaWFMYWJlbDogXCJZZWFyXCIsXG4gICAgbW9udGhBcmlhTGFiZWw6IFwiTW9udGhcIixcbiAgICBob3VyQXJpYUxhYmVsOiBcIkhvdXJcIixcbiAgICBtaW51dGVBcmlhTGFiZWw6IFwiTWludXRlXCIsXG4gICAgdGltZV8yNGhyOiBmYWxzZSxcbn07XG5leHBvcnQgZGVmYXVsdCBlbmdsaXNoO1xuIiwiZXhwb3J0IGNvbnN0IHBhZCA9IChudW1iZXIsIGxlbmd0aCA9IDIpID0+IGAwMDAke251bWJlcn1gLnNsaWNlKGxlbmd0aCAqIC0xKTtcbmV4cG9ydCBjb25zdCBpbnQgPSAoYm9vbCkgPT4gKGJvb2wgPT09IHRydWUgPyAxIDogMCk7XG5leHBvcnQgZnVuY3Rpb24gZGVib3VuY2UoZm4sIHdhaXQpIHtcbiAgICBsZXQgdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodCk7XG4gICAgICAgIHQgPSBzZXRUaW1lb3V0KCgpID0+IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHdhaXQpO1xuICAgIH07XG59XG5leHBvcnQgY29uc3QgYXJyYXlpZnkgPSAob2JqKSA9PiBvYmogaW5zdGFuY2VvZiBBcnJheSA/IG9iaiA6IFtvYmpdO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZUNsYXNzKGVsZW0sIGNsYXNzTmFtZSwgYm9vbCkge1xuICAgIGlmIChib29sID09PSB0cnVlKVxuICAgICAgICByZXR1cm4gZWxlbS5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0YWcsIGNsYXNzTmFtZSwgY29udGVudCkge1xuICAgIGNvbnN0IGUgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICAgIGNsYXNzTmFtZSA9IGNsYXNzTmFtZSB8fCBcIlwiO1xuICAgIGNvbnRlbnQgPSBjb250ZW50IHx8IFwiXCI7XG4gICAgZS5jbGFzc05hbWUgPSBjbGFzc05hbWU7XG4gICAgaWYgKGNvbnRlbnQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgZS50ZXh0Q29udGVudCA9IGNvbnRlbnQ7XG4gICAgcmV0dXJuIGU7XG59XG5leHBvcnQgZnVuY3Rpb24gY2xlYXJOb2RlKG5vZGUpIHtcbiAgICB3aGlsZSAobm9kZS5maXJzdENoaWxkKVxuICAgICAgICBub2RlLnJlbW92ZUNoaWxkKG5vZGUuZmlyc3RDaGlsZCk7XG59XG5leHBvcnQgZnVuY3Rpb24gZmluZFBhcmVudChub2RlLCBjb25kaXRpb24pIHtcbiAgICBpZiAoY29uZGl0aW9uKG5vZGUpKVxuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICBlbHNlIGlmIChub2RlLnBhcmVudE5vZGUpXG4gICAgICAgIHJldHVybiBmaW5kUGFyZW50KG5vZGUucGFyZW50Tm9kZSwgY29uZGl0aW9uKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU51bWJlcklucHV0KGlucHV0Q2xhc3NOYW1lLCBvcHRzKSB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJudW1JbnB1dFdyYXBwZXJcIiksIG51bUlucHV0ID0gY3JlYXRlRWxlbWVudChcImlucHV0XCIsIFwibnVtSW5wdXQgXCIgKyBpbnB1dENsYXNzTmFtZSksIGFycm93VXAgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImFycm93VXBcIiksIGFycm93RG93biA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiYXJyb3dEb3duXCIpO1xuICAgIGlmIChuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJNU0lFIDkuMFwiKSA9PT0gLTEpIHtcbiAgICAgICAgbnVtSW5wdXQudHlwZSA9IFwibnVtYmVyXCI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBudW1JbnB1dC50eXBlID0gXCJ0ZXh0XCI7XG4gICAgICAgIG51bUlucHV0LnBhdHRlcm4gPSBcIlxcXFxkKlwiO1xuICAgIH1cbiAgICBpZiAob3B0cyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBvcHRzKVxuICAgICAgICAgICAgbnVtSW5wdXQuc2V0QXR0cmlidXRlKGtleSwgb3B0c1trZXldKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG51bUlucHV0KTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGFycm93VXApO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoYXJyb3dEb3duKTtcbiAgICByZXR1cm4gd3JhcHBlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudFRhcmdldChldmVudCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgZXZlbnQuY29tcG9zZWRQYXRoID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBldmVudC5jb21wb3NlZFBhdGgoKTtcbiAgICAgICAgICAgIHJldHVybiBwYXRoWzBdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBldmVudC50YXJnZXQ7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gZXZlbnQudGFyZ2V0O1xuICAgIH1cbn1cbiIsImltcG9ydCB7IGludCwgcGFkIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5jb25zdCBkb05vdGhpbmcgPSAoKSA9PiB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgbW9udGhUb1N0ciA9IChtb250aE51bWJlciwgc2hvcnRoYW5kLCBsb2NhbGUpID0+IGxvY2FsZS5tb250aHNbc2hvcnRoYW5kID8gXCJzaG9ydGhhbmRcIiA6IFwibG9uZ2hhbmRcIl1bbW9udGhOdW1iZXJdO1xuZXhwb3J0IGNvbnN0IHJldkZvcm1hdCA9IHtcbiAgICBEOiBkb05vdGhpbmcsXG4gICAgRjogZnVuY3Rpb24gKGRhdGVPYmosIG1vbnRoTmFtZSwgbG9jYWxlKSB7XG4gICAgICAgIGRhdGVPYmouc2V0TW9udGgobG9jYWxlLm1vbnRocy5sb25naGFuZC5pbmRleE9mKG1vbnRoTmFtZSkpO1xuICAgIH0sXG4gICAgRzogKGRhdGVPYmosIGhvdXIpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXRIb3VycyhwYXJzZUZsb2F0KGhvdXIpKTtcbiAgICB9LFxuICAgIEg6IChkYXRlT2JqLCBob3VyKSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0SG91cnMocGFyc2VGbG9hdChob3VyKSk7XG4gICAgfSxcbiAgICBKOiAoZGF0ZU9iaiwgZGF5KSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0RGF0ZShwYXJzZUZsb2F0KGRheSkpO1xuICAgIH0sXG4gICAgSzogKGRhdGVPYmosIGFtUE0sIGxvY2FsZSkgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldEhvdXJzKChkYXRlT2JqLmdldEhvdXJzKCkgJSAxMikgK1xuICAgICAgICAgICAgMTIgKiBpbnQobmV3IFJlZ0V4cChsb2NhbGUuYW1QTVsxXSwgXCJpXCIpLnRlc3QoYW1QTSkpKTtcbiAgICB9LFxuICAgIE06IGZ1bmN0aW9uIChkYXRlT2JqLCBzaG9ydE1vbnRoLCBsb2NhbGUpIHtcbiAgICAgICAgZGF0ZU9iai5zZXRNb250aChsb2NhbGUubW9udGhzLnNob3J0aGFuZC5pbmRleE9mKHNob3J0TW9udGgpKTtcbiAgICB9LFxuICAgIFM6IChkYXRlT2JqLCBzZWNvbmRzKSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0U2Vjb25kcyhwYXJzZUZsb2F0KHNlY29uZHMpKTtcbiAgICB9LFxuICAgIFU6IChfLCB1bml4U2Vjb25kcykgPT4gbmV3IERhdGUocGFyc2VGbG9hdCh1bml4U2Vjb25kcykgKiAxMDAwKSxcbiAgICBXOiBmdW5jdGlvbiAoZGF0ZU9iaiwgd2Vla051bSwgbG9jYWxlKSB7XG4gICAgICAgIGNvbnN0IHdlZWtOdW1iZXIgPSBwYXJzZUludCh3ZWVrTnVtKTtcbiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKGRhdGVPYmouZ2V0RnVsbFllYXIoKSwgMCwgMiArICh3ZWVrTnVtYmVyIC0gMSkgKiA3LCAwLCAwLCAwLCAwKTtcbiAgICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gZGF0ZS5nZXREYXkoKSArIGxvY2FsZS5maXJzdERheU9mV2Vlayk7XG4gICAgICAgIHJldHVybiBkYXRlO1xuICAgIH0sXG4gICAgWTogKGRhdGVPYmosIHllYXIpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXRGdWxsWWVhcihwYXJzZUZsb2F0KHllYXIpKTtcbiAgICB9LFxuICAgIFo6IChfLCBJU09EYXRlKSA9PiBuZXcgRGF0ZShJU09EYXRlKSxcbiAgICBkOiAoZGF0ZU9iaiwgZGF5KSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0RGF0ZShwYXJzZUZsb2F0KGRheSkpO1xuICAgIH0sXG4gICAgaDogKGRhdGVPYmosIGhvdXIpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXRIb3VycyhwYXJzZUZsb2F0KGhvdXIpKTtcbiAgICB9LFxuICAgIGk6IChkYXRlT2JqLCBtaW51dGVzKSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0TWludXRlcyhwYXJzZUZsb2F0KG1pbnV0ZXMpKTtcbiAgICB9LFxuICAgIGo6IChkYXRlT2JqLCBkYXkpID0+IHtcbiAgICAgICAgZGF0ZU9iai5zZXREYXRlKHBhcnNlRmxvYXQoZGF5KSk7XG4gICAgfSxcbiAgICBsOiBkb05vdGhpbmcsXG4gICAgbTogKGRhdGVPYmosIG1vbnRoKSA9PiB7XG4gICAgICAgIGRhdGVPYmouc2V0TW9udGgocGFyc2VGbG9hdChtb250aCkgLSAxKTtcbiAgICB9LFxuICAgIG46IChkYXRlT2JqLCBtb250aCkgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldE1vbnRoKHBhcnNlRmxvYXQobW9udGgpIC0gMSk7XG4gICAgfSxcbiAgICBzOiAoZGF0ZU9iaiwgc2Vjb25kcykgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldFNlY29uZHMocGFyc2VGbG9hdChzZWNvbmRzKSk7XG4gICAgfSxcbiAgICB1OiAoXywgdW5peE1pbGxTZWNvbmRzKSA9PiBuZXcgRGF0ZShwYXJzZUZsb2F0KHVuaXhNaWxsU2Vjb25kcykpLFxuICAgIHc6IGRvTm90aGluZyxcbiAgICB5OiAoZGF0ZU9iaiwgeWVhcikgPT4ge1xuICAgICAgICBkYXRlT2JqLnNldEZ1bGxZZWFyKDIwMDAgKyBwYXJzZUZsb2F0KHllYXIpKTtcbiAgICB9LFxufTtcbmV4cG9ydCBjb25zdCB0b2tlblJlZ2V4ID0ge1xuICAgIEQ6IFwiKFxcXFx3KylcIixcbiAgICBGOiBcIihcXFxcdyspXCIsXG4gICAgRzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBIOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIEo6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXFxcXHcrXCIsXG4gICAgSzogXCJcIixcbiAgICBNOiBcIihcXFxcdyspXCIsXG4gICAgUzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBVOiBcIiguKylcIixcbiAgICBXOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIFk6IFwiKFxcXFxkezR9KVwiLFxuICAgIFo6IFwiKC4rKVwiLFxuICAgIGQ6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgaDogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBpOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIGo6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgbDogXCIoXFxcXHcrKVwiLFxuICAgIG06IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgbjogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBzOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIHU6IFwiKC4rKVwiLFxuICAgIHc6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgeTogXCIoXFxcXGR7Mn0pXCIsXG59O1xuZXhwb3J0IGNvbnN0IGZvcm1hdHMgPSB7XG4gICAgWjogKGRhdGUpID0+IGRhdGUudG9JU09TdHJpbmcoKSxcbiAgICBEOiBmdW5jdGlvbiAoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUud2Vla2RheXMuc2hvcnRoYW5kW2Zvcm1hdHMudyhkYXRlLCBsb2NhbGUsIG9wdGlvbnMpXTtcbiAgICB9LFxuICAgIEY6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG1vbnRoVG9TdHIoZm9ybWF0cy5uKGRhdGUsIGxvY2FsZSwgb3B0aW9ucykgLSAxLCBmYWxzZSwgbG9jYWxlKTtcbiAgICB9LFxuICAgIEc6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHBhZChmb3JtYXRzLmgoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSk7XG4gICAgfSxcbiAgICBIOiAoZGF0ZSkgPT4gcGFkKGRhdGUuZ2V0SG91cnMoKSksXG4gICAgSjogZnVuY3Rpb24gKGRhdGUsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLm9yZGluYWwgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBkYXRlLmdldERhdGUoKSArIGxvY2FsZS5vcmRpbmFsKGRhdGUuZ2V0RGF0ZSgpKVxuICAgICAgICAgICAgOiBkYXRlLmdldERhdGUoKTtcbiAgICB9LFxuICAgIEs6IChkYXRlLCBsb2NhbGUpID0+IGxvY2FsZS5hbVBNW2ludChkYXRlLmdldEhvdXJzKCkgPiAxMSldLFxuICAgIE06IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIG1vbnRoVG9TdHIoZGF0ZS5nZXRNb250aCgpLCB0cnVlLCBsb2NhbGUpO1xuICAgIH0sXG4gICAgUzogKGRhdGUpID0+IHBhZChkYXRlLmdldFNlY29uZHMoKSksXG4gICAgVTogKGRhdGUpID0+IGRhdGUuZ2V0VGltZSgpIC8gMTAwMCxcbiAgICBXOiBmdW5jdGlvbiAoZGF0ZSwgXywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5nZXRXZWVrKGRhdGUpO1xuICAgIH0sXG4gICAgWTogKGRhdGUpID0+IHBhZChkYXRlLmdldEZ1bGxZZWFyKCksIDQpLFxuICAgIGQ6IChkYXRlKSA9PiBwYWQoZGF0ZS5nZXREYXRlKCkpLFxuICAgIGg6IChkYXRlKSA9PiAoZGF0ZS5nZXRIb3VycygpICUgMTIgPyBkYXRlLmdldEhvdXJzKCkgJSAxMiA6IDEyKSxcbiAgICBpOiAoZGF0ZSkgPT4gcGFkKGRhdGUuZ2V0TWludXRlcygpKSxcbiAgICBqOiAoZGF0ZSkgPT4gZGF0ZS5nZXREYXRlKCksXG4gICAgbDogZnVuY3Rpb24gKGRhdGUsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLndlZWtkYXlzLmxvbmdoYW5kW2RhdGUuZ2V0RGF5KCldO1xuICAgIH0sXG4gICAgbTogKGRhdGUpID0+IHBhZChkYXRlLmdldE1vbnRoKCkgKyAxKSxcbiAgICBuOiAoZGF0ZSkgPT4gZGF0ZS5nZXRNb250aCgpICsgMSxcbiAgICBzOiAoZGF0ZSkgPT4gZGF0ZS5nZXRTZWNvbmRzKCksXG4gICAgdTogKGRhdGUpID0+IGRhdGUuZ2V0VGltZSgpLFxuICAgIHc6IChkYXRlKSA9PiBkYXRlLmdldERheSgpLFxuICAgIHk6IChkYXRlKSA9PiBTdHJpbmcoZGF0ZS5nZXRGdWxsWWVhcigpKS5zdWJzdHJpbmcoMiksXG59O1xuIiwiaW1wb3J0IHsgdG9rZW5SZWdleCwgcmV2Rm9ybWF0LCBmb3JtYXRzLCB9IGZyb20gXCIuL2Zvcm1hdHRpbmdcIjtcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSBcIi4uL3R5cGVzL29wdGlvbnNcIjtcbmltcG9ydCB7IGVuZ2xpc2ggfSBmcm9tIFwiLi4vbDEwbi9kZWZhdWx0XCI7XG5leHBvcnQgY29uc3QgY3JlYXRlRGF0ZUZvcm1hdHRlciA9ICh7IGNvbmZpZyA9IGRlZmF1bHRzLCBsMTBuID0gZW5nbGlzaCwgaXNNb2JpbGUgPSBmYWxzZSwgfSkgPT4gKGRhdGVPYmosIGZybXQsIG92ZXJyaWRlTG9jYWxlKSA9PiB7XG4gICAgY29uc3QgbG9jYWxlID0gb3ZlcnJpZGVMb2NhbGUgfHwgbDEwbjtcbiAgICBpZiAoY29uZmlnLmZvcm1hdERhdGUgIT09IHVuZGVmaW5lZCAmJiAhaXNNb2JpbGUpIHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZy5mb3JtYXREYXRlKGRhdGVPYmosIGZybXQsIGxvY2FsZSk7XG4gICAgfVxuICAgIHJldHVybiBmcm10XG4gICAgICAgIC5zcGxpdChcIlwiKVxuICAgICAgICAubWFwKChjLCBpLCBhcnIpID0+IGZvcm1hdHNbY10gJiYgYXJyW2kgLSAxXSAhPT0gXCJcXFxcXCJcbiAgICAgICAgPyBmb3JtYXRzW2NdKGRhdGVPYmosIGxvY2FsZSwgY29uZmlnKVxuICAgICAgICA6IGMgIT09IFwiXFxcXFwiXG4gICAgICAgICAgICA/IGNcbiAgICAgICAgICAgIDogXCJcIilcbiAgICAgICAgLmpvaW4oXCJcIik7XG59O1xuZXhwb3J0IGNvbnN0IGNyZWF0ZURhdGVQYXJzZXIgPSAoeyBjb25maWcgPSBkZWZhdWx0cywgbDEwbiA9IGVuZ2xpc2ggfSkgPT4gKGRhdGUsIGdpdmVuRm9ybWF0LCB0aW1lbGVzcywgY3VzdG9tTG9jYWxlKSA9PiB7XG4gICAgaWYgKGRhdGUgIT09IDAgJiYgIWRhdGUpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgY29uc3QgbG9jYWxlID0gY3VzdG9tTG9jYWxlIHx8IGwxMG47XG4gICAgbGV0IHBhcnNlZERhdGU7XG4gICAgY29uc3QgZGF0ZU9yaWcgPSBkYXRlO1xuICAgIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSlcbiAgICAgICAgcGFyc2VkRGF0ZSA9IG5ldyBEYXRlKGRhdGUuZ2V0VGltZSgpKTtcbiAgICBlbHNlIGlmICh0eXBlb2YgZGF0ZSAhPT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICBkYXRlLnRvRml4ZWQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgcGFyc2VkRGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICAgIGVsc2UgaWYgKHR5cGVvZiBkYXRlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IGZvcm1hdCA9IGdpdmVuRm9ybWF0IHx8IChjb25maWcgfHwgZGVmYXVsdHMpLmRhdGVGb3JtYXQ7XG4gICAgICAgIGNvbnN0IGRhdGVzdHIgPSBTdHJpbmcoZGF0ZSkudHJpbSgpO1xuICAgICAgICBpZiAoZGF0ZXN0ciA9PT0gXCJ0b2RheVwiKSB7XG4gICAgICAgICAgICBwYXJzZWREYXRlID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIHRpbWVsZXNzID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgvWiQvLnRlc3QoZGF0ZXN0cikgfHxcbiAgICAgICAgICAgIC9HTVQkLy50ZXN0KGRhdGVzdHIpKVxuICAgICAgICAgICAgcGFyc2VkRGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICAgICAgICBlbHNlIGlmIChjb25maWcgJiYgY29uZmlnLnBhcnNlRGF0ZSlcbiAgICAgICAgICAgIHBhcnNlZERhdGUgPSBjb25maWcucGFyc2VEYXRlKGRhdGUsIGZvcm1hdCk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcGFyc2VkRGF0ZSA9XG4gICAgICAgICAgICAgICAgIWNvbmZpZyB8fCAhY29uZmlnLm5vQ2FsZW5kYXJcbiAgICAgICAgICAgICAgICAgICAgPyBuZXcgRGF0ZShuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCksIDAsIDEsIDAsIDAsIDAsIDApXG4gICAgICAgICAgICAgICAgICAgIDogbmV3IERhdGUobmV3IERhdGUoKS5zZXRIb3VycygwLCAwLCAwLCAwKSk7XG4gICAgICAgICAgICBsZXQgbWF0Y2hlZCwgb3BzID0gW107XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbWF0Y2hJbmRleCA9IDAsIHJlZ2V4U3RyID0gXCJcIjsgaSA8IGZvcm1hdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRva2VuID0gZm9ybWF0W2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IGlzQmFja1NsYXNoID0gdG9rZW4gPT09IFwiXFxcXFwiO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVzY2FwZWQgPSBmb3JtYXRbaSAtIDFdID09PSBcIlxcXFxcIiB8fCBpc0JhY2tTbGFzaDtcbiAgICAgICAgICAgICAgICBpZiAodG9rZW5SZWdleFt0b2tlbl0gJiYgIWVzY2FwZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVnZXhTdHIgKz0gdG9rZW5SZWdleFt0b2tlbl07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gbmV3IFJlZ0V4cChyZWdleFN0cikuZXhlYyhkYXRlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoICYmIChtYXRjaGVkID0gdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wc1t0b2tlbiAhPT0gXCJZXCIgPyBcInB1c2hcIiA6IFwidW5zaGlmdFwiXSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IHJldkZvcm1hdFt0b2tlbl0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsOiBtYXRjaFsrK21hdGNoSW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoIWlzQmFja1NsYXNoKVxuICAgICAgICAgICAgICAgICAgICByZWdleFN0ciArPSBcIi5cIjtcbiAgICAgICAgICAgICAgICBvcHMuZm9yRWFjaCgoeyBmbiwgdmFsIH0pID0+IChwYXJzZWREYXRlID0gZm4ocGFyc2VkRGF0ZSwgdmFsLCBsb2NhbGUpIHx8IHBhcnNlZERhdGUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcnNlZERhdGUgPSBtYXRjaGVkID8gcGFyc2VkRGF0ZSA6IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIShwYXJzZWREYXRlIGluc3RhbmNlb2YgRGF0ZSAmJiAhaXNOYU4ocGFyc2VkRGF0ZS5nZXRUaW1lKCkpKSkge1xuICAgICAgICBjb25maWcuZXJyb3JIYW5kbGVyKG5ldyBFcnJvcihgSW52YWxpZCBkYXRlIHByb3ZpZGVkOiAke2RhdGVPcmlnfWApKTtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHRpbWVsZXNzID09PSB0cnVlKVxuICAgICAgICBwYXJzZWREYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgIHJldHVybiBwYXJzZWREYXRlO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlRGF0ZXMoZGF0ZTEsIGRhdGUyLCB0aW1lbGVzcyA9IHRydWUpIHtcbiAgICBpZiAodGltZWxlc3MgIT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiAobmV3IERhdGUoZGF0ZTEuZ2V0VGltZSgpKS5zZXRIb3VycygwLCAwLCAwLCAwKSAtXG4gICAgICAgICAgICBuZXcgRGF0ZShkYXRlMi5nZXRUaW1lKCkpLnNldEhvdXJzKDAsIDAsIDAsIDApKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGUxLmdldFRpbWUoKSAtIGRhdGUyLmdldFRpbWUoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlVGltZXMoZGF0ZTEsIGRhdGUyKSB7XG4gICAgcmV0dXJuICgzNjAwICogKGRhdGUxLmdldEhvdXJzKCkgLSBkYXRlMi5nZXRIb3VycygpKSArXG4gICAgICAgIDYwICogKGRhdGUxLmdldE1pbnV0ZXMoKSAtIGRhdGUyLmdldE1pbnV0ZXMoKSkgK1xuICAgICAgICBkYXRlMS5nZXRTZWNvbmRzKCkgLVxuICAgICAgICBkYXRlMi5nZXRTZWNvbmRzKCkpO1xufVxuZXhwb3J0IGNvbnN0IGlzQmV0d2VlbiA9ICh0cywgdHMxLCB0czIpID0+IHtcbiAgICByZXR1cm4gdHMgPiBNYXRoLm1pbih0czEsIHRzMikgJiYgdHMgPCBNYXRoLm1heCh0czEsIHRzMik7XG59O1xuZXhwb3J0IGNvbnN0IGR1cmF0aW9uID0ge1xuICAgIERBWTogODY0MDAwMDAsXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRIb3Vycyhjb25maWcpIHtcbiAgICBsZXQgaG91cnMgPSBjb25maWcuZGVmYXVsdEhvdXI7XG4gICAgbGV0IG1pbnV0ZXMgPSBjb25maWcuZGVmYXVsdE1pbnV0ZTtcbiAgICBsZXQgc2Vjb25kcyA9IGNvbmZpZy5kZWZhdWx0U2Vjb25kcztcbiAgICBpZiAoY29uZmlnLm1pbkRhdGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBtaW5Ib3VyID0gY29uZmlnLm1pbkRhdGUuZ2V0SG91cnMoKTtcbiAgICAgICAgY29uc3QgbWluTWludXRlcyA9IGNvbmZpZy5taW5EYXRlLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgY29uc3QgbWluU2Vjb25kcyA9IGNvbmZpZy5taW5EYXRlLmdldFNlY29uZHMoKTtcbiAgICAgICAgaWYgKGhvdXJzIDwgbWluSG91cikge1xuICAgICAgICAgICAgaG91cnMgPSBtaW5Ib3VyO1xuICAgICAgICB9XG4gICAgICAgIGlmIChob3VycyA9PT0gbWluSG91ciAmJiBtaW51dGVzIDwgbWluTWludXRlcykge1xuICAgICAgICAgICAgbWludXRlcyA9IG1pbk1pbnV0ZXM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhvdXJzID09PSBtaW5Ib3VyICYmIG1pbnV0ZXMgPT09IG1pbk1pbnV0ZXMgJiYgc2Vjb25kcyA8IG1pblNlY29uZHMpXG4gICAgICAgICAgICBzZWNvbmRzID0gY29uZmlnLm1pbkRhdGUuZ2V0U2Vjb25kcygpO1xuICAgIH1cbiAgICBpZiAoY29uZmlnLm1heERhdGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBtYXhIciA9IGNvbmZpZy5tYXhEYXRlLmdldEhvdXJzKCk7XG4gICAgICAgIGNvbnN0IG1heE1pbnV0ZXMgPSBjb25maWcubWF4RGF0ZS5nZXRNaW51dGVzKCk7XG4gICAgICAgIGhvdXJzID0gTWF0aC5taW4oaG91cnMsIG1heEhyKTtcbiAgICAgICAgaWYgKGhvdXJzID09PSBtYXhIcilcbiAgICAgICAgICAgIG1pbnV0ZXMgPSBNYXRoLm1pbihtYXhNaW51dGVzLCBtaW51dGVzKTtcbiAgICAgICAgaWYgKGhvdXJzID09PSBtYXhIciAmJiBtaW51dGVzID09PSBtYXhNaW51dGVzKVxuICAgICAgICAgICAgc2Vjb25kcyA9IGNvbmZpZy5tYXhEYXRlLmdldFNlY29uZHMoKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMgfTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuaWYgKHR5cGVvZiBPYmplY3QuYXNzaWduICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBPYmplY3QuYXNzaWduID0gZnVuY3Rpb24gKHRhcmdldCwgLi4uYXJncykge1xuICAgICAgICBpZiAoIXRhcmdldCkge1xuICAgICAgICAgICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0XCIpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3Qgc291cmNlIG9mIGFyZ3MpIHtcbiAgICAgICAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhzb3VyY2UpLmZvckVhY2goKGtleSkgPT4gKHRhcmdldFtrZXldID0gc291cmNlW2tleV0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH07XG59XG4iLCJpbXBvcnQgeyBkZWZhdWx0cyBhcyBkZWZhdWx0T3B0aW9ucywgSE9PS1MsIH0gZnJvbSBcIi4vdHlwZXMvb3B0aW9uc1wiO1xuaW1wb3J0IEVuZ2xpc2ggZnJvbSBcIi4vbDEwbi9kZWZhdWx0XCI7XG5pbXBvcnQgeyBhcnJheWlmeSwgZGVib3VuY2UsIGludCwgcGFkIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCB7IGNsZWFyTm9kZSwgY3JlYXRlRWxlbWVudCwgY3JlYXRlTnVtYmVySW5wdXQsIGZpbmRQYXJlbnQsIHRvZ2dsZUNsYXNzLCBnZXRFdmVudFRhcmdldCwgfSBmcm9tIFwiLi91dGlscy9kb21cIjtcbmltcG9ydCB7IGNvbXBhcmVEYXRlcywgY3JlYXRlRGF0ZVBhcnNlciwgY3JlYXRlRGF0ZUZvcm1hdHRlciwgZHVyYXRpb24sIGlzQmV0d2VlbiwgZ2V0RGVmYXVsdEhvdXJzLCB9IGZyb20gXCIuL3V0aWxzL2RhdGVzXCI7XG5pbXBvcnQgeyB0b2tlblJlZ2V4LCBtb250aFRvU3RyIH0gZnJvbSBcIi4vdXRpbHMvZm9ybWF0dGluZ1wiO1xuaW1wb3J0IFwiLi91dGlscy9wb2x5ZmlsbHNcIjtcbmNvbnN0IERFQk9VTkNFRF9DSEFOR0VfTVMgPSAzMDA7XG5mdW5jdGlvbiBGbGF0cGlja3JJbnN0YW5jZShlbGVtZW50LCBpbnN0YW5jZUNvbmZpZykge1xuICAgIGNvbnN0IHNlbGYgPSB7XG4gICAgICAgIGNvbmZpZzogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0T3B0aW9ucyksIGZsYXRwaWNrci5kZWZhdWx0Q29uZmlnKSxcbiAgICAgICAgbDEwbjogRW5nbGlzaCxcbiAgICB9O1xuICAgIHNlbGYucGFyc2VEYXRlID0gY3JlYXRlRGF0ZVBhcnNlcih7IGNvbmZpZzogc2VsZi5jb25maWcsIGwxMG46IHNlbGYubDEwbiB9KTtcbiAgICBzZWxmLl9oYW5kbGVycyA9IFtdO1xuICAgIHNlbGYucGx1Z2luRWxlbWVudHMgPSBbXTtcbiAgICBzZWxmLmxvYWRlZFBsdWdpbnMgPSBbXTtcbiAgICBzZWxmLl9iaW5kID0gYmluZDtcbiAgICBzZWxmLl9zZXRIb3Vyc0Zyb21EYXRlID0gc2V0SG91cnNGcm9tRGF0ZTtcbiAgICBzZWxmLl9wb3NpdGlvbkNhbGVuZGFyID0gcG9zaXRpb25DYWxlbmRhcjtcbiAgICBzZWxmLmNoYW5nZU1vbnRoID0gY2hhbmdlTW9udGg7XG4gICAgc2VsZi5jaGFuZ2VZZWFyID0gY2hhbmdlWWVhcjtcbiAgICBzZWxmLmNsZWFyID0gY2xlYXI7XG4gICAgc2VsZi5jbG9zZSA9IGNsb3NlO1xuICAgIHNlbGYuX2NyZWF0ZUVsZW1lbnQgPSBjcmVhdGVFbGVtZW50O1xuICAgIHNlbGYuZGVzdHJveSA9IGRlc3Ryb3k7XG4gICAgc2VsZi5pc0VuYWJsZWQgPSBpc0VuYWJsZWQ7XG4gICAgc2VsZi5qdW1wVG9EYXRlID0ganVtcFRvRGF0ZTtcbiAgICBzZWxmLm9wZW4gPSBvcGVuO1xuICAgIHNlbGYucmVkcmF3ID0gcmVkcmF3O1xuICAgIHNlbGYuc2V0ID0gc2V0O1xuICAgIHNlbGYuc2V0RGF0ZSA9IHNldERhdGU7XG4gICAgc2VsZi50b2dnbGUgPSB0b2dnbGU7XG4gICAgZnVuY3Rpb24gc2V0dXBIZWxwZXJGdW5jdGlvbnMoKSB7XG4gICAgICAgIHNlbGYudXRpbHMgPSB7XG4gICAgICAgICAgICBnZXREYXlzSW5Nb250aChtb250aCA9IHNlbGYuY3VycmVudE1vbnRoLCB5ciA9IHNlbGYuY3VycmVudFllYXIpIHtcbiAgICAgICAgICAgICAgICBpZiAobW9udGggPT09IDEgJiYgKCh5ciAlIDQgPT09IDAgJiYgeXIgJSAxMDAgIT09IDApIHx8IHlyICUgNDAwID09PSAwKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDI5O1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLmwxMG4uZGF5c0luTW9udGhbbW9udGhdO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgc2VsZi5lbGVtZW50ID0gc2VsZi5pbnB1dCA9IGVsZW1lbnQ7XG4gICAgICAgIHNlbGYuaXNPcGVuID0gZmFsc2U7XG4gICAgICAgIHBhcnNlQ29uZmlnKCk7XG4gICAgICAgIHNldHVwTG9jYWxlKCk7XG4gICAgICAgIHNldHVwSW5wdXRzKCk7XG4gICAgICAgIHNldHVwRGF0ZXMoKTtcbiAgICAgICAgc2V0dXBIZWxwZXJGdW5jdGlvbnMoKTtcbiAgICAgICAgaWYgKCFzZWxmLmlzTW9iaWxlKVxuICAgICAgICAgICAgYnVpbGQoKTtcbiAgICAgICAgYmluZEV2ZW50cygpO1xuICAgICAgICBpZiAoc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCB8fCBzZWxmLmNvbmZpZy5ub0NhbGVuZGFyKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcuZW5hYmxlVGltZSkge1xuICAgICAgICAgICAgICAgIHNldEhvdXJzRnJvbURhdGUoc2VsZi5jb25maWcubm9DYWxlbmRhciA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqIDogdW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVwZGF0ZVZhbHVlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRDYWxlbmRhcldpZHRoKCk7XG4gICAgICAgIGNvbnN0IGlzU2FmYXJpID0gL14oKD8hY2hyb21lfGFuZHJvaWQpLikqc2FmYXJpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgICAgaWYgKCFzZWxmLmlzTW9iaWxlICYmIGlzU2FmYXJpKSB7XG4gICAgICAgICAgICBwb3NpdGlvbkNhbGVuZGFyKCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25SZWFkeVwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYmluZFRvSW5zdGFuY2UoZm4pIHtcbiAgICAgICAgcmV0dXJuIGZuLmJpbmQoc2VsZik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldENhbGVuZGFyV2lkdGgoKSB7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IHNlbGYuY29uZmlnO1xuICAgICAgICBpZiAoY29uZmlnLndlZWtOdW1iZXJzID09PSBmYWxzZSAmJiBjb25maWcuc2hvd01vbnRocyA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvbmZpZy5ub0NhbGVuZGFyICE9PSB0cnVlKSB7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jYWxlbmRhckNvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRheXNXaWR0aCA9IChzZWxmLmRheXMub2Zmc2V0V2lkdGggKyAxKSAqIGNvbmZpZy5zaG93TW9udGhzO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIuc3R5bGUud2lkdGggPSBkYXlzV2lkdGggKyBcInB4XCI7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUud2lkdGggPVxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5c1dpZHRoICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc2VsZi53ZWVrV3JhcHBlciAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gc2VsZi53ZWVrV3JhcHBlci5vZmZzZXRXaWR0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IDApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInB4XCI7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJ2aXNpYmlsaXR5XCIpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJlbW92ZVByb3BlcnR5KFwiZGlzcGxheVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB1cGRhdGVUaW1lKGUpIHtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbnN0IGRlZmF1bHREYXRlID0gc2VsZi5jb25maWcubWluRGF0ZSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgY29tcGFyZURhdGVzKG5ldyBEYXRlKCksIHNlbGYuY29uZmlnLm1pbkRhdGUpID49IDBcbiAgICAgICAgICAgICAgICA/IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgICA6IG5ldyBEYXRlKHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0VGltZSgpKTtcbiAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRzID0gZ2V0RGVmYXVsdEhvdXJzKHNlbGYuY29uZmlnKTtcbiAgICAgICAgICAgIGRlZmF1bHREYXRlLnNldEhvdXJzKGRlZmF1bHRzLmhvdXJzLCBkZWZhdWx0cy5taW51dGVzLCBkZWZhdWx0cy5zZWNvbmRzLCBkZWZhdWx0RGF0ZS5nZXRNaWxsaXNlY29uZHMoKSk7XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSBbZGVmYXVsdERhdGVdO1xuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogPSBkZWZhdWx0RGF0ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZSAhPT0gdW5kZWZpbmVkICYmIGUudHlwZSAhPT0gXCJibHVyXCIpIHtcbiAgICAgICAgICAgIHRpbWVXcmFwcGVyKGUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByZXZWYWx1ZSA9IHNlbGYuX2lucHV0LnZhbHVlO1xuICAgICAgICBzZXRIb3Vyc0Zyb21JbnB1dHMoKTtcbiAgICAgICAgdXBkYXRlVmFsdWUoKTtcbiAgICAgICAgaWYgKHNlbGYuX2lucHV0LnZhbHVlICE9PSBwcmV2VmFsdWUpIHtcbiAgICAgICAgICAgIHNlbGYuX2RlYm91bmNlZENoYW5nZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFtcG0ybWlsaXRhcnkoaG91ciwgYW1QTSkge1xuICAgICAgICByZXR1cm4gKGhvdXIgJSAxMikgKyAxMiAqIGludChhbVBNID09PSBzZWxmLmwxMG4uYW1QTVsxXSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1pbGl0YXJ5MmFtcG0oaG91cikge1xuICAgICAgICBzd2l0Y2ggKGhvdXIgJSAyNCkge1xuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMTI7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBob3VyICUgMTI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0SG91cnNGcm9tSW5wdXRzKCkge1xuICAgICAgICBpZiAoc2VsZi5ob3VyRWxlbWVudCA9PT0gdW5kZWZpbmVkIHx8IHNlbGYubWludXRlRWxlbWVudCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBsZXQgaG91cnMgPSAocGFyc2VJbnQoc2VsZi5ob3VyRWxlbWVudC52YWx1ZS5zbGljZSgtMiksIDEwKSB8fCAwKSAlIDI0LCBtaW51dGVzID0gKHBhcnNlSW50KHNlbGYubWludXRlRWxlbWVudC52YWx1ZSwgMTApIHx8IDApICUgNjAsIHNlY29uZHMgPSBzZWxmLnNlY29uZEVsZW1lbnQgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyAocGFyc2VJbnQoc2VsZi5zZWNvbmRFbGVtZW50LnZhbHVlLCAxMCkgfHwgMCkgJSA2MFxuICAgICAgICAgICAgOiAwO1xuICAgICAgICBpZiAoc2VsZi5hbVBNICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGhvdXJzID0gYW1wbTJtaWxpdGFyeShob3Vycywgc2VsZi5hbVBNLnRleHRDb250ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsaW1pdE1pbkhvdXJzID0gc2VsZi5jb25maWcubWluVGltZSAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgICAgIHNlbGYubWluRGF0ZUhhc1RpbWUgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiAmJlxuICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiwgc2VsZi5jb25maWcubWluRGF0ZSwgdHJ1ZSkgPT09XG4gICAgICAgICAgICAgICAgICAgIDApO1xuICAgICAgICBjb25zdCBsaW1pdE1heEhvdXJzID0gc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIHNlbGYubWF4RGF0ZUhhc1RpbWUgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiAmJlxuICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiwgc2VsZi5jb25maWcubWF4RGF0ZSwgdHJ1ZSkgPT09XG4gICAgICAgICAgICAgICAgICAgIDApO1xuICAgICAgICBpZiAobGltaXRNYXhIb3Vycykge1xuICAgICAgICAgICAgY29uc3QgbWF4VGltZSA9IHNlbGYuY29uZmlnLm1heFRpbWUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWF4VGltZVxuICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcubWF4RGF0ZTtcbiAgICAgICAgICAgIGhvdXJzID0gTWF0aC5taW4oaG91cnMsIG1heFRpbWUuZ2V0SG91cnMoKSk7XG4gICAgICAgICAgICBpZiAoaG91cnMgPT09IG1heFRpbWUuZ2V0SG91cnMoKSlcbiAgICAgICAgICAgICAgICBtaW51dGVzID0gTWF0aC5taW4obWludXRlcywgbWF4VGltZS5nZXRNaW51dGVzKCkpO1xuICAgICAgICAgICAgaWYgKG1pbnV0ZXMgPT09IG1heFRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgIHNlY29uZHMgPSBNYXRoLm1pbihzZWNvbmRzLCBtYXhUaW1lLmdldFNlY29uZHMoKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxpbWl0TWluSG91cnMpIHtcbiAgICAgICAgICAgIGNvbnN0IG1pblRpbWUgPSBzZWxmLmNvbmZpZy5taW5UaW1lICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1pblRpbWVcbiAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1pbkRhdGU7XG4gICAgICAgICAgICBob3VycyA9IE1hdGgubWF4KGhvdXJzLCBtaW5UaW1lLmdldEhvdXJzKCkpO1xuICAgICAgICAgICAgaWYgKGhvdXJzID09PSBtaW5UaW1lLmdldEhvdXJzKCkgJiYgbWludXRlcyA8IG1pblRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSBtaW5UaW1lLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgICAgIGlmIChtaW51dGVzID09PSBtaW5UaW1lLmdldE1pbnV0ZXMoKSlcbiAgICAgICAgICAgICAgICBzZWNvbmRzID0gTWF0aC5tYXgoc2Vjb25kcywgbWluVGltZS5nZXRTZWNvbmRzKCkpO1xuICAgICAgICB9XG4gICAgICAgIHNldEhvdXJzKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0SG91cnNGcm9tRGF0ZShkYXRlT2JqKSB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSBkYXRlT2JqIHx8IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqO1xuICAgICAgICBpZiAoZGF0ZSkge1xuICAgICAgICAgICAgc2V0SG91cnMoZGF0ZS5nZXRIb3VycygpLCBkYXRlLmdldE1pbnV0ZXMoKSwgZGF0ZS5nZXRTZWNvbmRzKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldEhvdXJzKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKSB7XG4gICAgICAgIGlmIChzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iai5zZXRIb3Vycyhob3VycyAlIDI0LCBtaW51dGVzLCBzZWNvbmRzIHx8IDAsIDApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsZi5ob3VyRWxlbWVudCB8fCAhc2VsZi5taW51dGVFbGVtZW50IHx8IHNlbGYuaXNNb2JpbGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYuaG91ckVsZW1lbnQudmFsdWUgPSBwYWQoIXNlbGYuY29uZmlnLnRpbWVfMjRoclxuICAgICAgICAgICAgPyAoKDEyICsgaG91cnMpICUgMTIpICsgMTIgKiBpbnQoaG91cnMgJSAxMiA9PT0gMClcbiAgICAgICAgICAgIDogaG91cnMpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQudmFsdWUgPSBwYWQobWludXRlcyk7XG4gICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNlbGYuYW1QTS50ZXh0Q29udGVudCA9IHNlbGYubDEwbi5hbVBNW2ludChob3VycyA+PSAxMildO1xuICAgICAgICBpZiAoc2VsZi5zZWNvbmRFbGVtZW50ICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQudmFsdWUgPSBwYWQoc2Vjb25kcyk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uWWVhcklucHV0KGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZXZlbnQpO1xuICAgICAgICBjb25zdCB5ZWFyID0gcGFyc2VJbnQoZXZlbnRUYXJnZXQudmFsdWUpICsgKGV2ZW50LmRlbHRhIHx8IDApO1xuICAgICAgICBpZiAoeWVhciAvIDEwMDAgPiAxIHx8XG4gICAgICAgICAgICAoZXZlbnQua2V5ID09PSBcIkVudGVyXCIgJiYgIS9bXlxcZF0vLnRlc3QoeWVhci50b1N0cmluZygpKSkpIHtcbiAgICAgICAgICAgIGNoYW5nZVllYXIoeWVhcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYmluZChlbGVtZW50LCBldmVudCwgaGFuZGxlciwgb3B0aW9ucykge1xuICAgICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgICAgIHJldHVybiBldmVudC5mb3JFYWNoKChldikgPT4gYmluZChlbGVtZW50LCBldiwgaGFuZGxlciwgb3B0aW9ucykpO1xuICAgICAgICBpZiAoZWxlbWVudCBpbnN0YW5jZW9mIEFycmF5KVxuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZm9yRWFjaCgoZWwpID0+IGJpbmQoZWwsIGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKSk7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgICAgIHNlbGYuX2hhbmRsZXJzLnB1c2goe1xuICAgICAgICAgICAgcmVtb3ZlOiAoKSA9PiBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIpLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHJpZ2dlckNoYW5nZSgpIHtcbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DaGFuZ2VcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJpbmRFdmVudHMoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy53cmFwKSB7XG4gICAgICAgICAgICBbXCJvcGVuXCIsIFwiY2xvc2VcIiwgXCJ0b2dnbGVcIiwgXCJjbGVhclwiXS5mb3JFYWNoKChldnQpID0+IHtcbiAgICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHNlbGYuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGBbZGF0YS0ke2V2dH1dYCksIChlbCkgPT4gYmluZChlbCwgXCJjbGlja1wiLCBzZWxmW2V2dF0pKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmlzTW9iaWxlKSB7XG4gICAgICAgICAgICBzZXR1cE1vYmlsZSgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRlYm91bmNlZFJlc2l6ZSA9IGRlYm91bmNlKG9uUmVzaXplLCA1MCk7XG4gICAgICAgIHNlbGYuX2RlYm91bmNlZENoYW5nZSA9IGRlYm91bmNlKHRyaWdnZXJDaGFuZ2UsIERFQk9VTkNFRF9DSEFOR0VfTVMpO1xuICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyICYmICEvaVBob25lfGlQYWR8aVBvZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpXG4gICAgICAgICAgICBiaW5kKHNlbGYuZGF5c0NvbnRhaW5lciwgXCJtb3VzZW92ZXJcIiwgKGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKVxuICAgICAgICAgICAgICAgICAgICBvbk1vdXNlT3ZlcihnZXRFdmVudFRhcmdldChlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgYmluZCh3aW5kb3cuZG9jdW1lbnQuYm9keSwgXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIGlmICghc2VsZi5jb25maWcuaW5saW5lICYmICFzZWxmLmNvbmZpZy5zdGF0aWMpXG4gICAgICAgICAgICBiaW5kKHdpbmRvdywgXCJyZXNpemVcIiwgZGVib3VuY2VkUmVzaXplKTtcbiAgICAgICAgaWYgKHdpbmRvdy5vbnRvdWNoc3RhcnQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIGJpbmQod2luZG93LmRvY3VtZW50LCBcInRvdWNoc3RhcnRcIiwgZG9jdW1lbnRDbGljayk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGJpbmQod2luZG93LmRvY3VtZW50LCBcIm1vdXNlZG93blwiLCBkb2N1bWVudENsaWNrKTtcbiAgICAgICAgYmluZCh3aW5kb3cuZG9jdW1lbnQsIFwiZm9jdXNcIiwgZG9jdW1lbnRDbGljaywgeyBjYXB0dXJlOiB0cnVlIH0pO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuY2xpY2tPcGVucyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJmb2N1c1wiLCBzZWxmLm9wZW4pO1xuICAgICAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJjbGlja1wiLCBzZWxmLm9wZW4pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYmluZChzZWxmLm1vbnRoTmF2LCBcImNsaWNrXCIsIG9uTW9udGhOYXZDbGljayk7XG4gICAgICAgICAgICBiaW5kKHNlbGYubW9udGhOYXYsIFtcImtleXVwXCIsIFwiaW5jcmVtZW50XCJdLCBvblllYXJJbnB1dCk7XG4gICAgICAgICAgICBiaW5kKHNlbGYuZGF5c0NvbnRhaW5lciwgXCJjbGlja1wiLCBzZWxlY3REYXRlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi50aW1lQ29udGFpbmVyICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHNlbGYubWludXRlRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmhvdXJFbGVtZW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlbFRleHQgPSAoZSkgPT4gZ2V0RXZlbnRUYXJnZXQoZSkuc2VsZWN0KCk7XG4gICAgICAgICAgICBiaW5kKHNlbGYudGltZUNvbnRhaW5lciwgW1wiaW5jcmVtZW50XCJdLCB1cGRhdGVUaW1lKTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi50aW1lQ29udGFpbmVyLCBcImJsdXJcIiwgdXBkYXRlVGltZSwgeyBjYXB0dXJlOiB0cnVlIH0pO1xuICAgICAgICAgICAgYmluZChzZWxmLnRpbWVDb250YWluZXIsIFwiY2xpY2tcIiwgdGltZUluY3JlbWVudCk7XG4gICAgICAgICAgICBiaW5kKFtzZWxmLmhvdXJFbGVtZW50LCBzZWxmLm1pbnV0ZUVsZW1lbnRdLCBbXCJmb2N1c1wiLCBcImNsaWNrXCJdLCBzZWxUZXh0KTtcbiAgICAgICAgICAgIGlmIChzZWxmLnNlY29uZEVsZW1lbnQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICBiaW5kKHNlbGYuc2Vjb25kRWxlbWVudCwgXCJmb2N1c1wiLCAoKSA9PiBzZWxmLnNlY29uZEVsZW1lbnQgJiYgc2VsZi5zZWNvbmRFbGVtZW50LnNlbGVjdCgpKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGJpbmQoc2VsZi5hbVBNLCBcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRpbWUoZSk7XG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXJDaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcuYWxsb3dJbnB1dCkge1xuICAgICAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJibHVyXCIsIG9uQmx1cik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24ganVtcFRvRGF0ZShqdW1wRGF0ZSwgdHJpZ2dlckNoYW5nZSkge1xuICAgICAgICBjb25zdCBqdW1wVG8gPSBqdW1wRGF0ZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICA/IHNlbGYucGFyc2VEYXRlKGp1bXBEYXRlKVxuICAgICAgICAgICAgOiBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiB8fFxuICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5taW5EYXRlICYmIHNlbGYuY29uZmlnLm1pbkRhdGUgPiBzZWxmLm5vd1xuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1pbkRhdGVcbiAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5tYXhEYXRlICYmIHNlbGYuY29uZmlnLm1heERhdGUgPCBzZWxmLm5vd1xuICAgICAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5tYXhEYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHNlbGYubm93KTtcbiAgICAgICAgY29uc3Qgb2xkWWVhciA9IHNlbGYuY3VycmVudFllYXI7XG4gICAgICAgIGNvbnN0IG9sZE1vbnRoID0gc2VsZi5jdXJyZW50TW9udGg7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoanVtcFRvICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID0ganVtcFRvLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggPSBqdW1wVG8uZ2V0TW9udGgoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgZS5tZXNzYWdlID0gXCJJbnZhbGlkIGRhdGUgc3VwcGxpZWQ6IFwiICsganVtcFRvO1xuICAgICAgICAgICAgc2VsZi5jb25maWcuZXJyb3JIYW5kbGVyKGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0cmlnZ2VyQ2hhbmdlICYmIHNlbGYuY3VycmVudFllYXIgIT09IG9sZFllYXIpIHtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uWWVhckNoYW5nZVwiKTtcbiAgICAgICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSAmJlxuICAgICAgICAgICAgKHNlbGYuY3VycmVudFllYXIgIT09IG9sZFllYXIgfHwgc2VsZi5jdXJyZW50TW9udGggIT09IG9sZE1vbnRoKSkge1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25Nb250aENoYW5nZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLnJlZHJhdygpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0aW1lSW5jcmVtZW50KGUpIHtcbiAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgaWYgKH5ldmVudFRhcmdldC5jbGFzc05hbWUuaW5kZXhPZihcImFycm93XCIpKVxuICAgICAgICAgICAgaW5jcmVtZW50TnVtSW5wdXQoZSwgZXZlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYXJyb3dVcFwiKSA/IDEgOiAtMSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGluY3JlbWVudE51bUlucHV0KGUsIGRlbHRhLCBpbnB1dEVsZW0pIHtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gZSAmJiBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgY29uc3QgaW5wdXQgPSBpbnB1dEVsZW0gfHxcbiAgICAgICAgICAgICh0YXJnZXQgJiYgdGFyZ2V0LnBhcmVudE5vZGUgJiYgdGFyZ2V0LnBhcmVudE5vZGUuZmlyc3RDaGlsZCk7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlRXZlbnQoXCJpbmNyZW1lbnRcIik7XG4gICAgICAgIGV2ZW50LmRlbHRhID0gZGVsdGE7XG4gICAgICAgIGlucHV0ICYmIGlucHV0LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZCgpIHtcbiAgICAgICAgY29uc3QgZnJhZ21lbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1jYWxlbmRhclwiKTtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci50YWJJbmRleCA9IC0xO1xuICAgICAgICBpZiAoIXNlbGYuY29uZmlnLm5vQ2FsZW5kYXIpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGJ1aWxkTW9udGhOYXYoKSk7XG4gICAgICAgICAgICBzZWxmLmlubmVyQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1pbm5lckNvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy53ZWVrTnVtYmVycykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgd2Vla1dyYXBwZXIsIHdlZWtOdW1iZXJzIH0gPSBidWlsZFdlZWtzKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5pbm5lckNvbnRhaW5lci5hcHBlbmRDaGlsZCh3ZWVrV3JhcHBlcik7XG4gICAgICAgICAgICAgICAgc2VsZi53ZWVrTnVtYmVycyA9IHdlZWtOdW1iZXJzO1xuICAgICAgICAgICAgICAgIHNlbGYud2Vla1dyYXBwZXIgPSB3ZWVrV3JhcHBlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYuckNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItckNvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIHNlbGYuckNvbnRhaW5lci5hcHBlbmRDaGlsZChidWlsZFdlZWtkYXlzKCkpO1xuICAgICAgICAgICAgaWYgKCFzZWxmLmRheXNDb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLWRheXNcIik7XG4gICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyLnRhYkluZGV4ID0gLTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBidWlsZERheXMoKTtcbiAgICAgICAgICAgIHNlbGYuckNvbnRhaW5lci5hcHBlbmRDaGlsZChzZWxmLmRheXNDb250YWluZXIpO1xuICAgICAgICAgICAgc2VsZi5pbm5lckNvbnRhaW5lci5hcHBlbmRDaGlsZChzZWxmLnJDb250YWluZXIpO1xuICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoc2VsZi5pbm5lckNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGJ1aWxkVGltZSgpKTtcbiAgICAgICAgfVxuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcInJhbmdlTW9kZVwiLCBzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIpO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFuaW1hdGVcIiwgc2VsZi5jb25maWcuYW5pbWF0ZSA9PT0gdHJ1ZSk7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwibXVsdGlNb250aFwiLCBzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSk7XG4gICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuICAgICAgICBjb25zdCBjdXN0b21BcHBlbmQgPSBzZWxmLmNvbmZpZy5hcHBlbmRUbyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5hcHBlbmRUby5ub2RlVHlwZSAhPT0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuaW5saW5lIHx8IHNlbGYuY29uZmlnLnN0YXRpYykge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHNlbGYuY29uZmlnLmlubGluZSA/IFwiaW5saW5lXCIgOiBcInN0YXRpY1wiKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5pbmxpbmUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWN1c3RvbUFwcGVuZCAmJiBzZWxmLmVsZW1lbnQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5lbGVtZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIHNlbGYuX2lucHV0Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5hcHBlbmRUbyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5hcHBlbmRUby5hcHBlbmRDaGlsZChzZWxmLmNhbGVuZGFyQ29udGFpbmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5zdGF0aWMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB3cmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci13cmFwcGVyXCIpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLmVsZW1lbnQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5lbGVtZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHdyYXBwZXIsIHNlbGYuZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZChzZWxmLmVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLmFsdElucHV0KVxuICAgICAgICAgICAgICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKHNlbGYuYWx0SW5wdXQpO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoc2VsZi5jYWxlbmRhckNvbnRhaW5lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5zdGF0aWMgJiYgIXNlbGYuY29uZmlnLmlubGluZSlcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5hcHBlbmRUbyAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5hcHBlbmRUb1xuICAgICAgICAgICAgICAgIDogd2luZG93LmRvY3VtZW50LmJvZHkpLmFwcGVuZENoaWxkKHNlbGYuY2FsZW5kYXJDb250YWluZXIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjcmVhdGVEYXkoY2xhc3NOYW1lLCBkYXRlLCBkYXlOdW1iZXIsIGkpIHtcbiAgICAgICAgY29uc3QgZGF0ZUlzRW5hYmxlZCA9IGlzRW5hYmxlZChkYXRlLCB0cnVlKSwgZGF5RWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLWRheSBcIiArIGNsYXNzTmFtZSwgZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKSk7XG4gICAgICAgIGRheUVsZW1lbnQuZGF0ZU9iaiA9IGRhdGU7XG4gICAgICAgIGRheUVsZW1lbnQuJGkgPSBpO1xuICAgICAgICBkYXlFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgc2VsZi5mb3JtYXREYXRlKGRhdGUsIHNlbGYuY29uZmlnLmFyaWFEYXRlRm9ybWF0KSk7XG4gICAgICAgIGlmIChjbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLm5vdykgPT09IDApIHtcbiAgICAgICAgICAgIHNlbGYudG9kYXlEYXRlRWxlbSA9IGRheUVsZW1lbnQ7XG4gICAgICAgICAgICBkYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ0b2RheVwiKTtcbiAgICAgICAgICAgIGRheUVsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1jdXJyZW50XCIsIFwiZGF0ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0ZUlzRW5hYmxlZCkge1xuICAgICAgICAgICAgZGF5RWxlbWVudC50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgaWYgKGlzRGF0ZVNlbGVjdGVkKGRhdGUpKSB7XG4gICAgICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIik7XG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVFbGVtID0gZGF5RWxlbWVudDtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUNsYXNzKGRheUVsZW1lbnQsIFwic3RhcnRSYW5nZVwiLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHRydWUpID09PSAwKTtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3MoZGF5RWxlbWVudCwgXCJlbmRSYW5nZVwiLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMV0sIHRydWUpID09PSAwKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PT0gXCJuZXh0TW9udGhEYXlcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImluUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIpIHtcbiAgICAgICAgICAgIGlmIChpc0RhdGVJblJhbmdlKGRhdGUpICYmICFpc0RhdGVTZWxlY3RlZChkYXRlKSlcbiAgICAgICAgICAgICAgICBkYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJpblJhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLndlZWtOdW1iZXJzICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5zaG93TW9udGhzID09PSAxICYmXG4gICAgICAgICAgICBjbGFzc05hbWUgIT09IFwicHJldk1vbnRoRGF5XCIgJiZcbiAgICAgICAgICAgIGRheU51bWJlciAlIDcgPT09IDEpIHtcbiAgICAgICAgICAgIHNlbGYud2Vla051bWJlcnMuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIFwiPHNwYW4gY2xhc3M9J2ZsYXRwaWNrci1kYXknPlwiICsgc2VsZi5jb25maWcuZ2V0V2VlayhkYXRlKSArIFwiPC9zcGFuPlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkRheUNyZWF0ZVwiLCBkYXlFbGVtZW50KTtcbiAgICAgICAgcmV0dXJuIGRheUVsZW1lbnQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGZvY3VzT25EYXlFbGVtKHRhcmdldE5vZGUpIHtcbiAgICAgICAgdGFyZ2V0Tm9kZS5mb2N1cygpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKVxuICAgICAgICAgICAgb25Nb3VzZU92ZXIodGFyZ2V0Tm9kZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldEZpcnN0QXZhaWxhYmxlRGF5KGRlbHRhKSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0TW9udGggPSBkZWx0YSA+IDAgPyAwIDogc2VsZi5jb25maWcuc2hvd01vbnRocyAtIDE7XG4gICAgICAgIGNvbnN0IGVuZE1vbnRoID0gZGVsdGEgPiAwID8gc2VsZi5jb25maWcuc2hvd01vbnRocyA6IC0xO1xuICAgICAgICBmb3IgKGxldCBtID0gc3RhcnRNb250aDsgbSAhPSBlbmRNb250aDsgbSArPSBkZWx0YSkge1xuICAgICAgICAgICAgY29uc3QgbW9udGggPSBzZWxmLmRheXNDb250YWluZXIuY2hpbGRyZW5bbV07XG4gICAgICAgICAgICBjb25zdCBzdGFydEluZGV4ID0gZGVsdGEgPiAwID8gMCA6IG1vbnRoLmNoaWxkcmVuLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICBjb25zdCBlbmRJbmRleCA9IGRlbHRhID4gMCA/IG1vbnRoLmNoaWxkcmVuLmxlbmd0aCA6IC0xO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IHN0YXJ0SW5kZXg7IGkgIT0gZW5kSW5kZXg7IGkgKz0gZGVsdGEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjID0gbW9udGguY2hpbGRyZW5baV07XG4gICAgICAgICAgICAgICAgaWYgKGMuY2xhc3NOYW1lLmluZGV4T2YoXCJoaWRkZW5cIikgPT09IC0xICYmIGlzRW5hYmxlZChjLmRhdGVPYmopKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXROZXh0QXZhaWxhYmxlRGF5KGN1cnJlbnQsIGRlbHRhKSB7XG4gICAgICAgIGNvbnN0IGdpdmVuTW9udGggPSBjdXJyZW50LmNsYXNzTmFtZS5pbmRleE9mKFwiTW9udGhcIikgPT09IC0xXG4gICAgICAgICAgICA/IGN1cnJlbnQuZGF0ZU9iai5nZXRNb250aCgpXG4gICAgICAgICAgICA6IHNlbGYuY3VycmVudE1vbnRoO1xuICAgICAgICBjb25zdCBlbmRNb250aCA9IGRlbHRhID4gMCA/IHNlbGYuY29uZmlnLnNob3dNb250aHMgOiAtMTtcbiAgICAgICAgY29uc3QgbG9vcERlbHRhID0gZGVsdGEgPiAwID8gMSA6IC0xO1xuICAgICAgICBmb3IgKGxldCBtID0gZ2l2ZW5Nb250aCAtIHNlbGYuY3VycmVudE1vbnRoOyBtICE9IGVuZE1vbnRoOyBtICs9IGxvb3BEZWx0YSkge1xuICAgICAgICAgICAgY29uc3QgbW9udGggPSBzZWxmLmRheXNDb250YWluZXIuY2hpbGRyZW5bbV07XG4gICAgICAgICAgICBjb25zdCBzdGFydEluZGV4ID0gZ2l2ZW5Nb250aCAtIHNlbGYuY3VycmVudE1vbnRoID09PSBtXG4gICAgICAgICAgICAgICAgPyBjdXJyZW50LiRpICsgZGVsdGFcbiAgICAgICAgICAgICAgICA6IGRlbHRhIDwgMFxuICAgICAgICAgICAgICAgICAgICA/IG1vbnRoLmNoaWxkcmVuLmxlbmd0aCAtIDFcbiAgICAgICAgICAgICAgICAgICAgOiAwO1xuICAgICAgICAgICAgY29uc3QgbnVtTW9udGhEYXlzID0gbW9udGguY2hpbGRyZW4ubGVuZ3RoO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IHN0YXJ0SW5kZXg7IGkgPj0gMCAmJiBpIDwgbnVtTW9udGhEYXlzICYmIGkgIT0gKGRlbHRhID4gMCA/IG51bU1vbnRoRGF5cyA6IC0xKTsgaSArPSBsb29wRGVsdGEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjID0gbW9udGguY2hpbGRyZW5baV07XG4gICAgICAgICAgICAgICAgaWYgKGMuY2xhc3NOYW1lLmluZGV4T2YoXCJoaWRkZW5cIikgPT09IC0xICYmXG4gICAgICAgICAgICAgICAgICAgIGlzRW5hYmxlZChjLmRhdGVPYmopICYmXG4gICAgICAgICAgICAgICAgICAgIE1hdGguYWJzKGN1cnJlbnQuJGkgLSBpKSA+PSBNYXRoLmFicyhkZWx0YSkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmb2N1c09uRGF5RWxlbShjKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzZWxmLmNoYW5nZU1vbnRoKGxvb3BEZWx0YSk7XG4gICAgICAgIGZvY3VzT25EYXkoZ2V0Rmlyc3RBdmFpbGFibGVEYXkobG9vcERlbHRhKSwgMCk7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGZvY3VzT25EYXkoY3VycmVudCwgb2Zmc2V0KSB7XG4gICAgICAgIGNvbnN0IGRheUZvY3VzZWQgPSBpc0luVmlldyhkb2N1bWVudC5hY3RpdmVFbGVtZW50IHx8IGRvY3VtZW50LmJvZHkpO1xuICAgICAgICBjb25zdCBzdGFydEVsZW0gPSBjdXJyZW50ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gY3VycmVudFxuICAgICAgICAgICAgOiBkYXlGb2N1c2VkXG4gICAgICAgICAgICAgICAgPyBkb2N1bWVudC5hY3RpdmVFbGVtZW50XG4gICAgICAgICAgICAgICAgOiBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0gIT09IHVuZGVmaW5lZCAmJiBpc0luVmlldyhzZWxmLnNlbGVjdGVkRGF0ZUVsZW0pXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5zZWxlY3RlZERhdGVFbGVtXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi50b2RheURhdGVFbGVtICE9PSB1bmRlZmluZWQgJiYgaXNJblZpZXcoc2VsZi50b2RheURhdGVFbGVtKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBzZWxmLnRvZGF5RGF0ZUVsZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogZ2V0Rmlyc3RBdmFpbGFibGVEYXkob2Zmc2V0ID4gMCA/IDEgOiAtMSk7XG4gICAgICAgIGlmIChzdGFydEVsZW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5faW5wdXQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghZGF5Rm9jdXNlZCkge1xuICAgICAgICAgICAgZm9jdXNPbkRheUVsZW0oc3RhcnRFbGVtKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGdldE5leHRBdmFpbGFibGVEYXkoc3RhcnRFbGVtLCBvZmZzZXQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhEYXlzKHllYXIsIG1vbnRoKSB7XG4gICAgICAgIGNvbnN0IGZpcnN0T2ZNb250aCA9IChuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMSkuZ2V0RGF5KCkgLSBzZWxmLmwxMG4uZmlyc3REYXlPZldlZWsgKyA3KSAlIDc7XG4gICAgICAgIGNvbnN0IHByZXZNb250aERheXMgPSBzZWxmLnV0aWxzLmdldERheXNJbk1vbnRoKChtb250aCAtIDEgKyAxMikgJSAxMiwgeWVhcik7XG4gICAgICAgIGNvbnN0IGRheXNJbk1vbnRoID0gc2VsZi51dGlscy5nZXREYXlzSW5Nb250aChtb250aCwgeWVhciksIGRheXMgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLCBpc011bHRpTW9udGggPSBzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSwgcHJldk1vbnRoRGF5Q2xhc3MgPSBpc011bHRpTW9udGggPyBcInByZXZNb250aERheSBoaWRkZW5cIiA6IFwicHJldk1vbnRoRGF5XCIsIG5leHRNb250aERheUNsYXNzID0gaXNNdWx0aU1vbnRoID8gXCJuZXh0TW9udGhEYXkgaGlkZGVuXCIgOiBcIm5leHRNb250aERheVwiO1xuICAgICAgICBsZXQgZGF5TnVtYmVyID0gcHJldk1vbnRoRGF5cyArIDEgLSBmaXJzdE9mTW9udGgsIGRheUluZGV4ID0gMDtcbiAgICAgICAgZm9yICg7IGRheU51bWJlciA8PSBwcmV2TW9udGhEYXlzOyBkYXlOdW1iZXIrKywgZGF5SW5kZXgrKykge1xuICAgICAgICAgICAgZGF5cy5hcHBlbmRDaGlsZChjcmVhdGVEYXkocHJldk1vbnRoRGF5Q2xhc3MsIG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgZGF5TnVtYmVyKSwgZGF5TnVtYmVyLCBkYXlJbmRleCkpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoZGF5TnVtYmVyID0gMTsgZGF5TnVtYmVyIDw9IGRheXNJbk1vbnRoOyBkYXlOdW1iZXIrKywgZGF5SW5kZXgrKykge1xuICAgICAgICAgICAgZGF5cy5hcHBlbmRDaGlsZChjcmVhdGVEYXkoXCJcIiwgbmV3IERhdGUoeWVhciwgbW9udGgsIGRheU51bWJlciksIGRheU51bWJlciwgZGF5SW5kZXgpKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBkYXlOdW0gPSBkYXlzSW5Nb250aCArIDE7IGRheU51bSA8PSA0MiAtIGZpcnN0T2ZNb250aCAmJlxuICAgICAgICAgICAgKHNlbGYuY29uZmlnLnNob3dNb250aHMgPT09IDEgfHwgZGF5SW5kZXggJSA3ICE9PSAwKTsgZGF5TnVtKyssIGRheUluZGV4KyspIHtcbiAgICAgICAgICAgIGRheXMuYXBwZW5kQ2hpbGQoY3JlYXRlRGF5KG5leHRNb250aERheUNsYXNzLCBuZXcgRGF0ZSh5ZWFyLCBtb250aCArIDEsIGRheU51bSAlIGRheXNJbk1vbnRoKSwgZGF5TnVtLCBkYXlJbmRleCkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRheUNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJkYXlDb250YWluZXJcIik7XG4gICAgICAgIGRheUNvbnRhaW5lci5hcHBlbmRDaGlsZChkYXlzKTtcbiAgICAgICAgcmV0dXJuIGRheUNvbnRhaW5lcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGREYXlzKCkge1xuICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjbGVhck5vZGUoc2VsZi5kYXlzQ29udGFpbmVyKTtcbiAgICAgICAgaWYgKHNlbGYud2Vla051bWJlcnMpXG4gICAgICAgICAgICBjbGVhck5vZGUoc2VsZi53ZWVrTnVtYmVycyk7XG4gICAgICAgIGNvbnN0IGZyYWcgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZi5jb25maWcuc2hvd01vbnRoczsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBkID0gbmV3IERhdGUoc2VsZi5jdXJyZW50WWVhciwgc2VsZi5jdXJyZW50TW9udGgsIDEpO1xuICAgICAgICAgICAgZC5zZXRNb250aChzZWxmLmN1cnJlbnRNb250aCArIGkpO1xuICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChidWlsZE1vbnRoRGF5cyhkLmdldEZ1bGxZZWFyKCksIGQuZ2V0TW9udGgoKSkpO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lci5hcHBlbmRDaGlsZChmcmFnKTtcbiAgICAgICAgc2VsZi5kYXlzID0gc2VsZi5kYXlzQ29udGFpbmVyLmZpcnN0Q2hpbGQ7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIgJiYgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgb25Nb3VzZU92ZXIoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZE1vbnRoU3dpdGNoKCkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuc2hvd01vbnRocyA+IDEgfHxcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vbnRoU2VsZWN0b3JUeXBlICE9PSBcImRyb3Bkb3duXCIpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHNob3VsZEJ1aWxkTW9udGggPSBmdW5jdGlvbiAobW9udGgpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5taW5EYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5taW5EYXRlLmdldEZ1bGxZZWFyKCkgJiZcbiAgICAgICAgICAgICAgICBtb250aCA8IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0TW9udGgoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhKHNlbGYuY29uZmlnLm1heERhdGUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXIgPT09IHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKSAmJlxuICAgICAgICAgICAgICAgIG1vbnRoID4gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNb250aCgpKTtcbiAgICAgICAgfTtcbiAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci50YWJJbmRleCA9IC0xO1xuICAgICAgICBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTI7IGkrKykge1xuICAgICAgICAgICAgaWYgKCFzaG91bGRCdWlsZE1vbnRoKGkpKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgY29uc3QgbW9udGggPSBjcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIFwiZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGhcIik7XG4gICAgICAgICAgICBtb250aC52YWx1ZSA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIGkpLmdldE1vbnRoKCkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIG1vbnRoLnRleHRDb250ZW50ID0gbW9udGhUb1N0cihpLCBzZWxmLmNvbmZpZy5zaG9ydGhhbmRDdXJyZW50TW9udGgsIHNlbGYubDEwbik7XG4gICAgICAgICAgICBtb250aC50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgaWYgKHNlbGYuY3VycmVudE1vbnRoID09PSBpKSB7XG4gICAgICAgICAgICAgICAgbW9udGguc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci5hcHBlbmRDaGlsZChtb250aCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRNb250aCgpIHtcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1tb250aFwiKTtcbiAgICAgICAgY29uc3QgbW9udGhOYXZGcmFnbWVudCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgIGxldCBtb250aEVsZW1lbnQ7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSB8fFxuICAgICAgICAgICAgc2VsZi5jb25maWcubW9udGhTZWxlY3RvclR5cGUgPT09IFwic3RhdGljXCIpIHtcbiAgICAgICAgICAgIG1vbnRoRWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiY3VyLW1vbnRoXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIiwgXCJmbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHNcIik7XG4gICAgICAgICAgICBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgc2VsZi5sMTBuLm1vbnRoQXJpYUxhYmVsKTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lciwgXCJjaGFuZ2VcIiwgKGUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZE1vbnRoID0gcGFyc2VJbnQodGFyZ2V0LnZhbHVlLCAxMCk7XG4gICAgICAgICAgICAgICAgc2VsZi5jaGFuZ2VNb250aChzZWxlY3RlZE1vbnRoIC0gc2VsZi5jdXJyZW50TW9udGgpO1xuICAgICAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uTW9udGhDaGFuZ2VcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgICAgIG1vbnRoRWxlbWVudCA9IHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXI7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgeWVhcklucHV0ID0gY3JlYXRlTnVtYmVySW5wdXQoXCJjdXIteWVhclwiLCB7IHRhYmluZGV4OiBcIi0xXCIgfSk7XG4gICAgICAgIGNvbnN0IHllYXJFbGVtZW50ID0geWVhcklucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgIHllYXJFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgc2VsZi5sMTBuLnllYXJBcmlhTGFiZWwpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluRGF0ZSkge1xuICAgICAgICAgICAgeWVhckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4RGF0ZSkge1xuICAgICAgICAgICAgeWVhckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4XCIsIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIHllYXJFbGVtZW50LmRpc2FibGVkID1cbiAgICAgICAgICAgICAgICAhIXNlbGYuY29uZmlnLm1pbkRhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3VycmVudE1vbnRoID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1jdXJyZW50LW1vbnRoXCIpO1xuICAgICAgICBjdXJyZW50TW9udGguYXBwZW5kQ2hpbGQobW9udGhFbGVtZW50KTtcbiAgICAgICAgY3VycmVudE1vbnRoLmFwcGVuZENoaWxkKHllYXJJbnB1dCk7XG4gICAgICAgIG1vbnRoTmF2RnJhZ21lbnQuYXBwZW5kQ2hpbGQoY3VycmVudE1vbnRoKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKG1vbnRoTmF2RnJhZ21lbnQpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgeWVhckVsZW1lbnQsXG4gICAgICAgICAgICBtb250aEVsZW1lbnQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhzKCkge1xuICAgICAgICBjbGVhck5vZGUoc2VsZi5tb250aE5hdik7XG4gICAgICAgIHNlbGYubW9udGhOYXYuYXBwZW5kQ2hpbGQoc2VsZi5wcmV2TW9udGhOYXYpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuc2hvd01vbnRocykge1xuICAgICAgICAgICAgc2VsZi55ZWFyRWxlbWVudHMgPSBbXTtcbiAgICAgICAgICAgIHNlbGYubW9udGhFbGVtZW50cyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IG0gPSBzZWxmLmNvbmZpZy5zaG93TW9udGhzOyBtLS07KSB7XG4gICAgICAgICAgICBjb25zdCBtb250aCA9IGJ1aWxkTW9udGgoKTtcbiAgICAgICAgICAgIHNlbGYueWVhckVsZW1lbnRzLnB1c2gobW9udGgueWVhckVsZW1lbnQpO1xuICAgICAgICAgICAgc2VsZi5tb250aEVsZW1lbnRzLnB1c2gobW9udGgubW9udGhFbGVtZW50KTtcbiAgICAgICAgICAgIHNlbGYubW9udGhOYXYuYXBwZW5kQ2hpbGQobW9udGguY29udGFpbmVyKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLm1vbnRoTmF2LmFwcGVuZENoaWxkKHNlbGYubmV4dE1vbnRoTmF2KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRNb250aE5hdigpIHtcbiAgICAgICAgc2VsZi5tb250aE5hdiA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItbW9udGhzXCIpO1xuICAgICAgICBzZWxmLnllYXJFbGVtZW50cyA9IFtdO1xuICAgICAgICBzZWxmLm1vbnRoRWxlbWVudHMgPSBbXTtcbiAgICAgICAgc2VsZi5wcmV2TW9udGhOYXYgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci1wcmV2LW1vbnRoXCIpO1xuICAgICAgICBzZWxmLnByZXZNb250aE5hdi5pbm5lckhUTUwgPSBzZWxmLmNvbmZpZy5wcmV2QXJyb3c7XG4gICAgICAgIHNlbGYubmV4dE1vbnRoTmF2ID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3ItbmV4dC1tb250aFwiKTtcbiAgICAgICAgc2VsZi5uZXh0TW9udGhOYXYuaW5uZXJIVE1MID0gc2VsZi5jb25maWcubmV4dEFycm93O1xuICAgICAgICBidWlsZE1vbnRocygpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZiwgXCJfaGlkZVByZXZNb250aEFycm93XCIsIHtcbiAgICAgICAgICAgIGdldDogKCkgPT4gc2VsZi5fX2hpZGVQcmV2TW9udGhBcnJvdyxcbiAgICAgICAgICAgIHNldChib29sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuX19oaWRlUHJldk1vbnRoQXJyb3cgIT09IGJvb2wpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5wcmV2TW9udGhOYXYsIFwiZmxhdHBpY2tyLWRpc2FibGVkXCIsIGJvb2wpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9faGlkZVByZXZNb250aEFycm93ID0gYm9vbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIFwiX2hpZGVOZXh0TW9udGhBcnJvd1wiLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHNlbGYuX19oaWRlTmV4dE1vbnRoQXJyb3csXG4gICAgICAgICAgICBzZXQoYm9vbCkge1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLl9faGlkZU5leHRNb250aEFycm93ICE9PSBib29sKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYubmV4dE1vbnRoTmF2LCBcImZsYXRwaWNrci1kaXNhYmxlZFwiLCBib29sKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fX2hpZGVOZXh0TW9udGhBcnJvdyA9IGJvb2w7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuY3VycmVudFllYXJFbGVtZW50ID0gc2VsZi55ZWFyRWxlbWVudHNbMF07XG4gICAgICAgIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKTtcbiAgICAgICAgcmV0dXJuIHNlbGYubW9udGhOYXY7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkVGltZSgpIHtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiaGFzVGltZVwiKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm5vQ2FsZW5kYXIpXG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJub0NhbGVuZGFyXCIpO1xuICAgICAgICBjb25zdCBkZWZhdWx0cyA9IGdldERlZmF1bHRIb3VycyhzZWxmLmNvbmZpZyk7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItdGltZVwiKTtcbiAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLnRhYkluZGV4ID0gLTE7XG4gICAgICAgIGNvbnN0IHNlcGFyYXRvciA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLXRpbWUtc2VwYXJhdG9yXCIsIFwiOlwiKTtcbiAgICAgICAgY29uc3QgaG91cklucHV0ID0gY3JlYXRlTnVtYmVySW5wdXQoXCJmbGF0cGlja3ItaG91clwiLCB7XG4gICAgICAgICAgICBcImFyaWEtbGFiZWxcIjogc2VsZi5sMTBuLmhvdXJBcmlhTGFiZWwsXG4gICAgICAgIH0pO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50ID0gaG91cklucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgIGNvbnN0IG1pbnV0ZUlucHV0ID0gY3JlYXRlTnVtYmVySW5wdXQoXCJmbGF0cGlja3ItbWludXRlXCIsIHtcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBzZWxmLmwxMG4ubWludXRlQXJpYUxhYmVsLFxuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ID0gbWludXRlSW5wdXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKVswXTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC50YWJJbmRleCA9IHNlbGYubWludXRlRWxlbWVudC50YWJJbmRleCA9IC0xO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnZhbHVlID0gcGFkKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqXG4gICAgICAgICAgICA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLmdldEhvdXJzKClcbiAgICAgICAgICAgIDogc2VsZi5jb25maWcudGltZV8yNGhyXG4gICAgICAgICAgICAgICAgPyBkZWZhdWx0cy5ob3Vyc1xuICAgICAgICAgICAgICAgIDogbWlsaXRhcnkyYW1wbShkZWZhdWx0cy5ob3VycykpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQudmFsdWUgPSBwYWQoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmpcbiAgICAgICAgICAgID8gc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmouZ2V0TWludXRlcygpXG4gICAgICAgICAgICA6IGRlZmF1bHRzLm1pbnV0ZXMpO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0ZXBcIiwgc2VsZi5jb25maWcuaG91ckluY3JlbWVudC50b1N0cmluZygpKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0ZXBcIiwgc2VsZi5jb25maWcubWludXRlSW5jcmVtZW50LnRvU3RyaW5nKCkpO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1pblwiLCBzZWxmLmNvbmZpZy50aW1lXzI0aHIgPyBcIjBcIiA6IFwiMVwiKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhcIiwgc2VsZi5jb25maWcudGltZV8yNGhyID8gXCIyM1wiIDogXCIxMlwiKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyXCIpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIFwiMFwiKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1heFwiLCBcIjU5XCIpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsIFwiMlwiKTtcbiAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKGhvdXJJbnB1dCk7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5hcHBlbmRDaGlsZChzZXBhcmF0b3IpO1xuICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQobWludXRlSW5wdXQpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcudGltZV8yNGhyKVxuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0aW1lMjRoclwiKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVNlY29uZHMpIHtcbiAgICAgICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiaGFzU2Vjb25kc1wiKTtcbiAgICAgICAgICAgIGNvbnN0IHNlY29uZElucHV0ID0gY3JlYXRlTnVtYmVySW5wdXQoXCJmbGF0cGlja3Itc2Vjb25kXCIpO1xuICAgICAgICAgICAgc2VsZi5zZWNvbmRFbGVtZW50ID0gc2Vjb25kSW5wdXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKVswXTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC52YWx1ZSA9IHBhZChzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9ialxuICAgICAgICAgICAgICAgID8gc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmouZ2V0U2Vjb25kcygpXG4gICAgICAgICAgICAgICAgOiBkZWZhdWx0cy5zZWNvbmRzKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJzdGVwXCIsIHNlbGYubWludXRlRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzdGVwXCIpKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtaW5cIiwgXCIwXCIpO1xuICAgICAgICAgICAgc2VsZi5zZWNvbmRFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1heFwiLCBcIjU5XCIpO1xuICAgICAgICAgICAgc2VsZi5zZWNvbmRFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1heGxlbmd0aFwiLCBcIjJcIik7XG4gICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQoY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3ItdGltZS1zZXBhcmF0b3JcIiwgXCI6XCIpKTtcbiAgICAgICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5hcHBlbmRDaGlsZChzZWNvbmRJbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy50aW1lXzI0aHIpIHtcbiAgICAgICAgICAgIHNlbGYuYW1QTSA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLWFtLXBtXCIsIHNlbGYubDEwbi5hbVBNW2ludCgoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmpcbiAgICAgICAgICAgICAgICA/IHNlbGYuaG91ckVsZW1lbnQudmFsdWVcbiAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLmRlZmF1bHRIb3VyKSA+IDExKV0pO1xuICAgICAgICAgICAgc2VsZi5hbVBNLnRpdGxlID0gc2VsZi5sMTBuLnRvZ2dsZVRpdGxlO1xuICAgICAgICAgICAgc2VsZi5hbVBNLnRhYkluZGV4ID0gLTE7XG4gICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2VsZi5hbVBNKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2VsZi50aW1lQ29udGFpbmVyO1xuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZFdlZWtkYXlzKCkge1xuICAgICAgICBpZiAoIXNlbGYud2Vla2RheUNvbnRhaW5lcilcbiAgICAgICAgICAgIHNlbGYud2Vla2RheUNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3Itd2Vla2RheXNcIik7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGNsZWFyTm9kZShzZWxmLndlZWtkYXlDb250YWluZXIpO1xuICAgICAgICBmb3IgKGxldCBpID0gc2VsZi5jb25maWcuc2hvd01vbnRoczsgaS0tOykge1xuICAgICAgICAgICAgY29uc3QgY29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci13ZWVrZGF5Y29udGFpbmVyXCIpO1xuICAgICAgICAgICAgc2VsZi53ZWVrZGF5Q29udGFpbmVyLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgdXBkYXRlV2Vla2RheXMoKTtcbiAgICAgICAgcmV0dXJuIHNlbGYud2Vla2RheUNvbnRhaW5lcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlV2Vla2RheXMoKSB7XG4gICAgICAgIGlmICghc2VsZi53ZWVrZGF5Q29udGFpbmVyKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmlyc3REYXlPZldlZWsgPSBzZWxmLmwxMG4uZmlyc3REYXlPZldlZWs7XG4gICAgICAgIGxldCB3ZWVrZGF5cyA9IFsuLi5zZWxmLmwxMG4ud2Vla2RheXMuc2hvcnRoYW5kXTtcbiAgICAgICAgaWYgKGZpcnN0RGF5T2ZXZWVrID4gMCAmJiBmaXJzdERheU9mV2VlayA8IHdlZWtkYXlzLmxlbmd0aCkge1xuICAgICAgICAgICAgd2Vla2RheXMgPSBbXG4gICAgICAgICAgICAgICAgLi4ud2Vla2RheXMuc3BsaWNlKGZpcnN0RGF5T2ZXZWVrLCB3ZWVrZGF5cy5sZW5ndGgpLFxuICAgICAgICAgICAgICAgIC4uLndlZWtkYXlzLnNwbGljZSgwLCBmaXJzdERheU9mV2VlayksXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSBzZWxmLmNvbmZpZy5zaG93TW9udGhzOyBpLS07KSB7XG4gICAgICAgICAgICBzZWxmLndlZWtkYXlDb250YWluZXIuY2hpbGRyZW5baV0uaW5uZXJIVE1MID0gYFxuICAgICAgPHNwYW4gY2xhc3M9J2ZsYXRwaWNrci13ZWVrZGF5Jz5cbiAgICAgICAgJHt3ZWVrZGF5cy5qb2luKFwiPC9zcGFuPjxzcGFuIGNsYXNzPSdmbGF0cGlja3Itd2Vla2RheSc+XCIpfVxuICAgICAgPC9zcGFuPlxuICAgICAgYDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZFdlZWtzKCkge1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJoYXNXZWVrc1wiKTtcbiAgICAgICAgY29uc3Qgd2Vla1dyYXBwZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWt3cmFwcGVyXCIpO1xuICAgICAgICB3ZWVrV3JhcHBlci5hcHBlbmRDaGlsZChjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci13ZWVrZGF5XCIsIHNlbGYubDEwbi53ZWVrQWJicmV2aWF0aW9uKSk7XG4gICAgICAgIGNvbnN0IHdlZWtOdW1iZXJzID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci13ZWVrc1wiKTtcbiAgICAgICAgd2Vla1dyYXBwZXIuYXBwZW5kQ2hpbGQod2Vla051bWJlcnMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2Vla1dyYXBwZXIsXG4gICAgICAgICAgICB3ZWVrTnVtYmVycyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2hhbmdlTW9udGgodmFsdWUsIGlzT2Zmc2V0ID0gdHJ1ZSkge1xuICAgICAgICBjb25zdCBkZWx0YSA9IGlzT2Zmc2V0ID8gdmFsdWUgOiB2YWx1ZSAtIHNlbGYuY3VycmVudE1vbnRoO1xuICAgICAgICBpZiAoKGRlbHRhIDwgMCAmJiBzZWxmLl9oaWRlUHJldk1vbnRoQXJyb3cgPT09IHRydWUpIHx8XG4gICAgICAgICAgICAoZGVsdGEgPiAwICYmIHNlbGYuX2hpZGVOZXh0TW9udGhBcnJvdyA9PT0gdHJ1ZSkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYuY3VycmVudE1vbnRoICs9IGRlbHRhO1xuICAgICAgICBpZiAoc2VsZi5jdXJyZW50TW9udGggPCAwIHx8IHNlbGYuY3VycmVudE1vbnRoID4gMTEpIHtcbiAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXIgKz0gc2VsZi5jdXJyZW50TW9udGggPiAxMSA/IDEgOiAtMTtcbiAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0gKHNlbGYuY3VycmVudE1vbnRoICsgMTIpICUgMTI7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgIH1cbiAgICAgICAgYnVpbGREYXlzKCk7XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uTW9udGhDaGFuZ2VcIik7XG4gICAgICAgIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2xlYXIodHJpZ2dlckNoYW5nZUV2ZW50ID0gdHJ1ZSwgdG9Jbml0aWFsID0gdHJ1ZSkge1xuICAgICAgICBzZWxmLmlucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICBpZiAoc2VsZi5tb2JpbGVJbnB1dCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IFtdO1xuICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHRvSW5pdGlhbCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IHNlbGYuX2luaXRpYWxEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGYuX2luaXRpYWxEYXRlLmdldE1vbnRoKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMgfSA9IGdldERlZmF1bHRIb3VycyhzZWxmLmNvbmZpZyk7XG4gICAgICAgICAgICBzZXRIb3Vycyhob3VycywgbWludXRlcywgc2Vjb25kcyk7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2VFdmVudClcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2hhbmdlXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbG9zZSgpIHtcbiAgICAgICAgc2VsZi5pc09wZW4gPSBmYWxzZTtcbiAgICAgICAgaWYgKCFzZWxmLmlzTW9iaWxlKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5jYWxlbmRhckNvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKFwib3BlblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLl9pbnB1dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5faW5wdXQuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkNsb3NlXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uRGVzdHJveVwiKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IHNlbGYuX2hhbmRsZXJzLmxlbmd0aDsgaS0tOykge1xuICAgICAgICAgICAgc2VsZi5faGFuZGxlcnNbaV0ucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5faGFuZGxlcnMgPSBbXTtcbiAgICAgICAgaWYgKHNlbGYubW9iaWxlSW5wdXQpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNlbGYubW9iaWxlSW5wdXQpO1xuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWxmLmNhbGVuZGFyQ29udGFpbmVyICYmIHNlbGYuY2FsZW5kYXJDb250YWluZXIucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLnN0YXRpYyAmJiBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB3cmFwcGVyID0gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIubGFzdENoaWxkICYmIHdyYXBwZXIucmVtb3ZlQ2hpbGQod3JhcHBlci5sYXN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgIGlmICh3cmFwcGVyLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHdyYXBwZXIuZmlyc3RDaGlsZClcbiAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXIucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUod3JhcHBlci5maXJzdENoaWxkLCB3cmFwcGVyKTtcbiAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHdyYXBwZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5jYWxlbmRhckNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQpIHtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICBzZWxmLmFsdElucHV0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5hbHRJbnB1dCk7XG4gICAgICAgICAgICBkZWxldGUgc2VsZi5hbHRJbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5pbnB1dCkge1xuICAgICAgICAgICAgc2VsZi5pbnB1dC50eXBlID0gc2VsZi5pbnB1dC5fdHlwZTtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQuY2xhc3NMaXN0LnJlbW92ZShcImZsYXRwaWNrci1pbnB1dFwiKTtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XG4gICAgICAgIH1cbiAgICAgICAgW1xuICAgICAgICAgICAgXCJfc2hvd1RpbWVJbnB1dFwiLFxuICAgICAgICAgICAgXCJsYXRlc3RTZWxlY3RlZERhdGVPYmpcIixcbiAgICAgICAgICAgIFwiX2hpZGVOZXh0TW9udGhBcnJvd1wiLFxuICAgICAgICAgICAgXCJfaGlkZVByZXZNb250aEFycm93XCIsXG4gICAgICAgICAgICBcIl9faGlkZU5leHRNb250aEFycm93XCIsXG4gICAgICAgICAgICBcIl9faGlkZVByZXZNb250aEFycm93XCIsXG4gICAgICAgICAgICBcImlzTW9iaWxlXCIsXG4gICAgICAgICAgICBcImlzT3BlblwiLFxuICAgICAgICAgICAgXCJzZWxlY3RlZERhdGVFbGVtXCIsXG4gICAgICAgICAgICBcIm1pbkRhdGVIYXNUaW1lXCIsXG4gICAgICAgICAgICBcIm1heERhdGVIYXNUaW1lXCIsXG4gICAgICAgICAgICBcImRheXNcIixcbiAgICAgICAgICAgIFwiZGF5c0NvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJfaW5wdXRcIixcbiAgICAgICAgICAgIFwiX3Bvc2l0aW9uRWxlbWVudFwiLFxuICAgICAgICAgICAgXCJpbm5lckNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJyQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcIm1vbnRoTmF2XCIsXG4gICAgICAgICAgICBcInRvZGF5RGF0ZUVsZW1cIixcbiAgICAgICAgICAgIFwiY2FsZW5kYXJDb250YWluZXJcIixcbiAgICAgICAgICAgIFwid2Vla2RheUNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJwcmV2TW9udGhOYXZcIixcbiAgICAgICAgICAgIFwibmV4dE1vbnRoTmF2XCIsXG4gICAgICAgICAgICBcIm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcImN1cnJlbnRNb250aEVsZW1lbnRcIixcbiAgICAgICAgICAgIFwiY3VycmVudFllYXJFbGVtZW50XCIsXG4gICAgICAgICAgICBcIm5hdmlnYXRpb25DdXJyZW50TW9udGhcIixcbiAgICAgICAgICAgIFwic2VsZWN0ZWREYXRlRWxlbVwiLFxuICAgICAgICAgICAgXCJjb25maWdcIixcbiAgICAgICAgXS5mb3JFYWNoKChrKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBzZWxmW2tdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKF8pIHsgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNDYWxlbmRhckVsZW0oZWxlbSkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuYXBwZW5kVG8gJiYgc2VsZi5jb25maWcuYXBwZW5kVG8uY29udGFpbnMoZWxlbSkpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHNlbGYuY2FsZW5kYXJDb250YWluZXIuY29udGFpbnMoZWxlbSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRvY3VtZW50Q2xpY2soZSkge1xuICAgICAgICBpZiAoc2VsZi5pc09wZW4gJiYgIXNlbGYuY29uZmlnLmlubGluZSkge1xuICAgICAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgICAgIGNvbnN0IGlzQ2FsZW5kYXJFbGVtZW50ID0gaXNDYWxlbmRhckVsZW0oZXZlbnRUYXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgaXNJbnB1dCA9IGV2ZW50VGFyZ2V0ID09PSBzZWxmLmlucHV0IHx8XG4gICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQgPT09IHNlbGYuYWx0SW5wdXQgfHxcbiAgICAgICAgICAgICAgICBzZWxmLmVsZW1lbnQuY29udGFpbnMoZXZlbnRUYXJnZXQpIHx8XG4gICAgICAgICAgICAgICAgKGUucGF0aCAmJlxuICAgICAgICAgICAgICAgICAgICBlLnBhdGguaW5kZXhPZiAmJlxuICAgICAgICAgICAgICAgICAgICAofmUucGF0aC5pbmRleE9mKHNlbGYuaW5wdXQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICB+ZS5wYXRoLmluZGV4T2Yoc2VsZi5hbHRJbnB1dCkpKTtcbiAgICAgICAgICAgIGNvbnN0IGxvc3RGb2N1cyA9IGUudHlwZSA9PT0gXCJibHVyXCJcbiAgICAgICAgICAgICAgICA/IGlzSW5wdXQgJiZcbiAgICAgICAgICAgICAgICAgICAgZS5yZWxhdGVkVGFyZ2V0ICYmXG4gICAgICAgICAgICAgICAgICAgICFpc0NhbGVuZGFyRWxlbShlLnJlbGF0ZWRUYXJnZXQpXG4gICAgICAgICAgICAgICAgOiAhaXNJbnB1dCAmJlxuICAgICAgICAgICAgICAgICAgICAhaXNDYWxlbmRhckVsZW1lbnQgJiZcbiAgICAgICAgICAgICAgICAgICAgIWlzQ2FsZW5kYXJFbGVtKGUucmVsYXRlZFRhcmdldCk7XG4gICAgICAgICAgICBjb25zdCBpc0lnbm9yZWQgPSAhc2VsZi5jb25maWcuaWdub3JlZEZvY3VzRWxlbWVudHMuc29tZSgoZWxlbSkgPT4gZWxlbS5jb250YWlucyhldmVudFRhcmdldCkpO1xuICAgICAgICAgICAgaWYgKGxvc3RGb2N1cyAmJiBpc0lnbm9yZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi50aW1lQ29udGFpbmVyICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQudmFsdWUgIT09IFwiXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRpbWUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZyAmJlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNsZWFyKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gY2hhbmdlWWVhcihuZXdZZWFyKSB7XG4gICAgICAgIGlmICghbmV3WWVhciB8fFxuICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1pbkRhdGUgJiYgbmV3WWVhciA8IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSkgfHxcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5tYXhEYXRlICYmIG5ld1llYXIgPiBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBuZXdZZWFyTnVtID0gbmV3WWVhciwgaXNOZXdZZWFyID0gc2VsZi5jdXJyZW50WWVhciAhPT0gbmV3WWVhck51bTtcbiAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IG5ld1llYXJOdW0gfHwgc2VsZi5jdXJyZW50WWVhcjtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1heERhdGUgJiZcbiAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXIgPT09IHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKSkge1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggPSBNYXRoLm1pbihzZWxmLmNvbmZpZy5tYXhEYXRlLmdldE1vbnRoKCksIHNlbGYuY3VycmVudE1vbnRoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5taW5EYXRlLmdldEZ1bGxZZWFyKCkpIHtcbiAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0gTWF0aC5tYXgoc2VsZi5jb25maWcubWluRGF0ZS5nZXRNb250aCgpLCBzZWxmLmN1cnJlbnRNb250aCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTmV3WWVhcikge1xuICAgICAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uWWVhckNoYW5nZVwiKTtcbiAgICAgICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBpc0VuYWJsZWQoZGF0ZSwgdGltZWxlc3MgPSB0cnVlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgZGF0ZVRvQ2hlY2sgPSBzZWxmLnBhcnNlRGF0ZShkYXRlLCB1bmRlZmluZWQsIHRpbWVsZXNzKTtcbiAgICAgICAgaWYgKChzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICBkYXRlVG9DaGVjayAmJlxuICAgICAgICAgICAgY29tcGFyZURhdGVzKGRhdGVUb0NoZWNrLCBzZWxmLmNvbmZpZy5taW5EYXRlLCB0aW1lbGVzcyAhPT0gdW5kZWZpbmVkID8gdGltZWxlc3MgOiAhc2VsZi5taW5EYXRlSGFzVGltZSkgPCAwKSB8fFxuICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1heERhdGUgJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjayAmJlxuICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlVG9DaGVjaywgc2VsZi5jb25maWcubWF4RGF0ZSwgdGltZWxlc3MgIT09IHVuZGVmaW5lZCA/IHRpbWVsZXNzIDogIXNlbGYubWF4RGF0ZUhhc1RpbWUpID4gMCkpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGlmICghc2VsZi5jb25maWcuZW5hYmxlICYmIHNlbGYuY29uZmlnLmRpc2FibGUubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGlmIChkYXRlVG9DaGVjayA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBjb25zdCBib29sID0gISFzZWxmLmNvbmZpZy5lbmFibGUsIGFycmF5ID0gKF9hID0gc2VsZi5jb25maWcuZW5hYmxlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBzZWxmLmNvbmZpZy5kaXNhYmxlO1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgZDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBkID0gYXJyYXlbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAgICAgICAgIGQoZGF0ZVRvQ2hlY2spKVxuICAgICAgICAgICAgICAgIHJldHVybiBib29sO1xuICAgICAgICAgICAgZWxzZSBpZiAoZCBpbnN0YW5jZW9mIERhdGUgJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjayAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgZC5nZXRUaW1lKCkgPT09IGRhdGVUb0NoZWNrLmdldFRpbWUoKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkID0gc2VsZi5wYXJzZURhdGUoZCwgdW5kZWZpbmVkLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VkICYmIHBhcnNlZC5nZXRUaW1lKCkgPT09IGRhdGVUb0NoZWNrLmdldFRpbWUoKVxuICAgICAgICAgICAgICAgICAgICA/IGJvb2xcbiAgICAgICAgICAgICAgICAgICAgOiAhYm9vbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICAgICAgZGF0ZVRvQ2hlY2sgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIGQuZnJvbSAmJlxuICAgICAgICAgICAgICAgIGQudG8gJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjay5nZXRUaW1lKCkgPj0gZC5mcm9tLmdldFRpbWUoKSAmJlxuICAgICAgICAgICAgICAgIGRhdGVUb0NoZWNrLmdldFRpbWUoKSA8PSBkLnRvLmdldFRpbWUoKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gIWJvb2w7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGlzSW5WaWV3KGVsZW0pIHtcbiAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuIChlbGVtLmNsYXNzTmFtZS5pbmRleE9mKFwiaGlkZGVuXCIpID09PSAtMSAmJlxuICAgICAgICAgICAgICAgIGVsZW0uY2xhc3NOYW1lLmluZGV4T2YoXCJmbGF0cGlja3ItZGlzYWJsZWRcIikgPT09IC0xICYmXG4gICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyLmNvbnRhaW5zKGVsZW0pKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbkJsdXIoZSkge1xuICAgICAgICBjb25zdCBpc0lucHV0ID0gZS50YXJnZXQgPT09IHNlbGYuX2lucHV0O1xuICAgICAgICBpZiAoaXNJbnB1dCAmJlxuICAgICAgICAgICAgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPiAwIHx8IHNlbGYuX2lucHV0LnZhbHVlLmxlbmd0aCA+IDApICYmXG4gICAgICAgICAgICAhKGUucmVsYXRlZFRhcmdldCAmJiBpc0NhbGVuZGFyRWxlbShlLnJlbGF0ZWRUYXJnZXQpKSkge1xuICAgICAgICAgICAgc2VsZi5zZXREYXRlKHNlbGYuX2lucHV0LnZhbHVlLCB0cnVlLCBlLnRhcmdldCA9PT0gc2VsZi5hbHRJbnB1dFxuICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYWx0Rm9ybWF0XG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5kYXRlRm9ybWF0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBvbktleURvd24oZSkge1xuICAgICAgICBjb25zdCBldmVudFRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGUpO1xuICAgICAgICBjb25zdCBpc0lucHV0ID0gc2VsZi5jb25maWcud3JhcFxuICAgICAgICAgICAgPyBlbGVtZW50LmNvbnRhaW5zKGV2ZW50VGFyZ2V0KVxuICAgICAgICAgICAgOiBldmVudFRhcmdldCA9PT0gc2VsZi5faW5wdXQ7XG4gICAgICAgIGNvbnN0IGFsbG93SW5wdXQgPSBzZWxmLmNvbmZpZy5hbGxvd0lucHV0O1xuICAgICAgICBjb25zdCBhbGxvd0tleWRvd24gPSBzZWxmLmlzT3BlbiAmJiAoIWFsbG93SW5wdXQgfHwgIWlzSW5wdXQpO1xuICAgICAgICBjb25zdCBhbGxvd0lubGluZUtleWRvd24gPSBzZWxmLmNvbmZpZy5pbmxpbmUgJiYgaXNJbnB1dCAmJiAhYWxsb3dJbnB1dDtcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMTMgJiYgaXNJbnB1dCkge1xuICAgICAgICAgICAgaWYgKGFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNldERhdGUoc2VsZi5faW5wdXQudmFsdWUsIHRydWUsIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFsdElucHV0XG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYWx0Rm9ybWF0XG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGV2ZW50VGFyZ2V0LmJsdXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNlbGYub3BlbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzQ2FsZW5kYXJFbGVtKGV2ZW50VGFyZ2V0KSB8fFxuICAgICAgICAgICAgYWxsb3dLZXlkb3duIHx8XG4gICAgICAgICAgICBhbGxvd0lubGluZUtleWRvd24pIHtcbiAgICAgICAgICAgIGNvbnN0IGlzVGltZU9iaiA9ICEhc2VsZi50aW1lQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmNvbnRhaW5zKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgICAgIHN3aXRjaCAoZS5rZXlDb2RlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzVGltZU9iaikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGltZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNBbmRDbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdERhdGUoZSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjc6XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgZm9jdXNBbmRDbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgY2FzZSA0NjpcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzSW5wdXQgJiYgIXNlbGYuY29uZmlnLmFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY2xlYXIoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM3OlxuICAgICAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNUaW1lT2JqICYmICFpc0lucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYWxsb3dJbnB1dCA9PT0gZmFsc2UgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgaXNJblZpZXcoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbHRhID0gZS5rZXlDb2RlID09PSAzOSA/IDEgOiAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWUuY3RybEtleSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNPbkRheSh1bmRlZmluZWQsIGRlbHRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlTW9udGgoZGVsdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c09uRGF5KGdldEZpcnN0QXZhaWxhYmxlRGF5KDEpLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc2VsZi5ob3VyRWxlbWVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbHRhID0gZS5rZXlDb2RlID09PSA0MCA/IDEgOiAtMTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKChzZWxmLmRheXNDb250YWluZXIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50VGFyZ2V0LiRpICE9PSB1bmRlZmluZWQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFRhcmdldCA9PT0gc2VsZi5pbnB1dCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQgPT09IHNlbGYuYWx0SW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmN0cmxLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZVllYXIoc2VsZi5jdXJyZW50WWVhciAtIGRlbHRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c09uRGF5KGdldEZpcnN0QXZhaWxhYmxlRGF5KDEpLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFpc1RpbWVPYmopXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNPbkRheSh1bmRlZmluZWQsIGRlbHRhICogNyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZXZlbnRUYXJnZXQgPT09IHNlbGYuY3VycmVudFllYXJFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VZZWFyKHNlbGYuY3VycmVudFllYXIgLSBkZWx0YSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc2VsZi5jb25maWcuZW5hYmxlVGltZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1RpbWVPYmogJiYgc2VsZi5ob3VyRWxlbWVudClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmhvdXJFbGVtZW50LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaW1lKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGVib3VuY2VkQ2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNUaW1lT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtcyA9IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmhvdXJFbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubWludXRlRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5hbVBNLFxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoc2VsZi5wbHVnaW5FbGVtZW50cylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKCh4KSA9PiB4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGkgPSBlbGVtcy5pbmRleE9mKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGVsZW1zW2kgKyAoZS5zaGlmdEtleSA/IC0xIDogMSldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAodGFyZ2V0IHx8IHNlbGYuX2lucHV0KS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFzZWxmLmNvbmZpZy5ub0NhbGVuZGFyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lci5jb250YWlucyhldmVudFRhcmdldCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2lucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuYW1QTSAhPT0gdW5kZWZpbmVkICYmIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFtUE0pIHtcbiAgICAgICAgICAgIHN3aXRjaCAoZS5rZXkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzBdLmNoYXJBdCgwKTpcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzBdLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpOlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPSBzZWxmLmwxMG4uYW1QTVswXTtcbiAgICAgICAgICAgICAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2Ugc2VsZi5sMTBuLmFtUE1bMV0uY2hhckF0KDApOlxuICAgICAgICAgICAgICAgIGNhc2Ugc2VsZi5sMTBuLmFtUE1bMV0uY2hhckF0KDApLnRvTG93ZXJDYXNlKCk6XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuYW1QTS50ZXh0Q29udGVudCA9IHNlbGYubDEwbi5hbVBNWzFdO1xuICAgICAgICAgICAgICAgICAgICBzZXRIb3Vyc0Zyb21JbnB1dHMoKTtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlVmFsdWUoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzSW5wdXQgfHwgaXNDYWxlbmRhckVsZW0oZXZlbnRUYXJnZXQpKSB7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbktleURvd25cIiwgZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gb25Nb3VzZU92ZXIoZWxlbSkge1xuICAgICAgICBpZiAoc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCAhPT0gMSB8fFxuICAgICAgICAgICAgKGVsZW0gJiZcbiAgICAgICAgICAgICAgICAoIWVsZW0uY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRheVwiKSB8fFxuICAgICAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5jb250YWlucyhcImZsYXRwaWNrci1kaXNhYmxlZFwiKSkpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBob3ZlckRhdGUgPSBlbGVtXG4gICAgICAgICAgICA/IGVsZW0uZGF0ZU9iai5nZXRUaW1lKClcbiAgICAgICAgICAgIDogc2VsZi5kYXlzLmZpcnN0RWxlbWVudENoaWxkLmRhdGVPYmouZ2V0VGltZSgpLCBpbml0aWFsRGF0ZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuc2VsZWN0ZWREYXRlc1swXSwgdW5kZWZpbmVkLCB0cnVlKS5nZXRUaW1lKCksIHJhbmdlU3RhcnREYXRlID0gTWF0aC5taW4oaG92ZXJEYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0uZ2V0VGltZSgpKSwgcmFuZ2VFbmREYXRlID0gTWF0aC5tYXgoaG92ZXJEYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0uZ2V0VGltZSgpKTtcbiAgICAgICAgbGV0IGNvbnRhaW5zRGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgbGV0IG1pblJhbmdlID0gMCwgbWF4UmFuZ2UgPSAwO1xuICAgICAgICBmb3IgKGxldCB0ID0gcmFuZ2VTdGFydERhdGU7IHQgPCByYW5nZUVuZERhdGU7IHQgKz0gZHVyYXRpb24uREFZKSB7XG4gICAgICAgICAgICBpZiAoIWlzRW5hYmxlZChuZXcgRGF0ZSh0KSwgdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb250YWluc0Rpc2FibGVkID1cbiAgICAgICAgICAgICAgICAgICAgY29udGFpbnNEaXNhYmxlZCB8fCAodCA+IHJhbmdlU3RhcnREYXRlICYmIHQgPCByYW5nZUVuZERhdGUpO1xuICAgICAgICAgICAgICAgIGlmICh0IDwgaW5pdGlhbERhdGUgJiYgKCFtaW5SYW5nZSB8fCB0ID4gbWluUmFuZ2UpKVxuICAgICAgICAgICAgICAgICAgICBtaW5SYW5nZSA9IHQ7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodCA+IGluaXRpYWxEYXRlICYmICghbWF4UmFuZ2UgfHwgdCA8IG1heFJhbmdlKSlcbiAgICAgICAgICAgICAgICAgICAgbWF4UmFuZ2UgPSB0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IG0gPSAwOyBtIDwgc2VsZi5jb25maWcuc2hvd01vbnRoczsgbSsrKSB7XG4gICAgICAgICAgICBjb25zdCBtb250aCA9IHNlbGYuZGF5c0NvbnRhaW5lci5jaGlsZHJlblttXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gbW9udGguY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF5RWxlbSA9IG1vbnRoLmNoaWxkcmVuW2ldLCBkYXRlID0gZGF5RWxlbS5kYXRlT2JqO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IGRhdGUuZ2V0VGltZSgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG91dE9mUmFuZ2UgPSAobWluUmFuZ2UgPiAwICYmIHRpbWVzdGFtcCA8IG1pblJhbmdlKSB8fFxuICAgICAgICAgICAgICAgICAgICAobWF4UmFuZ2UgPiAwICYmIHRpbWVzdGFtcCA+IG1heFJhbmdlKTtcbiAgICAgICAgICAgICAgICBpZiAob3V0T2ZSYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBkYXlFbGVtLmNsYXNzTGlzdC5hZGQoXCJub3RBbGxvd2VkXCIpO1xuICAgICAgICAgICAgICAgICAgICBbXCJpblJhbmdlXCIsIFwic3RhcnRSYW5nZVwiLCBcImVuZFJhbmdlXCJdLmZvckVhY2goKGMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LnJlbW92ZShjKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChjb250YWluc0Rpc2FibGVkICYmICFvdXRPZlJhbmdlKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBbXCJzdGFydFJhbmdlXCIsIFwiaW5SYW5nZVwiLCBcImVuZFJhbmdlXCIsIFwibm90QWxsb3dlZFwiXS5mb3JFYWNoKChjKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LnJlbW92ZShjKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAoZWxlbSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW0uY2xhc3NMaXN0LmFkZChob3ZlckRhdGUgPD0gc2VsZi5zZWxlY3RlZERhdGVzWzBdLmdldFRpbWUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBcInN0YXJ0UmFuZ2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcImVuZFJhbmdlXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbERhdGUgPCBob3ZlckRhdGUgJiYgdGltZXN0YW1wID09PSBpbml0aWFsRGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LmFkZChcInN0YXJ0UmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGluaXRpYWxEYXRlID4gaG92ZXJEYXRlICYmIHRpbWVzdGFtcCA9PT0gaW5pdGlhbERhdGUpXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXlFbGVtLmNsYXNzTGlzdC5hZGQoXCJlbmRSYW5nZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVzdGFtcCA+PSBtaW5SYW5nZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKG1heFJhbmdlID09PSAwIHx8IHRpbWVzdGFtcCA8PSBtYXhSYW5nZSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQmV0d2Vlbih0aW1lc3RhbXAsIGluaXRpYWxEYXRlLCBob3ZlckRhdGUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgZGF5RWxlbS5jbGFzc0xpc3QuYWRkKFwiaW5SYW5nZVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gb25SZXNpemUoKSB7XG4gICAgICAgIGlmIChzZWxmLmlzT3BlbiAmJiAhc2VsZi5jb25maWcuc3RhdGljICYmICFzZWxmLmNvbmZpZy5pbmxpbmUpXG4gICAgICAgICAgICBwb3NpdGlvbkNhbGVuZGFyKCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9wZW4oZSwgcG9zaXRpb25FbGVtZW50ID0gc2VsZi5fcG9zaXRpb25FbGVtZW50KSB7XG4gICAgICAgIGlmIChzZWxmLmlzTW9iaWxlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBldmVudFRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGUpO1xuICAgICAgICAgICAgICAgIGlmIChldmVudFRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICBldmVudFRhcmdldC5ibHVyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGYubW9iaWxlSW5wdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LmNsaWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk9wZW5cIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VsZi5faW5wdXQuZGlzYWJsZWQgfHwgc2VsZi5jb25maWcuaW5saW5lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgd2FzT3BlbiA9IHNlbGYuaXNPcGVuO1xuICAgICAgICBzZWxmLmlzT3BlbiA9IHRydWU7XG4gICAgICAgIGlmICghd2FzT3Blbikge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwib3BlblwiKTtcbiAgICAgICAgICAgIHNlbGYuX2lucHV0LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk9wZW5cIik7XG4gICAgICAgICAgICBwb3NpdGlvbkNhbGVuZGFyKHBvc2l0aW9uRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUgPT09IHRydWUgJiYgc2VsZi5jb25maWcubm9DYWxlbmRhciA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFsbG93SW5wdXQgPT09IGZhbHNlICYmXG4gICAgICAgICAgICAgICAgKGUgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgICAgICAhc2VsZi50aW1lQ29udGFpbmVyLmNvbnRhaW5zKGUucmVsYXRlZFRhcmdldCkpKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiBzZWxmLmhvdXJFbGVtZW50LnNlbGVjdCgpLCA1MCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gbWluTWF4RGF0ZVNldHRlcih0eXBlKSB7XG4gICAgICAgIHJldHVybiAoZGF0ZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF0ZU9iaiA9IChzZWxmLmNvbmZpZ1tgXyR7dHlwZX1EYXRlYF0gPSBzZWxmLnBhcnNlRGF0ZShkYXRlLCBzZWxmLmNvbmZpZy5kYXRlRm9ybWF0KSk7XG4gICAgICAgICAgICBjb25zdCBpbnZlcnNlRGF0ZU9iaiA9IHNlbGYuY29uZmlnW2BfJHt0eXBlID09PSBcIm1pblwiID8gXCJtYXhcIiA6IFwibWluXCJ9RGF0ZWBdO1xuICAgICAgICAgICAgaWYgKGRhdGVPYmogIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHNlbGZbdHlwZSA9PT0gXCJtaW5cIiA/IFwibWluRGF0ZUhhc1RpbWVcIiA6IFwibWF4RGF0ZUhhc1RpbWVcIl0gPVxuICAgICAgICAgICAgICAgICAgICBkYXRlT2JqLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlT2JqLmdldE1pbnV0ZXMoKSA+IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVPYmouZ2V0U2Vjb25kcygpID4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSBzZWxmLnNlbGVjdGVkRGF0ZXMuZmlsdGVyKChkKSA9PiBpc0VuYWJsZWQoZCkpO1xuICAgICAgICAgICAgICAgIGlmICghc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCAmJiB0eXBlID09PSBcIm1pblwiKVxuICAgICAgICAgICAgICAgICAgICBzZXRIb3Vyc0Zyb21EYXRlKGRhdGVPYmopO1xuICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgcmVkcmF3KCk7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGVPYmogIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhckVsZW1lbnRbdHlwZV0gPSBkYXRlT2JqLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXJFbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSh0eXBlKTtcbiAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudC5kaXNhYmxlZCA9XG4gICAgICAgICAgICAgICAgICAgICEhaW52ZXJzZURhdGVPYmogJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVPYmogIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgaW52ZXJzZURhdGVPYmouZ2V0RnVsbFllYXIoKSA9PT0gZGF0ZU9iai5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYXJzZUNvbmZpZygpIHtcbiAgICAgICAgY29uc3QgYm9vbE9wdHMgPSBbXG4gICAgICAgICAgICBcIndyYXBcIixcbiAgICAgICAgICAgIFwid2Vla051bWJlcnNcIixcbiAgICAgICAgICAgIFwiYWxsb3dJbnB1dFwiLFxuICAgICAgICAgICAgXCJhbGxvd0ludmFsaWRQcmVsb2FkXCIsXG4gICAgICAgICAgICBcImNsaWNrT3BlbnNcIixcbiAgICAgICAgICAgIFwidGltZV8yNGhyXCIsXG4gICAgICAgICAgICBcImVuYWJsZVRpbWVcIixcbiAgICAgICAgICAgIFwibm9DYWxlbmRhclwiLFxuICAgICAgICAgICAgXCJhbHRJbnB1dFwiLFxuICAgICAgICAgICAgXCJzaG9ydGhhbmRDdXJyZW50TW9udGhcIixcbiAgICAgICAgICAgIFwiaW5saW5lXCIsXG4gICAgICAgICAgICBcInN0YXRpY1wiLFxuICAgICAgICAgICAgXCJlbmFibGVTZWNvbmRzXCIsXG4gICAgICAgICAgICBcImRpc2FibGVNb2JpbGVcIixcbiAgICAgICAgXTtcbiAgICAgICAgY29uc3QgdXNlckNvbmZpZyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShlbGVtZW50LmRhdGFzZXQgfHwge30pKSksIGluc3RhbmNlQ29uZmlnKTtcbiAgICAgICAgY29uc3QgZm9ybWF0cyA9IHt9O1xuICAgICAgICBzZWxmLmNvbmZpZy5wYXJzZURhdGUgPSB1c2VyQ29uZmlnLnBhcnNlRGF0ZTtcbiAgICAgICAgc2VsZi5jb25maWcuZm9ybWF0RGF0ZSA9IHVzZXJDb25maWcuZm9ybWF0RGF0ZTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcImVuYWJsZVwiLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHNlbGYuY29uZmlnLl9lbmFibGUsXG4gICAgICAgICAgICBzZXQ6IChkYXRlcykgPT4ge1xuICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLl9lbmFibGUgPSBwYXJzZURhdGVSdWxlcyhkYXRlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcImRpc2FibGVcIiwge1xuICAgICAgICAgICAgZ2V0OiAoKSA9PiBzZWxmLmNvbmZpZy5fZGlzYWJsZSxcbiAgICAgICAgICAgIHNldDogKGRhdGVzKSA9PiB7XG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWcuX2Rpc2FibGUgPSBwYXJzZURhdGVSdWxlcyhkYXRlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdGltZU1vZGUgPSB1c2VyQ29uZmlnLm1vZGUgPT09IFwidGltZVwiO1xuICAgICAgICBpZiAoIXVzZXJDb25maWcuZGF0ZUZvcm1hdCAmJiAodXNlckNvbmZpZy5lbmFibGVUaW1lIHx8IHRpbWVNb2RlKSkge1xuICAgICAgICAgICAgY29uc3QgZGVmYXVsdERhdGVGb3JtYXQgPSBmbGF0cGlja3IuZGVmYXVsdENvbmZpZy5kYXRlRm9ybWF0IHx8IGRlZmF1bHRPcHRpb25zLmRhdGVGb3JtYXQ7XG4gICAgICAgICAgICBmb3JtYXRzLmRhdGVGb3JtYXQgPVxuICAgICAgICAgICAgICAgIHVzZXJDb25maWcubm9DYWxlbmRhciB8fCB0aW1lTW9kZVxuICAgICAgICAgICAgICAgICAgICA/IFwiSDppXCIgKyAodXNlckNvbmZpZy5lbmFibGVTZWNvbmRzID8gXCI6U1wiIDogXCJcIilcbiAgICAgICAgICAgICAgICAgICAgOiBkZWZhdWx0RGF0ZUZvcm1hdCArIFwiIEg6aVwiICsgKHVzZXJDb25maWcuZW5hYmxlU2Vjb25kcyA/IFwiOlNcIiA6IFwiXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1c2VyQ29uZmlnLmFsdElucHV0ICYmXG4gICAgICAgICAgICAodXNlckNvbmZpZy5lbmFibGVUaW1lIHx8IHRpbWVNb2RlKSAmJlxuICAgICAgICAgICAgIXVzZXJDb25maWcuYWx0Rm9ybWF0KSB7XG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0QWx0Rm9ybWF0ID0gZmxhdHBpY2tyLmRlZmF1bHRDb25maWcuYWx0Rm9ybWF0IHx8IGRlZmF1bHRPcHRpb25zLmFsdEZvcm1hdDtcbiAgICAgICAgICAgIGZvcm1hdHMuYWx0Rm9ybWF0ID1cbiAgICAgICAgICAgICAgICB1c2VyQ29uZmlnLm5vQ2FsZW5kYXIgfHwgdGltZU1vZGVcbiAgICAgICAgICAgICAgICAgICAgPyBcImg6aVwiICsgKHVzZXJDb25maWcuZW5hYmxlU2Vjb25kcyA/IFwiOlMgS1wiIDogXCIgS1wiKVxuICAgICAgICAgICAgICAgICAgICA6IGRlZmF1bHRBbHRGb3JtYXQgKyBgIGg6aSR7dXNlckNvbmZpZy5lbmFibGVTZWNvbmRzID8gXCI6U1wiIDogXCJcIn0gS2A7XG4gICAgICAgIH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcIm1pbkRhdGVcIiwge1xuICAgICAgICAgICAgZ2V0OiAoKSA9PiBzZWxmLmNvbmZpZy5fbWluRGF0ZSxcbiAgICAgICAgICAgIHNldDogbWluTWF4RGF0ZVNldHRlcihcIm1pblwiKSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJtYXhEYXRlXCIsIHtcbiAgICAgICAgICAgIGdldDogKCkgPT4gc2VsZi5jb25maWcuX21heERhdGUsXG4gICAgICAgICAgICBzZXQ6IG1pbk1heERhdGVTZXR0ZXIoXCJtYXhcIiksXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBtaW5NYXhUaW1lU2V0dGVyID0gKHR5cGUpID0+ICh2YWwpID0+IHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnW3R5cGUgPT09IFwibWluXCIgPyBcIl9taW5UaW1lXCIgOiBcIl9tYXhUaW1lXCJdID0gc2VsZi5wYXJzZURhdGUodmFsLCBcIkg6aTpTXCIpO1xuICAgICAgICB9O1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZi5jb25maWcsIFwibWluVGltZVwiLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHNlbGYuY29uZmlnLl9taW5UaW1lLFxuICAgICAgICAgICAgc2V0OiBtaW5NYXhUaW1lU2V0dGVyKFwibWluXCIpLFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcIm1heFRpbWVcIiwge1xuICAgICAgICAgICAgZ2V0OiAoKSA9PiBzZWxmLmNvbmZpZy5fbWF4VGltZSxcbiAgICAgICAgICAgIHNldDogbWluTWF4VGltZVNldHRlcihcIm1heFwiKSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh1c2VyQ29uZmlnLm1vZGUgPT09IFwidGltZVwiKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5ub0NhbGVuZGFyID0gdHJ1ZTtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVuYWJsZVRpbWUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIE9iamVjdC5hc3NpZ24oc2VsZi5jb25maWcsIGZvcm1hdHMsIHVzZXJDb25maWcpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJvb2xPcHRzLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgc2VsZi5jb25maWdbYm9vbE9wdHNbaV1dID1cbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZ1tib29sT3B0c1tpXV0gPT09IHRydWUgfHxcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWdbYm9vbE9wdHNbaV1dID09PSBcInRydWVcIjtcbiAgICAgICAgSE9PS1MuZmlsdGVyKChob29rKSA9PiBzZWxmLmNvbmZpZ1tob29rXSAhPT0gdW5kZWZpbmVkKS5mb3JFYWNoKChob29rKSA9PiB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZ1tob29rXSA9IGFycmF5aWZ5KHNlbGYuY29uZmlnW2hvb2tdIHx8IFtdKS5tYXAoYmluZFRvSW5zdGFuY2UpO1xuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5pc01vYmlsZSA9XG4gICAgICAgICAgICAhc2VsZi5jb25maWcuZGlzYWJsZU1vYmlsZSAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5pbmxpbmUgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5tb2RlID09PSBcInNpbmdsZVwiICYmXG4gICAgICAgICAgICAgICAgIXNlbGYuY29uZmlnLmRpc2FibGUubGVuZ3RoICYmXG4gICAgICAgICAgICAgICAgIXNlbGYuY29uZmlnLmVuYWJsZSAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy53ZWVrTnVtYmVycyAmJlxuICAgICAgICAgICAgICAgIC9BbmRyb2lkfHdlYk9TfGlQaG9uZXxpUGFkfGlQb2R8QmxhY2tCZXJyeXxJRU1vYmlsZXxPcGVyYSBNaW5pL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWxmLmNvbmZpZy5wbHVnaW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBwbHVnaW5Db25mID0gc2VsZi5jb25maWcucGx1Z2luc1tpXShzZWxmKSB8fCB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIHBsdWdpbkNvbmYpIHtcbiAgICAgICAgICAgICAgICBpZiAoSE9PS1MuaW5kZXhPZihrZXkpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWdba2V5XSA9IGFycmF5aWZ5KHBsdWdpbkNvbmZba2V5XSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoYmluZFRvSW5zdGFuY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KHNlbGYuY29uZmlnW2tleV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgdXNlckNvbmZpZ1trZXldID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZ1trZXldID0gcGx1Z2luQ29uZltrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghdXNlckNvbmZpZy5hbHRJbnB1dENsYXNzKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5hbHRJbnB1dENsYXNzID1cbiAgICAgICAgICAgICAgICBnZXRJbnB1dEVsZW0oKS5jbGFzc05hbWUgKyBcIiBcIiArIHNlbGYuY29uZmlnLmFsdElucHV0Q2xhc3M7XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25QYXJzZUNvbmZpZ1wiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0SW5wdXRFbGVtKCkge1xuICAgICAgICByZXR1cm4gc2VsZi5jb25maWcud3JhcFxuICAgICAgICAgICAgPyBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1pbnB1dF1cIilcbiAgICAgICAgICAgIDogZWxlbWVudDtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0dXBMb2NhbGUoKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2VsZi5jb25maWcubG9jYWxlICE9PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICB0eXBlb2YgZmxhdHBpY2tyLmwxMG5zW3NlbGYuY29uZmlnLmxvY2FsZV0gPT09IFwidW5kZWZpbmVkXCIpXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5lcnJvckhhbmRsZXIobmV3IEVycm9yKGBmbGF0cGlja3I6IGludmFsaWQgbG9jYWxlICR7c2VsZi5jb25maWcubG9jYWxlfWApKTtcbiAgICAgICAgc2VsZi5sMTBuID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBmbGF0cGlja3IubDEwbnMuZGVmYXVsdCksICh0eXBlb2Ygc2VsZi5jb25maWcubG9jYWxlID09PSBcIm9iamVjdFwiXG4gICAgICAgICAgICA/IHNlbGYuY29uZmlnLmxvY2FsZVxuICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5sb2NhbGUgIT09IFwiZGVmYXVsdFwiXG4gICAgICAgICAgICAgICAgPyBmbGF0cGlja3IubDEwbnNbc2VsZi5jb25maWcubG9jYWxlXVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkKSk7XG4gICAgICAgIHRva2VuUmVnZXguSyA9IGAoJHtzZWxmLmwxMG4uYW1QTVswXX18JHtzZWxmLmwxMG4uYW1QTVsxXX18JHtzZWxmLmwxMG4uYW1QTVswXS50b0xvd2VyQ2FzZSgpfXwke3NlbGYubDEwbi5hbVBNWzFdLnRvTG93ZXJDYXNlKCl9KWA7XG4gICAgICAgIGNvbnN0IHVzZXJDb25maWcgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGluc3RhbmNlQ29uZmlnKSwgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShlbGVtZW50LmRhdGFzZXQgfHwge30pKSk7XG4gICAgICAgIGlmICh1c2VyQ29uZmlnLnRpbWVfMjRociA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBmbGF0cGlja3IuZGVmYXVsdENvbmZpZy50aW1lXzI0aHIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5jb25maWcudGltZV8yNGhyID0gc2VsZi5sMTBuLnRpbWVfMjRocjtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmZvcm1hdERhdGUgPSBjcmVhdGVEYXRlRm9ybWF0dGVyKHNlbGYpO1xuICAgICAgICBzZWxmLnBhcnNlRGF0ZSA9IGNyZWF0ZURhdGVQYXJzZXIoeyBjb25maWc6IHNlbGYuY29uZmlnLCBsMTBuOiBzZWxmLmwxMG4gfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvc2l0aW9uQ2FsZW5kYXIoY3VzdG9tUG9zaXRpb25FbGVtZW50KSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2VsZi5jb25maWcucG9zaXRpb24gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHZvaWQgc2VsZi5jb25maWcucG9zaXRpb24oc2VsZiwgY3VzdG9tUG9zaXRpb25FbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jYWxlbmRhckNvbnRhaW5lciA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblByZUNhbGVuZGFyUG9zaXRpb25cIik7XG4gICAgICAgIGNvbnN0IHBvc2l0aW9uRWxlbWVudCA9IGN1c3RvbVBvc2l0aW9uRWxlbWVudCB8fCBzZWxmLl9wb3NpdGlvbkVsZW1lbnQ7XG4gICAgICAgIGNvbnN0IGNhbGVuZGFySGVpZ2h0ID0gQXJyYXkucHJvdG90eXBlLnJlZHVjZS5jYWxsKHNlbGYuY2FsZW5kYXJDb250YWluZXIuY2hpbGRyZW4sICgoYWNjLCBjaGlsZCkgPT4gYWNjICsgY2hpbGQub2Zmc2V0SGVpZ2h0KSwgMCksIGNhbGVuZGFyV2lkdGggPSBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLm9mZnNldFdpZHRoLCBjb25maWdQb3MgPSBzZWxmLmNvbmZpZy5wb3NpdGlvbi5zcGxpdChcIiBcIiksIGNvbmZpZ1Bvc1ZlcnRpY2FsID0gY29uZmlnUG9zWzBdLCBjb25maWdQb3NIb3Jpem9udGFsID0gY29uZmlnUG9zLmxlbmd0aCA+IDEgPyBjb25maWdQb3NbMV0gOiBudWxsLCBpbnB1dEJvdW5kcyA9IHBvc2l0aW9uRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSwgZGlzdGFuY2VGcm9tQm90dG9tID0gd2luZG93LmlubmVySGVpZ2h0IC0gaW5wdXRCb3VuZHMuYm90dG9tLCBzaG93T25Ub3AgPSBjb25maWdQb3NWZXJ0aWNhbCA9PT0gXCJhYm92ZVwiIHx8XG4gICAgICAgICAgICAoY29uZmlnUG9zVmVydGljYWwgIT09IFwiYmVsb3dcIiAmJlxuICAgICAgICAgICAgICAgIGRpc3RhbmNlRnJvbUJvdHRvbSA8IGNhbGVuZGFySGVpZ2h0ICYmXG4gICAgICAgICAgICAgICAgaW5wdXRCb3VuZHMudG9wID4gY2FsZW5kYXJIZWlnaHQpO1xuICAgICAgICBjb25zdCB0b3AgPSB3aW5kb3cucGFnZVlPZmZzZXQgK1xuICAgICAgICAgICAgaW5wdXRCb3VuZHMudG9wICtcbiAgICAgICAgICAgICghc2hvd09uVG9wID8gcG9zaXRpb25FbGVtZW50Lm9mZnNldEhlaWdodCArIDIgOiAtY2FsZW5kYXJIZWlnaHQgLSAyKTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhcnJvd1RvcFwiLCAhc2hvd09uVG9wKTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhcnJvd0JvdHRvbVwiLCBzaG93T25Ub3ApO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuaW5saW5lKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBsZXQgbGVmdCA9IHdpbmRvdy5wYWdlWE9mZnNldCArIGlucHV0Qm91bmRzLmxlZnQ7XG4gICAgICAgIGxldCBpc0NlbnRlciA9IGZhbHNlO1xuICAgICAgICBsZXQgaXNSaWdodCA9IGZhbHNlO1xuICAgICAgICBpZiAoY29uZmlnUG9zSG9yaXpvbnRhbCA9PT0gXCJjZW50ZXJcIikge1xuICAgICAgICAgICAgbGVmdCAtPSAoY2FsZW5kYXJXaWR0aCAtIGlucHV0Qm91bmRzLndpZHRoKSAvIDI7XG4gICAgICAgICAgICBpc0NlbnRlciA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY29uZmlnUG9zSG9yaXpvbnRhbCA9PT0gXCJyaWdodFwiKSB7XG4gICAgICAgICAgICBsZWZ0IC09IGNhbGVuZGFyV2lkdGggLSBpbnB1dEJvdW5kcy53aWR0aDtcbiAgICAgICAgICAgIGlzUmlnaHQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYXJyb3dMZWZ0XCIsICFpc0NlbnRlciAmJiAhaXNSaWdodCk7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYXJyb3dDZW50ZXJcIiwgaXNDZW50ZXIpO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFycm93UmlnaHRcIiwgaXNSaWdodCk7XG4gICAgICAgIGNvbnN0IHJpZ2h0ID0gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGggLVxuICAgICAgICAgICAgKHdpbmRvdy5wYWdlWE9mZnNldCArIGlucHV0Qm91bmRzLnJpZ2h0KTtcbiAgICAgICAgY29uc3QgcmlnaHRNb3N0ID0gbGVmdCArIGNhbGVuZGFyV2lkdGggPiB3aW5kb3cuZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDtcbiAgICAgICAgY29uc3QgY2VudGVyTW9zdCA9IHJpZ2h0ICsgY2FsZW5kYXJXaWR0aCA+IHdpbmRvdy5kb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcInJpZ2h0TW9zdFwiLCByaWdodE1vc3QpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuc3RhdGljKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnRvcCA9IGAke3RvcH1weGA7XG4gICAgICAgIGlmICghcmlnaHRNb3N0KSB7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLmxlZnQgPSBgJHtsZWZ0fXB4YDtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUucmlnaHQgPSBcImF1dG9cIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghY2VudGVyTW9zdCkge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gXCJhdXRvXCI7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gYCR7cmlnaHR9cHhgO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZG9jID0gZ2V0RG9jdW1lbnRTdHlsZVNoZWV0KCk7XG4gICAgICAgICAgICBpZiAoZG9jID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgY29uc3QgYm9keVdpZHRoID0gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICBjb25zdCBjZW50ZXJMZWZ0ID0gTWF0aC5tYXgoMCwgYm9keVdpZHRoIC8gMiAtIGNhbGVuZGFyV2lkdGggLyAyKTtcbiAgICAgICAgICAgIGNvbnN0IGNlbnRlckJlZm9yZSA9IFwiLmZsYXRwaWNrci1jYWxlbmRhci5jZW50ZXJNb3N0OmJlZm9yZVwiO1xuICAgICAgICAgICAgY29uc3QgY2VudGVyQWZ0ZXIgPSBcIi5mbGF0cGlja3ItY2FsZW5kYXIuY2VudGVyTW9zdDphZnRlclwiO1xuICAgICAgICAgICAgY29uc3QgY2VudGVySW5kZXggPSBkb2MuY3NzUnVsZXMubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3QgY2VudGVyU3R5bGUgPSBge2xlZnQ6JHtpbnB1dEJvdW5kcy5sZWZ0fXB4O3JpZ2h0OmF1dG87fWA7XG4gICAgICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcInJpZ2h0TW9zdFwiLCBmYWxzZSk7XG4gICAgICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImNlbnRlck1vc3RcIiwgdHJ1ZSk7XG4gICAgICAgICAgICBkb2MuaW5zZXJ0UnVsZShgJHtjZW50ZXJCZWZvcmV9LCR7Y2VudGVyQWZ0ZXJ9JHtjZW50ZXJTdHlsZX1gLCBjZW50ZXJJbmRleCk7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLmxlZnQgPSBgJHtjZW50ZXJMZWZ0fXB4YDtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUucmlnaHQgPSBcImF1dG9cIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBnZXREb2N1bWVudFN0eWxlU2hlZXQoKSB7XG4gICAgICAgIGxldCBlZGl0YWJsZVNoZWV0ID0gbnVsbDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkb2N1bWVudC5zdHlsZVNoZWV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3Qgc2hlZXQgPSBkb2N1bWVudC5zdHlsZVNoZWV0c1tpXTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgc2hlZXQuY3NzUnVsZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlZGl0YWJsZVNoZWV0ID0gc2hlZXQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWRpdGFibGVTaGVldCAhPSBudWxsID8gZWRpdGFibGVTaGVldCA6IGNyZWF0ZVN0eWxlU2hlZXQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlU3R5bGVTaGVldCgpIHtcbiAgICAgICAgY29uc3Qgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICAgICAgICByZXR1cm4gc3R5bGUuc2hlZXQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlZHJhdygpIHtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm5vQ2FsZW5kYXIgfHwgc2VsZi5pc01vYmlsZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgYnVpbGRNb250aFN3aXRjaCgpO1xuICAgICAgICB1cGRhdGVOYXZpZ2F0aW9uQ3VycmVudE1vbnRoKCk7XG4gICAgICAgIGJ1aWxkRGF5cygpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb2N1c0FuZENsb3NlKCkge1xuICAgICAgICBzZWxmLl9pbnB1dC5mb2N1cygpO1xuICAgICAgICBpZiAod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIk1TSUVcIikgIT09IC0xIHx8XG4gICAgICAgICAgICBuYXZpZ2F0b3IubXNNYXhUb3VjaFBvaW50cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KHNlbGYuY2xvc2UsIDApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNlbGVjdERhdGUoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGNvbnN0IGlzU2VsZWN0YWJsZSA9IChkYXkpID0+IGRheS5jbGFzc0xpc3QgJiZcbiAgICAgICAgICAgIGRheS5jbGFzc0xpc3QuY29udGFpbnMoXCJmbGF0cGlja3ItZGF5XCIpICYmXG4gICAgICAgICAgICAhZGF5LmNsYXNzTGlzdC5jb250YWlucyhcImZsYXRwaWNrci1kaXNhYmxlZFwiKSAmJlxuICAgICAgICAgICAgIWRheS5jbGFzc0xpc3QuY29udGFpbnMoXCJub3RBbGxvd2VkXCIpO1xuICAgICAgICBjb25zdCB0ID0gZmluZFBhcmVudChnZXRFdmVudFRhcmdldChlKSwgaXNTZWxlY3RhYmxlKTtcbiAgICAgICAgaWYgKHQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gdDtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWREYXRlID0gKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gbmV3IERhdGUodGFyZ2V0LmRhdGVPYmouZ2V0VGltZSgpKSk7XG4gICAgICAgIGNvbnN0IHNob3VsZENoYW5nZU1vbnRoID0gKHNlbGVjdGVkRGF0ZS5nZXRNb250aCgpIDwgc2VsZi5jdXJyZW50TW9udGggfHxcbiAgICAgICAgICAgIHNlbGVjdGVkRGF0ZS5nZXRNb250aCgpID5cbiAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCArIHNlbGYuY29uZmlnLnNob3dNb250aHMgLSAxKSAmJlxuICAgICAgICAgICAgc2VsZi5jb25maWcubW9kZSAhPT0gXCJyYW5nZVwiO1xuICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0gPSB0YXJnZXQ7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcInNpbmdsZVwiKVxuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzID0gW3NlbGVjdGVkRGF0ZV07XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwibXVsdGlwbGVcIikge1xuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRJbmRleCA9IGlzRGF0ZVNlbGVjdGVkKHNlbGVjdGVkRGF0ZSk7XG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRJbmRleClcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMuc3BsaWNlKHBhcnNlSW50KHNlbGVjdGVkSW5kZXgpLCAxKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMucHVzaChzZWxlY3RlZERhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIikge1xuICAgICAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmNsZWFyKGZhbHNlLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9IHNlbGVjdGVkRGF0ZTtcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5wdXNoKHNlbGVjdGVkRGF0ZSk7XG4gICAgICAgICAgICBpZiAoY29tcGFyZURhdGVzKHNlbGVjdGVkRGF0ZSwgc2VsZi5zZWxlY3RlZERhdGVzWzBdLCB0cnVlKSAhPT0gMClcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMuc29ydCgoYSwgYikgPT4gYS5nZXRUaW1lKCkgLSBiLmdldFRpbWUoKSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgIGlmIChzaG91bGRDaGFuZ2VNb250aCkge1xuICAgICAgICAgICAgY29uc3QgaXNOZXdZZWFyID0gc2VsZi5jdXJyZW50WWVhciAhPT0gc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID0gc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGVjdGVkRGF0ZS5nZXRNb250aCgpO1xuICAgICAgICAgICAgaWYgKGlzTmV3WWVhcikge1xuICAgICAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uWWVhckNoYW5nZVwiKTtcbiAgICAgICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk1vbnRoQ2hhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKTtcbiAgICAgICAgYnVpbGREYXlzKCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgIGlmICghc2hvdWxkQ2hhbmdlTW9udGggJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vZGUgIT09IFwicmFuZ2VcIiAmJlxuICAgICAgICAgICAgc2VsZi5jb25maWcuc2hvd01vbnRocyA9PT0gMSlcbiAgICAgICAgICAgIGZvY3VzT25EYXlFbGVtKHRhcmdldCk7XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuc2VsZWN0ZWREYXRlRWxlbSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmhvdXJFbGVtZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlRWxlbSAmJiBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0uZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmIHNlbGYuaG91ckVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmNsb3NlT25TZWxlY3QpIHtcbiAgICAgICAgICAgIGNvbnN0IHNpbmdsZSA9IHNlbGYuY29uZmlnLm1vZGUgPT09IFwic2luZ2xlXCIgJiYgIXNlbGYuY29uZmlnLmVuYWJsZVRpbWU7XG4gICAgICAgICAgICBjb25zdCByYW5nZSA9IHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIiAmJlxuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDIgJiZcbiAgICAgICAgICAgICAgICAhc2VsZi5jb25maWcuZW5hYmxlVGltZTtcbiAgICAgICAgICAgIGlmIChzaW5nbGUgfHwgcmFuZ2UpIHtcbiAgICAgICAgICAgICAgICBmb2N1c0FuZENsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckNoYW5nZSgpO1xuICAgIH1cbiAgICBjb25zdCBDQUxMQkFDS1MgPSB7XG4gICAgICAgIGxvY2FsZTogW3NldHVwTG9jYWxlLCB1cGRhdGVXZWVrZGF5c10sXG4gICAgICAgIHNob3dNb250aHM6IFtidWlsZE1vbnRocywgc2V0Q2FsZW5kYXJXaWR0aCwgYnVpbGRXZWVrZGF5c10sXG4gICAgICAgIG1pbkRhdGU6IFtqdW1wVG9EYXRlXSxcbiAgICAgICAgbWF4RGF0ZTogW2p1bXBUb0RhdGVdLFxuICAgICAgICBjbGlja09wZW5zOiBbXG4gICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmNsaWNrT3BlbnMgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJmb2N1c1wiLCBzZWxmLm9wZW4pO1xuICAgICAgICAgICAgICAgICAgICBiaW5kKHNlbGYuX2lucHV0LCBcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgc2VsZi5vcGVuKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHNldChvcHRpb24sIHZhbHVlKSB7XG4gICAgICAgIGlmIChvcHRpb24gIT09IG51bGwgJiYgdHlwZW9mIG9wdGlvbiA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihzZWxmLmNvbmZpZywgb3B0aW9uKTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIG9wdGlvbikge1xuICAgICAgICAgICAgICAgIGlmIChDQUxMQkFDS1Nba2V5XSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICBDQUxMQkFDS1Nba2V5XS5mb3JFYWNoKCh4KSA9PiB4KCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2VsZi5jb25maWdbb3B0aW9uXSA9IHZhbHVlO1xuICAgICAgICAgICAgaWYgKENBTExCQUNLU1tvcHRpb25dICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgQ0FMTEJBQ0tTW29wdGlvbl0uZm9yRWFjaCgoeCkgPT4geCgpKTtcbiAgICAgICAgICAgIGVsc2UgaWYgKEhPT0tTLmluZGV4T2Yob3B0aW9uKSA+IC0xKVxuICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnW29wdGlvbl0gPSBhcnJheWlmeSh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICAgICAgdXBkYXRlVmFsdWUodHJ1ZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldFNlbGVjdGVkRGF0ZShpbnB1dERhdGUsIGZvcm1hdCkge1xuICAgICAgICBsZXQgZGF0ZXMgPSBbXTtcbiAgICAgICAgaWYgKGlucHV0RGF0ZSBpbnN0YW5jZW9mIEFycmF5KVxuICAgICAgICAgICAgZGF0ZXMgPSBpbnB1dERhdGUubWFwKChkKSA9PiBzZWxmLnBhcnNlRGF0ZShkLCBmb3JtYXQpKTtcbiAgICAgICAgZWxzZSBpZiAoaW5wdXREYXRlIGluc3RhbmNlb2YgRGF0ZSB8fCB0eXBlb2YgaW5wdXREYXRlID09PSBcIm51bWJlclwiKVxuICAgICAgICAgICAgZGF0ZXMgPSBbc2VsZi5wYXJzZURhdGUoaW5wdXREYXRlLCBmb3JtYXQpXTtcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGlucHV0RGF0ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgc3dpdGNoIChzZWxmLmNvbmZpZy5tb2RlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcInNpbmdsZVwiOlxuICAgICAgICAgICAgICAgIGNhc2UgXCJ0aW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIGRhdGVzID0gW3NlbGYucGFyc2VEYXRlKGlucHV0RGF0ZSwgZm9ybWF0KV07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJtdWx0aXBsZVwiOlxuICAgICAgICAgICAgICAgICAgICBkYXRlcyA9IGlucHV0RGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLnNwbGl0KHNlbGYuY29uZmlnLmNvbmp1bmN0aW9uKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm1hcCgoZGF0ZSkgPT4gc2VsZi5wYXJzZURhdGUoZGF0ZSwgZm9ybWF0KSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJyYW5nZVwiOlxuICAgICAgICAgICAgICAgICAgICBkYXRlcyA9IGlucHV0RGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLnNwbGl0KHNlbGYubDEwbi5yYW5nZVNlcGFyYXRvcilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoKGRhdGUpID0+IHNlbGYucGFyc2VEYXRlKGRhdGUsIGZvcm1hdCkpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5lcnJvckhhbmRsZXIobmV3IEVycm9yKGBJbnZhbGlkIGRhdGUgc3VwcGxpZWQ6ICR7SlNPTi5zdHJpbmdpZnkoaW5wdXREYXRlKX1gKSk7XG4gICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IChzZWxmLmNvbmZpZy5hbGxvd0ludmFsaWRQcmVsb2FkXG4gICAgICAgICAgICA/IGRhdGVzXG4gICAgICAgICAgICA6IGRhdGVzLmZpbHRlcigoZCkgPT4gZCBpbnN0YW5jZW9mIERhdGUgJiYgaXNFbmFibGVkKGQsIGZhbHNlKSkpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKVxuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnNvcnQoKGEsIGIpID0+IGEuZ2V0VGltZSgpIC0gYi5nZXRUaW1lKCkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXREYXRlKGRhdGUsIHRyaWdnZXJDaGFuZ2UgPSBmYWxzZSwgZm9ybWF0ID0gc2VsZi5jb25maWcuZGF0ZUZvcm1hdCkge1xuICAgICAgICBpZiAoKGRhdGUgIT09IDAgJiYgIWRhdGUpIHx8IChkYXRlIGluc3RhbmNlb2YgQXJyYXkgJiYgZGF0ZS5sZW5ndGggPT09IDApKVxuICAgICAgICAgICAgcmV0dXJuIHNlbGYuY2xlYXIodHJpZ2dlckNoYW5nZSk7XG4gICAgICAgIHNldFNlbGVjdGVkRGF0ZShkYXRlLCBmb3JtYXQpO1xuICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXNbc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCAtIDFdO1xuICAgICAgICBzZWxmLnJlZHJhdygpO1xuICAgICAgICBqdW1wVG9EYXRlKHVuZGVmaW5lZCwgdHJpZ2dlckNoYW5nZSk7XG4gICAgICAgIHNldEhvdXJzRnJvbURhdGUoKTtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHNlbGYuY2xlYXIoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZVZhbHVlKHRyaWdnZXJDaGFuZ2UpO1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSlcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2hhbmdlXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYXJzZURhdGVSdWxlcyhhcnIpIHtcbiAgICAgICAgcmV0dXJuIGFyclxuICAgICAgICAgICAgLnNsaWNlKClcbiAgICAgICAgICAgIC5tYXAoKHJ1bGUpID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcnVsZSA9PT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICAgICAgICAgIHR5cGVvZiBydWxlID09PSBcIm51bWJlclwiIHx8XG4gICAgICAgICAgICAgICAgcnVsZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5wYXJzZURhdGUocnVsZSwgdW5kZWZpbmVkLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJ1bGUgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgcnVsZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgICAgIHJ1bGUuZnJvbSAmJlxuICAgICAgICAgICAgICAgIHJ1bGUudG8pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogc2VsZi5wYXJzZURhdGUocnVsZS5mcm9tLCB1bmRlZmluZWQpLFxuICAgICAgICAgICAgICAgICAgICB0bzogc2VsZi5wYXJzZURhdGUocnVsZS50bywgdW5kZWZpbmVkKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuZmlsdGVyKCh4KSA9PiB4KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0dXBEYXRlcygpIHtcbiAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzID0gW107XG4gICAgICAgIHNlbGYubm93ID0gc2VsZi5wYXJzZURhdGUoc2VsZi5jb25maWcubm93KSB8fCBuZXcgRGF0ZSgpO1xuICAgICAgICBjb25zdCBwcmVsb2FkZWREYXRlID0gc2VsZi5jb25maWcuZGVmYXVsdERhdGUgfHxcbiAgICAgICAgICAgICgoc2VsZi5pbnB1dC5ub2RlTmFtZSA9PT0gXCJJTlBVVFwiIHx8XG4gICAgICAgICAgICAgICAgc2VsZi5pbnB1dC5ub2RlTmFtZSA9PT0gXCJURVhUQVJFQVwiKSAmJlxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQucGxhY2Vob2xkZXIgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmlucHV0LnZhbHVlID09PSBzZWxmLmlucHV0LnBsYWNlaG9sZGVyXG4gICAgICAgICAgICAgICAgPyBudWxsXG4gICAgICAgICAgICAgICAgOiBzZWxmLmlucHV0LnZhbHVlKTtcbiAgICAgICAgaWYgKHByZWxvYWRlZERhdGUpXG4gICAgICAgICAgICBzZXRTZWxlY3RlZERhdGUocHJlbG9hZGVkRGF0ZSwgc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgIHNlbGYuX2luaXRpYWxEYXRlID1cbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgPyBzZWxmLnNlbGVjdGVkRGF0ZXNbMF1cbiAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1pbkRhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubWluRGF0ZS5nZXRUaW1lKCkgPiBzZWxmLm5vdy5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5taW5EYXRlXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubWF4RGF0ZS5nZXRUaW1lKCkgPCBzZWxmLm5vdy5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWF4RGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBzZWxmLm5vdztcbiAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IHNlbGYuX2luaXRpYWxEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0gc2VsZi5faW5pdGlhbERhdGUuZ2V0TW9udGgoKTtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPiAwKVxuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogPSBzZWxmLnNlbGVjdGVkRGF0ZXNbMF07XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5taW5UaW1lICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5UaW1lID0gc2VsZi5wYXJzZURhdGUoc2VsZi5jb25maWcubWluVGltZSwgXCJIOmlcIik7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tYXhUaW1lICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tYXhUaW1lID0gc2VsZi5wYXJzZURhdGUoc2VsZi5jb25maWcubWF4VGltZSwgXCJIOmlcIik7XG4gICAgICAgIHNlbGYubWluRGF0ZUhhc1RpbWUgPVxuICAgICAgICAgICAgISFzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0SG91cnMoKSA+IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubWluRGF0ZS5nZXRNaW51dGVzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0U2Vjb25kcygpID4gMCk7XG4gICAgICAgIHNlbGYubWF4RGF0ZUhhc1RpbWUgPVxuICAgICAgICAgICAgISFzZWxmLmNvbmZpZy5tYXhEYXRlICYmXG4gICAgICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1heERhdGUuZ2V0SG91cnMoKSA+IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNaW51dGVzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0U2Vjb25kcygpID4gMCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldHVwSW5wdXRzKCkge1xuICAgICAgICBzZWxmLmlucHV0ID0gZ2V0SW5wdXRFbGVtKCk7XG4gICAgICAgIGlmICghc2VsZi5pbnB1dCkge1xuICAgICAgICAgICAgc2VsZi5jb25maWcuZXJyb3JIYW5kbGVyKG5ldyBFcnJvcihcIkludmFsaWQgaW5wdXQgZWxlbWVudCBzcGVjaWZpZWRcIikpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuaW5wdXQuX3R5cGUgPSBzZWxmLmlucHV0LnR5cGU7XG4gICAgICAgIHNlbGYuaW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICBzZWxmLmlucHV0LmNsYXNzTGlzdC5hZGQoXCJmbGF0cGlja3ItaW5wdXRcIik7XG4gICAgICAgIHNlbGYuX2lucHV0ID0gc2VsZi5pbnB1dDtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFsdElucHV0KSB7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0ID0gY3JlYXRlRWxlbWVudChzZWxmLmlucHV0Lm5vZGVOYW1lLCBzZWxmLmNvbmZpZy5hbHRJbnB1dENsYXNzKTtcbiAgICAgICAgICAgIHNlbGYuX2lucHV0ID0gc2VsZi5hbHRJbnB1dDtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQucGxhY2Vob2xkZXIgPSBzZWxmLmlucHV0LnBsYWNlaG9sZGVyO1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC5kaXNhYmxlZCA9IHNlbGYuaW5wdXQuZGlzYWJsZWQ7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnJlcXVpcmVkID0gc2VsZi5pbnB1dC5yZXF1aXJlZDtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudGFiSW5kZXggPSBzZWxmLmlucHV0LnRhYkluZGV4O1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC50eXBlID0gXCJ0ZXh0XCI7XG4gICAgICAgICAgICBzZWxmLmlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJoaWRkZW5cIik7XG4gICAgICAgICAgICBpZiAoIXNlbGYuY29uZmlnLnN0YXRpYyAmJiBzZWxmLmlucHV0LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgc2VsZi5pbnB1dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzZWxmLmFsdElucHV0LCBzZWxmLmlucHV0Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNlbGYuY29uZmlnLmFsbG93SW5wdXQpXG4gICAgICAgICAgICBzZWxmLl9pbnB1dC5zZXRBdHRyaWJ1dGUoXCJyZWFkb25seVwiLCBcInJlYWRvbmx5XCIpO1xuICAgICAgICBzZWxmLl9wb3NpdGlvbkVsZW1lbnQgPSBzZWxmLmNvbmZpZy5wb3NpdGlvbkVsZW1lbnQgfHwgc2VsZi5faW5wdXQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldHVwTW9iaWxlKCkge1xuICAgICAgICBjb25zdCBpbnB1dFR5cGUgPSBzZWxmLmNvbmZpZy5lbmFibGVUaW1lXG4gICAgICAgICAgICA/IHNlbGYuY29uZmlnLm5vQ2FsZW5kYXJcbiAgICAgICAgICAgICAgICA/IFwidGltZVwiXG4gICAgICAgICAgICAgICAgOiBcImRhdGV0aW1lLWxvY2FsXCJcbiAgICAgICAgICAgIDogXCJkYXRlXCI7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQgPSBjcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgc2VsZi5pbnB1dC5jbGFzc05hbWUgKyBcIiBmbGF0cGlja3ItbW9iaWxlXCIpO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnRhYkluZGV4ID0gMTtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC50eXBlID0gaW5wdXRUeXBlO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0LmRpc2FibGVkID0gc2VsZi5pbnB1dC5kaXNhYmxlZDtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5yZXF1aXJlZCA9IHNlbGYuaW5wdXQucmVxdWlyZWQ7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQucGxhY2Vob2xkZXIgPSBzZWxmLmlucHV0LnBsYWNlaG9sZGVyO1xuICAgICAgICBzZWxmLm1vYmlsZUZvcm1hdFN0ciA9XG4gICAgICAgICAgICBpbnB1dFR5cGUgPT09IFwiZGF0ZXRpbWUtbG9jYWxcIlxuICAgICAgICAgICAgICAgID8gXCJZLW0tZFxcXFxUSDppOlNcIlxuICAgICAgICAgICAgICAgIDogaW5wdXRUeXBlID09PSBcImRhdGVcIlxuICAgICAgICAgICAgICAgICAgICA/IFwiWS1tLWRcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiSDppOlNcIjtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LmRlZmF1bHRWYWx1ZSA9IHNlbGYubW9iaWxlSW5wdXQudmFsdWUgPSBzZWxmLmZvcm1hdERhdGUoc2VsZi5zZWxlY3RlZERhdGVzWzBdLCBzZWxmLm1vYmlsZUZvcm1hdFN0cik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1pbkRhdGUpXG4gICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0Lm1pbiA9IHNlbGYuZm9ybWF0RGF0ZShzZWxmLmNvbmZpZy5taW5EYXRlLCBcIlktbS1kXCIpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4RGF0ZSlcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQubWF4ID0gc2VsZi5mb3JtYXREYXRlKHNlbGYuY29uZmlnLm1heERhdGUsIFwiWS1tLWRcIik7XG4gICAgICAgIGlmIChzZWxmLmlucHV0LmdldEF0dHJpYnV0ZShcInN0ZXBcIikpXG4gICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnN0ZXAgPSBTdHJpbmcoc2VsZi5pbnB1dC5nZXRBdHRyaWJ1dGUoXCJzdGVwXCIpKTtcbiAgICAgICAgc2VsZi5pbnB1dC50eXBlID0gXCJoaWRkZW5cIjtcbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudHlwZSA9IFwiaGlkZGVuXCI7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5pbnB1dC5wYXJlbnROb2RlKVxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoc2VsZi5tb2JpbGVJbnB1dCwgc2VsZi5pbnB1dC5uZXh0U2libGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7IH1cbiAgICAgICAgYmluZChzZWxmLm1vYmlsZUlucHV0LCBcImNoYW5nZVwiLCAoZSkgPT4ge1xuICAgICAgICAgICAgc2VsZi5zZXREYXRlKGdldEV2ZW50VGFyZ2V0KGUpLnZhbHVlLCBmYWxzZSwgc2VsZi5tb2JpbGVGb3JtYXRTdHIpO1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DaGFuZ2VcIik7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkNsb3NlXCIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdG9nZ2xlKGUpIHtcbiAgICAgICAgaWYgKHNlbGYuaXNPcGVuID09PSB0cnVlKVxuICAgICAgICAgICAgcmV0dXJuIHNlbGYuY2xvc2UoKTtcbiAgICAgICAgc2VsZi5vcGVuKGUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0cmlnZ2VyRXZlbnQoZXZlbnQsIGRhdGEpIHtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGhvb2tzID0gc2VsZi5jb25maWdbZXZlbnRdO1xuICAgICAgICBpZiAoaG9va3MgIT09IHVuZGVmaW5lZCAmJiBob29rcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaG9va3NbaV0gJiYgaSA8IGhvb2tzLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgICAgIGhvb2tzW2ldKHNlbGYuc2VsZWN0ZWREYXRlcywgc2VsZi5pbnB1dC52YWx1ZSwgc2VsZiwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV2ZW50ID09PSBcIm9uQ2hhbmdlXCIpIHtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQuZGlzcGF0Y2hFdmVudChjcmVhdGVFdmVudChcImNoYW5nZVwiKSk7XG4gICAgICAgICAgICBzZWxmLmlucHV0LmRpc3BhdGNoRXZlbnQoY3JlYXRlRXZlbnQoXCJpbnB1dFwiKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlRXZlbnQobmFtZSkge1xuICAgICAgICBjb25zdCBlID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJFdmVudFwiKTtcbiAgICAgICAgZS5pbml0RXZlbnQobmFtZSwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIHJldHVybiBlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc0RhdGVTZWxlY3RlZChkYXRlKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoY29tcGFyZURhdGVzKHNlbGYuc2VsZWN0ZWREYXRlc1tpXSwgZGF0ZSkgPT09IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiXCIgKyBpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNEYXRlSW5SYW5nZShkYXRlKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCIgfHwgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA8IDIpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiAoY29tcGFyZURhdGVzKGRhdGUsIHNlbGYuc2VsZWN0ZWREYXRlc1swXSkgPj0gMCAmJlxuICAgICAgICAgICAgY29tcGFyZURhdGVzKGRhdGUsIHNlbGYuc2VsZWN0ZWREYXRlc1sxXSkgPD0gMCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5ub0NhbGVuZGFyIHx8IHNlbGYuaXNNb2JpbGUgfHwgIXNlbGYubW9udGhOYXYpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYueWVhckVsZW1lbnRzLmZvckVhY2goKHllYXJFbGVtZW50LCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkID0gbmV3IERhdGUoc2VsZi5jdXJyZW50WWVhciwgc2VsZi5jdXJyZW50TW9udGgsIDEpO1xuICAgICAgICAgICAgZC5zZXRNb250aChzZWxmLmN1cnJlbnRNb250aCArIGkpO1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxIHx8XG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWcubW9udGhTZWxlY3RvclR5cGUgPT09IFwic3RhdGljXCIpIHtcbiAgICAgICAgICAgICAgICBzZWxmLm1vbnRoRWxlbWVudHNbaV0udGV4dENvbnRlbnQgPVxuICAgICAgICAgICAgICAgICAgICBtb250aFRvU3RyKGQuZ2V0TW9udGgoKSwgc2VsZi5jb25maWcuc2hvcnRoYW5kQ3VycmVudE1vbnRoLCBzZWxmLmwxMG4pICsgXCIgXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyLnZhbHVlID0gZC5nZXRNb250aCgpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5ZWFyRWxlbWVudC52YWx1ZSA9IGQuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpO1xuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5faGlkZVByZXZNb250aEFycm93ID1cbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5taW5EYXRlLmdldEZ1bGxZZWFyKClcbiAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmN1cnJlbnRNb250aCA8PSBzZWxmLmNvbmZpZy5taW5EYXRlLmdldE1vbnRoKClcbiAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmN1cnJlbnRZZWFyIDwgc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpKTtcbiAgICAgICAgc2VsZi5faGlkZU5leHRNb250aEFycm93ID1cbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKClcbiAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmN1cnJlbnRNb250aCArIDEgPiBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldE1vbnRoKClcbiAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmN1cnJlbnRZZWFyID4gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0RGF0ZVN0cihmb3JtYXQpIHtcbiAgICAgICAgcmV0dXJuIHNlbGYuc2VsZWN0ZWREYXRlc1xuICAgICAgICAgICAgLm1hcCgoZE9iaikgPT4gc2VsZi5mb3JtYXREYXRlKGRPYmosIGZvcm1hdCkpXG4gICAgICAgICAgICAuZmlsdGVyKChkLCBpLCBhcnIpID0+IHNlbGYuY29uZmlnLm1vZGUgIT09IFwicmFuZ2VcIiB8fFxuICAgICAgICAgICAgc2VsZi5jb25maWcuZW5hYmxlVGltZSB8fFxuICAgICAgICAgICAgYXJyLmluZGV4T2YoZCkgPT09IGkpXG4gICAgICAgICAgICAuam9pbihzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCJcbiAgICAgICAgICAgID8gc2VsZi5jb25maWcuY29uanVuY3Rpb25cbiAgICAgICAgICAgIDogc2VsZi5sMTBuLnJhbmdlU2VwYXJhdG9yKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlVmFsdWUodHJpZ2dlckNoYW5nZSA9IHRydWUpIHtcbiAgICAgICAgaWYgKHNlbGYubW9iaWxlSW5wdXQgIT09IHVuZGVmaW5lZCAmJiBzZWxmLm1vYmlsZUZvcm1hdFN0cikge1xuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC52YWx1ZSA9XG4gICAgICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuZm9ybWF0RGF0ZShzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiwgc2VsZi5tb2JpbGVGb3JtYXRTdHIpXG4gICAgICAgICAgICAgICAgICAgIDogXCJcIjtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmlucHV0LnZhbHVlID0gZ2V0RGF0ZVN0cihzZWxmLmNvbmZpZy5kYXRlRm9ybWF0KTtcbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC52YWx1ZSA9IGdldERhdGVTdHIoc2VsZi5jb25maWcuYWx0Rm9ybWF0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSAhPT0gZmFsc2UpXG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblZhbHVlVXBkYXRlXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbk1vbnRoTmF2Q2xpY2soZSkge1xuICAgICAgICBjb25zdCBldmVudFRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGUpO1xuICAgICAgICBjb25zdCBpc1ByZXZNb250aCA9IHNlbGYucHJldk1vbnRoTmF2LmNvbnRhaW5zKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgY29uc3QgaXNOZXh0TW9udGggPSBzZWxmLm5leHRNb250aE5hdi5jb250YWlucyhldmVudFRhcmdldCk7XG4gICAgICAgIGlmIChpc1ByZXZNb250aCB8fCBpc05leHRNb250aCkge1xuICAgICAgICAgICAgY2hhbmdlTW9udGgoaXNQcmV2TW9udGggPyAtMSA6IDEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlbGYueWVhckVsZW1lbnRzLmluZGV4T2YoZXZlbnRUYXJnZXQpID49IDApIHtcbiAgICAgICAgICAgIGV2ZW50VGFyZ2V0LnNlbGVjdCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV2ZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImFycm93VXBcIikpIHtcbiAgICAgICAgICAgIHNlbGYuY2hhbmdlWWVhcihzZWxmLmN1cnJlbnRZZWFyICsgMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXZlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYXJyb3dEb3duXCIpKSB7XG4gICAgICAgICAgICBzZWxmLmNoYW5nZVllYXIoc2VsZi5jdXJyZW50WWVhciAtIDEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRpbWVXcmFwcGVyKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBpc0tleURvd24gPSBlLnR5cGUgPT09IFwia2V5ZG93blwiLCBldmVudFRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGUpLCBpbnB1dCA9IGV2ZW50VGFyZ2V0O1xuICAgICAgICBpZiAoc2VsZi5hbVBNICE9PSB1bmRlZmluZWQgJiYgZXZlbnRUYXJnZXQgPT09IHNlbGYuYW1QTSkge1xuICAgICAgICAgICAgc2VsZi5hbVBNLnRleHRDb250ZW50ID1cbiAgICAgICAgICAgICAgICBzZWxmLmwxMG4uYW1QTVtpbnQoc2VsZi5hbVBNLnRleHRDb250ZW50ID09PSBzZWxmLmwxMG4uYW1QTVswXSldO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1pbiA9IHBhcnNlRmxvYXQoaW5wdXQuZ2V0QXR0cmlidXRlKFwibWluXCIpKSwgbWF4ID0gcGFyc2VGbG9hdChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJtYXhcIikpLCBzdGVwID0gcGFyc2VGbG9hdChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzdGVwXCIpKSwgY3VyVmFsdWUgPSBwYXJzZUludChpbnB1dC52YWx1ZSwgMTApLCBkZWx0YSA9IGUuZGVsdGEgfHxcbiAgICAgICAgICAgIChpc0tleURvd24gPyAoZS53aGljaCA9PT0gMzggPyAxIDogLTEpIDogMCk7XG4gICAgICAgIGxldCBuZXdWYWx1ZSA9IGN1clZhbHVlICsgc3RlcCAqIGRlbHRhO1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0LnZhbHVlICE9PSBcInVuZGVmaW5lZFwiICYmIGlucHV0LnZhbHVlLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgY29uc3QgaXNIb3VyRWxlbSA9IGlucHV0ID09PSBzZWxmLmhvdXJFbGVtZW50LCBpc01pbnV0ZUVsZW0gPSBpbnB1dCA9PT0gc2VsZi5taW51dGVFbGVtZW50O1xuICAgICAgICAgICAgaWYgKG5ld1ZhbHVlIDwgbWluKSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWUgPVxuICAgICAgICAgICAgICAgICAgICBtYXggK1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgaW50KCFpc0hvdXJFbGVtKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAoaW50KGlzSG91ckVsZW0pICYmIGludCghc2VsZi5hbVBNKSk7XG4gICAgICAgICAgICAgICAgaWYgKGlzTWludXRlRWxlbSlcbiAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50TnVtSW5wdXQodW5kZWZpbmVkLCAtMSwgc2VsZi5ob3VyRWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChuZXdWYWx1ZSA+IG1heCkge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlID1cbiAgICAgICAgICAgICAgICAgICAgaW5wdXQgPT09IHNlbGYuaG91ckVsZW1lbnQgPyBuZXdWYWx1ZSAtIG1heCAtIGludCghc2VsZi5hbVBNKSA6IG1pbjtcbiAgICAgICAgICAgICAgICBpZiAoaXNNaW51dGVFbGVtKVxuICAgICAgICAgICAgICAgICAgICBpbmNyZW1lbnROdW1JbnB1dCh1bmRlZmluZWQsIDEsIHNlbGYuaG91ckVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGYuYW1QTSAmJlxuICAgICAgICAgICAgICAgIGlzSG91ckVsZW0gJiZcbiAgICAgICAgICAgICAgICAoc3RlcCA9PT0gMVxuICAgICAgICAgICAgICAgICAgICA/IG5ld1ZhbHVlICsgY3VyVmFsdWUgPT09IDIzXG4gICAgICAgICAgICAgICAgICAgIDogTWF0aC5hYnMobmV3VmFsdWUgLSBjdXJWYWx1ZSkgPiBzdGVwKSkge1xuICAgICAgICAgICAgICAgIHNlbGYuYW1QTS50ZXh0Q29udGVudCA9XG4gICAgICAgICAgICAgICAgICAgIHNlbGYubDEwbi5hbVBNW2ludChzZWxmLmFtUE0udGV4dENvbnRlbnQgPT09IHNlbGYubDEwbi5hbVBNWzBdKV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9IHBhZChuZXdWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaW5pdCgpO1xuICAgIHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gX2ZsYXRwaWNrcihub2RlTGlzdCwgY29uZmlnKSB7XG4gICAgY29uc3Qgbm9kZXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2VcbiAgICAgICAgLmNhbGwobm9kZUxpc3QpXG4gICAgICAgIC5maWx0ZXIoKHgpID0+IHggaW5zdGFuY2VvZiBIVE1MRWxlbWVudCk7XG4gICAgY29uc3QgaW5zdGFuY2VzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAobm9kZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWZwLW9taXRcIikgIT09IG51bGwpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICBpZiAobm9kZS5fZmxhdHBpY2tyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBub2RlLl9mbGF0cGlja3IuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIG5vZGUuX2ZsYXRwaWNrciA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5vZGUuX2ZsYXRwaWNrciA9IEZsYXRwaWNrckluc3RhbmNlKG5vZGUsIGNvbmZpZyB8fCB7fSk7XG4gICAgICAgICAgICBpbnN0YW5jZXMucHVzaChub2RlLl9mbGF0cGlja3IpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpbnN0YW5jZXMubGVuZ3RoID09PSAxID8gaW5zdGFuY2VzWzBdIDogaW5zdGFuY2VzO1xufVxuaWYgKHR5cGVvZiBIVE1MRWxlbWVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiBIVE1MQ29sbGVjdGlvbiAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiBOb2RlTGlzdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIEhUTUxDb2xsZWN0aW9uLnByb3RvdHlwZS5mbGF0cGlja3IgPSBOb2RlTGlzdC5wcm90b3R5cGUuZmxhdHBpY2tyID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcih0aGlzLCBjb25maWcpO1xuICAgIH07XG4gICAgSFRNTEVsZW1lbnQucHJvdG90eXBlLmZsYXRwaWNrciA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3IoW3RoaXNdLCBjb25maWcpO1xuICAgIH07XG59XG52YXIgZmxhdHBpY2tyID0gZnVuY3Rpb24gKHNlbGVjdG9yLCBjb25maWcpIHtcbiAgICBpZiAodHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiBfZmxhdHBpY2tyKHdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSwgY29uZmlnKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2VsZWN0b3IgaW5zdGFuY2VvZiBOb2RlKSB7XG4gICAgICAgIHJldHVybiBfZmxhdHBpY2tyKFtzZWxlY3Rvcl0sIGNvbmZpZyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcihzZWxlY3RvciwgY29uZmlnKTtcbiAgICB9XG59O1xuZmxhdHBpY2tyLmRlZmF1bHRDb25maWcgPSB7fTtcbmZsYXRwaWNrci5sMTBucyA9IHtcbiAgICBlbjogT2JqZWN0LmFzc2lnbih7fSwgRW5nbGlzaCksXG4gICAgZGVmYXVsdDogT2JqZWN0LmFzc2lnbih7fSwgRW5nbGlzaCksXG59O1xuZmxhdHBpY2tyLmxvY2FsaXplID0gKGwxMG4pID0+IHtcbiAgICBmbGF0cGlja3IubDEwbnMuZGVmYXVsdCA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZmxhdHBpY2tyLmwxMG5zLmRlZmF1bHQpLCBsMTBuKTtcbn07XG5mbGF0cGlja3Iuc2V0RGVmYXVsdHMgPSAoY29uZmlnKSA9PiB7XG4gICAgZmxhdHBpY2tyLmRlZmF1bHRDb25maWcgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGZsYXRwaWNrci5kZWZhdWx0Q29uZmlnKSwgY29uZmlnKTtcbn07XG5mbGF0cGlja3IucGFyc2VEYXRlID0gY3JlYXRlRGF0ZVBhcnNlcih7fSk7XG5mbGF0cGlja3IuZm9ybWF0RGF0ZSA9IGNyZWF0ZURhdGVGb3JtYXR0ZXIoe30pO1xuZmxhdHBpY2tyLmNvbXBhcmVEYXRlcyA9IGNvbXBhcmVEYXRlcztcbmlmICh0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBqUXVlcnkuZm4gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBqUXVlcnkuZm4uZmxhdHBpY2tyID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcih0aGlzLCBjb25maWcpO1xuICAgIH07XG59XG5EYXRlLnByb3RvdHlwZS5mcF9pbmNyID0gZnVuY3Rpb24gKGRheXMpIHtcbiAgICByZXR1cm4gbmV3IERhdGUodGhpcy5nZXRGdWxsWWVhcigpLCB0aGlzLmdldE1vbnRoKCksIHRoaXMuZ2V0RGF0ZSgpICsgKHR5cGVvZiBkYXlzID09PSBcInN0cmluZ1wiID8gcGFyc2VJbnQoZGF5cywgMTApIDogZGF5cykpO1xufTtcbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgd2luZG93LmZsYXRwaWNrciA9IGZsYXRwaWNrcjtcbn1cbmV4cG9ydCBkZWZhdWx0IGZsYXRwaWNrcjtcbiIsImltcG9ydCBmbGF0cGlja3IgZnJvbSBcImZsYXRwaWNrclwiO1xyXG5cclxuZmxhdHBpY2tyKFwiLmZvcm1fX2RhdGVcIiwge1xyXG4gICAgZGF0ZUZvcm1hdDogXCJkLW0tWVwiLFxyXG4gICAgZGlzYWJsZU1vYmlsZTogXCJ0cnVlXCIsXHJcbn0pO1xyXG5cclxuZmxhdHBpY2tyKFwiLmZvcm1fX3RpbWVcIiwge1xyXG4gIGVuYWJsZVRpbWU6IHRydWUsXHJcbiAgbm9DYWxlbmRhcjogdHJ1ZSxcclxuICBkYXRlRm9ybWF0OiBcIkgtaVwiLFxyXG4gIGRpc2FibGVNb2JpbGU6IFwidHJ1ZVwiLFxyXG59KTtcclxuIl0sIm5hbWVzIjpbIklTTU9CSUxFIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJUSFJFU0hPTEQiLCJMT0FEX1RIUkVTSE9MRCIsIkVMRU1FTlRTIiwiVklTSUJMRV9DTEFTUyIsIkFuaW1hdGUiLCJlbnRyaWVzIiwibWFwIiwiZW50cnkiLCJzZWN0aW9uIiwidGFyZ2V0IiwiZGVsYXkiLCJnZXREZWxheSIsInNlY3Rpb25Cb2R5Q2xhc3MiLCJnZXRBdHRyaWJ1dGUiLCJpc0ludGVyc2VjdGluZyIsImNsYXNzTGlzdCIsImFkZCIsImJvZHlDbGFzcyIsInNldFRpbWVvdXQiLCJpbmNsdWRlcyIsInBhcnNlSW50IiwiaHRtbGNsYXNzIiwidHlwZSIsImRvY3VtZW50IiwiYm9keSIsInJlbW92ZSIsInNlY3Rpb25zIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlbCIsIkJvdW5kaW5nQ2xpZW50UmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInZpc2libGVSYXRpbyIsImhlaWdodCIsImlubmVySGVpZ2h0IiwibG9hZE9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJvYnNlcnZlQ2FsbGJhY2siLCJ0aHJlc2hvbGQiLCJvYnNlcnZlIiwiZGlzY29ubmVjdCIsIm9ic2VydmVyVGhyZXNob2xkIiwib2JzZXJ2ZXIiLCJ0b2dnbGVDbGFzcyIsInBhZCIsInF1ZXJ5U2VsZWN0b3IiLCJTcGxpZGUiLCJwYWdpbmF0aW9uIiwicGVyUGFnZSIsInBlck1vdmUiLCJnYXAiLCJicmVha3BvaW50cyIsIm1vdW50IiwiVE9HR0xFX0NMQVNTIiwiVG9nZ2xlTmF2IiwiZWxlbWVudHMiLCJhZGRFdmVudExpc3RlbmVyIiwidG9nZ2xlTmF2IiwiZSIsInRvZ2dsZSIsInByZXZlbnREZWZhdWx0IiwiZ2xvYmFsIiwiU2ltcGxlTGlnaHRib3giLCJTdGlja3lTaWRlYmFyIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpbm5lcldyYXBwZXJTZWxlY3RvciIsInRvcFNwYWNpbmciLCJib3R0b21TcGFjaW5nIiwiJGV3Qkt5JGp1c3RleHRlbmQiLCJEcm9wem9uZSIsInVybCIsImNyZWF0ZUltYWdlVGh1bWJuYWlscyIsImRpY3REZWZhdWx0TWVzc2FnZSIsImRlZmF1bHRPcHRpb25zIiwiRW5nbGlzaCIsImZsYXRwaWNrciIsImRhdGVGb3JtYXQiLCJkaXNhYmxlTW9iaWxlIiwiZW5hYmxlVGltZSIsIm5vQ2FsZW5kYXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFBQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUMsSUFBTUEsUUFBUSxHQUFHQyxNQUFNLENBQUNDLFVBQVAsQ0FBa0Isb0NBQWxCLEVBQXdEQyxPQUF6RTtFQUNBLElBQU1DLFNBQVMsR0FBRyxNQUFsQjtFQUNBLElBQU1DLGNBQWMsR0FBRyxLQUF2QjtFQUNBLElBQU1DLFVBQVEsR0FBRyxVQUFqQjtFQUNBLElBQU1DLGFBQWEsR0FBRyxrQkFBdEI7O01BRU1DLFVBQ0osbUJBQWM7RUFBQTs7RUFBQTs7RUFBQSwyQ0F3Q0ssVUFBQ0MsT0FBRCxFQUFhO0VBQzdCQSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFDQyxLQUFELEVBQVc7RUFDckIsVUFBTUMsT0FBTyxHQUFHRCxLQUFLLENBQUNFLE1BQXRCOztFQUNBLFVBQU1DLEtBQUssR0FBRyxLQUFJLENBQUNDLFFBQUwsQ0FBY0gsT0FBZCxDQUFkOztFQUNBLFVBQU1JLGdCQUFnQixHQUFHSixPQUFPLENBQUNLLFlBQVIsQ0FBcUIsb0JBQXJCLENBQXpCOztFQUVBLFVBQUlOLEtBQUssQ0FBQ08sY0FBVixFQUEwQjtFQUN4QixZQUFHbEIsUUFBUSxJQUFJWSxPQUFPLENBQUNLLFlBQVIsQ0FBcUIsdUJBQXJCLENBQWYsRUFBNkQ7RUFDM0RMLFVBQUFBLE9BQU8sQ0FBQ08sU0FBUixD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LEdBQUcsTUFBTSxDQUFDLFFBQVEsR0FBRyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0VBQ3BELE1BQU0sTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0VBQ3JFLE1BQU0sTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0VBQ3BFLE1BQU0sSUFBSSxXQUFXLElBQUksV0FBVyxFQUFFO0VBQ3RDLFFBQVEsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsV0FBVyxDQUFDLENBQUM7RUFDaEQsT0FBTztFQUNQLEtBQUs7RUFDTCxJQUFJLE9BQU8sUUFBUSxDQUFDO0VBQ3BCLEdBQUc7RUFDSCxFQUFFLFNBQVMsS0FBSyxDQUFDLFFBQVEsRUFBRSxTQUFTLEVBQUU7RUFDdEMsSUFBSSxNQUFNLE1BQU0sR0FBRyxRQUFRLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0VBQ2xELElBQUksTUFBTSxJQUFJLEdBQUcsVUFBVSxFQUFFLENBQUM7RUFDOUIsSUFBSSxRQUFRLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0VBQy9ELElBQUksT0FBTyxRQUFRLENBQUM7RUFDcEIsR0FBRztFQUNILEVBQUUsU0FBUyxNQUFNLEdBQUc7RUFDcEIsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO0VBQ3BCLElBQUksU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7RUFDN0IsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO0VBQ3BDLEdBQUc7RUFDSCxFQUFFLFNBQVMsT0FBTyxDQUFDLFFBQVEsRUFBRTtFQUM3QixJQUFJLE1BQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7RUFD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LFNBQVMsR0FBRyxRQUFRLEdBQUcsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO0FBQzFYO0VBQ0EsU0FBUywwQkFBMEIsQ0FBQyxDQUFDLEVBQUUsY0FBYyxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsMkJBQTJCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxjQUFjLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLElBQUksU0FBUyxDQUFDLHVJQUF1SSxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksZ0JBQWdCLEdBQUcsSUFBSSxFQUFFLE1BQU0sR0FBRyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLEdBQUcsRUFBRSxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksSUFBSSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksTUFBTSxFQUFFLE1BQU0sR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRTtBQUM1K0I7RUFDQSxTQUFTLDJCQUEyQixDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLFFBQVEsRUFBRSxPQUFPLGlCQUFpQixDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLFdBQVcs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\n","/**\r\n * Animate\r\n * ======================================\r\n * - add class to element in viewport\r\n * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n * - set animation delay via [animate-delay] html attribute\r\n * - set visible threshold via [animate-threshold] html attribute\r\n */\r\n\r\n const ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches\r\n const THRESHOLD = '0.75'\r\n const LOAD_THRESHOLD = '0.2'\r\n const ELEMENTS = '.animate'\r\n const VISIBLE_CLASS = 'animate--visible'\r\n\r\n class Animate {\r\n   constructor() {\r\n    this.sections = document.querySelectorAll(ELEMENTS)\r\n    this.THRESHOLD = THRESHOLD\r\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD\r\n\r\n      if('IntersectionObserver' in window) {\r\n        this.sections.forEach((el) => {\r\n         const BoundingClientRect = el.getBoundingClientRect()\r\n         const visibleRatio =  BoundingClientRect.height / window.innerHeight\r\n\r\n         if(visibleRatio > 0.95){\r\n           this.THRESHOLD =  window.innerHeight / BoundingClientRect.height / 100 * 30\r\n           this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20\r\n         }\r\n\r\n          // observe on page load\r\n          const loadObserver = new IntersectionObserver(this.observeCallback, {\r\n            threshold: this.LOAD_THRESHOLD\r\n          });\r\n          loadObserver.observe(el);\r\n\r\n\r\n          setTimeout(() => {\r\n            loadObserver.disconnect();\r\n          }, 100);\r\n\r\n          // observe\r\n          const observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : this.THRESHOLD\r\n          const observer = new IntersectionObserver(this.observeCallback, {\r\n            threshold: observerThreshold\r\n          });\r\n          observer.observe(el);\r\n        })\r\n      } else {\r\n        this.sections.forEach((el) => {\r\n          el.classList.add(VISIBLE_CLASS)\r\n        })\r\n      }\r\n   }\r\n\r\n    observeCallback = (entries) => {\r\n      entries.map((entry) => {\r\n        const section = entry.target;\r\n        const delay = this.getDelay(section)\r\n        const sectionBodyClass = section.getAttribute('animate-body-class')\r\n\r\n        if (entry.isIntersecting) {\r\n          if(ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n            section.classList.add(VISIBLE_CLASS)\r\n\r\n            this.bodyClass(sectionBodyClass, 'add')\r\n          } else {\r\n            setTimeout(() => {\r\n              section.classList.add(VISIBLE_CLASS)\r\n              this.bodyClass(sectionBodyClass, 'add')\r\n            }, delay)\r\n          }\r\n        } else {\r\n          this.bodyClass(sectionBodyClass, 'remove')\r\n        }\r\n      });\r\n    }\r\n\r\n   getDelay = (section) => {\r\n   var delay = section.getAttribute('animate-delay')\r\n\r\n   if(!ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n     var delay = section.getAttribute('animate-delay-desktop')\r\n   }\r\n\r\n   if (delay === null) {\r\n     return 0\r\n   } else if (delay.includes('.')) {\r\n     return parseInt(delay * 1000)\r\n   } else {\r\n     return parseInt(delay)\r\n   }\r\n   }\r\n\r\n   bodyClass = (htmlclass, type) => {\r\n     if(!htmlclass){\r\n       return\r\n     }\r\n\r\n      if(type == 'add'){\r\n        document.body.classList.add(htmlclass)\r\n      } else {\r\n        document.body.classList.remove(htmlclass)\r\n      }\r\n    }\r\n }\r\n\r\n new Animate()\r\n","/*!\n * Splide.js\n * Version  : 3.2.5\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\n\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = ref.parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, (attr) => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    const { style: style2 } = elm;\n    value = `${value}`;\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition, message = \"\") {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n  function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n  function emit(event) {\n    (handlers[event] || []).forEach((handler) => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n  function destroy() {\n    handlers = {};\n  }\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const { event } = Splide2;\n  const key = {};\n  let listeners = [];\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  function off(events) {\n    event.off(events, key);\n  }\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter((listener) => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, (target) => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  function destroy() {\n    listeners = listeners.filter((data) => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const { now } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n      if (rate === 1) {\n        onInterval();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      raf(update);\n    }\n  }\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return { set, is };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n    initialOptions = merge({}, options);\n    const { breakpoints } = options;\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n        point,\n        matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n      ]);\n      observe();\n    }\n  }\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function observe() {\n    const item = find(points, (item2) => item2[1].matches) || [];\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n      Splide2.options = newOptions;\n    }\n  }\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\n\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const { direction } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n  function destroy() {\n    [root, track, list].forEach((elm) => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n  function refresh() {\n    destroy();\n    setup();\n  }\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  function getClasses() {\n    return [\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE\n    ];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  TAB_INDEX,\n  DISABLED\n];\n\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n  const { Components, root, options } = Splide2;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n  function mount() {\n    init();\n    bind(slide, \"click keydown\", (e) => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove.bind(this));\n    }\n  }\n  function init() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n    if (isNavigation) {\n      const idx = isClone ? slideIndex : index;\n      const label = format(options.i18n.slideX, idx + 1);\n      const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n      setAttribute(slide, ARIA_LABEL, label);\n      setAttribute(slide, ARIA_CONTROLS, controls);\n      setAttribute(slide, ROLE, \"menuitem\");\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n  function onMove(next, prev, dest) {\n    if (!destroyed) {\n      update.call(this);\n      if (dest === index) {\n        updateActivity.call(this, true);\n      }\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      const { index: currIndex } = Splide2;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n  function updateVisibility(visible) {\n    const ariaHidden = !visible && !isActive();\n    setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n    setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n    if (focusableNodes) {\n      focusableNodes.forEach((node) => {\n        setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n      });\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    return Splide2.index === index;\n  }\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n    return diff <= distance;\n  }\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    style: style$1,\n    isWithin\n  };\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const { on, emit, bind } = EventInterface(Splide2);\n  const { slides, list } = Components2.Elements;\n  const Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1((Slide2) => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n  }\n  function getIn(page) {\n    const { Controller } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, (slide) => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map((Slide2) => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n  function style(prop, value, useContainer) {\n    forEach$1((Slide2) => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let { length } = images;\n    if (length) {\n      images.forEach((img) => {\n        bind(img, \"load error\", () => {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const { root, track, list } = Components2.Elements;\n  const { getAt } = Slides;\n  let vertical;\n  let rootRect;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n  function resize() {\n    const newRect = rect(root);\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      Slides.style(resolve(\"marginRight\"), unit(options.gap));\n      Slides.style(\"width\", cssSlideWidth() || null);\n      setSlidesHeight();\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n  function cssPadding(right) {\n    const { padding } = options;\n    const prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    let height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n  }\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Elements, Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n  function computeCloneCount() {\n    let { clones: clones2 } = options;\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n  const { resolve, orient } = Components2.Direction;\n  const { list, track } = Components2.Elements;\n  let waiting;\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n  function reposition() {\n    if (!isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const { set } = Splide2.state;\n      const position = getPosition();\n      const looping = dest !== index;\n      waiting = looping || options.waitForTransition;\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Components2.Transition.start(dest, () => {\n        looping && jump(index);\n        waiting = false;\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n    }\n  }\n  function loop(position) {\n    if (!waiting && Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= sign(excess) * size * ceil(abs(excess) / size);\n    return position;\n  }\n  function cancel() {\n    waiting = false;\n    translate(getPosition());\n    Components2.Transition.cancel();\n  }\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    const { focus } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function isBusy() {\n    return !!waiting;\n  }\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit } = Move;\n  const { isEnough, getLength } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    let index = currIndex;\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      if (isLoop) {\n        index = clamp(control, -perPage, slideCount + perPage - 1);\n      } else {\n        index = clamp(control, 0, getEnd());\n      }\n    }\n    return index;\n  }\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function getEnd() {\n    let end = slideCount - perPage;\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n    return max(end, 0);\n  }\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n    return index;\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n    return index;\n  }\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n    if (prev && next) {\n      if (!arrows.prev) {\n        const { id } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    const { go } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nfunction Autoplay(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Elements } = Components2;\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const { isPaused } = interval;\n  let hovered;\n  let focused;\n  let paused;\n  function mount() {\n    const { autoplay } = options;\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n  function listen() {\n    const { root } = Elements;\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", (e) => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", (e) => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(manual = true) {\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n    paused = manual;\n  }\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  function update(rate) {\n    const { bar } = Elements;\n    if (bar) {\n      style(bar, \"width\", `${rate * 100}%`);\n    }\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  function destroy() {\n    apply(false);\n  }\n  function apply(cover) {\n    Components2.Slides.forEach((Slide) => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit, exceededLimit } = Move;\n  let interval;\n  let scrollCallback;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, (rate) => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  function easing(t) {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Move, Scroll, Controller } = Components2;\n  const { track } = Components2.Elements;\n  const { resolve, orient } = Components2.Direction;\n  const { getPosition, exceededLimit } = Move;\n  const listenerOptions = { passive: false, capture: true };\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n    bind(track, \"click\", onClick, { capture: true });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    const { drag } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    if (!disabled) {\n      const { noDrag } = options;\n      const isTouch = isTouchEvent(e);\n      const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n      if (isDraggable && (isTouch || !e.button)) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          clickPrevented = false;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n    lastEvent = e;\n    if (e.cancelable) {\n      const diff = coordOf(e) - coordOf(baseEvent);\n      if (dragging) {\n        Move.translate(basePosition + constrain(diff));\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n        if (expired || exceeded) {\n          save(e);\n        }\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        let { dragMinThreshold: thresholds } = options;\n        thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n        dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(Splide2.index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n        prevent(e);\n      }\n      emit(EVENT_DRAGGED);\n    }\n    dragging = false;\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\nfunction Keyboard(Splide2, Components2, options) {\n  const { on, bind, unbind } = EventInterface(Splide2);\n  const { root } = Components2.Elements;\n  const { resolve } = Components2.Direction;\n  let target;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, () => {\n      destroy();\n      init();\n    });\n  }\n  function init() {\n    const { keyboard = \"global\" } = options;\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n      bind(target, \"keydown\", onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, \"keydown\");\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n  function onKeydown(e) {\n    const { key } = e;\n    const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n    if (normalizedKey === resolve(\"ArrowLeft\")) {\n      Splide2.go(\"<\");\n    } else if (normalizedKey === resolve(\"ArrowRight\")) {\n      Splide2.go(\">\");\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const { on, off, bind, emit } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        destroy();\n        init();\n      });\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n  function init() {\n    Components2.Slides.forEach((_Slide) => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({ _img, _Slide, src, srcset, _spinner });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  function observe() {\n    images = images.filter((data) => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n      return true;\n    });\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  function load(data) {\n    const { _img } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", (e) => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach((name) => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  function onLoad(data, error) {\n    const { _Slide } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Slides, Elements, Controller } = Components2;\n  const { hasFocus, getIndex } = Controller;\n  const items = [];\n  let list;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  function init() {\n    destroy();\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n      update();\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach((item) => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  function createPagination() {\n    const { length } = Splide2;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n      const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({ li, button, page: i });\n    }\n  }\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n    emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\nfunction Sync(Splide2, Components2, options) {\n  const { splides } = Splide2;\n  const { list } = Components2.Elements;\n  function mount() {\n    if (options.isNavigation) {\n      navigate();\n    } else {\n      sync();\n    }\n  }\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n  }\n  function sync() {\n    const processed = [];\n    splides.concat(Splide2).forEach((splide, index, instances) => {\n      EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n        instances.forEach((instance) => {\n          if (instance !== splide && !includes(processed, splide)) {\n            processed.push(instance);\n            instance.go(instance.is(LOOP) ? dest : index2);\n          }\n        });\n        empty(processed);\n      });\n    });\n  }\n  function navigate() {\n    const { on, emit } = EventInterface(Splide2);\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n    }\n  }\n  function onWheel(e) {\n    const { deltaY } = e;\n    if (deltaY) {\n      Splide2.go(deltaY < 0 ? \"<\" : \">\");\n      prevent(e);\n    }\n  }\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\n\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n  function start(index, done) {\n    const { track } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  const { Move, Controller } = Components2;\n  const { list } = Components2.Elements;\n  let endCallback;\n  function mount() {\n    bind(list, \"transitionend\", (e) => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    apply(\"\");\n  }\n  function getSpeed(index) {\n    const { rewindSpeed } = options;\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n  mount(Extensions, Transition) {\n    const { state, Components: Components2 } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, (component) => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  sync(splide) {\n    this.splides.push(splide);\n    splide.splides.push(this);\n    return this;\n  }\n  go(control) {\n    this._Components.Controller.go(control);\n    return this;\n  }\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n    return this;\n  }\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n    return this;\n  }\n  is(type) {\n    return this._options.type === type;\n  }\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  destroy(completely = true) {\n    const { event, state } = this;\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, (component) => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    const { _options } = this;\n    merge(_options, options);\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n};\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\nconst CLASS_RENDERED = \"is-rendered\";\n\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n  build() {\n    let css = \"\";\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach((breakpoint) => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      css += `#${this.id} ${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n  static clean(splide) {\n    const { on } = EventInterface(splide);\n    const { root } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? { html: content } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n  registerRootStyles() {\n    this.breakpoints.forEach(([width, options]) => {\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n  registerTrackStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n  registerListStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n    });\n  }\n  registerSlideStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      const height = this.cssSlideHeight(options);\n      if (height) {\n        Style2.rule(selector, \"height\", height, width);\n      } else {\n        Style2.rule(selector, \"padding-top\", this.cssSlidePadding(options), width);\n      }\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n  buildTranslate(options) {\n    const { resolve, orient } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n    return values.filter(Boolean).map((value) => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n  cssOffsetClones(options) {\n    const { resolve, orient } = this.Direction;\n    const cloneCount = this.getCloneCount();\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n  cssOffsetCenter(options) {\n    const { resolve, orient } = this.Direction;\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n    const values = [];\n    const { perPage, gap } = options;\n    values.push(`${orient(50 / perPage)}%`);\n    if (gap) {\n      const { value, unit: unit2 } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n    return values;\n  }\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n    if (cloneCount && options.gap) {\n      const { orient } = this.Direction;\n      const { value, unit: unit2 } = this.parseCssValue(options.gap);\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n      const { perPage } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n    return \"\";\n  }\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n  cssPadding(options, right) {\n    const { padding } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  cssTrackHeight(options) {\n    let height = \"\";\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n    return height;\n  }\n  cssHeight(options) {\n    return unit(options.height);\n  }\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  cssSlidePadding(options) {\n    const { heightRatio } = options;\n    return heightRatio ? `${heightRatio * 100}%` : \"\";\n  }\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return { value: number, unit: unit2 };\n    }\n    return { value, unit: \"px\" };\n  }\n  parseBreakpoints() {\n    const { breakpoints } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n    return false;\n  }\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n  buildClasses() {\n    const { options } = this;\n    return [\n      CLASS_ROOT,\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE,\n      !this.config.hidden && CLASS_RENDERED\n    ].filter(Boolean).join(\" \");\n  }\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n  renderSlides() {\n    const { slideTag: tag } = this.config;\n    return this.slides.map((content) => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n  cover(content) {\n    const { styles, html = \"\" } = content;\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n  generateClones(contents) {\n    const { classes } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, { class: `${content.attrs.class} ${classes.clone}` });\n      const clone = assign({}, content, { attrs });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n  getCloneCount() {\n    if (this.isLoop()) {\n      const { options } = this;\n      if (options.clones) {\n        return options.clones;\n      }\n      const perPage = max(...this.breakpoints.map(([, options2]) => options2.perPage));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n    return 0;\n  }\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n  renderArrow(prev) {\n    const { classes, i18n } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n  html() {\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n    html += beforeTrack || \"\";\n    if (arrows) {\n      html += this.renderArrows();\n    }\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n    html += `</div>`;\n    return html;\n  }\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };\n","import Splide from '@splidejs/splide';\r\n\r\n\r\nif (document.querySelector('#carousel')) {\r\n  new Splide( '#carousel', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 4,\r\n    perMove: 1,\r\n    gap: 32,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n      },\r\n      767: {\r\n        perPage: 2,\r\n        gap: 10,\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n\r\nif (document.querySelector('#testimonials')) {\r\n  new Splide( '#testimonials', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 3,\r\n    perMove: 1,\r\n    gap: 28,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n      },\r\n      767: {\r\n        perPage: 2,\r\n        gap: 10,\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n","/**\r\n * Toggle Nav\r\n * ======================================\r\n * - toggle class on body\r\n */\r\n\r\nconst ELEMENTS = '.togglenav__button'\r\nconst TOGGLE_CLASS = 'nav-is-open'\r\n\r\nclass ToggleNav {\r\n  constructor() {\r\n    this.elements = document.querySelectorAll(ELEMENTS)\r\n\r\n    if (!this.elements) {\r\n      return false\r\n    }\r\n\r\n    this.elements.forEach((el) => {\r\n      el.addEventListener('click', this.toggleNav, false)\r\n    })\r\n  }\r\n\r\n  toggleNav(e) {\r\n    document.body.classList.toggle(TOGGLE_CLASS)\r\n    document.body.classList.toggle('lock')\r\n\r\n    e.preventDefault()\r\n  }\r\n}\r\n\r\nnew ToggleNav()\r\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.1\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SimpleLightbox = /*#__PURE__*/function () {\n  function SimpleLightbox(elements, options) {\n    var _this = this;\n\n    _classCallCheck(this, SimpleLightbox);\n\n    _defineProperty(this, \"defaultOptions\", {\n      sourceAttr: 'href',\n      overlay: true,\n      spinner: true,\n      nav: true,\n      navText: ['&lsaquo;', '&rsaquo;'],\n      captions: true,\n      captionDelay: 0,\n      captionSelector: 'img',\n      captionType: 'attr',\n      captionsData: 'title',\n      captionPosition: 'bottom',\n      captionClass: '',\n      close: true,\n      closeText: '&times;',\n      swipeClose: true,\n      showCounter: true,\n      fileExt: 'png|jpg|jpeg|gif|webp',\n      animationSlide: true,\n      animationSpeed: 250,\n      preloading: true,\n      enableKeyboard: true,\n      loop: true,\n      rel: false,\n      docClose: true,\n      swipeTolerance: 50,\n      className: 'simple-lightbox',\n      widthRatio: 0.8,\n      heightRatio: 0.9,\n      scaleImageToRatio: false,\n      disableRightClick: false,\n      disableScroll: true,\n      alertError: true,\n      alertErrorMessage: 'Image not found, next image will be loaded',\n      additionalHtml: false,\n      history: true,\n      throttleInterval: 0,\n      doubleTapZoom: 2,\n      maxZoom: 10,\n      htmlClass: 'has-lightbox',\n      rtl: false,\n      fixedClass: 'sl-fixed',\n      fadeSpeed: 300,\n      uniqueImages: true,\n      focus: true,\n      scrollZoom: true,\n      scrollZoomFactor: 0.5\n    });\n\n    _defineProperty(this, \"transitionPrefix\", void 0);\n\n    _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n    _defineProperty(this, \"transitionCapable\", false);\n\n    _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n    _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n    _defineProperty(this, \"initialLocationHash\", void 0);\n\n    _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n    _defineProperty(this, \"isOpen\", false);\n\n    _defineProperty(this, \"isAnimating\", false);\n\n    _defineProperty(this, \"isClosing\", false);\n\n    _defineProperty(this, \"isFadeIn\", false);\n\n    _defineProperty(this, \"urlChangedOnce\", false);\n\n    _defineProperty(this, \"hashReseted\", false);\n\n    _defineProperty(this, \"historyHasChanges\", false);\n\n    _defineProperty(this, \"historyUpdateTimeout\", null);\n\n    _defineProperty(this, \"currentImage\", void 0);\n\n    _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n    _defineProperty(this, \"domNodes\", {});\n\n    _defineProperty(this, \"loadedImages\", []);\n\n    _defineProperty(this, \"initialImageIndex\", 0);\n\n    _defineProperty(this, \"currentImageIndex\", 0);\n\n    _defineProperty(this, \"initialSelector\", null);\n\n    _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n    _defineProperty(this, \"controlCoordinates\", {\n      swipeDiff: 0,\n      swipeYDiff: 0,\n      swipeStart: 0,\n      swipeEnd: 0,\n      swipeYStart: 0,\n      swipeYEnd: 0,\n      mousedown: false,\n      imageLeft: 0,\n      zoomed: false,\n      containerHeight: 0,\n      containerWidth: 0,\n      containerOffsetX: 0,\n      containerOffsetY: 0,\n      imgHeight: 0,\n      imgWidth: 0,\n      capture: false,\n      initialOffsetX: 0,\n      initialOffsetY: 0,\n      initialPointerOffsetX: 0,\n      initialPointerOffsetY: 0,\n      initialPointerOffsetX2: 0,\n      initialPointerOffsetY2: 0,\n      initialScale: 1,\n      initialPinchDistance: 0,\n      pointerOffsetX: 0,\n      pointerOffsetY: 0,\n      pointerOffsetX2: 0,\n      pointerOffsetY2: 0,\n      targetOffsetX: 0,\n      targetOffsetY: 0,\n      targetScale: 0,\n      pinchOffsetX: 0,\n      pinchOffsetY: 0,\n      limitOffsetX: 0,\n      limitOffsetY: 0,\n      scaleDifference: 0,\n      targetPinchDistance: 0,\n      touchCount: 0,\n      doubleTapped: false,\n      touchmoveCount: 0\n    });\n\n    this.options = Object.assign(this.defaultOptions, options);\n    this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n    if (typeof elements === 'string') {\n      this.initialSelector = elements;\n      this.elements = Array.from(document.querySelectorAll(elements));\n    } else {\n      this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n    }\n\n    this.relatedElements = [];\n    this.transitionPrefix = this.calculateTransitionPrefix();\n    this.transitionCapable = this.transitionPrefix !== false;\n    this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n    if (this.options.rel) {\n      this.elements = this.getRelated(this.options.rel);\n    }\n\n    if (this.options.uniqueImages) {\n      var imgArr = [];\n      this.elements = Array.from(this.elements).filter(function (element) {\n        var src = element.getAttribute(_this.options.sourceAttr);\n\n        if (imgArr.indexOf(src) === -1) {\n          imgArr.push(src);\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    this.createDomNodes();\n\n    if (this.options.close) {\n      this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n    }\n\n    if (this.options.nav) {\n      this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n    }\n\n    if (this.options.spinner) {\n      this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n    }\n\n    this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n      if (_this.isValidLink(event.currentTarget)) {\n        event.preventDefault();\n\n        if (_this.isAnimating) {\n          return false;\n        }\n\n        _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n        _this.openImage(event.currentTarget);\n      }\n    }); // close addEventListener click addEventListener doc\n\n    if (this.options.docClose) {\n      this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n        if (_this.isOpen && event.target === event.currentTarget) {\n          _this.close();\n        }\n      });\n    } // disable rightclick\n\n\n    if (this.options.disableRightClick) {\n      this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n        if (event.target.parentElement.classList.contains(\"sl-image\")) {\n          event.preventDefault();\n        }\n      });\n    } // keyboard-control\n\n\n    if (this.options.enableKeyboard) {\n      this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n        _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n        if (_this.isAnimating && event.key === 'Escape') {\n          _this.currentImage.setAttribute('src', '');\n\n          _this.isAnimating = false;\n          return _this.close();\n        }\n\n        if (_this.isOpen) {\n          event.preventDefault();\n\n          if (event.key === 'Escape') {\n            _this.close();\n          }\n\n          if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n            _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n          }\n        }\n      }, this.options.throttleInterval));\n    }\n\n    this.addEvents();\n  }\n\n  _createClass(SimpleLightbox, [{\n    key: \"checkPassiveEventsSupport\",\n    value: function checkPassiveEventsSupport() {\n      // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n      // Test via a getter in the options object to see if the passive property is accessed\n      var supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            supportsPassive = true;\n          }\n        });\n        window.addEventListener(\"testPassive\", null, opts);\n        window.removeEventListener(\"testPassive\", null, opts);\n      } catch (e) {}\n\n      return supportsPassive;\n    }\n  }, {\n    key: \"createDomNodes\",\n    value: function createDomNodes() {\n      this.domNodes.overlay = document.createElement('div');\n      this.domNodes.overlay.classList.add('sl-overlay');\n      this.domNodes.overlay.dataset.opacityTarget = \".7\";\n      this.domNodes.closeButton = document.createElement('button');\n      this.domNodes.closeButton.classList.add('sl-close');\n      this.domNodes.closeButton.innerHTML = this.options.closeText;\n      this.domNodes.spinner = document.createElement('div');\n      this.domNodes.spinner.classList.add('sl-spinner');\n      this.domNodes.spinner.innerHTML = '<div></div>';\n      this.domNodes.navigation = document.createElement('div');\n      this.domNodes.navigation.classList.add('sl-navigation');\n      this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n      this.domNodes.counter = document.createElement('div');\n      this.domNodes.counter.classList.add('sl-counter');\n      this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n      this.domNodes.caption = document.createElement('div');\n      this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n      if (this.options.captionClass) {\n        this.domNodes.caption.classList.add(this.options.captionClass);\n      }\n\n      this.domNodes.image = document.createElement('div');\n      this.domNodes.image.classList.add('sl-image');\n      this.domNodes.wrapper = document.createElement('div');\n      this.domNodes.wrapper.classList.add('sl-wrapper');\n      this.domNodes.wrapper.setAttribute('tabindex', -1);\n      this.domNodes.wrapper.setAttribute('role', 'dialog');\n      this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n      if (this.options.className) {\n        this.domNodes.wrapper.classList.add(this.options.className);\n      }\n\n      if (this.options.rtl) {\n        this.domNodes.wrapper.classList.add('sl-dir-rtl');\n      }\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(func, limit) {\n      var inThrottle;\n      return function () {\n        if (!inThrottle) {\n          func.apply(this, arguments);\n          inThrottle = true;\n          setTimeout(function () {\n            return inThrottle = false;\n          }, limit);\n        }\n      };\n    }\n  }, {\n    key: \"isValidLink\",\n    value: function isValidLink(element) {\n      return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"calculateTransitionPrefix\",\n    value: function calculateTransitionPrefix() {\n      var s = (document.body || document.documentElement).style;\n      return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n    }\n  }, {\n    key: \"toggleScrollbar\",\n    value: function toggleScrollbar(type) {\n      var scrollbarWidth = 0;\n      var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n      if (type === 'hide') {\n        var fullWindowWidth = window.innerWidth;\n\n        if (!fullWindowWidth) {\n          var documentElementRect = document.documentElement.getBoundingClientRect();\n          fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n        }\n\n        if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n          var scrollDiv = document.createElement('div'),\n              paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n          scrollDiv.classList.add('sl-scrollbar-measure');\n          document.body.appendChild(scrollDiv);\n          scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          document.body.removeChild(scrollDiv);\n          document.body.dataset.originalPaddingRight = paddingRight;\n\n          if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n            document.body.classList.add('hidden-scroll');\n            document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n            fixedElements.forEach(function (element) {\n              var actualPadding = element.style.paddingRight;\n              var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n              element.dataset.originalPaddingRight = actualPadding;\n              element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n            });\n          }\n        }\n      } else {\n        document.body.classList.remove('hidden-scroll');\n        document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n        fixedElements.forEach(function (element) {\n          var padding = element.dataset.originalPaddingRight;\n\n          if (typeof padding !== 'undefined') {\n            element.style.paddingRight = padding;\n          }\n        });\n      }\n\n      return scrollbarWidth;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      if (!this.isOpen || this.isAnimating || this.isClosing) {\n        return false;\n      }\n\n      this.isClosing = true;\n      var element = this.relatedElements[this.currentImageIndex];\n      element.dispatchEvent(new Event('close.simplelightbox'));\n\n      if (this.options.history) {\n        this.historyHasChanges = false;\n\n        if (!this.hashReseted) {\n          this.resetHash();\n        }\n      }\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n        if (_this2.options.disableScroll) {\n          _this2.toggleScrollbar('show');\n        }\n\n        if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n          document.querySelector('html').classList.remove(_this2.options.htmlClass);\n        }\n\n        document.body.removeChild(_this2.domNodes.wrapper);\n        document.body.removeChild(_this2.domNodes.overlay);\n        _this2.domNodes.additionalHtml = null;\n        element.dispatchEvent(new Event('closed.simplelightbox'));\n        _this2.isClosing = false;\n      });\n      this.currentImage = null;\n      this.isOpen = false;\n      this.isAnimating = false; // reset touchcontrol coordinates\n\n      for (var key in this.controlCoordinates) {\n        this.controlCoordinates[key] = 0;\n      }\n\n      this.controlCoordinates.mousedown = false;\n      this.controlCoordinates.zoomed = false;\n      this.controlCoordinates.capture = false;\n      this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n      this.controlCoordinates.doubleTapped = false;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return window.location.hash.substring(1);\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      var _this3 = this;\n\n      var index = this.currentImageIndex,\n          length = this.relatedElements.length,\n          next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n          prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n          nextImage = new Image(),\n          prevImage = new Image();\n      nextImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          //is this condition even required... setting multiple times will not change usage...\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n      });\n      nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n      prevImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n      });\n      prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(direction) {\n      var _this4 = this;\n\n      var slideDirection = direction;\n\n      if (this.options.rtl) {\n        direction = -direction;\n      }\n\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n      var newIndex = this.currentImageIndex + direction;\n\n      if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n        return false;\n      }\n\n      this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n      if (this.options.animationSlide) {\n        this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n      }\n\n      this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n        _this4.isAnimating = true;\n\n        if (!_this4.isClosing) {\n          setTimeout(function () {\n            var element = _this4.relatedElements[_this4.currentImageIndex];\n\n            _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n            if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n              _this4.show(_this4.domNodes.spinner);\n            }\n\n            if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n              _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n            }\n\n            _this4.adjustImage(slideDirection);\n\n            if (_this4.options.preloading) _this4.preload();\n          }, 100);\n        } else {\n          _this4.isAnimating = false;\n        }\n      });\n    }\n  }, {\n    key: \"adjustImage\",\n    value: function adjustImage(direction) {\n      var _this5 = this;\n\n      if (!this.currentImage) {\n        return false;\n      }\n\n      var tmpImage = new Image(),\n          windowWidth = window.innerWidth * this.options.widthRatio,\n          windowHeight = window.innerHeight * this.options.heightRatio;\n      tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n      this.zoomPanElement(0, 0, 1);\n      tmpImage.addEventListener('error', function (event) {\n        _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n        _this5.isAnimating = false;\n        _this5.isOpen = true;\n        _this5.domNodes.spinner.style.display = 'none';\n        var dirIsDefined = direction === 1 || direction === -1;\n\n        if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n          return _this5.close();\n        }\n\n        if (_this5.options.alertError) {\n          alert(_this5.options.alertErrorMessage);\n        }\n\n        _this5.loadImage(dirIsDefined ? direction : 1);\n      });\n      tmpImage.addEventListener('load', function (event) {\n        if (typeof direction !== 'undefined') {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n        } // history\n\n\n        if (_this5.options.history) {\n          _this5.updateURL();\n        }\n\n        if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n          _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n        }\n\n        var imageWidth = event.target.width,\n            imageHeight = event.target.height;\n\n        if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n          var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n          imageWidth /= ratio;\n          imageHeight /= ratio;\n        }\n\n        _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n        _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n        _this5.domNodes.image.style.width = imageWidth + 'px';\n        _this5.domNodes.image.style.height = imageHeight + 'px';\n        _this5.domNodes.spinner.style.display = 'none';\n\n        if (_this5.options.focus) {\n          _this5.forceFocus();\n        }\n\n        _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n          if (_this5.options.focus) {\n            _this5.domNodes.wrapper.focus();\n          }\n        });\n\n        _this5.isOpen = true;\n        var captionContainer, captionText;\n\n        if (typeof _this5.options.captionSelector === 'string') {\n          captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n        } else if (typeof _this5.options.captionSelector === 'function') {\n          captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n        }\n\n        if (_this5.options.captions && captionContainer) {\n          if (_this5.options.captionType === 'data') {\n            captionText = captionContainer.dataset[_this5.options.captionsData];\n          } else if (_this5.options.captionType === 'text') {\n            captionText = captionContainer.innerHTML;\n          } else {\n            captionText = captionContainer.getAttribute(_this5.options.captionsData);\n          }\n        }\n\n        if (!_this5.options.loop) {\n          if (_this5.currentImageIndex === 0) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n\n          if (_this5.currentImageIndex > 0) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n        } else {\n          if (_this5.relatedElements.length === 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          } else {\n            _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          }\n        }\n\n        if (direction === 1 || direction === -1) {\n          if (_this5.options.animationSlide) {\n            _this5.slide(0, 100 * direction + 'px');\n\n            setTimeout(function () {\n              _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n            }, 50);\n          }\n\n          _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          });\n        } else {\n          _this5.isAnimating = false;\n\n          _this5.setCaption(captionText, imageWidth);\n        }\n\n        if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n          _this5.domNodes.additionalHtml = document.createElement('div');\n\n          _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n          _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n          _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n        }\n      });\n    }\n  }, {\n    key: \"zoomPanElement\",\n    value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n      this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n    }\n  }, {\n    key: \"minMax\",\n    value: function minMax(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n  }, {\n    key: \"setZoomData\",\n    value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n      this.currentImage.dataset.scale = initialScale;\n      this.currentImage.dataset.translateX = targetOffsetX;\n      this.currentImage.dataset.translateY = targetOffsetY;\n    }\n  }, {\n    key: \"hashchangeHandler\",\n    value: function hashchangeHandler() {\n      if (this.isOpen && this.hash === this.initialLocationHash) {\n        this.hashReseted = true;\n        this.close();\n      }\n    }\n  }, {\n    key: \"addEvents\",\n    value: function addEvents() {\n      var _this6 = this;\n\n      // resize/responsive\n      this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n        //this.adjustImage.bind(this)\n        if (_this6.isOpen) {\n          _this6.adjustImage();\n        }\n      });\n      this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n      if (this.options.history) {\n        setTimeout(function () {\n          _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n            if (_this6.isOpen) {\n              _this6.hashchangeHandler();\n            }\n          });\n        }, 40);\n      }\n\n      this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n        if (!event.currentTarget.tagName.match(/button/i)) {\n          return true;\n        }\n\n        event.preventDefault();\n        _this6.controlCoordinates.swipeDiff = 0;\n\n        _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n      });\n\n      if (this.options.scrollZoom) {\n        var scale = 1;\n        this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n          if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n            return true;\n          }\n\n          if (_this6.controlCoordinates.containerHeight == 0) {\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          }\n\n          event.preventDefault();\n          var delta = event.delta || event.wheelDelta;\n\n          if (delta === undefined) {\n            //we are on firefox\n            delta = event.detail;\n          }\n\n          delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n          // apply zoom\n\n          scale += delta * _this6.options.scrollZoomFactor * scale;\n          scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n          _this6.controlCoordinates.targetScale = scale;\n          _this6.controlCoordinates.pinchOffsetX = event.pageX;\n          _this6.controlCoordinates.pinchOffsetY = event.pageY;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n          if (_this6.controlCoordinates.targetScale > 1) {\n            _this6.controlCoordinates.zoomed = true;\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          } else {\n            if (_this6.controlCoordinates.initialScale === 1) {\n              _this6.controlCoordinates.zoomed = false;\n\n              if (_this6.domNodes.caption.style.display === 'none') {\n                _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = null;\n            _this6.controlCoordinates.capture = false;\n          }\n\n          _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n          _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n          _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n          _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n          _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        });\n      }\n\n      this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n        if (event.target.tagName === 'A' && event.type === 'touchstart') {\n          return true;\n        }\n\n        if (event.type === 'mousedown') {\n          event.preventDefault();\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n          _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n          _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          _this6.controlCoordinates.capture = true;\n        } else {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              if (!_this6.controlCoordinates.doubleTapped) {\n                _this6.controlCoordinates.doubleTapped = true;\n                setTimeout(function () {\n                  _this6.controlCoordinates.doubleTapped = false;\n                }, 300);\n              } else {\n                _this6.currentImage.classList.add('sl-transition');\n\n                if (!_this6.controlCoordinates.zoomed) {\n                  _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n\n                  _this6.controlCoordinates.zoomed = true;\n                } else {\n                  _this6.controlCoordinates.initialScale = 1;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  _this6.controlCoordinates.zoomed = false;\n                }\n\n                setTimeout(function () {\n                  if (_this6.currentImage) {\n                    _this6.currentImage.classList.remove('sl-transition');\n                  }\n                }, 200);\n                return false;\n              }\n\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            } else if (_this6.controlCoordinates.touchCount === 2)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n              _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n              _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n            }\n\n          _this6.controlCoordinates.capture = true;\n        }\n\n        if (_this6.controlCoordinates.mousedown) return true;\n\n        if (_this6.transitionCapable) {\n          _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n        }\n\n        _this6.controlCoordinates.mousedown = true;\n        _this6.controlCoordinates.swipeDiff = 0;\n        _this6.controlCoordinates.swipeYDiff = 0;\n        _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n        _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n        return false;\n      });\n      this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n        if (!_this6.controlCoordinates.mousedown) {\n          return true;\n        }\n\n        if (event.type === 'touchmove') {\n          if (_this6.controlCoordinates.capture === false) {\n            return false;\n          }\n\n          _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.touchmoveCount++;\n\n          if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n              if (_this6.controlCoordinates.initialPinchDistance === null) {\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                /* Initialize helpers */\n                _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                if (_this6.controlCoordinates.targetScale > 1) {\n                  _this6.controlCoordinates.zoomed = true;\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              }\n            } else {\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n        }\n        /* Mouse Move implementation */\n\n\n        if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n          if (event.type == 'touchmove') return true;\n          event.preventDefault();\n          if (_this6.controlCoordinates.capture === false) return false;\n          _this6.controlCoordinates.pointerOffsetX = event.clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.clientY;\n          _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n          }\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n            _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n          }\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        }\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n          _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n          _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n          if (_this6.options.animationSlide) {\n            _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n        if (_this6.isTouchDevice && event.type === 'touchend') {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n\n          if (_this6.controlCoordinates.touchCount === 0)\n            /* No touch */\n            {\n              /* Set attributes */\n              if (_this6.currentImage) {\n                _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n              }\n\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            } else if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            } else if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPinchDistance = null;\n            }\n        }\n\n        if (_this6.controlCoordinates.mousedown) {\n          _this6.controlCoordinates.mousedown = false;\n          var possibleDir = true;\n\n          if (!_this6.options.loop) {\n            if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n              possibleDir = false;\n            }\n\n            if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n              possibleDir = false;\n            }\n          }\n\n          if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n            _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n          } else if (_this6.options.animationSlide) {\n            _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n          }\n\n          if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n            _this6.close();\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n        if (_this6.isTouchDevice) return;\n        _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n        _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n        _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n        _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n        _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n        _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n        _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n        _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n        _this6.currentImage.classList.add('sl-transition');\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n            _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n\n          _this6.controlCoordinates.zoomed = true;\n        } else {\n          _this6.controlCoordinates.initialScale = 1;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          _this6.controlCoordinates.zoomed = false;\n\n          if (_this6.domNodes.caption.style.display === 'none') {\n            _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n        }\n\n        setTimeout(function () {\n          if (_this6.currentImage) {\n            _this6.currentImage.classList.remove('sl-transition');\n\n            _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n          }\n        }, 200);\n        _this6.controlCoordinates.capture = true;\n        return false;\n      });\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions(element) {\n      var styles = window.getComputedStyle(element),\n          height = element.offsetHeight,\n          width = element.offsetWidth,\n          borderTopWidth = parseFloat(styles.borderTopWidth),\n          borderBottomWidth = parseFloat(styles.borderBottomWidth),\n          paddingTop = parseFloat(styles.paddingTop),\n          paddingBottom = parseFloat(styles.paddingBottom),\n          borderLeftWidth = parseFloat(styles.borderLeftWidth),\n          borderRightWidth = parseFloat(styles.borderRightWidth),\n          paddingLeft = parseFloat(styles.paddingLeft),\n          paddingRight = parseFloat(styles.paddingRight);\n      return {\n        height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n        width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n      };\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash() {\n      var newHash = 'pid=' + (this.currentImageIndex + 1),\n          newURL = window.location.href.split('#')[0] + '#' + newHash;\n      this.hashReseted = false;\n\n      if (this.pushStateSupport) {\n        window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n      } else {\n        // what is the browser target of this?\n        if (this.historyHasChanges) {\n          window.location.replace(newURL);\n        } else {\n          window.location.hash = newHash;\n        }\n      }\n\n      if (!this.historyHasChanges) {\n        this.urlChangedOnce = true;\n      }\n\n      this.historyHasChanges = true;\n    }\n  }, {\n    key: \"resetHash\",\n    value: function resetHash() {\n      this.hashReseted = true;\n\n      if (this.urlChangedOnce) {\n        history.back();\n      } else {\n        if (this.pushStateSupport) {\n          history.pushState('', document.title, window.location.pathname + window.location.search);\n        } else {\n          window.location.hash = '';\n        }\n      } //\n      //in case an history operation is still pending\n\n\n      clearTimeout(this.historyUpdateTimeout);\n    }\n  }, {\n    key: \"updateURL\",\n    value: function updateURL() {\n      clearTimeout(this.historyUpdateTimeout);\n\n      if (!this.historyHasChanges) {\n        this.updateHash(); // first time\n      } else {\n        this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n      }\n    }\n  }, {\n    key: \"setCaption\",\n    value: function setCaption(captionText, imageWidth) {\n      var _this7 = this;\n\n      if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n        this.hide(this.domNodes.caption);\n        this.domNodes.caption.style.width = imageWidth + 'px';\n        this.domNodes.caption.innerHTML = captionText;\n        this.domNodes.image.appendChild(this.domNodes.caption);\n        setTimeout(function () {\n          _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n        }, this.options.captionDelay);\n      }\n    }\n  }, {\n    key: \"slide\",\n    value: function slide(speed, pos) {\n      if (!this.transitionCapable) {\n        return this.domNodes.image.style.left = pos;\n      }\n\n      this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n      this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n  }, {\n    key: \"getRelated\",\n    value: function getRelated(rel) {\n      var elems;\n\n      if (rel && rel !== false && rel !== 'nofollow') {\n        elems = Array.from(this.elements).filter(function (element) {\n          return element.getAttribute('rel') === rel;\n        });\n      } else {\n        elems = this.elements;\n      }\n\n      return elems;\n    }\n  }, {\n    key: \"openImage\",\n    value: function openImage(element) {\n      var _this8 = this;\n\n      element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n      if (this.options.disableScroll) {\n        this.globalScrollbarWidth = this.toggleScrollbar('hide');\n      }\n\n      if (this.options.htmlClass && this.options.htmlClass !== '') {\n        document.querySelector('html').classList.add(this.options.htmlClass);\n      }\n\n      document.body.appendChild(this.domNodes.wrapper);\n      this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n      if (this.options.overlay) {\n        document.body.appendChild(this.domNodes.overlay);\n      }\n\n      this.relatedElements = this.getRelated(element.rel);\n\n      if (this.options.showCounter) {\n        if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.removeChild(this.domNodes.counter);\n        } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.appendChild(this.domNodes.counter);\n        }\n      }\n\n      this.isAnimating = true;\n      this.currentImageIndex = this.relatedElements.indexOf(element);\n      var targetURL = element.getAttribute(this.options.sourceAttr);\n      this.currentImage = document.createElement('img');\n      this.currentImage.style.display = 'none';\n      this.currentImage.setAttribute('src', targetURL);\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n\n      if (this.loadedImages.indexOf(targetURL) === -1) {\n        this.loadedImages.push(targetURL);\n      }\n\n      this.domNodes.image.innerHTML = '';\n      this.domNodes.image.setAttribute('style', '');\n      this.domNodes.image.appendChild(this.currentImage);\n      this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n      this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n      this.show(this.domNodes.spinner);\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n      this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n      this.adjustImage();\n\n      if (this.options.preloading) {\n        this.preload();\n      }\n\n      setTimeout(function () {\n        element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n      }, this.options.animationSpeed);\n    }\n  }, {\n    key: \"forceFocus\",\n    value: function forceFocus() {\n      var _this9 = this;\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n        if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n          _this9.domNodes.wrapper.focus();\n        }\n      });\n    } // utility\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(elements, events, callback, opts) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator = _createForOfIteratorHelper(elements),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var element = _step.value;\n\n          if (!element.namespaces) {\n            element.namespaces = {};\n          } // save the namespaces addEventListener the DOM element itself\n\n\n          var _iterator2 = _createForOfIteratorHelper(events),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var event = _step2.value;\n              var options = opts || false;\n              var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n              if (needsPassiveFix && this.isPassiveEventsSupported) {\n                if (_typeof(options) === 'object') {\n                  options.passive = true;\n                } else {\n                  options = {\n                    passive: true\n                  };\n                }\n              }\n\n              element.namespaces[event] = callback;\n              element.addEventListener(event.split('.')[0], callback, options);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(elements, events) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator3 = _createForOfIteratorHelper(elements),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var element = _step3.value;\n\n          var _iterator4 = _createForOfIteratorHelper(events),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var event = _step4.value;\n\n              if (element.namespaces && element.namespaces[event]) {\n                element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                delete element.namespaces[event];\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"fadeOut\",\n    value: function fadeOut(elements, duration, callback) {\n      var _this10 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator5 = _createForOfIteratorHelper(elements),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var element = _step5.value;\n          element.style.opacity = 1;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.isFadeIn = false;\n\n      var step = 16.66666 / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if ((currentOpacity -= step) < 0) {\n          var _iterator6 = _createForOfIteratorHelper(elements),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var element = _step6.value;\n              element.style.display = \"none\"; // element.style.opacity = '';\n\n              element.style.opacity = 1;\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          callback && callback.call(_this10, elements);\n        } else {\n          var _iterator7 = _createForOfIteratorHelper(elements),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _element = _step7.value;\n              _element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n\n          requestAnimationFrame(fade);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"fadeIn\",\n    value: function fadeIn(elements, duration, callback, display) {\n      var _this11 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator8 = _createForOfIteratorHelper(elements),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var element = _step8.value;\n          element.style.opacity = 0;\n          element.style.display = display || \"block\";\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      this.isFadeIn = true;\n\n      var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n          step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if (!((currentOpacity += step) > opacityTarget)) {\n          var _iterator9 = _createForOfIteratorHelper(elements),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var element = _step9.value;\n              element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n\n          if (!_this11.isFadeIn) return;\n          requestAnimationFrame(fade);\n        } else {\n          var _iterator10 = _createForOfIteratorHelper(elements),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var _element2 = _step10.value;\n              _element2.style.opacity = '';\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          callback && callback.call(_this11, elements);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(elements) {\n      elements = this.wrap(elements);\n\n      var _iterator11 = _createForOfIteratorHelper(elements),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var element = _step11.value;\n\n          if (element.style.display != 'none') {\n            element.dataset.initialDisplay = element.style.display;\n          }\n\n          element.style.display = 'none';\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(elements, display) {\n      elements = this.wrap(elements);\n\n      var _iterator12 = _createForOfIteratorHelper(elements),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var element = _step12.value;\n          element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap(input) {\n      return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n  }, {\n    key: \"on\",\n    value: function on(events, callback) {\n      events = this.wrap(events);\n\n      var _iterator13 = _createForOfIteratorHelper(this.elements),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var element = _step13.value;\n\n          if (!element.fullyNamespacedEvents) {\n            element.fullyNamespacedEvents = {};\n          }\n\n          var _iterator14 = _createForOfIteratorHelper(events),\n              _step14;\n\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var event = _step14.value;\n              element.fullyNamespacedEvents[event] = callback;\n              element.addEventListener(event, callback);\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(events) {\n      events = this.wrap(events);\n\n      var _iterator15 = _createForOfIteratorHelper(this.elements),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var element = _step15.value;\n\n          var _iterator16 = _createForOfIteratorHelper(events),\n              _step16;\n\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var event = _step16.value;\n\n              if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n              }\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      return this;\n    } // api\n\n  }, {\n    key: \"open\",\n    value: function open(elem) {\n      elem = elem || this.elements[0];\n\n      if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n        elem = elem.get(0);\n      }\n\n      this.initialImageIndex = this.elements.indexOf(elem);\n\n      if (this.initialImageIndex > -1) {\n        this.openImage(elem);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.loadImage(1);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.loadImage(-1);\n    } // get some useful data\n\n  }, {\n    key: \"getLighboxData\",\n    value: function getLighboxData() {\n      return {\n        currentImageIndex: this.currentImageIndex,\n        currentImage: this.currentImage,\n        globalScrollbarWidth: this.globalScrollbarWidth\n      };\n    } //close is exposed anyways..\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      //remove all custom event listeners from elements\n      this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n      this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n      this.removeEventListener(window, 'resize.' + this.eventNamespace);\n      this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n      this.close();\n\n      if (this.isOpen) {\n        document.body.removeChild(this.domNodes.wrapper);\n        document.body.removeChild(this.domNodes.overlay);\n      }\n\n      this.elements = null;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (!this.initialSelector) {\n        throw 'refreshing only works when you initialize using a selector!';\n      }\n\n      var options = this.options,\n          selector = this.initialSelector;\n      this.destroy();\n      this.constructor(selector, options);\n      return this;\n    }\n  }]);\n\n  return SimpleLightbox;\n}();\n\nvar _default = SimpleLightbox;\nexports[\"default\"] = _default;\nglobal.SimpleLightbox = SimpleLightbox;","import SimpleLightbox from \"simplelightbox\";\r\n\r\nnew SimpleLightbox('.gallery__fancybox', { /* options */ });\r\n","/**\n * Sticky Sidebar v2 JavaScript Plugin.\n * @version 1.0.1\n * @author Øystein Blixhavn <oystein@blixhavn.no>\n * @license The MIT License (MIT)\n */\nconst StickySidebar = (() => {\n\n    // ---------------------------------\n    // # Define Constants\n    // ---------------------------------\n    //\n    const EVENT_KEY = '.stickySidebar';\n    const VERSION   = '1.0.1';\n\n    const DEFAULTS = {\n      /**\n       * Additional top spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      topSpacing: 0,\n\n      /**\n       * Additional bottom spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      bottomSpacing: 0,\n\n      /**\n       * Container sidebar selector to know what the beginning and end of sticky element.\n       * @type {String|False}\n       */\n      containerSelector: false,\n\n      /**\n       * Parent element where the scrolling happens.\n       */\n      scrollContainer: false,\n\n      /**\n       * Inner wrapper selector.\n       * @type {String}\n       */\n      innerWrapperSelector: '.inner-wrapper-sticky',\n\n      /**\n       * The name of CSS class to apply to elements when they have become stuck.\n       * @type {String|False}\n       */\n      stickyClass: 'is-affixed',\n\n      /**\n       * The sidebar returns to its normal position if its width below this value.\n       * @type {Numeric}\n       */\n      minWidth: false\n    };\n\n    // ---------------------------------\n    // # Class Definition\n    // ---------------------------------\n    //\n    /**\n     * Sticky Sidebar Class.\n     * @public\n     */\n    class StickySidebar{\n\n      /**\n       * Sticky Sidebar Constructor.\n       * @constructor\n       * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n       * @param {Object} options - The options of sticky sidebar.\n       */\n      constructor(sidebar, options = {}){\n        this.options = StickySidebar.extend(DEFAULTS, options);\n\n        // Sidebar element query if there's no one, throw error.\n        this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n        if( 'undefined' === typeof this.sidebar )\n          throw new Error(\"There is no specific sidebar element.\");\n\n        this.sidebarInner = false;\n        this.container = this.sidebar.parentElement;\n\n        // Current Affix Type of sidebar element.\n        this.affixedType = 'STATIC';\n        this.direction = 'down';\n        this.support = {\n          transform:   false,\n          transform3d: false\n        };\n\n        this._initialized = false;\n        this._reStyle = false;\n        this._breakpoint = false;\n\n        // Dimensions of sidebar, container and screen viewport.\n        this.dimensions = {\n          translateY: 0,\n          maxTranslateY: 0,\n          topSpacing: 0,\n          lastTopSpacing: 0,\n          bottomSpacing: 0,\n          lastBottomSpacing: 0,\n          sidebarHeight: 0,\n          sidebarWidth: 0,\n          containerTop: 0,\n          containerHeight: 0,\n          viewportHeight: 0,\n          viewportTop: 0,\n          lastViewportTop: 0,\n        };\n\n        // Bind event handlers for referencability.\n        ['handleEvent'].forEach( (method) => {\n          this[method] = this[method].bind(this);\n        });\n\n        // Initialize sticky sidebar for first time.\n        this.initialize();\n      }\n\n      /**\n       * Initializes the sticky sidebar by adding inner wrapper, define its container,\n       * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n       * @private\n       */\n      initialize(){\n        this._setSupportFeatures();\n\n        // Get sticky sidebar inner wrapper, if not found, will create one.\n        if( this.options.innerWrapperSelector ){\n          this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n          if( null === this.sidebarInner )\n            this.sidebarInner = false;\n        }\n\n        if( ! this.sidebarInner ){\n          let wrapper = document.createElement('div');\n          wrapper.setAttribute('class', 'inner-wrapper-sticky');\n          this.sidebar.appendChild(wrapper);\n\n          while( this.sidebar.firstChild != wrapper )\n            wrapper.appendChild(this.sidebar.firstChild);\n\n          this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n        }\n\n        // Container wrapper of the sidebar.\n        if( this.options.containerSelector ){\n          let containers = document.querySelectorAll(this.options.containerSelector);\n          containers = Array.prototype.slice.call(containers);\n\n          containers.forEach((container, item) => {\n            if( ! container.contains(this.sidebar) ) return;\n            this.container = container;\n          });\n\n          if( ! containers.length )\n            throw new Error(\"The container does not contains on the sidebar.\");\n        }\n\n        // Get scroll container, if provided\n        this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n        // If top/bottom spacing is not function parse value to integer.\n        if( 'function' !== typeof this.options.topSpacing )\n          this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n        if( 'function' !== typeof this.options.bottomSpacing )\n          this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n        // Breakdown sticky sidebar if screen width below `options.minWidth`.\n        this._widthBreakpoint();\n\n        // Calculate dimensions of sidebar, container and viewport.\n        this.calcDimensions();\n\n        // Affix sidebar in proper position.\n        this.stickyPosition();\n\n        // Bind all events.\n        this.bindEvents();\n\n        // Inform other properties the sticky sidebar is initialized.\n        this._initialized = true;\n      }\n\n      /**\n       * Bind all events of sticky sidebar plugin.\n       * @protected\n       */\n      bindEvents(){\n        this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n        this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n        this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n        this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n        if( 'undefined' !== typeof ResizeObserver ){\n          const resizeObserver = new ResizeObserver(() => this.handleEvent())\n          resizeObserver.observe(this.sidebarInner)\n          resizeObserver.observe(this.container)\n        }\n      }\n\n      /**\n       * Handles all events of the plugin.\n       * @param {Object} event - Event object passed from listener.\n       */\n      handleEvent(event){\n        this.updateSticky(event);\n      }\n\n      /**\n       * Calculates dimensions of sidebar, container and screen viewpoint\n       * @public\n       */\n      calcDimensions(){\n        if( this._breakpoint ) return;\n        var dims = this.dimensions;\n\n        // Container of sticky sidebar dimensions.\n        dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n        dims.containerHeight = this.container.clientHeight;\n        dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n        // Sidebar dimensions.\n        dims.sidebarHeight = this.sidebarInner.offsetHeight;\n        dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n        // Screen viewport dimensions.\n        dims.viewportHeight = window.innerHeight;\n\n        // Maximum sidebar translate Y.\n        dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n        this._calcDimensionsWithScroll();\n      }\n\n      /**\n       * Some dimensions values need to be up-to-date when scrolling the page.\n       * @private\n       */\n      _calcDimensionsWithScroll(){\n        var dims = this.dimensions;\n\n        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n        if (this.scrollContainer) {\n          dims.viewportTop = this.scrollContainer.scrollTop;\n          dims.viewportLeft = this.scrollContainer.scrollLeft;\n        } else {\n          dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n          dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n        }\n        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n        dims.topSpacing    = this.options.topSpacing;\n        dims.bottomSpacing = this.options.bottomSpacing;\n\n        if( 'function' === typeof dims.topSpacing )\n            dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n        if( 'function' === typeof dims.bottomSpacing )\n            dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n        if( 'VIEWPORT-TOP' === this.affixedType ){\n          // Adjust translate Y in the case decrease top spacing value.\n          if( dims.topSpacing < dims.lastTopSpacing ){\n            dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n            this._reStyle = true;\n          }\n        } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n          // Adjust translate Y in the case decrease bottom spacing value.\n          if( dims.bottomSpacing < dims.lastBottomSpacing ){\n            dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n            this._reStyle = true;\n          }\n        }\n\n        dims.lastTopSpacing    = dims.topSpacing;\n        dims.lastBottomSpacing = dims.bottomSpacing;\n      }\n\n      /**\n       * Determine whether the sidebar is bigger than viewport.\n       * @public\n       * @return {Boolean}\n       */\n      isSidebarFitsViewport() {\n        return this.dimensions.viewportHeight >= (\n          this.dimensions.lastBottomSpacing +\n          this.dimensions.lastTopSpacing +\n          this.dimensions.sidebarHeight\n        );\n      }\n\n      /**\n       * Observe browser scrolling direction top and down.\n       */\n      observeScrollDir(){\n        var dims = this.dimensions;\n        if( dims.lastViewportTop === dims.viewportTop ) return;\n\n        var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n        // If the browser is scrolling not in the same direction.\n        if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n          this.direction = 'down' === this.direction ?  'up' : 'down';\n      }\n\n      /**\n       * Gets affix type of sidebar according to current scroll top and scrolling direction.\n       * @public\n       * @return {String|False} - Proper affix type.\n       */\n      getAffixType(){\n        this._calcDimensionsWithScroll();\n        var dims = this.dimensions;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var affixType = this.affixedType;\n\n       if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n          dims.translateY = 0;\n          affixType = 'STATIC';\n        } else {\n          affixType = ( 'up' === this.direction ) ?\n            this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n        }\n\n        // Make sure the translate Y is not bigger than container height.\n        dims.translateY = Math.max(0, dims.translateY);\n        dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n        dims.translateY = Math.round(dims.translateY);\n\n        dims.lastViewportTop = dims.viewportTop;\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling down.\n       * @private\n       * @return {String} - Proper affix type of scrolling down direction.\n       */\n      _getAffixTypeScrollingDown(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( this.isSidebarFitsViewport() ){\n          if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( colliderTop >= dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n          }\n        } else {\n          if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n            dims.translateY = colliderBottom - sidebarBottom;\n            affixType = 'VIEWPORT-BOTTOM';\n\n          } else if( dims.containerTop + dims.translateY <= colliderTop &&\n            (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling up.\n       * @private\n       * @return {String} - Proper affix type of scrolling up direction.\n       */\n      _getAffixTypeScrollingUp(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( colliderTop <= dims.translateY + dims.containerTop ){\n          dims.translateY = colliderTop - dims.containerTop;\n          affixType = 'VIEWPORT-TOP';\n\n        } else if( dims.containerBottom <= colliderBottom ){\n          dims.translateY = dims.containerBottom - sidebarBottom;\n          affixType = 'CONTAINER-BOTTOM';\n\n        } else if( ! this.isSidebarFitsViewport() ){\n\n          if( dims.containerTop <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Gets inline style of sticky sidebar wrapper and inner wrapper according\n       * to its affix type.\n       * @private\n       * @param {String} affixType - Affix type of sticky sidebar.\n       * @return {Object}\n       */\n      _getStyle(affixType){\n        if( 'undefined' === typeof affixType ) return;\n\n        var style = {inner: {}, outer: {}};\n        var dims = this.dimensions;\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n            style.inner = {position: 'fixed', top: dims.topSpacing,\n                  left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n            break;\n          case 'VIEWPORT-BOTTOM':\n            style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                  bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n            break;\n          case 'CONTAINER-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n            let translate = this._getTranslate(0, dims.translateY + 'px');\n\n            if( translate )\n              style.inner = {transform: translate};\n            else\n              style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n            break;\n        }\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n          case 'VIEWPORT-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n          case 'CONTAINER-BOTTOM':\n            style.outer = {height: dims.sidebarHeight, position: 'relative'};\n            break;\n        }\n\n        style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n        style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n            bottom: '', width: '',  transform: ''}, style.inner);\n\n        return style;\n      }\n\n      /**\n       * Cause the sidebar to be sticky according to affix type by adding inline\n       * style, adding helper class and trigger events.\n       * @function\n       * @protected\n       * @param {string} force - Update sticky sidebar position by force.\n       */\n      stickyPosition(force){\n        if( this._breakpoint ) return;\n\n        force = this._reStyle || force || false;\n\n        var offsetTop = this.options.topSpacing;\n        var offsetBottom = this.options.bottomSpacing;\n\n        var affixType = this.getAffixType();\n        var style = this._getStyle(affixType);\n\n        if( (this.affixedType != affixType || force) && affixType ){\n          let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n          if( 'STATIC' === affixType )\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          else\n            StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n          for( let key in style.outer ){\n            let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n            this.sidebar.style[key] = style.outer[key] + unit;\n          }\n\n          for( let key in style.inner ){\n            let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n            this.sidebarInner.style[key] = style.inner[key] + unit;\n          }\n\n          let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n        } else {\n          if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n        }\n\n        this.affixedType = affixType;\n      }\n\n      /**\n       * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n       * @protected\n       */\n      _widthBreakpoint(){\n\n        if( window.innerWidth <= this.options.minWidth ){\n          this._breakpoint = true;\n          this.affixedType = 'STATIC';\n\n          this.sidebar.removeAttribute('style');\n          StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          this.sidebarInner.removeAttribute('style');\n        } else {\n          this._breakpoint = false;\n        }\n      }\n\n      /**\n       * Switches between functions stack for each event type, if there's no\n       * event, it will re-initialize sticky sidebar.\n       * @public\n       */\n      updateSticky(event = {}){\n        if( this._running ) return;\n        this._running = true;\n\n        ((eventType) => {\n          requestAnimationFrame(() => {\n            switch( eventType ){\n              // When browser is scrolling and re-calculate just dimensions\n              // within scroll.\n              case 'scroll':\n                this._calcDimensionsWithScroll();\n                this.observeScrollDir();\n                this.stickyPosition();\n                break;\n\n              // When browser is resizing or there's no event, observe width\n              // breakpoint and re-calculate dimensions.\n              case 'resize':\n              default:\n                this._widthBreakpoint();\n                this.calcDimensions();\n                this.stickyPosition(true);\n                break;\n            }\n            this._running = false;\n          });\n        })(event.type);\n      }\n\n      /**\n       * Set browser support features to the public property.\n       * @private\n       */\n      _setSupportFeatures(){\n        var support = this.support;\n\n        support.transform = StickySidebar.supportTransform();\n        support.transform3d = StickySidebar.supportTransform(true);\n      }\n\n      /**\n       * Get translate value, if the browser supports transfrom3d, it will adopt it.\n       * and the same with translate. if browser doesn't support both return false.\n       * @param {Number} y - Value of Y-axis.\n       * @param {Number} x - Value of X-axis.\n       * @param {Number} z - Value of Z-axis.\n       * @return {String|False}\n       */\n      _getTranslate(y = 0, x = 0, z = 0){\n        if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n        else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n        else return false;\n      }\n\n      /**\n       * Destroy sticky sidebar plugin.\n       * @public\n       */\n      destroy(){\n        window.removeEventListener('resize', this, {capture: false});\n        window.removeEventListener('scroll', this, {capture: false});\n\n        this.sidebar.classList.remove(this.options.stickyClass);\n        this.sidebar.style.minHeight = '';\n\n        this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n        var styleReset = {inner: {}, outer: {}};\n\n        styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n        styleReset.outer = {height: '', position: ''};\n\n        for( let key in styleReset.outer )\n          this.sidebar.style[key] = styleReset.outer[key];\n\n        for( let key in styleReset.inner )\n          this.sidebarInner.style[key] = styleReset.inner[key];\n\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n          ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n          ResizeSensor.detach(this.container, this.handleEvent);\n        }\n      }\n\n      /**\n       * Determine if the browser supports CSS transform feature.\n       * @function\n       * @static\n       * @param {Boolean} transform3d - Detect transform with translate3d.\n       * @return {String}\n       */\n      static supportTransform(transform3d){\n        var result = false,\n            property = (transform3d) ? 'perspective' : 'transform',\n            upper = property.charAt(0).toUpperCase() + property.slice(1),\n            prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n            support = document.createElement('support'),\n            style = support.style;\n\n        (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n          if (style[property] !== undefined) {\n            result = property;\n            return false;\n          }\n        });\n        return result;\n      }\n\n      /**\n       * Trigger custom event.\n       * @static\n       * @param {DOMObject} element - Target element on the DOM.\n       * @param {String} eventName - Event name.\n       * @param {Object} data -\n       */\n      static eventTrigger(element, eventName, data){\n        try{\n          var event = new CustomEvent(eventName, {detail: data});\n        } catch(e){\n          var event = document.createEvent('CustomEvent');\n          event.initCustomEvent(eventName, true, true, data);\n        }\n        element.dispatchEvent(event);\n      }\n\n      /**\n       * Extend options object with defaults.\n       * @function\n       * @static\n       */\n      static extend(defaults, options){\n        var results = {};\n        for( let key in defaults ){\n          if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n          else results[key] = defaults[key];\n        }\n        return results;\n      }\n\n      /**\n       * Get current coordinates left and top of specific element.\n       * @static\n       */\n      static offsetRelative(element){\n        var result = {left: 0, top: 0};\n\n        do{\n          let offsetTop = element.offsetTop;\n          let offsetLeft = element.offsetLeft;\n\n          if( ! isNaN(offsetTop) )\n            result.top += offsetTop;\n\n          if( ! isNaN(offsetLeft) )\n            result.left += offsetLeft;\n\n          element = ( 'BODY' === element.tagName ) ?\n                      element.parentElement : element.offsetParent;\n        } while(element)\n        return result;\n      }\n\n      /**\n       * Add specific class name to specific element.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static addClass(element, className){\n        if( ! StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.add(className);\n          else\n            element.className += ' ' + className;\n        }\n      }\n\n      /**\n       * Remove specific class name to specific element\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static removeClass(element, className){\n        if( StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.remove(className);\n          else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n      }\n\n      /**\n       * Determine weather the element has specific class name.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static hasClass(element, className){\n        if (element.classList)\n          return element.classList.contains(className);\n        else\n          return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n      }\n\n      /**\n       * Gets default values of configuration options.\n       * @static\n       * @return {Object}\n       */\n      static get defaults(){\n        return DEFAULTS;\n      }\n    }\n\n    return StickySidebar;\n  })();\n\n  export default StickySidebar;\n\n  // Global\n  // -------------------------\n  window.StickySidebar = StickySidebar;\n","import StickySidebar from \"sticky-sidebar-v2\";\r\n\r\nif (document.querySelector('.sidebar')) {\r\n  var sidebar = new StickySidebar('.sidebar', {\r\n          containerSelector: '.layout',\r\n          innerWrapperSelector: '.sidebar__inner',\r\n          topSpacing: 30,\r\n          bottomSpacing: 20\r\n  });\r\n}\r\n","var objectExtend = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(\n            true,\n            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n              ? result[key]\n              : base,\n            value\n          );\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || (typeof val != 'object' && typeof val != 'function');\n}\n\nexport {objectExtend as default};\n","import $ewBKy$justextend from \"just-extend\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nclass $4040acfd8584338d$export$2e2bcd8739ae039 {\n    // Add an event listener for given event\n    on(event, fn) {\n        this._callbacks = this._callbacks || {\n        };\n        // Create namespace for this event\n        if (!this._callbacks[event]) this._callbacks[event] = [];\n        this._callbacks[event].push(fn);\n        return this;\n    }\n    emit(event, ...args) {\n        this._callbacks = this._callbacks || {\n        };\n        let callbacks = this._callbacks[event];\n        if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n        // trigger a corresponding DOM event\n        if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n            args: args\n        }));\n        return this;\n    }\n    makeEvent(eventName, detail) {\n        let params = {\n            bubbles: true,\n            cancelable: true,\n            detail: detail\n        };\n        if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n        else {\n            // IE 11 support\n            // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n            var evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        }\n    }\n    // Remove event listener for given event. If fn is not provided, all event\n    // listeners for that event will be removed. If neither is provided, all\n    // event listeners will be removed.\n    off(event, fn) {\n        if (!this._callbacks || arguments.length === 0) {\n            this._callbacks = {\n            };\n            return this;\n        }\n        // specific event\n        let callbacks = this._callbacks[event];\n        if (!callbacks) return this;\n        // remove all handlers\n        if (arguments.length === 1) {\n            delete this._callbacks[event];\n            return this;\n        }\n        // remove specific handler\n        for(let i = 0; i < callbacks.length; i++){\n            let callback = callbacks[i];\n            if (callback === fn) {\n                callbacks.splice(i, 1);\n                break;\n            }\n        }\n        return this;\n    }\n}\n\n\n\nvar $fd6031f88dce2e32$exports = {};\n$fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\nlet $4ca367182776f80b$var$defaultOptions = {\n    /**\n   * Has to be specified on elements other than form (or when the form doesn't\n   * have an `action` attribute).\n   *\n   * You can also provide a function that will be called with `files` and\n   * `dataBlocks`  and must return the url as string.\n   */ url: null,\n    /**\n   * Can be changed to `\"put\"` if necessary. You can also provide a function\n   * that will be called with `files` and must return the method (since `v3.12.0`).\n   */ method: \"post\",\n    /**\n   * Will be set on the XHRequest.\n   */ withCredentials: false,\n    /**\n   * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n   * If set to null or 0, no timeout is going to be set.\n   */ timeout: null,\n    /**\n   * How many file uploads to process in parallel (See the\n   * Enqueuing file uploads documentation section for more info)\n   */ parallelUploads: 2,\n    /**\n   * Whether to send multiple files in one request. If\n   * this it set to true, then the fallback file input element will\n   * have the `multiple` attribute as well. This option will\n   * also trigger additional events (like `processingmultiple`). See the events\n   * documentation section for more information.\n   */ uploadMultiple: false,\n    /**\n   * Whether you want files to be uploaded in chunks to your server. This can't be\n   * used in combination with `uploadMultiple`.\n   *\n   * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n   */ chunking: false,\n    /**\n   * If `chunking` is enabled, this defines whether **every** file should be chunked,\n   * even if the file size is below chunkSize. This means, that the additional chunk\n   * form data will be submitted and the `chunksUploaded` callback will be invoked.\n   */ forceChunking: false,\n    /**\n   * If `chunking` is `true`, then this defines the chunk size in bytes.\n   */ chunkSize: 2097152,\n    /**\n   * If `true`, the individual chunks of a file are being uploaded simultaneously.\n   */ parallelChunkUploads: false,\n    /**\n   * Whether a chunk should be retried if it fails.\n   */ retryChunks: false,\n    /**\n   * If `retryChunks` is true, how many times should it be retried.\n   */ retryChunksLimit: 3,\n    /**\n   * The maximum filesize (in MiB) that is allowed to be uploaded.\n   */ maxFilesize: 256,\n    /**\n   * The name of the file param that gets transferred.\n   * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n   * Dropzone will append `[]` to the name.\n   */ paramName: \"file\",\n    /**\n   * Whether thumbnails for images should be generated\n   */ createImageThumbnails: true,\n    /**\n   * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n   */ maxThumbnailFilesize: 10,\n    /**\n   * If `null`, the ratio of the image will be used to calculate it.\n   */ thumbnailWidth: 120,\n    /**\n   * The same as `thumbnailWidth`. If both are null, images will not be resized.\n   */ thumbnailHeight: 120,\n    /**\n   * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ thumbnailMethod: \"crop\",\n    /**\n   * If set, images will be resized to these dimensions before being **uploaded**.\n   * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n   * ratio of the file will be preserved.\n   *\n   * The `options.transformFile` function uses these options, so if the `transformFile` function\n   * is overridden, these options don't do anything.\n   */ resizeWidth: null,\n    /**\n   * See `resizeWidth`.\n   */ resizeHeight: null,\n    /**\n   * The mime type of the resized image (before it gets uploaded to the server).\n   * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n   * See `resizeWidth` for more information.\n   */ resizeMimeType: null,\n    /**\n   * The quality of the resized images. See `resizeWidth`.\n   */ resizeQuality: 0.8,\n    /**\n   * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ resizeMethod: \"contain\",\n    /**\n   * The base that is used to calculate the **displayed** filesize. You can\n   * change this to 1024 if you would rather display kibibytes, mebibytes,\n   * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n   * not `1 kilobyte`. You can change this to `1024` if you don't care about\n   * validity.\n   */ filesizeBase: 1000,\n    /**\n   * If not `null` defines how many files this Dropzone handles. If it exceeds,\n   * the event `maxfilesexceeded` will be called. The dropzone element gets the\n   * class `dz-max-files-reached` accordingly so you can provide visual\n   * feedback.\n   */ maxFiles: null,\n    /**\n   * An optional object to send additional headers to the server. Eg:\n   * `{ \"My-Awesome-Header\": \"header value\" }`\n   */ headers: null,\n    /**\n   * Should the default headers be set or not?\n   * Accept: application/json <- for requesting json response\n   * Cache-Control: no-cache <- Request shouldnt be cached\n   * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n   */ defaultHeaders: true,\n    /**\n   * If `true`, the dropzone element itself will be clickable, if `false`\n   * nothing will be clickable.\n   *\n   * You can also pass an HTML element, a CSS selector (for multiple elements)\n   * or an array of those. In that case, all of those elements will trigger an\n   * upload when clicked.\n   */ clickable: true,\n    /**\n   * Whether hidden files in directories should be ignored.\n   */ ignoreHiddenFiles: true,\n    /**\n   * The default implementation of `accept` checks the file's mime type or\n   * extension against this list. This is a comma separated list of mime\n   * types or file extensions.\n   *\n   * Eg.: `image/*,application/pdf,.psd`\n   *\n   * If the Dropzone is `clickable` this option will also be used as\n   * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n   * parameter on the hidden file input as well.\n   */ acceptedFiles: null,\n    /**\n   * **Deprecated!**\n   * Use acceptedFiles instead.\n   */ acceptedMimeTypes: null,\n    /**\n   * If false, files will be added to the queue but the queue will not be\n   * processed automatically.\n   * This can be useful if you need some additional user input before sending\n   * files (or if you want want all files sent at once).\n   * If you're ready to send the file simply call `myDropzone.processQueue()`.\n   *\n   * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n   * section for more information.\n   */ autoProcessQueue: true,\n    /**\n   * If false, files added to the dropzone will not be queued by default.\n   * You'll have to call `enqueueFile(file)` manually.\n   */ autoQueue: true,\n    /**\n   * If `true`, this will add a link to every file preview to remove or cancel (if\n   * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n   * and `dictRemoveFile` options are used for the wording.\n   */ addRemoveLinks: false,\n    /**\n   * Defines where to display the file previews – if `null` the\n   * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n   * selector. The element should have the `dropzone-previews` class so\n   * the previews are displayed properly.\n   */ previewsContainer: null,\n    /**\n   * Set this to `true` if you don't want previews to be shown.\n   */ disablePreviews: false,\n    /**\n   * This is the element the hidden input field (which is used when clicking on the\n   * dropzone to trigger file selection) will be appended to. This might\n   * be important in case you use frameworks to switch the content of your page.\n   *\n   * Can be a selector string, or an element directly.\n   */ hiddenInputContainer: \"body\",\n    /**\n   * If null, no capture type will be specified\n   * If camera, mobile devices will skip the file selection and choose camera\n   * If microphone, mobile devices will skip the file selection and choose the microphone\n   * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n   * On apple devices multiple must be set to false.  AcceptedFiles may need to\n   * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n   */ capture: null,\n    /**\n   * **Deprecated**. Use `renameFile` instead.\n   */ renameFilename: null,\n    /**\n   * A function that is invoked before the file is uploaded to the server and renames the file.\n   * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n   * file that gets used during the upload can be accessed through `file.upload.filename`.\n   */ renameFile: null,\n    /**\n   * If `true` the fallback will be forced. This is very useful to test your server\n   * implementations first and make sure that everything works as\n   * expected without dropzone if you experience problems, and to test\n   * how your fallbacks will look.\n   */ forceFallback: false,\n    /**\n   * The text used before any files are dropped.\n   */ dictDefaultMessage: \"Drop files here to upload\",\n    /**\n   * The text that replaces the default message text it the browser is not supported.\n   */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n    /**\n   * The text that will be added before the fallback form.\n   * If you provide a  fallback element yourself, or if this option is `null` this will\n   * be ignored.\n   */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n    /**\n   * If the filesize is too big.\n   * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n   */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n    /**\n   * If the file doesn't match the file type.\n   */ dictInvalidFileType: \"You can't upload files of this type.\",\n    /**\n   * If the server response was invalid.\n   * `{{statusCode}}` will be replaced with the servers status code.\n   */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n   */ dictCancelUpload: \"Cancel upload\",\n    /**\n   * The text that is displayed if an upload was manually canceled\n   */ dictUploadCanceled: \"Upload canceled.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n   */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used to remove a file.\n   */ dictRemoveFile: \"Remove file\",\n    /**\n   * If this is not null, then the user will be prompted before removing a file.\n   */ dictRemoveFileConfirmation: null,\n    /**\n   * Displayed if `maxFiles` is st and exceeded.\n   * The string `{{maxFiles}}` will be replaced by the configuration value.\n   */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n    /**\n   * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n   * `b` for bytes.\n   */ dictFileSizeUnits: {\n        tb: \"TB\",\n        gb: \"GB\",\n        mb: \"MB\",\n        kb: \"KB\",\n        b: \"b\"\n    },\n    /**\n   * Called when dropzone initialized\n   * You can add event listeners here\n   */ init () {\n    },\n    /**\n   * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n   * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n   * of a function, this needs to return a map.\n   *\n   * The default implementation does nothing for normal uploads, but adds relevant information for\n   * chunked uploads.\n   *\n   * This is the same as adding hidden input fields in the form element.\n   */ params (files, xhr, chunk) {\n        if (chunk) return {\n            dzuuid: chunk.file.upload.uuid,\n            dzchunkindex: chunk.index,\n            dztotalfilesize: chunk.file.size,\n            dzchunksize: this.options.chunkSize,\n            dztotalchunkcount: chunk.file.upload.totalChunkCount,\n            dzchunkbyteoffset: chunk.index * this.options.chunkSize\n        };\n    },\n    /**\n   * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n   * and a `done` function as parameters.\n   *\n   * If the done function is invoked without arguments, the file is \"accepted\" and will\n   * be processed. If you pass an error message, the file is rejected, and the error\n   * message will be displayed.\n   * This function will not be called if the file is too big or doesn't match the mime types.\n   */ accept (file, done) {\n        return done();\n    },\n    /**\n   * The callback that will be invoked when all chunks have been uploaded for a file.\n   * It gets the file for which the chunks have been uploaded as the first parameter,\n   * and the `done` function as second. `done()` needs to be invoked when everything\n   * needed to finish the upload process is done.\n   */ chunksUploaded: function(file, done) {\n        done();\n    },\n    /**\n   * Sends the file as binary blob in body instead of form data.\n   * If this is set, the `params` option will be ignored.\n   * It's an error to set this to `true` along with `uploadMultiple` since\n   * multiple files cannot be in a single binary body.\n   */ binaryBody: false,\n    /**\n   * Gets called when the browser is not supported.\n   * The default implementation shows the fallback input field and adds\n   * a text.\n   */ fallback () {\n        // This code should pass in IE7... :(\n        let messageElement;\n        this.element.className = `${this.element.className} dz-browser-not-supported`;\n        for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\"; // Removes the 'dz-default' class\n            break;\n        }\n        if (!messageElement) {\n            messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n            this.element.appendChild(messageElement);\n        }\n        let span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n            if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n            else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n        }\n        return this.element.appendChild(this.getFallbackForm());\n    },\n    /**\n   * Gets called to calculate the thumbnail dimensions.\n   *\n   * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n   *\n   *  - `srcWidth` & `srcHeight` (required)\n   *  - `trgWidth` & `trgHeight` (required)\n   *  - `srcX` & `srcY` (optional, default `0`)\n   *  - `trgX` & `trgY` (optional, default `0`)\n   *\n   * Those values are going to be used by `ctx.drawImage()`.\n   */ resize (file, width, height, resizeMethod) {\n        let info = {\n            srcX: 0,\n            srcY: 0,\n            srcWidth: file.width,\n            srcHeight: file.height\n        };\n        let srcRatio = file.width / file.height;\n        // Automatically calculate dimensions if not specified\n        if (width == null && height == null) {\n            width = info.srcWidth;\n            height = info.srcHeight;\n        } else if (width == null) width = height * srcRatio;\n        else if (height == null) height = width / srcRatio;\n        // Make sure images aren't upscaled\n        width = Math.min(width, info.srcWidth);\n        height = Math.min(height, info.srcHeight);\n        let trgRatio = width / height;\n        if (info.srcWidth > width || info.srcHeight > height) {\n            // Image is bigger and needs rescaling\n            if (resizeMethod === \"crop\") {\n                if (srcRatio > trgRatio) {\n                    info.srcHeight = file.height;\n                    info.srcWidth = info.srcHeight * trgRatio;\n                } else {\n                    info.srcWidth = file.width;\n                    info.srcHeight = info.srcWidth / trgRatio;\n                }\n            } else if (resizeMethod === \"contain\") {\n                // Method 'contain'\n                if (srcRatio > trgRatio) height = width / srcRatio;\n                else width = height * srcRatio;\n            } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        info.trgWidth = width;\n        info.trgHeight = height;\n        return info;\n    },\n    /**\n   * Can be used to transform the file (for example, resize an image if necessary).\n   *\n   * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n   * images according to those dimensions.\n   *\n   * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n   * to be invoked with the file when the transformation is done.\n   */ transformFile (file, done) {\n        if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n        else return done(file);\n    },\n    /**\n   * A string that contains the template used for each dropped\n   * file. Change it to fulfill your needs but make sure to properly\n   * provide all elements.\n   *\n   * If you want to use an actual HTML element instead of providing a String\n   * as a config option, you could create a div with the id `tpl`,\n   * put the template inside it and provide the element like this:\n   *\n   *     document\n   *       .querySelector('#tpl')\n   *       .innerHTML\n   *\n   */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n    /*\n   Those functions register themselves to the events on init and handle all\n   the user interface specific stuff. Overwriting them won't break the upload\n   but can break the way it's displayed.\n   You can overwrite them if you don't like the default behavior. If you just\n   want to add an additional event handler, register it on the dropzone object\n   and don't overwrite those options.\n   */ // Those are self explanatory and simply concern the DragnDrop.\n    drop (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragstart (e) {\n    },\n    dragend (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragenter (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragover (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragleave (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    paste (e) {\n    },\n    // Called whenever there are no files left in the dropzone anymore, and the\n    // dropzone should be displayed as if in the initial state.\n    reset () {\n        return this.element.classList.remove(\"dz-started\");\n    },\n    // Called when a file is added to the queue\n    // Receives `file`\n    addedfile (file) {\n        if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n        if (this.previewsContainer && !this.options.disablePreviews) {\n            file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n            file.previewTemplate = file.previewElement; // Backwards compatibility\n            this.previewsContainer.appendChild(file.previewElement);\n            for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n            for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n            if (this.options.addRemoveLinks) {\n                file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                file.previewElement.appendChild(file._removeLink);\n            }\n            let removeFileEvent = (e)=>{\n                e.preventDefault();\n                e.stopPropagation();\n                if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                );\n                else {\n                    if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                    );\n                    else return this.removeFile(file);\n                }\n            };\n            for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n        }\n    },\n    // Called whenever a file is removed.\n    removedfile (file) {\n        if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n        return this._updateMaxFilesReachedClass();\n    },\n    // Called when a thumbnail has been generated\n    // Receives `file` and `dataUrl`\n    thumbnail (file, dataUrl) {\n        if (file.previewElement) {\n            file.previewElement.classList.remove(\"dz-file-preview\");\n            for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                thumbnailElement.alt = file.name;\n                thumbnailElement.src = dataUrl;\n            }\n            return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n            , 1);\n        }\n    },\n    // Called whenever an error occurs\n    // Receives `file` and `message`\n    error (file, message) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-error\");\n            if (typeof message !== \"string\" && message.error) message = message.error;\n            for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n        }\n    },\n    errormultiple () {\n    },\n    // Called when a file gets processed. Since there is a cue, not all added\n    // files are processed immediately.\n    // Receives `file`\n    processing (file) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-processing\");\n            if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n        }\n    },\n    processingmultiple () {\n    },\n    // Called whenever the upload progress gets updated.\n    // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n    // To get the total number of bytes of the file, use `file.size`\n    uploadprogress (file, progress, bytesSent) {\n        if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n    },\n    // Called whenever the total upload progress gets updated.\n    // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n    totaluploadprogress () {\n    },\n    // Called just before the file is sent. Gets the `xhr` object as second\n    // parameter, so you can modify it (for example to add a CSRF token) and a\n    // `formData` object to add additional information.\n    sending () {\n    },\n    sendingmultiple () {\n    },\n    // When the complete upload is finished and successful\n    // Receives `file`\n    success (file) {\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n    },\n    successmultiple () {\n    },\n    // When the upload is canceled.\n    canceled (file) {\n        return this.emit(\"error\", file, this.options.dictUploadCanceled);\n    },\n    canceledmultiple () {\n    },\n    // When the upload is finished, either with success or an error.\n    // Receives `file`\n    complete (file) {\n        if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n    },\n    completemultiple () {\n    },\n    maxfilesexceeded () {\n    },\n    maxfilesreached () {\n    },\n    queuecomplete () {\n    },\n    addedfiles () {\n    }\n};\nvar $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\nclass $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n    static initClass() {\n        // Exposing the emitter class, mainly for tests\n        this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n        /*\n     This is a list of all available events you can register on a dropzone object.\n\n     You can register an event handler like this:\n\n     dropzone.on(\"dragEnter\", function() { });\n\n     */ this.prototype.events = [\n            \"drop\",\n            \"dragstart\",\n            \"dragend\",\n            \"dragenter\",\n            \"dragover\",\n            \"dragleave\",\n            \"addedfile\",\n            \"addedfiles\",\n            \"removedfile\",\n            \"thumbnail\",\n            \"error\",\n            \"errormultiple\",\n            \"processing\",\n            \"processingmultiple\",\n            \"uploadprogress\",\n            \"totaluploadprogress\",\n            \"sending\",\n            \"sendingmultiple\",\n            \"success\",\n            \"successmultiple\",\n            \"canceled\",\n            \"canceledmultiple\",\n            \"complete\",\n            \"completemultiple\",\n            \"reset\",\n            \"maxfilesexceeded\",\n            \"maxfilesreached\",\n            \"queuecomplete\", \n        ];\n        this.prototype._thumbnailQueue = [];\n        this.prototype._processingThumbnail = false;\n    }\n    // Returns all files that have been accepted\n    getAcceptedFiles() {\n        return this.files.filter((file)=>file.accepted\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that have been rejected\n    // Not sure when that's going to be useful, but added for completeness.\n    getRejectedFiles() {\n        return this.files.filter((file)=>!file.accepted\n        ).map((file)=>file\n        );\n    }\n    getFilesWithStatus(status) {\n        return this.files.filter((file)=>file.status === status\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that are in the queue\n    getQueuedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n    }\n    getUploadingFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n    }\n    getAddedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n    }\n    // Files that are either queued or uploading\n    getActiveFiles() {\n        return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n        ).map((file)=>file\n        );\n    }\n    // The function that gets called when Dropzone is initialized. You\n    // can (and should) setup event listeners inside this function.\n    init() {\n        // In case it isn't set already\n        if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n        if (this.clickableElements.length) {\n            let setupHiddenFileInput = ()=>{\n                if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                this.hiddenFileInput = document.createElement(\"input\");\n                this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                this.hiddenFileInput.className = \"dz-hidden-input\";\n                if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                // Making sure that no one can \"tab\" into this field.\n                this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                // Not setting `display=\"none\"` because some browsers don't accept clicks\n                // on elements that aren't displayed.\n                this.hiddenFileInput.style.visibility = \"hidden\";\n                this.hiddenFileInput.style.position = \"absolute\";\n                this.hiddenFileInput.style.top = \"0\";\n                this.hiddenFileInput.style.left = \"0\";\n                this.hiddenFileInput.style.height = \"0\";\n                this.hiddenFileInput.style.width = \"0\";\n                $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                    let { files: files  } = this.hiddenFileInput;\n                    if (files.length) for (let file of files)this.addFile(file);\n                    this.emit(\"addedfiles\", files);\n                    setupHiddenFileInput();\n                });\n            };\n            setupHiddenFileInput();\n        }\n        this.URL = window.URL !== null ? window.URL : window.webkitURL;\n        // Setup all event listeners on the Dropzone object itself.\n        // They're not in @setupEventListeners() because they shouldn't be removed\n        // again when the dropzone gets disabled.\n        for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n        this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n        );\n        // Emit a `queuecomplete` event if all files finished uploading.\n        this.on(\"complete\", (file)=>{\n            if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n            return setTimeout(()=>this.emit(\"queuecomplete\")\n            , 0);\n        });\n        const containsFiles = function(e) {\n            if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n            // IE, we need to iterate like this instead of\n            // using e.dataTransfer.types.some()\n            for(var i = 0; i < e.dataTransfer.types.length; i++){\n                if (e.dataTransfer.types[i] === \"Files\") return true;\n            }\n            return false;\n        };\n        let noPropagation = function(e) {\n            // If there are no files, we don't want to stop\n            // propagation so we don't interfere with other\n            // drag and drop behaviour.\n            if (!containsFiles(e)) return;\n            e.stopPropagation();\n            if (e.preventDefault) return e.preventDefault();\n            else return e.returnValue = false;\n        };\n        // Create the listeners\n        this.listeners = [\n            {\n                element: this.element,\n                events: {\n                    dragstart: (e)=>{\n                        return this.emit(\"dragstart\", e);\n                    },\n                    dragenter: (e)=>{\n                        noPropagation(e);\n                        return this.emit(\"dragenter\", e);\n                    },\n                    dragover: (e)=>{\n                        // Makes it possible to drag files from chrome's download bar\n                        // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                        // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                        let efct;\n                        try {\n                            efct = e.dataTransfer.effectAllowed;\n                        } catch (error) {\n                        }\n                        e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                        noPropagation(e);\n                        return this.emit(\"dragover\", e);\n                    },\n                    dragleave: (e)=>{\n                        return this.emit(\"dragleave\", e);\n                    },\n                    drop: (e)=>{\n                        noPropagation(e);\n                        return this.drop(e);\n                    },\n                    dragend: (e)=>{\n                        return this.emit(\"dragend\", e);\n                    }\n                }\n            }, \n        ];\n        this.clickableElements.forEach((clickableElement)=>{\n            return this.listeners.push({\n                element: clickableElement,\n                events: {\n                    click: (evt)=>{\n                        // Only the actual dropzone or the message element should trigger file selection\n                        if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                        return true;\n                    }\n                }\n            });\n        });\n        this.enable();\n        return this.options.init.call(this);\n    }\n    // Not fully tested yet\n    destroy() {\n        this.disable();\n        this.removeAllFiles(true);\n        if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n            this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n            this.hiddenFileInput = null;\n        }\n        delete this.element.dropzone;\n        return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n    }\n    updateTotalUploadProgress() {\n        let totalUploadProgress;\n        let totalBytesSent = 0;\n        let totalBytes = 0;\n        let activeFiles = this.getActiveFiles();\n        if (activeFiles.length) {\n            for (let file of this.getActiveFiles()){\n                totalBytesSent += file.upload.bytesSent;\n                totalBytes += file.upload.total;\n            }\n            totalUploadProgress = 100 * totalBytesSent / totalBytes;\n        } else totalUploadProgress = 100;\n        return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    }\n    // @options.paramName can be a function taking one parameter rather than a string.\n    // A parameter name for a file is obtained simply by calling this with an index number.\n    _getParamName(n) {\n        if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n        else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n    }\n    // If @options.renameFile is a function,\n    // the function will be used to rename the file.name before appending it to the formData\n    _renameFile(file) {\n        if (typeof this.options.renameFile !== \"function\") return file.name;\n        return this.options.renameFile(file);\n    }\n    // Returns a form that can be used as fallback if the browser does not support DragnDrop\n    //\n    // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n    // This code has to pass in IE7 :(\n    getFallbackForm() {\n        let existingFallback, form;\n        if (existingFallback = this.getExistingFallback()) return existingFallback;\n        let fieldsString = '<div class=\"dz-fallback\">';\n        if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n        fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n        let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n        if (this.element.tagName !== \"FORM\") {\n            form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n            form.appendChild(fields);\n        } else {\n            // Make sure that the enctype and method attributes are set properly\n            this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n            this.element.setAttribute(\"method\", this.options.method);\n        }\n        return form != null ? form : fields;\n    }\n    // Returns the fallback elements if they exist already\n    //\n    // This code has to pass in IE7 :(\n    getExistingFallback() {\n        let getFallback = function(elements) {\n            for (let el of elements){\n                if (/(^| )fallback($| )/.test(el.className)) return el;\n            }\n        };\n        for (let tagName of [\n            \"div\",\n            \"form\"\n        ]){\n            var fallback;\n            if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n        }\n    }\n    // Activates all listeners stored in @listeners\n    setupEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.addEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Deactivates all listeners stored in @listeners\n    removeEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.removeEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Removes all event listeners and cancels all files in the queue or being processed.\n    disable() {\n        this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n        );\n        this.removeEventListeners();\n        this.disabled = true;\n        return this.files.map((file)=>this.cancelUpload(file)\n        );\n    }\n    enable() {\n        delete this.disabled;\n        this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n        );\n        return this.setupEventListeners();\n    }\n    // Returns a nicely formatted filesize\n    filesize(size) {\n        let selectedSize = 0;\n        let selectedUnit = \"b\";\n        if (size > 0) {\n            let units = [\n                \"tb\",\n                \"gb\",\n                \"mb\",\n                \"kb\",\n                \"b\"\n            ];\n            for(let i = 0; i < units.length; i++){\n                let unit = units[i];\n                let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                if (size >= cutoff) {\n                    selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                    selectedUnit = unit;\n                    break;\n                }\n            }\n            selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n        }\n        return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n    }\n    // Adds or removes the `dz-max-files-reached` class from the form.\n    _updateMaxFilesReachedClass() {\n        if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n            return this.element.classList.add(\"dz-max-files-reached\");\n        } else return this.element.classList.remove(\"dz-max-files-reached\");\n    }\n    drop(e) {\n        if (!e.dataTransfer) return;\n        this.emit(\"drop\", e);\n        // Convert the FileList to an Array\n        // This is necessary for IE11\n        let files = [];\n        for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n        // Even if it's a folder, files.length will contain the folders.\n        if (files.length) {\n            let { items: items  } = e.dataTransfer;\n            if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n            this._addFilesFromItems(items);\n            else this.handleFiles(files);\n        }\n        this.emit(\"addedfiles\", files);\n    }\n    paste(e) {\n        if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n        ) == null) return;\n        this.emit(\"paste\", e);\n        let { items: items  } = e.clipboardData;\n        if (items.length) return this._addFilesFromItems(items);\n    }\n    handleFiles(files) {\n        for (let file of files)this.addFile(file);\n    }\n    // When a folder is dropped (or files are pasted), items must be handled\n    // instead of files.\n    _addFilesFromItems(items) {\n        return (()=>{\n            let result = [];\n            for (let item of items){\n                var entry;\n                if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                    if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                    else if (entry.isDirectory) // Append all files from that directory to files\n                    result.push(this._addFilesFromDirectory(entry, entry.name));\n                    else result.push(undefined);\n                } else if (item.getAsFile != null) {\n                    if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                    else result.push(undefined);\n                } else result.push(undefined);\n            }\n            return result;\n        })();\n    }\n    // Goes through the directory, and adds each file it finds recursively\n    _addFilesFromDirectory(directory, path) {\n        let dirReader = directory.createReader();\n        let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n            )\n        ;\n        var readEntries = ()=>{\n            return dirReader.readEntries((entries)=>{\n                if (entries.length > 0) {\n                    for (let entry of entries){\n                        if (entry.isFile) entry.file((file)=>{\n                            if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                            file.fullPath = `${path}/${file.name}`;\n                            return this.addFile(file);\n                        });\n                        else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                    }\n                    // Recursively call readEntries() again, since browser only handle\n                    // the first 100 entries.\n                    // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                    readEntries();\n                }\n                return null;\n            }, errorHandler);\n        };\n        return readEntries();\n    }\n    // If `done()` is called without argument the file is accepted\n    // If you call it with an error message, the file is rejected\n    // (This allows for asynchronous validation)\n    //\n    // This function checks the filesize, and if the file.type passes the\n    // `acceptedFiles` check.\n    accept(file, done) {\n        if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n        else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n        else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n            this.emit(\"maxfilesexceeded\", file);\n        } else this.options.accept.call(this, file, done);\n    }\n    addFile(file) {\n        file.upload = {\n            uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n            progress: 0,\n            // Setting the total upload size to file.size for the beginning\n            // It's actual different than the size to be transmitted.\n            total: file.size,\n            bytesSent: 0,\n            filename: this._renameFile(file)\n        };\n        this.files.push(file);\n        file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n        this.emit(\"addedfile\", file);\n        this._enqueueThumbnail(file);\n        this.accept(file, (error)=>{\n            if (error) {\n                file.accepted = false;\n                this._errorProcessing([\n                    file\n                ], error); // Will set the file.status\n            } else {\n                file.accepted = true;\n                if (this.options.autoQueue) this.enqueueFile(file);\n                 // Will set .accepted = true\n            }\n            this._updateMaxFilesReachedClass();\n        });\n    }\n    // Wrapper for enqueueFile\n    enqueueFiles(files) {\n        for (let file of files)this.enqueueFile(file);\n        return null;\n    }\n    enqueueFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n            if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n            , 0); // Deferring the call\n        } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n    }\n    _enqueueThumbnail(file) {\n        if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n            this._thumbnailQueue.push(file);\n            return setTimeout(()=>this._processThumbnailQueue()\n            , 0); // Deferring the call\n        }\n    }\n    _processThumbnailQueue() {\n        if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n        this._processingThumbnail = true;\n        let file = this._thumbnailQueue.shift();\n        return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n            this.emit(\"thumbnail\", file, dataUrl);\n            this._processingThumbnail = false;\n            return this._processThumbnailQueue();\n        });\n    }\n    // Can be called by the user to remove a file\n    removeFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n        this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n        this.emit(\"removedfile\", file);\n        if (this.files.length === 0) return this.emit(\"reset\");\n    }\n    // Removes all files that aren't currently processed from the list\n    removeAllFiles(cancelIfNecessary) {\n        // Create a copy of files since removeFile() changes the @files array.\n        if (cancelIfNecessary == null) cancelIfNecessary = false;\n        for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n        return null;\n    }\n    // Resizes an image before it gets sent to the server. This function is the default behavior of\n    // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n    // the resized blob.\n    resizeImage(file, width, height, resizeMethod, callback) {\n        return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n            if (canvas == null) // The image has not been resized\n            return callback(file);\n            else {\n                let { resizeMimeType: resizeMimeType  } = this.options;\n                if (resizeMimeType == null) resizeMimeType = file.type;\n                let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n            }\n        });\n    }\n    createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n        let fileReader = new FileReader();\n        fileReader.onload = ()=>{\n            file.dataURL = fileReader.result;\n            // Don't bother creating a thumbnail for SVG images since they're vector\n            if (file.type === \"image/svg+xml\") {\n                if (callback != null) callback(fileReader.result);\n                return;\n            }\n            this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n        };\n        fileReader.readAsDataURL(file);\n    }\n    // `mockFile` needs to have these attributes:\n    //\n    //     { name: 'name', size: 12345, imageUrl: '' }\n    //\n    // `callback` will be invoked when the image has been downloaded and displayed.\n    // `crossOrigin` will be added to the `img` tag when accessing the file.\n    displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n        this.emit(\"addedfile\", mockFile);\n        this.emit(\"complete\", mockFile);\n        if (!resizeThumbnail) {\n            this.emit(\"thumbnail\", mockFile, imageUrl);\n            if (callback) callback();\n        } else {\n            let onDone = (thumbnail)=>{\n                this.emit(\"thumbnail\", mockFile, thumbnail);\n                if (callback) callback();\n            };\n            mockFile.dataURL = imageUrl;\n            this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n        }\n    }\n    createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n        // Not using `new Image` here because of a bug in latest Chrome versions.\n        // See https://github.com/enyo/dropzone/pull/226\n        let img = document.createElement(\"img\");\n        if (crossOrigin) img.crossOrigin = crossOrigin;\n        // fixOrientation is not needed anymore with browsers handling imageOrientation\n        fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n        img.onload = ()=>{\n            let loadExif = (callback)=>callback(1)\n            ;\n            if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                    return callback(EXIF.getTag(this, \"Orientation\"));\n                })\n            ;\n            return loadExif((orientation)=>{\n                file.width = img.width;\n                file.height = img.height;\n                let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                let canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = resizeInfo.trgWidth;\n                canvas.height = resizeInfo.trgHeight;\n                if (orientation > 4) {\n                    canvas.width = resizeInfo.trgHeight;\n                    canvas.height = resizeInfo.trgWidth;\n                }\n                switch(orientation){\n                    case 2:\n                        // horizontal flip\n                        ctx.translate(canvas.width, 0);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 3:\n                        // 180° rotate left\n                        ctx.translate(canvas.width, canvas.height);\n                        ctx.rotate(Math.PI);\n                        break;\n                    case 4:\n                        // vertical flip\n                        ctx.translate(0, canvas.height);\n                        ctx.scale(1, -1);\n                        break;\n                    case 5:\n                        // vertical flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.scale(1, -1);\n                        break;\n                    case 6:\n                        // 90° rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(0, -canvas.width);\n                        break;\n                    case 7:\n                        // horizontal flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(canvas.height, -canvas.width);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 8:\n                        // 90° rotate left\n                        ctx.rotate(-0.5 * Math.PI);\n                        ctx.translate(-canvas.height, 0);\n                        break;\n                }\n                // This is a bugfix for iOS' scaling bug.\n                $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                let thumbnail = canvas.toDataURL(\"image/png\");\n                if (callback != null) return callback(thumbnail, canvas);\n            });\n        };\n        if (callback != null) img.onerror = callback;\n        return img.src = file.dataURL;\n    }\n    // Goes through the queue and processes files if there aren't too many already.\n    processQueue() {\n        let { parallelUploads: parallelUploads  } = this.options;\n        let processingLength = this.getUploadingFiles().length;\n        let i = processingLength;\n        // There are already at least as many files uploading than should be\n        if (processingLength >= parallelUploads) return;\n        let queuedFiles = this.getQueuedFiles();\n        if (!(queuedFiles.length > 0)) return;\n        if (this.options.uploadMultiple) // The files should be uploaded in one request\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n        else while(i < parallelUploads){\n            if (!queuedFiles.length) return;\n             // Nothing left to process\n            this.processFile(queuedFiles.shift());\n            i++;\n        }\n    }\n    // Wrapper for `processFiles`\n    processFile(file) {\n        return this.processFiles([\n            file\n        ]);\n    }\n    // Loads the file, then calls finishedLoading()\n    processFiles(files) {\n        for (let file of files){\n            file.processing = true; // Backwards compatibility\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n            this.emit(\"processing\", file);\n        }\n        if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n        return this.uploadFiles(files);\n    }\n    _getFilesWithXhr(xhr) {\n        let files;\n        return files = this.files.filter((file)=>file.xhr === xhr\n        ).map((file)=>file\n        );\n    }\n    // Cancels the file upload and sets the status to CANCELED\n    // **if** the file is actually being uploaded.\n    // If it's still in the queue, the file is being removed from it and the status\n    // set to CANCELED.\n    cancelUpload(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n            let groupedFiles = this._getFilesWithXhr(file.xhr);\n            for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n            for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n        } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            this.emit(\"canceled\", file);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                file\n            ]);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    resolveOption(option, ...args) {\n        if (typeof option === \"function\") return option.apply(this, args);\n        return option;\n    }\n    uploadFile(file) {\n        return this.uploadFiles([\n            file\n        ]);\n    }\n    uploadFiles(files) {\n        this._transformFiles(files, (transformedFiles)=>{\n            if (this.options.chunking) {\n                // Chunking is not allowed to be used with `uploadMultiple` so we know\n                // that there is only __one__file.\n                let transformedFile = transformedFiles[0];\n                files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n            }\n            if (files[0].upload.chunked) {\n                // This file should be sent in chunks!\n                // If the chunking option is set, we **know** that there can only be **one** file, since\n                // uploadMultiple is not allowed with this option.\n                let file = files[0];\n                let transformedFile = transformedFiles[0];\n                let startedChunkCount = 0;\n                file.upload.chunks = [];\n                let handleNextChunk = ()=>{\n                    let chunkIndex = 0;\n                    // Find the next item in file.upload.chunks that is not defined yet.\n                    while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                    // This means, that all chunks have already been started.\n                    if (chunkIndex >= file.upload.totalChunkCount) return;\n                    startedChunkCount++;\n                    let start = chunkIndex * this.options.chunkSize;\n                    let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                    let dataBlock = {\n                        name: this._getParamName(0),\n                        data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                        filename: file.upload.filename,\n                        chunkIndex: chunkIndex\n                    };\n                    file.upload.chunks[chunkIndex] = {\n                        file: file,\n                        index: chunkIndex,\n                        dataBlock: dataBlock,\n                        status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                        progress: 0,\n                        retries: 0\n                    };\n                    this._uploadData(files, [\n                        dataBlock\n                    ]);\n                };\n                file.upload.finishedChunkUpload = (chunk, response)=>{\n                    let allFinished = true;\n                    chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                    // Clear the data from the chunk\n                    chunk.dataBlock = null;\n                    chunk.response = chunk.xhr.responseText;\n                    chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                    // Leaving this reference to xhr will cause memory leaks.\n                    chunk.xhr = null;\n                    for(let i = 0; i < file.upload.totalChunkCount; i++){\n                        if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                        if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                    }\n                    if (allFinished) this.options.chunksUploaded(file, ()=>{\n                        this._finished(files, response, null);\n                    });\n                };\n                if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                else handleNextChunk();\n            } else {\n                let dataBlocks = [];\n                for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                    name: this._getParamName(i),\n                    data: transformedFiles[i],\n                    filename: files[i].upload.filename\n                };\n                this._uploadData(files, dataBlocks);\n            }\n        });\n    }\n    /// Returns the right chunk for given file and xhr\n    _getChunk(file, xhr) {\n        for(let i = 0; i < file.upload.totalChunkCount; i++){\n            if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n        }\n    }\n    // This function actually uploads the file(s) to the server.\n    //\n    //  If dataBlocks contains the actual data to upload (meaning, that this could\n    // either be transformed files, or individual chunks for chunked upload) then\n    // they will be used for the actual data to upload.\n    _uploadData(files, dataBlocks) {\n        let xhr = new XMLHttpRequest();\n        // Put the xhr object in the file objects to be able to reference it later.\n        for (let file of files)file.xhr = xhr;\n        if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n        // later, and found with _getChunk.\n        files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n        let method = this.resolveOption(this.options.method, files, dataBlocks);\n        let url = this.resolveOption(this.options.url, files, dataBlocks);\n        xhr.open(method, url, true);\n        // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n        let timeout = this.resolveOption(this.options.timeout, files);\n        if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n        // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n        xhr.withCredentials = !!this.options.withCredentials;\n        xhr.onload = (e)=>{\n            this._finishedUploading(files, xhr, e);\n        };\n        xhr.ontimeout = ()=>{\n            this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n        };\n        xhr.onerror = ()=>{\n            this._handleUploadError(files, xhr);\n        };\n        // Some browsers do not have the .upload property\n        let progressObj = xhr.upload != null ? xhr.upload : xhr;\n        progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n        ;\n        let headers = this.options.defaultHeaders ? {\n            Accept: \"application/json\",\n            \"Cache-Control\": \"no-cache\",\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        } : {\n        };\n        if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n        if (this.options.headers) $ewBKy$justextend(headers, this.options.headers);\n        for(let headerName in headers){\n            let headerValue = headers[headerName];\n            if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n        }\n        if (this.options.binaryBody) {\n            // Since the file is going to be sent as binary body, it doesn't make\n            // any sense to generate `FormData` for it.\n            for (let file of files)this.emit(\"sending\", file, xhr);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n            this.submitRequest(xhr, null, files);\n        } else {\n            let formData = new FormData();\n            // Adding all @options parameters\n            if (this.options.params) {\n                let additionalParams = this.options.params;\n                if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                for(let key in additionalParams){\n                    let value = additionalParams[key];\n                    if (Array.isArray(value)) // The additional parameter contains an array,\n                    // so lets iterate over it to attach each value\n                    // individually.\n                    for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                    else formData.append(key, value);\n                }\n            }\n            // Let the user add additional data if necessary\n            for (let file of files)this.emit(\"sending\", file, xhr, formData);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n            this._addFormElementData(formData);\n            // Finally add the files\n            // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n            for(let i = 0; i < dataBlocks.length; i++){\n                let dataBlock = dataBlocks[i];\n                formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n            }\n            this.submitRequest(xhr, formData, files);\n        }\n    }\n    // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n    _transformFiles(files, done) {\n        let transformedFiles = [];\n        // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n        let doneCounter = 0;\n        for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n            transformedFiles[i] = transformedFile;\n            if (++doneCounter === files.length) done(transformedFiles);\n        });\n    }\n    // Takes care of adding other input elements of the form to the AJAX request\n    _addFormElementData(formData) {\n        // Take care of other input elements\n        if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n            let inputName = input.getAttribute(\"name\");\n            let inputType = input.getAttribute(\"type\");\n            if (inputType) inputType = inputType.toLowerCase();\n            // If the input doesn't have a name, we can't use it.\n            if (typeof inputName === \"undefined\" || inputName === null) continue;\n            if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                // Possibly multiple values\n                for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n            } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n        }\n    }\n    // Invoked when there is new progress information about given files.\n    // If e is not provided, it is assumed that the upload is finished.\n    _updateFilesUploadProgress(files, xhr, e) {\n        if (!files[0].upload.chunked) // Handle file uploads without chunking\n        for (let file of files){\n            if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n            if (e) {\n                file.upload.progress = 100 * e.loaded / e.total;\n                file.upload.total = e.total;\n                file.upload.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                file.upload.progress = 100;\n                file.upload.bytesSent = file.upload.total;\n            }\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n        else {\n            // Handle chunked file uploads\n            // Chunked upload is not compatible with uploading multiple files in one\n            // request, so we know there's only one file.\n            let file = files[0];\n            // Since this is a chunked upload, we need to update the appropriate chunk\n            // progress.\n            let chunk = this._getChunk(file, xhr);\n            if (e) {\n                chunk.progress = 100 * e.loaded / e.total;\n                chunk.total = e.total;\n                chunk.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                chunk.progress = 100;\n                chunk.bytesSent = chunk.total;\n            }\n            // Now tally the *file* upload progress from its individual chunks\n            file.upload.progress = 0;\n            file.upload.total = 0;\n            file.upload.bytesSent = 0;\n            for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                file.upload.progress += file.upload.chunks[i].progress;\n                file.upload.total += file.upload.chunks[i].total;\n                file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n            }\n            // Since the process is a percentage, we need to divide by the amount of\n            // chunks we've used.\n            file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n    }\n    _finishedUploading(files, xhr, e) {\n        let response;\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (xhr.readyState !== 4) return;\n        if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n            response = xhr.responseText;\n            if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                response = JSON.parse(response);\n            } catch (error) {\n                e = error;\n                response = \"Invalid JSON response from server.\";\n            }\n        }\n        this._updateFilesUploadProgress(files, xhr);\n        if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n        else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n        else this._finished(files, response, e);\n    }\n    _handleUploadError(files, xhr, response) {\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (files[0].upload.chunked && this.options.retryChunks) {\n            let chunk = this._getChunk(files[0], xhr);\n            if ((chunk.retries++) < this.options.retryChunksLimit) {\n                this._uploadData(files, [\n                    chunk.dataBlock\n                ]);\n                return;\n            } else console.warn(\"Retried this chunk too often. Giving up.\");\n        }\n        this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n    }\n    submitRequest(xhr, formData, files) {\n        if (xhr.readyState != 1) {\n            console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n            return;\n        }\n        if (this.options.binaryBody) {\n            if (files[0].upload.chunked) {\n                const chunk = this._getChunk(files[0], xhr);\n                xhr.send(chunk.dataBlock.data);\n            } else xhr.send(files[0]);\n        } else xhr.send(formData);\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _finished(files, responseText, e) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n            this.emit(\"success\", file, responseText, e);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"successmultiple\", files, responseText, e);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _errorProcessing(files, message, xhr) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n            this.emit(\"error\", file, message, xhr);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"errormultiple\", files, message, xhr);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    static uuidv4() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n            return v.toString(16);\n        });\n    }\n    constructor(el, options){\n        super();\n        let fallback, left;\n        this.element = el;\n        this.clickableElements = [];\n        this.listeners = [];\n        this.files = []; // All files\n        if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n        // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n        if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n        if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n        // Now add this dropzone to the instances.\n        $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n        // Put the dropzone inside the element itself.\n        this.element.dropzone = this;\n        let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n        };\n        this.options = $ewBKy$justextend(true, {\n        }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n        });\n        this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n        // If the browser failed, just call the fallback and leave\n        if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n        // @options.url = @element.getAttribute \"action\" unless @options.url?\n        if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n        if (!this.options.url) throw new Error(\"No URL provided.\");\n        if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n        if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n        if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n        // Backwards compatibility\n        if (this.options.acceptedMimeTypes) {\n            this.options.acceptedFiles = this.options.acceptedMimeTypes;\n            delete this.options.acceptedMimeTypes;\n        }\n        // Backwards compatibility\n        if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n        ;\n        if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n        if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n        fallback.parentNode.removeChild(fallback);\n        // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n        if (this.options.previewsContainer !== false) {\n            if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n            else this.previewsContainer = this.element;\n        }\n        if (this.options.clickable) {\n            if (this.options.clickable === true) this.clickableElements = [\n                this.element\n            ];\n            else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n        }\n        this.init();\n    }\n}\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n// This is a map of options for your different dropzones. Add configurations\n// to this object for your different dropzone elemens.\n//\n// Example:\n//\n//     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n//\n// And in html:\n//\n//     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n};\n// Returns the options for an element or undefined if none available.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n    // Get the `Dropzone.options.elementId` for this element if it exists\n    if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n    else return undefined;\n};\n// Holds a list of all dropzone instances\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n// Returns the dropzone for given element if any\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    return element.dropzone;\n};\n// Looks for all .dropzone elements and creates a dropzone for them\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n    let dropzones;\n    if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n    else {\n        dropzones = [];\n        // IE :(\n        let checkElements = (elements)=>(()=>{\n                let result = [];\n                for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                else result.push(undefined);\n                return result;\n            })()\n        ;\n        checkElements(document.getElementsByTagName(\"div\"));\n        checkElements(document.getElementsByTagName(\"form\"));\n    }\n    return (()=>{\n        let result = [];\n        for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n        if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n        else result.push(undefined);\n        return result;\n    })();\n};\n// Some browsers support drag and drog functionality, but not correctly.\n//\n// So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n// But what to do when browsers *theoretically* support an API, but crash\n// when using it.\n//\n// This is a list of regular expressions tested against navigator.userAgent\n//\n// ** It should only be used on browser that *do* support the API, but\n// incorrectly **\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n    // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n    /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n];\n// Checks if the browser is supported\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n    let capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n        if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n        else {\n            if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n            // configuration.\n            $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n            // The browser supports the API, but may be blocked.\n            for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                capableBrowser = false;\n                continue;\n            }\n        }\n    } else capableBrowser = false;\n    return capableBrowser;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    let byteString = atob(dataURI.split(\",\")[1]);\n    // separate out the mime component\n    let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n    // write the bytes of the string to an ArrayBuffer\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n    // write the ArrayBuffer to a blob\n    return new Blob([\n        ab\n    ], {\n        type: mimeString\n    });\n};\n// Returns an array without the rejected item\nconst $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n    ).map((item)=>item\n    )\n;\n// abc-def_ghi -> abcDefGhi\nconst $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n    )\n;\n// Creates an element from string\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n    let div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n};\n// Tests if given element is inside (or simply is) the container\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n    if (element === container) return true;\n     // Coffeescript doesn't support do/while loops\n    while(element = element.parentNode){\n        if (element === container) return true;\n    }\n    return false;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n    let element;\n    if (typeof el === \"string\") element = document.querySelector(el);\n    else if (el.nodeType != null) element = el;\n    if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n    return element;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n    let el, elements;\n    if (els instanceof Array) {\n        elements = [];\n        try {\n            for (el of els)elements.push(this.getElement(el, name));\n        } catch (e) {\n            elements = null;\n        }\n    } else if (typeof els === \"string\") {\n        elements = [];\n        for (el of document.querySelectorAll(els))elements.push(el);\n    } else if (els.nodeType != null) elements = [\n        els\n    ];\n    if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n    return elements;\n};\n// Asks the user the question and calls accepted or rejected accordingly\n//\n// The default implementation just uses `window.confirm` and then calls the\n// appropriate callback.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) return accepted();\n    else if (rejected != null) return rejected();\n};\n// Validates the mime type like this:\n//\n// https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n    if (!acceptedFiles) return true;\n     // If there are no accepted mime types, it's OK\n    acceptedFiles = acceptedFiles.split(\",\");\n    let mimeType = file.type;\n    let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (let validType of acceptedFiles){\n        validType = validType.trim();\n        if (validType.charAt(0) === \".\") {\n            if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n        } else if (/\\/\\*$/.test(validType)) {\n            // This is something like a image/* mime type\n            if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n        } else {\n            if (mimeType === validType) return true;\n        }\n    }\n    return false;\n};\n// Augment jQuery\nif (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n    return this.each(function() {\n        return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n    });\n};\n// Dropzone file status codes\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n// For backwards compatibility. Now, if a file is accepted, it's either queued\n// or uploading.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n/*\n\n Bugfix for iOS 6 and 7\n Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n */ // Detecting vertical squash in loaded image.\n// Fixes a bug which squash image vertically while drawing into canvas for some images.\n// This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\nlet $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n    let iw = img.naturalWidth;\n    let ih = img.naturalHeight;\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n    // search image edge pixel position in case it is squashed vertically.\n    let sy = 0;\n    let ey = ih;\n    let py = ih;\n    while(py > sy){\n        let alpha = data[(py - 1) * 4 + 3];\n        if (alpha === 0) ey = py;\n        else sy = py;\n        py = ey + sy >> 1;\n    }\n    let ratio = py / ih;\n    if (ratio === 0) return 1;\n    else return ratio;\n};\n// A replacement for context.drawImage\n// (args are for source and destination).\nvar $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n};\n// Based on MinifyJpeg\n// Source: http://www.perry.cz/files/ExifRestorer.js\n// http://elicon.blog57.fc2.com/blog-entry-206.html\nclass $3ed269f2f0fb224b$var$ExifRestore {\n    static initClass() {\n        this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    }\n    static encode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        while(true){\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n            enc1 = chr1 >> 2;\n            enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n            enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) enc3 = enc4 = 64;\n            else if (isNaN(chr3)) enc4 = 64;\n            output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return output;\n    }\n    static restore(origFileBase64, resizedFileBase64) {\n        if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n        let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n        let segments = this.slice2Segments(rawImage);\n        let image = this.exifManipulation(resizedFileBase64, segments);\n        return `data:image/jpeg;base64,${this.encode64(image)}`;\n    }\n    static exifManipulation(resizedFileBase64, segments) {\n        let exifArray = this.getExifArray(segments);\n        let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n        let aBuffer = new Uint8Array(newImageArray);\n        return aBuffer;\n    }\n    static getExifArray(segments) {\n        let seg = undefined;\n        let x = 0;\n        while(x < segments.length){\n            seg = segments[x];\n            if (seg[0] === 255 & seg[1] === 225) return seg;\n            x++;\n        }\n        return [];\n    }\n    static insertExif(resizedFileBase64, exifArray) {\n        let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n        let buf = this.decode64(imageData);\n        let separatePoint = buf.indexOf(255, 3);\n        let mae = buf.slice(0, separatePoint);\n        let ato = buf.slice(separatePoint);\n        let array = mae;\n        array = array.concat(exifArray);\n        array = array.concat(ato);\n        return array;\n    }\n    static slice2Segments(rawImageArray) {\n        let head = 0;\n        let segments = [];\n        while(true){\n            var length;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n            else {\n                length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                let endPoint = head + length + 2;\n                let seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length) break;\n        }\n        return segments;\n    }\n    static decode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        let buf = [];\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while(true){\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n            chr1 = enc1 << 2 | enc2 >> 4;\n            chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n            chr3 = (enc3 & 3) << 6 | enc4;\n            buf.push(chr1);\n            if (enc3 !== 64) buf.push(chr2);\n            if (enc4 !== 64) buf.push(chr3);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return buf;\n    }\n}\n$3ed269f2f0fb224b$var$ExifRestore.initClass();\n/*\n * contentloaded.js\n *\n * Author: Diego Perini (diego.perini at gmail.com)\n * Summary: cross-browser wrapper for DOMContentLoaded\n * Updated: 20101020\n * License: MIT\n * Version: 1.2\n *\n * URL:\n * http://javascript.nwbox.com/ContentLoaded/\n * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n */ // @win window reference\n// @fn function reference\nlet $3ed269f2f0fb224b$var$contentLoaded = function(win, fn) {\n    let done = false;\n    let top = true;\n    let doc = win.document;\n    let root = doc.documentElement;\n    let add = doc.addEventListener ? \"addEventListener\" : \"attachEvent\";\n    let rem = doc.addEventListener ? \"removeEventListener\" : \"detachEvent\";\n    let pre = doc.addEventListener ? \"\" : \"on\";\n    var init = function(e) {\n        if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") return;\n        (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n        if (!done && (done = true)) return fn.call(win, e.type || e);\n    };\n    var poll = function() {\n        try {\n            root.doScroll(\"left\");\n        } catch (e) {\n            setTimeout(poll, 50);\n            return;\n        }\n        return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n        if (doc.createEventObject && root.doScroll) {\n            try {\n                top = !win.frameElement;\n            } catch (error) {\n            }\n            if (top) poll();\n        }\n        doc[add](pre + \"DOMContentLoaded\", init, false);\n        doc[add](pre + \"readystatechange\", init, false);\n        return win[add](pre + \"load\", init, false);\n    }\n};\nfunction $3ed269f2f0fb224b$var$__guard__(value, transform) {\n    return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n}\nfunction $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n    if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n    else return undefined;\n}\n\n\nexport {$3ed269f2f0fb224b$export$2e2bcd8739ae039 as default, $3ed269f2f0fb224b$export$2e2bcd8739ae039 as Dropzone};\n//# sourceMappingURL=dropzone.mjs.map\n","import { Dropzone } from \"dropzone\";\r\n\r\nif (document.querySelector('div.form__dropzone')) {\r\n  const dropzone = new Dropzone(\"div.form__dropzone\", {\r\n    url: \"/file/post\",\r\n    createImageThumbnails: false,\r\n    dictDefaultMessage: 'Here'\r\n  });\r\n}\r\n","export const HOOKS = [\n    \"onChange\",\n    \"onClose\",\n    \"onDayCreate\",\n    \"onDestroy\",\n    \"onKeyDown\",\n    \"onMonthChange\",\n    \"onOpen\",\n    \"onParseConfig\",\n    \"onReady\",\n    \"onValueUpdate\",\n    \"onYearChange\",\n    \"onPreCalendarPosition\",\n];\nexport const defaults = {\n    _disable: [],\n    allowInput: false,\n    allowInvalidPreload: false,\n    altFormat: \"F j, Y\",\n    altInput: false,\n    altInputClass: \"form-control input\",\n    animate: typeof window === \"object\" &&\n        window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n    ariaDateFormat: \"F j, Y\",\n    autoFillDefaultTime: true,\n    clickOpens: true,\n    closeOnSelect: true,\n    conjunction: \", \",\n    dateFormat: \"Y-m-d\",\n    defaultHour: 12,\n    defaultMinute: 0,\n    defaultSeconds: 0,\n    disable: [],\n    disableMobile: false,\n    enableSeconds: false,\n    enableTime: false,\n    errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n    getWeek: (givenDate) => {\n        const date = new Date(givenDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n        var week1 = new Date(date.getFullYear(), 0, 4);\n        return (1 +\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                3 +\n                ((week1.getDay() + 6) % 7)) /\n                7));\n    },\n    hourIncrement: 1,\n    ignoredFocusElements: [],\n    inline: false,\n    locale: \"default\",\n    minuteIncrement: 5,\n    mode: \"single\",\n    monthSelectorType: \"dropdown\",\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n    noCalendar: false,\n    now: new Date(),\n    onChange: [],\n    onClose: [],\n    onDayCreate: [],\n    onDestroy: [],\n    onKeyDown: [],\n    onMonthChange: [],\n    onOpen: [],\n    onParseConfig: [],\n    onReady: [],\n    onValueUpdate: [],\n    onYearChange: [],\n    onPreCalendarPosition: [],\n    plugins: [],\n    position: \"auto\",\n    positionElement: undefined,\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n    shorthandCurrentMonth: false,\n    showMonths: 1,\n    static: false,\n    time_24hr: false,\n    weekNumbers: false,\n    wrap: false,\n};\n","export const english = {\n    weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ],\n    },\n    months: {\n        shorthand: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        longhand: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ],\n    },\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    firstDayOfWeek: 0,\n    ordinal: (nth) => {\n        const s = nth % 100;\n        if (s > 3 && s < 21)\n            return \"th\";\n        switch (s % 10) {\n            case 1:\n                return \"st\";\n            case 2:\n                return \"nd\";\n            case 3:\n                return \"rd\";\n            default:\n                return \"th\";\n        }\n    },\n    rangeSeparator: \" to \",\n    weekAbbreviation: \"Wk\",\n    scrollTitle: \"Scroll to increment\",\n    toggleTitle: \"Click to toggle\",\n    amPM: [\"AM\", \"PM\"],\n    yearAriaLabel: \"Year\",\n    monthAriaLabel: \"Month\",\n    hourAriaLabel: \"Hour\",\n    minuteAriaLabel: \"Minute\",\n    time_24hr: false,\n};\nexport default english;\n","export const pad = (number, length = 2) => `000${number}`.slice(length * -1);\nexport const int = (bool) => (bool === true ? 1 : 0);\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\nexport const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n","export function toggleClass(elem, className, bool) {\n    if (bool === true)\n        return elem.classList.add(className);\n    elem.classList.remove(className);\n}\nexport function createElement(tag, className, content) {\n    const e = window.document.createElement(tag);\n    className = className || \"\";\n    content = content || \"\";\n    e.className = className;\n    if (content !== undefined)\n        e.textContent = content;\n    return e;\n}\nexport function clearNode(node) {\n    while (node.firstChild)\n        node.removeChild(node.firstChild);\n}\nexport function findParent(node, condition) {\n    if (condition(node))\n        return node;\n    else if (node.parentNode)\n        return findParent(node.parentNode, condition);\n    return undefined;\n}\nexport function createNumberInput(inputClassName, opts) {\n    const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n    if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n        numInput.type = \"number\";\n    }\n    else {\n        numInput.type = \"text\";\n        numInput.pattern = \"\\\\d*\";\n    }\n    if (opts !== undefined)\n        for (const key in opts)\n            numInput.setAttribute(key, opts[key]);\n    wrapper.appendChild(numInput);\n    wrapper.appendChild(arrowUp);\n    wrapper.appendChild(arrowDown);\n    return wrapper;\n}\nexport function getEventTarget(event) {\n    try {\n        if (typeof event.composedPath === \"function\") {\n            const path = event.composedPath();\n            return path[0];\n        }\n        return event.target;\n    }\n    catch (error) {\n        return event.target;\n    }\n}\n","import { int, pad } from \"../utils\";\nconst doNothing = () => undefined;\nexport const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\nexport const revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    H: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: (dateObj, amPM, locale) => {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n    W: function (dateObj, weekNum, locale) {\n        const weekNumber = parseInt(weekNum);\n        const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: (dateObj, year) => {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: (_, ISODate) => new Date(ISODate),\n    d: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    i: (dateObj, minutes) => {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n    w: doNothing,\n    y: (dateObj, year) => {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nexport const tokenRegex = {\n    D: \"(\\\\w+)\",\n    F: \"(\\\\w+)\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"(\\\\w+)\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"(\\\\w+)\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nexport const formats = {\n    Z: (date) => date.toISOString(),\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return pad(formats.h(date, locale, options));\n    },\n    H: (date) => pad(date.getHours()),\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: (date) => pad(date.getSeconds()),\n    U: (date) => date.getTime() / 1000,\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: (date) => pad(date.getFullYear(), 4),\n    d: (date) => pad(date.getDate()),\n    h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n    i: (date) => pad(date.getMinutes()),\n    j: (date) => date.getDate(),\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: (date) => pad(date.getMonth() + 1),\n    n: (date) => date.getMonth() + 1,\n    s: (date) => date.getSeconds(),\n    u: (date) => date.getTime(),\n    w: (date) => date.getDay(),\n    y: (date) => String(date.getFullYear()).substring(2),\n};\n","import { tokenRegex, revFormat, formats, } from \"./formatting\";\nimport { defaults } from \"../types/options\";\nimport { english } from \"../l10n/default\";\nexport const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n    const locale = overrideLocale || l10n;\n    if (config.formatDate !== undefined && !isMobile) {\n        return config.formatDate(dateObj, frmt, locale);\n    }\n    return frmt\n        .split(\"\")\n        .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n        ? formats[c](dateObj, locale, config)\n        : c !== \"\\\\\"\n            ? c\n            : \"\")\n        .join(\"\");\n};\nexport const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n    if (date !== 0 && !date)\n        return undefined;\n    const locale = customLocale || l10n;\n    let parsedDate;\n    const dateOrig = date;\n    if (date instanceof Date)\n        parsedDate = new Date(date.getTime());\n    else if (typeof date !== \"string\" &&\n        date.toFixed !== undefined)\n        parsedDate = new Date(date);\n    else if (typeof date === \"string\") {\n        const format = givenFormat || (config || defaults).dateFormat;\n        const datestr = String(date).trim();\n        if (datestr === \"today\") {\n            parsedDate = new Date();\n            timeless = true;\n        }\n        else if (/Z$/.test(datestr) ||\n            /GMT$/.test(datestr))\n            parsedDate = new Date(date);\n        else if (config && config.parseDate)\n            parsedDate = config.parseDate(date, format);\n        else {\n            parsedDate =\n                !config || !config.noCalendar\n                    ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                    : new Date(new Date().setHours(0, 0, 0, 0));\n            let matched, ops = [];\n            for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                const token = format[i];\n                const isBackSlash = token === \"\\\\\";\n                const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                if (tokenRegex[token] && !escaped) {\n                    regexStr += tokenRegex[token];\n                    const match = new RegExp(regexStr).exec(date);\n                    if (match && (matched = true)) {\n                        ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                            fn: revFormat[token],\n                            val: match[++matchIndex],\n                        });\n                    }\n                }\n                else if (!isBackSlash)\n                    regexStr += \".\";\n                ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n            }\n            parsedDate = matched ? parsedDate : undefined;\n        }\n    }\n    if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n        config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n        return undefined;\n    }\n    if (timeless === true)\n        parsedDate.setHours(0, 0, 0, 0);\n    return parsedDate;\n};\nexport function compareDates(date1, date2, timeless = true) {\n    if (timeless !== false) {\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\n    }\n    return date1.getTime() - date2.getTime();\n}\nexport function compareTimes(date1, date2) {\n    return (3600 * (date1.getHours() - date2.getHours()) +\n        60 * (date1.getMinutes() - date2.getMinutes()) +\n        date1.getSeconds() -\n        date2.getSeconds());\n}\nexport const isBetween = (ts, ts1, ts2) => {\n    return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n};\nexport const duration = {\n    DAY: 86400000,\n};\nexport function getDefaultHours(config) {\n    let hours = config.defaultHour;\n    let minutes = config.defaultMinute;\n    let seconds = config.defaultSeconds;\n    if (config.minDate !== undefined) {\n        const minHour = config.minDate.getHours();\n        const minMinutes = config.minDate.getMinutes();\n        const minSeconds = config.minDate.getSeconds();\n        if (hours < minHour) {\n            hours = minHour;\n        }\n        if (hours === minHour && minutes < minMinutes) {\n            minutes = minMinutes;\n        }\n        if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n            seconds = config.minDate.getSeconds();\n    }\n    if (config.maxDate !== undefined) {\n        const maxHr = config.maxDate.getHours();\n        const maxMinutes = config.maxDate.getMinutes();\n        hours = Math.min(hours, maxHr);\n        if (hours === maxHr)\n            minutes = Math.min(maxMinutes, minutes);\n        if (hours === maxHr && minutes === maxMinutes)\n            seconds = config.maxDate.getSeconds();\n    }\n    return { hours, minutes, seconds };\n}\n","\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target, ...args) {\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        for (const source of args) {\n            if (source) {\n                Object.keys(source).forEach((key) => (target[key] = source[key]));\n            }\n        }\n        return target;\n    };\n}\n","import { defaults as defaultOptions, HOOKS, } from \"./types/options\";\nimport English from \"./l10n/default\";\nimport { arrayify, debounce, int, pad } from \"./utils\";\nimport { clearNode, createElement, createNumberInput, findParent, toggleClass, getEventTarget, } from \"./utils/dom\";\nimport { compareDates, createDateParser, createDateFormatter, duration, isBetween, getDefaultHours, } from \"./utils/dates\";\nimport { tokenRegex, monthToStr } from \"./utils/formatting\";\nimport \"./utils/polyfills\";\nconst DEBOUNCED_CHANGE_MS = 300;\nfunction FlatpickrInstance(element, instanceConfig) {\n    const self = {\n        config: Object.assign(Object.assign({}, defaultOptions), flatpickr.defaultConfig),\n        l10n: English,\n    };\n    self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    self._handlers = [];\n    self.pluginElements = [];\n    self.loadedPlugins = [];\n    self._bind = bind;\n    self._setHoursFromDate = setHoursFromDate;\n    self._positionCalendar = positionCalendar;\n    self.changeMonth = changeMonth;\n    self.changeYear = changeYear;\n    self.clear = clear;\n    self.close = close;\n    self._createElement = createElement;\n    self.destroy = destroy;\n    self.isEnabled = isEnabled;\n    self.jumpToDate = jumpToDate;\n    self.open = open;\n    self.redraw = redraw;\n    self.set = set;\n    self.setDate = setDate;\n    self.toggle = toggle;\n    function setupHelperFunctions() {\n        self.utils = {\n            getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                    return 29;\n                return self.l10n.daysInMonth[month];\n            },\n        };\n    }\n    function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile)\n            build();\n        bindEvents();\n        if (self.selectedDates.length || self.config.noCalendar) {\n            if (self.config.enableTime) {\n                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n            }\n            updateValue(false);\n        }\n        setCalendarWidth();\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (!self.isMobile && isSafari) {\n            positionCalendar();\n        }\n        triggerEvent(\"onReady\");\n    }\n    function bindToInstance(fn) {\n        return fn.bind(self);\n    }\n    function setCalendarWidth() {\n        const config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) {\n            return;\n        }\n        else if (config.noCalendar !== true) {\n            window.requestAnimationFrame(function () {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width =\n                        daysWidth +\n                            (self.weekWrapper !== undefined\n                                ? self.weekWrapper.offsetWidth\n                                : 0) +\n                            \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n    }\n    function updateTime(e) {\n        if (self.selectedDates.length === 0) {\n            const defaultDate = self.config.minDate === undefined ||\n                compareDates(new Date(), self.config.minDate) >= 0\n                ? new Date()\n                : new Date(self.config.minDate.getTime());\n            const defaults = getDefaultHours(self.config);\n            defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n            self.selectedDates = [defaultDate];\n            self.latestSelectedDateObj = defaultDate;\n        }\n        if (e !== undefined && e.type !== \"blur\") {\n            timeWrapper(e);\n        }\n        const prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n        if (self._input.value !== prevValue) {\n            self._debouncedChange();\n        }\n    }\n    function ampm2military(hour, amPM) {\n        return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n    }\n    function military2ampm(hour) {\n        switch (hour % 24) {\n            case 0:\n            case 12:\n                return 12;\n            default:\n                return hour % 12;\n        }\n    }\n    function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined)\n            return;\n        let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\n            : 0;\n        if (self.amPM !== undefined) {\n            hours = ampm2military(hours, self.amPM.textContent);\n        }\n        const limitMinHours = self.config.minTime !== undefined ||\n            (self.config.minDate &&\n                self.minDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                    0);\n        const limitMaxHours = self.config.maxTime !== undefined ||\n            (self.config.maxDate &&\n                self.maxDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                    0);\n        if (limitMaxHours) {\n            const maxTime = self.config.maxTime !== undefined\n                ? self.config.maxTime\n                : self.config.maxDate;\n            hours = Math.min(hours, maxTime.getHours());\n            if (hours === maxTime.getHours())\n                minutes = Math.min(minutes, maxTime.getMinutes());\n            if (minutes === maxTime.getMinutes())\n                seconds = Math.min(seconds, maxTime.getSeconds());\n        }\n        if (limitMinHours) {\n            const minTime = self.config.minTime !== undefined\n                ? self.config.minTime\n                : self.config.minDate;\n            hours = Math.max(hours, minTime.getHours());\n            if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                minutes = minTime.getMinutes();\n            if (minutes === minTime.getMinutes())\n                seconds = Math.max(seconds, minTime.getSeconds());\n        }\n        setHours(hours, minutes, seconds);\n    }\n    function setHoursFromDate(dateObj) {\n        const date = dateObj || self.latestSelectedDateObj;\n        if (date) {\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n    }\n    function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\n            return;\n        self.hourElement.value = pad(!self.config.time_24hr\n            ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n            : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined)\n            self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined)\n            self.secondElement.value = pad(seconds);\n    }\n    function onYearInput(event) {\n        const eventTarget = getEventTarget(event);\n        const year = parseInt(eventTarget.value) + (event.delta || 0);\n        if (year / 1000 > 1 ||\n            (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n            changeYear(year);\n        }\n    }\n    function bind(element, event, handler, options) {\n        if (event instanceof Array)\n            return event.forEach((ev) => bind(element, ev, handler, options));\n        if (element instanceof Array)\n            return element.forEach((el) => bind(el, event, handler, options));\n        element.addEventListener(event, handler, options);\n        self._handlers.push({\n            remove: () => element.removeEventListener(event, handler),\n        });\n    }\n    function triggerChange() {\n        triggerEvent(\"onChange\");\n    }\n    function bindEvents() {\n        if (self.config.wrap) {\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n            });\n        }\n        if (self.isMobile) {\n            setupMobile();\n            return;\n        }\n        const debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n            bind(self.daysContainer, \"mouseover\", (e) => {\n                if (self.config.mode === \"range\")\n                    onMouseOver(getEventTarget(e));\n            });\n        bind(window.document.body, \"keydown\", onKeyDown);\n        if (!self.config.inline && !self.config.static)\n            bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined)\n            bind(window.document, \"touchstart\", documentClick);\n        else\n            bind(window.document, \"mousedown\", documentClick);\n        bind(window.document, \"focus\", documentClick, { capture: true });\n        if (self.config.clickOpens === true) {\n            bind(self._input, \"focus\", self.open);\n            bind(self._input, \"click\", self.open);\n        }\n        if (self.daysContainer !== undefined) {\n            bind(self.monthNav, \"click\", onMonthNavClick);\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n            bind(self.daysContainer, \"click\", selectDate);\n        }\n        if (self.timeContainer !== undefined &&\n            self.minuteElement !== undefined &&\n            self.hourElement !== undefined) {\n            const selText = (e) => getEventTarget(e).select();\n            bind(self.timeContainer, [\"increment\"], updateTime);\n            bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n            bind(self.timeContainer, \"click\", timeIncrement);\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n            if (self.secondElement !== undefined)\n                bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n            if (self.amPM !== undefined) {\n                bind(self.amPM, \"click\", (e) => {\n                    updateTime(e);\n                    triggerChange();\n                });\n            }\n        }\n        if (self.config.allowInput) {\n            bind(self._input, \"blur\", onBlur);\n        }\n    }\n    function jumpToDate(jumpDate, triggerChange) {\n        const jumpTo = jumpDate !== undefined\n            ? self.parseDate(jumpDate)\n            : self.latestSelectedDateObj ||\n                (self.config.minDate && self.config.minDate > self.now\n                    ? self.config.minDate\n                    : self.config.maxDate && self.config.maxDate < self.now\n                        ? self.config.maxDate\n                        : self.now);\n        const oldYear = self.currentYear;\n        const oldMonth = self.currentMonth;\n        try {\n            if (jumpTo !== undefined) {\n                self.currentYear = jumpTo.getFullYear();\n                self.currentMonth = jumpTo.getMonth();\n            }\n        }\n        catch (e) {\n            e.message = \"Invalid date supplied: \" + jumpTo;\n            self.config.errorHandler(e);\n        }\n        if (triggerChange && self.currentYear !== oldYear) {\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        if (triggerChange &&\n            (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n            triggerEvent(\"onMonthChange\");\n        }\n        self.redraw();\n    }\n    function timeIncrement(e) {\n        const eventTarget = getEventTarget(e);\n        if (~eventTarget.className.indexOf(\"arrow\"))\n            incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n    }\n    function incrementNumInput(e, delta, inputElem) {\n        const target = e && getEventTarget(e);\n        const input = inputElem ||\n            (target && target.parentNode && target.parentNode.firstChild);\n        const event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n    }\n    function build() {\n        const fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n        if (!self.config.noCalendar) {\n            fragment.appendChild(buildMonthNav());\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n            if (self.config.weekNumbers) {\n                const { weekWrapper, weekNumbers } = buildWeeks();\n                self.innerContainer.appendChild(weekWrapper);\n                self.weekNumbers = weekNumbers;\n                self.weekWrapper = weekWrapper;\n            }\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n            self.rContainer.appendChild(buildWeekdays());\n            if (!self.daysContainer) {\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                self.daysContainer.tabIndex = -1;\n            }\n            buildDays();\n            self.rContainer.appendChild(self.daysContainer);\n            self.innerContainer.appendChild(self.rContainer);\n            fragment.appendChild(self.innerContainer);\n        }\n        if (self.config.enableTime) {\n            fragment.appendChild(buildTime());\n        }\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        const customAppend = self.config.appendTo !== undefined &&\n            self.config.appendTo.nodeType !== undefined;\n        if (self.config.inline || self.config.static) {\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n            if (self.config.inline) {\n                if (!customAppend && self.element.parentNode)\n                    self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                else if (self.config.appendTo !== undefined)\n                    self.config.appendTo.appendChild(self.calendarContainer);\n            }\n            if (self.config.static) {\n                const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                if (self.element.parentNode)\n                    self.element.parentNode.insertBefore(wrapper, self.element);\n                wrapper.appendChild(self.element);\n                if (self.altInput)\n                    wrapper.appendChild(self.altInput);\n                wrapper.appendChild(self.calendarContainer);\n            }\n        }\n        if (!self.config.static && !self.config.inline)\n            (self.config.appendTo !== undefined\n                ? self.config.appendTo\n                : window.document.body).appendChild(self.calendarContainer);\n    }\n    function createDay(className, date, dayNumber, i) {\n        const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n        if (className.indexOf(\"hidden\") === -1 &&\n            compareDates(date, self.now) === 0) {\n            self.todayDateElem = dayElement;\n            dayElement.classList.add(\"today\");\n            dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n        if (dateIsEnabled) {\n            dayElement.tabIndex = -1;\n            if (isDateSelected(date)) {\n                dayElement.classList.add(\"selected\");\n                self.selectedDateElem = dayElement;\n                if (self.config.mode === \"range\") {\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                        compareDates(date, self.selectedDates[0], true) === 0);\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                        compareDates(date, self.selectedDates[1], true) === 0);\n                    if (className === \"nextMonthDay\")\n                        dayElement.classList.add(\"inRange\");\n                }\n            }\n        }\n        else {\n            dayElement.classList.add(\"flatpickr-disabled\");\n        }\n        if (self.config.mode === \"range\") {\n            if (isDateInRange(date) && !isDateSelected(date))\n                dayElement.classList.add(\"inRange\");\n        }\n        if (self.weekNumbers &&\n            self.config.showMonths === 1 &&\n            className !== \"prevMonthDay\" &&\n            dayNumber % 7 === 1) {\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n    }\n    function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\")\n            onMouseOver(targetNode);\n    }\n    function getFirstAvailableDay(delta) {\n        const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        for (let m = startMonth; m != endMonth; m += delta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = delta > 0 ? 0 : month.children.length - 1;\n            const endIndex = delta > 0 ? month.children.length : -1;\n            for (let i = startIndex; i != endIndex; i += delta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                    return c;\n            }\n        }\n        return undefined;\n    }\n    function getNextAvailableDay(current, delta) {\n        const givenMonth = current.className.indexOf(\"Month\") === -1\n            ? current.dateObj.getMonth()\n            : self.currentMonth;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        const loopDelta = delta > 0 ? 1 : -1;\n        for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = givenMonth - self.currentMonth === m\n                ? current.$i + delta\n                : delta < 0\n                    ? month.children.length - 1\n                    : 0;\n            const numMonthDays = month.children.length;\n            for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 &&\n                    isEnabled(c.dateObj) &&\n                    Math.abs(current.$i - i) >= Math.abs(delta))\n                    return focusOnDayElem(c);\n            }\n        }\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n    }\n    function focusOnDay(current, offset) {\n        const dayFocused = isInView(document.activeElement || document.body);\n        const startElem = current !== undefined\n            ? current\n            : dayFocused\n                ? document.activeElement\n                : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                    ? self.selectedDateElem\n                    : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                        ? self.todayDateElem\n                        : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) {\n            self._input.focus();\n        }\n        else if (!dayFocused) {\n            focusOnDayElem(startElem);\n        }\n        else {\n            getNextAvailableDay(startElem, offset);\n        }\n    }\n    function buildMonthDays(year, month) {\n        const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n        const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n        for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n            (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n            days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n        const dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n    }\n    function buildDays() {\n        if (self.daysContainer === undefined) {\n            return;\n        }\n        clearNode(self.daysContainer);\n        if (self.weekNumbers)\n            clearNode(self.weekNumbers);\n        const frag = document.createDocumentFragment();\n        for (let i = 0; i < self.config.showMonths; i++) {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n            onMouseOver();\n        }\n    }\n    function buildMonthSwitch() {\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType !== \"dropdown\")\n            return;\n        const shouldBuildMonth = function (month) {\n            if (self.config.minDate !== undefined &&\n                self.currentYear === self.config.minDate.getFullYear() &&\n                month < self.config.minDate.getMonth()) {\n                return false;\n            }\n            return !(self.config.maxDate !== undefined &&\n                self.currentYear === self.config.maxDate.getFullYear() &&\n                month > self.config.maxDate.getMonth());\n        };\n        self.monthsDropdownContainer.tabIndex = -1;\n        self.monthsDropdownContainer.innerHTML = \"\";\n        for (let i = 0; i < 12; i++) {\n            if (!shouldBuildMonth(i))\n                continue;\n            const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n            month.value = new Date(self.currentYear, i).getMonth().toString();\n            month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n            month.tabIndex = -1;\n            if (self.currentMonth === i) {\n                month.selected = true;\n            }\n            self.monthsDropdownContainer.appendChild(month);\n        }\n    }\n    function buildMonth() {\n        const container = createElement(\"div\", \"flatpickr-month\");\n        const monthNavFragment = window.document.createDocumentFragment();\n        let monthElement;\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType === \"static\") {\n            monthElement = createElement(\"span\", \"cur-month\");\n        }\n        else {\n            self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n            self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n            bind(self.monthsDropdownContainer, \"change\", (e) => {\n                const target = getEventTarget(e);\n                const selectedMonth = parseInt(target.value, 10);\n                self.changeMonth(selectedMonth - self.currentMonth);\n                triggerEvent(\"onMonthChange\");\n            });\n            buildMonthSwitch();\n            monthElement = self.monthsDropdownContainer;\n        }\n        const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n        const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) {\n            yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n        }\n        if (self.config.maxDate) {\n            yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n            yearElement.disabled =\n                !!self.config.minDate &&\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n        const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n            container,\n            yearElement,\n            monthElement,\n        };\n    }\n    function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n        if (self.config.showMonths) {\n            self.yearElements = [];\n            self.monthElements = [];\n        }\n        for (let m = self.config.showMonths; m--;) {\n            const month = buildMonth();\n            self.yearElements.push(month.yearElement);\n            self.monthElements.push(month.monthElement);\n            self.monthNav.appendChild(month.container);\n        }\n        self.monthNav.appendChild(self.nextMonthNav);\n    }\n    function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n            get: () => self.__hidePrevMonthArrow,\n            set(bool) {\n                if (self.__hidePrevMonthArrow !== bool) {\n                    toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hidePrevMonthArrow = bool;\n                }\n            },\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n            get: () => self.__hideNextMonthArrow,\n            set(bool) {\n                if (self.__hideNextMonthArrow !== bool) {\n                    toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hideNextMonthArrow = bool;\n                }\n            },\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n    }\n    function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar)\n            self.calendarContainer.classList.add(\"noCalendar\");\n        const defaults = getDefaultHours(self.config);\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        const hourInput = createNumberInput(\"flatpickr-hour\", {\n            \"aria-label\": self.l10n.hourAriaLabel,\n        });\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        const minuteInput = createNumberInput(\"flatpickr-minute\", {\n            \"aria-label\": self.l10n.minuteAriaLabel,\n        });\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getHours()\n            : self.config.time_24hr\n                ? defaults.hours\n                : military2ampm(defaults.hours));\n        self.minuteElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getMinutes()\n            : defaults.minutes);\n        self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.hourElement.setAttribute(\"maxlength\", \"2\");\n        self.minuteElement.setAttribute(\"min\", \"0\");\n        self.minuteElement.setAttribute(\"max\", \"59\");\n        self.minuteElement.setAttribute(\"maxlength\", \"2\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr)\n            self.timeContainer.classList.add(\"time24hr\");\n        if (self.config.enableSeconds) {\n            self.timeContainer.classList.add(\"hasSeconds\");\n            const secondInput = createNumberInput(\"flatpickr-second\");\n            self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n            self.secondElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getSeconds()\n                : defaults.seconds);\n            self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n            self.secondElement.setAttribute(\"min\", \"0\");\n            self.secondElement.setAttribute(\"max\", \"59\");\n            self.secondElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n            self.timeContainer.appendChild(secondInput);\n        }\n        if (!self.config.time_24hr) {\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                ? self.hourElement.value\n                : self.config.defaultHour) > 11)]);\n            self.amPM.title = self.l10n.toggleTitle;\n            self.amPM.tabIndex = -1;\n            self.timeContainer.appendChild(self.amPM);\n        }\n        return self.timeContainer;\n    }\n    function buildWeekdays() {\n        if (!self.weekdayContainer)\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n        else\n            clearNode(self.weekdayContainer);\n        for (let i = self.config.showMonths; i--;) {\n            const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n            self.weekdayContainer.appendChild(container);\n        }\n        updateWeekdays();\n        return self.weekdayContainer;\n    }\n    function updateWeekdays() {\n        if (!self.weekdayContainer) {\n            return;\n        }\n        const firstDayOfWeek = self.l10n.firstDayOfWeek;\n        let weekdays = [...self.l10n.weekdays.shorthand];\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n            weekdays = [\n                ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                ...weekdays.splice(0, firstDayOfWeek),\n            ];\n        }\n        for (let i = self.config.showMonths; i--;) {\n            self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n        }\n    }\n    function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n            weekWrapper,\n            weekNumbers,\n        };\n    }\n    function changeMonth(value, isOffset = true) {\n        const delta = isOffset ? value : value - self.currentMonth;\n        if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n            (delta > 0 && self._hideNextMonthArrow === true))\n            return;\n        self.currentMonth += delta;\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\n            self.currentMonth = (self.currentMonth + 12) % 12;\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n    }\n    function clear(triggerChangeEvent = true, toInitial = true) {\n        self.input.value = \"\";\n        if (self.altInput !== undefined)\n            self.altInput.value = \"\";\n        if (self.mobileInput !== undefined)\n            self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        if (toInitial === true) {\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n        }\n        if (self.config.enableTime === true) {\n            const { hours, minutes, seconds } = getDefaultHours(self.config);\n            setHours(hours, minutes, seconds);\n        }\n        self.redraw();\n        if (triggerChangeEvent)\n            triggerEvent(\"onChange\");\n    }\n    function close() {\n        self.isOpen = false;\n        if (!self.isMobile) {\n            if (self.calendarContainer !== undefined) {\n                self.calendarContainer.classList.remove(\"open\");\n            }\n            if (self._input !== undefined) {\n                self._input.classList.remove(\"active\");\n            }\n        }\n        triggerEvent(\"onClose\");\n    }\n    function destroy() {\n        if (self.config !== undefined)\n            triggerEvent(\"onDestroy\");\n        for (let i = self._handlers.length; i--;) {\n            self._handlers[i].remove();\n        }\n        self._handlers = [];\n        if (self.mobileInput) {\n            if (self.mobileInput.parentNode)\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\n            self.mobileInput = undefined;\n        }\n        else if (self.calendarContainer && self.calendarContainer.parentNode) {\n            if (self.config.static && self.calendarContainer.parentNode) {\n                const wrapper = self.calendarContainer.parentNode;\n                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                if (wrapper.parentNode) {\n                    while (wrapper.firstChild)\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                }\n            }\n            else\n                self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n        if (self.altInput) {\n            self.input.type = \"text\";\n            if (self.altInput.parentNode)\n                self.altInput.parentNode.removeChild(self.altInput);\n            delete self.altInput;\n        }\n        if (self.input) {\n            self.input.type = self.input._type;\n            self.input.classList.remove(\"flatpickr-input\");\n            self.input.removeAttribute(\"readonly\");\n        }\n        [\n            \"_showTimeInput\",\n            \"latestSelectedDateObj\",\n            \"_hideNextMonthArrow\",\n            \"_hidePrevMonthArrow\",\n            \"__hideNextMonthArrow\",\n            \"__hidePrevMonthArrow\",\n            \"isMobile\",\n            \"isOpen\",\n            \"selectedDateElem\",\n            \"minDateHasTime\",\n            \"maxDateHasTime\",\n            \"days\",\n            \"daysContainer\",\n            \"_input\",\n            \"_positionElement\",\n            \"innerContainer\",\n            \"rContainer\",\n            \"monthNav\",\n            \"todayDateElem\",\n            \"calendarContainer\",\n            \"weekdayContainer\",\n            \"prevMonthNav\",\n            \"nextMonthNav\",\n            \"monthsDropdownContainer\",\n            \"currentMonthElement\",\n            \"currentYearElement\",\n            \"navigationCurrentMonth\",\n            \"selectedDateElem\",\n            \"config\",\n        ].forEach((k) => {\n            try {\n                delete self[k];\n            }\n            catch (_) { }\n        });\n    }\n    function isCalendarElem(elem) {\n        if (self.config.appendTo && self.config.appendTo.contains(elem))\n            return true;\n        return self.calendarContainer.contains(elem);\n    }\n    function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n            const eventTarget = getEventTarget(e);\n            const isCalendarElement = isCalendarElem(eventTarget);\n            const isInput = eventTarget === self.input ||\n                eventTarget === self.altInput ||\n                self.element.contains(eventTarget) ||\n                (e.path &&\n                    e.path.indexOf &&\n                    (~e.path.indexOf(self.input) ||\n                        ~e.path.indexOf(self.altInput)));\n            const lostFocus = e.type === \"blur\"\n                ? isInput &&\n                    e.relatedTarget &&\n                    !isCalendarElem(e.relatedTarget)\n                : !isInput &&\n                    !isCalendarElement &&\n                    !isCalendarElem(e.relatedTarget);\n            const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n            if (lostFocus && isIgnored) {\n                if (self.timeContainer !== undefined &&\n                    self.minuteElement !== undefined &&\n                    self.hourElement !== undefined &&\n                    self.input.value !== \"\" &&\n                    self.input.value !== undefined) {\n                    updateTime();\n                }\n                self.close();\n                if (self.config &&\n                    self.config.mode === \"range\" &&\n                    self.selectedDates.length === 1) {\n                    self.clear(false);\n                    self.redraw();\n                }\n            }\n        }\n    }\n    function changeYear(newYear) {\n        if (!newYear ||\n            (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n            (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n            return;\n        const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n        if (self.config.maxDate &&\n            self.currentYear === self.config.maxDate.getFullYear()) {\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        }\n        else if (self.config.minDate &&\n            self.currentYear === self.config.minDate.getFullYear()) {\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n        if (isNewYear) {\n            self.redraw();\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n    }\n    function isEnabled(date, timeless = true) {\n        var _a;\n        const dateToCheck = self.parseDate(date, undefined, timeless);\n        if ((self.config.minDate &&\n            dateToCheck &&\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n            (self.config.maxDate &&\n                dateToCheck &&\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n            return false;\n        if (!self.config.enable && self.config.disable.length === 0)\n            return true;\n        if (dateToCheck === undefined)\n            return false;\n        const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n        for (let i = 0, d; i < array.length; i++) {\n            d = array[i];\n            if (typeof d === \"function\" &&\n                d(dateToCheck))\n                return bool;\n            else if (d instanceof Date &&\n                dateToCheck !== undefined &&\n                d.getTime() === dateToCheck.getTime())\n                return bool;\n            else if (typeof d === \"string\") {\n                const parsed = self.parseDate(d, undefined, true);\n                return parsed && parsed.getTime() === dateToCheck.getTime()\n                    ? bool\n                    : !bool;\n            }\n            else if (typeof d === \"object\" &&\n                dateToCheck !== undefined &&\n                d.from &&\n                d.to &&\n                dateToCheck.getTime() >= d.from.getTime() &&\n                dateToCheck.getTime() <= d.to.getTime())\n                return bool;\n        }\n        return !bool;\n    }\n    function isInView(elem) {\n        if (self.daysContainer !== undefined)\n            return (elem.className.indexOf(\"hidden\") === -1 &&\n                elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                self.daysContainer.contains(elem));\n        return false;\n    }\n    function onBlur(e) {\n        const isInput = e.target === self._input;\n        if (isInput &&\n            (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n            !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n            self.setDate(self._input.value, true, e.target === self.altInput\n                ? self.config.altFormat\n                : self.config.dateFormat);\n        }\n    }\n    function onKeyDown(e) {\n        const eventTarget = getEventTarget(e);\n        const isInput = self.config.wrap\n            ? element.contains(eventTarget)\n            : eventTarget === self._input;\n        const allowInput = self.config.allowInput;\n        const allowKeydown = self.isOpen && (!allowInput || !isInput);\n        const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n        if (e.keyCode === 13 && isInput) {\n            if (allowInput) {\n                self.setDate(self._input.value, true, eventTarget === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n                return eventTarget.blur();\n            }\n            else {\n                self.open();\n            }\n        }\n        else if (isCalendarElem(eventTarget) ||\n            allowKeydown ||\n            allowInlineKeydown) {\n            const isTimeObj = !!self.timeContainer &&\n                self.timeContainer.contains(eventTarget);\n            switch (e.keyCode) {\n                case 13:\n                    if (isTimeObj) {\n                        e.preventDefault();\n                        updateTime();\n                        focusAndClose();\n                    }\n                    else\n                        selectDate(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    focusAndClose();\n                    break;\n                case 8:\n                case 46:\n                    if (isInput && !self.config.allowInput) {\n                        e.preventDefault();\n                        self.clear();\n                    }\n                    break;\n                case 37:\n                case 39:\n                    if (!isTimeObj && !isInput) {\n                        e.preventDefault();\n                        if (self.daysContainer !== undefined &&\n                            (allowInput === false ||\n                                (document.activeElement && isInView(document.activeElement)))) {\n                            const delta = e.keyCode === 39 ? 1 : -1;\n                            if (!e.ctrlKey)\n                                focusOnDay(undefined, delta);\n                            else {\n                                e.stopPropagation();\n                                changeMonth(delta);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                        }\n                    }\n                    else if (self.hourElement)\n                        self.hourElement.focus();\n                    break;\n                case 38:\n                case 40:\n                    e.preventDefault();\n                    const delta = e.keyCode === 40 ? 1 : -1;\n                    if ((self.daysContainer &&\n                        eventTarget.$i !== undefined) ||\n                        eventTarget === self.input ||\n                        eventTarget === self.altInput) {\n                        if (e.ctrlKey) {\n                            e.stopPropagation();\n                            changeYear(self.currentYear - delta);\n                            focusOnDay(getFirstAvailableDay(1), 0);\n                        }\n                        else if (!isTimeObj)\n                            focusOnDay(undefined, delta * 7);\n                    }\n                    else if (eventTarget === self.currentYearElement) {\n                        changeYear(self.currentYear - delta);\n                    }\n                    else if (self.config.enableTime) {\n                        if (!isTimeObj && self.hourElement)\n                            self.hourElement.focus();\n                        updateTime(e);\n                        self._debouncedChange();\n                    }\n                    break;\n                case 9:\n                    if (isTimeObj) {\n                        const elems = [\n                            self.hourElement,\n                            self.minuteElement,\n                            self.secondElement,\n                            self.amPM,\n                        ]\n                            .concat(self.pluginElements)\n                            .filter((x) => x);\n                        const i = elems.indexOf(eventTarget);\n                        if (i !== -1) {\n                            const target = elems[i + (e.shiftKey ? -1 : 1)];\n                            e.preventDefault();\n                            (target || self._input).focus();\n                        }\n                    }\n                    else if (!self.config.noCalendar &&\n                        self.daysContainer &&\n                        self.daysContainer.contains(eventTarget) &&\n                        e.shiftKey) {\n                        e.preventDefault();\n                        self._input.focus();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            switch (e.key) {\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n        }\n        if (isInput || isCalendarElem(eventTarget)) {\n            triggerEvent(\"onKeyDown\", e);\n        }\n    }\n    function onMouseOver(elem) {\n        if (self.selectedDates.length !== 1 ||\n            (elem &&\n                (!elem.classList.contains(\"flatpickr-day\") ||\n                    elem.classList.contains(\"flatpickr-disabled\"))))\n            return;\n        const hoverDate = elem\n            ? elem.dateObj.getTime()\n            : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n        let containsDisabled = false;\n        let minRange = 0, maxRange = 0;\n        for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n            if (!isEnabled(new Date(t), true)) {\n                containsDisabled =\n                    containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                if (t < initialDate && (!minRange || t > minRange))\n                    minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange))\n                    maxRange = t;\n            }\n        }\n        for (let m = 0; m < self.config.showMonths; m++) {\n            const month = self.daysContainer.children[m];\n            for (let i = 0, l = month.children.length; i < l; i++) {\n                const dayElem = month.children[i], date = dayElem.dateObj;\n                const timestamp = date.getTime();\n                const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                    (maxRange > 0 && timestamp > maxRange);\n                if (outOfRange) {\n                    dayElem.classList.add(\"notAllowed\");\n                    [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                        dayElem.classList.remove(c);\n                    });\n                    continue;\n                }\n                else if (containsDisabled && !outOfRange)\n                    continue;\n                [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                    dayElem.classList.remove(c);\n                });\n                if (elem !== undefined) {\n                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                        ? \"startRange\"\n                        : \"endRange\");\n                    if (initialDate < hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"startRange\");\n                    else if (initialDate > hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"endRange\");\n                    if (timestamp >= minRange &&\n                        (maxRange === 0 || timestamp <= maxRange) &&\n                        isBetween(timestamp, initialDate, hoverDate))\n                        dayElem.classList.add(\"inRange\");\n                }\n            }\n        }\n    }\n    function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline)\n            positionCalendar();\n    }\n    function open(e, positionElement = self._positionElement) {\n        if (self.isMobile === true) {\n            if (e) {\n                e.preventDefault();\n                const eventTarget = getEventTarget(e);\n                if (eventTarget) {\n                    eventTarget.blur();\n                }\n            }\n            if (self.mobileInput !== undefined) {\n                self.mobileInput.focus();\n                self.mobileInput.click();\n            }\n            triggerEvent(\"onOpen\");\n            return;\n        }\n        else if (self._input.disabled || self.config.inline) {\n            return;\n        }\n        const wasOpen = self.isOpen;\n        self.isOpen = true;\n        if (!wasOpen) {\n            self.calendarContainer.classList.add(\"open\");\n            self._input.classList.add(\"active\");\n            triggerEvent(\"onOpen\");\n            positionCalendar(positionElement);\n        }\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n            if (self.config.allowInput === false &&\n                (e === undefined ||\n                    !self.timeContainer.contains(e.relatedTarget))) {\n                setTimeout(() => self.hourElement.select(), 50);\n            }\n        }\n    }\n    function minMaxDateSetter(type) {\n        return (date) => {\n            const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n            const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n            if (dateObj !== undefined) {\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                    dateObj.getHours() > 0 ||\n                        dateObj.getMinutes() > 0 ||\n                        dateObj.getSeconds() > 0;\n            }\n            if (self.selectedDates) {\n                self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                if (!self.selectedDates.length && type === \"min\")\n                    setHoursFromDate(dateObj);\n                updateValue();\n            }\n            if (self.daysContainer) {\n                redraw();\n                if (dateObj !== undefined)\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\n                else\n                    self.currentYearElement.removeAttribute(type);\n                self.currentYearElement.disabled =\n                    !!inverseDateObj &&\n                        dateObj !== undefined &&\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\n            }\n        };\n    }\n    function parseConfig() {\n        const boolOpts = [\n            \"wrap\",\n            \"weekNumbers\",\n            \"allowInput\",\n            \"allowInvalidPreload\",\n            \"clickOpens\",\n            \"time_24hr\",\n            \"enableTime\",\n            \"noCalendar\",\n            \"altInput\",\n            \"shorthandCurrentMonth\",\n            \"inline\",\n            \"static\",\n            \"enableSeconds\",\n            \"disableMobile\",\n        ];\n        const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n        const formats = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n            get: () => self.config._enable,\n            set: (dates) => {\n                self.config._enable = parseDateRules(dates);\n            },\n        });\n        Object.defineProperty(self.config, \"disable\", {\n            get: () => self.config._disable,\n            set: (dates) => {\n                self.config._disable = parseDateRules(dates);\n            },\n        });\n        const timeMode = userConfig.mode === \"time\";\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n            const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaultOptions.dateFormat;\n            formats.dateFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                    : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n        if (userConfig.altInput &&\n            (userConfig.enableTime || timeMode) &&\n            !userConfig.altFormat) {\n            const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaultOptions.altFormat;\n            formats.altFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                    : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n        }\n        Object.defineProperty(self.config, \"minDate\", {\n            get: () => self.config._minDate,\n            set: minMaxDateSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n            get: () => self.config._maxDate,\n            set: minMaxDateSetter(\"max\"),\n        });\n        const minMaxTimeSetter = (type) => (val) => {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n        };\n        Object.defineProperty(self.config, \"minTime\", {\n            get: () => self.config._minTime,\n            set: minMaxTimeSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n            get: () => self.config._maxTime,\n            set: minMaxTimeSetter(\"max\"),\n        });\n        if (userConfig.mode === \"time\") {\n            self.config.noCalendar = true;\n            self.config.enableTime = true;\n        }\n        Object.assign(self.config, formats, userConfig);\n        for (let i = 0; i < boolOpts.length; i++)\n            self.config[boolOpts[i]] =\n                self.config[boolOpts[i]] === true ||\n                    self.config[boolOpts[i]] === \"true\";\n        HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n            self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile =\n            !self.config.disableMobile &&\n                !self.config.inline &&\n                self.config.mode === \"single\" &&\n                !self.config.disable.length &&\n                !self.config.enable &&\n                !self.config.weekNumbers &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        for (let i = 0; i < self.config.plugins.length; i++) {\n            const pluginConf = self.config.plugins[i](self) || {};\n            for (const key in pluginConf) {\n                if (HOOKS.indexOf(key) > -1) {\n                    self.config[key] = arrayify(pluginConf[key])\n                        .map(bindToInstance)\n                        .concat(self.config[key]);\n                }\n                else if (typeof userConfig[key] === \"undefined\")\n                    self.config[key] = pluginConf[key];\n            }\n        }\n        if (!userConfig.altInputClass) {\n            self.config.altInputClass =\n                getInputElem().className + \" \" + self.config.altInputClass;\n        }\n        triggerEvent(\"onParseConfig\");\n    }\n    function getInputElem() {\n        return self.config.wrap\n            ? element.querySelector(\"[data-input]\")\n            : element;\n    }\n    function setupLocale() {\n        if (typeof self.config.locale !== \"object\" &&\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n            self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n        self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n            ? self.config.locale\n            : self.config.locale !== \"default\"\n                ? flatpickr.l10ns[self.config.locale]\n                : undefined));\n        tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n        const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n        if (userConfig.time_24hr === undefined &&\n            flatpickr.defaultConfig.time_24hr === undefined) {\n            self.config.time_24hr = self.l10n.time_24hr;\n        }\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    }\n    function positionCalendar(customPositionElement) {\n        if (typeof self.config.position === \"function\") {\n            return void self.config.position(self, customPositionElement);\n        }\n        if (self.calendarContainer === undefined)\n            return;\n        triggerEvent(\"onPreCalendarPosition\");\n        const positionElement = customPositionElement || self._positionElement;\n        const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n            (configPosVertical !== \"below\" &&\n                distanceFromBottom < calendarHeight &&\n                inputBounds.top > calendarHeight);\n        const top = window.pageYOffset +\n            inputBounds.top +\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline)\n            return;\n        let left = window.pageXOffset + inputBounds.left;\n        let isCenter = false;\n        let isRight = false;\n        if (configPosHorizontal === \"center\") {\n            left -= (calendarWidth - inputBounds.width) / 2;\n            isCenter = true;\n        }\n        else if (configPosHorizontal === \"right\") {\n            left -= calendarWidth - inputBounds.width;\n            isRight = true;\n        }\n        toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n        toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n        toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n        const right = window.document.body.offsetWidth -\n            (window.pageXOffset + inputBounds.right);\n        const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static)\n            return;\n        self.calendarContainer.style.top = `${top}px`;\n        if (!rightMost) {\n            self.calendarContainer.style.left = `${left}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n        else if (!centerMost) {\n            self.calendarContainer.style.left = \"auto\";\n            self.calendarContainer.style.right = `${right}px`;\n        }\n        else {\n            const doc = getDocumentStyleSheet();\n            if (doc === undefined)\n                return;\n            const bodyWidth = window.document.body.offsetWidth;\n            const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n            const centerBefore = \".flatpickr-calendar.centerMost:before\";\n            const centerAfter = \".flatpickr-calendar.centerMost:after\";\n            const centerIndex = doc.cssRules.length;\n            const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n            toggleClass(self.calendarContainer, \"rightMost\", false);\n            toggleClass(self.calendarContainer, \"centerMost\", true);\n            doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n            self.calendarContainer.style.left = `${centerLeft}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n    }\n    function getDocumentStyleSheet() {\n        let editableSheet = null;\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i];\n            try {\n                sheet.cssRules;\n            }\n            catch (err) {\n                continue;\n            }\n            editableSheet = sheet;\n            break;\n        }\n        return editableSheet != null ? editableSheet : createStyleSheet();\n    }\n    function createStyleSheet() {\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        return style.sheet;\n    }\n    function redraw() {\n        if (self.config.noCalendar || self.isMobile)\n            return;\n        buildMonthSwitch();\n        updateNavigationCurrentMonth();\n        buildDays();\n    }\n    function focusAndClose() {\n        self._input.focus();\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.msMaxTouchPoints !== undefined) {\n            setTimeout(self.close, 0);\n        }\n        else {\n            self.close();\n        }\n    }\n    function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const isSelectable = (day) => day.classList &&\n            day.classList.contains(\"flatpickr-day\") &&\n            !day.classList.contains(\"flatpickr-disabled\") &&\n            !day.classList.contains(\"notAllowed\");\n        const t = findParent(getEventTarget(e), isSelectable);\n        if (t === undefined)\n            return;\n        const target = t;\n        const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n        const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n            selectedDate.getMonth() >\n                self.currentMonth + self.config.showMonths - 1) &&\n            self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\")\n            self.selectedDates = [selectedDate];\n        else if (self.config.mode === \"multiple\") {\n            const selectedIndex = isDateSelected(selectedDate);\n            if (selectedIndex)\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\n            else\n                self.selectedDates.push(selectedDate);\n        }\n        else if (self.config.mode === \"range\") {\n            if (self.selectedDates.length === 2) {\n                self.clear(false, false);\n            }\n            self.latestSelectedDateObj = selectedDate;\n            self.selectedDates.push(selectedDate);\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n        }\n        setHoursFromInputs();\n        if (shouldChangeMonth) {\n            const isNewYear = self.currentYear !== selectedDate.getFullYear();\n            self.currentYear = selectedDate.getFullYear();\n            self.currentMonth = selectedDate.getMonth();\n            if (isNewYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            triggerEvent(\"onMonthChange\");\n        }\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (!shouldChangeMonth &&\n            self.config.mode !== \"range\" &&\n            self.config.showMonths === 1)\n            focusOnDayElem(target);\n        else if (self.selectedDateElem !== undefined &&\n            self.hourElement === undefined) {\n            self.selectedDateElem && self.selectedDateElem.focus();\n        }\n        if (self.hourElement !== undefined)\n            self.hourElement !== undefined && self.hourElement.focus();\n        if (self.config.closeOnSelect) {\n            const single = self.config.mode === \"single\" && !self.config.enableTime;\n            const range = self.config.mode === \"range\" &&\n                self.selectedDates.length === 2 &&\n                !self.config.enableTime;\n            if (single || range) {\n                focusAndClose();\n            }\n        }\n        triggerChange();\n    }\n    const CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n        minDate: [jumpToDate],\n        maxDate: [jumpToDate],\n        clickOpens: [\n            () => {\n                if (self.config.clickOpens === true) {\n                    bind(self._input, \"focus\", self.open);\n                    bind(self._input, \"click\", self.open);\n                }\n                else {\n                    self._input.removeEventListener(\"focus\", self.open);\n                    self._input.removeEventListener(\"click\", self.open);\n                }\n            },\n        ],\n    };\n    function set(option, value) {\n        if (option !== null && typeof option === \"object\") {\n            Object.assign(self.config, option);\n            for (const key in option) {\n                if (CALLBACKS[key] !== undefined)\n                    CALLBACKS[key].forEach((x) => x());\n            }\n        }\n        else {\n            self.config[option] = value;\n            if (CALLBACKS[option] !== undefined)\n                CALLBACKS[option].forEach((x) => x());\n            else if (HOOKS.indexOf(option) > -1)\n                self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        updateValue(true);\n    }\n    function setSelectedDate(inputDate, format) {\n        let dates = [];\n        if (inputDate instanceof Array)\n            dates = inputDate.map((d) => self.parseDate(d, format));\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\n            dates = [self.parseDate(inputDate, format)];\n        else if (typeof inputDate === \"string\") {\n            switch (self.config.mode) {\n                case \"single\":\n                case \"time\":\n                    dates = [self.parseDate(inputDate, format)];\n                    break;\n                case \"multiple\":\n                    dates = inputDate\n                        .split(self.config.conjunction)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                case \"range\":\n                    dates = inputDate\n                        .split(self.l10n.rangeSeparator)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                default:\n                    break;\n            }\n        }\n        else\n            self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n        self.selectedDates = (self.config.allowInvalidPreload\n            ? dates\n            : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n        if (self.config.mode === \"range\")\n            self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n    }\n    function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n        if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n            return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.latestSelectedDateObj =\n            self.selectedDates[self.selectedDates.length - 1];\n        self.redraw();\n        jumpToDate(undefined, triggerChange);\n        setHoursFromDate();\n        if (self.selectedDates.length === 0) {\n            self.clear(false);\n        }\n        updateValue(triggerChange);\n        if (triggerChange)\n            triggerEvent(\"onChange\");\n    }\n    function parseDateRules(arr) {\n        return arr\n            .slice()\n            .map((rule) => {\n            if (typeof rule === \"string\" ||\n                typeof rule === \"number\" ||\n                rule instanceof Date) {\n                return self.parseDate(rule, undefined, true);\n            }\n            else if (rule &&\n                typeof rule === \"object\" &&\n                rule.from &&\n                rule.to)\n                return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined),\n                };\n            return rule;\n        })\n            .filter((x) => x);\n    }\n    function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        const preloadedDate = self.config.defaultDate ||\n            ((self.input.nodeName === \"INPUT\" ||\n                self.input.nodeName === \"TEXTAREA\") &&\n                self.input.placeholder &&\n                self.input.value === self.input.placeholder\n                ? null\n                : self.input.value);\n        if (preloadedDate)\n            setSelectedDate(preloadedDate, self.config.dateFormat);\n        self._initialDate =\n            self.selectedDates.length > 0\n                ? self.selectedDates[0]\n                : self.config.minDate &&\n                    self.config.minDate.getTime() > self.now.getTime()\n                    ? self.config.minDate\n                    : self.config.maxDate &&\n                        self.config.maxDate.getTime() < self.now.getTime()\n                        ? self.config.maxDate\n                        : self.now;\n        self.currentYear = self._initialDate.getFullYear();\n        self.currentMonth = self._initialDate.getMonth();\n        if (self.selectedDates.length > 0)\n            self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined)\n            self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined)\n            self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime =\n            !!self.config.minDate &&\n                (self.config.minDate.getHours() > 0 ||\n                    self.config.minDate.getMinutes() > 0 ||\n                    self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime =\n            !!self.config.maxDate &&\n                (self.config.maxDate.getHours() > 0 ||\n                    self.config.maxDate.getMinutes() > 0 ||\n                    self.config.maxDate.getSeconds() > 0);\n    }\n    function setupInputs() {\n        self.input = getInputElem();\n        if (!self.input) {\n            self.config.errorHandler(new Error(\"Invalid input element specified\"));\n            return;\n        }\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n        if (self.config.altInput) {\n            self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n            self._input = self.altInput;\n            self.altInput.placeholder = self.input.placeholder;\n            self.altInput.disabled = self.input.disabled;\n            self.altInput.required = self.input.required;\n            self.altInput.tabIndex = self.input.tabIndex;\n            self.altInput.type = \"text\";\n            self.input.setAttribute(\"type\", \"hidden\");\n            if (!self.config.static && self.input.parentNode)\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n        if (!self.config.allowInput)\n            self._input.setAttribute(\"readonly\", \"readonly\");\n        self._positionElement = self.config.positionElement || self._input;\n    }\n    function setupMobile() {\n        const inputType = self.config.enableTime\n            ? self.config.noCalendar\n                ? \"time\"\n                : \"datetime-local\"\n            : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr =\n            inputType === \"datetime-local\"\n                ? \"Y-m-d\\\\TH:i:S\"\n                : inputType === \"date\"\n                    ? \"Y-m-d\"\n                    : \"H:i:S\";\n        if (self.selectedDates.length > 0) {\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n        if (self.config.minDate)\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate)\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        if (self.input.getAttribute(\"step\"))\n            self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined)\n            self.altInput.type = \"hidden\";\n        try {\n            if (self.input.parentNode)\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        }\n        catch (_a) { }\n        bind(self.mobileInput, \"change\", (e) => {\n            self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n            triggerEvent(\"onChange\");\n            triggerEvent(\"onClose\");\n        });\n    }\n    function toggle(e) {\n        if (self.isOpen === true)\n            return self.close();\n        self.open(e);\n    }\n    function triggerEvent(event, data) {\n        if (self.config === undefined)\n            return;\n        const hooks = self.config[event];\n        if (hooks !== undefined && hooks.length > 0) {\n            for (let i = 0; hooks[i] && i < hooks.length; i++)\n                hooks[i](self.selectedDates, self.input.value, self, data);\n        }\n        if (event === \"onChange\") {\n            self.input.dispatchEvent(createEvent(\"change\"));\n            self.input.dispatchEvent(createEvent(\"input\"));\n        }\n    }\n    function createEvent(name) {\n        const e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n    }\n    function isDateSelected(date) {\n        for (let i = 0; i < self.selectedDates.length; i++) {\n            if (compareDates(self.selectedDates[i], date) === 0)\n                return \"\" + i;\n        }\n        return false;\n    }\n    function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n            return false;\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\n            compareDates(date, self.selectedDates[1]) <= 0);\n    }\n    function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\n            return;\n        self.yearElements.forEach((yearElement, i) => {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                self.monthElements[i].textContent =\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n            }\n            else {\n                self.monthsDropdownContainer.value = d.getMonth().toString();\n            }\n            yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow =\n            self.config.minDate !== undefined &&\n                (self.currentYear === self.config.minDate.getFullYear()\n                    ? self.currentMonth <= self.config.minDate.getMonth()\n                    : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow =\n            self.config.maxDate !== undefined &&\n                (self.currentYear === self.config.maxDate.getFullYear()\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                    : self.currentYear > self.config.maxDate.getFullYear());\n    }\n    function getDateStr(format) {\n        return self.selectedDates\n            .map((dObj) => self.formatDate(dObj, format))\n            .filter((d, i, arr) => self.config.mode !== \"range\" ||\n            self.config.enableTime ||\n            arr.indexOf(d) === i)\n            .join(self.config.mode !== \"range\"\n            ? self.config.conjunction\n            : self.l10n.rangeSeparator);\n    }\n    function updateValue(triggerChange = true) {\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n            self.mobileInput.value =\n                self.latestSelectedDateObj !== undefined\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                    : \"\";\n        }\n        self.input.value = getDateStr(self.config.dateFormat);\n        if (self.altInput !== undefined) {\n            self.altInput.value = getDateStr(self.config.altFormat);\n        }\n        if (triggerChange !== false)\n            triggerEvent(\"onValueUpdate\");\n    }\n    function onMonthNavClick(e) {\n        const eventTarget = getEventTarget(e);\n        const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n        const isNextMonth = self.nextMonthNav.contains(eventTarget);\n        if (isPrevMonth || isNextMonth) {\n            changeMonth(isPrevMonth ? -1 : 1);\n        }\n        else if (self.yearElements.indexOf(eventTarget) >= 0) {\n            eventTarget.select();\n        }\n        else if (eventTarget.classList.contains(\"arrowUp\")) {\n            self.changeYear(self.currentYear + 1);\n        }\n        else if (eventTarget.classList.contains(\"arrowDown\")) {\n            self.changeYear(self.currentYear - 1);\n        }\n    }\n    function timeWrapper(e) {\n        e.preventDefault();\n        const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            self.amPM.textContent =\n                self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n        const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n            (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n        let newValue = curValue + step * delta;\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n            const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n            if (newValue < min) {\n                newValue =\n                    max +\n                        newValue +\n                        int(!isHourElem) +\n                        (int(isHourElem) && int(!self.amPM));\n                if (isMinuteElem)\n                    incrementNumInput(undefined, -1, self.hourElement);\n            }\n            else if (newValue > max) {\n                newValue =\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                if (isMinuteElem)\n                    incrementNumInput(undefined, 1, self.hourElement);\n            }\n            if (self.amPM &&\n                isHourElem &&\n                (step === 1\n                    ? newValue + curValue === 23\n                    : Math.abs(newValue - curValue) > step)) {\n                self.amPM.textContent =\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            input.value = pad(newValue);\n        }\n    }\n    init();\n    return self;\n}\nfunction _flatpickr(nodeList, config) {\n    const nodes = Array.prototype.slice\n        .call(nodeList)\n        .filter((x) => x instanceof HTMLElement);\n    const instances = [];\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        try {\n            if (node.getAttribute(\"data-fp-omit\") !== null)\n                continue;\n            if (node._flatpickr !== undefined) {\n                node._flatpickr.destroy();\n                node._flatpickr = undefined;\n            }\n            node._flatpickr = FlatpickrInstance(node, config || {});\n            instances.push(node._flatpickr);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    return instances.length === 1 ? instances[0] : instances;\n}\nif (typeof HTMLElement !== \"undefined\" &&\n    typeof HTMLCollection !== \"undefined\" &&\n    typeof NodeList !== \"undefined\") {\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n    HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n    };\n}\nvar flatpickr = function (selector, config) {\n    if (typeof selector === \"string\") {\n        return _flatpickr(window.document.querySelectorAll(selector), config);\n    }\n    else if (selector instanceof Node) {\n        return _flatpickr([selector], config);\n    }\n    else {\n        return _flatpickr(selector, config);\n    }\n};\nflatpickr.defaultConfig = {};\nflatpickr.l10ns = {\n    en: Object.assign({}, English),\n    default: Object.assign({}, English),\n};\nflatpickr.localize = (l10n) => {\n    flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n};\nflatpickr.setDefaults = (config) => {\n    flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n};\nflatpickr.parseDate = createDateParser({});\nflatpickr.formatDate = createDateFormatter({});\nflatpickr.compareDates = compareDates;\nif (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n    jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n}\nDate.prototype.fp_incr = function (days) {\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n};\nif (typeof window !== \"undefined\") {\n    window.flatpickr = flatpickr;\n}\nexport default flatpickr;\n","import flatpickr from \"flatpickr\";\r\n\r\nflatpickr(\".form__date\", {\r\n    dateFormat: \"d-m-Y\",\r\n    disableMobile: \"true\",\r\n});\r\n\r\nflatpickr(\".form__time\", {\r\n  enableTime: true,\r\n  noCalendar: true,\r\n  dateFormat: \"H-i\",\r\n  disableMobile: \"true\",\r\n});\r\n"]}