{"version":3,"sources":["scripts.js","src/scripts/modules/Animate.js","node_modules/@splidejs/splide/dist/js/splide.esm.js","src/scripts/modules/Carousel.js","src/scripts/modules/ToggleNav.js","node_modules/simplelightbox/dist/simple-lightbox.modules.js","src/scripts/modules/Lightbox.js","node_modules/sticky-sidebar-v2/src/sticky-sidebar.js","src/scripts/modules/Sticky.js","node_modules/just-extend/index.esm.js","node_modules/dropzone/dist/dropzone.mjs","src/scripts/modules/Dropzone.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","ISMOBILE","window","matchMedia","matches","VISIBLE_CLASS","Animate","_this","this","entries","map","entry","section","delay","getDelay","sectionBodyClass","getAttribute","isIntersecting","classList","add","bodyClass","setTimeout","includes","parseInt","htmlclass","type","document","body","remove","sections","querySelectorAll","THRESHOLD","LOAD_THRESHOLD","forEach","el","BoundingClientRect","getBoundingClientRect","height","innerHeight","loadObserver","IntersectionObserver","observeCallback","threshold","observe","disconnect","observerThreshold","PROJECT_CODE","DATA_ATTRIBUTE","STATES","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","empty","array","isObject","subject","isNull","isArray","Array","isString","isUndefined","isHTMLElement","HTMLElement","toArray","values","iteratee","indexOf","push","items","arrayProto","prototype","slice","arrayLike","start","end","call","toggleClass","elm","classes","name","addClass","split","append","parent","children","appendChild","bind","before","nodes","ref","node","parentNode","insertBefore","selector","filter","child","firstElementChild","forOwn","object","right","keys","reverse","assign","arguments","source","merge","removeAttribute","attrs","attr","setAttribute","value2","String","create","tag","createElement","style","prop","getComputedStyle","style2","display","display2","hasClass","className","contains","rect","removeChild","parseHtml","html","DOMParser","parseFromString","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","removeClass","unit","assert","condition","message","Error","nextTick","callback","noop","raf","func","requestAnimationFrame","min","max","floor","ceil","abs","Math","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","x","y","sign","format","string","replacements","replacement","replace","pad","ids","EVENT_MOUNTED","EVENT_READY","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_REPOSITIONED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","event","listeners","unbind","targets","events","forEachEvent","event2","listener","removeEventListener","destroy","data","offBy","on","priority","off","emit","options","addEventListener","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","id","rate","paused","count","update","elapsed","pause","cancel","cancelAnimationFrame","resume","rewind","isPaused","Throttle","duration","apply","TTB","ORIENTATION_MAP","marginRight","autoWidth","fixedWidth","paddingLeft","paddingRight","width","left","X","Y","ArrowLeft","ArrowRight","CLASS_SLIDE","CLASS_CLONE","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","STATUS_CLASSES","CLASSES","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","ROLE","ARIA_CONTROLS","ARIA_CURRENT","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","ARIA_ORIENTATION","ALL_ATTRIBUTES","SLIDE","LOOP","FADE","Slide$1","index","slideIndex","destroyEvents","Components","root","isNavigation","updateOnMove","resolve","Direction","styles","isClone","container","focusableNodes","destroyed","onMove","dest","updateActivity","currIndex","isActive","updateVisibility","is","trackRect","Elements","track","slideRect","isVisible","active","visible","ariaHidden","slideFocus","mount","idx","label","i18n","slideX","controls","splides","splide","join","init","useContainer","isWithin","from","distance","diff","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","IE_ARROW_KEYS","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","ComponentConstructors","freeze","__proto__","Options","Components2","throttledObserve","initialOptions","points","currPoint","completely","item","predicate","item2","point","newOptions","breakpoints","state","onMatch","setup","JSON","parse","isMin","mediaQuery","sort","n","m","axisOnly","direction","orient","elements","slides","slider","list","autoplay","find","bar","play","collect","prefix","identify","getClasses","refresh","drag","DEFAULT_EVENT_PRIORITY","Slides","Slides2","register","forEach$1","Slide2","get","excludeClones","matcher","Slide1","getIn","Controller","toIndex","hasFocus","perPage","getAt","images","img","observeImages","getLength","isEnough","Layout","vertical","rootRect","cssPadding","resize","newRect","cssHeight","cssTrackHeight","gap","cssSlideSize","fixedHeight","autoHeight","padding","heightRatio","totalSize","withoutGap","Slide","getGap","parseFloat","listSize","slideSize","sliderSize","getPadding","Clones","clones","cloneCount","computeCloneCount","isHead","cloneNode","cloneDeep","generate","clones2","fixedSize","div","measure","flickMaxPages","Move","waiting","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","transform","getPosition","exceededMin","exceededLimit","exceededMax","shift","loop","backwards","excess","getLimit","size","trimming","focus","offset","trimSpace","trim","getEnd","move","set","looping","waitForTransition","Transition","go","minDistance","Infinity","isLoop","isSlide","slideCount","perMove","prevIndex","scroll","destination","useIndex","snap","toDest","setIndex","getNext","getAdjacent","getPrev","computeDestIndex","epsilon","incremental","toPage","closest","control","allowSameIndex","indicator","match","useScroll","speed","getIndex","Arrows","created","wrapper","createArrow","listen","prev2","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","Autoplay","hovered","focused","initButton","forPause","button","resetProgress","manual","autoToggle","pauseOnHover","pauseOnFocus","Cover","cover","src","toggle","scrollCallback","suppressConstraint","friction","clear","onScrolled","t","easingFunc","pow","easing","Drag","listenerOptions","passive","capture","basePosition","baseEvent","prevBaseEvent","lastEvent","isFree","dragging","clickPrevented","hasExceeded","disable","onPointerDown","noDrag","isTouch","isTouchEvent","onPointerMove","onPointerUp","save","cancelable","coordOf","constrain","expired","timeOf","exceeded","dragMinThreshold","thresholds","mouse","touch","isSliderDirection","velocity","base","diffCoord","diffTime","isFlick","computeVelocity","flickPower","computeDestination","onClick","orthogonal","touches","timeStamp","TouchEvent","isDragging","Keyboard","keyboard","onKeydown","normalizedKey","LazyLoad","isSequential","lazyLoad","preloadPages","_Slide","load","_img","error","_spinner","loadNext","onLoad","srcset","parentElement","Pagination","li","class","text","pageX","createPagination","preventScroll","curr","Sync","navigate","processed","concat","instances","index2","sync","Wheel","onWheel","deltaY","wheel","DEFAULTS","Fade","done","endCallback","transition","rewindSpeed","getSpeed","_Splide","[object Object]","handlers","namespace","eventHandlers","handler","_key","_namespace","eventNS","fragments","_event","_callback","_priority","handler1","handler2","EventBus","initialState","states","State","_options","_Extensions","defaults","Extensions","_Components","_Transition","Component","component","Splide","500","767","1024","1400","ToggleNav","toggleNav","protoProps","staticProps","commonjsGlobal","globalThis","global","self","module","simpleLightbox_modules","exports","_typeof","Symbol","iterator","constructor","_createForOfIteratorHelper","o","allowArrayLike","it","minLen","_arrayLikeToArray","toString","test","_unsupportedIterableToArray","F","s","_e","f","err","normalCompletion","didErr","step","_e2","arr","len","arr2","SimpleLightbox","sourceAttr","overlay","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","rel","docClose","swipeTolerance","widthRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","scrollZoom","scrollZoomFactor","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","relatedElements","transitionPrefix","calculateTransitionPrefix","transitionCapable","initialLocationHash","hash","getRelated","imgArr","element","createDomNodes","domNodes","closeButton","navigation","eventNamespace","isValidLink","currentTarget","isAnimating","initialImageIndex","openImage","isOpen","throttle","controlCoordinates","currentImage","loadImage","addEvents","supportsPassive","opts","dataset","opacityTarget","innerHTML","counter","caption","image","inThrottle","RegExp","documentElement","scrollbarWidth","fixedElements","fullWindowWidth","innerWidth","documentElementRect","clientWidth","isAppleDevice","scrollDiv","offsetWidth","originalPaddingRight","actualPadding","calculatedPadding","_this2","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","fadeOut","toggleScrollbar","minMax","location","substring","_this3","nextImage","Image","prevImage","loadedImages","_this4","slideDirection","newIndex","show","adjustImage","preload","_this5","tmpImage","windowWidth","windowHeight","scale","translateX","translateY","zoomPanElement","dirIsDefined","alert","updateURL","captionContainer","captionText","imageWidth","imageHeight","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","hide","setCaption","_this6","hashchangeHandler","getElementsByTagName","tagName","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","pageY","opacity","setZoomData","clientX","clientY","sqrt","isTouchDevice","possibleDir","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","newHash","newURL","href","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","clearTimeout","historyUpdateTimeout","updateHash","_this7","pos","_this8","targetURL","_this9","wrap","_step","_iterator","namespaces","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_step5","_this10","_iterator5","isFadeIn","fade","currentOpacity","_step6","_iterator6","_step7","_iterator7","_step8","_this11","_iterator8","_step10","_iterator10","_step9","_iterator9","_step11","_iterator11","initialDisplay","_step12","_iterator12","input","_step13","_iterator13","fullyNamespacedEvents","_step14","_iterator14","_step15","_iterator15","_step16","_iterator16","elem","jQuery","_default","fn","__esModule","hasOwnProperty","StickySidebar","EVENT_KEY","topSpacing","bottomSpacing","containerSelector","scrollContainer","innerWrapperSelector","stickyClass","minWidth","sidebar","extend","sidebarInner","affixedType","support","transform3d","_initialized","_reStyle","_breakpoint","dimensions","maxTranslateY","lastTopSpacing","lastBottomSpacing","sidebarHeight","sidebarWidth","containerTop","viewportHeight","viewportTop","lastViewportTop","method","initialize","_setSupportFeatures","firstChild","containers","_widthBreakpoint","calcDimensions","stickyPosition","bindEvents","eventTarget","ResizeObserver","resizeObserver","handleEvent","updateSticky","dims","offsetRelative","clientHeight","containerBottom","_calcDimensionsWithScroll","sidebarLeft","scrollTop","viewportLeft","scrollLeft","viewportBottom","furthest","colliderTop","affixType","_getAffixTypeScrollingUp","_getAffixTypeScrollingDown","round","sidebarBottom","colliderBottom","isSidebarFitsViewport","inner","outer","bottom","_getTranslate","force","getAffixType","_getStyle","affixEvent","toLowerCase","eventTrigger","affixedEvent","_running","eventType","observeScrollDir","supportTransform","z","minHeight","styleReset","resizeSensor","ResizeSensor","detach","result","property","upper","charAt","toUpperCase","eventName","CustomEvent","createEvent","initCustomEvent","results","isNaN","offsetParent","objectExtend","args","deep","isUnextendable","extenders","extender","isCloneable","val","$parcel$interopDefault","a","default","$4040acfd8584338d$export$2e2bcd8739ae039","_callbacks","callbacks","makeEvent","params","bubbles","evt","splice","$4ca367182776f80b$export$2e2bcd8739ae039","url","withCredentials","timeout","parallelUploads","uploadMultiple","chunking","forceChunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","maxFilesize","paramName","createImageThumbnails","maxThumbnailFilesize","thumbnailWidth","thumbnailHeight","thumbnailMethod","resizeWidth","resizeHeight","resizeMimeType","resizeQuality","resizeMethod","filesizeBase","maxFiles","headers","defaultHeaders","clickable","ignoreHiddenFiles","acceptedFiles","acceptedMimeTypes","autoProcessQueue","autoQueue","addRemoveLinks","previewsContainer","disablePreviews","hiddenInputContainer","renameFilename","renameFile","forceFallback","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictUploadCanceled","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","dictFileSizeUnits","tb","gb","mb","kb","b","files","xhr","chunk","dzuuid","file","upload","uuid","dzchunkindex","dztotalfilesize","dzchunksize","dztotalchunkcount","totalChunkCount","dzchunkbyteoffset","accept","chunksUploaded","binaryBody","messageElement","$3ed269f2f0fb224b$export$2e2bcd8739ae039","span","textContent","innerText","getFallbackForm","info","srcX","srcY","srcWidth","srcHeight","srcRatio","trgRatio","trgWidth","trgHeight","resizeImage","previewTemplate","previewElement","filesize","_removeLink","removeFileEvent","status","UPLOADING","confirm","removeFile","removeLink","_updateMaxFilesReachedClass","dataUrl","thumbnailElement","alt","progress","bytesSent","nodeName","Emitter","_thumbnailQueue","_processingThumbnail","accepted","getFilesWithStatus","QUEUED","ADDED","clickableElements","setupHiddenFileInput","hiddenFileInput","visibility","getElement","addFile","URL","webkitURL","updateTotalUploadProgress","getAddedFiles","getUploadingFiles","getQueuedFiles","noPropagation","dataTransfer","types","containsFiles","returnValue","dragstart","dragenter","dragover","efct","effectAllowed","dropEffect","dragleave","drop","dragend","clickableElement","click","elementInside","enable","removeAllFiles","dropzone","totalUploadProgress","totalBytesSent","totalBytes","getActiveFiles","total","existingFallback","form","getExistingFallback","fieldsString","_getParamName","fields","getFallback","fallback","elementListeners","removeEventListeners","cancelUpload","setupEventListeners","selectedSize","selectedUnit","units","getAcceptedFiles","webkitGetAsEntry","_addFilesFromItems","handleFiles","clipboardData","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","path","dirReader","createReader","errorHandler","$3ed269f2f0fb224b$var$__guardMethod__","console","methodName","log","readEntries","fullPath","isValidFile","uuidv4","filename","_renameFile","_enqueueThumbnail","_errorProcessing","enqueueFile","processQueue","_processThumbnailQueue","createThumbnail","$3ed269f2f0fb224b$var$without","cancelIfNecessary","canvas","resizedDataURL","toDataURL","$3ed269f2f0fb224b$var$ExifRestore","restore","dataURL","dataURItoBlob","fixOrientation","fileReader","FileReader","onload","createThumbnailFromUrl","readAsDataURL","mockFile","imageUrl","crossOrigin","resizeThumbnail","onDone","thumbnail","loadExif","EXIF","getData","getTag","orientation","resizeInfo","ctx","getContext","rotate","PI","$3ed269f2f0fb224b$var$drawImageIOSFix","trgX","trgY","onerror","processingLength","queuedFiles","processFiles","processFile","processing","uploadFiles","groupedFiles","_getFilesWithXhr","groupedFile","CANCELED","abort","groupedFile1","option","_transformFiles","transformedFiles","transformedFile","chunked","chunks","handleNextChunk","chunkIndex","dataBlock","webkitSlice","retries","_uploadData","finishedChunkUpload","response","allFinished","SUCCESS","responseText","responseHeaders","getAllResponseHeaders","_finished","dataBlocks","XMLHttpRequest","resolveOption","open","_finishedUploading","ontimeout","_handleUploadError","onprogress","_updateFilesUploadProgress","Accept","Cache-Control","X-Requested-With","$ewBKy$justextend","headerName","headerValue","setRequestHeader","submitRequest","formData","FormData","additionalParams","_getChunk","_addFormElementData","doneCounter","transformFile","inputName","inputType","hasAttribute","selected","checked","loaded","readyState","responseType","getResponseHeader","warn","send","ERROR","c","r","random","super","nodeType","elementOptions","optionsForElement","isBrowserSupported","getElements","initClass","$3ed269f2f0fb224b$var$camelize","forElement","discover","dropzones","checkElements","blockedBrowsers","capableBrowser","File","FileList","Blob","blacklistedBrowsers","regex","userAgent","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","asc","charCodeAt","rejectedItem","str","childNodes","els","question","rejected","mimeType","baseMimeType","validType","each","ACCEPTED","PROCESSING","sx","sy","sw","sh","dx","dy","dw","dh","vertSquashRatio","naturalWidth","ih","naturalHeight","drawImage","getImageData","ey","py","$3ed269f2f0fb224b$var$detectVerticalSquash","KEY_STR","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","encode64","exifArray","getExifArray","newImageArray","insertExif","seg","imageData","buf","separatePoint","mae","ato","rawImageArray","head","endPoint","exec","Dropzone"],"mappings":"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","file":"scripts.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  /**\r\n   * Animate\r\n   * ======================================\r\n   * - add class to element in viewport\r\n   * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n   * - set animation delay via [animate-delay] html attribute\r\n   * - set visible threshold via [animate-threshold] html attribute\r\n   */\n  var ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches;\n  var THRESHOLD = '0.75';\n  var LOAD_THRESHOLD = '0.2';\n  var ELEMENTS$1 = '.animate';\n  var VISIBLE_CLASS = 'animate--visible';\n\n  var Animate = function Animate() {\n    var _this = this;\n\n    _classCallCheck(this, Animate);\n\n    _defineProperty(this, \"observeCallback\", function (entries) {\n      entries.map(function (entry) {\n        var section = entry.target;\n\n        var delay = _this.getDelay(section);\n\n        var sectionBodyClass = section.getAttribute('animate-body-class');\n\n        if (entry.isIntersecting) {\n          if (ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n            section.classList.add(VISIBLE_CLASS);\n\n            _this.bodyClass(sectionBodyClass, 'add');\n          } else {\n            setTimeout(function () {\n              section.classList.add(VISIBLE_CLASS);\n\n              _this.bodyClass(sectionBodyClass, 'add');\n            }, delay);\n          }\n        } else {\n          _this.bodyClass(sectionBodyClass, 'remove');\n        }\n      });\n    });\n\n    _defineProperty(this, \"getDelay\", function (section) {\n      var delay = section.getAttribute('animate-delay');\n\n      if (!ISMOBILE && section.getAttribute('animate-delay-desktop')) {\n        var delay = section.getAttribute('animate-delay-desktop');\n      }\n\n      if (delay === null) {\n        return 0;\n      } else if (delay.includes('.')) {\n        return parseInt(delay * 1000);\n      } else {\n        return parseInt(delay);\n      }\n    });\n\n    _defineProperty(this, \"bodyClass\", function (htmlclass, type) {\n      if (!htmlclass) {\n        return;\n      }\n\n      if (type == 'add') {\n        document.body.classList.add(htmlclass);\n      } else {\n        document.body.classList.remove(htmlclass);\n      }\n    });\n\n    this.sections = document.querySelectorAll(ELEMENTS$1);\n    this.THRESHOLD = THRESHOLD;\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD;\n\n    if ('IntersectionObserver' in window) {\n      this.sections.forEach(function (el) {\n        var BoundingClientRect = el.getBoundingClientRect();\n        var visibleRatio = BoundingClientRect.height / window.innerHeight;\n\n        if (visibleRatio > 0.95) {\n          _this.THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 30;\n          _this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20;\n        } // observe on page load\n\n\n        var loadObserver = new IntersectionObserver(_this.observeCallback, {\n          threshold: _this.LOAD_THRESHOLD\n        });\n        loadObserver.observe(el);\n        setTimeout(function () {\n          loadObserver.disconnect();\n        }, 100); // observe\n\n        var observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : _this.THRESHOLD;\n        var observer = new IntersectionObserver(_this.observeCallback, {\n          threshold: observerThreshold\n        });\n        observer.observe(el);\n      });\n    } else {\n      this.sections.forEach(function (el) {\n        el.classList.add(VISIBLE_CLASS);\n      });\n    }\n  };\n\n  new Animate();\n\n  /*!\n   * Splide.js\n   * Version  : 3.2.5\n   * License  : MIT\n   * Copyright: 2021 Naotoshi Fujita\n   */\n  const PROJECT_CODE = \"splide\";\n  const DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\n  const CREATED = 1;\n  const MOUNTED = 2;\n  const IDLE = 3;\n  const MOVING = 4;\n  const DESTROYED = 5;\n  const STATES = {\n    CREATED,\n    MOUNTED,\n    IDLE,\n    MOVING,\n    DESTROYED\n  };\n\n  const DEFAULT_EVENT_PRIORITY = 10;\n  const DEFAULT_USER_EVENT_PRIORITY = 20;\n\n  function empty(array) {\n    array.length = 0;\n  }\n\n  function isObject(subject) {\n    return !isNull(subject) && typeof subject === \"object\";\n  }\n  function isArray(subject) {\n    return Array.isArray(subject);\n  }\n  function isFunction(subject) {\n    return typeof subject === \"function\";\n  }\n  function isString(subject) {\n    return typeof subject === \"string\";\n  }\n  function isUndefined(subject) {\n    return typeof subject === \"undefined\";\n  }\n  function isNull(subject) {\n    return subject === null;\n  }\n  function isHTMLElement(subject) {\n    return subject instanceof HTMLElement;\n  }\n\n  function toArray(value) {\n    return isArray(value) ? value : [value];\n  }\n\n  function forEach(values, iteratee) {\n    toArray(values).forEach(iteratee);\n  }\n\n  function includes(array, value) {\n    return array.indexOf(value) > -1;\n  }\n\n  function push(array, items) {\n    array.push(...toArray(items));\n    return array;\n  }\n\n  const arrayProto = Array.prototype;\n\n  function slice(arrayLike, start, end) {\n    return arrayProto.slice.call(arrayLike, start, end);\n  }\n\n  function find(arrayLike, predicate) {\n    return slice(arrayLike).filter(predicate)[0];\n  }\n\n  function toggleClass(elm, classes, add) {\n    if (elm) {\n      forEach(classes, (name) => {\n        if (name) {\n          elm.classList[add ? \"add\" : \"remove\"](name);\n        }\n      });\n    }\n  }\n\n  function addClass(elm, classes) {\n    toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n  }\n\n  function append(parent, children) {\n    forEach(children, parent.appendChild.bind(parent));\n  }\n\n  function before(nodes, ref) {\n    forEach(nodes, (node) => {\n      const parent = ref.parentNode;\n      if (parent) {\n        parent.insertBefore(node, ref);\n      }\n    });\n  }\n\n  function matches(elm, selector) {\n    return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n  }\n\n  function children(parent, selector) {\n    return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n  }\n\n  function child(parent, selector) {\n    return selector ? children(parent, selector)[0] : parent.firstElementChild;\n  }\n\n  function forOwn(object, iteratee, right) {\n    if (object) {\n      let keys = Object.keys(object);\n      keys = right ? keys.reverse() : keys;\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \"__proto__\") {\n          if (iteratee(object[key], key) === false) {\n            break;\n          }\n        }\n      }\n    }\n    return object;\n  }\n\n  function assign(object) {\n    slice(arguments, 1).forEach((source) => {\n      forOwn(source, (value, key) => {\n        object[key] = source[key];\n      });\n    });\n    return object;\n  }\n\n  function merge(object, source) {\n    forOwn(source, (value, key) => {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n    return object;\n  }\n\n  function removeAttribute(elm, attrs) {\n    if (elm) {\n      forEach(attrs, (attr) => {\n        elm.removeAttribute(attr);\n      });\n    }\n  }\n\n  function setAttribute(elm, attrs, value) {\n    if (isObject(attrs)) {\n      forOwn(attrs, (value2, name) => {\n        setAttribute(elm, name, value2);\n      });\n    } else {\n      isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    }\n  }\n\n  function create(tag, attrs, parent) {\n    const elm = document.createElement(tag);\n    if (attrs) {\n      isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n    }\n    parent && append(parent, elm);\n    return elm;\n  }\n\n  function style(elm, prop, value) {\n    if (isUndefined(value)) {\n      return getComputedStyle(elm)[prop];\n    }\n    if (!isNull(value)) {\n      const { style: style2 } = elm;\n      value = `${value}`;\n      if (style2[prop] !== value) {\n        style2[prop] = value;\n      }\n    }\n  }\n\n  function display(elm, display2) {\n    style(elm, \"display\", display2);\n  }\n\n  function focus(elm) {\n    elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n  }\n\n  function getAttribute(elm, attr) {\n    return elm.getAttribute(attr);\n  }\n\n  function hasClass(elm, className) {\n    return elm && elm.classList.contains(className);\n  }\n\n  function rect(target) {\n    return target.getBoundingClientRect();\n  }\n\n  function remove(nodes) {\n    forEach(nodes, (node) => {\n      if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n  }\n\n  function measure(parent, value) {\n    if (isString(value)) {\n      const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n      value = rect(div).width;\n      remove(div);\n    }\n    return value;\n  }\n\n  function parseHtml(html) {\n    return child(new DOMParser().parseFromString(html, \"text/html\").body);\n  }\n\n  function prevent(e, stopPropagation) {\n    e.preventDefault();\n    if (stopPropagation) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function query(parent, selector) {\n    return parent && parent.querySelector(selector);\n  }\n\n  function queryAll(parent, selector) {\n    return slice(parent.querySelectorAll(selector));\n  }\n\n  function removeClass(elm, classes) {\n    toggleClass(elm, classes, false);\n  }\n\n  function unit(value) {\n    return isString(value) ? value : value ? `${value}px` : \"\";\n  }\n\n  function assert(condition, message = \"\") {\n    if (!condition) {\n      throw new Error(`[${PROJECT_CODE}] ${message}`);\n    }\n  }\n\n  function nextTick(callback) {\n    setTimeout(callback);\n  }\n\n  const noop = () => {\n  };\n\n  function raf(func) {\n    return requestAnimationFrame(func);\n  }\n\n  const { min, max, floor, ceil, abs } = Math;\n\n  function approximatelyEqual(x, y, epsilon) {\n    return abs(x - y) < epsilon;\n  }\n\n  function between(number, minOrMax, maxOrMin, exclusive) {\n    const minimum = min(minOrMax, maxOrMin);\n    const maximum = max(minOrMax, maxOrMin);\n    return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n  }\n\n  function clamp(number, x, y) {\n    const minimum = min(x, y);\n    const maximum = max(x, y);\n    return min(max(minimum, number), maximum);\n  }\n\n  function sign(x) {\n    return +(x > 0) - +(x < 0);\n  }\n\n  function format(string, replacements) {\n    forEach(replacements, (replacement) => {\n      string = string.replace(\"%s\", `${replacement}`);\n    });\n    return string;\n  }\n\n  function pad(number) {\n    return number < 10 ? `0${number}` : `${number}`;\n  }\n\n  const ids = {};\n  function uniqueId(prefix) {\n    return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n  }\n\n  function EventBus() {\n    let handlers = {};\n    function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n      forEachEvent(events, (event, namespace) => {\n        handlers[event] = handlers[event] || [];\n        push(handlers[event], {\n          _event: event,\n          _callback: callback,\n          _namespace: namespace,\n          _priority: priority,\n          _key: key\n        }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n      });\n    }\n    function off(events, key) {\n      forEachEvent(events, (event, namespace) => {\n        const eventHandlers = handlers[event];\n        handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n          return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n        });\n      });\n    }\n    function offBy(key) {\n      forOwn(handlers, (eventHandlers, event) => {\n        off(event, key);\n      });\n    }\n    function emit(event) {\n      (handlers[event] || []).forEach((handler) => {\n        handler._callback.apply(handler, slice(arguments, 1));\n      });\n    }\n    function destroy() {\n      handlers = {};\n    }\n    function forEachEvent(events, iteratee) {\n      toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n        const fragments = eventNS.split(\".\");\n        iteratee(fragments[0], fragments[1]);\n      });\n    }\n    return {\n      on,\n      off,\n      offBy,\n      emit,\n      destroy\n    };\n  }\n\n  const EVENT_MOUNTED = \"mounted\";\n  const EVENT_READY = \"ready\";\n  const EVENT_MOVE = \"move\";\n  const EVENT_MOVED = \"moved\";\n  const EVENT_CLICK = \"click\";\n  const EVENT_ACTIVE = \"active\";\n  const EVENT_INACTIVE = \"inactive\";\n  const EVENT_VISIBLE = \"visible\";\n  const EVENT_HIDDEN = \"hidden\";\n  const EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\n  const EVENT_REFRESH = \"refresh\";\n  const EVENT_UPDATED = \"updated\";\n  const EVENT_RESIZE = \"resize\";\n  const EVENT_RESIZED = \"resized\";\n  const EVENT_REPOSITIONED = \"repositioned\";\n  const EVENT_DRAG = \"drag\";\n  const EVENT_DRAGGING = \"dragging\";\n  const EVENT_DRAGGED = \"dragged\";\n  const EVENT_SCROLL = \"scroll\";\n  const EVENT_SCROLLED = \"scrolled\";\n  const EVENT_DESTROY = \"destroy\";\n  const EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\n  const EVENT_ARROWS_UPDATED = \"arrows:updated\";\n  const EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\n  const EVENT_PAGINATION_UPDATED = \"pagination:updated\";\n  const EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\n  const EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\n  const EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\n  const EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\n  const EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\n  function EventInterface(Splide2) {\n    const { event } = Splide2;\n    const key = {};\n    let listeners = [];\n    function on(events, callback, priority) {\n      event.on(events, callback, key, priority);\n    }\n    function off(events) {\n      event.off(events, key);\n    }\n    function bind(targets, events, callback, options) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners.push([target, event2, callback, options]);\n        target.addEventListener(event2, callback, options);\n      });\n    }\n    function unbind(targets, events, callback) {\n      forEachEvent(targets, events, (target, event2) => {\n        listeners = listeners.filter((listener) => {\n          if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n            target.removeEventListener(event2, listener[2], listener[3]);\n            return false;\n          }\n          return true;\n        });\n      });\n    }\n    function forEachEvent(targets, events, iteratee) {\n      forEach(targets, (target) => {\n        if (target) {\n          events.split(\" \").forEach(iteratee.bind(null, target));\n        }\n      });\n    }\n    function destroy() {\n      listeners = listeners.filter((data) => unbind(data[0], data[1]));\n      event.offBy(key);\n    }\n    event.on(EVENT_DESTROY, destroy, key);\n    return {\n      on,\n      off,\n      emit: event.emit,\n      bind,\n      unbind,\n      destroy\n    };\n  }\n\n  function RequestInterval(interval, onInterval, onUpdate, limit) {\n    const { now } = Date;\n    let startTime;\n    let rate = 0;\n    let id;\n    let paused = true;\n    let count = 0;\n    function update() {\n      if (!paused) {\n        const elapsed = now() - startTime;\n        if (elapsed >= interval) {\n          rate = 1;\n          startTime = now();\n        } else {\n          rate = elapsed / interval;\n        }\n        if (onUpdate) {\n          onUpdate(rate);\n        }\n        if (rate === 1) {\n          onInterval();\n          if (limit && ++count >= limit) {\n            return pause();\n          }\n        }\n        raf(update);\n      }\n    }\n    function start(resume) {\n      !resume && cancel();\n      startTime = now() - (resume ? rate * interval : 0);\n      paused = false;\n      raf(update);\n    }\n    function pause() {\n      paused = true;\n    }\n    function rewind() {\n      startTime = now();\n      rate = 0;\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n    }\n    function cancel() {\n      cancelAnimationFrame(id);\n      rate = 0;\n      id = 0;\n      paused = true;\n    }\n    function isPaused() {\n      return paused;\n    }\n    return {\n      start,\n      rewind,\n      pause,\n      cancel,\n      isPaused\n    };\n  }\n\n  function State(initialState) {\n    let state = initialState;\n    function set(value) {\n      state = value;\n    }\n    function is(states) {\n      return includes(toArray(states), state);\n    }\n    return { set, is };\n  }\n\n  function Throttle(func, duration) {\n    let interval;\n    function throttled() {\n      if (!interval) {\n        interval = RequestInterval(duration || 0, () => {\n          func.apply(this, arguments);\n          interval = null;\n        }, null, 1);\n        interval.start();\n      }\n    }\n    return throttled;\n  }\n\n  function Options(Splide2, Components2, options) {\n    const throttledObserve = Throttle(observe);\n    let initialOptions;\n    let points;\n    let currPoint;\n    function setup() {\n      try {\n        merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n      } catch (e) {\n        assert(false, e.message);\n      }\n      initialOptions = merge({}, options);\n      const { breakpoints } = options;\n      if (breakpoints) {\n        const isMin = options.mediaQuery === \"min\";\n        points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n          point,\n          matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n        ]);\n        observe();\n      }\n    }\n    function mount() {\n      if (points) {\n        addEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function destroy(completely) {\n      if (completely) {\n        removeEventListener(\"resize\", throttledObserve);\n      }\n    }\n    function observe() {\n      const item = find(points, (item2) => item2[1].matches) || [];\n      if (item[0] !== currPoint) {\n        onMatch(currPoint = item[0]);\n      }\n    }\n    function onMatch(point) {\n      const newOptions = options.breakpoints[point] || initialOptions;\n      if (newOptions.destroy) {\n        Splide2.options = initialOptions;\n        Splide2.destroy(newOptions.destroy === \"completely\");\n      } else {\n        if (Splide2.state.is(DESTROYED)) {\n          destroy(true);\n          Splide2.mount();\n        }\n        Splide2.options = newOptions;\n      }\n    }\n    return {\n      setup,\n      mount,\n      destroy\n    };\n  }\n\n  const RTL = \"rtl\";\n  const TTB = \"ttb\";\n\n  const ORIENTATION_MAP = {\n    marginRight: [\"marginBottom\", \"marginLeft\"],\n    autoWidth: [\"autoHeight\"],\n    fixedWidth: [\"fixedHeight\"],\n    paddingLeft: [\"paddingTop\", \"paddingRight\"],\n    paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n    width: [\"height\"],\n    left: [\"top\", \"right\"],\n    right: [\"bottom\", \"left\"],\n    x: [\"y\"],\n    X: [\"Y\"],\n    Y: [\"X\"],\n    ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n    ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n  };\n  function Direction(Splide2, Components2, options) {\n    function resolve(prop, axisOnly) {\n      const { direction } = options;\n      const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n      return ORIENTATION_MAP[prop][index] || prop;\n    }\n    function orient(value) {\n      return value * (options.direction === RTL ? 1 : -1);\n    }\n    return {\n      resolve,\n      orient\n    };\n  }\n\n  const CLASS_ROOT = PROJECT_CODE;\n  const CLASS_SLIDER = `${PROJECT_CODE}__slider`;\n  const CLASS_TRACK = `${PROJECT_CODE}__track`;\n  const CLASS_LIST = `${PROJECT_CODE}__list`;\n  const CLASS_SLIDE = `${PROJECT_CODE}__slide`;\n  const CLASS_CLONE = `${CLASS_SLIDE}--clone`;\n  const CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\n  const CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\n  const CLASS_ARROW = `${PROJECT_CODE}__arrow`;\n  const CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\n  const CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\n  const CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\n  const CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\n  const CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\n  const CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\n  const CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\n  const CLASS_PLAY = `${PROJECT_CODE}__play`;\n  const CLASS_PAUSE = `${PROJECT_CODE}__pause`;\n  const CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\n  const CLASS_INITIALIZED = \"is-initialized\";\n  const CLASS_ACTIVE = \"is-active\";\n  const CLASS_PREV = \"is-prev\";\n  const CLASS_NEXT = \"is-next\";\n  const CLASS_VISIBLE = \"is-visible\";\n  const CLASS_LOADING = \"is-loading\";\n  const STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\n  const CLASSES = {\n    slide: CLASS_SLIDE,\n    clone: CLASS_CLONE,\n    arrows: CLASS_ARROWS,\n    arrow: CLASS_ARROW,\n    prev: CLASS_ARROW_PREV,\n    next: CLASS_ARROW_NEXT,\n    pagination: CLASS_PAGINATION,\n    page: CLASS_PAGINATION_PAGE,\n    spinner: CLASS_SPINNER\n  };\n\n  function Elements(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { root } = Splide2;\n    const elements = {};\n    const slides = [];\n    let classes;\n    let slider;\n    let track;\n    let list;\n    function setup() {\n      collect();\n      identify();\n      addClass(root, classes = getClasses());\n    }\n    function mount() {\n      on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n      on(EVENT_UPDATED, update);\n    }\n    function destroy() {\n      [root, track, list].forEach((elm) => {\n        removeAttribute(elm, \"style\");\n      });\n      empty(slides);\n      removeClass(root, classes);\n    }\n    function refresh() {\n      destroy();\n      setup();\n    }\n    function update() {\n      removeClass(root, classes);\n      addClass(root, classes = getClasses());\n    }\n    function collect() {\n      slider = child(root, `.${CLASS_SLIDER}`);\n      track = query(root, `.${CLASS_TRACK}`);\n      list = child(track, `.${CLASS_LIST}`);\n      assert(track && list, \"A track/list element is missing.\");\n      push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n      const autoplay = find(`.${CLASS_AUTOPLAY}`);\n      const arrows = find(`.${CLASS_ARROWS}`);\n      assign(elements, {\n        root,\n        slider,\n        track,\n        list,\n        slides,\n        arrows,\n        autoplay,\n        prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n        next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n        bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n        play: query(autoplay, `.${CLASS_PLAY}`),\n        pause: query(autoplay, `.${CLASS_PAUSE}`)\n      });\n    }\n    function identify() {\n      const id = root.id || uniqueId(PROJECT_CODE);\n      root.id = id;\n      track.id = track.id || `${id}-track`;\n      list.id = list.id || `${id}-list`;\n    }\n    function find(selector) {\n      return child(root, selector) || child(slider, selector);\n    }\n    function getClasses() {\n      return [\n        `${CLASS_ROOT}--${options.type}`,\n        `${CLASS_ROOT}--${options.direction}`,\n        options.drag && `${CLASS_ROOT}--draggable`,\n        options.isNavigation && `${CLASS_ROOT}--nav`,\n        CLASS_ACTIVE\n      ];\n    }\n    return assign(elements, {\n      setup,\n      mount,\n      destroy\n    });\n  }\n\n  const ROLE = \"role\";\n  const ARIA_CONTROLS = \"aria-controls\";\n  const ARIA_CURRENT = \"aria-current\";\n  const ARIA_LABEL = \"aria-label\";\n  const ARIA_HIDDEN = \"aria-hidden\";\n  const TAB_INDEX = \"tabindex\";\n  const DISABLED = \"disabled\";\n  const ARIA_ORIENTATION = \"aria-orientation\";\n  const ALL_ATTRIBUTES = [\n    ROLE,\n    ARIA_CONTROLS,\n    ARIA_CURRENT,\n    ARIA_LABEL,\n    ARIA_HIDDEN,\n    ARIA_ORIENTATION,\n    TAB_INDEX,\n    DISABLED\n  ];\n\n  const SLIDE = \"slide\";\n  const LOOP = \"loop\";\n  const FADE = \"fade\";\n\n  function Slide$1(Splide2, index, slideIndex, slide) {\n    const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n    const { Components, root, options } = Splide2;\n    const { isNavigation, updateOnMove } = options;\n    const { resolve } = Components.Direction;\n    const styles = getAttribute(slide, \"style\");\n    const isClone = slideIndex > -1;\n    const container = child(slide, `.${CLASS_CONTAINER}`);\n    const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n    let destroyed;\n    function mount() {\n      init();\n      bind(slide, \"click keydown\", (e) => {\n        emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n      });\n      on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n      if (updateOnMove) {\n        on(EVENT_MOVE, onMove.bind(this));\n      }\n    }\n    function init() {\n      if (!isClone) {\n        slide.id = `${root.id}-slide${pad(index + 1)}`;\n      }\n      if (isNavigation) {\n        const idx = isClone ? slideIndex : index;\n        const label = format(options.i18n.slideX, idx + 1);\n        const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n        setAttribute(slide, ARIA_LABEL, label);\n        setAttribute(slide, ARIA_CONTROLS, controls);\n        setAttribute(slide, ROLE, \"menuitem\");\n      }\n    }\n    function destroy() {\n      destroyed = true;\n      destroyEvents();\n      removeClass(slide, STATUS_CLASSES);\n      removeAttribute(slide, ALL_ATTRIBUTES);\n      setAttribute(slide, \"style\", styles);\n    }\n    function onMove(next, prev, dest) {\n      if (!destroyed) {\n        update.call(this);\n        if (dest === index) {\n          updateActivity.call(this, true);\n        }\n      }\n    }\n    function update() {\n      if (!destroyed) {\n        const { index: currIndex } = Splide2;\n        updateActivity.call(this, isActive());\n        updateVisibility.call(this, isVisible());\n        toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n        toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n      }\n    }\n    function updateActivity(active) {\n      if (active !== hasClass(slide, CLASS_ACTIVE)) {\n        toggleClass(slide, CLASS_ACTIVE, active);\n        if (isNavigation) {\n          setAttribute(slide, ARIA_CURRENT, active || null);\n        }\n        emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n      }\n    }\n    function updateVisibility(visible) {\n      const ariaHidden = !visible && !isActive();\n      setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n      setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n      if (focusableNodes) {\n        focusableNodes.forEach((node) => {\n          setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n        });\n      }\n      if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n        toggleClass(slide, CLASS_VISIBLE, visible);\n        emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n      }\n    }\n    function style$1(prop, value, useContainer) {\n      style(useContainer && container || slide, prop, value);\n    }\n    function isActive() {\n      return Splide2.index === index;\n    }\n    function isVisible() {\n      if (Splide2.is(FADE)) {\n        return isActive();\n      }\n      const trackRect = rect(Components.Elements.track);\n      const slideRect = rect(slide);\n      const left = resolve(\"left\");\n      const right = resolve(\"right\");\n      return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n    }\n    function isWithin(from, distance) {\n      let diff = abs(from - index);\n      if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n        diff = min(diff, Splide2.length - diff);\n      }\n      return diff <= distance;\n    }\n    return {\n      index,\n      slideIndex,\n      slide,\n      container,\n      isClone,\n      mount,\n      destroy,\n      style: style$1,\n      isWithin\n    };\n  }\n\n  function Slides(Splide2, Components2, options) {\n    const { on, emit, bind } = EventInterface(Splide2);\n    const { slides, list } = Components2.Elements;\n    const Slides2 = [];\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n      });\n    }\n    function init() {\n      slides.forEach((slide, index) => {\n        register(slide, index, -1);\n      });\n    }\n    function destroy() {\n      forEach$1((Slide2) => {\n        Slide2.destroy();\n      });\n      empty(Slides2);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function register(slide, index, slideIndex) {\n      const object = Slide$1(Splide2, index, slideIndex, slide);\n      object.mount();\n      Slides2.push(object);\n    }\n    function get(excludeClones) {\n      return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n    }\n    function getIn(page) {\n      const { Controller } = Components2;\n      const index = Controller.toIndex(page);\n      const max = Controller.hasFocus() ? 1 : options.perPage;\n      return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n    }\n    function getAt(index) {\n      return filter(index)[0];\n    }\n    function add(items, index) {\n      forEach(items, (slide) => {\n        if (isString(slide)) {\n          slide = parseHtml(slide);\n        }\n        if (isHTMLElement(slide)) {\n          const ref = slides[index];\n          ref ? before(slide, ref) : append(list, slide);\n          addClass(slide, options.classes.slide);\n          observeImages(slide, emit.bind(null, EVENT_RESIZE));\n        }\n      });\n      emit(EVENT_REFRESH);\n    }\n    function remove$1(matcher) {\n      remove(filter(matcher).map((Slide2) => Slide2.slide));\n      emit(EVENT_REFRESH);\n    }\n    function forEach$1(iteratee, excludeClones) {\n      get(excludeClones).forEach(iteratee);\n    }\n    function filter(matcher) {\n      return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n    }\n    function style(prop, value, useContainer) {\n      forEach$1((Slide2) => {\n        Slide2.style(prop, value, useContainer);\n      });\n    }\n    function observeImages(elm, callback) {\n      const images = queryAll(elm, \"img\");\n      let { length } = images;\n      if (length) {\n        images.forEach((img) => {\n          bind(img, \"load error\", () => {\n            if (!--length) {\n              callback();\n            }\n          });\n        });\n      } else {\n        callback();\n      }\n    }\n    function getLength(excludeClones) {\n      return excludeClones ? slides.length : Slides2.length;\n    }\n    function isEnough() {\n      return Slides2.length > options.perPage;\n    }\n    return {\n      mount,\n      destroy,\n      register,\n      get,\n      getIn,\n      getAt,\n      add,\n      remove: remove$1,\n      forEach: forEach$1,\n      filter,\n      style,\n      getLength,\n      isEnough\n    };\n  }\n\n  function Layout(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const { root, track, list } = Components2.Elements;\n    const { getAt } = Slides;\n    let vertical;\n    let rootRect;\n    function mount() {\n      init();\n      bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on(EVENT_RESIZE, resize);\n    }\n    function init() {\n      rootRect = null;\n      vertical = options.direction === TTB;\n      style(root, \"maxWidth\", unit(options.width));\n      style(track, resolve(\"paddingLeft\"), cssPadding(false));\n      style(track, resolve(\"paddingRight\"), cssPadding(true));\n      resize();\n    }\n    function resize() {\n      const newRect = rect(root);\n      if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n        style(track, \"height\", cssTrackHeight());\n        Slides.style(resolve(\"marginRight\"), unit(options.gap));\n        Slides.style(\"width\", cssSlideWidth() || null);\n        setSlidesHeight();\n        rootRect = newRect;\n        emit(EVENT_RESIZED);\n      }\n    }\n    function setSlidesHeight() {\n      Slides.style(\"height\", cssSlideHeight() || null, true);\n    }\n    function cssPadding(right) {\n      const { padding } = options;\n      const prop = resolve(right ? \"right\" : \"left\");\n      return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n    }\n    function cssTrackHeight() {\n      let height = \"\";\n      if (vertical) {\n        height = cssHeight();\n        assert(height, \"height or heightRatio is missing.\");\n        height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n      }\n      return height;\n    }\n    function cssHeight() {\n      return unit(options.height || rect(list).width * options.heightRatio);\n    }\n    function cssSlideWidth() {\n      return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n    }\n    function cssSlideHeight() {\n      return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n    }\n    function cssSlideSize() {\n      const gap = unit(options.gap);\n      return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n    }\n    function listSize() {\n      return rect(list)[resolve(\"width\")];\n    }\n    function slideSize(index, withoutGap) {\n      const Slide = getAt(index || 0);\n      return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n    }\n    function totalSize(index, withoutGap) {\n      const Slide = getAt(index);\n      if (Slide) {\n        const right = rect(Slide.slide)[resolve(\"right\")];\n        const left = rect(list)[resolve(\"left\")];\n        return abs(right - left) + (withoutGap ? 0 : getGap());\n      }\n      return 0;\n    }\n    function sliderSize() {\n      return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n    }\n    function getGap() {\n      const Slide = getAt(0);\n      return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n    }\n    function getPadding(right) {\n      return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n    }\n    return {\n      mount,\n      listSize,\n      slideSize,\n      sliderSize,\n      totalSize,\n      getPadding\n    };\n  }\n\n  function Clones(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Elements, Slides } = Components2;\n    const { resolve } = Components2.Direction;\n    const clones = [];\n    let cloneCount;\n    function mount() {\n      init();\n      on(EVENT_REFRESH, refresh);\n      on([EVENT_UPDATED, EVENT_RESIZE], observe);\n    }\n    function init() {\n      if (cloneCount = computeCloneCount()) {\n        generate(cloneCount);\n        emit(EVENT_RESIZE);\n      }\n    }\n    function destroy() {\n      remove(clones);\n      empty(clones);\n    }\n    function refresh() {\n      destroy();\n      init();\n    }\n    function observe() {\n      if (cloneCount < computeCloneCount()) {\n        emit(EVENT_REFRESH);\n      }\n    }\n    function generate(count) {\n      const slides = Slides.get().slice();\n      const { length } = slides;\n      if (length) {\n        while (slides.length < count) {\n          push(slides, slides);\n        }\n        push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n          const isHead = index < count;\n          const clone = cloneDeep(Slide.slide, index);\n          isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n          push(clones, clone);\n          Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n        });\n      }\n    }\n    function cloneDeep(elm, index) {\n      const clone = elm.cloneNode(true);\n      addClass(clone, options.classes.clone);\n      clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n      return clone;\n    }\n    function computeCloneCount() {\n      let { clones: clones2 } = options;\n      if (!Splide2.is(LOOP)) {\n        clones2 = 0;\n      } else if (!clones2) {\n        const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n        const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n        const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n        clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n      }\n      return clones2;\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Move(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n    const { resolve, orient } = Components2.Direction;\n    const { list, track } = Components2.Elements;\n    let waiting;\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n    }\n    function destroy() {\n      removeAttribute(list, \"style\");\n    }\n    function reposition() {\n      if (!isBusy()) {\n        Components2.Scroll.cancel();\n        jump(Splide2.index);\n        emit(EVENT_REPOSITIONED);\n      }\n    }\n    function move(dest, index, prev, callback) {\n      if (!isBusy()) {\n        const { set } = Splide2.state;\n        const position = getPosition();\n        const looping = dest !== index;\n        waiting = looping || options.waitForTransition;\n        set(MOVING);\n        emit(EVENT_MOVE, index, prev, dest);\n        Components2.Transition.start(dest, () => {\n          looping && jump(index);\n          waiting = false;\n          set(IDLE);\n          emit(EVENT_MOVED, index, prev, dest);\n          if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n            Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n          } else {\n            callback && callback();\n          }\n        });\n      }\n    }\n    function jump(index) {\n      translate(toPosition(index, true));\n    }\n    function translate(position, preventLoop) {\n      if (!Splide2.is(FADE)) {\n        list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n      }\n    }\n    function loop(position) {\n      if (!waiting && Splide2.is(LOOP)) {\n        const diff = orient(position - getPosition());\n        const exceededMin = exceededLimit(false, position) && diff < 0;\n        const exceededMax = exceededLimit(true, position) && diff > 0;\n        if (exceededMin || exceededMax) {\n          position = shift(position, exceededMax);\n        }\n      }\n      return position;\n    }\n    function shift(position, backwards) {\n      const excess = position - getLimit(backwards);\n      const size = sliderSize();\n      position -= sign(excess) * size * ceil(abs(excess) / size);\n      return position;\n    }\n    function cancel() {\n      waiting = false;\n      translate(getPosition());\n      Components2.Transition.cancel();\n    }\n    function toIndex(position) {\n      const Slides = Components2.Slides.get();\n      let index = 0;\n      let minDistance = Infinity;\n      for (let i = 0; i < Slides.length; i++) {\n        const slideIndex = Slides[i].index;\n        const distance = abs(toPosition(slideIndex, true) - position);\n        if (distance <= minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        } else {\n          break;\n        }\n      }\n      return index;\n    }\n    function toPosition(index, trimming) {\n      const position = orient(totalSize(index - 1) - offset(index));\n      return trimming ? trim(position) : position;\n    }\n    function getPosition() {\n      const left = resolve(\"left\");\n      return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n    }\n    function trim(position) {\n      if (options.trimSpace && Splide2.is(SLIDE)) {\n        position = clamp(position, 0, orient(sliderSize() - listSize()));\n      }\n      return position;\n    }\n    function offset(index) {\n      const { focus } = options;\n      return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n    }\n    function getLimit(max) {\n      return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n    }\n    function isBusy() {\n      return !!waiting;\n    }\n    function exceededLimit(max, position) {\n      position = isUndefined(position) ? getPosition() : position;\n      const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n      const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n      return exceededMin || exceededMax;\n    }\n    return {\n      mount,\n      destroy,\n      move,\n      jump,\n      translate,\n      shift,\n      cancel,\n      toIndex,\n      toPosition,\n      getPosition,\n      getLimit,\n      isBusy,\n      exceededLimit\n    };\n  }\n\n  function Controller(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit } = Move;\n    const { isEnough, getLength } = Components2.Slides;\n    const isLoop = Splide2.is(LOOP);\n    const isSlide = Splide2.is(SLIDE);\n    let currIndex = options.start || 0;\n    let prevIndex = currIndex;\n    let slideCount;\n    let perMove;\n    let perPage;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n    }\n    function init() {\n      slideCount = getLength(true);\n      perMove = options.perMove;\n      perPage = options.perPage;\n      currIndex = clamp(currIndex, 0, slideCount - 1);\n    }\n    function go(control, allowSameIndex, callback) {\n      const dest = parse(control);\n      if (options.useScroll) {\n        scroll(dest, true, true, options.speed, callback);\n      } else {\n        const index = loop(dest);\n        if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n          setIndex(index);\n          Move.move(dest, index, prevIndex, callback);\n        }\n      }\n    }\n    function scroll(destination, useIndex, snap, duration, callback) {\n      const dest = useIndex ? destination : toDest(destination);\n      Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n        setIndex(Move.toIndex(Move.getPosition()));\n        callback && callback();\n      });\n    }\n    function parse(control) {\n      let index = currIndex;\n      if (isString(control)) {\n        const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n        if (indicator === \"+\" || indicator === \"-\") {\n          index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n        } else if (indicator === \">\") {\n          index = number ? toIndex(+number) : getNext(true);\n        } else if (indicator === \"<\") {\n          index = getPrev(true);\n        }\n      } else {\n        if (isLoop) {\n          index = clamp(control, -perPage, slideCount + perPage - 1);\n        } else {\n          index = clamp(control, 0, getEnd());\n        }\n      }\n      return index;\n    }\n    function getNext(destination) {\n      return getAdjacent(false, destination);\n    }\n    function getPrev(destination) {\n      return getAdjacent(true, destination);\n    }\n    function getAdjacent(prev, destination) {\n      const number = perMove || (hasFocus() ? 1 : perPage);\n      const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n      if (dest === -1 && isSlide) {\n        if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n          return prev ? 0 : getEnd();\n        }\n      }\n      return destination ? dest : loop(dest);\n    }\n    function computeDestIndex(dest, from, incremental) {\n      if (isEnough()) {\n        const end = getEnd();\n        if (dest < 0 || dest > end) {\n          if (between(0, dest, from, true) || between(end, from, dest, true)) {\n            dest = toIndex(toPage(dest));\n          } else {\n            if (isLoop) {\n              dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n            } else if (options.rewind) {\n              dest = dest < 0 ? end : 0;\n            } else {\n              dest = -1;\n            }\n          }\n        } else {\n          if (!incremental && dest !== from) {\n            dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n          }\n        }\n      } else {\n        dest = -1;\n      }\n      return dest;\n    }\n    function getEnd() {\n      let end = slideCount - perPage;\n      if (hasFocus() || isLoop && perMove) {\n        end = slideCount - 1;\n      }\n      return max(end, 0);\n    }\n    function loop(index) {\n      if (isLoop) {\n        return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n      }\n      return index;\n    }\n    function toIndex(page) {\n      return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n    }\n    function toPage(index) {\n      if (!hasFocus()) {\n        index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n        index = floor(index / perPage);\n      }\n      return index;\n    }\n    function toDest(destination) {\n      const closest = Move.toIndex(destination);\n      return isSlide ? clamp(closest, 0, getEnd()) : closest;\n    }\n    function setIndex(index) {\n      if (index !== currIndex) {\n        prevIndex = currIndex;\n        currIndex = index;\n      }\n    }\n    function getIndex(prev) {\n      return prev ? prevIndex : currIndex;\n    }\n    function hasFocus() {\n      return !isUndefined(options.focus) || options.isNavigation;\n    }\n    return {\n      mount,\n      go,\n      scroll,\n      getNext,\n      getPrev,\n      getEnd,\n      setIndex,\n      getIndex,\n      toIndex,\n      toPage,\n      toDest,\n      hasFocus\n    };\n  }\n\n  const XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\n  const PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\n  const SIZE = 40;\n\n  function Arrows(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { classes, i18n } = options;\n    const { Elements, Controller } = Components2;\n    let wrapper = Elements.arrows;\n    let prev = Elements.prev;\n    let next = Elements.next;\n    let created;\n    const arrows = {};\n    function mount() {\n      init();\n      on(EVENT_UPDATED, init);\n    }\n    function init() {\n      if (options.arrows) {\n        if (!prev || !next) {\n          createArrows();\n        }\n      }\n      if (prev && next) {\n        if (!arrows.prev) {\n          const { id } = Elements.track;\n          setAttribute(prev, ARIA_CONTROLS, id);\n          setAttribute(next, ARIA_CONTROLS, id);\n          arrows.prev = prev;\n          arrows.next = next;\n          listen();\n          emit(EVENT_ARROWS_MOUNTED, prev, next);\n        } else {\n          display(wrapper, options.arrows === false ? \"none\" : \"\");\n        }\n      }\n    }\n    function destroy() {\n      if (created) {\n        remove(wrapper);\n      } else {\n        removeAttribute(prev, ALL_ATTRIBUTES);\n        removeAttribute(next, ALL_ATTRIBUTES);\n      }\n    }\n    function listen() {\n      const { go } = Controller;\n      on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n      bind(next, \"click\", () => {\n        go(\">\", true);\n      });\n      bind(prev, \"click\", () => {\n        go(\"<\", true);\n      });\n    }\n    function createArrows() {\n      wrapper = create(\"div\", classes.arrows);\n      prev = createArrow(true);\n      next = createArrow(false);\n      created = true;\n      append(wrapper, [prev, next]);\n      before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n    }\n    function createArrow(prev2) {\n      const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n      return parseHtml(arrow);\n    }\n    function update() {\n      const index = Splide2.index;\n      const prevIndex = Controller.getPrev();\n      const nextIndex = Controller.getNext();\n      const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n      prev.disabled = prevIndex < 0;\n      next.disabled = nextIndex < 0;\n      setAttribute(prev, ARIA_LABEL, prevLabel);\n      setAttribute(next, ARIA_LABEL, nextLabel);\n      emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n    }\n    return {\n      arrows,\n      mount,\n      destroy\n    };\n  }\n\n  function Autoplay(Splide2, Components2, options) {\n    const { on, bind, emit } = EventInterface(Splide2);\n    const { Elements } = Components2;\n    const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n    const { isPaused } = interval;\n    let hovered;\n    let focused;\n    let paused;\n    function mount() {\n      const { autoplay } = options;\n      if (autoplay) {\n        initButton(true);\n        initButton(false);\n        listen();\n        if (autoplay !== \"pause\") {\n          play();\n        }\n      }\n    }\n    function initButton(forPause) {\n      const prop = forPause ? \"pause\" : \"play\";\n      const button = Elements[prop];\n      if (button) {\n        setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n        setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n        bind(button, \"click\", forPause ? pause : play);\n      }\n    }\n    function listen() {\n      const { root } = Elements;\n      if (options.pauseOnHover) {\n        bind(root, \"mouseenter mouseleave\", (e) => {\n          hovered = e.type === \"mouseenter\";\n          autoToggle();\n        });\n      }\n      if (options.pauseOnFocus) {\n        bind(root, \"focusin focusout\", (e) => {\n          focused = e.type === \"focusin\";\n          autoToggle();\n        });\n      }\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    }\n    function play() {\n      if (isPaused() && Components2.Slides.isEnough()) {\n        interval.start(!options.resetProgress);\n        focused = hovered = paused = false;\n        emit(EVENT_AUTOPLAY_PLAY);\n      }\n    }\n    function pause(manual = true) {\n      if (!isPaused()) {\n        interval.pause();\n        emit(EVENT_AUTOPLAY_PAUSE);\n      }\n      paused = manual;\n    }\n    function autoToggle() {\n      if (!paused) {\n        if (!hovered && !focused) {\n          play();\n        } else {\n          pause(false);\n        }\n      }\n    }\n    function update(rate) {\n      const { bar } = Elements;\n      if (bar) {\n        style(bar, \"width\", `${rate * 100}%`);\n      }\n      emit(EVENT_AUTOPLAY_PLAYING, rate);\n    }\n    return {\n      mount,\n      destroy: interval.cancel,\n      play,\n      pause,\n      isPaused\n    };\n  }\n\n  function Cover(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      if (options.cover) {\n        on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n          toggle(true, img, Slide);\n        });\n        on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n      }\n    }\n    function destroy() {\n      apply(false);\n    }\n    function apply(cover) {\n      Components2.Slides.forEach((Slide) => {\n        const img = child(Slide.container || Slide.slide, \"img\");\n        if (img && img.src) {\n          toggle(cover, img, Slide);\n        }\n      });\n    }\n    function toggle(cover, img, Slide) {\n      Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n      display(img, cover ? \"none\" : \"\");\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const BOUNCE_DIFF_THRESHOLD = 10;\n  const BOUNCE_DURATION = 600;\n  const FRICTION_FACTOR = 0.6;\n  const BASE_VELOCITY = 1.5;\n  const MIN_DURATION = 800;\n\n  function Scroll(Splide2, Components2, options) {\n    const { on, emit } = EventInterface(Splide2);\n    const { Move } = Components2;\n    const { getPosition, getLimit, exceededLimit } = Move;\n    let interval;\n    let scrollCallback;\n    function mount() {\n      on(EVENT_MOVE, clear);\n      on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n    }\n    function scroll(destination, duration, callback, suppressConstraint) {\n      const start = getPosition();\n      let friction = 1;\n      duration = duration || computeDuration(abs(destination - start));\n      scrollCallback = callback;\n      clear();\n      interval = RequestInterval(duration, onScrolled, (rate) => {\n        const position = getPosition();\n        const target = start + (destination - start) * easing(rate);\n        const diff = (target - getPosition()) * friction;\n        Move.translate(position + diff);\n        if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n          friction *= FRICTION_FACTOR;\n          if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n            bounce(exceededLimit(false));\n          }\n        }\n      }, 1);\n      emit(EVENT_SCROLL);\n      interval.start();\n    }\n    function bounce(backwards) {\n      scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n    }\n    function onScrolled() {\n      const position = getPosition();\n      const index = Move.toIndex(position);\n      if (!between(index, 0, Splide2.length - 1)) {\n        Move.translate(Move.shift(position, index > 0), true);\n      }\n      scrollCallback && scrollCallback();\n      emit(EVENT_SCROLLED);\n    }\n    function computeDuration(distance) {\n      return max(distance / BASE_VELOCITY, MIN_DURATION);\n    }\n    function clear() {\n      if (interval) {\n        interval.cancel();\n      }\n    }\n    function cancel() {\n      if (interval && !interval.isPaused()) {\n        clear();\n        onScrolled();\n      }\n    }\n    function easing(t) {\n      const { easingFunc } = options;\n      return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n    }\n    return {\n      mount,\n      destroy: clear,\n      scroll,\n      cancel\n    };\n  }\n\n  const FRICTION = 5;\n  const LOG_INTERVAL = 200;\n  const POINTER_DOWN_EVENTS = \"touchstart mousedown\";\n  const POINTER_MOVE_EVENTS = \"touchmove mousemove\";\n  const POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\n  function Drag(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Move, Scroll, Controller } = Components2;\n    const { track } = Components2.Elements;\n    const { resolve, orient } = Components2.Direction;\n    const { getPosition, exceededLimit } = Move;\n    const listenerOptions = { passive: false, capture: true };\n    let basePosition;\n    let baseEvent;\n    let prevBaseEvent;\n    let lastEvent;\n    let isFree;\n    let dragging;\n    let hasExceeded = false;\n    let clickPrevented;\n    let disabled;\n    let target;\n    function mount() {\n      bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n      bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n      bind(track, \"click\", onClick, { capture: true });\n      bind(track, \"dragstart\", prevent);\n      on([EVENT_MOUNTED, EVENT_UPDATED], init);\n    }\n    function init() {\n      const { drag } = options;\n      disable(!drag);\n      isFree = drag === \"free\";\n    }\n    function onPointerDown(e) {\n      if (!disabled) {\n        const { noDrag } = options;\n        const isTouch = isTouchEvent(e);\n        const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n        if (isDraggable && (isTouch || !e.button)) {\n          if (!Move.isBusy()) {\n            target = isTouch ? track : window;\n            prevBaseEvent = null;\n            lastEvent = null;\n            clickPrevented = false;\n            bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n            bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n            Move.cancel();\n            Scroll.cancel();\n            save(e);\n          } else {\n            prevent(e, true);\n          }\n        }\n      }\n    }\n    function onPointerMove(e) {\n      if (!lastEvent) {\n        emit(EVENT_DRAG);\n      }\n      lastEvent = e;\n      if (e.cancelable) {\n        const diff = coordOf(e) - coordOf(baseEvent);\n        if (dragging) {\n          Move.translate(basePosition + constrain(diff));\n          const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n          const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n          if (expired || exceeded) {\n            save(e);\n          }\n          emit(EVENT_DRAGGING);\n          clickPrevented = true;\n          prevent(e);\n        } else {\n          let { dragMinThreshold: thresholds } = options;\n          thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n          dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n          if (isSliderDirection()) {\n            prevent(e);\n          }\n        }\n      }\n    }\n    function onPointerUp(e) {\n      unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n      unbind(target, POINTER_UP_EVENTS, onPointerUp);\n      if (lastEvent) {\n        if (dragging || e.cancelable && isSliderDirection()) {\n          const velocity = computeVelocity(e);\n          const destination = computeDestination(velocity);\n          if (isFree) {\n            Controller.scroll(destination);\n          } else if (Splide2.is(FADE)) {\n            Controller.go(Splide2.index + orient(sign(velocity)));\n          } else {\n            Controller.go(Controller.toDest(destination), true);\n          }\n          prevent(e);\n        }\n        emit(EVENT_DRAGGED);\n      }\n      dragging = false;\n    }\n    function save(e) {\n      prevBaseEvent = baseEvent;\n      baseEvent = e;\n      basePosition = getPosition();\n    }\n    function onClick(e) {\n      if (!disabled && clickPrevented) {\n        prevent(e, true);\n      }\n    }\n    function isSliderDirection() {\n      const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n      const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n      return diffX > diffY;\n    }\n    function computeVelocity(e) {\n      if (Splide2.is(LOOP) || !hasExceeded) {\n        const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n        const diffCoord = coordOf(lastEvent) - coordOf(base);\n        const diffTime = timeOf(e) - timeOf(base);\n        const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n        if (diffTime && isFlick) {\n          return diffCoord / diffTime;\n        }\n      }\n      return 0;\n    }\n    function computeDestination(velocity) {\n      return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n    }\n    function coordOf(e, orthogonal) {\n      return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n    }\n    function timeOf(e) {\n      return e.timeStamp;\n    }\n    function constrain(diff) {\n      return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n    }\n    function isTouchEvent(e) {\n      return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n    }\n    function isDragging() {\n      return dragging;\n    }\n    function disable(value) {\n      disabled = value;\n    }\n    return {\n      mount,\n      disable,\n      isDragging\n    };\n  }\n\n  const IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\n  function Keyboard(Splide2, Components2, options) {\n    const { on, bind, unbind } = EventInterface(Splide2);\n    const { root } = Components2.Elements;\n    const { resolve } = Components2.Direction;\n    let target;\n    function mount() {\n      init();\n      on(EVENT_UPDATED, () => {\n        destroy();\n        init();\n      });\n    }\n    function init() {\n      const { keyboard = \"global\" } = options;\n      if (keyboard) {\n        if (keyboard === \"focused\") {\n          target = root;\n          setAttribute(root, TAB_INDEX, 0);\n        } else {\n          target = window;\n        }\n        bind(target, \"keydown\", onKeydown);\n      }\n    }\n    function destroy() {\n      unbind(target, \"keydown\");\n      if (isHTMLElement(target)) {\n        removeAttribute(target, TAB_INDEX);\n      }\n    }\n    function onKeydown(e) {\n      const { key } = e;\n      const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n      if (normalizedKey === resolve(\"ArrowLeft\")) {\n        Splide2.go(\"<\");\n      } else if (normalizedKey === resolve(\"ArrowRight\")) {\n        Splide2.go(\">\");\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  const SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\n  const SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\n  const IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\n  function LazyLoad(Splide2, Components2, options) {\n    const { on, off, bind, emit } = EventInterface(Splide2);\n    const isSequential = options.lazyLoad === \"sequential\";\n    let images = [];\n    let index = 0;\n    function mount() {\n      if (options.lazyLoad) {\n        on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n          destroy();\n          init();\n        });\n        if (!isSequential) {\n          on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n        }\n      }\n    }\n    function init() {\n      Components2.Slides.forEach((_Slide) => {\n        queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n          const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n          const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n          if (src !== _img.src || srcset !== _img.srcset) {\n            const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n            setAttribute(_spinner, ROLE, \"presentation\");\n            images.push({ _img, _Slide, src, srcset, _spinner });\n            !_img.src && display(_img, \"none\");\n          }\n        });\n      });\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function destroy() {\n      index = 0;\n      images = [];\n    }\n    function observe() {\n      images = images.filter((data) => {\n        const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n        if (data._Slide.isWithin(Splide2.index, distance)) {\n          return load(data);\n        }\n        return true;\n      });\n      if (!images.length) {\n        off(EVENT_MOVED);\n      }\n    }\n    function load(data) {\n      const { _img } = data;\n      addClass(data._Slide.slide, CLASS_LOADING);\n      bind(_img, \"load error\", (e) => {\n        onLoad(data, e.type === \"error\");\n      });\n      [\"src\", \"srcset\"].forEach((name) => {\n        if (data[name]) {\n          setAttribute(_img, name, data[name]);\n          removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n        }\n      });\n    }\n    function onLoad(data, error) {\n      const { _Slide } = data;\n      removeClass(_Slide.slide, CLASS_LOADING);\n      if (!error) {\n        remove(data._spinner);\n        display(data._img, \"\");\n        emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n        emit(EVENT_RESIZE);\n      }\n      if (isSequential) {\n        loadNext();\n      }\n    }\n    function loadNext() {\n      if (index < images.length) {\n        load(images[index++]);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Pagination(Splide2, Components2, options) {\n    const { on, emit, bind, unbind } = EventInterface(Splide2);\n    const { Slides, Elements, Controller } = Components2;\n    const { hasFocus, getIndex } = Controller;\n    const items = [];\n    let list;\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on([EVENT_MOVE, EVENT_SCROLLED], update);\n    }\n    function init() {\n      destroy();\n      if (options.pagination && Slides.isEnough()) {\n        createPagination();\n        emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n        update();\n      }\n    }\n    function destroy() {\n      if (list) {\n        remove(list);\n        items.forEach((item) => {\n          unbind(item.button, \"click\");\n        });\n        empty(items);\n        list = null;\n      }\n    }\n    function createPagination() {\n      const { length } = Splide2;\n      const { classes, i18n, perPage } = options;\n      const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n      const max = hasFocus() ? length : ceil(length / perPage);\n      list = create(\"ul\", classes.pagination, parent);\n      for (let i = 0; i < max; i++) {\n        const li = create(\"li\", null, list);\n        const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n        const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n        const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n        bind(button, \"click\", onClick.bind(null, i));\n        setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n        setAttribute(button, ARIA_LABEL, format(text, i + 1));\n        items.push({ li, button, page: i });\n      }\n    }\n    function onClick(page) {\n      Controller.go(`>${page}`, true, () => {\n        const Slide = Slides.getAt(Controller.toIndex(page));\n        Slide && focus(Slide.slide);\n      });\n    }\n    function getAt(index) {\n      return items[Controller.toPage(index)];\n    }\n    function update() {\n      const prev = getAt(getIndex(true));\n      const curr = getAt(getIndex());\n      if (prev) {\n        removeClass(prev.button, CLASS_ACTIVE);\n        removeAttribute(prev.button, ARIA_CURRENT);\n      }\n      if (curr) {\n        addClass(curr.button, CLASS_ACTIVE);\n        setAttribute(curr.button, ARIA_CURRENT, true);\n      }\n      emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n    }\n    return {\n      items,\n      mount,\n      destroy,\n      getAt\n    };\n  }\n\n  const TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\n  function Sync(Splide2, Components2, options) {\n    const { splides } = Splide2;\n    const { list } = Components2.Elements;\n    function mount() {\n      if (options.isNavigation) {\n        navigate();\n      } else {\n        sync();\n      }\n    }\n    function destroy() {\n      removeAttribute(list, ALL_ATTRIBUTES);\n    }\n    function sync() {\n      const processed = [];\n      splides.concat(Splide2).forEach((splide, index, instances) => {\n        EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n          instances.forEach((instance) => {\n            if (instance !== splide && !includes(processed, splide)) {\n              processed.push(instance);\n              instance.go(instance.is(LOOP) ? dest : index2);\n            }\n          });\n          empty(processed);\n        });\n      });\n    }\n    function navigate() {\n      const { on, emit } = EventInterface(Splide2);\n      on(EVENT_CLICK, onClick);\n      on(EVENT_SLIDE_KEYDOWN, onKeydown);\n      on([EVENT_MOUNTED, EVENT_UPDATED], update);\n      setAttribute(list, ROLE, \"menu\");\n      emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n    }\n    function update() {\n      setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n    }\n    function onClick(Slide) {\n      Splide2.go(Slide.index);\n    }\n    function onKeydown(Slide, e) {\n      if (includes(TRIGGER_KEYS, e.key)) {\n        onClick(Slide);\n        prevent(e);\n      }\n    }\n    return {\n      mount,\n      destroy\n    };\n  }\n\n  function Wheel(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    function mount() {\n      if (options.wheel) {\n        bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n      }\n    }\n    function onWheel(e) {\n      const { deltaY } = e;\n      if (deltaY) {\n        Splide2.go(deltaY < 0 ? \"<\" : \">\");\n        prevent(e);\n      }\n    }\n    return {\n      mount\n    };\n  }\n\n  var ComponentConstructors = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Options: Options,\n    Direction: Direction,\n    Elements: Elements,\n    Slides: Slides,\n    Layout: Layout,\n    Clones: Clones,\n    Move: Move,\n    Controller: Controller,\n    Arrows: Arrows,\n    Autoplay: Autoplay,\n    Cover: Cover,\n    Scroll: Scroll,\n    Drag: Drag,\n    Keyboard: Keyboard,\n    LazyLoad: LazyLoad,\n    Pagination: Pagination,\n    Sync: Sync,\n    Wheel: Wheel\n  });\n\n  const I18N = {\n    prev: \"Previous slide\",\n    next: \"Next slide\",\n    first: \"Go to first slide\",\n    last: \"Go to last slide\",\n    slideX: \"Go to slide %s\",\n    pageX: \"Go to page %s\",\n    play: \"Start autoplay\",\n    pause: \"Pause autoplay\"\n  };\n\n  const DEFAULTS = {\n    type: \"slide\",\n    speed: 400,\n    waitForTransition: true,\n    perPage: 1,\n    arrows: true,\n    pagination: true,\n    interval: 5e3,\n    pauseOnHover: true,\n    pauseOnFocus: true,\n    resetProgress: true,\n    easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n    drag: true,\n    direction: \"ltr\",\n    slideFocus: true,\n    trimSpace: true,\n    focusableNodes: \"a, button, textarea, input, select, iframe\",\n    classes: CLASSES,\n    i18n: I18N\n  };\n\n  function Fade(Splide2, Components2, options) {\n    const { on } = EventInterface(Splide2);\n    function mount() {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        nextTick(() => {\n          Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n        });\n      });\n    }\n    function start(index, done) {\n      const { track } = Components2.Elements;\n      style(track, \"height\", unit(rect(track).height));\n      nextTick(() => {\n        done();\n        style(track, \"height\", \"\");\n      });\n    }\n    return {\n      mount,\n      start,\n      cancel: noop\n    };\n  }\n\n  function Slide(Splide2, Components2, options) {\n    const { bind } = EventInterface(Splide2);\n    const { Move, Controller } = Components2;\n    const { list } = Components2.Elements;\n    let endCallback;\n    function mount() {\n      bind(list, \"transitionend\", (e) => {\n        if (e.target === list && endCallback) {\n          cancel();\n          endCallback();\n        }\n      });\n    }\n    function start(index, done) {\n      const destination = Move.toPosition(index, true);\n      const position = Move.getPosition();\n      const speed = getSpeed(index);\n      if (abs(destination - position) >= 1 && speed >= 1) {\n        apply(`transform ${speed}ms ${options.easing}`);\n        Move.translate(destination, true);\n        endCallback = done;\n      } else {\n        Move.jump(index);\n        done();\n      }\n    }\n    function cancel() {\n      apply(\"\");\n    }\n    function getSpeed(index) {\n      const { rewindSpeed } = options;\n      if (Splide2.is(SLIDE) && rewindSpeed) {\n        const prev = Controller.getIndex(true);\n        const end = Controller.getEnd();\n        if (prev === 0 && index >= end || prev >= end && index === 0) {\n          return rewindSpeed;\n        }\n      }\n      return options.speed;\n    }\n    function apply(transition) {\n      style(list, \"transition\", transition);\n    }\n    return {\n      mount,\n      start,\n      cancel\n    };\n  }\n\n  const _Splide = class {\n    constructor(target, options) {\n      this.event = EventBus();\n      this.Components = {};\n      this.state = State(CREATED);\n      this.splides = [];\n      this._options = {};\n      this._Extensions = {};\n      const root = isString(target) ? query(document, target) : target;\n      assert(root, `${root} is invalid.`);\n      this.root = root;\n      merge(DEFAULTS, _Splide.defaults);\n      merge(merge(this._options, DEFAULTS), options || {});\n    }\n    mount(Extensions, Transition) {\n      const { state, Components: Components2 } = this;\n      assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n      state.set(CREATED);\n      this._Components = Components2;\n      this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n      this._Extensions = Extensions || this._Extensions;\n      const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n      forOwn(Constructors, (Component, key) => {\n        const component = Component(this, Components2, this._options);\n        Components2[key] = component;\n        component.setup && component.setup();\n      });\n      forOwn(Components2, (component) => {\n        component.mount && component.mount();\n      });\n      this.emit(EVENT_MOUNTED);\n      addClass(this.root, CLASS_INITIALIZED);\n      state.set(IDLE);\n      this.emit(EVENT_READY);\n      return this;\n    }\n    sync(splide) {\n      this.splides.push(splide);\n      splide.splides.push(this);\n      return this;\n    }\n    go(control) {\n      this._Components.Controller.go(control);\n      return this;\n    }\n    on(events, callback) {\n      this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n      return this;\n    }\n    off(events) {\n      this.event.off(events);\n      return this;\n    }\n    emit(event) {\n      this.event.emit(event, ...slice(arguments, 1));\n      return this;\n    }\n    add(slides, index) {\n      this._Components.Slides.add(slides, index);\n      return this;\n    }\n    remove(matcher) {\n      this._Components.Slides.remove(matcher);\n      return this;\n    }\n    is(type) {\n      return this._options.type === type;\n    }\n    refresh() {\n      this.emit(EVENT_REFRESH);\n      return this;\n    }\n    destroy(completely = true) {\n      const { event, state } = this;\n      if (state.is(CREATED)) {\n        event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n      } else {\n        forOwn(this._Components, (component) => {\n          component.destroy && component.destroy(completely);\n        }, true);\n        event.emit(EVENT_DESTROY);\n        event.destroy();\n        completely && empty(this.splides);\n        state.set(DESTROYED);\n      }\n      return this;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      const { _options } = this;\n      merge(_options, options);\n      if (!this.state.is(CREATED)) {\n        this.emit(EVENT_UPDATED, _options);\n      }\n    }\n    get length() {\n      return this._Components.Slides.getLength(true);\n    }\n    get index() {\n      return this._Components.Controller.getIndex();\n    }\n  };\n  let Splide = _Splide;\n  Splide.defaults = {};\n  Splide.STATES = STATES;\n\n  if (document.querySelector('#carousel')) {\n    new Splide('#carousel', {\n      pagination: false,\n      type: 'slide',\n      perPage: 4,\n      perMove: 1,\n      gap: 32,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10\n        },\n        767: {\n          perPage: 2,\n          gap: 10\n        },\n        1024: {\n          perPage: 2,\n          gap: 16\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  if (document.querySelector('#testimonials')) {\n    new Splide('#testimonials', {\n      pagination: false,\n      type: 'slide',\n      perPage: 3,\n      perMove: 1,\n      gap: 28,\n      breakpoints: {\n        500: {\n          perPage: 1,\n          gap: 10\n        },\n        767: {\n          perPage: 2,\n          gap: 10\n        },\n        1024: {\n          perPage: 2,\n          gap: 16\n        },\n        1400: {\n          perPage: 3,\n          gap: 32\n        }\n      }\n    }).mount();\n  }\n\n  /**\r\n   * Toggle Nav\r\n   * ======================================\r\n   * - toggle class on body\r\n   */\n  var ELEMENTS = '.togglenav__button';\n  var TOGGLE_CLASS = 'nav-is-open';\n\n  var ToggleNav = /*#__PURE__*/function () {\n    function ToggleNav() {\n      var _this = this;\n\n      _classCallCheck(this, ToggleNav);\n\n      this.elements = document.querySelectorAll(ELEMENTS);\n\n      if (!this.elements) {\n        return false;\n      }\n\n      this.elements.forEach(function (el) {\n        el.addEventListener('click', _this.toggleNav, false);\n      });\n    }\n\n    _createClass(ToggleNav, [{\n      key: \"toggleNav\",\n      value: function toggleNav(e) {\n        document.body.classList.toggle(TOGGLE_CLASS);\n        document.body.classList.toggle('lock');\n        e.preventDefault();\n      }\n    }]);\n\n    return ToggleNav;\n  }();\n\n  new ToggleNav();\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var simpleLightbox_modules = createCommonjsModule(function (module, exports) {\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports[\"default\"] = void 0;\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var SimpleLightbox = /*#__PURE__*/function () {\n    function SimpleLightbox(elements, options) {\n      var _this = this;\n\n      _classCallCheck(this, SimpleLightbox);\n\n      _defineProperty(this, \"defaultOptions\", {\n        sourceAttr: 'href',\n        overlay: true,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n      });\n\n      _defineProperty(this, \"transitionPrefix\", void 0);\n\n      _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n      _defineProperty(this, \"transitionCapable\", false);\n\n      _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n      _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n      _defineProperty(this, \"initialLocationHash\", void 0);\n\n      _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n      _defineProperty(this, \"isOpen\", false);\n\n      _defineProperty(this, \"isAnimating\", false);\n\n      _defineProperty(this, \"isClosing\", false);\n\n      _defineProperty(this, \"isFadeIn\", false);\n\n      _defineProperty(this, \"urlChangedOnce\", false);\n\n      _defineProperty(this, \"hashReseted\", false);\n\n      _defineProperty(this, \"historyHasChanges\", false);\n\n      _defineProperty(this, \"historyUpdateTimeout\", null);\n\n      _defineProperty(this, \"currentImage\", void 0);\n\n      _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n      _defineProperty(this, \"domNodes\", {});\n\n      _defineProperty(this, \"loadedImages\", []);\n\n      _defineProperty(this, \"initialImageIndex\", 0);\n\n      _defineProperty(this, \"currentImageIndex\", 0);\n\n      _defineProperty(this, \"initialSelector\", null);\n\n      _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n      _defineProperty(this, \"controlCoordinates\", {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n      });\n\n      this.options = Object.assign(this.defaultOptions, options);\n      this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n      if (typeof elements === 'string') {\n        this.initialSelector = elements;\n        this.elements = Array.from(document.querySelectorAll(elements));\n      } else {\n        this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n      }\n\n      this.relatedElements = [];\n      this.transitionPrefix = this.calculateTransitionPrefix();\n      this.transitionCapable = this.transitionPrefix !== false;\n      this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n      if (this.options.rel) {\n        this.elements = this.getRelated(this.options.rel);\n      }\n\n      if (this.options.uniqueImages) {\n        var imgArr = [];\n        this.elements = Array.from(this.elements).filter(function (element) {\n          var src = element.getAttribute(_this.options.sourceAttr);\n\n          if (imgArr.indexOf(src) === -1) {\n            imgArr.push(src);\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      this.createDomNodes();\n\n      if (this.options.close) {\n        this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n      }\n\n      if (this.options.nav) {\n        this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n      }\n\n      if (this.options.spinner) {\n        this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n      }\n\n      this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n        if (_this.isValidLink(event.currentTarget)) {\n          event.preventDefault();\n\n          if (_this.isAnimating) {\n            return false;\n          }\n\n          _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n          _this.openImage(event.currentTarget);\n        }\n      }); // close addEventListener click addEventListener doc\n\n      if (this.options.docClose) {\n        this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n          if (_this.isOpen && event.target === event.currentTarget) {\n            _this.close();\n          }\n        });\n      } // disable rightclick\n\n\n      if (this.options.disableRightClick) {\n        this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n          if (event.target.parentElement.classList.contains(\"sl-image\")) {\n            event.preventDefault();\n          }\n        });\n      } // keyboard-control\n\n\n      if (this.options.enableKeyboard) {\n        this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n          _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n          if (_this.isAnimating && event.key === 'Escape') {\n            _this.currentImage.setAttribute('src', '');\n\n            _this.isAnimating = false;\n            return _this.close();\n          }\n\n          if (_this.isOpen) {\n            event.preventDefault();\n\n            if (event.key === 'Escape') {\n              _this.close();\n            }\n\n            if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n              _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n            }\n          }\n        }, this.options.throttleInterval));\n      }\n\n      this.addEvents();\n    }\n\n    _createClass(SimpleLightbox, [{\n      key: \"checkPassiveEventsSupport\",\n      value: function checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          window.addEventListener(\"testPassive\", null, opts);\n          window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n\n        return supportsPassive;\n      }\n    }, {\n      key: \"createDomNodes\",\n      value: function createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = \".7\";\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n        if (this.options.captionClass) {\n          this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex', -1);\n        this.domNodes.wrapper.setAttribute('role', 'dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n        if (this.options.className) {\n          this.domNodes.wrapper.classList.add(this.options.className);\n        }\n\n        if (this.options.rtl) {\n          this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n      }\n    }, {\n      key: \"throttle\",\n      value: function throttle(func, limit) {\n        var inThrottle;\n        return function () {\n          if (!inThrottle) {\n            func.apply(this, arguments);\n            inThrottle = true;\n            setTimeout(function () {\n              return inThrottle = false;\n            }, limit);\n          }\n        };\n      }\n    }, {\n      key: \"isValidLink\",\n      value: function isValidLink(element) {\n        return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"calculateTransitionPrefix\",\n      value: function calculateTransitionPrefix() {\n        var s = (document.body || document.documentElement).style;\n        return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n      }\n    }, {\n      key: \"toggleScrollbar\",\n      value: function toggleScrollbar(type) {\n        var scrollbarWidth = 0;\n        var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n        if (type === 'hide') {\n          var fullWindowWidth = window.innerWidth;\n\n          if (!fullWindowWidth) {\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n\n          if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n            var scrollDiv = document.createElement('div'),\n                paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n            scrollDiv.classList.add('sl-scrollbar-measure');\n            document.body.appendChild(scrollDiv);\n            scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            document.body.dataset.originalPaddingRight = paddingRight;\n\n            if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n              document.body.classList.add('hidden-scroll');\n              document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n              fixedElements.forEach(function (element) {\n                var actualPadding = element.style.paddingRight;\n                var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n                element.dataset.originalPaddingRight = actualPadding;\n                element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n              });\n            }\n          }\n        } else {\n          document.body.classList.remove('hidden-scroll');\n          document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n          fixedElements.forEach(function (element) {\n            var padding = element.dataset.originalPaddingRight;\n\n            if (typeof padding !== 'undefined') {\n              element.style.paddingRight = padding;\n            }\n          });\n        }\n\n        return scrollbarWidth;\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        var _this2 = this;\n\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n          return false;\n        }\n\n        this.isClosing = true;\n        var element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n          this.historyHasChanges = false;\n\n          if (!this.hashReseted) {\n            this.resetHash();\n          }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n          if (_this2.options.disableScroll) {\n            _this2.toggleScrollbar('show');\n          }\n\n          if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n            document.querySelector('html').classList.remove(_this2.options.htmlClass);\n          }\n\n          document.body.removeChild(_this2.domNodes.wrapper);\n          document.body.removeChild(_this2.domNodes.overlay);\n          _this2.domNodes.additionalHtml = null;\n          element.dispatchEvent(new Event('closed.simplelightbox'));\n          _this2.isClosing = false;\n        });\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false; // reset touchcontrol coordinates\n\n        for (var key in this.controlCoordinates) {\n          this.controlCoordinates[key] = 0;\n        }\n\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        return window.location.hash.substring(1);\n      }\n    }, {\n      key: \"preload\",\n      value: function preload() {\n        var _this3 = this;\n\n        var index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n            prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n        nextImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            //is this condition even required... setting multiple times will not change usage...\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n        prevImage.addEventListener('load', function (event) {\n          var src = event.target.getAttribute('src');\n\n          if (_this3.loadedImages.indexOf(src) === -1) {\n            _this3.loadedImages.push(src);\n          }\n\n          _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n      }\n    }, {\n      key: \"loadImage\",\n      value: function loadImage(direction) {\n        var _this4 = this;\n\n        var slideDirection = direction;\n\n        if (this.options.rtl) {\n          direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n        var newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n          return false;\n        }\n\n        this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n        if (this.options.animationSlide) {\n          this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n        }\n\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n          _this4.isAnimating = true;\n\n          if (!_this4.isClosing) {\n            setTimeout(function () {\n              var element = _this4.relatedElements[_this4.currentImageIndex];\n\n              _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n              if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n                _this4.show(_this4.domNodes.spinner);\n              }\n\n              if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n                _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n              }\n\n              _this4.adjustImage(slideDirection);\n\n              if (_this4.options.preloading) _this4.preload();\n            }, 100);\n          } else {\n            _this4.isAnimating = false;\n          }\n        });\n      }\n    }, {\n      key: \"adjustImage\",\n      value: function adjustImage(direction) {\n        var _this5 = this;\n\n        if (!this.currentImage) {\n          return false;\n        }\n\n        var tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n        tmpImage.addEventListener('error', function (event) {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n          _this5.isAnimating = false;\n          _this5.isOpen = true;\n          _this5.domNodes.spinner.style.display = 'none';\n          var dirIsDefined = direction === 1 || direction === -1;\n\n          if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n            return _this5.close();\n          }\n\n          if (_this5.options.alertError) {\n            alert(_this5.options.alertErrorMessage);\n          }\n\n          _this5.loadImage(dirIsDefined ? direction : 1);\n        });\n        tmpImage.addEventListener('load', function (event) {\n          if (typeof direction !== 'undefined') {\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n            _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n          } // history\n\n\n          if (_this5.options.history) {\n            _this5.updateURL();\n          }\n\n          if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n            _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n          }\n\n          var imageWidth = event.target.width,\n              imageHeight = event.target.height;\n\n          if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n            var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n            imageWidth /= ratio;\n            imageHeight /= ratio;\n          }\n\n          _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n          _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n          _this5.domNodes.image.style.width = imageWidth + 'px';\n          _this5.domNodes.image.style.height = imageHeight + 'px';\n          _this5.domNodes.spinner.style.display = 'none';\n\n          if (_this5.options.focus) {\n            _this5.forceFocus();\n          }\n\n          _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n            if (_this5.options.focus) {\n              _this5.domNodes.wrapper.focus();\n            }\n          });\n\n          _this5.isOpen = true;\n          var captionContainer, captionText;\n\n          if (typeof _this5.options.captionSelector === 'string') {\n            captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n          } else if (typeof _this5.options.captionSelector === 'function') {\n            captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n          }\n\n          if (_this5.options.captions && captionContainer) {\n            if (_this5.options.captionType === 'data') {\n              captionText = captionContainer.dataset[_this5.options.captionsData];\n            } else if (_this5.options.captionType === 'text') {\n              captionText = captionContainer.innerHTML;\n            } else {\n              captionText = captionContainer.getAttribute(_this5.options.captionsData);\n            }\n          }\n\n          if (!_this5.options.loop) {\n            if (_this5.currentImageIndex === 0) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n\n            if (_this5.currentImageIndex > 0) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n            }\n\n            if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n              _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n            }\n          } else {\n            if (_this5.relatedElements.length === 1) {\n              _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            } else {\n              _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n            }\n          }\n\n          if (direction === 1 || direction === -1) {\n            if (_this5.options.animationSlide) {\n              _this5.slide(0, 100 * direction + 'px');\n\n              setTimeout(function () {\n                _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n              }, 50);\n            }\n\n            _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n              _this5.isAnimating = false;\n\n              _this5.setCaption(captionText, imageWidth);\n            });\n          } else {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          }\n\n          if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n            _this5.domNodes.additionalHtml = document.createElement('div');\n\n            _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n            _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n            _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n          }\n        });\n      }\n    }, {\n      key: \"zoomPanElement\",\n      value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n      }\n    }, {\n      key: \"minMax\",\n      value: function minMax(value, min, max) {\n        return value < min ? min : value > max ? max : value;\n      }\n    }, {\n      key: \"setZoomData\",\n      value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n      }\n    }, {\n      key: \"hashchangeHandler\",\n      value: function hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n          this.hashReseted = true;\n          this.close();\n        }\n      }\n    }, {\n      key: \"addEvents\",\n      value: function addEvents() {\n        var _this6 = this;\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n          //this.adjustImage.bind(this)\n          if (_this6.isOpen) {\n            _this6.adjustImage();\n          }\n        });\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n          setTimeout(function () {\n            _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n              if (_this6.isOpen) {\n                _this6.hashchangeHandler();\n              }\n            });\n          }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n          if (!event.currentTarget.tagName.match(/button/i)) {\n            return true;\n          }\n\n          event.preventDefault();\n          _this6.controlCoordinates.swipeDiff = 0;\n\n          _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n          var scale = 1;\n          this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n            if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n              return true;\n            }\n\n            if (_this6.controlCoordinates.containerHeight == 0) {\n              _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n              _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n              _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n              _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n              _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n              _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            }\n\n            event.preventDefault();\n            var delta = event.delta || event.wheelDelta;\n\n            if (delta === undefined) {\n              //we are on firefox\n              delta = event.detail;\n            }\n\n            delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n            // apply zoom\n\n            scale += delta * _this6.options.scrollZoomFactor * scale;\n            scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n            _this6.controlCoordinates.targetScale = scale;\n            _this6.controlCoordinates.pinchOffsetX = event.pageX;\n            _this6.controlCoordinates.pinchOffsetY = event.pageY;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n            if (_this6.controlCoordinates.targetScale > 1) {\n              _this6.controlCoordinates.zoomed = true;\n\n              if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            } else {\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n            _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n            _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n          if (event.target.tagName === 'A' && event.type === 'touchstart') {\n            return true;\n          }\n\n          if (event.type === 'mousedown') {\n            event.preventDefault();\n            _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            _this6.controlCoordinates.capture = true;\n          } else {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n            if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                if (!_this6.controlCoordinates.doubleTapped) {\n                  _this6.controlCoordinates.doubleTapped = true;\n                  setTimeout(function () {\n                    _this6.controlCoordinates.doubleTapped = false;\n                  }, 300);\n                } else {\n                  _this6.currentImage.classList.add('sl-transition');\n\n                  if (!_this6.controlCoordinates.zoomed) {\n                    _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n\n                    _this6.controlCoordinates.zoomed = true;\n                  } else {\n                    _this6.controlCoordinates.initialScale = 1;\n\n                    _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                    _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                    _this6.controlCoordinates.zoomed = false;\n                  }\n\n                  setTimeout(function () {\n                    if (_this6.currentImage) {\n                      _this6.currentImage.classList.remove('sl-transition');\n                    }\n                  }, 200);\n                  return false;\n                }\n\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              } else if (_this6.controlCoordinates.touchCount === 2)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n                _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n                _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n                _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n                _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n              }\n\n            _this6.controlCoordinates.capture = true;\n          }\n\n          if (_this6.controlCoordinates.mousedown) return true;\n\n          if (_this6.transitionCapable) {\n            _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n          }\n\n          _this6.controlCoordinates.mousedown = true;\n          _this6.controlCoordinates.swipeDiff = 0;\n          _this6.controlCoordinates.swipeYDiff = 0;\n          _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n          return false;\n        });\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n          if (!_this6.controlCoordinates.mousedown) {\n            return true;\n          }\n\n          if (event.type === 'touchmove') {\n            if (_this6.controlCoordinates.capture === false) {\n              return false;\n            }\n\n            _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n            _this6.controlCoordinates.touchCount = event.touches.length;\n            _this6.controlCoordinates.touchmoveCount++;\n\n            if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n                if (_this6.controlCoordinates.initialPinchDistance === null) {\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                }\n\n                if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                  /* Initialize helpers */\n                  _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                  _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                  _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                  _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                  _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                  _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                  _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                  if (_this6.controlCoordinates.targetScale > 1) {\n                    _this6.controlCoordinates.zoomed = true;\n\n                    if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                      _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                    }\n                  }\n\n                  _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                  _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                  _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                  _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                }\n              } else {\n              _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n              _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n              _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n              _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n              _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n                _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n              }\n\n              _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n              _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n            }\n          }\n          /* Mouse Move implementation */\n\n\n          if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n            if (event.type == 'touchmove') return true;\n            event.preventDefault();\n            if (_this6.controlCoordinates.capture === false) return false;\n            _this6.controlCoordinates.pointerOffsetX = event.clientX;\n            _this6.controlCoordinates.pointerOffsetY = event.clientY;\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n            _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n            _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n            _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n            if (_this6.options.animationSlide) {\n              _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n          if (_this6.isTouchDevice && event.type === 'touchend') {\n            _this6.controlCoordinates.touchCount = event.touches.length;\n\n            if (_this6.controlCoordinates.touchCount === 0)\n              /* No touch */\n              {\n                /* Set attributes */\n                if (_this6.currentImage) {\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n                }\n\n                if (_this6.controlCoordinates.initialScale === 1) {\n                  _this6.controlCoordinates.zoomed = false;\n\n                  if (_this6.domNodes.caption.style.display === 'none') {\n                    _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = null;\n                _this6.controlCoordinates.capture = false;\n              } else if (_this6.controlCoordinates.touchCount === 1)\n              /* Single touch */\n              {\n                _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n              } else if (_this6.controlCoordinates.touchCount > 1)\n              /* Pinch */\n              {\n                _this6.controlCoordinates.initialPinchDistance = null;\n              }\n          }\n\n          if (_this6.controlCoordinates.mousedown) {\n            _this6.controlCoordinates.mousedown = false;\n            var possibleDir = true;\n\n            if (!_this6.options.loop) {\n              if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n                possibleDir = false;\n              }\n\n              if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n                possibleDir = false;\n              }\n            }\n\n            if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n              _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n            } else if (_this6.options.animationSlide) {\n              _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n            }\n\n            if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n              _this6.close();\n            }\n          }\n        });\n        this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n          if (_this6.isTouchDevice) return;\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          _this6.currentImage.classList.add('sl-transition');\n\n          if (!_this6.controlCoordinates.zoomed) {\n            _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n\n            _this6.controlCoordinates.zoomed = true;\n          } else {\n            _this6.controlCoordinates.initialScale = 1;\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n            _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n            _this6.controlCoordinates.zoomed = false;\n\n            if (_this6.domNodes.caption.style.display === 'none') {\n              _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          }\n\n          setTimeout(function () {\n            if (_this6.currentImage) {\n              _this6.currentImage.classList.remove('sl-transition');\n\n              _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n            }\n          }, 200);\n          _this6.controlCoordinates.capture = true;\n          return false;\n        });\n      }\n    }, {\n      key: \"getDimensions\",\n      value: function getDimensions(element) {\n        var styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n          height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n          width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n      }\n    }, {\n      key: \"updateHash\",\n      value: function updateHash() {\n        var newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n          window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n          // what is the browser target of this?\n          if (this.historyHasChanges) {\n            window.location.replace(newURL);\n          } else {\n            window.location.hash = newHash;\n          }\n        }\n\n        if (!this.historyHasChanges) {\n          this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n      }\n    }, {\n      key: \"resetHash\",\n      value: function resetHash() {\n        this.hashReseted = true;\n\n        if (this.urlChangedOnce) {\n          history.back();\n        } else {\n          if (this.pushStateSupport) {\n            history.pushState('', document.title, window.location.pathname + window.location.search);\n          } else {\n            window.location.hash = '';\n          }\n        } //\n        //in case an history operation is still pending\n\n\n        clearTimeout(this.historyUpdateTimeout);\n      }\n    }, {\n      key: \"updateURL\",\n      value: function updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n\n        if (!this.historyHasChanges) {\n          this.updateHash(); // first time\n        } else {\n          this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n      }\n    }, {\n      key: \"setCaption\",\n      value: function setCaption(captionText, imageWidth) {\n        var _this7 = this;\n\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n          this.hide(this.domNodes.caption);\n          this.domNodes.caption.style.width = imageWidth + 'px';\n          this.domNodes.caption.innerHTML = captionText;\n          this.domNodes.image.appendChild(this.domNodes.caption);\n          setTimeout(function () {\n            _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n          }, this.options.captionDelay);\n        }\n      }\n    }, {\n      key: \"slide\",\n      value: function slide(speed, pos) {\n        if (!this.transitionCapable) {\n          return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n      }\n    }, {\n      key: \"getRelated\",\n      value: function getRelated(rel) {\n        var elems;\n\n        if (rel && rel !== false && rel !== 'nofollow') {\n          elems = Array.from(this.elements).filter(function (element) {\n            return element.getAttribute('rel') === rel;\n          });\n        } else {\n          elems = this.elements;\n        }\n\n        return elems;\n      }\n    }, {\n      key: \"openImage\",\n      value: function openImage(element) {\n        var _this8 = this;\n\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n          this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n          document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n        if (this.options.overlay) {\n          document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n          if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.removeChild(this.domNodes.counter);\n          } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n            this.domNodes.wrapper.appendChild(this.domNodes.counter);\n          }\n        }\n\n        this.isAnimating = true;\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n        var targetURL = element.getAttribute(this.options.sourceAttr);\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n          this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n        this.domNodes.image.appendChild(this.currentImage);\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n        this.adjustImage();\n\n        if (this.options.preloading) {\n          this.preload();\n        }\n\n        setTimeout(function () {\n          element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n        }, this.options.animationSpeed);\n      }\n    }, {\n      key: \"forceFocus\",\n      value: function forceFocus() {\n        var _this9 = this;\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n          if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n            _this9.domNodes.wrapper.focus();\n          }\n        });\n      } // utility\n\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator = _createForOfIteratorHelper(elements),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var element = _step.value;\n\n            if (!element.namespaces) {\n              element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n\n            var _iterator2 = _createForOfIteratorHelper(events),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var event = _step2.value;\n                var options = opts || false;\n                var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                  if (_typeof(options) === 'object') {\n                    options.passive = true;\n                  } else {\n                    options = {\n                      passive: true\n                    };\n                  }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        var _iterator3 = _createForOfIteratorHelper(elements),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var element = _step3.value;\n\n            var _iterator4 = _createForOfIteratorHelper(events),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var event = _step4.value;\n\n                if (element.namespaces && element.namespaces[event]) {\n                  element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                  delete element.namespaces[event];\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }, {\n      key: \"fadeOut\",\n      value: function fadeOut(elements, duration, callback) {\n        var _this10 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator5 = _createForOfIteratorHelper(elements),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var element = _step5.value;\n            element.style.opacity = 1;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        this.isFadeIn = false;\n\n        var step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if ((currentOpacity -= step) < 0) {\n            var _iterator6 = _createForOfIteratorHelper(elements),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var element = _step6.value;\n                element.style.display = \"none\"; // element.style.opacity = '';\n\n                element.style.opacity = 1;\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            callback && callback.call(_this10, elements);\n          } else {\n            var _iterator7 = _createForOfIteratorHelper(elements),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _element = _step7.value;\n                _element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n\n            requestAnimationFrame(fade);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"fadeIn\",\n      value: function fadeIn(elements, duration, callback, display) {\n        var _this11 = this;\n\n        elements = this.wrap(elements);\n\n        var _iterator8 = _createForOfIteratorHelper(elements),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var element = _step8.value;\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        this.isFadeIn = true;\n\n        var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n            fade = function fade() {\n          var currentOpacity = parseFloat(elements[0].style.opacity);\n\n          if (!((currentOpacity += step) > opacityTarget)) {\n            var _iterator9 = _createForOfIteratorHelper(elements),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var element = _step9.value;\n                element.style.opacity = currentOpacity;\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n\n            if (!_this11.isFadeIn) return;\n            requestAnimationFrame(fade);\n          } else {\n            var _iterator10 = _createForOfIteratorHelper(elements),\n                _step10;\n\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var _element2 = _step10.value;\n                _element2.style.opacity = '';\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n\n            callback && callback.call(_this11, elements);\n          }\n        };\n\n        fade();\n      }\n    }, {\n      key: \"hide\",\n      value: function hide(elements) {\n        elements = this.wrap(elements);\n\n        var _iterator11 = _createForOfIteratorHelper(elements),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var element = _step11.value;\n\n            if (element.style.display != 'none') {\n              element.dataset.initialDisplay = element.style.display;\n            }\n\n            element.style.display = 'none';\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n    }, {\n      key: \"show\",\n      value: function show(elements, display) {\n        elements = this.wrap(elements);\n\n        var _iterator12 = _createForOfIteratorHelper(elements),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var element = _step12.value;\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      }\n    }, {\n      key: \"wrap\",\n      value: function wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n      }\n    }, {\n      key: \"on\",\n      value: function on(events, callback) {\n        events = this.wrap(events);\n\n        var _iterator13 = _createForOfIteratorHelper(this.elements),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var element = _step13.value;\n\n            if (!element.fullyNamespacedEvents) {\n              element.fullyNamespacedEvents = {};\n            }\n\n            var _iterator14 = _createForOfIteratorHelper(events),\n                _step14;\n\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var event = _step14.value;\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n\n        return this;\n      }\n    }, {\n      key: \"off\",\n      value: function off(events) {\n        events = this.wrap(events);\n\n        var _iterator15 = _createForOfIteratorHelper(this.elements),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var element = _step15.value;\n\n            var _iterator16 = _createForOfIteratorHelper(events),\n                _step16;\n\n            try {\n              for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                var event = _step16.value;\n\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                  element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n              }\n            } catch (err) {\n              _iterator16.e(err);\n            } finally {\n              _iterator16.f();\n            }\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n\n        return this;\n      } // api\n\n    }, {\n      key: \"open\",\n      value: function open(elem) {\n        elem = elem || this.elements[0];\n\n        if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n          elem = elem.get(0);\n        }\n\n        this.initialImageIndex = this.elements.indexOf(elem);\n\n        if (this.initialImageIndex > -1) {\n          this.openImage(elem);\n        }\n      }\n    }, {\n      key: \"next\",\n      value: function next() {\n        this.loadImage(1);\n      }\n    }, {\n      key: \"prev\",\n      value: function prev() {\n        this.loadImage(-1);\n      } // get some useful data\n\n    }, {\n      key: \"getLighboxData\",\n      value: function getLighboxData() {\n        return {\n          currentImageIndex: this.currentImageIndex,\n          currentImage: this.currentImage,\n          globalScrollbarWidth: this.globalScrollbarWidth\n        };\n      } //close is exposed anyways..\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        //remove all custom event listeners from elements\n        this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n        this.close();\n\n        if (this.isOpen) {\n          document.body.removeChild(this.domNodes.wrapper);\n          document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n      }\n    }, {\n      key: \"refresh\",\n      value: function refresh() {\n        if (!this.initialSelector) {\n          throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        var options = this.options,\n            selector = this.initialSelector;\n        this.destroy();\n        this.constructor(selector, options);\n        return this;\n      }\n    }]);\n\n    return SimpleLightbox;\n  }();\n\n  var _default = SimpleLightbox;\n  exports[\"default\"] = _default;\n  commonjsGlobal.SimpleLightbox = SimpleLightbox;\n  });\n\n  var SimpleLightbox = unwrapExports(simpleLightbox_modules);\n\n  new SimpleLightbox('.gallery__fancybox', {\n    /* options */\n  });\n\n  /**\n   * Sticky Sidebar v2 JavaScript Plugin.\n   * @version 1.0.1\n   * @author Øystein Blixhavn <oystein@blixhavn.no>\n   * @license The MIT License (MIT)\n   */\n  const StickySidebar = (() => {\n\n      // ---------------------------------\n      // # Define Constants\n      // ---------------------------------\n      //\n      const EVENT_KEY = '.stickySidebar';\n\n      const DEFAULTS = {\n        /**\n         * Additional top spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        topSpacing: 0,\n\n        /**\n         * Additional bottom spacing of the element when it becomes sticky.\n         * @type {Numeric|Function}\n         */\n        bottomSpacing: 0,\n\n        /**\n         * Container sidebar selector to know what the beginning and end of sticky element.\n         * @type {String|False}\n         */\n        containerSelector: false,\n\n        /**\n         * Parent element where the scrolling happens.\n         */\n        scrollContainer: false,\n\n        /**\n         * Inner wrapper selector.\n         * @type {String}\n         */\n        innerWrapperSelector: '.inner-wrapper-sticky',\n\n        /**\n         * The name of CSS class to apply to elements when they have become stuck.\n         * @type {String|False}\n         */\n        stickyClass: 'is-affixed',\n\n        /**\n         * The sidebar returns to its normal position if its width below this value.\n         * @type {Numeric}\n         */\n        minWidth: false\n      };\n\n      // ---------------------------------\n      // # Class Definition\n      // ---------------------------------\n      //\n      /**\n       * Sticky Sidebar Class.\n       * @public\n       */\n      class StickySidebar{\n\n        /**\n         * Sticky Sidebar Constructor.\n         * @constructor\n         * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n         * @param {Object} options - The options of sticky sidebar.\n         */\n        constructor(sidebar, options = {}){\n          this.options = StickySidebar.extend(DEFAULTS, options);\n\n          // Sidebar element query if there's no one, throw error.\n          this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n          if( 'undefined' === typeof this.sidebar )\n            throw new Error(\"There is no specific sidebar element.\");\n\n          this.sidebarInner = false;\n          this.container = this.sidebar.parentElement;\n\n          // Current Affix Type of sidebar element.\n          this.affixedType = 'STATIC';\n          this.direction = 'down';\n          this.support = {\n            transform:   false,\n            transform3d: false\n          };\n\n          this._initialized = false;\n          this._reStyle = false;\n          this._breakpoint = false;\n\n          // Dimensions of sidebar, container and screen viewport.\n          this.dimensions = {\n            translateY: 0,\n            maxTranslateY: 0,\n            topSpacing: 0,\n            lastTopSpacing: 0,\n            bottomSpacing: 0,\n            lastBottomSpacing: 0,\n            sidebarHeight: 0,\n            sidebarWidth: 0,\n            containerTop: 0,\n            containerHeight: 0,\n            viewportHeight: 0,\n            viewportTop: 0,\n            lastViewportTop: 0,\n          };\n\n          // Bind event handlers for referencability.\n          ['handleEvent'].forEach( (method) => {\n            this[method] = this[method].bind(this);\n          });\n\n          // Initialize sticky sidebar for first time.\n          this.initialize();\n        }\n\n        /**\n         * Initializes the sticky sidebar by adding inner wrapper, define its container,\n         * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n         * @private\n         */\n        initialize(){\n          this._setSupportFeatures();\n\n          // Get sticky sidebar inner wrapper, if not found, will create one.\n          if( this.options.innerWrapperSelector ){\n            this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n            if( null === this.sidebarInner )\n              this.sidebarInner = false;\n          }\n\n          if( ! this.sidebarInner ){\n            let wrapper = document.createElement('div');\n            wrapper.setAttribute('class', 'inner-wrapper-sticky');\n            this.sidebar.appendChild(wrapper);\n\n            while( this.sidebar.firstChild != wrapper )\n              wrapper.appendChild(this.sidebar.firstChild);\n\n            this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n          }\n\n          // Container wrapper of the sidebar.\n          if( this.options.containerSelector ){\n            let containers = document.querySelectorAll(this.options.containerSelector);\n            containers = Array.prototype.slice.call(containers);\n\n            containers.forEach((container, item) => {\n              if( ! container.contains(this.sidebar) ) return;\n              this.container = container;\n            });\n\n            if( ! containers.length )\n              throw new Error(\"The container does not contains on the sidebar.\");\n          }\n\n          // Get scroll container, if provided\n          this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n          // If top/bottom spacing is not function parse value to integer.\n          if( 'function' !== typeof this.options.topSpacing )\n            this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n          if( 'function' !== typeof this.options.bottomSpacing )\n            this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n          // Breakdown sticky sidebar if screen width below `options.minWidth`.\n          this._widthBreakpoint();\n\n          // Calculate dimensions of sidebar, container and viewport.\n          this.calcDimensions();\n\n          // Affix sidebar in proper position.\n          this.stickyPosition();\n\n          // Bind all events.\n          this.bindEvents();\n\n          // Inform other properties the sticky sidebar is initialized.\n          this._initialized = true;\n        }\n\n        /**\n         * Bind all events of sticky sidebar plugin.\n         * @protected\n         */\n        bindEvents(){\n          this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n          this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n          this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n          this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n          if( 'undefined' !== typeof ResizeObserver ){\n            const resizeObserver = new ResizeObserver(() => this.handleEvent());\n            resizeObserver.observe(this.sidebarInner);\n            resizeObserver.observe(this.container);\n          }\n        }\n\n        /**\n         * Handles all events of the plugin.\n         * @param {Object} event - Event object passed from listener.\n         */\n        handleEvent(event){\n          this.updateSticky(event);\n        }\n\n        /**\n         * Calculates dimensions of sidebar, container and screen viewpoint\n         * @public\n         */\n        calcDimensions(){\n          if( this._breakpoint ) return;\n          var dims = this.dimensions;\n\n          // Container of sticky sidebar dimensions.\n          dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n          dims.containerHeight = this.container.clientHeight;\n          dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n          // Sidebar dimensions.\n          dims.sidebarHeight = this.sidebarInner.offsetHeight;\n          dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n          // Screen viewport dimensions.\n          dims.viewportHeight = window.innerHeight;\n\n          // Maximum sidebar translate Y.\n          dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n          this._calcDimensionsWithScroll();\n        }\n\n        /**\n         * Some dimensions values need to be up-to-date when scrolling the page.\n         * @private\n         */\n        _calcDimensionsWithScroll(){\n          var dims = this.dimensions;\n\n          dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n          if (this.scrollContainer) {\n            dims.viewportTop = this.scrollContainer.scrollTop;\n            dims.viewportLeft = this.scrollContainer.scrollLeft;\n          } else {\n            dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n            dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n          }\n          dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n          dims.topSpacing    = this.options.topSpacing;\n          dims.bottomSpacing = this.options.bottomSpacing;\n\n          if( 'function' === typeof dims.topSpacing )\n              dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n          if( 'function' === typeof dims.bottomSpacing )\n              dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n          if( 'VIEWPORT-TOP' === this.affixedType ){\n            // Adjust translate Y in the case decrease top spacing value.\n            if( dims.topSpacing < dims.lastTopSpacing ){\n              dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n              this._reStyle = true;\n            }\n          } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n            // Adjust translate Y in the case decrease bottom spacing value.\n            if( dims.bottomSpacing < dims.lastBottomSpacing ){\n              dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n              this._reStyle = true;\n            }\n          }\n\n          dims.lastTopSpacing    = dims.topSpacing;\n          dims.lastBottomSpacing = dims.bottomSpacing;\n        }\n\n        /**\n         * Determine whether the sidebar is bigger than viewport.\n         * @public\n         * @return {Boolean}\n         */\n        isSidebarFitsViewport() {\n          return this.dimensions.viewportHeight >= (\n            this.dimensions.lastBottomSpacing +\n            this.dimensions.lastTopSpacing +\n            this.dimensions.sidebarHeight\n          );\n        }\n\n        /**\n         * Observe browser scrolling direction top and down.\n         */\n        observeScrollDir(){\n          var dims = this.dimensions;\n          if( dims.lastViewportTop === dims.viewportTop ) return;\n\n          var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n          // If the browser is scrolling not in the same direction.\n          if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n            this.direction = 'down' === this.direction ?  'up' : 'down';\n        }\n\n        /**\n         * Gets affix type of sidebar according to current scroll top and scrolling direction.\n         * @public\n         * @return {String|False} - Proper affix type.\n         */\n        getAffixType(){\n          this._calcDimensionsWithScroll();\n          var dims = this.dimensions;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var affixType = this.affixedType;\n\n         if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n            dims.translateY = 0;\n            affixType = 'STATIC';\n          } else {\n            affixType = ( 'up' === this.direction ) ?\n              this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n          }\n\n          // Make sure the translate Y is not bigger than container height.\n          dims.translateY = Math.max(0, dims.translateY);\n          dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n          dims.translateY = Math.round(dims.translateY);\n\n          dims.lastViewportTop = dims.viewportTop;\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling down.\n         * @private\n         * @return {String} - Proper affix type of scrolling down direction.\n         */\n        _getAffixTypeScrollingDown(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( this.isSidebarFitsViewport() ){\n            if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( colliderTop >= dims.containerTop ){\n              dims.translateY = colliderTop - dims.containerTop;\n              affixType = 'VIEWPORT-TOP';\n            }\n          } else {\n            if( dims.containerBottom <= colliderBottom ){\n              dims.translateY = dims.containerBottom - sidebarBottom;\n              affixType = 'CONTAINER-BOTTOM';\n\n            } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n              dims.translateY = colliderBottom - sidebarBottom;\n              affixType = 'VIEWPORT-BOTTOM';\n\n            } else if( dims.containerTop + dims.translateY <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Get affix type while scrolling up.\n         * @private\n         * @return {String} - Proper affix type of scrolling up direction.\n         */\n        _getAffixTypeScrollingUp(){\n          var dims = this.dimensions;\n          var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n          var colliderTop = dims.viewportTop + dims.topSpacing;\n          var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n          var affixType = this.affixedType;\n\n          if( colliderTop <= dims.translateY + dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n\n          } else if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( ! this.isSidebarFitsViewport() ){\n\n            if( dims.containerTop <= colliderTop &&\n                (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n              affixType = 'VIEWPORT-UNBOTTOM';\n            }\n          }\n\n          return affixType;\n        }\n\n        /**\n         * Gets inline style of sticky sidebar wrapper and inner wrapper according\n         * to its affix type.\n         * @private\n         * @param {String} affixType - Affix type of sticky sidebar.\n         * @return {Object}\n         */\n        _getStyle(affixType){\n          if( 'undefined' === typeof affixType ) return;\n\n          var style = {inner: {}, outer: {}};\n          var dims = this.dimensions;\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n              style.inner = {position: 'fixed', top: dims.topSpacing,\n                    left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n              break;\n            case 'VIEWPORT-BOTTOM':\n              style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                    bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n              break;\n            case 'CONTAINER-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n              let translate = this._getTranslate(0, dims.translateY + 'px');\n\n              if( translate )\n                style.inner = {transform: translate};\n              else\n                style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n              break;\n          }\n\n          switch( affixType ){\n            case 'VIEWPORT-TOP':\n            case 'VIEWPORT-BOTTOM':\n            case 'VIEWPORT-UNBOTTOM':\n            case 'CONTAINER-BOTTOM':\n              style.outer = {height: dims.sidebarHeight, position: 'relative'};\n              break;\n          }\n\n          style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n          style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n              bottom: '', width: '',  transform: ''}, style.inner);\n\n          return style;\n        }\n\n        /**\n         * Cause the sidebar to be sticky according to affix type by adding inline\n         * style, adding helper class and trigger events.\n         * @function\n         * @protected\n         * @param {string} force - Update sticky sidebar position by force.\n         */\n        stickyPosition(force){\n          if( this._breakpoint ) return;\n\n          force = this._reStyle || force || false;\n\n          this.options.topSpacing;\n          this.options.bottomSpacing;\n\n          var affixType = this.getAffixType();\n          var style = this._getStyle(affixType);\n\n          if( (this.affixedType != affixType || force) && affixType ){\n            let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n            if( 'STATIC' === affixType )\n              StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            else\n              StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n            for( let key in style.outer ){\n              let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n              this.sidebar.style[key] = style.outer[key] + unit;\n            }\n\n            for( let key in style.inner ){\n              let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n              this.sidebarInner.style[key] = style.inner[key] + unit;\n            }\n\n            let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n            StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n          } else {\n            if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n          }\n\n          this.affixedType = affixType;\n        }\n\n        /**\n         * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n         * @protected\n         */\n        _widthBreakpoint(){\n\n          if( window.innerWidth <= this.options.minWidth ){\n            this._breakpoint = true;\n            this.affixedType = 'STATIC';\n\n            this.sidebar.removeAttribute('style');\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n            this.sidebarInner.removeAttribute('style');\n          } else {\n            this._breakpoint = false;\n          }\n        }\n\n        /**\n         * Switches between functions stack for each event type, if there's no\n         * event, it will re-initialize sticky sidebar.\n         * @public\n         */\n        updateSticky(event = {}){\n          if( this._running ) return;\n          this._running = true;\n\n          ((eventType) => {\n            requestAnimationFrame(() => {\n              switch( eventType ){\n                // When browser is scrolling and re-calculate just dimensions\n                // within scroll.\n                case 'scroll':\n                  this._calcDimensionsWithScroll();\n                  this.observeScrollDir();\n                  this.stickyPosition();\n                  break;\n\n                // When browser is resizing or there's no event, observe width\n                // breakpoint and re-calculate dimensions.\n                case 'resize':\n                default:\n                  this._widthBreakpoint();\n                  this.calcDimensions();\n                  this.stickyPosition(true);\n                  break;\n              }\n              this._running = false;\n            });\n          })(event.type);\n        }\n\n        /**\n         * Set browser support features to the public property.\n         * @private\n         */\n        _setSupportFeatures(){\n          var support = this.support;\n\n          support.transform = StickySidebar.supportTransform();\n          support.transform3d = StickySidebar.supportTransform(true);\n        }\n\n        /**\n         * Get translate value, if the browser supports transfrom3d, it will adopt it.\n         * and the same with translate. if browser doesn't support both return false.\n         * @param {Number} y - Value of Y-axis.\n         * @param {Number} x - Value of X-axis.\n         * @param {Number} z - Value of Z-axis.\n         * @return {String|False}\n         */\n        _getTranslate(y = 0, x = 0, z = 0){\n          if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n          else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n          else return false;\n        }\n\n        /**\n         * Destroy sticky sidebar plugin.\n         * @public\n         */\n        destroy(){\n          window.removeEventListener('resize', this, {capture: false});\n          window.removeEventListener('scroll', this, {capture: false});\n\n          this.sidebar.classList.remove(this.options.stickyClass);\n          this.sidebar.style.minHeight = '';\n\n          this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n          var styleReset = {inner: {}, outer: {}};\n\n          styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n          styleReset.outer = {height: '', position: ''};\n\n          for( let key in styleReset.outer )\n            this.sidebar.style[key] = styleReset.outer[key];\n\n          for( let key in styleReset.inner )\n            this.sidebarInner.style[key] = styleReset.inner[key];\n\n          if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n            ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n            ResizeSensor.detach(this.container, this.handleEvent);\n          }\n        }\n\n        /**\n         * Determine if the browser supports CSS transform feature.\n         * @function\n         * @static\n         * @param {Boolean} transform3d - Detect transform with translate3d.\n         * @return {String}\n         */\n        static supportTransform(transform3d){\n          var result = false,\n              property = (transform3d) ? 'perspective' : 'transform',\n              upper = property.charAt(0).toUpperCase() + property.slice(1),\n              prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n              support = document.createElement('support'),\n              style = support.style;\n\n          (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n            if (style[property] !== undefined) {\n              result = property;\n              return false;\n            }\n          });\n          return result;\n        }\n\n        /**\n         * Trigger custom event.\n         * @static\n         * @param {DOMObject} element - Target element on the DOM.\n         * @param {String} eventName - Event name.\n         * @param {Object} data -\n         */\n        static eventTrigger(element, eventName, data){\n          try{\n            var event = new CustomEvent(eventName, {detail: data});\n          } catch(e){\n            var event = document.createEvent('CustomEvent');\n            event.initCustomEvent(eventName, true, true, data);\n          }\n          element.dispatchEvent(event);\n        }\n\n        /**\n         * Extend options object with defaults.\n         * @function\n         * @static\n         */\n        static extend(defaults, options){\n          var results = {};\n          for( let key in defaults ){\n            if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n            else results[key] = defaults[key];\n          }\n          return results;\n        }\n\n        /**\n         * Get current coordinates left and top of specific element.\n         * @static\n         */\n        static offsetRelative(element){\n          var result = {left: 0, top: 0};\n\n          do{\n            let offsetTop = element.offsetTop;\n            let offsetLeft = element.offsetLeft;\n\n            if( ! isNaN(offsetTop) )\n              result.top += offsetTop;\n\n            if( ! isNaN(offsetLeft) )\n              result.left += offsetLeft;\n\n            element = ( 'BODY' === element.tagName ) ?\n                        element.parentElement : element.offsetParent;\n          } while(element)\n          return result;\n        }\n\n        /**\n         * Add specific class name to specific element.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static addClass(element, className){\n          if( ! StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.add(className);\n            else\n              element.className += ' ' + className;\n          }\n        }\n\n        /**\n         * Remove specific class name to specific element\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static removeClass(element, className){\n          if( StickySidebar.hasClass(element, className) ){\n            if (element.classList)\n              element.classList.remove(className);\n            else\n              element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n          }\n        }\n\n        /**\n         * Determine weather the element has specific class name.\n         * @static\n         * @param {ObjectDOM} element\n         * @param {String} className\n         */\n        static hasClass(element, className){\n          if (element.classList)\n            return element.classList.contains(className);\n          else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n\n        /**\n         * Gets default values of configuration options.\n         * @static\n         * @return {Object}\n         */\n        static get defaults(){\n          return DEFAULTS;\n        }\n      }\n\n      return StickySidebar;\n    })();\n\n    // Global\n    // -------------------------\n    window.StickySidebar = StickySidebar;\n\n  if (document.querySelector('.sidebar')) {\n    new StickySidebar('.sidebar', {\n      containerSelector: '.layout',\n      innerWrapperSelector: '.sidebar__inner',\n      topSpacing: 30,\n      bottomSpacing: 20\n    });\n  }\n\n  var objectExtend = extend;\n\n  /*\n    var obj = {a: 3, b: 5};\n    extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 4, b: 5, c: 8}\n\n    var obj = {a: 3, b: 5};\n    extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n    obj; // {a: 3, b: 5}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n    var arr = [1, 2, 3];\n    var obj = {a: 3, b: 5};\n    extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n    arr.push(4);\n    obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n    extend({a: 4, b: 5}); // {a: 4, b: 5}\n    extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n    extend({a: 4, b: 5}, true); {a: 4, b: 5}\n    extend('hello', {a: 4, b: 5}); // throws\n    extend(3, {a: 4, b: 5}); // throws\n  */\n\n  function extend(/* [deep], obj1, obj2, [objn] */) {\n    var args = [].slice.call(arguments);\n    var deep = false;\n    if (typeof args[0] == 'boolean') {\n      deep = args.shift();\n    }\n    var result = args[0];\n    if (isUnextendable(result)) {\n      throw new Error('extendee must be an object');\n    }\n    var extenders = args.slice(1);\n    var len = extenders.length;\n    for (var i = 0; i < len; i++) {\n      var extender = extenders[i];\n      for (var key in extender) {\n        if (Object.prototype.hasOwnProperty.call(extender, key)) {\n          var value = extender[key];\n          if (deep && isCloneable(value)) {\n            var base = Array.isArray(value) ? [] : {};\n            result[key] = extend(\n              true,\n              Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n                ? result[key]\n                : base,\n              value\n            );\n          } else {\n            result[key] = value;\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  function isCloneable(obj) {\n    return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n  }\n\n  function isUnextendable(val) {\n    return !val || (typeof val != 'object' && typeof val != 'function');\n  }\n\n  function $parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n  }\n\n  class $4040acfd8584338d$export$2e2bcd8739ae039 {\n      // Add an event listener for given event\n      on(event, fn) {\n          this._callbacks = this._callbacks || {\n          };\n          // Create namespace for this event\n          if (!this._callbacks[event]) this._callbacks[event] = [];\n          this._callbacks[event].push(fn);\n          return this;\n      }\n      emit(event, ...args) {\n          this._callbacks = this._callbacks || {\n          };\n          let callbacks = this._callbacks[event];\n          if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n          // trigger a corresponding DOM event\n          if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n              args: args\n          }));\n          return this;\n      }\n      makeEvent(eventName, detail) {\n          let params = {\n              bubbles: true,\n              cancelable: true,\n              detail: detail\n          };\n          if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n          else {\n              // IE 11 support\n              // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n              var evt = document.createEvent(\"CustomEvent\");\n              evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n              return evt;\n          }\n      }\n      // Remove event listener for given event. If fn is not provided, all event\n      // listeners for that event will be removed. If neither is provided, all\n      // event listeners will be removed.\n      off(event, fn) {\n          if (!this._callbacks || arguments.length === 0) {\n              this._callbacks = {\n              };\n              return this;\n          }\n          // specific event\n          let callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n          // remove all handlers\n          if (arguments.length === 1) {\n              delete this._callbacks[event];\n              return this;\n          }\n          // remove specific handler\n          for(let i = 0; i < callbacks.length; i++){\n              let callback = callbacks[i];\n              if (callback === fn) {\n                  callbacks.splice(i, 1);\n                  break;\n              }\n          }\n          return this;\n      }\n  }\n\n\n\n  var $fd6031f88dce2e32$exports = {};\n  $fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\n  let $4ca367182776f80b$var$defaultOptions = {\n      /**\n     * Has to be specified on elements other than form (or when the form doesn't\n     * have an `action` attribute).\n     *\n     * You can also provide a function that will be called with `files` and\n     * `dataBlocks`  and must return the url as string.\n     */ url: null,\n      /**\n     * Can be changed to `\"put\"` if necessary. You can also provide a function\n     * that will be called with `files` and must return the method (since `v3.12.0`).\n     */ method: \"post\",\n      /**\n     * Will be set on the XHRequest.\n     */ withCredentials: false,\n      /**\n     * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n     * If set to null or 0, no timeout is going to be set.\n     */ timeout: null,\n      /**\n     * How many file uploads to process in parallel (See the\n     * Enqueuing file uploads documentation section for more info)\n     */ parallelUploads: 2,\n      /**\n     * Whether to send multiple files in one request. If\n     * this it set to true, then the fallback file input element will\n     * have the `multiple` attribute as well. This option will\n     * also trigger additional events (like `processingmultiple`). See the events\n     * documentation section for more information.\n     */ uploadMultiple: false,\n      /**\n     * Whether you want files to be uploaded in chunks to your server. This can't be\n     * used in combination with `uploadMultiple`.\n     *\n     * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n     */ chunking: false,\n      /**\n     * If `chunking` is enabled, this defines whether **every** file should be chunked,\n     * even if the file size is below chunkSize. This means, that the additional chunk\n     * form data will be submitted and the `chunksUploaded` callback will be invoked.\n     */ forceChunking: false,\n      /**\n     * If `chunking` is `true`, then this defines the chunk size in bytes.\n     */ chunkSize: 2097152,\n      /**\n     * If `true`, the individual chunks of a file are being uploaded simultaneously.\n     */ parallelChunkUploads: false,\n      /**\n     * Whether a chunk should be retried if it fails.\n     */ retryChunks: false,\n      /**\n     * If `retryChunks` is true, how many times should it be retried.\n     */ retryChunksLimit: 3,\n      /**\n     * The maximum filesize (in MiB) that is allowed to be uploaded.\n     */ maxFilesize: 256,\n      /**\n     * The name of the file param that gets transferred.\n     * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n     * Dropzone will append `[]` to the name.\n     */ paramName: \"file\",\n      /**\n     * Whether thumbnails for images should be generated\n     */ createImageThumbnails: true,\n      /**\n     * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n     */ maxThumbnailFilesize: 10,\n      /**\n     * If `null`, the ratio of the image will be used to calculate it.\n     */ thumbnailWidth: 120,\n      /**\n     * The same as `thumbnailWidth`. If both are null, images will not be resized.\n     */ thumbnailHeight: 120,\n      /**\n     * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ thumbnailMethod: \"crop\",\n      /**\n     * If set, images will be resized to these dimensions before being **uploaded**.\n     * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n     * ratio of the file will be preserved.\n     *\n     * The `options.transformFile` function uses these options, so if the `transformFile` function\n     * is overridden, these options don't do anything.\n     */ resizeWidth: null,\n      /**\n     * See `resizeWidth`.\n     */ resizeHeight: null,\n      /**\n     * The mime type of the resized image (before it gets uploaded to the server).\n     * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n     * See `resizeWidth` for more information.\n     */ resizeMimeType: null,\n      /**\n     * The quality of the resized images. See `resizeWidth`.\n     */ resizeQuality: 0.8,\n      /**\n     * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n     * Can be either `contain` or `crop`.\n     */ resizeMethod: \"contain\",\n      /**\n     * The base that is used to calculate the **displayed** filesize. You can\n     * change this to 1024 if you would rather display kibibytes, mebibytes,\n     * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n     * not `1 kilobyte`. You can change this to `1024` if you don't care about\n     * validity.\n     */ filesizeBase: 1000,\n      /**\n     * If not `null` defines how many files this Dropzone handles. If it exceeds,\n     * the event `maxfilesexceeded` will be called. The dropzone element gets the\n     * class `dz-max-files-reached` accordingly so you can provide visual\n     * feedback.\n     */ maxFiles: null,\n      /**\n     * An optional object to send additional headers to the server. Eg:\n     * `{ \"My-Awesome-Header\": \"header value\" }`\n     */ headers: null,\n      /**\n     * Should the default headers be set or not?\n     * Accept: application/json <- for requesting json response\n     * Cache-Control: no-cache <- Request shouldnt be cached\n     * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n     */ defaultHeaders: true,\n      /**\n     * If `true`, the dropzone element itself will be clickable, if `false`\n     * nothing will be clickable.\n     *\n     * You can also pass an HTML element, a CSS selector (for multiple elements)\n     * or an array of those. In that case, all of those elements will trigger an\n     * upload when clicked.\n     */ clickable: true,\n      /**\n     * Whether hidden files in directories should be ignored.\n     */ ignoreHiddenFiles: true,\n      /**\n     * The default implementation of `accept` checks the file's mime type or\n     * extension against this list. This is a comma separated list of mime\n     * types or file extensions.\n     *\n     * Eg.: `image/*,application/pdf,.psd`\n     *\n     * If the Dropzone is `clickable` this option will also be used as\n     * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n     * parameter on the hidden file input as well.\n     */ acceptedFiles: null,\n      /**\n     * **Deprecated!**\n     * Use acceptedFiles instead.\n     */ acceptedMimeTypes: null,\n      /**\n     * If false, files will be added to the queue but the queue will not be\n     * processed automatically.\n     * This can be useful if you need some additional user input before sending\n     * files (or if you want want all files sent at once).\n     * If you're ready to send the file simply call `myDropzone.processQueue()`.\n     *\n     * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n     * section for more information.\n     */ autoProcessQueue: true,\n      /**\n     * If false, files added to the dropzone will not be queued by default.\n     * You'll have to call `enqueueFile(file)` manually.\n     */ autoQueue: true,\n      /**\n     * If `true`, this will add a link to every file preview to remove or cancel (if\n     * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n     * and `dictRemoveFile` options are used for the wording.\n     */ addRemoveLinks: false,\n      /**\n     * Defines where to display the file previews – if `null` the\n     * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n     * selector. The element should have the `dropzone-previews` class so\n     * the previews are displayed properly.\n     */ previewsContainer: null,\n      /**\n     * Set this to `true` if you don't want previews to be shown.\n     */ disablePreviews: false,\n      /**\n     * This is the element the hidden input field (which is used when clicking on the\n     * dropzone to trigger file selection) will be appended to. This might\n     * be important in case you use frameworks to switch the content of your page.\n     *\n     * Can be a selector string, or an element directly.\n     */ hiddenInputContainer: \"body\",\n      /**\n     * If null, no capture type will be specified\n     * If camera, mobile devices will skip the file selection and choose camera\n     * If microphone, mobile devices will skip the file selection and choose the microphone\n     * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n     * On apple devices multiple must be set to false.  AcceptedFiles may need to\n     * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n     */ capture: null,\n      /**\n     * **Deprecated**. Use `renameFile` instead.\n     */ renameFilename: null,\n      /**\n     * A function that is invoked before the file is uploaded to the server and renames the file.\n     * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n     * file that gets used during the upload can be accessed through `file.upload.filename`.\n     */ renameFile: null,\n      /**\n     * If `true` the fallback will be forced. This is very useful to test your server\n     * implementations first and make sure that everything works as\n     * expected without dropzone if you experience problems, and to test\n     * how your fallbacks will look.\n     */ forceFallback: false,\n      /**\n     * The text used before any files are dropped.\n     */ dictDefaultMessage: \"Drop files here to upload\",\n      /**\n     * The text that replaces the default message text it the browser is not supported.\n     */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      /**\n     * The text that will be added before the fallback form.\n     * If you provide a  fallback element yourself, or if this option is `null` this will\n     * be ignored.\n     */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      /**\n     * If the filesize is too big.\n     * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n     */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      /**\n     * If the file doesn't match the file type.\n     */ dictInvalidFileType: \"You can't upload files of this type.\",\n      /**\n     * If the server response was invalid.\n     * `{{statusCode}}` will be replaced with the servers status code.\n     */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n     */ dictCancelUpload: \"Cancel upload\",\n      /**\n     * The text that is displayed if an upload was manually canceled\n     */ dictUploadCanceled: \"Upload canceled.\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n     */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      /**\n     * If `addRemoveLinks` is true, the text to be used to remove a file.\n     */ dictRemoveFile: \"Remove file\",\n      /**\n     * If this is not null, then the user will be prompted before removing a file.\n     */ dictRemoveFileConfirmation: null,\n      /**\n     * Displayed if `maxFiles` is st and exceeded.\n     * The string `{{maxFiles}}` will be replaced by the configuration value.\n     */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n      /**\n     * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n     * `b` for bytes.\n     */ dictFileSizeUnits: {\n          tb: \"TB\",\n          gb: \"GB\",\n          mb: \"MB\",\n          kb: \"KB\",\n          b: \"b\"\n      },\n      /**\n     * Called when dropzone initialized\n     * You can add event listeners here\n     */ init () {\n      },\n      /**\n     * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n     * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n     * of a function, this needs to return a map.\n     *\n     * The default implementation does nothing for normal uploads, but adds relevant information for\n     * chunked uploads.\n     *\n     * This is the same as adding hidden input fields in the form element.\n     */ params (files, xhr, chunk) {\n          if (chunk) return {\n              dzuuid: chunk.file.upload.uuid,\n              dzchunkindex: chunk.index,\n              dztotalfilesize: chunk.file.size,\n              dzchunksize: this.options.chunkSize,\n              dztotalchunkcount: chunk.file.upload.totalChunkCount,\n              dzchunkbyteoffset: chunk.index * this.options.chunkSize\n          };\n      },\n      /**\n     * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n     * and a `done` function as parameters.\n     *\n     * If the done function is invoked without arguments, the file is \"accepted\" and will\n     * be processed. If you pass an error message, the file is rejected, and the error\n     * message will be displayed.\n     * This function will not be called if the file is too big or doesn't match the mime types.\n     */ accept (file, done) {\n          return done();\n      },\n      /**\n     * The callback that will be invoked when all chunks have been uploaded for a file.\n     * It gets the file for which the chunks have been uploaded as the first parameter,\n     * and the `done` function as second. `done()` needs to be invoked when everything\n     * needed to finish the upload process is done.\n     */ chunksUploaded: function(file, done) {\n          done();\n      },\n      /**\n     * Sends the file as binary blob in body instead of form data.\n     * If this is set, the `params` option will be ignored.\n     * It's an error to set this to `true` along with `uploadMultiple` since\n     * multiple files cannot be in a single binary body.\n     */ binaryBody: false,\n      /**\n     * Gets called when the browser is not supported.\n     * The default implementation shows the fallback input field and adds\n     * a text.\n     */ fallback () {\n          // This code should pass in IE7... :(\n          let messageElement;\n          this.element.className = `${this.element.className} dz-browser-not-supported`;\n          for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n              messageElement = child;\n              child.className = \"dz-message\"; // Removes the 'dz-default' class\n              break;\n          }\n          if (!messageElement) {\n              messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n              this.element.appendChild(messageElement);\n          }\n          let span = messageElement.getElementsByTagName(\"span\")[0];\n          if (span) {\n              if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n              else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n          }\n          return this.element.appendChild(this.getFallbackForm());\n      },\n      /**\n     * Gets called to calculate the thumbnail dimensions.\n     *\n     * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n     *\n     *  - `srcWidth` & `srcHeight` (required)\n     *  - `trgWidth` & `trgHeight` (required)\n     *  - `srcX` & `srcY` (optional, default `0`)\n     *  - `trgX` & `trgY` (optional, default `0`)\n     *\n     * Those values are going to be used by `ctx.drawImage()`.\n     */ resize (file, width, height, resizeMethod) {\n          let info = {\n              srcX: 0,\n              srcY: 0,\n              srcWidth: file.width,\n              srcHeight: file.height\n          };\n          let srcRatio = file.width / file.height;\n          // Automatically calculate dimensions if not specified\n          if (width == null && height == null) {\n              width = info.srcWidth;\n              height = info.srcHeight;\n          } else if (width == null) width = height * srcRatio;\n          else if (height == null) height = width / srcRatio;\n          // Make sure images aren't upscaled\n          width = Math.min(width, info.srcWidth);\n          height = Math.min(height, info.srcHeight);\n          let trgRatio = width / height;\n          if (info.srcWidth > width || info.srcHeight > height) {\n              // Image is bigger and needs rescaling\n              if (resizeMethod === \"crop\") {\n                  if (srcRatio > trgRatio) {\n                      info.srcHeight = file.height;\n                      info.srcWidth = info.srcHeight * trgRatio;\n                  } else {\n                      info.srcWidth = file.width;\n                      info.srcHeight = info.srcWidth / trgRatio;\n                  }\n              } else if (resizeMethod === \"contain\") {\n                  // Method 'contain'\n                  if (srcRatio > trgRatio) height = width / srcRatio;\n                  else width = height * srcRatio;\n              } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n          }\n          info.srcX = (file.width - info.srcWidth) / 2;\n          info.srcY = (file.height - info.srcHeight) / 2;\n          info.trgWidth = width;\n          info.trgHeight = height;\n          return info;\n      },\n      /**\n     * Can be used to transform the file (for example, resize an image if necessary).\n     *\n     * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n     * images according to those dimensions.\n     *\n     * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n     * to be invoked with the file when the transformation is done.\n     */ transformFile (file, done) {\n          if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n          else return done(file);\n      },\n      /**\n     * A string that contains the template used for each dropped\n     * file. Change it to fulfill your needs but make sure to properly\n     * provide all elements.\n     *\n     * If you want to use an actual HTML element instead of providing a String\n     * as a config option, you could create a div with the id `tpl`,\n     * put the template inside it and provide the element like this:\n     *\n     *     document\n     *       .querySelector('#tpl')\n     *       .innerHTML\n     *\n     */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n      /*\n     Those functions register themselves to the events on init and handle all\n     the user interface specific stuff. Overwriting them won't break the upload\n     but can break the way it's displayed.\n     You can overwrite them if you don't like the default behavior. If you just\n     want to add an additional event handler, register it on the dropzone object\n     and don't overwrite those options.\n     */ // Those are self explanatory and simply concern the DragnDrop.\n      drop (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart (e) {\n      },\n      dragend (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover (e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave (e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste (e) {\n      },\n      // Called whenever there are no files left in the dropzone anymore, and the\n      // dropzone should be displayed as if in the initial state.\n      reset () {\n          return this.element.classList.remove(\"dz-started\");\n      },\n      // Called when a file is added to the queue\n      // Receives `file`\n      addedfile (file) {\n          if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n          if (this.previewsContainer && !this.options.disablePreviews) {\n              file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n              file.previewTemplate = file.previewElement; // Backwards compatibility\n              this.previewsContainer.appendChild(file.previewElement);\n              for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n              for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n              if (this.options.addRemoveLinks) {\n                  file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                  file.previewElement.appendChild(file._removeLink);\n              }\n              let removeFileEvent = (e)=>{\n                  e.preventDefault();\n                  e.stopPropagation();\n                  if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                  );\n                  else {\n                      if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                      );\n                      else return this.removeFile(file);\n                  }\n              };\n              for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n          }\n      },\n      // Called whenever a file is removed.\n      removedfile (file) {\n          if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n          return this._updateMaxFilesReachedClass();\n      },\n      // Called when a thumbnail has been generated\n      // Receives `file` and `dataUrl`\n      thumbnail (file, dataUrl) {\n          if (file.previewElement) {\n              file.previewElement.classList.remove(\"dz-file-preview\");\n              for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                  thumbnailElement.alt = file.name;\n                  thumbnailElement.src = dataUrl;\n              }\n              return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n              , 1);\n          }\n      },\n      // Called whenever an error occurs\n      // Receives `file` and `message`\n      error (file, message) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-error\");\n              if (typeof message !== \"string\" && message.error) message = message.error;\n              for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n          }\n      },\n      errormultiple () {\n      },\n      // Called when a file gets processed. Since there is a cue, not all added\n      // files are processed immediately.\n      // Receives `file`\n      processing (file) {\n          if (file.previewElement) {\n              file.previewElement.classList.add(\"dz-processing\");\n              if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n          }\n      },\n      processingmultiple () {\n      },\n      // Called whenever the upload progress gets updated.\n      // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n      // To get the total number of bytes of the file, use `file.size`\n      uploadprogress (file, progress, bytesSent) {\n          if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n      },\n      // Called whenever the total upload progress gets updated.\n      // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n      totaluploadprogress () {\n      },\n      // Called just before the file is sent. Gets the `xhr` object as second\n      // parameter, so you can modify it (for example to add a CSRF token) and a\n      // `formData` object to add additional information.\n      sending () {\n      },\n      sendingmultiple () {\n      },\n      // When the complete upload is finished and successful\n      // Receives `file`\n      success (file) {\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n      },\n      successmultiple () {\n      },\n      // When the upload is canceled.\n      canceled (file) {\n          return this.emit(\"error\", file, this.options.dictUploadCanceled);\n      },\n      canceledmultiple () {\n      },\n      // When the upload is finished, either with success or an error.\n      // Receives `file`\n      complete (file) {\n          if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n          if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n      },\n      completemultiple () {\n      },\n      maxfilesexceeded () {\n      },\n      maxfilesreached () {\n      },\n      queuecomplete () {\n      },\n      addedfiles () {\n      }\n  };\n  var $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\n  class $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n      static initClass() {\n          // Exposing the emitter class, mainly for tests\n          this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n          /*\n       This is a list of all available events you can register on a dropzone object.\n\n       You can register an event handler like this:\n\n       dropzone.on(\"dragEnter\", function() { });\n\n       */ this.prototype.events = [\n              \"drop\",\n              \"dragstart\",\n              \"dragend\",\n              \"dragenter\",\n              \"dragover\",\n              \"dragleave\",\n              \"addedfile\",\n              \"addedfiles\",\n              \"removedfile\",\n              \"thumbnail\",\n              \"error\",\n              \"errormultiple\",\n              \"processing\",\n              \"processingmultiple\",\n              \"uploadprogress\",\n              \"totaluploadprogress\",\n              \"sending\",\n              \"sendingmultiple\",\n              \"success\",\n              \"successmultiple\",\n              \"canceled\",\n              \"canceledmultiple\",\n              \"complete\",\n              \"completemultiple\",\n              \"reset\",\n              \"maxfilesexceeded\",\n              \"maxfilesreached\",\n              \"queuecomplete\", \n          ];\n          this.prototype._thumbnailQueue = [];\n          this.prototype._processingThumbnail = false;\n      }\n      // Returns all files that have been accepted\n      getAcceptedFiles() {\n          return this.files.filter((file)=>file.accepted\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that have been rejected\n      // Not sure when that's going to be useful, but added for completeness.\n      getRejectedFiles() {\n          return this.files.filter((file)=>!file.accepted\n          ).map((file)=>file\n          );\n      }\n      getFilesWithStatus(status) {\n          return this.files.filter((file)=>file.status === status\n          ).map((file)=>file\n          );\n      }\n      // Returns all files that are in the queue\n      getQueuedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n      }\n      getUploadingFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n      }\n      getAddedFiles() {\n          return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n      }\n      // Files that are either queued or uploading\n      getActiveFiles() {\n          return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n          ).map((file)=>file\n          );\n      }\n      // The function that gets called when Dropzone is initialized. You\n      // can (and should) setup event listeners inside this function.\n      init() {\n          // In case it isn't set already\n          if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n          if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n          if (this.clickableElements.length) {\n              let setupHiddenFileInput = ()=>{\n                  if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                  this.hiddenFileInput = document.createElement(\"input\");\n                  this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                  if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                  this.hiddenFileInput.className = \"dz-hidden-input\";\n                  if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                  if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                  // Making sure that no one can \"tab\" into this field.\n                  this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                  // Not setting `display=\"none\"` because some browsers don't accept clicks\n                  // on elements that aren't displayed.\n                  this.hiddenFileInput.style.visibility = \"hidden\";\n                  this.hiddenFileInput.style.position = \"absolute\";\n                  this.hiddenFileInput.style.top = \"0\";\n                  this.hiddenFileInput.style.left = \"0\";\n                  this.hiddenFileInput.style.height = \"0\";\n                  this.hiddenFileInput.style.width = \"0\";\n                  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                  this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                      let { files: files  } = this.hiddenFileInput;\n                      if (files.length) for (let file of files)this.addFile(file);\n                      this.emit(\"addedfiles\", files);\n                      setupHiddenFileInput();\n                  });\n              };\n              setupHiddenFileInput();\n          }\n          this.URL = window.URL !== null ? window.URL : window.webkitURL;\n          // Setup all event listeners on the Dropzone object itself.\n          // They're not in @setupEventListeners() because they shouldn't be removed\n          // again when the dropzone gets disabled.\n          for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n          this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n          );\n          this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n          );\n          // Emit a `queuecomplete` event if all files finished uploading.\n          this.on(\"complete\", (file)=>{\n              if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n              return setTimeout(()=>this.emit(\"queuecomplete\")\n              , 0);\n          });\n          const containsFiles = function(e) {\n              if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n              // IE, we need to iterate like this instead of\n              // using e.dataTransfer.types.some()\n              for(var i = 0; i < e.dataTransfer.types.length; i++){\n                  if (e.dataTransfer.types[i] === \"Files\") return true;\n              }\n              return false;\n          };\n          let noPropagation = function(e) {\n              // If there are no files, we don't want to stop\n              // propagation so we don't interfere with other\n              // drag and drop behaviour.\n              if (!containsFiles(e)) return;\n              e.stopPropagation();\n              if (e.preventDefault) return e.preventDefault();\n              else return e.returnValue = false;\n          };\n          // Create the listeners\n          this.listeners = [\n              {\n                  element: this.element,\n                  events: {\n                      dragstart: (e)=>{\n                          return this.emit(\"dragstart\", e);\n                      },\n                      dragenter: (e)=>{\n                          noPropagation(e);\n                          return this.emit(\"dragenter\", e);\n                      },\n                      dragover: (e)=>{\n                          // Makes it possible to drag files from chrome's download bar\n                          // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                          // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                          let efct;\n                          try {\n                              efct = e.dataTransfer.effectAllowed;\n                          } catch (error) {\n                          }\n                          e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                          noPropagation(e);\n                          return this.emit(\"dragover\", e);\n                      },\n                      dragleave: (e)=>{\n                          return this.emit(\"dragleave\", e);\n                      },\n                      drop: (e)=>{\n                          noPropagation(e);\n                          return this.drop(e);\n                      },\n                      dragend: (e)=>{\n                          return this.emit(\"dragend\", e);\n                      }\n                  }\n              }, \n          ];\n          this.clickableElements.forEach((clickableElement)=>{\n              return this.listeners.push({\n                  element: clickableElement,\n                  events: {\n                      click: (evt)=>{\n                          // Only the actual dropzone or the message element should trigger file selection\n                          if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                          return true;\n                      }\n                  }\n              });\n          });\n          this.enable();\n          return this.options.init.call(this);\n      }\n      // Not fully tested yet\n      destroy() {\n          this.disable();\n          this.removeAllFiles(true);\n          if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n              this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n              this.hiddenFileInput = null;\n          }\n          delete this.element.dropzone;\n          return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n      }\n      updateTotalUploadProgress() {\n          let totalUploadProgress;\n          let totalBytesSent = 0;\n          let totalBytes = 0;\n          let activeFiles = this.getActiveFiles();\n          if (activeFiles.length) {\n              for (let file of this.getActiveFiles()){\n                  totalBytesSent += file.upload.bytesSent;\n                  totalBytes += file.upload.total;\n              }\n              totalUploadProgress = 100 * totalBytesSent / totalBytes;\n          } else totalUploadProgress = 100;\n          return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n      }\n      // @options.paramName can be a function taking one parameter rather than a string.\n      // A parameter name for a file is obtained simply by calling this with an index number.\n      _getParamName(n) {\n          if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n          else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n      }\n      // If @options.renameFile is a function,\n      // the function will be used to rename the file.name before appending it to the formData\n      _renameFile(file) {\n          if (typeof this.options.renameFile !== \"function\") return file.name;\n          return this.options.renameFile(file);\n      }\n      // Returns a form that can be used as fallback if the browser does not support DragnDrop\n      //\n      // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n      // This code has to pass in IE7 :(\n      getFallbackForm() {\n          let existingFallback, form;\n          if (existingFallback = this.getExistingFallback()) return existingFallback;\n          let fieldsString = '<div class=\"dz-fallback\">';\n          if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n          fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n          let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n          if (this.element.tagName !== \"FORM\") {\n              form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n              form.appendChild(fields);\n          } else {\n              // Make sure that the enctype and method attributes are set properly\n              this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n              this.element.setAttribute(\"method\", this.options.method);\n          }\n          return form != null ? form : fields;\n      }\n      // Returns the fallback elements if they exist already\n      //\n      // This code has to pass in IE7 :(\n      getExistingFallback() {\n          let getFallback = function(elements) {\n              for (let el of elements){\n                  if (/(^| )fallback($| )/.test(el.className)) return el;\n              }\n          };\n          for (let tagName of [\n              \"div\",\n              \"form\"\n          ]){\n              var fallback;\n              if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n          }\n      }\n      // Activates all listeners stored in @listeners\n      setupEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.addEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Deactivates all listeners stored in @listeners\n      removeEventListeners() {\n          return this.listeners.map((elementListeners)=>(()=>{\n                  let result = [];\n                  for(let event in elementListeners.events){\n                      let listener = elementListeners.events[event];\n                      result.push(elementListeners.element.removeEventListener(event, listener, false));\n                  }\n                  return result;\n              })()\n          );\n      }\n      // Removes all event listeners and cancels all files in the queue or being processed.\n      disable() {\n          this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n          );\n          this.removeEventListeners();\n          this.disabled = true;\n          return this.files.map((file)=>this.cancelUpload(file)\n          );\n      }\n      enable() {\n          delete this.disabled;\n          this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n          );\n          return this.setupEventListeners();\n      }\n      // Returns a nicely formatted filesize\n      filesize(size) {\n          let selectedSize = 0;\n          let selectedUnit = \"b\";\n          if (size > 0) {\n              let units = [\n                  \"tb\",\n                  \"gb\",\n                  \"mb\",\n                  \"kb\",\n                  \"b\"\n              ];\n              for(let i = 0; i < units.length; i++){\n                  let unit = units[i];\n                  let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                  if (size >= cutoff) {\n                      selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                      selectedUnit = unit;\n                      break;\n                  }\n              }\n              selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n          }\n          return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n      }\n      // Adds or removes the `dz-max-files-reached` class from the form.\n      _updateMaxFilesReachedClass() {\n          if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n              return this.element.classList.add(\"dz-max-files-reached\");\n          } else return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n      drop(e) {\n          if (!e.dataTransfer) return;\n          this.emit(\"drop\", e);\n          // Convert the FileList to an Array\n          // This is necessary for IE11\n          let files = [];\n          for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n          // Even if it's a folder, files.length will contain the folders.\n          if (files.length) {\n              let { items: items  } = e.dataTransfer;\n              if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n              this._addFilesFromItems(items);\n              else this.handleFiles(files);\n          }\n          this.emit(\"addedfiles\", files);\n      }\n      paste(e) {\n          if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n          ) == null) return;\n          this.emit(\"paste\", e);\n          let { items: items  } = e.clipboardData;\n          if (items.length) return this._addFilesFromItems(items);\n      }\n      handleFiles(files) {\n          for (let file of files)this.addFile(file);\n      }\n      // When a folder is dropped (or files are pasted), items must be handled\n      // instead of files.\n      _addFilesFromItems(items) {\n          return (()=>{\n              let result = [];\n              for (let item of items){\n                  var entry;\n                  if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                      if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                      else if (entry.isDirectory) // Append all files from that directory to files\n                      result.push(this._addFilesFromDirectory(entry, entry.name));\n                      else result.push(undefined);\n                  } else if (item.getAsFile != null) {\n                      if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                      else result.push(undefined);\n                  } else result.push(undefined);\n              }\n              return result;\n          })();\n      }\n      // Goes through the directory, and adds each file it finds recursively\n      _addFilesFromDirectory(directory, path) {\n          let dirReader = directory.createReader();\n          let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n              )\n          ;\n          var readEntries = ()=>{\n              return dirReader.readEntries((entries)=>{\n                  if (entries.length > 0) {\n                      for (let entry of entries){\n                          if (entry.isFile) entry.file((file)=>{\n                              if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                              file.fullPath = `${path}/${file.name}`;\n                              return this.addFile(file);\n                          });\n                          else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                      }\n                      // Recursively call readEntries() again, since browser only handle\n                      // the first 100 entries.\n                      // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                      readEntries();\n                  }\n                  return null;\n              }, errorHandler);\n          };\n          return readEntries();\n      }\n      // If `done()` is called without argument the file is accepted\n      // If you call it with an error message, the file is rejected\n      // (This allows for asynchronous validation)\n      //\n      // This function checks the filesize, and if the file.type passes the\n      // `acceptedFiles` check.\n      accept(file, done) {\n          if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n          else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n          else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n              done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n              this.emit(\"maxfilesexceeded\", file);\n          } else this.options.accept.call(this, file, done);\n      }\n      addFile(file) {\n          file.upload = {\n              uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n              progress: 0,\n              // Setting the total upload size to file.size for the beginning\n              // It's actual different than the size to be transmitted.\n              total: file.size,\n              bytesSent: 0,\n              filename: this._renameFile(file)\n          };\n          this.files.push(file);\n          file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n          this.emit(\"addedfile\", file);\n          this._enqueueThumbnail(file);\n          this.accept(file, (error)=>{\n              if (error) {\n                  file.accepted = false;\n                  this._errorProcessing([\n                      file\n                  ], error); // Will set the file.status\n              } else {\n                  file.accepted = true;\n                  if (this.options.autoQueue) this.enqueueFile(file);\n                   // Will set .accepted = true\n              }\n              this._updateMaxFilesReachedClass();\n          });\n      }\n      // Wrapper for enqueueFile\n      enqueueFiles(files) {\n          for (let file of files)this.enqueueFile(file);\n          return null;\n      }\n      enqueueFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n              if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n              , 0); // Deferring the call\n          } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n      _enqueueThumbnail(file) {\n          if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n              this._thumbnailQueue.push(file);\n              return setTimeout(()=>this._processThumbnailQueue()\n              , 0); // Deferring the call\n          }\n      }\n      _processThumbnailQueue() {\n          if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n          this._processingThumbnail = true;\n          let file = this._thumbnailQueue.shift();\n          return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n              this.emit(\"thumbnail\", file, dataUrl);\n              this._processingThumbnail = false;\n              return this._processThumbnailQueue();\n          });\n      }\n      // Can be called by the user to remove a file\n      removeFile(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n          this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n          this.emit(\"removedfile\", file);\n          if (this.files.length === 0) return this.emit(\"reset\");\n      }\n      // Removes all files that aren't currently processed from the list\n      removeAllFiles(cancelIfNecessary) {\n          // Create a copy of files since removeFile() changes the @files array.\n          if (cancelIfNecessary == null) cancelIfNecessary = false;\n          for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n          return null;\n      }\n      // Resizes an image before it gets sent to the server. This function is the default behavior of\n      // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n      // the resized blob.\n      resizeImage(file, width, height, resizeMethod, callback) {\n          return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n              if (canvas == null) // The image has not been resized\n              return callback(file);\n              else {\n                  let { resizeMimeType: resizeMimeType  } = this.options;\n                  if (resizeMimeType == null) resizeMimeType = file.type;\n                  let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                  if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                  resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                  return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n              }\n          });\n      }\n      createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n          let fileReader = new FileReader();\n          fileReader.onload = ()=>{\n              file.dataURL = fileReader.result;\n              // Don't bother creating a thumbnail for SVG images since they're vector\n              if (file.type === \"image/svg+xml\") {\n                  if (callback != null) callback(fileReader.result);\n                  return;\n              }\n              this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n          };\n          fileReader.readAsDataURL(file);\n      }\n      // `mockFile` needs to have these attributes:\n      //\n      //     { name: 'name', size: 12345, imageUrl: '' }\n      //\n      // `callback` will be invoked when the image has been downloaded and displayed.\n      // `crossOrigin` will be added to the `img` tag when accessing the file.\n      displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n          this.emit(\"addedfile\", mockFile);\n          this.emit(\"complete\", mockFile);\n          if (!resizeThumbnail) {\n              this.emit(\"thumbnail\", mockFile, imageUrl);\n              if (callback) callback();\n          } else {\n              let onDone = (thumbnail)=>{\n                  this.emit(\"thumbnail\", mockFile, thumbnail);\n                  if (callback) callback();\n              };\n              mockFile.dataURL = imageUrl;\n              this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n          }\n      }\n      createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n          // Not using `new Image` here because of a bug in latest Chrome versions.\n          // See https://github.com/enyo/dropzone/pull/226\n          let img = document.createElement(\"img\");\n          if (crossOrigin) img.crossOrigin = crossOrigin;\n          // fixOrientation is not needed anymore with browsers handling imageOrientation\n          fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n          img.onload = ()=>{\n              let loadExif = (callback)=>callback(1)\n              ;\n              if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                      return callback(EXIF.getTag(this, \"Orientation\"));\n                  })\n              ;\n              return loadExif((orientation)=>{\n                  file.width = img.width;\n                  file.height = img.height;\n                  let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                  let canvas = document.createElement(\"canvas\");\n                  let ctx = canvas.getContext(\"2d\");\n                  canvas.width = resizeInfo.trgWidth;\n                  canvas.height = resizeInfo.trgHeight;\n                  if (orientation > 4) {\n                      canvas.width = resizeInfo.trgHeight;\n                      canvas.height = resizeInfo.trgWidth;\n                  }\n                  switch(orientation){\n                      case 2:\n                          // horizontal flip\n                          ctx.translate(canvas.width, 0);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 3:\n                          // 180° rotate left\n                          ctx.translate(canvas.width, canvas.height);\n                          ctx.rotate(Math.PI);\n                          break;\n                      case 4:\n                          // vertical flip\n                          ctx.translate(0, canvas.height);\n                          ctx.scale(1, -1);\n                          break;\n                      case 5:\n                          // vertical flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.scale(1, -1);\n                          break;\n                      case 6:\n                          // 90° rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(0, -canvas.width);\n                          break;\n                      case 7:\n                          // horizontal flip + 90 rotate right\n                          ctx.rotate(0.5 * Math.PI);\n                          ctx.translate(canvas.height, -canvas.width);\n                          ctx.scale(-1, 1);\n                          break;\n                      case 8:\n                          // 90° rotate left\n                          ctx.rotate(-0.5 * Math.PI);\n                          ctx.translate(-canvas.height, 0);\n                          break;\n                  }\n                  // This is a bugfix for iOS' scaling bug.\n                  $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                  let thumbnail = canvas.toDataURL(\"image/png\");\n                  if (callback != null) return callback(thumbnail, canvas);\n              });\n          };\n          if (callback != null) img.onerror = callback;\n          return img.src = file.dataURL;\n      }\n      // Goes through the queue and processes files if there aren't too many already.\n      processQueue() {\n          let { parallelUploads: parallelUploads  } = this.options;\n          let processingLength = this.getUploadingFiles().length;\n          let i = processingLength;\n          // There are already at least as many files uploading than should be\n          if (processingLength >= parallelUploads) return;\n          let queuedFiles = this.getQueuedFiles();\n          if (!(queuedFiles.length > 0)) return;\n          if (this.options.uploadMultiple) // The files should be uploaded in one request\n          return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n          else while(i < parallelUploads){\n              if (!queuedFiles.length) return;\n               // Nothing left to process\n              this.processFile(queuedFiles.shift());\n              i++;\n          }\n      }\n      // Wrapper for `processFiles`\n      processFile(file) {\n          return this.processFiles([\n              file\n          ]);\n      }\n      // Loads the file, then calls finishedLoading()\n      processFiles(files) {\n          for (let file of files){\n              file.processing = true; // Backwards compatibility\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n              this.emit(\"processing\", file);\n          }\n          if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n          return this.uploadFiles(files);\n      }\n      _getFilesWithXhr(xhr) {\n          return this.files.filter((file)=>file.xhr === xhr\n          ).map((file)=>file\n          );\n      }\n      // Cancels the file upload and sets the status to CANCELED\n      // **if** the file is actually being uploaded.\n      // If it's still in the queue, the file is being removed from it and the status\n      // set to CANCELED.\n      cancelUpload(file) {\n          if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n              let groupedFiles = this._getFilesWithXhr(file.xhr);\n              for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n              for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n          } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n              this.emit(\"canceled\", file);\n              if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                  file\n              ]);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      resolveOption(option, ...args) {\n          if (typeof option === \"function\") return option.apply(this, args);\n          return option;\n      }\n      uploadFile(file) {\n          return this.uploadFiles([\n              file\n          ]);\n      }\n      uploadFiles(files) {\n          this._transformFiles(files, (transformedFiles)=>{\n              if (this.options.chunking) {\n                  // Chunking is not allowed to be used with `uploadMultiple` so we know\n                  // that there is only __one__file.\n                  let transformedFile = transformedFiles[0];\n                  files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                  files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n              }\n              if (files[0].upload.chunked) {\n                  // This file should be sent in chunks!\n                  // If the chunking option is set, we **know** that there can only be **one** file, since\n                  // uploadMultiple is not allowed with this option.\n                  let file = files[0];\n                  let transformedFile = transformedFiles[0];\n                  file.upload.chunks = [];\n                  let handleNextChunk = ()=>{\n                      let chunkIndex = 0;\n                      // Find the next item in file.upload.chunks that is not defined yet.\n                      while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                      // This means, that all chunks have already been started.\n                      if (chunkIndex >= file.upload.totalChunkCount) return;\n                      let start = chunkIndex * this.options.chunkSize;\n                      let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                      let dataBlock = {\n                          name: this._getParamName(0),\n                          data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                          filename: file.upload.filename,\n                          chunkIndex: chunkIndex\n                      };\n                      file.upload.chunks[chunkIndex] = {\n                          file: file,\n                          index: chunkIndex,\n                          dataBlock: dataBlock,\n                          status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                          progress: 0,\n                          retries: 0\n                      };\n                      this._uploadData(files, [\n                          dataBlock\n                      ]);\n                  };\n                  file.upload.finishedChunkUpload = (chunk, response)=>{\n                      let allFinished = true;\n                      chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                      // Clear the data from the chunk\n                      chunk.dataBlock = null;\n                      chunk.response = chunk.xhr.responseText;\n                      chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                      // Leaving this reference to xhr will cause memory leaks.\n                      chunk.xhr = null;\n                      for(let i = 0; i < file.upload.totalChunkCount; i++){\n                          if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                          if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                      }\n                      if (allFinished) this.options.chunksUploaded(file, ()=>{\n                          this._finished(files, response, null);\n                      });\n                  };\n                  if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                  else handleNextChunk();\n              } else {\n                  let dataBlocks = [];\n                  for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                      name: this._getParamName(i),\n                      data: transformedFiles[i],\n                      filename: files[i].upload.filename\n                  };\n                  this._uploadData(files, dataBlocks);\n              }\n          });\n      }\n      /// Returns the right chunk for given file and xhr\n      _getChunk(file, xhr) {\n          for(let i = 0; i < file.upload.totalChunkCount; i++){\n              if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n          }\n      }\n      // This function actually uploads the file(s) to the server.\n      //\n      //  If dataBlocks contains the actual data to upload (meaning, that this could\n      // either be transformed files, or individual chunks for chunked upload) then\n      // they will be used for the actual data to upload.\n      _uploadData(files, dataBlocks) {\n          let xhr = new XMLHttpRequest();\n          // Put the xhr object in the file objects to be able to reference it later.\n          for (let file of files)file.xhr = xhr;\n          if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n          // later, and found with _getChunk.\n          files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n          let method = this.resolveOption(this.options.method, files, dataBlocks);\n          let url = this.resolveOption(this.options.url, files, dataBlocks);\n          xhr.open(method, url, true);\n          // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n          let timeout = this.resolveOption(this.options.timeout, files);\n          if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n          // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n          xhr.withCredentials = !!this.options.withCredentials;\n          xhr.onload = (e)=>{\n              this._finishedUploading(files, xhr, e);\n          };\n          xhr.ontimeout = ()=>{\n              this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n          };\n          xhr.onerror = ()=>{\n              this._handleUploadError(files, xhr);\n          };\n          // Some browsers do not have the .upload property\n          let progressObj = xhr.upload != null ? xhr.upload : xhr;\n          progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n          ;\n          let headers = this.options.defaultHeaders ? {\n              Accept: \"application/json\",\n              \"Cache-Control\": \"no-cache\",\n              \"X-Requested-With\": \"XMLHttpRequest\"\n          } : {\n          };\n          if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n          if (this.options.headers) objectExtend(headers, this.options.headers);\n          for(let headerName in headers){\n              let headerValue = headers[headerName];\n              if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n          }\n          if (this.options.binaryBody) {\n              // Since the file is going to be sent as binary body, it doesn't make\n              // any sense to generate `FormData` for it.\n              for (let file of files)this.emit(\"sending\", file, xhr);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n              this.submitRequest(xhr, null, files);\n          } else {\n              let formData = new FormData();\n              // Adding all @options parameters\n              if (this.options.params) {\n                  let additionalParams = this.options.params;\n                  if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                  for(let key in additionalParams){\n                      let value = additionalParams[key];\n                      if (Array.isArray(value)) // The additional parameter contains an array,\n                      // so lets iterate over it to attach each value\n                      // individually.\n                      for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                      else formData.append(key, value);\n                  }\n              }\n              // Let the user add additional data if necessary\n              for (let file of files)this.emit(\"sending\", file, xhr, formData);\n              if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n              this._addFormElementData(formData);\n              // Finally add the files\n              // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n              for(let i = 0; i < dataBlocks.length; i++){\n                  let dataBlock = dataBlocks[i];\n                  formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n              }\n              this.submitRequest(xhr, formData, files);\n          }\n      }\n      // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n      _transformFiles(files, done) {\n          let transformedFiles = [];\n          // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n          let doneCounter = 0;\n          for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n              transformedFiles[i] = transformedFile;\n              if (++doneCounter === files.length) done(transformedFiles);\n          });\n      }\n      // Takes care of adding other input elements of the form to the AJAX request\n      _addFormElementData(formData) {\n          // Take care of other input elements\n          if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n              let inputName = input.getAttribute(\"name\");\n              let inputType = input.getAttribute(\"type\");\n              if (inputType) inputType = inputType.toLowerCase();\n              // If the input doesn't have a name, we can't use it.\n              if (typeof inputName === \"undefined\" || inputName === null) continue;\n              if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                  // Possibly multiple values\n                  for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n              } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n          }\n      }\n      // Invoked when there is new progress information about given files.\n      // If e is not provided, it is assumed that the upload is finished.\n      _updateFilesUploadProgress(files, xhr, e) {\n          if (!files[0].upload.chunked) // Handle file uploads without chunking\n          for (let file of files){\n              if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n              if (e) {\n                  file.upload.progress = 100 * e.loaded / e.total;\n                  file.upload.total = e.total;\n                  file.upload.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  file.upload.progress = 100;\n                  file.upload.bytesSent = file.upload.total;\n              }\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n          else {\n              // Handle chunked file uploads\n              // Chunked upload is not compatible with uploading multiple files in one\n              // request, so we know there's only one file.\n              let file = files[0];\n              // Since this is a chunked upload, we need to update the appropriate chunk\n              // progress.\n              let chunk = this._getChunk(file, xhr);\n              if (e) {\n                  chunk.progress = 100 * e.loaded / e.total;\n                  chunk.total = e.total;\n                  chunk.bytesSent = e.loaded;\n              } else {\n                  // No event, so we're at 100%\n                  chunk.progress = 100;\n                  chunk.bytesSent = chunk.total;\n              }\n              // Now tally the *file* upload progress from its individual chunks\n              file.upload.progress = 0;\n              file.upload.total = 0;\n              file.upload.bytesSent = 0;\n              for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                  file.upload.progress += file.upload.chunks[i].progress;\n                  file.upload.total += file.upload.chunks[i].total;\n                  file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n              }\n              // Since the process is a percentage, we need to divide by the amount of\n              // chunks we've used.\n              file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n              this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n          }\n      }\n      _finishedUploading(files, xhr, e) {\n          let response;\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (xhr.readyState !== 4) return;\n          if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n              response = xhr.responseText;\n              if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                  response = JSON.parse(response);\n              } catch (error) {\n                  e = error;\n                  response = \"Invalid JSON response from server.\";\n              }\n          }\n          this._updateFilesUploadProgress(files, xhr);\n          if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n          else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n          else this._finished(files, response, e);\n      }\n      _handleUploadError(files, xhr, response) {\n          if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n          if (files[0].upload.chunked && this.options.retryChunks) {\n              let chunk = this._getChunk(files[0], xhr);\n              if ((chunk.retries++) < this.options.retryChunksLimit) {\n                  this._uploadData(files, [\n                      chunk.dataBlock\n                  ]);\n                  return;\n              } else console.warn(\"Retried this chunk too often. Giving up.\");\n          }\n          this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n      }\n      submitRequest(xhr, formData, files) {\n          if (xhr.readyState != 1) {\n              console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n              return;\n          }\n          if (this.options.binaryBody) {\n              if (files[0].upload.chunked) {\n                  const chunk = this._getChunk(files[0], xhr);\n                  xhr.send(chunk.dataBlock.data);\n              } else xhr.send(files[0]);\n          } else xhr.send(formData);\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _finished(files, responseText, e) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n              this.emit(\"success\", file, responseText, e);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"successmultiple\", files, responseText, e);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      // Called internally when processing is finished.\n      // Individual callbacks have to be called in the appropriate sections.\n      _errorProcessing(files, message, xhr) {\n          for (let file of files){\n              file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n              this.emit(\"error\", file, message, xhr);\n              this.emit(\"complete\", file);\n          }\n          if (this.options.uploadMultiple) {\n              this.emit(\"errormultiple\", files, message, xhr);\n              this.emit(\"completemultiple\", files);\n          }\n          if (this.options.autoProcessQueue) return this.processQueue();\n      }\n      static uuidv4() {\n          return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n              let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n              return v.toString(16);\n          });\n      }\n      constructor(el, options){\n          super();\n          let fallback, left;\n          this.element = el;\n          this.clickableElements = [];\n          this.listeners = [];\n          this.files = []; // All files\n          if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n          // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n          if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n          if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n          // Now add this dropzone to the instances.\n          $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n          // Put the dropzone inside the element itself.\n          this.element.dropzone = this;\n          let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n          };\n          this.options = objectExtend(true, {\n          }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n          });\n          this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n          // If the browser failed, just call the fallback and leave\n          if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n          // @options.url = @element.getAttribute \"action\" unless @options.url?\n          if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n          if (!this.options.url) throw new Error(\"No URL provided.\");\n          if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n          if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n          if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n          // Backwards compatibility\n          if (this.options.acceptedMimeTypes) {\n              this.options.acceptedFiles = this.options.acceptedMimeTypes;\n              delete this.options.acceptedMimeTypes;\n          }\n          // Backwards compatibility\n          if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n          ;\n          if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n          if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n          fallback.parentNode.removeChild(fallback);\n          // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n          if (this.options.previewsContainer !== false) {\n              if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n              else this.previewsContainer = this.element;\n          }\n          if (this.options.clickable) {\n              if (this.options.clickable === true) this.clickableElements = [\n                  this.element\n              ];\n              else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n          }\n          this.init();\n      }\n  }\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n  // This is a map of options for your different dropzones. Add configurations\n  // to this object for your different dropzone elemens.\n  //\n  // Example:\n  //\n  //     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n  //\n  // And in html:\n  //\n  //     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n  };\n  // Returns the options for an element or undefined if none available.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n      // Get the `Dropzone.options.elementId` for this element if it exists\n      if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n      else return undefined;\n  };\n  // Holds a list of all dropzone instances\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n  // Returns the dropzone for given element if any\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n      if (typeof element === \"string\") element = document.querySelector(element);\n      if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n      return element.dropzone;\n  };\n  // Looks for all .dropzone elements and creates a dropzone for them\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n      let dropzones;\n      if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n      else {\n          dropzones = [];\n          // IE :(\n          let checkElements = (elements)=>(()=>{\n                  let result = [];\n                  for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                  else result.push(undefined);\n                  return result;\n              })()\n          ;\n          checkElements(document.getElementsByTagName(\"div\"));\n          checkElements(document.getElementsByTagName(\"form\"));\n      }\n      return (()=>{\n          let result = [];\n          for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n          if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n          else result.push(undefined);\n          return result;\n      })();\n  };\n  // Some browsers support drag and drog functionality, but not correctly.\n  //\n  // So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n  // But what to do when browsers *theoretically* support an API, but crash\n  // when using it.\n  //\n  // This is a list of regular expressions tested against navigator.userAgent\n  //\n  // ** It should only be used on browser that *do* support the API, but\n  // incorrectly **\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n      // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n      /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n  ];\n  // Checks if the browser is supported\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n      let capableBrowser = true;\n      if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n          if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n          else {\n              if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n              // configuration.\n              $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n              // The browser supports the API, but may be blocked.\n              for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                  capableBrowser = false;\n                  continue;\n              }\n          }\n      } else capableBrowser = false;\n      return capableBrowser;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n      // convert base64 to raw binary data held in a string\n      // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n      let byteString = atob(dataURI.split(\",\")[1]);\n      // separate out the mime component\n      let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n      // write the bytes of the string to an ArrayBuffer\n      let ab = new ArrayBuffer(byteString.length);\n      let ia = new Uint8Array(ab);\n      for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n      // write the ArrayBuffer to a blob\n      return new Blob([\n          ab\n      ], {\n          type: mimeString\n      });\n  };\n  // Returns an array without the rejected item\n  const $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n      ).map((item)=>item\n      )\n  ;\n  // abc-def_ghi -> abcDefGhi\n  const $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n      )\n  ;\n  // Creates an element from string\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n      let div = document.createElement(\"div\");\n      div.innerHTML = string;\n      return div.childNodes[0];\n  };\n  // Tests if given element is inside (or simply is) the container\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n      if (element === container) return true;\n       // Coffeescript doesn't support do/while loops\n      while(element = element.parentNode){\n          if (element === container) return true;\n      }\n      return false;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n      let element;\n      if (typeof el === \"string\") element = document.querySelector(el);\n      else if (el.nodeType != null) element = el;\n      if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n      return element;\n  };\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n      let el, elements;\n      if (els instanceof Array) {\n          elements = [];\n          try {\n              for (el of els)elements.push(this.getElement(el, name));\n          } catch (e) {\n              elements = null;\n          }\n      } else if (typeof els === \"string\") {\n          elements = [];\n          for (el of document.querySelectorAll(els))elements.push(el);\n      } else if (els.nodeType != null) elements = [\n          els\n      ];\n      if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n      return elements;\n  };\n  // Asks the user the question and calls accepted or rejected accordingly\n  //\n  // The default implementation just uses `window.confirm` and then calls the\n  // appropriate callback.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n      if (window.confirm(question)) return accepted();\n      else if (rejected != null) return rejected();\n  };\n  // Validates the mime type like this:\n  //\n  // https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n      if (!acceptedFiles) return true;\n       // If there are no accepted mime types, it's OK\n      acceptedFiles = acceptedFiles.split(\",\");\n      let mimeType = file.type;\n      let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n      for (let validType of acceptedFiles){\n          validType = validType.trim();\n          if (validType.charAt(0) === \".\") {\n              if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n          } else if (/\\/\\*$/.test(validType)) {\n              // This is something like a image/* mime type\n              if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n          } else {\n              if (mimeType === validType) return true;\n          }\n      }\n      return false;\n  };\n  // Augment jQuery\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n          return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n      });\n  };\n  // Dropzone file status codes\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n  // For backwards compatibility. Now, if a file is accepted, it's either queued\n  // or uploading.\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n  $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n  /*\n\n   Bugfix for iOS 6 and 7\n   Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n   based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n   */ // Detecting vertical squash in loaded image.\n  // Fixes a bug which squash image vertically while drawing into canvas for some images.\n  // This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n  let $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n      img.naturalWidth;\n      let ih = img.naturalHeight;\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = ih;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n      // search image edge pixel position in case it is squashed vertically.\n      let sy = 0;\n      let ey = ih;\n      let py = ih;\n      while(py > sy){\n          let alpha = data[(py - 1) * 4 + 3];\n          if (alpha === 0) ey = py;\n          else sy = py;\n          py = ey + sy >> 1;\n      }\n      let ratio = py / ih;\n      if (ratio === 0) return 1;\n      else return ratio;\n  };\n  // A replacement for context.drawImage\n  // (args are for source and destination).\n  var $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n      return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n  // Based on MinifyJpeg\n  // Source: http://www.perry.cz/files/ExifRestorer.js\n  // http://elicon.blog57.fc2.com/blog-entry-206.html\n  class $3ed269f2f0fb224b$var$ExifRestore {\n      static initClass() {\n          this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      }\n      static encode64(input) {\n          let output = \"\";\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          while(true){\n              chr1 = input[i++];\n              chr2 = input[i++];\n              chr3 = input[i++];\n              enc1 = chr1 >> 2;\n              enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n              enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n              enc4 = chr3 & 63;\n              if (isNaN(chr2)) enc3 = enc4 = 64;\n              else if (isNaN(chr3)) enc4 = 64;\n              output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return output;\n      }\n      static restore(origFileBase64, resizedFileBase64) {\n          if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n          let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n          let segments = this.slice2Segments(rawImage);\n          let image = this.exifManipulation(resizedFileBase64, segments);\n          return `data:image/jpeg;base64,${this.encode64(image)}`;\n      }\n      static exifManipulation(resizedFileBase64, segments) {\n          let exifArray = this.getExifArray(segments);\n          let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n          let aBuffer = new Uint8Array(newImageArray);\n          return aBuffer;\n      }\n      static getExifArray(segments) {\n          let seg = undefined;\n          let x = 0;\n          while(x < segments.length){\n              seg = segments[x];\n              if (seg[0] === 255 & seg[1] === 225) return seg;\n              x++;\n          }\n          return [];\n      }\n      static insertExif(resizedFileBase64, exifArray) {\n          let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n          let buf = this.decode64(imageData);\n          let separatePoint = buf.indexOf(255, 3);\n          let mae = buf.slice(0, separatePoint);\n          let ato = buf.slice(separatePoint);\n          let array = mae;\n          array = array.concat(exifArray);\n          array = array.concat(ato);\n          return array;\n      }\n      static slice2Segments(rawImageArray) {\n          let head = 0;\n          let segments = [];\n          while(true){\n              var length;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n              if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n              else {\n                  length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                  let endPoint = head + length + 2;\n                  let seg = rawImageArray.slice(head, endPoint);\n                  segments.push(seg);\n                  head = endPoint;\n              }\n              if (head > rawImageArray.length) break;\n          }\n          return segments;\n      }\n      static decode64(input) {\n          let chr1 = undefined;\n          let chr2 = undefined;\n          let chr3 = \"\";\n          let enc1 = undefined;\n          let enc2 = undefined;\n          let enc3 = undefined;\n          let enc4 = \"\";\n          let i = 0;\n          let buf = [];\n          // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n          let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n          if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n          input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n          while(true){\n              enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n              enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n              chr1 = enc1 << 2 | enc2 >> 4;\n              chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n              chr3 = (enc3 & 3) << 6 | enc4;\n              buf.push(chr1);\n              if (enc3 !== 64) buf.push(chr2);\n              if (enc4 !== 64) buf.push(chr3);\n              chr1 = chr2 = chr3 = \"\";\n              enc1 = enc2 = enc3 = enc4 = \"\";\n              if (!(i < input.length)) break;\n          }\n          return buf;\n      }\n  }\n  $3ed269f2f0fb224b$var$ExifRestore.initClass();\n  function $3ed269f2f0fb224b$var$__guard__(value, transform) {\n      return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n  }\n  function $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n      if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n      else return undefined;\n  }\n\n  if (document.querySelector('div.form__dropzone')) {\n    new $3ed269f2f0fb224b$export$2e2bcd8739ae039(\"div.form__dropzone\", {\n      url: \"/file/post\",\n      createImageThumbnails: false,\n      dictDefaultMessage: 'Here'\n    });\n  }\n\n}());\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\r\n * Animate\r\n * ======================================\r\n * - add class to element in viewport\r\n * - if you want disable animate delay on mobile use [animate-delay-desktop]\r\n * - set animation delay via [animate-delay] html attribute\r\n * - set visible threshold via [animate-threshold] html attribute\r\n */\r\n\r\n const ISMOBILE = window.matchMedia(\"only screen and (max-width: 768px)\").matches\r\n const THRESHOLD = '0.75'\r\n const LOAD_THRESHOLD = '0.2'\r\n const ELEMENTS = '.animate'\r\n const VISIBLE_CLASS = 'animate--visible'\r\n\r\n class Animate {\r\n   constructor() {\r\n    this.sections = document.querySelectorAll(ELEMENTS)\r\n    this.THRESHOLD = THRESHOLD\r\n    this.LOAD_THRESHOLD = LOAD_THRESHOLD\r\n\r\n      if('IntersectionObserver' in window) {\r\n        this.sections.forEach((el) => {\r\n         const BoundingClientRect = el.getBoundingClientRect()\r\n         const visibleRatio =  BoundingClientRect.height / window.innerHeight\r\n\r\n         if(visibleRatio > 0.95){\r\n           this.THRESHOLD =  window.innerHeight / BoundingClientRect.height / 100 * 30\r\n           this.LOAD_THRESHOLD = window.innerHeight / BoundingClientRect.height / 100 * 20\r\n         }\r\n\r\n          // observe on page load\r\n          const loadObserver = new IntersectionObserver(this.observeCallback, {\r\n            threshold: this.LOAD_THRESHOLD\r\n          });\r\n          loadObserver.observe(el);\r\n\r\n\r\n          setTimeout(() => {\r\n            loadObserver.disconnect();\r\n          }, 100);\r\n\r\n          // observe\r\n          const observerThreshold = el.getAttribute('animate-threshold') ? el.getAttribute('animate-threshold') : this.THRESHOLD\r\n          const observer = new IntersectionObserver(this.observeCallback, {\r\n            threshold: observerThreshold\r\n          });\r\n          observer.observe(el);\r\n        })\r\n      } else {\r\n        this.sections.forEach((el) => {\r\n          el.classList.add(VISIBLE_CLASS)\r\n        })\r\n      }\r\n   }\r\n\r\n    observeCallback = (entries) => {\r\n      entries.map((entry) => {\r\n        const section = entry.target;\r\n        const delay = this.getDelay(section)\r\n        const sectionBodyClass = section.getAttribute('animate-body-class')\r\n\r\n        if (entry.isIntersecting) {\r\n          if(ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n            section.classList.add(VISIBLE_CLASS)\r\n\r\n            this.bodyClass(sectionBodyClass, 'add')\r\n          } else {\r\n            setTimeout(() => {\r\n              section.classList.add(VISIBLE_CLASS)\r\n              this.bodyClass(sectionBodyClass, 'add')\r\n            }, delay)\r\n          }\r\n        } else {\r\n          this.bodyClass(sectionBodyClass, 'remove')\r\n        }\r\n      });\r\n    }\r\n\r\n   getDelay = (section) => {\r\n   var delay = section.getAttribute('animate-delay')\r\n\r\n   if(!ISMOBILE && section.getAttribute('animate-delay-desktop')){\r\n     var delay = section.getAttribute('animate-delay-desktop')\r\n   }\r\n\r\n   if (delay === null) {\r\n     return 0\r\n   } else if (delay.includes('.')) {\r\n     return parseInt(delay * 1000)\r\n   } else {\r\n     return parseInt(delay)\r\n   }\r\n   }\r\n\r\n   bodyClass = (htmlclass, type) => {\r\n     if(!htmlclass){\r\n       return\r\n     }\r\n\r\n      if(type == 'add'){\r\n        document.body.classList.add(htmlclass)\r\n      } else {\r\n        document.body.classList.remove(htmlclass)\r\n      }\r\n    }\r\n }\r\n\r\n new Animate()\r\n","/*!\n * Splide.js\n * Version  : 3.2.5\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\n\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = ref.parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, (attr) => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    const { style: style2 } = elm;\n    value = `${value}`;\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition, message = \"\") {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n  function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n  function emit(event) {\n    (handlers[event] || []).forEach((handler) => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n  function destroy() {\n    handlers = {};\n  }\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const { event } = Splide2;\n  const key = {};\n  let listeners = [];\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  function off(events) {\n    event.off(events, key);\n  }\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter((listener) => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, (target) => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  function destroy() {\n    listeners = listeners.filter((data) => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const { now } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n      if (rate === 1) {\n        onInterval();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      raf(update);\n    }\n  }\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return { set, is };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n    initialOptions = merge({}, options);\n    const { breakpoints } = options;\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n        point,\n        matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n      ]);\n      observe();\n    }\n  }\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function observe() {\n    const item = find(points, (item2) => item2[1].matches) || [];\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n      Splide2.options = newOptions;\n    }\n  }\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\n\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const { direction } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n  function destroy() {\n    [root, track, list].forEach((elm) => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n  function refresh() {\n    destroy();\n    setup();\n  }\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  function getClasses() {\n    return [\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE\n    ];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  TAB_INDEX,\n  DISABLED\n];\n\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n  const { Components, root, options } = Splide2;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n  function mount() {\n    init();\n    bind(slide, \"click keydown\", (e) => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove.bind(this));\n    }\n  }\n  function init() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n    if (isNavigation) {\n      const idx = isClone ? slideIndex : index;\n      const label = format(options.i18n.slideX, idx + 1);\n      const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n      setAttribute(slide, ARIA_LABEL, label);\n      setAttribute(slide, ARIA_CONTROLS, controls);\n      setAttribute(slide, ROLE, \"menuitem\");\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n  function onMove(next, prev, dest) {\n    if (!destroyed) {\n      update.call(this);\n      if (dest === index) {\n        updateActivity.call(this, true);\n      }\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      const { index: currIndex } = Splide2;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n  function updateVisibility(visible) {\n    const ariaHidden = !visible && !isActive();\n    setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n    setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n    if (focusableNodes) {\n      focusableNodes.forEach((node) => {\n        setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n      });\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    return Splide2.index === index;\n  }\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n    return diff <= distance;\n  }\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    style: style$1,\n    isWithin\n  };\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const { on, emit, bind } = EventInterface(Splide2);\n  const { slides, list } = Components2.Elements;\n  const Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1((Slide2) => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n  }\n  function getIn(page) {\n    const { Controller } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, (slide) => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map((Slide2) => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n  function style(prop, value, useContainer) {\n    forEach$1((Slide2) => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let { length } = images;\n    if (length) {\n      images.forEach((img) => {\n        bind(img, \"load error\", () => {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const { root, track, list } = Components2.Elements;\n  const { getAt } = Slides;\n  let vertical;\n  let rootRect;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n  function resize() {\n    const newRect = rect(root);\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      Slides.style(resolve(\"marginRight\"), unit(options.gap));\n      Slides.style(\"width\", cssSlideWidth() || null);\n      setSlidesHeight();\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n  function cssPadding(right) {\n    const { padding } = options;\n    const prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    let height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n  }\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Elements, Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n  function computeCloneCount() {\n    let { clones: clones2 } = options;\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n  const { resolve, orient } = Components2.Direction;\n  const { list, track } = Components2.Elements;\n  let waiting;\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n  function reposition() {\n    if (!isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const { set } = Splide2.state;\n      const position = getPosition();\n      const looping = dest !== index;\n      waiting = looping || options.waitForTransition;\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Components2.Transition.start(dest, () => {\n        looping && jump(index);\n        waiting = false;\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n    }\n  }\n  function loop(position) {\n    if (!waiting && Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= sign(excess) * size * ceil(abs(excess) / size);\n    return position;\n  }\n  function cancel() {\n    waiting = false;\n    translate(getPosition());\n    Components2.Transition.cancel();\n  }\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    const { focus } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function isBusy() {\n    return !!waiting;\n  }\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit } = Move;\n  const { isEnough, getLength } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    let index = currIndex;\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      if (isLoop) {\n        index = clamp(control, -perPage, slideCount + perPage - 1);\n      } else {\n        index = clamp(control, 0, getEnd());\n      }\n    }\n    return index;\n  }\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function getEnd() {\n    let end = slideCount - perPage;\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n    return max(end, 0);\n  }\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n    return index;\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n    return index;\n  }\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n    if (prev && next) {\n      if (!arrows.prev) {\n        const { id } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    const { go } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nfunction Autoplay(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Elements } = Components2;\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const { isPaused } = interval;\n  let hovered;\n  let focused;\n  let paused;\n  function mount() {\n    const { autoplay } = options;\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n  function listen() {\n    const { root } = Elements;\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", (e) => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", (e) => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(manual = true) {\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n    paused = manual;\n  }\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  function update(rate) {\n    const { bar } = Elements;\n    if (bar) {\n      style(bar, \"width\", `${rate * 100}%`);\n    }\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  function destroy() {\n    apply(false);\n  }\n  function apply(cover) {\n    Components2.Slides.forEach((Slide) => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit, exceededLimit } = Move;\n  let interval;\n  let scrollCallback;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, (rate) => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  function easing(t) {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Move, Scroll, Controller } = Components2;\n  const { track } = Components2.Elements;\n  const { resolve, orient } = Components2.Direction;\n  const { getPosition, exceededLimit } = Move;\n  const listenerOptions = { passive: false, capture: true };\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n    bind(track, \"click\", onClick, { capture: true });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    const { drag } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    if (!disabled) {\n      const { noDrag } = options;\n      const isTouch = isTouchEvent(e);\n      const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n      if (isDraggable && (isTouch || !e.button)) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          clickPrevented = false;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n    lastEvent = e;\n    if (e.cancelable) {\n      const diff = coordOf(e) - coordOf(baseEvent);\n      if (dragging) {\n        Move.translate(basePosition + constrain(diff));\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n        if (expired || exceeded) {\n          save(e);\n        }\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        let { dragMinThreshold: thresholds } = options;\n        thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n        dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(Splide2.index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n        prevent(e);\n      }\n      emit(EVENT_DRAGGED);\n    }\n    dragging = false;\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\nfunction Keyboard(Splide2, Components2, options) {\n  const { on, bind, unbind } = EventInterface(Splide2);\n  const { root } = Components2.Elements;\n  const { resolve } = Components2.Direction;\n  let target;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, () => {\n      destroy();\n      init();\n    });\n  }\n  function init() {\n    const { keyboard = \"global\" } = options;\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n      bind(target, \"keydown\", onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, \"keydown\");\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n  function onKeydown(e) {\n    const { key } = e;\n    const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n    if (normalizedKey === resolve(\"ArrowLeft\")) {\n      Splide2.go(\"<\");\n    } else if (normalizedKey === resolve(\"ArrowRight\")) {\n      Splide2.go(\">\");\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const { on, off, bind, emit } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        destroy();\n        init();\n      });\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n  function init() {\n    Components2.Slides.forEach((_Slide) => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({ _img, _Slide, src, srcset, _spinner });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  function observe() {\n    images = images.filter((data) => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n      return true;\n    });\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  function load(data) {\n    const { _img } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", (e) => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach((name) => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  function onLoad(data, error) {\n    const { _Slide } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Slides, Elements, Controller } = Components2;\n  const { hasFocus, getIndex } = Controller;\n  const items = [];\n  let list;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  function init() {\n    destroy();\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n      update();\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach((item) => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  function createPagination() {\n    const { length } = Splide2;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n      const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({ li, button, page: i });\n    }\n  }\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n    emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\nfunction Sync(Splide2, Components2, options) {\n  const { splides } = Splide2;\n  const { list } = Components2.Elements;\n  function mount() {\n    if (options.isNavigation) {\n      navigate();\n    } else {\n      sync();\n    }\n  }\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n  }\n  function sync() {\n    const processed = [];\n    splides.concat(Splide2).forEach((splide, index, instances) => {\n      EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n        instances.forEach((instance) => {\n          if (instance !== splide && !includes(processed, splide)) {\n            processed.push(instance);\n            instance.go(instance.is(LOOP) ? dest : index2);\n          }\n        });\n        empty(processed);\n      });\n    });\n  }\n  function navigate() {\n    const { on, emit } = EventInterface(Splide2);\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n    }\n  }\n  function onWheel(e) {\n    const { deltaY } = e;\n    if (deltaY) {\n      Splide2.go(deltaY < 0 ? \"<\" : \">\");\n      prevent(e);\n    }\n  }\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\n\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n  function start(index, done) {\n    const { track } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  const { Move, Controller } = Components2;\n  const { list } = Components2.Elements;\n  let endCallback;\n  function mount() {\n    bind(list, \"transitionend\", (e) => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    apply(\"\");\n  }\n  function getSpeed(index) {\n    const { rewindSpeed } = options;\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n  mount(Extensions, Transition) {\n    const { state, Components: Components2 } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, (component) => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  sync(splide) {\n    this.splides.push(splide);\n    splide.splides.push(this);\n    return this;\n  }\n  go(control) {\n    this._Components.Controller.go(control);\n    return this;\n  }\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n    return this;\n  }\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n    return this;\n  }\n  is(type) {\n    return this._options.type === type;\n  }\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  destroy(completely = true) {\n    const { event, state } = this;\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, (component) => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    const { _options } = this;\n    merge(_options, options);\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n};\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\nconst CLASS_RENDERED = \"is-rendered\";\n\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n  build() {\n    let css = \"\";\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach((breakpoint) => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      css += `#${this.id} ${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n  static clean(splide) {\n    const { on } = EventInterface(splide);\n    const { root } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? { html: content } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n  registerRootStyles() {\n    this.breakpoints.forEach(([width, options]) => {\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n  registerTrackStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n  registerListStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n    });\n  }\n  registerSlideStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      const height = this.cssSlideHeight(options);\n      if (height) {\n        Style2.rule(selector, \"height\", height, width);\n      } else {\n        Style2.rule(selector, \"padding-top\", this.cssSlidePadding(options), width);\n      }\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n  buildTranslate(options) {\n    const { resolve, orient } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n    return values.filter(Boolean).map((value) => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n  cssOffsetClones(options) {\n    const { resolve, orient } = this.Direction;\n    const cloneCount = this.getCloneCount();\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n  cssOffsetCenter(options) {\n    const { resolve, orient } = this.Direction;\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n    const values = [];\n    const { perPage, gap } = options;\n    values.push(`${orient(50 / perPage)}%`);\n    if (gap) {\n      const { value, unit: unit2 } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n    return values;\n  }\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n    if (cloneCount && options.gap) {\n      const { orient } = this.Direction;\n      const { value, unit: unit2 } = this.parseCssValue(options.gap);\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n      const { perPage } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n    return \"\";\n  }\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n  cssPadding(options, right) {\n    const { padding } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  cssTrackHeight(options) {\n    let height = \"\";\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n    return height;\n  }\n  cssHeight(options) {\n    return unit(options.height);\n  }\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  cssSlidePadding(options) {\n    const { heightRatio } = options;\n    return heightRatio ? `${heightRatio * 100}%` : \"\";\n  }\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return { value: number, unit: unit2 };\n    }\n    return { value, unit: \"px\" };\n  }\n  parseBreakpoints() {\n    const { breakpoints } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n    return false;\n  }\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n  buildClasses() {\n    const { options } = this;\n    return [\n      CLASS_ROOT,\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE,\n      !this.config.hidden && CLASS_RENDERED\n    ].filter(Boolean).join(\" \");\n  }\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n  renderSlides() {\n    const { slideTag: tag } = this.config;\n    return this.slides.map((content) => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n  cover(content) {\n    const { styles, html = \"\" } = content;\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n  generateClones(contents) {\n    const { classes } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, { class: `${content.attrs.class} ${classes.clone}` });\n      const clone = assign({}, content, { attrs });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n  getCloneCount() {\n    if (this.isLoop()) {\n      const { options } = this;\n      if (options.clones) {\n        return options.clones;\n      }\n      const perPage = max(...this.breakpoints.map(([, options2]) => options2.perPage));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n    return 0;\n  }\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n  renderArrow(prev) {\n    const { classes, i18n } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n  html() {\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n    html += beforeTrack || \"\";\n    if (arrows) {\n      html += this.renderArrows();\n    }\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n    html += `</div>`;\n    return html;\n  }\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };\n","import Splide from '@splidejs/splide';\r\n\r\n\r\nif (document.querySelector('#carousel')) {\r\n  new Splide( '#carousel', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 4,\r\n    perMove: 1,\r\n    gap: 32,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n      },\r\n      767: {\r\n        perPage: 2,\r\n        gap: 10,\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n\r\nif (document.querySelector('#testimonials')) {\r\n  new Splide( '#testimonials', {\r\n    pagination: false,\r\n    type: 'slide',\r\n    perPage: 3,\r\n    perMove: 1,\r\n    gap: 28,\r\n    breakpoints: {\r\n      500: {\r\n        perPage: 1,\r\n        gap: 10,\r\n      },\r\n      767: {\r\n        perPage: 2,\r\n        gap: 10,\r\n      },\r\n      1024: {\r\n        perPage: 2,\r\n        gap: 16,\r\n      },\r\n      1400: {\r\n        perPage: 3,\r\n        gap: 32,\r\n      },\r\n    }\r\n  } ).mount();\r\n}\r\n","/**\r\n * Toggle Nav\r\n * ======================================\r\n * - toggle class on body\r\n */\r\n\r\nconst ELEMENTS = '.togglenav__button'\r\nconst TOGGLE_CLASS = 'nav-is-open'\r\n\r\nclass ToggleNav {\r\n  constructor() {\r\n    this.elements = document.querySelectorAll(ELEMENTS)\r\n\r\n    if (!this.elements) {\r\n      return false\r\n    }\r\n\r\n    this.elements.forEach((el) => {\r\n      el.addEventListener('click', this.toggleNav, false)\r\n    })\r\n  }\r\n\r\n  toggleNav(e) {\r\n    document.body.classList.toggle(TOGGLE_CLASS)\r\n    document.body.classList.toggle('lock')\r\n\r\n    e.preventDefault()\r\n  }\r\n}\r\n\r\nnew ToggleNav()\r\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.1\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SimpleLightbox = /*#__PURE__*/function () {\n  function SimpleLightbox(elements, options) {\n    var _this = this;\n\n    _classCallCheck(this, SimpleLightbox);\n\n    _defineProperty(this, \"defaultOptions\", {\n      sourceAttr: 'href',\n      overlay: true,\n      spinner: true,\n      nav: true,\n      navText: ['&lsaquo;', '&rsaquo;'],\n      captions: true,\n      captionDelay: 0,\n      captionSelector: 'img',\n      captionType: 'attr',\n      captionsData: 'title',\n      captionPosition: 'bottom',\n      captionClass: '',\n      close: true,\n      closeText: '&times;',\n      swipeClose: true,\n      showCounter: true,\n      fileExt: 'png|jpg|jpeg|gif|webp',\n      animationSlide: true,\n      animationSpeed: 250,\n      preloading: true,\n      enableKeyboard: true,\n      loop: true,\n      rel: false,\n      docClose: true,\n      swipeTolerance: 50,\n      className: 'simple-lightbox',\n      widthRatio: 0.8,\n      heightRatio: 0.9,\n      scaleImageToRatio: false,\n      disableRightClick: false,\n      disableScroll: true,\n      alertError: true,\n      alertErrorMessage: 'Image not found, next image will be loaded',\n      additionalHtml: false,\n      history: true,\n      throttleInterval: 0,\n      doubleTapZoom: 2,\n      maxZoom: 10,\n      htmlClass: 'has-lightbox',\n      rtl: false,\n      fixedClass: 'sl-fixed',\n      fadeSpeed: 300,\n      uniqueImages: true,\n      focus: true,\n      scrollZoom: true,\n      scrollZoomFactor: 0.5\n    });\n\n    _defineProperty(this, \"transitionPrefix\", void 0);\n\n    _defineProperty(this, \"isPassiveEventsSupported\", void 0);\n\n    _defineProperty(this, \"transitionCapable\", false);\n\n    _defineProperty(this, \"isTouchDevice\", 'ontouchstart' in window);\n\n    _defineProperty(this, \"isAppleDevice\", /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n    _defineProperty(this, \"initialLocationHash\", void 0);\n\n    _defineProperty(this, \"pushStateSupport\", 'pushState' in history);\n\n    _defineProperty(this, \"isOpen\", false);\n\n    _defineProperty(this, \"isAnimating\", false);\n\n    _defineProperty(this, \"isClosing\", false);\n\n    _defineProperty(this, \"isFadeIn\", false);\n\n    _defineProperty(this, \"urlChangedOnce\", false);\n\n    _defineProperty(this, \"hashReseted\", false);\n\n    _defineProperty(this, \"historyHasChanges\", false);\n\n    _defineProperty(this, \"historyUpdateTimeout\", null);\n\n    _defineProperty(this, \"currentImage\", void 0);\n\n    _defineProperty(this, \"eventNamespace\", 'simplelightbox');\n\n    _defineProperty(this, \"domNodes\", {});\n\n    _defineProperty(this, \"loadedImages\", []);\n\n    _defineProperty(this, \"initialImageIndex\", 0);\n\n    _defineProperty(this, \"currentImageIndex\", 0);\n\n    _defineProperty(this, \"initialSelector\", null);\n\n    _defineProperty(this, \"globalScrollbarWidth\", 0);\n\n    _defineProperty(this, \"controlCoordinates\", {\n      swipeDiff: 0,\n      swipeYDiff: 0,\n      swipeStart: 0,\n      swipeEnd: 0,\n      swipeYStart: 0,\n      swipeYEnd: 0,\n      mousedown: false,\n      imageLeft: 0,\n      zoomed: false,\n      containerHeight: 0,\n      containerWidth: 0,\n      containerOffsetX: 0,\n      containerOffsetY: 0,\n      imgHeight: 0,\n      imgWidth: 0,\n      capture: false,\n      initialOffsetX: 0,\n      initialOffsetY: 0,\n      initialPointerOffsetX: 0,\n      initialPointerOffsetY: 0,\n      initialPointerOffsetX2: 0,\n      initialPointerOffsetY2: 0,\n      initialScale: 1,\n      initialPinchDistance: 0,\n      pointerOffsetX: 0,\n      pointerOffsetY: 0,\n      pointerOffsetX2: 0,\n      pointerOffsetY2: 0,\n      targetOffsetX: 0,\n      targetOffsetY: 0,\n      targetScale: 0,\n      pinchOffsetX: 0,\n      pinchOffsetY: 0,\n      limitOffsetX: 0,\n      limitOffsetY: 0,\n      scaleDifference: 0,\n      targetPinchDistance: 0,\n      touchCount: 0,\n      doubleTapped: false,\n      touchmoveCount: 0\n    });\n\n    this.options = Object.assign(this.defaultOptions, options);\n    this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n    if (typeof elements === 'string') {\n      this.initialSelector = elements;\n      this.elements = Array.from(document.querySelectorAll(elements));\n    } else {\n      this.elements = typeof elements.length !== 'undefined' && elements.length > 0 ? Array.from(elements) : [elements];\n    }\n\n    this.relatedElements = [];\n    this.transitionPrefix = this.calculateTransitionPrefix();\n    this.transitionCapable = this.transitionPrefix !== false;\n    this.initialLocationHash = this.hash; // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n\n    if (this.options.rel) {\n      this.elements = this.getRelated(this.options.rel);\n    }\n\n    if (this.options.uniqueImages) {\n      var imgArr = [];\n      this.elements = Array.from(this.elements).filter(function (element) {\n        var src = element.getAttribute(_this.options.sourceAttr);\n\n        if (imgArr.indexOf(src) === -1) {\n          imgArr.push(src);\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    this.createDomNodes();\n\n    if (this.options.close) {\n      this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n    }\n\n    if (this.options.nav) {\n      this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n    }\n\n    if (this.options.spinner) {\n      this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n    }\n\n    this.addEventListener(this.elements, 'click.' + this.eventNamespace, function (event) {\n      if (_this.isValidLink(event.currentTarget)) {\n        event.preventDefault();\n\n        if (_this.isAnimating) {\n          return false;\n        }\n\n        _this.initialImageIndex = _this.elements.indexOf(event.currentTarget);\n\n        _this.openImage(event.currentTarget);\n      }\n    }); // close addEventListener click addEventListener doc\n\n    if (this.options.docClose) {\n      this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], function (event) {\n        if (_this.isOpen && event.target === event.currentTarget) {\n          _this.close();\n        }\n      });\n    } // disable rightclick\n\n\n    if (this.options.disableRightClick) {\n      this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, function (event) {\n        if (event.target.parentElement.classList.contains(\"sl-image\")) {\n          event.preventDefault();\n        }\n      });\n    } // keyboard-control\n\n\n    if (this.options.enableKeyboard) {\n      this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle(function (event) {\n        _this.controlCoordinates.swipeDiff = 0; // keyboard control only if lightbox is open\n\n        if (_this.isAnimating && event.key === 'Escape') {\n          _this.currentImage.setAttribute('src', '');\n\n          _this.isAnimating = false;\n          return _this.close();\n        }\n\n        if (_this.isOpen) {\n          event.preventDefault();\n\n          if (event.key === 'Escape') {\n            _this.close();\n          }\n\n          if (!_this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n            _this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n          }\n        }\n      }, this.options.throttleInterval));\n    }\n\n    this.addEvents();\n  }\n\n  _createClass(SimpleLightbox, [{\n    key: \"checkPassiveEventsSupport\",\n    value: function checkPassiveEventsSupport() {\n      // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n      // Test via a getter in the options object to see if the passive property is accessed\n      var supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            supportsPassive = true;\n          }\n        });\n        window.addEventListener(\"testPassive\", null, opts);\n        window.removeEventListener(\"testPassive\", null, opts);\n      } catch (e) {}\n\n      return supportsPassive;\n    }\n  }, {\n    key: \"createDomNodes\",\n    value: function createDomNodes() {\n      this.domNodes.overlay = document.createElement('div');\n      this.domNodes.overlay.classList.add('sl-overlay');\n      this.domNodes.overlay.dataset.opacityTarget = \".7\";\n      this.domNodes.closeButton = document.createElement('button');\n      this.domNodes.closeButton.classList.add('sl-close');\n      this.domNodes.closeButton.innerHTML = this.options.closeText;\n      this.domNodes.spinner = document.createElement('div');\n      this.domNodes.spinner.classList.add('sl-spinner');\n      this.domNodes.spinner.innerHTML = '<div></div>';\n      this.domNodes.navigation = document.createElement('div');\n      this.domNodes.navigation.classList.add('sl-navigation');\n      this.domNodes.navigation.innerHTML = \"<button class=\\\"sl-prev\\\">\".concat(this.options.navText[0], \"</button><button class=\\\"sl-next\\\">\").concat(this.options.navText[1], \"</button>\");\n      this.domNodes.counter = document.createElement('div');\n      this.domNodes.counter.classList.add('sl-counter');\n      this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n      this.domNodes.caption = document.createElement('div');\n      this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n\n      if (this.options.captionClass) {\n        this.domNodes.caption.classList.add(this.options.captionClass);\n      }\n\n      this.domNodes.image = document.createElement('div');\n      this.domNodes.image.classList.add('sl-image');\n      this.domNodes.wrapper = document.createElement('div');\n      this.domNodes.wrapper.classList.add('sl-wrapper');\n      this.domNodes.wrapper.setAttribute('tabindex', -1);\n      this.domNodes.wrapper.setAttribute('role', 'dialog');\n      this.domNodes.wrapper.setAttribute('aria-hidden', false);\n\n      if (this.options.className) {\n        this.domNodes.wrapper.classList.add(this.options.className);\n      }\n\n      if (this.options.rtl) {\n        this.domNodes.wrapper.classList.add('sl-dir-rtl');\n      }\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(func, limit) {\n      var inThrottle;\n      return function () {\n        if (!inThrottle) {\n          func.apply(this, arguments);\n          inThrottle = true;\n          setTimeout(function () {\n            return inThrottle = false;\n          }, limit);\n        }\n      };\n    }\n  }, {\n    key: \"isValidLink\",\n    value: function isValidLink(element) {\n      return !this.options.fileExt || element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')$', 'i').test(element.getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"calculateTransitionPrefix\",\n    value: function calculateTransitionPrefix() {\n      var s = (document.body || document.documentElement).style;\n      return 'transition' in s ? '' : 'WebkitTransition' in s ? '-webkit-' : 'MozTransition' in s ? '-moz-' : 'OTransition' in s ? '-o' : false;\n    }\n  }, {\n    key: \"toggleScrollbar\",\n    value: function toggleScrollbar(type) {\n      var scrollbarWidth = 0;\n      var fixedElements = [].slice.call(document.querySelectorAll('.' + this.options.fixedClass));\n\n      if (type === 'hide') {\n        var fullWindowWidth = window.innerWidth;\n\n        if (!fullWindowWidth) {\n          var documentElementRect = document.documentElement.getBoundingClientRect();\n          fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n        }\n\n        if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n          var scrollDiv = document.createElement('div'),\n              paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n          scrollDiv.classList.add('sl-scrollbar-measure');\n          document.body.appendChild(scrollDiv);\n          scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          document.body.removeChild(scrollDiv);\n          document.body.dataset.originalPaddingRight = paddingRight;\n\n          if (scrollbarWidth > 0 || scrollbarWidth == 0 && this.isAppleDevice) {\n            document.body.classList.add('hidden-scroll');\n            document.body.style.paddingRight = paddingRight + scrollbarWidth + 'px';\n            fixedElements.forEach(function (element) {\n              var actualPadding = element.style.paddingRight;\n              var calculatedPadding = window.getComputedStyle(element)['padding-right'];\n              element.dataset.originalPaddingRight = actualPadding;\n              element.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n            });\n          }\n        }\n      } else {\n        document.body.classList.remove('hidden-scroll');\n        document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n        fixedElements.forEach(function (element) {\n          var padding = element.dataset.originalPaddingRight;\n\n          if (typeof padding !== 'undefined') {\n            element.style.paddingRight = padding;\n          }\n        });\n      }\n\n      return scrollbarWidth;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      if (!this.isOpen || this.isAnimating || this.isClosing) {\n        return false;\n      }\n\n      this.isClosing = true;\n      var element = this.relatedElements[this.currentImageIndex];\n      element.dispatchEvent(new Event('close.simplelightbox'));\n\n      if (this.options.history) {\n        this.historyHasChanges = false;\n\n        if (!this.hashReseted) {\n          this.resetHash();\n        }\n      }\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.fadeOut(document.querySelectorAll('.sl-image img, .sl-overlay, .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, function () {\n        if (_this2.options.disableScroll) {\n          _this2.toggleScrollbar('show');\n        }\n\n        if (_this2.options.htmlClass && _this2.options.htmlClass !== '') {\n          document.querySelector('html').classList.remove(_this2.options.htmlClass);\n        }\n\n        document.body.removeChild(_this2.domNodes.wrapper);\n        document.body.removeChild(_this2.domNodes.overlay);\n        _this2.domNodes.additionalHtml = null;\n        element.dispatchEvent(new Event('closed.simplelightbox'));\n        _this2.isClosing = false;\n      });\n      this.currentImage = null;\n      this.isOpen = false;\n      this.isAnimating = false; // reset touchcontrol coordinates\n\n      for (var key in this.controlCoordinates) {\n        this.controlCoordinates[key] = 0;\n      }\n\n      this.controlCoordinates.mousedown = false;\n      this.controlCoordinates.zoomed = false;\n      this.controlCoordinates.capture = false;\n      this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n      this.controlCoordinates.doubleTapped = false;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return window.location.hash.substring(1);\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      var _this3 = this;\n\n      var index = this.currentImageIndex,\n          length = this.relatedElements.length,\n          next = index + 1 < 0 ? length - 1 : index + 1 >= length - 1 ? 0 : index + 1,\n          prev = index - 1 < 0 ? length - 1 : index - 1 >= length - 1 ? 0 : index - 1,\n          nextImage = new Image(),\n          prevImage = new Image();\n      nextImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          //is this condition even required... setting multiple times will not change usage...\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + _this3.eventNamespace));\n      });\n      nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n      prevImage.addEventListener('load', function (event) {\n        var src = event.target.getAttribute('src');\n\n        if (_this3.loadedImages.indexOf(src) === -1) {\n          _this3.loadedImages.push(src);\n        }\n\n        _this3.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + _this3.eventNamespace));\n      });\n      prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(direction) {\n      var _this4 = this;\n\n      var slideDirection = direction;\n\n      if (this.options.rtl) {\n        direction = -direction;\n      }\n\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n      this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n      var newIndex = this.currentImageIndex + direction;\n\n      if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n        return false;\n      }\n\n      this.currentImageIndex = newIndex < 0 ? this.relatedElements.length - 1 : newIndex > this.relatedElements.length - 1 ? 0 : newIndex;\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n      if (this.options.animationSlide) {\n        this.slide(this.options.animationSpeed / 1000, -100 * slideDirection - this.controlCoordinates.swipeDiff + 'px');\n      }\n\n      this.fadeOut(this.domNodes.image, this.options.fadeSpeed, function () {\n        _this4.isAnimating = true;\n\n        if (!_this4.isClosing) {\n          setTimeout(function () {\n            var element = _this4.relatedElements[_this4.currentImageIndex];\n\n            _this4.currentImage.setAttribute('src', element.getAttribute(_this4.options.sourceAttr));\n\n            if (_this4.loadedImages.indexOf(element.getAttribute(_this4.options.sourceAttr)) === -1) {\n              _this4.show(_this4.domNodes.spinner);\n            }\n\n            if (_this4.domNodes.image.contains(_this4.domNodes.caption)) {\n              _this4.domNodes.image.removeChild(_this4.domNodes.caption);\n            }\n\n            _this4.adjustImage(slideDirection);\n\n            if (_this4.options.preloading) _this4.preload();\n          }, 100);\n        } else {\n          _this4.isAnimating = false;\n        }\n      });\n    }\n  }, {\n    key: \"adjustImage\",\n    value: function adjustImage(direction) {\n      var _this5 = this;\n\n      if (!this.currentImage) {\n        return false;\n      }\n\n      var tmpImage = new Image(),\n          windowWidth = window.innerWidth * this.options.widthRatio,\n          windowHeight = window.innerHeight * this.options.heightRatio;\n      tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n      this.zoomPanElement(0, 0, 1);\n      tmpImage.addEventListener('error', function (event) {\n        _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('error.' + _this5.eventNamespace));\n\n        _this5.isAnimating = false;\n        _this5.isOpen = true;\n        _this5.domNodes.spinner.style.display = 'none';\n        var dirIsDefined = direction === 1 || direction === -1;\n\n        if (_this5.initialImageIndex === _this5.currentImageIndex && dirIsDefined) {\n          return _this5.close();\n        }\n\n        if (_this5.options.alertError) {\n          alert(_this5.options.alertErrorMessage);\n        }\n\n        _this5.loadImage(dirIsDefined ? direction : 1);\n      });\n      tmpImage.addEventListener('load', function (event) {\n        if (typeof direction !== 'undefined') {\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event('changed.' + _this5.eventNamespace));\n\n          _this5.relatedElements[_this5.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + _this5.eventNamespace));\n        } // history\n\n\n        if (_this5.options.history) {\n          _this5.updateURL();\n        }\n\n        if (_this5.loadedImages.indexOf(_this5.currentImage.getAttribute('src')) === -1) {\n          _this5.loadedImages.push(_this5.currentImage.getAttribute('src'));\n        }\n\n        var imageWidth = event.target.width,\n            imageHeight = event.target.height;\n\n        if (_this5.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n          var ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n          imageWidth /= ratio;\n          imageHeight /= ratio;\n        }\n\n        _this5.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n        _this5.domNodes.image.style.left = (window.innerWidth - imageWidth - _this5.globalScrollbarWidth) / 2 + 'px';\n        _this5.domNodes.image.style.width = imageWidth + 'px';\n        _this5.domNodes.image.style.height = imageHeight + 'px';\n        _this5.domNodes.spinner.style.display = 'none';\n\n        if (_this5.options.focus) {\n          _this5.forceFocus();\n        }\n\n        _this5.fadeIn(_this5.currentImage, _this5.options.fadeSpeed, function () {\n          if (_this5.options.focus) {\n            _this5.domNodes.wrapper.focus();\n          }\n        });\n\n        _this5.isOpen = true;\n        var captionContainer, captionText;\n\n        if (typeof _this5.options.captionSelector === 'string') {\n          captionContainer = _this5.options.captionSelector === 'self' ? _this5.relatedElements[_this5.currentImageIndex] : _this5.relatedElements[_this5.currentImageIndex].querySelector(_this5.options.captionSelector);\n        } else if (typeof _this5.options.captionSelector === 'function') {\n          captionContainer = _this5.options.captionSelector(_this5.relatedElements[_this5.currentImageIndex]);\n        }\n\n        if (_this5.options.captions && captionContainer) {\n          if (_this5.options.captionType === 'data') {\n            captionText = captionContainer.dataset[_this5.options.captionsData];\n          } else if (_this5.options.captionType === 'text') {\n            captionText = captionContainer.innerHTML;\n          } else {\n            captionText = captionContainer.getAttribute(_this5.options.captionsData);\n          }\n        }\n\n        if (!_this5.options.loop) {\n          if (_this5.currentImageIndex === 0) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex >= _this5.relatedElements.length - 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n\n          if (_this5.currentImageIndex > 0) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-prev'));\n          }\n\n          if (_this5.currentImageIndex < _this5.relatedElements.length - 1) {\n            _this5.show(_this5.domNodes.navigation.querySelector('.sl-next'));\n          }\n        } else {\n          if (_this5.relatedElements.length === 1) {\n            _this5.hide(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          } else {\n            _this5.show(_this5.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n          }\n        }\n\n        if (direction === 1 || direction === -1) {\n          if (_this5.options.animationSlide) {\n            _this5.slide(0, 100 * direction + 'px');\n\n            setTimeout(function () {\n              _this5.slide(_this5.options.animationSpeed / 1000, 0 + 'px');\n            }, 50);\n          }\n\n          _this5.fadeIn(_this5.domNodes.image, _this5.options.fadeSpeed, function () {\n            _this5.isAnimating = false;\n\n            _this5.setCaption(captionText, imageWidth);\n          });\n        } else {\n          _this5.isAnimating = false;\n\n          _this5.setCaption(captionText, imageWidth);\n        }\n\n        if (_this5.options.additionalHtml && !_this5.domNodes.additionalHtml) {\n          _this5.domNodes.additionalHtml = document.createElement('div');\n\n          _this5.domNodes.additionalHtml.classList.add('sl-additional-html');\n\n          _this5.domNodes.additionalHtml.innerHTML = _this5.options.additionalHtml;\n\n          _this5.domNodes.image.appendChild(_this5.domNodes.additionalHtml);\n        }\n      });\n    }\n  }, {\n    key: \"zoomPanElement\",\n    value: function zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n      this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n    }\n  }, {\n    key: \"minMax\",\n    value: function minMax(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n  }, {\n    key: \"setZoomData\",\n    value: function setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n      this.currentImage.dataset.scale = initialScale;\n      this.currentImage.dataset.translateX = targetOffsetX;\n      this.currentImage.dataset.translateY = targetOffsetY;\n    }\n  }, {\n    key: \"hashchangeHandler\",\n    value: function hashchangeHandler() {\n      if (this.isOpen && this.hash === this.initialLocationHash) {\n        this.hashReseted = true;\n        this.close();\n      }\n    }\n  }, {\n    key: \"addEvents\",\n    value: function addEvents() {\n      var _this6 = this;\n\n      // resize/responsive\n      this.addEventListener(window, 'resize.' + this.eventNamespace, function (event) {\n        //this.adjustImage.bind(this)\n        if (_this6.isOpen) {\n          _this6.adjustImage();\n        }\n      });\n      this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n      if (this.options.history) {\n        setTimeout(function () {\n          _this6.addEventListener(window, 'hashchange.' + _this6.eventNamespace, function (event) {\n            if (_this6.isOpen) {\n              _this6.hashchangeHandler();\n            }\n          });\n        }, 40);\n      }\n\n      this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, function (event) {\n        if (!event.currentTarget.tagName.match(/button/i)) {\n          return true;\n        }\n\n        event.preventDefault();\n        _this6.controlCoordinates.swipeDiff = 0;\n\n        _this6.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n      });\n\n      if (this.options.scrollZoom) {\n        var scale = 1;\n        this.addEventListener(this.domNodes.image, ['mousewheel', 'DOMMouseScroll'], function (event) {\n          if (_this6.controlCoordinates.mousedown || _this6.isAnimating || _this6.isClosing || !_this6.isOpen) {\n            return true;\n          }\n\n          if (_this6.controlCoordinates.containerHeight == 0) {\n            _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n            _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n            _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n            _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n            _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n            _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n            _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n            _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          }\n\n          event.preventDefault();\n          var delta = event.delta || event.wheelDelta;\n\n          if (delta === undefined) {\n            //we are on firefox\n            delta = event.detail;\n          }\n\n          delta = Math.max(-1, Math.min(1, delta)); // cap the delta to [-1,1] for cross browser consistency\n          // apply zoom\n\n          scale += delta * _this6.options.scrollZoomFactor * scale;\n          scale = Math.max(1, Math.min(_this6.options.maxZoom, scale));\n          _this6.controlCoordinates.targetScale = scale;\n          _this6.controlCoordinates.pinchOffsetX = event.pageX;\n          _this6.controlCoordinates.pinchOffsetY = event.pageY;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n          if (_this6.controlCoordinates.targetScale > 1) {\n            _this6.controlCoordinates.zoomed = true;\n\n            if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n              _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n            }\n          } else {\n            if (_this6.controlCoordinates.initialScale === 1) {\n              _this6.controlCoordinates.zoomed = false;\n\n              if (_this6.domNodes.caption.style.display === 'none') {\n                _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n              }\n            }\n\n            _this6.controlCoordinates.initialPinchDistance = null;\n            _this6.controlCoordinates.capture = false;\n          }\n\n          _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n          _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n          _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n          _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n\n          _this6.setZoomData(_this6.controlCoordinates.targetScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        });\n      }\n\n      this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], function (event) {\n        if (event.target.tagName === 'A' && event.type === 'touchstart') {\n          return true;\n        }\n\n        if (event.type === 'mousedown') {\n          event.preventDefault();\n          _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n          _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n          _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n          _this6.controlCoordinates.capture = true;\n        } else {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n          _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n          _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n          _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n          _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n          _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n          if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              if (!_this6.controlCoordinates.doubleTapped) {\n                _this6.controlCoordinates.doubleTapped = true;\n                setTimeout(function () {\n                  _this6.controlCoordinates.doubleTapped = false;\n                }, 300);\n              } else {\n                _this6.currentImage.classList.add('sl-transition');\n\n                if (!_this6.controlCoordinates.zoomed) {\n                  _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n\n                  _this6.controlCoordinates.zoomed = true;\n                } else {\n                  _this6.controlCoordinates.initialScale = 1;\n\n                  _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n                  _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n                  _this6.controlCoordinates.zoomed = false;\n                }\n\n                setTimeout(function () {\n                  if (_this6.currentImage) {\n                    _this6.currentImage.classList.remove('sl-transition');\n                  }\n                }, 200);\n                return false;\n              }\n\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n            } else if (_this6.controlCoordinates.touchCount === 2)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.initialOffsetX = parseFloat(_this6.currentImage.dataset.translateX);\n              _this6.controlCoordinates.initialOffsetY = parseFloat(_this6.currentImage.dataset.translateY);\n              _this6.controlCoordinates.pinchOffsetX = (_this6.controlCoordinates.initialPointerOffsetX + _this6.controlCoordinates.initialPointerOffsetX2) / 2;\n              _this6.controlCoordinates.pinchOffsetY = (_this6.controlCoordinates.initialPointerOffsetY + _this6.controlCoordinates.initialPointerOffsetY2) / 2;\n              _this6.controlCoordinates.initialPinchDistance = Math.sqrt((_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) * (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialPointerOffsetX2) + (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2) * (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialPointerOffsetY2));\n            }\n\n          _this6.controlCoordinates.capture = true;\n        }\n\n        if (_this6.controlCoordinates.mousedown) return true;\n\n        if (_this6.transitionCapable) {\n          _this6.controlCoordinates.imageLeft = parseInt(_this6.domNodes.image.style.left, 10);\n        }\n\n        _this6.controlCoordinates.mousedown = true;\n        _this6.controlCoordinates.swipeDiff = 0;\n        _this6.controlCoordinates.swipeYDiff = 0;\n        _this6.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n        _this6.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n        return false;\n      });\n      this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], function (event) {\n        if (!_this6.controlCoordinates.mousedown) {\n          return true;\n        }\n\n        if (event.type === 'touchmove') {\n          if (_this6.controlCoordinates.capture === false) {\n            return false;\n          }\n\n          _this6.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n          _this6.controlCoordinates.touchCount = event.touches.length;\n          _this6.controlCoordinates.touchmoveCount++;\n\n          if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n              _this6.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n              _this6.controlCoordinates.targetPinchDistance = Math.sqrt((_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) * (_this6.controlCoordinates.pointerOffsetX - _this6.controlCoordinates.pointerOffsetX2) + (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2) * (_this6.controlCoordinates.pointerOffsetY - _this6.controlCoordinates.pointerOffsetY2));\n\n              if (_this6.controlCoordinates.initialPinchDistance === null) {\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n              }\n\n              if (Math.abs(_this6.controlCoordinates.initialPinchDistance - _this6.controlCoordinates.targetPinchDistance) >= 1) {\n                /* Initialize helpers */\n                _this6.controlCoordinates.targetScale = _this6.minMax(_this6.controlCoordinates.targetPinchDistance / _this6.controlCoordinates.initialPinchDistance * _this6.controlCoordinates.initialScale, 1, _this6.options.maxZoom);\n                _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n                _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n                _this6.controlCoordinates.scaleDifference = _this6.controlCoordinates.targetScale - _this6.controlCoordinates.initialScale;\n                _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetX - (_this6.controlCoordinates.pinchOffsetX - _this6.controlCoordinates.containerOffsetX - _this6.controlCoordinates.containerWidth / 2 - _this6.controlCoordinates.initialOffsetX) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n                _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.initialOffsetY - (_this6.controlCoordinates.pinchOffsetY - _this6.controlCoordinates.containerOffsetY - _this6.controlCoordinates.containerHeight / 2 - _this6.controlCoordinates.initialOffsetY) / (_this6.controlCoordinates.targetScale - _this6.controlCoordinates.scaleDifference) * _this6.controlCoordinates.scaleDifference, _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n                _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n\n                if (_this6.controlCoordinates.targetScale > 1) {\n                  _this6.controlCoordinates.zoomed = true;\n\n                  if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n                    _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                  }\n                }\n\n                _this6.controlCoordinates.initialPinchDistance = _this6.controlCoordinates.targetPinchDistance;\n                _this6.controlCoordinates.initialScale = _this6.controlCoordinates.targetScale;\n                _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n                _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              }\n            } else {\n            _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n            _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n            _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n            _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n            _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n              _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n              _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n            }\n\n            if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n              _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n              _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n            }\n\n            _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n            _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n          }\n        }\n        /* Mouse Move implementation */\n\n\n        if (event.type === 'mousemove' && _this6.controlCoordinates.mousedown) {\n          if (event.type == 'touchmove') return true;\n          event.preventDefault();\n          if (_this6.controlCoordinates.capture === false) return false;\n          _this6.controlCoordinates.pointerOffsetX = event.clientX;\n          _this6.controlCoordinates.pointerOffsetY = event.clientY;\n          _this6.controlCoordinates.targetScale = _this6.controlCoordinates.initialScale;\n          _this6.controlCoordinates.limitOffsetX = (_this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerWidth) / 2;\n          _this6.controlCoordinates.limitOffsetY = (_this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale - _this6.controlCoordinates.containerHeight) / 2;\n          _this6.controlCoordinates.targetOffsetX = _this6.controlCoordinates.imgWidth * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerWidth ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetX - (_this6.controlCoordinates.initialPointerOffsetX - _this6.controlCoordinates.initialOffsetX), _this6.controlCoordinates.limitOffsetX * -1, _this6.controlCoordinates.limitOffsetX);\n          _this6.controlCoordinates.targetOffsetY = _this6.controlCoordinates.imgHeight * _this6.controlCoordinates.targetScale <= _this6.controlCoordinates.containerHeight ? 0 : _this6.minMax(_this6.controlCoordinates.pointerOffsetY - (_this6.controlCoordinates.initialPointerOffsetY - _this6.controlCoordinates.initialOffsetY), _this6.controlCoordinates.limitOffsetY * -1, _this6.controlCoordinates.limitOffsetY);\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetX) === Math.abs(_this6.controlCoordinates.limitOffsetX)) {\n            _this6.controlCoordinates.initialOffsetX = _this6.controlCoordinates.targetOffsetX;\n            _this6.controlCoordinates.initialPointerOffsetX = _this6.controlCoordinates.pointerOffsetX;\n          }\n\n          if (Math.abs(_this6.controlCoordinates.targetOffsetY) === Math.abs(_this6.controlCoordinates.limitOffsetY)) {\n            _this6.controlCoordinates.initialOffsetY = _this6.controlCoordinates.targetOffsetY;\n            _this6.controlCoordinates.initialPointerOffsetY = _this6.controlCoordinates.pointerOffsetY;\n          }\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n\n          _this6.zoomPanElement(_this6.controlCoordinates.targetOffsetX + \"px\", _this6.controlCoordinates.targetOffsetY + \"px\", _this6.controlCoordinates.targetScale);\n        }\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n          _this6.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n          _this6.controlCoordinates.swipeDiff = _this6.controlCoordinates.swipeStart - _this6.controlCoordinates.swipeEnd;\n          _this6.controlCoordinates.swipeYDiff = _this6.controlCoordinates.swipeYStart - _this6.controlCoordinates.swipeYEnd;\n\n          if (_this6.options.animationSlide) {\n            _this6.slide(0, -_this6.controlCoordinates.swipeDiff + 'px');\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], function (event) {\n        if (_this6.isTouchDevice && event.type === 'touchend') {\n          _this6.controlCoordinates.touchCount = event.touches.length;\n\n          if (_this6.controlCoordinates.touchCount === 0)\n            /* No touch */\n            {\n              /* Set attributes */\n              if (_this6.currentImage) {\n                _this6.setZoomData(_this6.controlCoordinates.initialScale, _this6.controlCoordinates.targetOffsetX, _this6.controlCoordinates.targetOffsetY);\n              }\n\n              if (_this6.controlCoordinates.initialScale === 1) {\n                _this6.controlCoordinates.zoomed = false;\n\n                if (_this6.domNodes.caption.style.display === 'none') {\n                  _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n                }\n              }\n\n              _this6.controlCoordinates.initialPinchDistance = null;\n              _this6.controlCoordinates.capture = false;\n            } else if (_this6.controlCoordinates.touchCount === 1)\n            /* Single touch */\n            {\n              _this6.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n              _this6.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n            } else if (_this6.controlCoordinates.touchCount > 1)\n            /* Pinch */\n            {\n              _this6.controlCoordinates.initialPinchDistance = null;\n            }\n        }\n\n        if (_this6.controlCoordinates.mousedown) {\n          _this6.controlCoordinates.mousedown = false;\n          var possibleDir = true;\n\n          if (!_this6.options.loop) {\n            if (_this6.currentImageIndex === 0 && _this6.controlCoordinates.swipeDiff < 0) {\n              possibleDir = false;\n            }\n\n            if (_this6.currentImageIndex >= _this6.relatedElements.length - 1 && _this6.controlCoordinates.swipeDiff > 0) {\n              possibleDir = false;\n            }\n          }\n\n          if (Math.abs(_this6.controlCoordinates.swipeDiff) > _this6.options.swipeTolerance && possibleDir) {\n            _this6.loadImage(_this6.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n          } else if (_this6.options.animationSlide) {\n            _this6.slide(_this6.options.animationSpeed / 1000, 0 + 'px');\n          }\n\n          if (_this6.options.swipeClose && Math.abs(_this6.controlCoordinates.swipeYDiff) > 50 && Math.abs(_this6.controlCoordinates.swipeDiff) < _this6.options.swipeTolerance) {\n            _this6.close();\n          }\n        }\n      });\n      this.addEventListener(this.domNodes.image, ['dblclick'], function (event) {\n        if (_this6.isTouchDevice) return;\n        _this6.controlCoordinates.initialPointerOffsetX = event.clientX;\n        _this6.controlCoordinates.initialPointerOffsetY = event.clientY;\n        _this6.controlCoordinates.containerHeight = _this6.getDimensions(_this6.domNodes.image).height;\n        _this6.controlCoordinates.containerWidth = _this6.getDimensions(_this6.domNodes.image).width;\n        _this6.controlCoordinates.imgHeight = _this6.getDimensions(_this6.currentImage).height;\n        _this6.controlCoordinates.imgWidth = _this6.getDimensions(_this6.currentImage).width;\n        _this6.controlCoordinates.containerOffsetX = _this6.domNodes.image.offsetLeft;\n        _this6.controlCoordinates.containerOffsetY = _this6.domNodes.image.offsetTop;\n\n        _this6.currentImage.classList.add('sl-transition');\n\n        if (!_this6.controlCoordinates.zoomed) {\n          _this6.controlCoordinates.initialScale = _this6.options.doubleTapZoom;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          if (!_this6.domNodes.caption.style.opacity && _this6.domNodes.caption.style.display !== 'none') {\n            _this6.fadeOut(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n\n          _this6.controlCoordinates.zoomed = true;\n        } else {\n          _this6.controlCoordinates.initialScale = 1;\n\n          _this6.setZoomData(_this6.controlCoordinates.initialScale, 0, 0);\n\n          _this6.zoomPanElement(0 + \"px\", 0 + \"px\", _this6.controlCoordinates.initialScale);\n\n          _this6.controlCoordinates.zoomed = false;\n\n          if (_this6.domNodes.caption.style.display === 'none') {\n            _this6.fadeIn(_this6.domNodes.caption, _this6.options.fadeSpeed);\n          }\n        }\n\n        setTimeout(function () {\n          if (_this6.currentImage) {\n            _this6.currentImage.classList.remove('sl-transition');\n\n            _this6.currentImage.style[_this6.transitionPrefix + 'transform-origin'] = null;\n          }\n        }, 200);\n        _this6.controlCoordinates.capture = true;\n        return false;\n      });\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions(element) {\n      var styles = window.getComputedStyle(element),\n          height = element.offsetHeight,\n          width = element.offsetWidth,\n          borderTopWidth = parseFloat(styles.borderTopWidth),\n          borderBottomWidth = parseFloat(styles.borderBottomWidth),\n          paddingTop = parseFloat(styles.paddingTop),\n          paddingBottom = parseFloat(styles.paddingBottom),\n          borderLeftWidth = parseFloat(styles.borderLeftWidth),\n          borderRightWidth = parseFloat(styles.borderRightWidth),\n          paddingLeft = parseFloat(styles.paddingLeft),\n          paddingRight = parseFloat(styles.paddingRight);\n      return {\n        height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n        width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n      };\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash() {\n      var newHash = 'pid=' + (this.currentImageIndex + 1),\n          newURL = window.location.href.split('#')[0] + '#' + newHash;\n      this.hashReseted = false;\n\n      if (this.pushStateSupport) {\n        window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n      } else {\n        // what is the browser target of this?\n        if (this.historyHasChanges) {\n          window.location.replace(newURL);\n        } else {\n          window.location.hash = newHash;\n        }\n      }\n\n      if (!this.historyHasChanges) {\n        this.urlChangedOnce = true;\n      }\n\n      this.historyHasChanges = true;\n    }\n  }, {\n    key: \"resetHash\",\n    value: function resetHash() {\n      this.hashReseted = true;\n\n      if (this.urlChangedOnce) {\n        history.back();\n      } else {\n        if (this.pushStateSupport) {\n          history.pushState('', document.title, window.location.pathname + window.location.search);\n        } else {\n          window.location.hash = '';\n        }\n      } //\n      //in case an history operation is still pending\n\n\n      clearTimeout(this.historyUpdateTimeout);\n    }\n  }, {\n    key: \"updateURL\",\n    value: function updateURL() {\n      clearTimeout(this.historyUpdateTimeout);\n\n      if (!this.historyHasChanges) {\n        this.updateHash(); // first time\n      } else {\n        this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n      }\n    }\n  }, {\n    key: \"setCaption\",\n    value: function setCaption(captionText, imageWidth) {\n      var _this7 = this;\n\n      if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n        this.hide(this.domNodes.caption);\n        this.domNodes.caption.style.width = imageWidth + 'px';\n        this.domNodes.caption.innerHTML = captionText;\n        this.domNodes.image.appendChild(this.domNodes.caption);\n        setTimeout(function () {\n          _this7.fadeIn(_this7.domNodes.caption, _this7.options.fadeSpeed);\n        }, this.options.captionDelay);\n      }\n    }\n  }, {\n    key: \"slide\",\n    value: function slide(speed, pos) {\n      if (!this.transitionCapable) {\n        return this.domNodes.image.style.left = pos;\n      }\n\n      this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n      this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n  }, {\n    key: \"getRelated\",\n    value: function getRelated(rel) {\n      var elems;\n\n      if (rel && rel !== false && rel !== 'nofollow') {\n        elems = Array.from(this.elements).filter(function (element) {\n          return element.getAttribute('rel') === rel;\n        });\n      } else {\n        elems = this.elements;\n      }\n\n      return elems;\n    }\n  }, {\n    key: \"openImage\",\n    value: function openImage(element) {\n      var _this8 = this;\n\n      element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n      if (this.options.disableScroll) {\n        this.globalScrollbarWidth = this.toggleScrollbar('hide');\n      }\n\n      if (this.options.htmlClass && this.options.htmlClass !== '') {\n        document.querySelector('html').classList.add(this.options.htmlClass);\n      }\n\n      document.body.appendChild(this.domNodes.wrapper);\n      this.domNodes.wrapper.appendChild(this.domNodes.image);\n\n      if (this.options.overlay) {\n        document.body.appendChild(this.domNodes.overlay);\n      }\n\n      this.relatedElements = this.getRelated(element.rel);\n\n      if (this.options.showCounter) {\n        if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.removeChild(this.domNodes.counter);\n        } else if (this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n          this.domNodes.wrapper.appendChild(this.domNodes.counter);\n        }\n      }\n\n      this.isAnimating = true;\n      this.currentImageIndex = this.relatedElements.indexOf(element);\n      var targetURL = element.getAttribute(this.options.sourceAttr);\n      this.currentImage = document.createElement('img');\n      this.currentImage.style.display = 'none';\n      this.currentImage.setAttribute('src', targetURL);\n      this.currentImage.dataset.scale = 1;\n      this.currentImage.dataset.translateX = 0;\n      this.currentImage.dataset.translateY = 0;\n\n      if (this.loadedImages.indexOf(targetURL) === -1) {\n        this.loadedImages.push(targetURL);\n      }\n\n      this.domNodes.image.innerHTML = '';\n      this.domNodes.image.setAttribute('style', '');\n      this.domNodes.image.appendChild(this.currentImage);\n      this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n      this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n      this.show(this.domNodes.spinner);\n      this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n      this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n      this.adjustImage();\n\n      if (this.options.preloading) {\n        this.preload();\n      }\n\n      setTimeout(function () {\n        element.dispatchEvent(new Event('shown.' + _this8.eventNamespace));\n      }, this.options.animationSpeed);\n    }\n  }, {\n    key: \"forceFocus\",\n    value: function forceFocus() {\n      var _this9 = this;\n\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.addEventListener(document, 'focusin.' + this.eventNamespace, function (event) {\n        if (document !== event.target && _this9.domNodes.wrapper !== event.target && !_this9.domNodes.wrapper.contains(event.target)) {\n          _this9.domNodes.wrapper.focus();\n        }\n      });\n    } // utility\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(elements, events, callback, opts) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator = _createForOfIteratorHelper(elements),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var element = _step.value;\n\n          if (!element.namespaces) {\n            element.namespaces = {};\n          } // save the namespaces addEventListener the DOM element itself\n\n\n          var _iterator2 = _createForOfIteratorHelper(events),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var event = _step2.value;\n              var options = opts || false;\n              var needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n\n              if (needsPassiveFix && this.isPassiveEventsSupported) {\n                if (_typeof(options) === 'object') {\n                  options.passive = true;\n                } else {\n                  options = {\n                    passive: true\n                  };\n                }\n              }\n\n              element.namespaces[event] = callback;\n              element.addEventListener(event.split('.')[0], callback, options);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(elements, events) {\n      elements = this.wrap(elements);\n      events = this.wrap(events);\n\n      var _iterator3 = _createForOfIteratorHelper(elements),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var element = _step3.value;\n\n          var _iterator4 = _createForOfIteratorHelper(events),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var event = _step4.value;\n\n              if (element.namespaces && element.namespaces[event]) {\n                element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                delete element.namespaces[event];\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"fadeOut\",\n    value: function fadeOut(elements, duration, callback) {\n      var _this10 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator5 = _createForOfIteratorHelper(elements),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var element = _step5.value;\n          element.style.opacity = 1;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.isFadeIn = false;\n\n      var step = 16.66666 / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if ((currentOpacity -= step) < 0) {\n          var _iterator6 = _createForOfIteratorHelper(elements),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var element = _step6.value;\n              element.style.display = \"none\"; // element.style.opacity = '';\n\n              element.style.opacity = 1;\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          callback && callback.call(_this10, elements);\n        } else {\n          var _iterator7 = _createForOfIteratorHelper(elements),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _element = _step7.value;\n              _element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n\n          requestAnimationFrame(fade);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"fadeIn\",\n    value: function fadeIn(elements, duration, callback, display) {\n      var _this11 = this;\n\n      elements = this.wrap(elements);\n\n      var _iterator8 = _createForOfIteratorHelper(elements),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var element = _step8.value;\n          element.style.opacity = 0;\n          element.style.display = display || \"block\";\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      this.isFadeIn = true;\n\n      var opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n          step = 16.66666 * opacityTarget / (duration || this.options.fadeSpeed),\n          fade = function fade() {\n        var currentOpacity = parseFloat(elements[0].style.opacity);\n\n        if (!((currentOpacity += step) > opacityTarget)) {\n          var _iterator9 = _createForOfIteratorHelper(elements),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var element = _step9.value;\n              element.style.opacity = currentOpacity;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n\n          if (!_this11.isFadeIn) return;\n          requestAnimationFrame(fade);\n        } else {\n          var _iterator10 = _createForOfIteratorHelper(elements),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var _element2 = _step10.value;\n              _element2.style.opacity = '';\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          callback && callback.call(_this11, elements);\n        }\n      };\n\n      fade();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(elements) {\n      elements = this.wrap(elements);\n\n      var _iterator11 = _createForOfIteratorHelper(elements),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var element = _step11.value;\n\n          if (element.style.display != 'none') {\n            element.dataset.initialDisplay = element.style.display;\n          }\n\n          element.style.display = 'none';\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(elements, display) {\n      elements = this.wrap(elements);\n\n      var _iterator12 = _createForOfIteratorHelper(elements),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var element = _step12.value;\n          element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap(input) {\n      return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n  }, {\n    key: \"on\",\n    value: function on(events, callback) {\n      events = this.wrap(events);\n\n      var _iterator13 = _createForOfIteratorHelper(this.elements),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var element = _step13.value;\n\n          if (!element.fullyNamespacedEvents) {\n            element.fullyNamespacedEvents = {};\n          }\n\n          var _iterator14 = _createForOfIteratorHelper(events),\n              _step14;\n\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var event = _step14.value;\n              element.fullyNamespacedEvents[event] = callback;\n              element.addEventListener(event, callback);\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(events) {\n      events = this.wrap(events);\n\n      var _iterator15 = _createForOfIteratorHelper(this.elements),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var element = _step15.value;\n\n          var _iterator16 = _createForOfIteratorHelper(events),\n              _step16;\n\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var event = _step16.value;\n\n              if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n              }\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      return this;\n    } // api\n\n  }, {\n    key: \"open\",\n    value: function open(elem) {\n      elem = elem || this.elements[0];\n\n      if (typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n        elem = elem.get(0);\n      }\n\n      this.initialImageIndex = this.elements.indexOf(elem);\n\n      if (this.initialImageIndex > -1) {\n        this.openImage(elem);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.loadImage(1);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.loadImage(-1);\n    } // get some useful data\n\n  }, {\n    key: \"getLighboxData\",\n    value: function getLighboxData() {\n      return {\n        currentImageIndex: this.currentImageIndex,\n        currentImage: this.currentImage,\n        globalScrollbarWidth: this.globalScrollbarWidth\n      };\n    } //close is exposed anyways..\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      //remove all custom event listeners from elements\n      this.off(['close.' + this.eventNamespace, 'closed.' + this.eventNamespace, 'nextImageLoaded.' + this.eventNamespace, 'prevImageLoaded.' + this.eventNamespace, 'change.' + this.eventNamespace, 'nextDone.' + this.eventNamespace, 'prevDone.' + this.eventNamespace, 'error.' + this.eventNamespace, 'changed.' + this.eventNamespace, 'next.' + this.eventNamespace, 'prev.' + this.eventNamespace, 'show.' + this.eventNamespace, 'shown.' + this.eventNamespace]);\n      this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n      this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n      this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n      this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n      this.removeEventListener(window, 'resize.' + this.eventNamespace);\n      this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n      this.close();\n\n      if (this.isOpen) {\n        document.body.removeChild(this.domNodes.wrapper);\n        document.body.removeChild(this.domNodes.overlay);\n      }\n\n      this.elements = null;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (!this.initialSelector) {\n        throw 'refreshing only works when you initialize using a selector!';\n      }\n\n      var options = this.options,\n          selector = this.initialSelector;\n      this.destroy();\n      this.constructor(selector, options);\n      return this;\n    }\n  }]);\n\n  return SimpleLightbox;\n}();\n\nvar _default = SimpleLightbox;\nexports[\"default\"] = _default;\nglobal.SimpleLightbox = SimpleLightbox;","import SimpleLightbox from \"simplelightbox\";\r\n\r\nnew SimpleLightbox('.gallery__fancybox', { /* options */ });\r\n","/**\n * Sticky Sidebar v2 JavaScript Plugin.\n * @version 1.0.1\n * @author Øystein Blixhavn <oystein@blixhavn.no>\n * @license The MIT License (MIT)\n */\nconst StickySidebar = (() => {\n\n    // ---------------------------------\n    // # Define Constants\n    // ---------------------------------\n    //\n    const EVENT_KEY = '.stickySidebar';\n    const VERSION   = '1.0.1';\n\n    const DEFAULTS = {\n      /**\n       * Additional top spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      topSpacing: 0,\n\n      /**\n       * Additional bottom spacing of the element when it becomes sticky.\n       * @type {Numeric|Function}\n       */\n      bottomSpacing: 0,\n\n      /**\n       * Container sidebar selector to know what the beginning and end of sticky element.\n       * @type {String|False}\n       */\n      containerSelector: false,\n\n      /**\n       * Parent element where the scrolling happens.\n       */\n      scrollContainer: false,\n\n      /**\n       * Inner wrapper selector.\n       * @type {String}\n       */\n      innerWrapperSelector: '.inner-wrapper-sticky',\n\n      /**\n       * The name of CSS class to apply to elements when they have become stuck.\n       * @type {String|False}\n       */\n      stickyClass: 'is-affixed',\n\n      /**\n       * The sidebar returns to its normal position if its width below this value.\n       * @type {Numeric}\n       */\n      minWidth: false\n    };\n\n    // ---------------------------------\n    // # Class Definition\n    // ---------------------------------\n    //\n    /**\n     * Sticky Sidebar Class.\n     * @public\n     */\n    class StickySidebar{\n\n      /**\n       * Sticky Sidebar Constructor.\n       * @constructor\n       * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\n       * @param {Object} options - The options of sticky sidebar.\n       */\n      constructor(sidebar, options = {}){\n        this.options = StickySidebar.extend(DEFAULTS, options);\n\n        // Sidebar element query if there's no one, throw error.\n        this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\n        if( 'undefined' === typeof this.sidebar )\n          throw new Error(\"There is no specific sidebar element.\");\n\n        this.sidebarInner = false;\n        this.container = this.sidebar.parentElement;\n\n        // Current Affix Type of sidebar element.\n        this.affixedType = 'STATIC';\n        this.direction = 'down';\n        this.support = {\n          transform:   false,\n          transform3d: false\n        };\n\n        this._initialized = false;\n        this._reStyle = false;\n        this._breakpoint = false;\n\n        // Dimensions of sidebar, container and screen viewport.\n        this.dimensions = {\n          translateY: 0,\n          maxTranslateY: 0,\n          topSpacing: 0,\n          lastTopSpacing: 0,\n          bottomSpacing: 0,\n          lastBottomSpacing: 0,\n          sidebarHeight: 0,\n          sidebarWidth: 0,\n          containerTop: 0,\n          containerHeight: 0,\n          viewportHeight: 0,\n          viewportTop: 0,\n          lastViewportTop: 0,\n        };\n\n        // Bind event handlers for referencability.\n        ['handleEvent'].forEach( (method) => {\n          this[method] = this[method].bind(this);\n        });\n\n        // Initialize sticky sidebar for first time.\n        this.initialize();\n      }\n\n      /**\n       * Initializes the sticky sidebar by adding inner wrapper, define its container,\n       * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\n       * @private\n       */\n      initialize(){\n        this._setSupportFeatures();\n\n        // Get sticky sidebar inner wrapper, if not found, will create one.\n        if( this.options.innerWrapperSelector ){\n          this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\n\n          if( null === this.sidebarInner )\n            this.sidebarInner = false;\n        }\n\n        if( ! this.sidebarInner ){\n          let wrapper = document.createElement('div');\n          wrapper.setAttribute('class', 'inner-wrapper-sticky');\n          this.sidebar.appendChild(wrapper);\n\n          while( this.sidebar.firstChild != wrapper )\n            wrapper.appendChild(this.sidebar.firstChild);\n\n          this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\n        }\n\n        // Container wrapper of the sidebar.\n        if( this.options.containerSelector ){\n          let containers = document.querySelectorAll(this.options.containerSelector);\n          containers = Array.prototype.slice.call(containers);\n\n          containers.forEach((container, item) => {\n            if( ! container.contains(this.sidebar) ) return;\n            this.container = container;\n          });\n\n          if( ! containers.length )\n            throw new Error(\"The container does not contains on the sidebar.\");\n        }\n\n        // Get scroll container, if provided\n        this.scrollContainer = this.options.scrollContainer ? document.querySelector(this.options.scrollContainer) : undefined;\n\n        // If top/bottom spacing is not function parse value to integer.\n        if( 'function' !== typeof this.options.topSpacing )\n          this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\n\n        if( 'function' !== typeof this.options.bottomSpacing )\n          this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\n\n        // Breakdown sticky sidebar if screen width below `options.minWidth`.\n        this._widthBreakpoint();\n\n        // Calculate dimensions of sidebar, container and viewport.\n        this.calcDimensions();\n\n        // Affix sidebar in proper position.\n        this.stickyPosition();\n\n        // Bind all events.\n        this.bindEvents();\n\n        // Inform other properties the sticky sidebar is initialized.\n        this._initialized = true;\n      }\n\n      /**\n       * Bind all events of sticky sidebar plugin.\n       * @protected\n       */\n      bindEvents(){\n        this.eventTarget = this.scrollContainer ? this.scrollContainer : window;\n\n        this.eventTarget.addEventListener('resize', this, { passive: true, capture: false });\n        this.eventTarget.addEventListener('scroll', this, { passive: true, capture: false });\n\n        this.sidebar.addEventListener('update' + EVENT_KEY, this);\n\n        if( 'undefined' !== typeof ResizeObserver ){\n          const resizeObserver = new ResizeObserver(() => this.handleEvent())\n          resizeObserver.observe(this.sidebarInner)\n          resizeObserver.observe(this.container)\n        }\n      }\n\n      /**\n       * Handles all events of the plugin.\n       * @param {Object} event - Event object passed from listener.\n       */\n      handleEvent(event){\n        this.updateSticky(event);\n      }\n\n      /**\n       * Calculates dimensions of sidebar, container and screen viewpoint\n       * @public\n       */\n      calcDimensions(){\n        if( this._breakpoint ) return;\n        var dims = this.dimensions;\n\n        // Container of sticky sidebar dimensions.\n        dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\n        dims.containerHeight = this.container.clientHeight;\n        dims.containerBottom = dims.containerTop + dims.containerHeight;\n\n        // Sidebar dimensions.\n        dims.sidebarHeight = this.sidebarInner.offsetHeight;\n        dims.sidebarWidth  = this.sidebarInner.offsetWidth;\n\n        // Screen viewport dimensions.\n        dims.viewportHeight = window.innerHeight;\n\n        // Maximum sidebar translate Y.\n        dims.maxTranslateY = dims.containerHeight - dims.sidebarHeight;\n\n        this._calcDimensionsWithScroll();\n      }\n\n      /**\n       * Some dimensions values need to be up-to-date when scrolling the page.\n       * @private\n       */\n      _calcDimensionsWithScroll(){\n        var dims = this.dimensions;\n\n        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\n\n        if (this.scrollContainer) {\n          dims.viewportTop = this.scrollContainer.scrollTop;\n          dims.viewportLeft = this.scrollContainer.scrollLeft;\n        } else {\n          dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;\n          dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n        }\n        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\n\n        dims.topSpacing    = this.options.topSpacing;\n        dims.bottomSpacing = this.options.bottomSpacing;\n\n        if( 'function' === typeof dims.topSpacing )\n            dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\n\n        if( 'function' === typeof dims.bottomSpacing )\n            dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\n\n        if( 'VIEWPORT-TOP' === this.affixedType ){\n          // Adjust translate Y in the case decrease top spacing value.\n          if( dims.topSpacing < dims.lastTopSpacing ){\n            dims.translateY += dims.lastTopSpacing - dims.topSpacing;\n            this._reStyle = true;\n          }\n        } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\n          // Adjust translate Y in the case decrease bottom spacing value.\n          if( dims.bottomSpacing < dims.lastBottomSpacing ){\n            dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\n            this._reStyle = true;\n          }\n        }\n\n        dims.lastTopSpacing    = dims.topSpacing;\n        dims.lastBottomSpacing = dims.bottomSpacing;\n      }\n\n      /**\n       * Determine whether the sidebar is bigger than viewport.\n       * @public\n       * @return {Boolean}\n       */\n      isSidebarFitsViewport() {\n        return this.dimensions.viewportHeight >= (\n          this.dimensions.lastBottomSpacing +\n          this.dimensions.lastTopSpacing +\n          this.dimensions.sidebarHeight\n        );\n      }\n\n      /**\n       * Observe browser scrolling direction top and down.\n       */\n      observeScrollDir(){\n        var dims = this.dimensions;\n        if( dims.lastViewportTop === dims.viewportTop ) return;\n\n        var furthest = 'down' === this.direction ? Math.min : Math.max;\n\n        // If the browser is scrolling not in the same direction.\n        if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\n          this.direction = 'down' === this.direction ?  'up' : 'down';\n      }\n\n      /**\n       * Gets affix type of sidebar according to current scroll top and scrolling direction.\n       * @public\n       * @return {String|False} - Proper affix type.\n       */\n      getAffixType(){\n        this._calcDimensionsWithScroll();\n        var dims = this.dimensions;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var affixType = this.affixedType;\n\n       if( colliderTop <= dims.containerTop || dims.containerHeight <= dims.sidebarHeight ){\n          dims.translateY = 0;\n          affixType = 'STATIC';\n        } else {\n          affixType = ( 'up' === this.direction ) ?\n            this._getAffixTypeScrollingUp() : this._getAffixTypeScrollingDown();\n        }\n\n        // Make sure the translate Y is not bigger than container height.\n        dims.translateY = Math.max(0, dims.translateY);\n        dims.translateY = Math.min(dims.containerHeight, dims.translateY);\n        dims.translateY = Math.round(dims.translateY);\n\n        dims.lastViewportTop = dims.viewportTop;\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling down.\n       * @private\n       * @return {String} - Proper affix type of scrolling down direction.\n       */\n      _getAffixTypeScrollingDown(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( this.isSidebarFitsViewport() ){\n          if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( colliderTop >= dims.containerTop ){\n            dims.translateY = colliderTop - dims.containerTop;\n            affixType = 'VIEWPORT-TOP';\n          }\n        } else {\n          if( dims.containerBottom <= colliderBottom ){\n            dims.translateY = dims.containerBottom - sidebarBottom;\n            affixType = 'CONTAINER-BOTTOM';\n\n          } else if( sidebarBottom + dims.translateY <= colliderBottom ){\n            dims.translateY = colliderBottom - sidebarBottom;\n            affixType = 'VIEWPORT-BOTTOM';\n\n          } else if( dims.containerTop + dims.translateY <= colliderTop &&\n            (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Get affix type while scrolling up.\n       * @private\n       * @return {String} - Proper affix type of scrolling up direction.\n       */\n      _getAffixTypeScrollingUp(){\n        var dims = this.dimensions;\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\n        var colliderTop = dims.viewportTop + dims.topSpacing;\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\n        var affixType = this.affixedType;\n\n        if( colliderTop <= dims.translateY + dims.containerTop ){\n          dims.translateY = colliderTop - dims.containerTop;\n          affixType = 'VIEWPORT-TOP';\n\n        } else if( dims.containerBottom <= colliderBottom ){\n          dims.translateY = dims.containerBottom - sidebarBottom;\n          affixType = 'CONTAINER-BOTTOM';\n\n        } else if( ! this.isSidebarFitsViewport() ){\n\n          if( dims.containerTop <= colliderTop &&\n              (0 !== dims.translateY && dims.maxTranslateY !== dims.translateY) ){\n            affixType = 'VIEWPORT-UNBOTTOM';\n          }\n        }\n\n        return affixType;\n      }\n\n      /**\n       * Gets inline style of sticky sidebar wrapper and inner wrapper according\n       * to its affix type.\n       * @private\n       * @param {String} affixType - Affix type of sticky sidebar.\n       * @return {Object}\n       */\n      _getStyle(affixType){\n        if( 'undefined' === typeof affixType ) return;\n\n        var style = {inner: {}, outer: {}};\n        var dims = this.dimensions;\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n            style.inner = {position: 'fixed', top: dims.topSpacing,\n                  left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\n            break;\n          case 'VIEWPORT-BOTTOM':\n            style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\n                  bottom: dims.bottomSpacing, width: dims.sidebarWidth};\n            break;\n          case 'CONTAINER-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n            let translate = this._getTranslate(0, dims.translateY + 'px');\n\n            if( translate )\n              style.inner = {transform: translate};\n            else\n              style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\n            break;\n        }\n\n        switch( affixType ){\n          case 'VIEWPORT-TOP':\n          case 'VIEWPORT-BOTTOM':\n          case 'VIEWPORT-UNBOTTOM':\n          case 'CONTAINER-BOTTOM':\n            style.outer = {height: dims.sidebarHeight, position: 'relative'};\n            break;\n        }\n\n        style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\n        style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\n            bottom: '', width: '',  transform: ''}, style.inner);\n\n        return style;\n      }\n\n      /**\n       * Cause the sidebar to be sticky according to affix type by adding inline\n       * style, adding helper class and trigger events.\n       * @function\n       * @protected\n       * @param {string} force - Update sticky sidebar position by force.\n       */\n      stickyPosition(force){\n        if( this._breakpoint ) return;\n\n        force = this._reStyle || force || false;\n\n        var offsetTop = this.options.topSpacing;\n        var offsetBottom = this.options.bottomSpacing;\n\n        var affixType = this.getAffixType();\n        var style = this._getStyle(affixType);\n\n        if( (this.affixedType != affixType || force) && affixType ){\n          let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixEvent);\n\n          if( 'STATIC' === affixType )\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          else\n            StickySidebar.addClass(this.sidebar, this.options.stickyClass);\n\n          for( let key in style.outer ){\n            let unit = ('number' === typeof style.outer[key]) ? 'px' : '';\n            this.sidebar.style[key] = style.outer[key] + unit;\n          }\n\n          for( let key in style.inner ){\n            let unit = ('number' === typeof style.inner[key]) ? 'px' : '';\n            this.sidebarInner.style[key] = style.inner[key] + unit;\n          }\n\n          let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\n          StickySidebar.eventTrigger(this.sidebar, affixedEvent);\n        } else {\n          if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\n        }\n\n        this.affixedType = affixType;\n      }\n\n      /**\n       * Breakdown sticky sidebar when window width is below `options.minWidth` value.\n       * @protected\n       */\n      _widthBreakpoint(){\n\n        if( window.innerWidth <= this.options.minWidth ){\n          this._breakpoint = true;\n          this.affixedType = 'STATIC';\n\n          this.sidebar.removeAttribute('style');\n          StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\n          this.sidebarInner.removeAttribute('style');\n        } else {\n          this._breakpoint = false;\n        }\n      }\n\n      /**\n       * Switches between functions stack for each event type, if there's no\n       * event, it will re-initialize sticky sidebar.\n       * @public\n       */\n      updateSticky(event = {}){\n        if( this._running ) return;\n        this._running = true;\n\n        ((eventType) => {\n          requestAnimationFrame(() => {\n            switch( eventType ){\n              // When browser is scrolling and re-calculate just dimensions\n              // within scroll.\n              case 'scroll':\n                this._calcDimensionsWithScroll();\n                this.observeScrollDir();\n                this.stickyPosition();\n                break;\n\n              // When browser is resizing or there's no event, observe width\n              // breakpoint and re-calculate dimensions.\n              case 'resize':\n              default:\n                this._widthBreakpoint();\n                this.calcDimensions();\n                this.stickyPosition(true);\n                break;\n            }\n            this._running = false;\n          });\n        })(event.type);\n      }\n\n      /**\n       * Set browser support features to the public property.\n       * @private\n       */\n      _setSupportFeatures(){\n        var support = this.support;\n\n        support.transform = StickySidebar.supportTransform();\n        support.transform3d = StickySidebar.supportTransform(true);\n      }\n\n      /**\n       * Get translate value, if the browser supports transfrom3d, it will adopt it.\n       * and the same with translate. if browser doesn't support both return false.\n       * @param {Number} y - Value of Y-axis.\n       * @param {Number} x - Value of X-axis.\n       * @param {Number} z - Value of Z-axis.\n       * @return {String|False}\n       */\n      _getTranslate(y = 0, x = 0, z = 0){\n        if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\n        else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\n        else return false;\n      }\n\n      /**\n       * Destroy sticky sidebar plugin.\n       * @public\n       */\n      destroy(){\n        window.removeEventListener('resize', this, {capture: false});\n        window.removeEventListener('scroll', this, {capture: false});\n\n        this.sidebar.classList.remove(this.options.stickyClass);\n        this.sidebar.style.minHeight = '';\n\n        this.sidebar.removeEventListener('update' + EVENT_KEY, this);\n\n        var styleReset = {inner: {}, outer: {}};\n\n        styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\n        styleReset.outer = {height: '', position: ''};\n\n        for( let key in styleReset.outer )\n          this.sidebar.style[key] = styleReset.outer[key];\n\n        for( let key in styleReset.inner )\n          this.sidebarInner.style[key] = styleReset.inner[key];\n\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\n          ResizeSensor.detach(this.sidebarInner, this.handleEvent);\n          ResizeSensor.detach(this.container, this.handleEvent);\n        }\n      }\n\n      /**\n       * Determine if the browser supports CSS transform feature.\n       * @function\n       * @static\n       * @param {Boolean} transform3d - Detect transform with translate3d.\n       * @return {String}\n       */\n      static supportTransform(transform3d){\n        var result = false,\n            property = (transform3d) ? 'perspective' : 'transform',\n            upper = property.charAt(0).toUpperCase() + property.slice(1),\n            prefixes = ['Webkit', 'Moz', 'O', 'ms'],\n            support = document.createElement('support'),\n            style = support.style;\n\n        (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\n          if (style[property] !== undefined) {\n            result = property;\n            return false;\n          }\n        });\n        return result;\n      }\n\n      /**\n       * Trigger custom event.\n       * @static\n       * @param {DOMObject} element - Target element on the DOM.\n       * @param {String} eventName - Event name.\n       * @param {Object} data -\n       */\n      static eventTrigger(element, eventName, data){\n        try{\n          var event = new CustomEvent(eventName, {detail: data});\n        } catch(e){\n          var event = document.createEvent('CustomEvent');\n          event.initCustomEvent(eventName, true, true, data);\n        }\n        element.dispatchEvent(event);\n      }\n\n      /**\n       * Extend options object with defaults.\n       * @function\n       * @static\n       */\n      static extend(defaults, options){\n        var results = {};\n        for( let key in defaults ){\n          if( 'undefined' !== typeof options[key] ) results[key] = options[key];\n          else results[key] = defaults[key];\n        }\n        return results;\n      }\n\n      /**\n       * Get current coordinates left and top of specific element.\n       * @static\n       */\n      static offsetRelative(element){\n        var result = {left: 0, top: 0};\n\n        do{\n          let offsetTop = element.offsetTop;\n          let offsetLeft = element.offsetLeft;\n\n          if( ! isNaN(offsetTop) )\n            result.top += offsetTop;\n\n          if( ! isNaN(offsetLeft) )\n            result.left += offsetLeft;\n\n          element = ( 'BODY' === element.tagName ) ?\n                      element.parentElement : element.offsetParent;\n        } while(element)\n        return result;\n      }\n\n      /**\n       * Add specific class name to specific element.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static addClass(element, className){\n        if( ! StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.add(className);\n          else\n            element.className += ' ' + className;\n        }\n      }\n\n      /**\n       * Remove specific class name to specific element\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static removeClass(element, className){\n        if( StickySidebar.hasClass(element, className) ){\n          if (element.classList)\n            element.classList.remove(className);\n          else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n      }\n\n      /**\n       * Determine weather the element has specific class name.\n       * @static\n       * @param {ObjectDOM} element\n       * @param {String} className\n       */\n      static hasClass(element, className){\n        if (element.classList)\n          return element.classList.contains(className);\n        else\n          return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n      }\n\n      /**\n       * Gets default values of configuration options.\n       * @static\n       * @return {Object}\n       */\n      static get defaults(){\n        return DEFAULTS;\n      }\n    }\n\n    return StickySidebar;\n  })();\n\n  export default StickySidebar;\n\n  // Global\n  // -------------------------\n  window.StickySidebar = StickySidebar;\n","import StickySidebar from \"sticky-sidebar-v2\";\r\n\r\nif (document.querySelector('.sidebar')) {\r\n  var sidebar = new StickySidebar('.sidebar', {\r\n          containerSelector: '.layout',\r\n          innerWrapperSelector: '.sidebar__inner',\r\n          topSpacing: 30,\r\n          bottomSpacing: 20\r\n  });\r\n}\r\n","var objectExtend = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(\n            true,\n            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n              ? result[key]\n              : base,\n            value\n          );\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || (typeof val != 'object' && typeof val != 'function');\n}\n\nexport {objectExtend as default};\n","import $ewBKy$justextend from \"just-extend\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nclass $4040acfd8584338d$export$2e2bcd8739ae039 {\n    // Add an event listener for given event\n    on(event, fn) {\n        this._callbacks = this._callbacks || {\n        };\n        // Create namespace for this event\n        if (!this._callbacks[event]) this._callbacks[event] = [];\n        this._callbacks[event].push(fn);\n        return this;\n    }\n    emit(event, ...args) {\n        this._callbacks = this._callbacks || {\n        };\n        let callbacks = this._callbacks[event];\n        if (callbacks) for (let callback of callbacks)callback.apply(this, args);\n        // trigger a corresponding DOM event\n        if (this.element) this.element.dispatchEvent(this.makeEvent(\"dropzone:\" + event, {\n            args: args\n        }));\n        return this;\n    }\n    makeEvent(eventName, detail) {\n        let params = {\n            bubbles: true,\n            cancelable: true,\n            detail: detail\n        };\n        if (typeof window.CustomEvent === \"function\") return new CustomEvent(eventName, params);\n        else {\n            // IE 11 support\n            // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n            var evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        }\n    }\n    // Remove event listener for given event. If fn is not provided, all event\n    // listeners for that event will be removed. If neither is provided, all\n    // event listeners will be removed.\n    off(event, fn) {\n        if (!this._callbacks || arguments.length === 0) {\n            this._callbacks = {\n            };\n            return this;\n        }\n        // specific event\n        let callbacks = this._callbacks[event];\n        if (!callbacks) return this;\n        // remove all handlers\n        if (arguments.length === 1) {\n            delete this._callbacks[event];\n            return this;\n        }\n        // remove specific handler\n        for(let i = 0; i < callbacks.length; i++){\n            let callback = callbacks[i];\n            if (callback === fn) {\n                callbacks.splice(i, 1);\n                break;\n            }\n        }\n        return this;\n    }\n}\n\n\n\nvar $fd6031f88dce2e32$exports = {};\n$fd6031f88dce2e32$exports = \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail=\\\"\\\"></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size=\\\"\\\"></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name=\\\"\\\"></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\">\\n    <span class=\\\"dz-upload\\\" data-dz-uploadprogress=\\\"\\\"></span>\\n  </div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage=\\\"\\\"></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z\\\"></path>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54\\\" height=\\\"54\\\" viewBox=\\\"0 0 54 54\\\" fill=\\\"white\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path d=\\\"M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z\\\"></path>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\n\nlet $4ca367182776f80b$var$defaultOptions = {\n    /**\n   * Has to be specified on elements other than form (or when the form doesn't\n   * have an `action` attribute).\n   *\n   * You can also provide a function that will be called with `files` and\n   * `dataBlocks`  and must return the url as string.\n   */ url: null,\n    /**\n   * Can be changed to `\"put\"` if necessary. You can also provide a function\n   * that will be called with `files` and must return the method (since `v3.12.0`).\n   */ method: \"post\",\n    /**\n   * Will be set on the XHRequest.\n   */ withCredentials: false,\n    /**\n   * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n   * If set to null or 0, no timeout is going to be set.\n   */ timeout: null,\n    /**\n   * How many file uploads to process in parallel (See the\n   * Enqueuing file uploads documentation section for more info)\n   */ parallelUploads: 2,\n    /**\n   * Whether to send multiple files in one request. If\n   * this it set to true, then the fallback file input element will\n   * have the `multiple` attribute as well. This option will\n   * also trigger additional events (like `processingmultiple`). See the events\n   * documentation section for more information.\n   */ uploadMultiple: false,\n    /**\n   * Whether you want files to be uploaded in chunks to your server. This can't be\n   * used in combination with `uploadMultiple`.\n   *\n   * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n   */ chunking: false,\n    /**\n   * If `chunking` is enabled, this defines whether **every** file should be chunked,\n   * even if the file size is below chunkSize. This means, that the additional chunk\n   * form data will be submitted and the `chunksUploaded` callback will be invoked.\n   */ forceChunking: false,\n    /**\n   * If `chunking` is `true`, then this defines the chunk size in bytes.\n   */ chunkSize: 2097152,\n    /**\n   * If `true`, the individual chunks of a file are being uploaded simultaneously.\n   */ parallelChunkUploads: false,\n    /**\n   * Whether a chunk should be retried if it fails.\n   */ retryChunks: false,\n    /**\n   * If `retryChunks` is true, how many times should it be retried.\n   */ retryChunksLimit: 3,\n    /**\n   * The maximum filesize (in MiB) that is allowed to be uploaded.\n   */ maxFilesize: 256,\n    /**\n   * The name of the file param that gets transferred.\n   * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n   * Dropzone will append `[]` to the name.\n   */ paramName: \"file\",\n    /**\n   * Whether thumbnails for images should be generated\n   */ createImageThumbnails: true,\n    /**\n   * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n   */ maxThumbnailFilesize: 10,\n    /**\n   * If `null`, the ratio of the image will be used to calculate it.\n   */ thumbnailWidth: 120,\n    /**\n   * The same as `thumbnailWidth`. If both are null, images will not be resized.\n   */ thumbnailHeight: 120,\n    /**\n   * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ thumbnailMethod: \"crop\",\n    /**\n   * If set, images will be resized to these dimensions before being **uploaded**.\n   * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n   * ratio of the file will be preserved.\n   *\n   * The `options.transformFile` function uses these options, so if the `transformFile` function\n   * is overridden, these options don't do anything.\n   */ resizeWidth: null,\n    /**\n   * See `resizeWidth`.\n   */ resizeHeight: null,\n    /**\n   * The mime type of the resized image (before it gets uploaded to the server).\n   * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n   * See `resizeWidth` for more information.\n   */ resizeMimeType: null,\n    /**\n   * The quality of the resized images. See `resizeWidth`.\n   */ resizeQuality: 0.8,\n    /**\n   * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n   * Can be either `contain` or `crop`.\n   */ resizeMethod: \"contain\",\n    /**\n   * The base that is used to calculate the **displayed** filesize. You can\n   * change this to 1024 if you would rather display kibibytes, mebibytes,\n   * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`\n   * not `1 kilobyte`. You can change this to `1024` if you don't care about\n   * validity.\n   */ filesizeBase: 1000,\n    /**\n   * If not `null` defines how many files this Dropzone handles. If it exceeds,\n   * the event `maxfilesexceeded` will be called. The dropzone element gets the\n   * class `dz-max-files-reached` accordingly so you can provide visual\n   * feedback.\n   */ maxFiles: null,\n    /**\n   * An optional object to send additional headers to the server. Eg:\n   * `{ \"My-Awesome-Header\": \"header value\" }`\n   */ headers: null,\n    /**\n   * Should the default headers be set or not?\n   * Accept: application/json <- for requesting json response\n   * Cache-Control: no-cache <- Request shouldnt be cached\n   * X-Requested-With: XMLHttpRequest <- We sent the request via XMLHttpRequest\n   */ defaultHeaders: true,\n    /**\n   * If `true`, the dropzone element itself will be clickable, if `false`\n   * nothing will be clickable.\n   *\n   * You can also pass an HTML element, a CSS selector (for multiple elements)\n   * or an array of those. In that case, all of those elements will trigger an\n   * upload when clicked.\n   */ clickable: true,\n    /**\n   * Whether hidden files in directories should be ignored.\n   */ ignoreHiddenFiles: true,\n    /**\n   * The default implementation of `accept` checks the file's mime type or\n   * extension against this list. This is a comma separated list of mime\n   * types or file extensions.\n   *\n   * Eg.: `image/*,application/pdf,.psd`\n   *\n   * If the Dropzone is `clickable` this option will also be used as\n   * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n   * parameter on the hidden file input as well.\n   */ acceptedFiles: null,\n    /**\n   * **Deprecated!**\n   * Use acceptedFiles instead.\n   */ acceptedMimeTypes: null,\n    /**\n   * If false, files will be added to the queue but the queue will not be\n   * processed automatically.\n   * This can be useful if you need some additional user input before sending\n   * files (or if you want want all files sent at once).\n   * If you're ready to send the file simply call `myDropzone.processQueue()`.\n   *\n   * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n   * section for more information.\n   */ autoProcessQueue: true,\n    /**\n   * If false, files added to the dropzone will not be queued by default.\n   * You'll have to call `enqueueFile(file)` manually.\n   */ autoQueue: true,\n    /**\n   * If `true`, this will add a link to every file preview to remove or cancel (if\n   * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n   * and `dictRemoveFile` options are used for the wording.\n   */ addRemoveLinks: false,\n    /**\n   * Defines where to display the file previews – if `null` the\n   * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n   * selector. The element should have the `dropzone-previews` class so\n   * the previews are displayed properly.\n   */ previewsContainer: null,\n    /**\n   * Set this to `true` if you don't want previews to be shown.\n   */ disablePreviews: false,\n    /**\n   * This is the element the hidden input field (which is used when clicking on the\n   * dropzone to trigger file selection) will be appended to. This might\n   * be important in case you use frameworks to switch the content of your page.\n   *\n   * Can be a selector string, or an element directly.\n   */ hiddenInputContainer: \"body\",\n    /**\n   * If null, no capture type will be specified\n   * If camera, mobile devices will skip the file selection and choose camera\n   * If microphone, mobile devices will skip the file selection and choose the microphone\n   * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n   * On apple devices multiple must be set to false.  AcceptedFiles may need to\n   * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n   */ capture: null,\n    /**\n   * **Deprecated**. Use `renameFile` instead.\n   */ renameFilename: null,\n    /**\n   * A function that is invoked before the file is uploaded to the server and renames the file.\n   * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n   * file that gets used during the upload can be accessed through `file.upload.filename`.\n   */ renameFile: null,\n    /**\n   * If `true` the fallback will be forced. This is very useful to test your server\n   * implementations first and make sure that everything works as\n   * expected without dropzone if you experience problems, and to test\n   * how your fallbacks will look.\n   */ forceFallback: false,\n    /**\n   * The text used before any files are dropped.\n   */ dictDefaultMessage: \"Drop files here to upload\",\n    /**\n   * The text that replaces the default message text it the browser is not supported.\n   */ dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n    /**\n   * The text that will be added before the fallback form.\n   * If you provide a  fallback element yourself, or if this option is `null` this will\n   * be ignored.\n   */ dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n    /**\n   * If the filesize is too big.\n   * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n   */ dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n    /**\n   * If the file doesn't match the file type.\n   */ dictInvalidFileType: \"You can't upload files of this type.\",\n    /**\n   * If the server response was invalid.\n   * `{{statusCode}}` will be replaced with the servers status code.\n   */ dictResponseError: \"Server responded with {{statusCode}} code.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n   */ dictCancelUpload: \"Cancel upload\",\n    /**\n   * The text that is displayed if an upload was manually canceled\n   */ dictUploadCanceled: \"Upload canceled.\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n   */ dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n    /**\n   * If `addRemoveLinks` is true, the text to be used to remove a file.\n   */ dictRemoveFile: \"Remove file\",\n    /**\n   * If this is not null, then the user will be prompted before removing a file.\n   */ dictRemoveFileConfirmation: null,\n    /**\n   * Displayed if `maxFiles` is st and exceeded.\n   * The string `{{maxFiles}}` will be replaced by the configuration value.\n   */ dictMaxFilesExceeded: \"You can not upload any more files.\",\n    /**\n   * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n   * `b` for bytes.\n   */ dictFileSizeUnits: {\n        tb: \"TB\",\n        gb: \"GB\",\n        mb: \"MB\",\n        kb: \"KB\",\n        b: \"b\"\n    },\n    /**\n   * Called when dropzone initialized\n   * You can add event listeners here\n   */ init () {\n    },\n    /**\n   * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n   * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n   * of a function, this needs to return a map.\n   *\n   * The default implementation does nothing for normal uploads, but adds relevant information for\n   * chunked uploads.\n   *\n   * This is the same as adding hidden input fields in the form element.\n   */ params (files, xhr, chunk) {\n        if (chunk) return {\n            dzuuid: chunk.file.upload.uuid,\n            dzchunkindex: chunk.index,\n            dztotalfilesize: chunk.file.size,\n            dzchunksize: this.options.chunkSize,\n            dztotalchunkcount: chunk.file.upload.totalChunkCount,\n            dzchunkbyteoffset: chunk.index * this.options.chunkSize\n        };\n    },\n    /**\n   * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n   * and a `done` function as parameters.\n   *\n   * If the done function is invoked without arguments, the file is \"accepted\" and will\n   * be processed. If you pass an error message, the file is rejected, and the error\n   * message will be displayed.\n   * This function will not be called if the file is too big or doesn't match the mime types.\n   */ accept (file, done) {\n        return done();\n    },\n    /**\n   * The callback that will be invoked when all chunks have been uploaded for a file.\n   * It gets the file for which the chunks have been uploaded as the first parameter,\n   * and the `done` function as second. `done()` needs to be invoked when everything\n   * needed to finish the upload process is done.\n   */ chunksUploaded: function(file, done) {\n        done();\n    },\n    /**\n   * Sends the file as binary blob in body instead of form data.\n   * If this is set, the `params` option will be ignored.\n   * It's an error to set this to `true` along with `uploadMultiple` since\n   * multiple files cannot be in a single binary body.\n   */ binaryBody: false,\n    /**\n   * Gets called when the browser is not supported.\n   * The default implementation shows the fallback input field and adds\n   * a text.\n   */ fallback () {\n        // This code should pass in IE7... :(\n        let messageElement;\n        this.element.className = `${this.element.className} dz-browser-not-supported`;\n        for (let child of this.element.getElementsByTagName(\"div\"))if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\"; // Removes the 'dz-default' class\n            break;\n        }\n        if (!messageElement) {\n            messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class=\"dz-message\"><span></span></div>');\n            this.element.appendChild(messageElement);\n        }\n        let span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n            if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;\n            else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;\n        }\n        return this.element.appendChild(this.getFallbackForm());\n    },\n    /**\n   * Gets called to calculate the thumbnail dimensions.\n   *\n   * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n   *\n   *  - `srcWidth` & `srcHeight` (required)\n   *  - `trgWidth` & `trgHeight` (required)\n   *  - `srcX` & `srcY` (optional, default `0`)\n   *  - `trgX` & `trgY` (optional, default `0`)\n   *\n   * Those values are going to be used by `ctx.drawImage()`.\n   */ resize (file, width, height, resizeMethod) {\n        let info = {\n            srcX: 0,\n            srcY: 0,\n            srcWidth: file.width,\n            srcHeight: file.height\n        };\n        let srcRatio = file.width / file.height;\n        // Automatically calculate dimensions if not specified\n        if (width == null && height == null) {\n            width = info.srcWidth;\n            height = info.srcHeight;\n        } else if (width == null) width = height * srcRatio;\n        else if (height == null) height = width / srcRatio;\n        // Make sure images aren't upscaled\n        width = Math.min(width, info.srcWidth);\n        height = Math.min(height, info.srcHeight);\n        let trgRatio = width / height;\n        if (info.srcWidth > width || info.srcHeight > height) {\n            // Image is bigger and needs rescaling\n            if (resizeMethod === \"crop\") {\n                if (srcRatio > trgRatio) {\n                    info.srcHeight = file.height;\n                    info.srcWidth = info.srcHeight * trgRatio;\n                } else {\n                    info.srcWidth = file.width;\n                    info.srcHeight = info.srcWidth / trgRatio;\n                }\n            } else if (resizeMethod === \"contain\") {\n                // Method 'contain'\n                if (srcRatio > trgRatio) height = width / srcRatio;\n                else width = height * srcRatio;\n            } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        info.trgWidth = width;\n        info.trgHeight = height;\n        return info;\n    },\n    /**\n   * Can be used to transform the file (for example, resize an image if necessary).\n   *\n   * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n   * images according to those dimensions.\n   *\n   * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n   * to be invoked with the file when the transformation is done.\n   */ transformFile (file, done) {\n        if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n        else return done(file);\n    },\n    /**\n   * A string that contains the template used for each dropped\n   * file. Change it to fulfill your needs but make sure to properly\n   * provide all elements.\n   *\n   * If you want to use an actual HTML element instead of providing a String\n   * as a config option, you could create a div with the id `tpl`,\n   * put the template inside it and provide the element like this:\n   *\n   *     document\n   *       .querySelector('#tpl')\n   *       .innerHTML\n   *\n   */ previewTemplate: (/*@__PURE__*/$parcel$interopDefault($fd6031f88dce2e32$exports)),\n    /*\n   Those functions register themselves to the events on init and handle all\n   the user interface specific stuff. Overwriting them won't break the upload\n   but can break the way it's displayed.\n   You can overwrite them if you don't like the default behavior. If you just\n   want to add an additional event handler, register it on the dropzone object\n   and don't overwrite those options.\n   */ // Those are self explanatory and simply concern the DragnDrop.\n    drop (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragstart (e) {\n    },\n    dragend (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    dragenter (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragover (e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n    },\n    dragleave (e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n    },\n    paste (e) {\n    },\n    // Called whenever there are no files left in the dropzone anymore, and the\n    // dropzone should be displayed as if in the initial state.\n    reset () {\n        return this.element.classList.remove(\"dz-started\");\n    },\n    // Called when a file is added to the queue\n    // Receives `file`\n    addedfile (file) {\n        if (this.element === this.previewsContainer) this.element.classList.add(\"dz-started\");\n        if (this.previewsContainer && !this.options.disablePreviews) {\n            file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());\n            file.previewTemplate = file.previewElement; // Backwards compatibility\n            this.previewsContainer.appendChild(file.previewElement);\n            for (var node of file.previewElement.querySelectorAll(\"[data-dz-name]\"))node.textContent = file.name;\n            for (node of file.previewElement.querySelectorAll(\"[data-dz-size]\"))node.innerHTML = this.filesize(file.size);\n            if (this.options.addRemoveLinks) {\n                file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>${this.options.dictRemoveFile}</a>`);\n                file.previewElement.appendChild(file._removeLink);\n            }\n            let removeFileEvent = (e)=>{\n                e.preventDefault();\n                e.stopPropagation();\n                if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file)\n                );\n                else {\n                    if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file)\n                    );\n                    else return this.removeFile(file);\n                }\n            };\n            for (let removeLink of file.previewElement.querySelectorAll(\"[data-dz-remove]\"))removeLink.addEventListener(\"click\", removeFileEvent);\n        }\n    },\n    // Called whenever a file is removed.\n    removedfile (file) {\n        if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);\n        return this._updateMaxFilesReachedClass();\n    },\n    // Called when a thumbnail has been generated\n    // Receives `file` and `dataUrl`\n    thumbnail (file, dataUrl) {\n        if (file.previewElement) {\n            file.previewElement.classList.remove(\"dz-file-preview\");\n            for (let thumbnailElement of file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")){\n                thumbnailElement.alt = file.name;\n                thumbnailElement.src = dataUrl;\n            }\n            return setTimeout(()=>file.previewElement.classList.add(\"dz-image-preview\")\n            , 1);\n        }\n    },\n    // Called whenever an error occurs\n    // Receives `file` and `message`\n    error (file, message) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-error\");\n            if (typeof message !== \"string\" && message.error) message = message.error;\n            for (let node of file.previewElement.querySelectorAll(\"[data-dz-errormessage]\"))node.textContent = message;\n        }\n    },\n    errormultiple () {\n    },\n    // Called when a file gets processed. Since there is a cue, not all added\n    // files are processed immediately.\n    // Receives `file`\n    processing (file) {\n        if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-processing\");\n            if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;\n        }\n    },\n    processingmultiple () {\n    },\n    // Called whenever the upload progress gets updated.\n    // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n    // To get the total number of bytes of the file, use `file.size`\n    uploadprogress (file, progress, bytesSent) {\n        if (file.previewElement) for (let node of file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"))node.nodeName === \"PROGRESS\" ? node.value = progress : node.style.width = `${progress}%`;\n    },\n    // Called whenever the total upload progress gets updated.\n    // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n    totaluploadprogress () {\n    },\n    // Called just before the file is sent. Gets the `xhr` object as second\n    // parameter, so you can modify it (for example to add a CSRF token) and a\n    // `formData` object to add additional information.\n    sending () {\n    },\n    sendingmultiple () {\n    },\n    // When the complete upload is finished and successful\n    // Receives `file`\n    success (file) {\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-success\");\n    },\n    successmultiple () {\n    },\n    // When the upload is canceled.\n    canceled (file) {\n        return this.emit(\"error\", file, this.options.dictUploadCanceled);\n    },\n    canceledmultiple () {\n    },\n    // When the upload is finished, either with success or an error.\n    // Receives `file`\n    complete (file) {\n        if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;\n        if (file.previewElement) return file.previewElement.classList.add(\"dz-complete\");\n    },\n    completemultiple () {\n    },\n    maxfilesexceeded () {\n    },\n    maxfilesreached () {\n    },\n    queuecomplete () {\n    },\n    addedfiles () {\n    }\n};\nvar $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;\n\n\nclass $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {\n    static initClass() {\n        // Exposing the emitter class, mainly for tests\n        this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;\n        /*\n     This is a list of all available events you can register on a dropzone object.\n\n     You can register an event handler like this:\n\n     dropzone.on(\"dragEnter\", function() { });\n\n     */ this.prototype.events = [\n            \"drop\",\n            \"dragstart\",\n            \"dragend\",\n            \"dragenter\",\n            \"dragover\",\n            \"dragleave\",\n            \"addedfile\",\n            \"addedfiles\",\n            \"removedfile\",\n            \"thumbnail\",\n            \"error\",\n            \"errormultiple\",\n            \"processing\",\n            \"processingmultiple\",\n            \"uploadprogress\",\n            \"totaluploadprogress\",\n            \"sending\",\n            \"sendingmultiple\",\n            \"success\",\n            \"successmultiple\",\n            \"canceled\",\n            \"canceledmultiple\",\n            \"complete\",\n            \"completemultiple\",\n            \"reset\",\n            \"maxfilesexceeded\",\n            \"maxfilesreached\",\n            \"queuecomplete\", \n        ];\n        this.prototype._thumbnailQueue = [];\n        this.prototype._processingThumbnail = false;\n    }\n    // Returns all files that have been accepted\n    getAcceptedFiles() {\n        return this.files.filter((file)=>file.accepted\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that have been rejected\n    // Not sure when that's going to be useful, but added for completeness.\n    getRejectedFiles() {\n        return this.files.filter((file)=>!file.accepted\n        ).map((file)=>file\n        );\n    }\n    getFilesWithStatus(status) {\n        return this.files.filter((file)=>file.status === status\n        ).map((file)=>file\n        );\n    }\n    // Returns all files that are in the queue\n    getQueuedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);\n    }\n    getUploadingFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);\n    }\n    getAddedFiles() {\n        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);\n    }\n    // Files that are either queued or uploading\n    getActiveFiles() {\n        return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED\n        ).map((file)=>file\n        );\n    }\n    // The function that gets called when Dropzone is initialized. You\n    // can (and should) setup event listeners inside this function.\n    init() {\n        // In case it isn't set already\n        if (this.element.tagName === \"form\") this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">${this.options.dictDefaultMessage}</button></div>`));\n        if (this.clickableElements.length) {\n            let setupHiddenFileInput = ()=>{\n                if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                this.hiddenFileInput = document.createElement(\"input\");\n                this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                this.hiddenFileInput.className = \"dz-hidden-input\";\n                if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute(\"accept\", this.options.acceptedFiles);\n                if (this.options.capture !== null) this.hiddenFileInput.setAttribute(\"capture\", this.options.capture);\n                // Making sure that no one can \"tab\" into this field.\n                this.hiddenFileInput.setAttribute(\"tabindex\", \"-1\");\n                // Not setting `display=\"none\"` because some browsers don't accept clicks\n                // on elements that aren't displayed.\n                this.hiddenFileInput.style.visibility = \"hidden\";\n                this.hiddenFileInput.style.position = \"absolute\";\n                this.hiddenFileInput.style.top = \"0\";\n                this.hiddenFileInput.style.left = \"0\";\n                this.hiddenFileInput.style.height = \"0\";\n                this.hiddenFileInput.style.width = \"0\";\n                $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(this.hiddenFileInput);\n                this.hiddenFileInput.addEventListener(\"change\", ()=>{\n                    let { files: files  } = this.hiddenFileInput;\n                    if (files.length) for (let file of files)this.addFile(file);\n                    this.emit(\"addedfiles\", files);\n                    setupHiddenFileInput();\n                });\n            };\n            setupHiddenFileInput();\n        }\n        this.URL = window.URL !== null ? window.URL : window.webkitURL;\n        // Setup all event listeners on the Dropzone object itself.\n        // They're not in @setupEventListeners() because they shouldn't be removed\n        // again when the dropzone gets disabled.\n        for (let eventName of this.events)this.on(eventName, this.options[eventName]);\n        this.on(\"uploadprogress\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"removedfile\", ()=>this.updateTotalUploadProgress()\n        );\n        this.on(\"canceled\", (file)=>this.emit(\"complete\", file)\n        );\n        // Emit a `queuecomplete` event if all files finished uploading.\n        this.on(\"complete\", (file)=>{\n            if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n            return setTimeout(()=>this.emit(\"queuecomplete\")\n            , 0);\n        });\n        const containsFiles = function(e) {\n            if (e.dataTransfer.types) // Because e.dataTransfer.types is an Object in\n            // IE, we need to iterate like this instead of\n            // using e.dataTransfer.types.some()\n            for(var i = 0; i < e.dataTransfer.types.length; i++){\n                if (e.dataTransfer.types[i] === \"Files\") return true;\n            }\n            return false;\n        };\n        let noPropagation = function(e) {\n            // If there are no files, we don't want to stop\n            // propagation so we don't interfere with other\n            // drag and drop behaviour.\n            if (!containsFiles(e)) return;\n            e.stopPropagation();\n            if (e.preventDefault) return e.preventDefault();\n            else return e.returnValue = false;\n        };\n        // Create the listeners\n        this.listeners = [\n            {\n                element: this.element,\n                events: {\n                    dragstart: (e)=>{\n                        return this.emit(\"dragstart\", e);\n                    },\n                    dragenter: (e)=>{\n                        noPropagation(e);\n                        return this.emit(\"dragenter\", e);\n                    },\n                    dragover: (e)=>{\n                        // Makes it possible to drag files from chrome's download bar\n                        // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n                        // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n                        let efct;\n                        try {\n                            efct = e.dataTransfer.effectAllowed;\n                        } catch (error) {\n                        }\n                        e.dataTransfer.dropEffect = \"move\" === efct || \"linkMove\" === efct ? \"move\" : \"copy\";\n                        noPropagation(e);\n                        return this.emit(\"dragover\", e);\n                    },\n                    dragleave: (e)=>{\n                        return this.emit(\"dragleave\", e);\n                    },\n                    drop: (e)=>{\n                        noPropagation(e);\n                        return this.drop(e);\n                    },\n                    dragend: (e)=>{\n                        return this.emit(\"dragend\", e);\n                    }\n                }\n            }, \n        ];\n        this.clickableElements.forEach((clickableElement)=>{\n            return this.listeners.push({\n                element: clickableElement,\n                events: {\n                    click: (evt)=>{\n                        // Only the actual dropzone or the message element should trigger file selection\n                        if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(\".dz-message\"))) this.hiddenFileInput.click(); // Forward the click\n                        return true;\n                    }\n                }\n            });\n        });\n        this.enable();\n        return this.options.init.call(this);\n    }\n    // Not fully tested yet\n    destroy() {\n        this.disable();\n        this.removeAllFiles(true);\n        if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n            this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n            this.hiddenFileInput = null;\n        }\n        delete this.element.dropzone;\n        return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);\n    }\n    updateTotalUploadProgress() {\n        let totalUploadProgress;\n        let totalBytesSent = 0;\n        let totalBytes = 0;\n        let activeFiles = this.getActiveFiles();\n        if (activeFiles.length) {\n            for (let file of this.getActiveFiles()){\n                totalBytesSent += file.upload.bytesSent;\n                totalBytes += file.upload.total;\n            }\n            totalUploadProgress = 100 * totalBytesSent / totalBytes;\n        } else totalUploadProgress = 100;\n        return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    }\n    // @options.paramName can be a function taking one parameter rather than a string.\n    // A parameter name for a file is obtained simply by calling this with an index number.\n    _getParamName(n) {\n        if (typeof this.options.paramName === \"function\") return this.options.paramName(n);\n        else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : \"\"}`;\n    }\n    // If @options.renameFile is a function,\n    // the function will be used to rename the file.name before appending it to the formData\n    _renameFile(file) {\n        if (typeof this.options.renameFile !== \"function\") return file.name;\n        return this.options.renameFile(file);\n    }\n    // Returns a form that can be used as fallback if the browser does not support DragnDrop\n    //\n    // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n    // This code has to pass in IE7 :(\n    getFallbackForm() {\n        let existingFallback, form;\n        if (existingFallback = this.getExistingFallback()) return existingFallback;\n        let fieldsString = '<div class=\"dz-fallback\">';\n        if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;\n        fieldsString += `<input type=\"file\" name=\"${this._getParamName(0)}\" ${this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined} /><input type=\"submit\" value=\"Upload!\"></div>`;\n        let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);\n        if (this.element.tagName !== \"FORM\") {\n            form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action=\"${this.options.url}\" enctype=\"multipart/form-data\" method=\"${this.options.method}\"></form>`);\n            form.appendChild(fields);\n        } else {\n            // Make sure that the enctype and method attributes are set properly\n            this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n            this.element.setAttribute(\"method\", this.options.method);\n        }\n        return form != null ? form : fields;\n    }\n    // Returns the fallback elements if they exist already\n    //\n    // This code has to pass in IE7 :(\n    getExistingFallback() {\n        let getFallback = function(elements) {\n            for (let el of elements){\n                if (/(^| )fallback($| )/.test(el.className)) return el;\n            }\n        };\n        for (let tagName of [\n            \"div\",\n            \"form\"\n        ]){\n            var fallback;\n            if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;\n        }\n    }\n    // Activates all listeners stored in @listeners\n    setupEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.addEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Deactivates all listeners stored in @listeners\n    removeEventListeners() {\n        return this.listeners.map((elementListeners)=>(()=>{\n                let result = [];\n                for(let event in elementListeners.events){\n                    let listener = elementListeners.events[event];\n                    result.push(elementListeners.element.removeEventListener(event, listener, false));\n                }\n                return result;\n            })()\n        );\n    }\n    // Removes all event listeners and cancels all files in the queue or being processed.\n    disable() {\n        this.clickableElements.forEach((element)=>element.classList.remove(\"dz-clickable\")\n        );\n        this.removeEventListeners();\n        this.disabled = true;\n        return this.files.map((file)=>this.cancelUpload(file)\n        );\n    }\n    enable() {\n        delete this.disabled;\n        this.clickableElements.forEach((element)=>element.classList.add(\"dz-clickable\")\n        );\n        return this.setupEventListeners();\n    }\n    // Returns a nicely formatted filesize\n    filesize(size) {\n        let selectedSize = 0;\n        let selectedUnit = \"b\";\n        if (size > 0) {\n            let units = [\n                \"tb\",\n                \"gb\",\n                \"mb\",\n                \"kb\",\n                \"b\"\n            ];\n            for(let i = 0; i < units.length; i++){\n                let unit = units[i];\n                let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                if (size >= cutoff) {\n                    selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                    selectedUnit = unit;\n                    break;\n                }\n            }\n            selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n        }\n        return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;\n    }\n    // Adds or removes the `dz-max-files-reached` class from the form.\n    _updateMaxFilesReachedClass() {\n        if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit(\"maxfilesreached\", this.files);\n            return this.element.classList.add(\"dz-max-files-reached\");\n        } else return this.element.classList.remove(\"dz-max-files-reached\");\n    }\n    drop(e) {\n        if (!e.dataTransfer) return;\n        this.emit(\"drop\", e);\n        // Convert the FileList to an Array\n        // This is necessary for IE11\n        let files = [];\n        for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];\n        // Even if it's a folder, files.length will contain the folders.\n        if (files.length) {\n            let { items: items  } = e.dataTransfer;\n            if (items && items.length && items[0].webkitGetAsEntry != null) // The browser supports dropping of folders, so handle items instead of files\n            this._addFilesFromItems(items);\n            else this.handleFiles(files);\n        }\n        this.emit(\"addedfiles\", files);\n    }\n    paste(e) {\n        if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : undefined, (x)=>x.items\n        ) == null) return;\n        this.emit(\"paste\", e);\n        let { items: items  } = e.clipboardData;\n        if (items.length) return this._addFilesFromItems(items);\n    }\n    handleFiles(files) {\n        for (let file of files)this.addFile(file);\n    }\n    // When a folder is dropped (or files are pasted), items must be handled\n    // instead of files.\n    _addFilesFromItems(items) {\n        return (()=>{\n            let result = [];\n            for (let item of items){\n                var entry;\n                if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n                    if (entry.isFile) result.push(this.addFile(item.getAsFile()));\n                    else if (entry.isDirectory) // Append all files from that directory to files\n                    result.push(this._addFilesFromDirectory(entry, entry.name));\n                    else result.push(undefined);\n                } else if (item.getAsFile != null) {\n                    if (item.kind == null || item.kind === \"file\") result.push(this.addFile(item.getAsFile()));\n                    else result.push(undefined);\n                } else result.push(undefined);\n            }\n            return result;\n        })();\n    }\n    // Goes through the directory, and adds each file it finds recursively\n    _addFilesFromDirectory(directory, path) {\n        let dirReader = directory.createReader();\n        let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, \"log\", (o)=>o.log(error)\n            )\n        ;\n        var readEntries = ()=>{\n            return dirReader.readEntries((entries)=>{\n                if (entries.length > 0) {\n                    for (let entry of entries){\n                        if (entry.isFile) entry.file((file)=>{\n                            if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === \".\") return;\n                            file.fullPath = `${path}/${file.name}`;\n                            return this.addFile(file);\n                        });\n                        else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);\n                    }\n                    // Recursively call readEntries() again, since browser only handle\n                    // the first 100 entries.\n                    // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n                    readEntries();\n                }\n                return null;\n            }, errorHandler);\n        };\n        return readEntries();\n    }\n    // If `done()` is called without argument the file is accepted\n    // If you call it with an error message, the file is rejected\n    // (This allows for asynchronous validation)\n    //\n    // This function checks the filesize, and if the file.type passes the\n    // `acceptedFiles` check.\n    accept(file, done) {\n        if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n        else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);\n        else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n            done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n            this.emit(\"maxfilesexceeded\", file);\n        } else this.options.accept.call(this, file, done);\n    }\n    addFile(file) {\n        file.upload = {\n            uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),\n            progress: 0,\n            // Setting the total upload size to file.size for the beginning\n            // It's actual different than the size to be transmitted.\n            total: file.size,\n            bytesSent: 0,\n            filename: this._renameFile(file)\n        };\n        this.files.push(file);\n        file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;\n        this.emit(\"addedfile\", file);\n        this._enqueueThumbnail(file);\n        this.accept(file, (error)=>{\n            if (error) {\n                file.accepted = false;\n                this._errorProcessing([\n                    file\n                ], error); // Will set the file.status\n            } else {\n                file.accepted = true;\n                if (this.options.autoQueue) this.enqueueFile(file);\n                 // Will set .accepted = true\n            }\n            this._updateMaxFilesReachedClass();\n        });\n    }\n    // Wrapper for enqueueFile\n    enqueueFiles(files) {\n        for (let file of files)this.enqueueFile(file);\n        return null;\n    }\n    enqueueFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n            if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue()\n            , 0); // Deferring the call\n        } else throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n    }\n    _enqueueThumbnail(file) {\n        if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {\n            this._thumbnailQueue.push(file);\n            return setTimeout(()=>this._processThumbnailQueue()\n            , 0); // Deferring the call\n        }\n    }\n    _processThumbnailQueue() {\n        if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;\n        this._processingThumbnail = true;\n        let file = this._thumbnailQueue.shift();\n        return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{\n            this.emit(\"thumbnail\", file, dataUrl);\n            this._processingThumbnail = false;\n            return this._processThumbnailQueue();\n        });\n    }\n    // Can be called by the user to remove a file\n    removeFile(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);\n        this.files = $3ed269f2f0fb224b$var$without(this.files, file);\n        this.emit(\"removedfile\", file);\n        if (this.files.length === 0) return this.emit(\"reset\");\n    }\n    // Removes all files that aren't currently processed from the list\n    removeAllFiles(cancelIfNecessary) {\n        // Create a copy of files since removeFile() changes the @files array.\n        if (cancelIfNecessary == null) cancelIfNecessary = false;\n        for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);\n        return null;\n    }\n    // Resizes an image before it gets sent to the server. This function is the default behavior of\n    // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n    // the resized blob.\n    resizeImage(file, width, height, resizeMethod, callback) {\n        return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{\n            if (canvas == null) // The image has not been resized\n            return callback(file);\n            else {\n                let { resizeMimeType: resizeMimeType  } = this.options;\n                if (resizeMimeType == null) resizeMimeType = file.type;\n                let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);\n                if (resizeMimeType === \"image/jpeg\" || resizeMimeType === \"image/jpg\") // Now add the original EXIF information\n                resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);\n                return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));\n            }\n        });\n    }\n    createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n        let fileReader = new FileReader();\n        fileReader.onload = ()=>{\n            file.dataURL = fileReader.result;\n            // Don't bother creating a thumbnail for SVG images since they're vector\n            if (file.type === \"image/svg+xml\") {\n                if (callback != null) callback(fileReader.result);\n                return;\n            }\n            this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n        };\n        fileReader.readAsDataURL(file);\n    }\n    // `mockFile` needs to have these attributes:\n    //\n    //     { name: 'name', size: 12345, imageUrl: '' }\n    //\n    // `callback` will be invoked when the image has been downloaded and displayed.\n    // `crossOrigin` will be added to the `img` tag when accessing the file.\n    displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {\n        this.emit(\"addedfile\", mockFile);\n        this.emit(\"complete\", mockFile);\n        if (!resizeThumbnail) {\n            this.emit(\"thumbnail\", mockFile, imageUrl);\n            if (callback) callback();\n        } else {\n            let onDone = (thumbnail)=>{\n                this.emit(\"thumbnail\", mockFile, thumbnail);\n                if (callback) callback();\n            };\n            mockFile.dataURL = imageUrl;\n            this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);\n        }\n    }\n    createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n        // Not using `new Image` here because of a bug in latest Chrome versions.\n        // See https://github.com/enyo/dropzone/pull/226\n        let img = document.createElement(\"img\");\n        if (crossOrigin) img.crossOrigin = crossOrigin;\n        // fixOrientation is not needed anymore with browsers handling imageOrientation\n        fixOrientation = getComputedStyle(document.body)[\"imageOrientation\"] == \"from-image\" ? false : fixOrientation;\n        img.onload = ()=>{\n            let loadExif = (callback)=>callback(1)\n            ;\n            if (typeof EXIF !== \"undefined\" && EXIF !== null && fixOrientation) loadExif = (callback)=>EXIF.getData(img, function() {\n                    return callback(EXIF.getTag(this, \"Orientation\"));\n                })\n            ;\n            return loadExif((orientation)=>{\n                file.width = img.width;\n                file.height = img.height;\n                let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);\n                let canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = resizeInfo.trgWidth;\n                canvas.height = resizeInfo.trgHeight;\n                if (orientation > 4) {\n                    canvas.width = resizeInfo.trgHeight;\n                    canvas.height = resizeInfo.trgWidth;\n                }\n                switch(orientation){\n                    case 2:\n                        // horizontal flip\n                        ctx.translate(canvas.width, 0);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 3:\n                        // 180° rotate left\n                        ctx.translate(canvas.width, canvas.height);\n                        ctx.rotate(Math.PI);\n                        break;\n                    case 4:\n                        // vertical flip\n                        ctx.translate(0, canvas.height);\n                        ctx.scale(1, -1);\n                        break;\n                    case 5:\n                        // vertical flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.scale(1, -1);\n                        break;\n                    case 6:\n                        // 90° rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(0, -canvas.width);\n                        break;\n                    case 7:\n                        // horizontal flip + 90 rotate right\n                        ctx.rotate(0.5 * Math.PI);\n                        ctx.translate(canvas.height, -canvas.width);\n                        ctx.scale(-1, 1);\n                        break;\n                    case 8:\n                        // 90° rotate left\n                        ctx.rotate(-0.5 * Math.PI);\n                        ctx.translate(-canvas.height, 0);\n                        break;\n                }\n                // This is a bugfix for iOS' scaling bug.\n                $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                let thumbnail = canvas.toDataURL(\"image/png\");\n                if (callback != null) return callback(thumbnail, canvas);\n            });\n        };\n        if (callback != null) img.onerror = callback;\n        return img.src = file.dataURL;\n    }\n    // Goes through the queue and processes files if there aren't too many already.\n    processQueue() {\n        let { parallelUploads: parallelUploads  } = this.options;\n        let processingLength = this.getUploadingFiles().length;\n        let i = processingLength;\n        // There are already at least as many files uploading than should be\n        if (processingLength >= parallelUploads) return;\n        let queuedFiles = this.getQueuedFiles();\n        if (!(queuedFiles.length > 0)) return;\n        if (this.options.uploadMultiple) // The files should be uploaded in one request\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n        else while(i < parallelUploads){\n            if (!queuedFiles.length) return;\n             // Nothing left to process\n            this.processFile(queuedFiles.shift());\n            i++;\n        }\n    }\n    // Wrapper for `processFiles`\n    processFile(file) {\n        return this.processFiles([\n            file\n        ]);\n    }\n    // Loads the file, then calls finishedLoading()\n    processFiles(files) {\n        for (let file of files){\n            file.processing = true; // Backwards compatibility\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;\n            this.emit(\"processing\", file);\n        }\n        if (this.options.uploadMultiple) this.emit(\"processingmultiple\", files);\n        return this.uploadFiles(files);\n    }\n    _getFilesWithXhr(xhr) {\n        let files;\n        return files = this.files.filter((file)=>file.xhr === xhr\n        ).map((file)=>file\n        );\n    }\n    // Cancels the file upload and sets the status to CANCELED\n    // **if** the file is actually being uploaded.\n    // If it's still in the queue, the file is being removed from it and the status\n    // set to CANCELED.\n    cancelUpload(file) {\n        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {\n            let groupedFiles = this._getFilesWithXhr(file.xhr);\n            for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            if (typeof file.xhr !== \"undefined\") file.xhr.abort();\n            for (let groupedFile1 of groupedFiles)this.emit(\"canceled\", groupedFile1);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", groupedFiles);\n        } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;\n            this.emit(\"canceled\", file);\n            if (this.options.uploadMultiple) this.emit(\"canceledmultiple\", [\n                file\n            ]);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    resolveOption(option, ...args) {\n        if (typeof option === \"function\") return option.apply(this, args);\n        return option;\n    }\n    uploadFile(file) {\n        return this.uploadFiles([\n            file\n        ]);\n    }\n    uploadFiles(files) {\n        this._transformFiles(files, (transformedFiles)=>{\n            if (this.options.chunking) {\n                // Chunking is not allowed to be used with `uploadMultiple` so we know\n                // that there is only __one__file.\n                let transformedFile = transformedFiles[0];\n                files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);\n                files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);\n            }\n            if (files[0].upload.chunked) {\n                // This file should be sent in chunks!\n                // If the chunking option is set, we **know** that there can only be **one** file, since\n                // uploadMultiple is not allowed with this option.\n                let file = files[0];\n                let transformedFile = transformedFiles[0];\n                let startedChunkCount = 0;\n                file.upload.chunks = [];\n                let handleNextChunk = ()=>{\n                    let chunkIndex = 0;\n                    // Find the next item in file.upload.chunks that is not defined yet.\n                    while(file.upload.chunks[chunkIndex] !== undefined)chunkIndex++;\n                    // This means, that all chunks have already been started.\n                    if (chunkIndex >= file.upload.totalChunkCount) return;\n                    startedChunkCount++;\n                    let start = chunkIndex * this.options.chunkSize;\n                    let end = Math.min(start + this.options.chunkSize, transformedFile.size);\n                    let dataBlock = {\n                        name: this._getParamName(0),\n                        data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),\n                        filename: file.upload.filename,\n                        chunkIndex: chunkIndex\n                    };\n                    file.upload.chunks[chunkIndex] = {\n                        file: file,\n                        index: chunkIndex,\n                        dataBlock: dataBlock,\n                        status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,\n                        progress: 0,\n                        retries: 0\n                    };\n                    this._uploadData(files, [\n                        dataBlock\n                    ]);\n                };\n                file.upload.finishedChunkUpload = (chunk, response)=>{\n                    let allFinished = true;\n                    chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n                    // Clear the data from the chunk\n                    chunk.dataBlock = null;\n                    chunk.response = chunk.xhr.responseText;\n                    chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();\n                    // Leaving this reference to xhr will cause memory leaks.\n                    chunk.xhr = null;\n                    for(let i = 0; i < file.upload.totalChunkCount; i++){\n                        if (file.upload.chunks[i] === undefined) return handleNextChunk();\n                        if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;\n                    }\n                    if (allFinished) this.options.chunksUploaded(file, ()=>{\n                        this._finished(files, response, null);\n                    });\n                };\n                if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();\n                else handleNextChunk();\n            } else {\n                let dataBlocks = [];\n                for(let i = 0; i < files.length; i++)dataBlocks[i] = {\n                    name: this._getParamName(i),\n                    data: transformedFiles[i],\n                    filename: files[i].upload.filename\n                };\n                this._uploadData(files, dataBlocks);\n            }\n        });\n    }\n    /// Returns the right chunk for given file and xhr\n    _getChunk(file, xhr) {\n        for(let i = 0; i < file.upload.totalChunkCount; i++){\n            if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];\n        }\n    }\n    // This function actually uploads the file(s) to the server.\n    //\n    //  If dataBlocks contains the actual data to upload (meaning, that this could\n    // either be transformed files, or individual chunks for chunked upload) then\n    // they will be used for the actual data to upload.\n    _uploadData(files, dataBlocks) {\n        let xhr = new XMLHttpRequest();\n        // Put the xhr object in the file objects to be able to reference it later.\n        for (let file of files)file.xhr = xhr;\n        if (files[0].upload.chunked) // Put the xhr object in the right chunk object, so it can be associated\n        // later, and found with _getChunk.\n        files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n        let method = this.resolveOption(this.options.method, files, dataBlocks);\n        let url = this.resolveOption(this.options.url, files, dataBlocks);\n        xhr.open(method, url, true);\n        // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n        let timeout = this.resolveOption(this.options.timeout, files);\n        if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);\n        // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n        xhr.withCredentials = !!this.options.withCredentials;\n        xhr.onload = (e)=>{\n            this._finishedUploading(files, xhr, e);\n        };\n        xhr.ontimeout = ()=>{\n            this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1000} seconds`);\n        };\n        xhr.onerror = ()=>{\n            this._handleUploadError(files, xhr);\n        };\n        // Some browsers do not have the .upload property\n        let progressObj = xhr.upload != null ? xhr.upload : xhr;\n        progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e)\n        ;\n        let headers = this.options.defaultHeaders ? {\n            Accept: \"application/json\",\n            \"Cache-Control\": \"no-cache\",\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        } : {\n        };\n        if (this.options.binaryBody) headers[\"Content-Type\"] = files[0].type;\n        if (this.options.headers) $ewBKy$justextend(headers, this.options.headers);\n        for(let headerName in headers){\n            let headerValue = headers[headerName];\n            if (headerValue) xhr.setRequestHeader(headerName, headerValue);\n        }\n        if (this.options.binaryBody) {\n            // Since the file is going to be sent as binary body, it doesn't make\n            // any sense to generate `FormData` for it.\n            for (let file of files)this.emit(\"sending\", file, xhr);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr);\n            this.submitRequest(xhr, null, files);\n        } else {\n            let formData = new FormData();\n            // Adding all @options parameters\n            if (this.options.params) {\n                let additionalParams = this.options.params;\n                if (typeof additionalParams === \"function\") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n                for(let key in additionalParams){\n                    let value = additionalParams[key];\n                    if (Array.isArray(value)) // The additional parameter contains an array,\n                    // so lets iterate over it to attach each value\n                    // individually.\n                    for(let i = 0; i < value.length; i++)formData.append(key, value[i]);\n                    else formData.append(key, value);\n                }\n            }\n            // Let the user add additional data if necessary\n            for (let file of files)this.emit(\"sending\", file, xhr, formData);\n            if (this.options.uploadMultiple) this.emit(\"sendingmultiple\", files, xhr, formData);\n            this._addFormElementData(formData);\n            // Finally add the files\n            // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n            for(let i = 0; i < dataBlocks.length; i++){\n                let dataBlock = dataBlocks[i];\n                formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n            }\n            this.submitRequest(xhr, formData, files);\n        }\n    }\n    // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n    _transformFiles(files, done) {\n        let transformedFiles = [];\n        // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n        let doneCounter = 0;\n        for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{\n            transformedFiles[i] = transformedFile;\n            if (++doneCounter === files.length) done(transformedFiles);\n        });\n    }\n    // Takes care of adding other input elements of the form to the AJAX request\n    _addFormElementData(formData) {\n        // Take care of other input elements\n        if (this.element.tagName === \"FORM\") for (let input of this.element.querySelectorAll(\"input, textarea, select, button\")){\n            let inputName = input.getAttribute(\"name\");\n            let inputType = input.getAttribute(\"type\");\n            if (inputType) inputType = inputType.toLowerCase();\n            // If the input doesn't have a name, we can't use it.\n            if (typeof inputName === \"undefined\" || inputName === null) continue;\n            if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                // Possibly multiple values\n                for (let option of input.options)if (option.selected) formData.append(inputName, option.value);\n            } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) formData.append(inputName, input.value);\n        }\n    }\n    // Invoked when there is new progress information about given files.\n    // If e is not provided, it is assumed that the upload is finished.\n    _updateFilesUploadProgress(files, xhr, e) {\n        if (!files[0].upload.chunked) // Handle file uploads without chunking\n        for (let file of files){\n            if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;\n            if (e) {\n                file.upload.progress = 100 * e.loaded / e.total;\n                file.upload.total = e.total;\n                file.upload.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                file.upload.progress = 100;\n                file.upload.bytesSent = file.upload.total;\n            }\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n        else {\n            // Handle chunked file uploads\n            // Chunked upload is not compatible with uploading multiple files in one\n            // request, so we know there's only one file.\n            let file = files[0];\n            // Since this is a chunked upload, we need to update the appropriate chunk\n            // progress.\n            let chunk = this._getChunk(file, xhr);\n            if (e) {\n                chunk.progress = 100 * e.loaded / e.total;\n                chunk.total = e.total;\n                chunk.bytesSent = e.loaded;\n            } else {\n                // No event, so we're at 100%\n                chunk.progress = 100;\n                chunk.bytesSent = chunk.total;\n            }\n            // Now tally the *file* upload progress from its individual chunks\n            file.upload.progress = 0;\n            file.upload.total = 0;\n            file.upload.bytesSent = 0;\n            for(let i = 0; i < file.upload.totalChunkCount; i++)if (file.upload.chunks[i] && typeof file.upload.chunks[i].progress !== \"undefined\") {\n                file.upload.progress += file.upload.chunks[i].progress;\n                file.upload.total += file.upload.chunks[i].total;\n                file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n            }\n            // Since the process is a percentage, we need to divide by the amount of\n            // chunks we've used.\n            file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n            this.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n        }\n    }\n    _finishedUploading(files, xhr, e) {\n        let response;\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (xhr.readyState !== 4) return;\n        if (xhr.responseType !== \"arraybuffer\" && xhr.responseType !== \"blob\") {\n            response = xhr.responseText;\n            if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) try {\n                response = JSON.parse(response);\n            } catch (error) {\n                e = error;\n                response = \"Invalid JSON response from server.\";\n            }\n        }\n        this._updateFilesUploadProgress(files, xhr);\n        if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);\n        else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);\n        else this._finished(files, response, e);\n    }\n    _handleUploadError(files, xhr, response) {\n        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;\n        if (files[0].upload.chunked && this.options.retryChunks) {\n            let chunk = this._getChunk(files[0], xhr);\n            if ((chunk.retries++) < this.options.retryChunksLimit) {\n                this._uploadData(files, [\n                    chunk.dataBlock\n                ]);\n                return;\n            } else console.warn(\"Retried this chunk too often. Giving up.\");\n        }\n        this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n    }\n    submitRequest(xhr, formData, files) {\n        if (xhr.readyState != 1) {\n            console.warn(\"Cannot send this request because the XMLHttpRequest.readyState is not OPENED.\");\n            return;\n        }\n        if (this.options.binaryBody) {\n            if (files[0].upload.chunked) {\n                const chunk = this._getChunk(files[0], xhr);\n                xhr.send(chunk.dataBlock.data);\n            } else xhr.send(files[0]);\n        } else xhr.send(formData);\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _finished(files, responseText, e) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;\n            this.emit(\"success\", file, responseText, e);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"successmultiple\", files, responseText, e);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n    _errorProcessing(files, message, xhr) {\n        for (let file of files){\n            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;\n            this.emit(\"error\", file, message, xhr);\n            this.emit(\"complete\", file);\n        }\n        if (this.options.uploadMultiple) {\n            this.emit(\"errormultiple\", files, message, xhr);\n            this.emit(\"completemultiple\", files);\n        }\n        if (this.options.autoProcessQueue) return this.processQueue();\n    }\n    static uuidv4() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            let r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n            return v.toString(16);\n        });\n    }\n    constructor(el, options){\n        super();\n        let fallback, left;\n        this.element = el;\n        this.clickableElements = [];\n        this.listeners = [];\n        this.files = []; // All files\n        if (typeof this.element === \"string\") this.element = document.querySelector(this.element);\n        // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n        if (!this.element || this.element.nodeType == null) throw new Error(\"Invalid dropzone element.\");\n        if (this.element.dropzone) throw new Error(\"Dropzone already attached.\");\n        // Now add this dropzone to the instances.\n        $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);\n        // Put the dropzone inside the element itself.\n        this.element.dropzone = this;\n        let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {\n        };\n        this.options = $ewBKy$justextend(true, {\n        }, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {\n        });\n        this.options.previewTemplate = this.options.previewTemplate.replace(/\\n*/g, \"\");\n        // If the browser failed, just call the fallback and leave\n        if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);\n        // @options.url = @element.getAttribute \"action\" unless @options.url?\n        if (this.options.url == null) this.options.url = this.element.getAttribute(\"action\");\n        if (!this.options.url) throw new Error(\"No URL provided.\");\n        if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n        if (this.options.uploadMultiple && this.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n        if (this.options.binaryBody && this.options.uploadMultiple) throw new Error(\"You cannot set both: binaryBody and uploadMultiple.\");\n        // Backwards compatibility\n        if (this.options.acceptedMimeTypes) {\n            this.options.acceptedFiles = this.options.acceptedMimeTypes;\n            delete this.options.acceptedMimeTypes;\n        }\n        // Backwards compatibility\n        if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file)\n        ;\n        if (typeof this.options.method === \"string\") this.options.method = this.options.method.toUpperCase();\n        if ((fallback = this.getExistingFallback()) && fallback.parentNode) // Remove the fallback\n        fallback.parentNode.removeChild(fallback);\n        // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n        if (this.options.previewsContainer !== false) {\n            if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, \"previewsContainer\");\n            else this.previewsContainer = this.element;\n        }\n        if (this.options.clickable) {\n            if (this.options.clickable === true) this.clickableElements = [\n                this.element\n            ];\n            else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, \"clickable\");\n        }\n        this.init();\n    }\n}\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();\n// This is a map of options for your different dropzones. Add configurations\n// to this object for your different dropzone elemens.\n//\n// Example:\n//\n//     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n//\n// And in html:\n//\n//     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {\n};\n// Returns the options for an element or undefined if none available.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {\n    // Get the `Dropzone.options.elementId` for this element if it exists\n    if (element.getAttribute(\"id\")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute(\"id\"))];\n    else return undefined;\n};\n// Holds a list of all dropzone instances\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];\n// Returns the dropzone for given element if any\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if ((element != null ? element.dropzone : undefined) == null) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    return element.dropzone;\n};\n// Looks for all .dropzone elements and creates a dropzone for them\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {\n    let dropzones;\n    if (document.querySelectorAll) dropzones = document.querySelectorAll(\".dropzone\");\n    else {\n        dropzones = [];\n        // IE :(\n        let checkElements = (elements)=>(()=>{\n                let result = [];\n                for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));\n                else result.push(undefined);\n                return result;\n            })()\n        ;\n        checkElements(document.getElementsByTagName(\"div\"));\n        checkElements(document.getElementsByTagName(\"form\"));\n    }\n    return (()=>{\n        let result = [];\n        for (let dropzone of dropzones)// Create a dropzone unless auto discover has been disabled for specific element\n        if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));\n        else result.push(undefined);\n        return result;\n    })();\n};\n// Some browsers support drag and drog functionality, but not correctly.\n//\n// So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.\n// But what to do when browsers *theoretically* support an API, but crash\n// when using it.\n//\n// This is a list of regular expressions tested against navigator.userAgent\n//\n// ** It should only be used on browser that *do* support the API, but\n// incorrectly **\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [\n    // The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n    /opera.*(Macintosh|Windows Phone).*version\\/12/i, \n];\n// Checks if the browser is supported\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {\n    let capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n        if (!(\"classList\" in document.createElement(\"a\"))) capableBrowser = false;\n        else {\n            if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== undefined) // Since this has been renamed, this makes sure we don't break older\n            // configuration.\n            $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;\n            // The browser supports the API, but may be blocked.\n            for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {\n                capableBrowser = false;\n                continue;\n            }\n        }\n    } else capableBrowser = false;\n    return capableBrowser;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    let byteString = atob(dataURI.split(\",\")[1]);\n    // separate out the mime component\n    let mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n    // write the bytes of the string to an ArrayBuffer\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);\n    // write the ArrayBuffer to a blob\n    return new Blob([\n        ab\n    ], {\n        type: mimeString\n    });\n};\n// Returns an array without the rejected item\nconst $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem\n    ).map((item)=>item\n    )\n;\n// abc-def_ghi -> abcDefGhi\nconst $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\\-_](\\w)/g, (match)=>match.charAt(1).toUpperCase()\n    )\n;\n// Creates an element from string\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {\n    let div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n};\n// Tests if given element is inside (or simply is) the container\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {\n    if (element === container) return true;\n     // Coffeescript doesn't support do/while loops\n    while(element = element.parentNode){\n        if (element === container) return true;\n    }\n    return false;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {\n    let element;\n    if (typeof el === \"string\") element = document.querySelector(el);\n    else if (el.nodeType != null) element = el;\n    if (element == null) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector or a plain HTML element.`);\n    return element;\n};\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {\n    let el, elements;\n    if (els instanceof Array) {\n        elements = [];\n        try {\n            for (el of els)elements.push(this.getElement(el, name));\n        } catch (e) {\n            elements = null;\n        }\n    } else if (typeof els === \"string\") {\n        elements = [];\n        for (el of document.querySelectorAll(els))elements.push(el);\n    } else if (els.nodeType != null) elements = [\n        els\n    ];\n    if (elements == null || !elements.length) throw new Error(`Invalid \\`${name}\\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);\n    return elements;\n};\n// Asks the user the question and calls accepted or rejected accordingly\n//\n// The default implementation just uses `window.confirm` and then calls the\n// appropriate callback.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) return accepted();\n    else if (rejected != null) return rejected();\n};\n// Validates the mime type like this:\n//\n// https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {\n    if (!acceptedFiles) return true;\n     // If there are no accepted mime types, it's OK\n    acceptedFiles = acceptedFiles.split(\",\");\n    let mimeType = file.type;\n    let baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (let validType of acceptedFiles){\n        validType = validType.trim();\n        if (validType.charAt(0) === \".\") {\n            if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;\n        } else if (/\\/\\*$/.test(validType)) {\n            // This is something like a image/* mime type\n            if (baseMimeType === validType.replace(/\\/.*$/, \"\")) return true;\n        } else {\n            if (mimeType === validType) return true;\n        }\n    }\n    return false;\n};\n// Augment jQuery\nif (typeof jQuery !== \"undefined\" && jQuery !== null) jQuery.fn.dropzone = function(options) {\n    return this.each(function() {\n        return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);\n    });\n};\n// Dropzone file status codes\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = \"added\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = \"queued\";\n// For backwards compatibility. Now, if a file is accepted, it's either queued\n// or uploading.\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = \"uploading\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING; // alias\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = \"canceled\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = \"error\";\n$3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = \"success\";\n/*\n\n Bugfix for iOS 6 and 7\n Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n */ // Detecting vertical squash in loaded image.\n// Fixes a bug which squash image vertically while drawing into canvas for some images.\n// This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\nlet $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {\n    let iw = img.naturalWidth;\n    let ih = img.naturalHeight;\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    let { data: data  } = ctx.getImageData(1, 0, 1, ih);\n    // search image edge pixel position in case it is squashed vertically.\n    let sy = 0;\n    let ey = ih;\n    let py = ih;\n    while(py > sy){\n        let alpha = data[(py - 1) * 4 + 3];\n        if (alpha === 0) ey = py;\n        else sy = py;\n        py = ey + sy >> 1;\n    }\n    let ratio = py / ih;\n    if (ratio === 0) return 1;\n    else return ratio;\n};\n// A replacement for context.drawImage\n// (args are for source and destination).\nvar $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n};\n// Based on MinifyJpeg\n// Source: http://www.perry.cz/files/ExifRestorer.js\n// http://elicon.blog57.fc2.com/blog-entry-206.html\nclass $3ed269f2f0fb224b$var$ExifRestore {\n    static initClass() {\n        this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    }\n    static encode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        while(true){\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n            enc1 = chr1 >> 2;\n            enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n            enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) enc3 = enc4 = 64;\n            else if (isNaN(chr3)) enc4 = 64;\n            output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return output;\n    }\n    static restore(origFileBase64, resizedFileBase64) {\n        if (!origFileBase64.match(\"data:image/jpeg;base64,\")) return resizedFileBase64;\n        let rawImage = this.decode64(origFileBase64.replace(\"data:image/jpeg;base64,\", \"\"));\n        let segments = this.slice2Segments(rawImage);\n        let image = this.exifManipulation(resizedFileBase64, segments);\n        return `data:image/jpeg;base64,${this.encode64(image)}`;\n    }\n    static exifManipulation(resizedFileBase64, segments) {\n        let exifArray = this.getExifArray(segments);\n        let newImageArray = this.insertExif(resizedFileBase64, exifArray);\n        let aBuffer = new Uint8Array(newImageArray);\n        return aBuffer;\n    }\n    static getExifArray(segments) {\n        let seg = undefined;\n        let x = 0;\n        while(x < segments.length){\n            seg = segments[x];\n            if (seg[0] === 255 & seg[1] === 225) return seg;\n            x++;\n        }\n        return [];\n    }\n    static insertExif(resizedFileBase64, exifArray) {\n        let imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\");\n        let buf = this.decode64(imageData);\n        let separatePoint = buf.indexOf(255, 3);\n        let mae = buf.slice(0, separatePoint);\n        let ato = buf.slice(separatePoint);\n        let array = mae;\n        array = array.concat(exifArray);\n        array = array.concat(ato);\n        return array;\n    }\n    static slice2Segments(rawImageArray) {\n        let head = 0;\n        let segments = [];\n        while(true){\n            var length;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;\n            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;\n            else {\n                length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n                let endPoint = head + length + 2;\n                let seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length) break;\n        }\n        return segments;\n    }\n    static decode64(input) {\n        let output = \"\";\n        let chr1 = undefined;\n        let chr2 = undefined;\n        let chr3 = \"\";\n        let enc1 = undefined;\n        let enc2 = undefined;\n        let enc3 = undefined;\n        let enc4 = \"\";\n        let i = 0;\n        let buf = [];\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        let base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\");\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while(true){\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n            chr1 = enc1 << 2 | enc2 >> 4;\n            chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n            chr3 = (enc3 & 3) << 6 | enc4;\n            buf.push(chr1);\n            if (enc3 !== 64) buf.push(chr2);\n            if (enc4 !== 64) buf.push(chr3);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n            if (!(i < input.length)) break;\n        }\n        return buf;\n    }\n}\n$3ed269f2f0fb224b$var$ExifRestore.initClass();\n/*\n * contentloaded.js\n *\n * Author: Diego Perini (diego.perini at gmail.com)\n * Summary: cross-browser wrapper for DOMContentLoaded\n * Updated: 20101020\n * License: MIT\n * Version: 1.2\n *\n * URL:\n * http://javascript.nwbox.com/ContentLoaded/\n * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n */ // @win window reference\n// @fn function reference\nlet $3ed269f2f0fb224b$var$contentLoaded = function(win, fn) {\n    let done = false;\n    let top = true;\n    let doc = win.document;\n    let root = doc.documentElement;\n    let add = doc.addEventListener ? \"addEventListener\" : \"attachEvent\";\n    let rem = doc.addEventListener ? \"removeEventListener\" : \"detachEvent\";\n    let pre = doc.addEventListener ? \"\" : \"on\";\n    var init = function(e) {\n        if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") return;\n        (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n        if (!done && (done = true)) return fn.call(win, e.type || e);\n    };\n    var poll = function() {\n        try {\n            root.doScroll(\"left\");\n        } catch (e) {\n            setTimeout(poll, 50);\n            return;\n        }\n        return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n        if (doc.createEventObject && root.doScroll) {\n            try {\n                top = !win.frameElement;\n            } catch (error) {\n            }\n            if (top) poll();\n        }\n        doc[add](pre + \"DOMContentLoaded\", init, false);\n        doc[add](pre + \"readystatechange\", init, false);\n        return win[add](pre + \"load\", init, false);\n    }\n};\nfunction $3ed269f2f0fb224b$var$__guard__(value, transform) {\n    return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n}\nfunction $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {\n    if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") return transform(obj, methodName);\n    else return undefined;\n}\n\n\nexport {$3ed269f2f0fb224b$export$2e2bcd8739ae039 as default, $3ed269f2f0fb224b$export$2e2bcd8739ae039 as Dropzone};\n//# sourceMappingURL=dropzone.mjs.map\n","import { Dropzone } from \"dropzone\";\r\n\r\nif (document.querySelector('div.form__dropzone')) {\r\n  const dropzone = new Dropzone(\"div.form__dropzone\", {\r\n    url: \"/file/post\",\r\n    createImageThumbnails: false,\r\n    dictDefaultMessage: 'Here'\r\n  });\r\n}\r\n"]}